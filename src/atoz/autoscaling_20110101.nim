
import
  json, options, hashes, uri, strutils, tables, rest, os, uri, strutils, md5, base64,
  httpcore, sigv4

## auto-generated via openapi macro
## title: Auto Scaling
## version: 2011-01-01
## termsOfService: https://aws.amazon.com/service-terms/
## license:
##     name: Apache 2.0 License
##     url: http://www.apache.org/licenses/
## 
## <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch or terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks. Use this service with AWS Auto Scaling, Amazon CloudWatch, and Elastic Load Balancing.</p> <p>For more information, including information about granting IAM users required permissions for Amazon EC2 Auto Scaling actions, see the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html">Amazon EC2 Auto Scaling User Guide</a>.</p>
## 
## Amazon Web Services documentation
## https://docs.aws.amazon.com/autoscaling/
type
  Scheme {.pure.} = enum
    Https = "https", Http = "http", Wss = "wss", Ws = "ws"
  ValidatorSignature = proc (path: JsonNode = nil; query: JsonNode = nil;
                          header: JsonNode = nil; formData: JsonNode = nil;
                          body: JsonNode = nil; _: string = ""): JsonNode
  OpenApiRestCall = ref object of RestCall
    validator*: ValidatorSignature
    route*: string
    base*: string
    host*: string
    schemes*: set[Scheme]
    makeUrl*: proc (protocol: Scheme; host: string; base: string; route: string;
                  path: JsonNode; query: JsonNode): Uri

  OpenApiRestCall_21625435 = ref object of OpenApiRestCall
proc hash(scheme: Scheme): Hash {.used.} =
  result = hash(ord(scheme))

proc clone[T: OpenApiRestCall_21625435](t: T): T {.used.} =
  result = T(name: t.name, meth: t.meth, host: t.host, base: t.base, route: t.route,
           schemes: t.schemes, validator: t.validator, url: t.url)

proc pickScheme(t: OpenApiRestCall_21625435): Option[Scheme] {.used.} =
  ## select a supported scheme from a set of candidates
  for scheme in Scheme.low .. Scheme.high:
    if scheme notin t.schemes:
      continue
    if scheme in [Scheme.Https, Scheme.Wss]:
      when defined(ssl):
        return some(scheme)
      else:
        continue
    return some(scheme)

proc validateParameter(js: JsonNode; kind: JsonNodeKind; required: bool;
                      default: JsonNode = nil): JsonNode =
  ## ensure an input is of the correct json type and yield
  ## a suitable default value when appropriate
  if js == nil:
    if required:
      if default != nil:
        return validateParameter(default, kind, required = required)
  result = js
  if result == nil:
    assert not required, $kind & " expected; received nil"
    if required:
      result = newJNull()
  else:
    assert js.kind == kind, $kind & " expected; received " & $js.kind

type
  KeyVal {.used.} = tuple[key: string, val: string]
  PathTokenKind = enum
    ConstantSegment, VariableSegment
  PathToken = tuple[kind: PathTokenKind, value: string]
proc queryString(query: JsonNode): string {.used.} =
  var qs: seq[KeyVal]
  if query == nil:
    return ""
  for k, v in query.pairs:
    qs.add (key: k, val: v.getStr)
  result = encodeQuery(qs)

proc hydratePath(input: JsonNode; segments: seq[PathToken]): Option[string] {.used.} =
  ## reconstitute a path with constants and variable values taken from json
  var head: string
  if segments.len == 0:
    return some("")
  head = segments[0].value
  case segments[0].kind
  of ConstantSegment:
    discard
  of VariableSegment:
    if head notin input:
      return
    let js = input[head]
    case js.kind
    of JInt, JFloat, JNull, JBool:
      head = $js
    of JString:
      head = js.getStr
    else:
      return
  var remainder = input.hydratePath(segments[1 ..^ 1])
  if remainder.isNone:
    return
  result = some(head & remainder.get)

const
  awsServers = {Scheme.Http: {"ap-northeast-1": "autoscaling.ap-northeast-1.amazonaws.com", "ap-southeast-1": "autoscaling.ap-southeast-1.amazonaws.com",
                           "us-west-2": "autoscaling.us-west-2.amazonaws.com",
                           "eu-west-2": "autoscaling.eu-west-2.amazonaws.com", "ap-northeast-3": "autoscaling.ap-northeast-3.amazonaws.com", "eu-central-1": "autoscaling.eu-central-1.amazonaws.com",
                           "us-east-2": "autoscaling.us-east-2.amazonaws.com",
                           "us-east-1": "autoscaling.us-east-1.amazonaws.com", "cn-northwest-1": "autoscaling.cn-northwest-1.amazonaws.com.cn", "ap-south-1": "autoscaling.ap-south-1.amazonaws.com", "eu-north-1": "autoscaling.eu-north-1.amazonaws.com", "ap-northeast-2": "autoscaling.ap-northeast-2.amazonaws.com",
                           "us-west-1": "autoscaling.us-west-1.amazonaws.com", "us-gov-east-1": "autoscaling.us-gov-east-1.amazonaws.com",
                           "eu-west-3": "autoscaling.eu-west-3.amazonaws.com", "cn-north-1": "autoscaling.cn-north-1.amazonaws.com.cn",
                           "sa-east-1": "autoscaling.sa-east-1.amazonaws.com",
                           "eu-west-1": "autoscaling.eu-west-1.amazonaws.com", "us-gov-west-1": "autoscaling.us-gov-west-1.amazonaws.com", "ap-southeast-2": "autoscaling.ap-southeast-2.amazonaws.com", "ca-central-1": "autoscaling.ca-central-1.amazonaws.com"}.toTable, Scheme.Https: {
      "ap-northeast-1": "autoscaling.ap-northeast-1.amazonaws.com",
      "ap-southeast-1": "autoscaling.ap-southeast-1.amazonaws.com",
      "us-west-2": "autoscaling.us-west-2.amazonaws.com",
      "eu-west-2": "autoscaling.eu-west-2.amazonaws.com",
      "ap-northeast-3": "autoscaling.ap-northeast-3.amazonaws.com",
      "eu-central-1": "autoscaling.eu-central-1.amazonaws.com",
      "us-east-2": "autoscaling.us-east-2.amazonaws.com",
      "us-east-1": "autoscaling.us-east-1.amazonaws.com",
      "cn-northwest-1": "autoscaling.cn-northwest-1.amazonaws.com.cn",
      "ap-south-1": "autoscaling.ap-south-1.amazonaws.com",
      "eu-north-1": "autoscaling.eu-north-1.amazonaws.com",
      "ap-northeast-2": "autoscaling.ap-northeast-2.amazonaws.com",
      "us-west-1": "autoscaling.us-west-1.amazonaws.com",
      "us-gov-east-1": "autoscaling.us-gov-east-1.amazonaws.com",
      "eu-west-3": "autoscaling.eu-west-3.amazonaws.com",
      "cn-north-1": "autoscaling.cn-north-1.amazonaws.com.cn",
      "sa-east-1": "autoscaling.sa-east-1.amazonaws.com",
      "eu-west-1": "autoscaling.eu-west-1.amazonaws.com",
      "us-gov-west-1": "autoscaling.us-gov-west-1.amazonaws.com",
      "ap-southeast-2": "autoscaling.ap-southeast-2.amazonaws.com",
      "ca-central-1": "autoscaling.ca-central-1.amazonaws.com"}.toTable}.toTable
const
  awsServiceName = "autoscaling"
method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode; body: string = ""): Recallable {.
    base.}
type
  Call_PostAttachInstances_21626035 = ref object of OpenApiRestCall_21625435
proc url_PostAttachInstances_21626037(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostAttachInstances_21626036(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626038 = query.getOrDefault("Action")
  valid_21626038 = validateParameter(valid_21626038, JString, required = true,
                                   default = newJString("AttachInstances"))
  if valid_21626038 != nil:
    section.add "Action", valid_21626038
  var valid_21626039 = query.getOrDefault("Version")
  valid_21626039 = validateParameter(valid_21626039, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626039 != nil:
    section.add "Version", valid_21626039
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626040 = header.getOrDefault("X-Amz-Date")
  valid_21626040 = validateParameter(valid_21626040, JString, required = false,
                                   default = nil)
  if valid_21626040 != nil:
    section.add "X-Amz-Date", valid_21626040
  var valid_21626041 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626041 = validateParameter(valid_21626041, JString, required = false,
                                   default = nil)
  if valid_21626041 != nil:
    section.add "X-Amz-Security-Token", valid_21626041
  var valid_21626042 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626042 = validateParameter(valid_21626042, JString, required = false,
                                   default = nil)
  if valid_21626042 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626042
  var valid_21626043 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626043 = validateParameter(valid_21626043, JString, required = false,
                                   default = nil)
  if valid_21626043 != nil:
    section.add "X-Amz-Algorithm", valid_21626043
  var valid_21626044 = header.getOrDefault("X-Amz-Signature")
  valid_21626044 = validateParameter(valid_21626044, JString, required = false,
                                   default = nil)
  if valid_21626044 != nil:
    section.add "X-Amz-Signature", valid_21626044
  var valid_21626045 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626045 = validateParameter(valid_21626045, JString, required = false,
                                   default = nil)
  if valid_21626045 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626045
  var valid_21626046 = header.getOrDefault("X-Amz-Credential")
  valid_21626046 = validateParameter(valid_21626046, JString, required = false,
                                   default = nil)
  if valid_21626046 != nil:
    section.add "X-Amz-Credential", valid_21626046
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626047 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626047 = validateParameter(valid_21626047, JString, required = true,
                                   default = nil)
  if valid_21626047 != nil:
    section.add "AutoScalingGroupName", valid_21626047
  var valid_21626048 = formData.getOrDefault("InstanceIds")
  valid_21626048 = validateParameter(valid_21626048, JArray, required = false,
                                   default = nil)
  if valid_21626048 != nil:
    section.add "InstanceIds", valid_21626048
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626049: Call_PostAttachInstances_21626035; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626049.validator(path, query, header, formData, body, _)
  let scheme = call_21626049.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626049.makeUrl(scheme.get, call_21626049.host, call_21626049.base,
                               call_21626049.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626049, uri, valid, _)

proc call*(call_21626050: Call_PostAttachInstances_21626035;
          AutoScalingGroupName: string; InstanceIds: JsonNode = nil;
          Action: string = "AttachInstances"; Version: string = "2011-01-01"): Recallable =
  ## postAttachInstances
  ## <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626051 = newJObject()
  var formData_21626052 = newJObject()
  add(formData_21626052, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if InstanceIds != nil:
    formData_21626052.add "InstanceIds", InstanceIds
  add(query_21626051, "Action", newJString(Action))
  add(query_21626051, "Version", newJString(Version))
  result = call_21626050.call(nil, query_21626051, nil, formData_21626052, nil)

var postAttachInstances* = Call_PostAttachInstances_21626035(
    name: "postAttachInstances", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=AttachInstances",
    validator: validate_PostAttachInstances_21626036, base: "/",
    makeUrl: url_PostAttachInstances_21626037,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetAttachInstances_21625779 = ref object of OpenApiRestCall_21625435
proc url_GetAttachInstances_21625781(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetAttachInstances_21625780(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21625882 = query.getOrDefault("AutoScalingGroupName")
  valid_21625882 = validateParameter(valid_21625882, JString, required = true,
                                   default = nil)
  if valid_21625882 != nil:
    section.add "AutoScalingGroupName", valid_21625882
  var valid_21625897 = query.getOrDefault("Action")
  valid_21625897 = validateParameter(valid_21625897, JString, required = true,
                                   default = newJString("AttachInstances"))
  if valid_21625897 != nil:
    section.add "Action", valid_21625897
  var valid_21625898 = query.getOrDefault("InstanceIds")
  valid_21625898 = validateParameter(valid_21625898, JArray, required = false,
                                   default = nil)
  if valid_21625898 != nil:
    section.add "InstanceIds", valid_21625898
  var valid_21625899 = query.getOrDefault("Version")
  valid_21625899 = validateParameter(valid_21625899, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21625899 != nil:
    section.add "Version", valid_21625899
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21625900 = header.getOrDefault("X-Amz-Date")
  valid_21625900 = validateParameter(valid_21625900, JString, required = false,
                                   default = nil)
  if valid_21625900 != nil:
    section.add "X-Amz-Date", valid_21625900
  var valid_21625901 = header.getOrDefault("X-Amz-Security-Token")
  valid_21625901 = validateParameter(valid_21625901, JString, required = false,
                                   default = nil)
  if valid_21625901 != nil:
    section.add "X-Amz-Security-Token", valid_21625901
  var valid_21625902 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21625902 = validateParameter(valid_21625902, JString, required = false,
                                   default = nil)
  if valid_21625902 != nil:
    section.add "X-Amz-Content-Sha256", valid_21625902
  var valid_21625903 = header.getOrDefault("X-Amz-Algorithm")
  valid_21625903 = validateParameter(valid_21625903, JString, required = false,
                                   default = nil)
  if valid_21625903 != nil:
    section.add "X-Amz-Algorithm", valid_21625903
  var valid_21625904 = header.getOrDefault("X-Amz-Signature")
  valid_21625904 = validateParameter(valid_21625904, JString, required = false,
                                   default = nil)
  if valid_21625904 != nil:
    section.add "X-Amz-Signature", valid_21625904
  var valid_21625905 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21625905 = validateParameter(valid_21625905, JString, required = false,
                                   default = nil)
  if valid_21625905 != nil:
    section.add "X-Amz-SignedHeaders", valid_21625905
  var valid_21625906 = header.getOrDefault("X-Amz-Credential")
  valid_21625906 = validateParameter(valid_21625906, JString, required = false,
                                   default = nil)
  if valid_21625906 != nil:
    section.add "X-Amz-Credential", valid_21625906
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21625931: Call_GetAttachInstances_21625779; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21625931.validator(path, query, header, formData, body, _)
  let scheme = call_21625931.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21625931.makeUrl(scheme.get, call_21625931.host, call_21625931.base,
                               call_21625931.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21625931, uri, valid, _)

proc call*(call_21625994: Call_GetAttachInstances_21625779;
          AutoScalingGroupName: string; Action: string = "AttachInstances";
          InstanceIds: JsonNode = nil; Version: string = "2011-01-01"): Recallable =
  ## getAttachInstances
  ## <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: string (required)
  var query_21625996 = newJObject()
  add(query_21625996, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21625996, "Action", newJString(Action))
  if InstanceIds != nil:
    query_21625996.add "InstanceIds", InstanceIds
  add(query_21625996, "Version", newJString(Version))
  result = call_21625994.call(nil, query_21625996, nil, nil, nil)

var getAttachInstances* = Call_GetAttachInstances_21625779(
    name: "getAttachInstances", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=AttachInstances",
    validator: validate_GetAttachInstances_21625780, base: "/",
    makeUrl: url_GetAttachInstances_21625781, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostAttachLoadBalancerTargetGroups_21626070 = ref object of OpenApiRestCall_21625435
proc url_PostAttachLoadBalancerTargetGroups_21626072(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostAttachLoadBalancerTargetGroups_21626071(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, use <a>DescribeLoadBalancerTargetGroups</a>. To detach the target group from the Auto Scaling group, use <a>DetachLoadBalancerTargetGroups</a>.</p> <p>With Application Load Balancers and Network Load Balancers, instances are registered as targets with a target group. With Classic Load Balancers, instances are registered with the load balancer. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626073 = query.getOrDefault("Action")
  valid_21626073 = validateParameter(valid_21626073, JString, required = true, default = newJString(
      "AttachLoadBalancerTargetGroups"))
  if valid_21626073 != nil:
    section.add "Action", valid_21626073
  var valid_21626074 = query.getOrDefault("Version")
  valid_21626074 = validateParameter(valid_21626074, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626074 != nil:
    section.add "Version", valid_21626074
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626075 = header.getOrDefault("X-Amz-Date")
  valid_21626075 = validateParameter(valid_21626075, JString, required = false,
                                   default = nil)
  if valid_21626075 != nil:
    section.add "X-Amz-Date", valid_21626075
  var valid_21626076 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626076 = validateParameter(valid_21626076, JString, required = false,
                                   default = nil)
  if valid_21626076 != nil:
    section.add "X-Amz-Security-Token", valid_21626076
  var valid_21626077 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626077 = validateParameter(valid_21626077, JString, required = false,
                                   default = nil)
  if valid_21626077 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626077
  var valid_21626078 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626078 = validateParameter(valid_21626078, JString, required = false,
                                   default = nil)
  if valid_21626078 != nil:
    section.add "X-Amz-Algorithm", valid_21626078
  var valid_21626079 = header.getOrDefault("X-Amz-Signature")
  valid_21626079 = validateParameter(valid_21626079, JString, required = false,
                                   default = nil)
  if valid_21626079 != nil:
    section.add "X-Amz-Signature", valid_21626079
  var valid_21626080 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626080 = validateParameter(valid_21626080, JString, required = false,
                                   default = nil)
  if valid_21626080 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626080
  var valid_21626081 = header.getOrDefault("X-Amz-Credential")
  valid_21626081 = validateParameter(valid_21626081, JString, required = false,
                                   default = nil)
  if valid_21626081 != nil:
    section.add "X-Amz-Credential", valid_21626081
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626082 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626082 = validateParameter(valid_21626082, JString, required = true,
                                   default = nil)
  if valid_21626082 != nil:
    section.add "AutoScalingGroupName", valid_21626082
  var valid_21626083 = formData.getOrDefault("TargetGroupARNs")
  valid_21626083 = validateParameter(valid_21626083, JArray, required = true,
                                   default = nil)
  if valid_21626083 != nil:
    section.add "TargetGroupARNs", valid_21626083
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626084: Call_PostAttachLoadBalancerTargetGroups_21626070;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, use <a>DescribeLoadBalancerTargetGroups</a>. To detach the target group from the Auto Scaling group, use <a>DetachLoadBalancerTargetGroups</a>.</p> <p>With Application Load Balancers and Network Load Balancers, instances are registered as targets with a target group. With Classic Load Balancers, instances are registered with the load balancer. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626084.validator(path, query, header, formData, body, _)
  let scheme = call_21626084.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626084.makeUrl(scheme.get, call_21626084.host, call_21626084.base,
                               call_21626084.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626084, uri, valid, _)

proc call*(call_21626085: Call_PostAttachLoadBalancerTargetGroups_21626070;
          AutoScalingGroupName: string; TargetGroupARNs: JsonNode;
          Action: string = "AttachLoadBalancerTargetGroups";
          Version: string = "2011-01-01"): Recallable =
  ## postAttachLoadBalancerTargetGroups
  ## <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, use <a>DescribeLoadBalancerTargetGroups</a>. To detach the target group from the Auto Scaling group, use <a>DetachLoadBalancerTargetGroups</a>.</p> <p>With Application Load Balancers and Network Load Balancers, instances are registered as targets with a target group. With Classic Load Balancers, instances are registered with the load balancer. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626086 = newJObject()
  var formData_21626087 = newJObject()
  add(formData_21626087, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if TargetGroupARNs != nil:
    formData_21626087.add "TargetGroupARNs", TargetGroupARNs
  add(query_21626086, "Action", newJString(Action))
  add(query_21626086, "Version", newJString(Version))
  result = call_21626085.call(nil, query_21626086, nil, formData_21626087, nil)

var postAttachLoadBalancerTargetGroups* = Call_PostAttachLoadBalancerTargetGroups_21626070(
    name: "postAttachLoadBalancerTargetGroups", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=AttachLoadBalancerTargetGroups",
    validator: validate_PostAttachLoadBalancerTargetGroups_21626071, base: "/",
    makeUrl: url_PostAttachLoadBalancerTargetGroups_21626072,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetAttachLoadBalancerTargetGroups_21626053 = ref object of OpenApiRestCall_21625435
proc url_GetAttachLoadBalancerTargetGroups_21626055(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetAttachLoadBalancerTargetGroups_21626054(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, use <a>DescribeLoadBalancerTargetGroups</a>. To detach the target group from the Auto Scaling group, use <a>DetachLoadBalancerTargetGroups</a>.</p> <p>With Application Load Balancers and Network Load Balancers, instances are registered as targets with a target group. With Classic Load Balancers, instances are registered with the load balancer. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626056 = query.getOrDefault("AutoScalingGroupName")
  valid_21626056 = validateParameter(valid_21626056, JString, required = true,
                                   default = nil)
  if valid_21626056 != nil:
    section.add "AutoScalingGroupName", valid_21626056
  var valid_21626057 = query.getOrDefault("Action")
  valid_21626057 = validateParameter(valid_21626057, JString, required = true, default = newJString(
      "AttachLoadBalancerTargetGroups"))
  if valid_21626057 != nil:
    section.add "Action", valid_21626057
  var valid_21626058 = query.getOrDefault("TargetGroupARNs")
  valid_21626058 = validateParameter(valid_21626058, JArray, required = true,
                                   default = nil)
  if valid_21626058 != nil:
    section.add "TargetGroupARNs", valid_21626058
  var valid_21626059 = query.getOrDefault("Version")
  valid_21626059 = validateParameter(valid_21626059, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626059 != nil:
    section.add "Version", valid_21626059
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626060 = header.getOrDefault("X-Amz-Date")
  valid_21626060 = validateParameter(valid_21626060, JString, required = false,
                                   default = nil)
  if valid_21626060 != nil:
    section.add "X-Amz-Date", valid_21626060
  var valid_21626061 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626061 = validateParameter(valid_21626061, JString, required = false,
                                   default = nil)
  if valid_21626061 != nil:
    section.add "X-Amz-Security-Token", valid_21626061
  var valid_21626062 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626062 = validateParameter(valid_21626062, JString, required = false,
                                   default = nil)
  if valid_21626062 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626062
  var valid_21626063 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626063 = validateParameter(valid_21626063, JString, required = false,
                                   default = nil)
  if valid_21626063 != nil:
    section.add "X-Amz-Algorithm", valid_21626063
  var valid_21626064 = header.getOrDefault("X-Amz-Signature")
  valid_21626064 = validateParameter(valid_21626064, JString, required = false,
                                   default = nil)
  if valid_21626064 != nil:
    section.add "X-Amz-Signature", valid_21626064
  var valid_21626065 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626065 = validateParameter(valid_21626065, JString, required = false,
                                   default = nil)
  if valid_21626065 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626065
  var valid_21626066 = header.getOrDefault("X-Amz-Credential")
  valid_21626066 = validateParameter(valid_21626066, JString, required = false,
                                   default = nil)
  if valid_21626066 != nil:
    section.add "X-Amz-Credential", valid_21626066
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626067: Call_GetAttachLoadBalancerTargetGroups_21626053;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, use <a>DescribeLoadBalancerTargetGroups</a>. To detach the target group from the Auto Scaling group, use <a>DetachLoadBalancerTargetGroups</a>.</p> <p>With Application Load Balancers and Network Load Balancers, instances are registered as targets with a target group. With Classic Load Balancers, instances are registered with the load balancer. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626067.validator(path, query, header, formData, body, _)
  let scheme = call_21626067.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626067.makeUrl(scheme.get, call_21626067.host, call_21626067.base,
                               call_21626067.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626067, uri, valid, _)

proc call*(call_21626068: Call_GetAttachLoadBalancerTargetGroups_21626053;
          AutoScalingGroupName: string; TargetGroupARNs: JsonNode;
          Action: string = "AttachLoadBalancerTargetGroups";
          Version: string = "2011-01-01"): Recallable =
  ## getAttachLoadBalancerTargetGroups
  ## <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, use <a>DescribeLoadBalancerTargetGroups</a>. To detach the target group from the Auto Scaling group, use <a>DetachLoadBalancerTargetGroups</a>.</p> <p>With Application Load Balancers and Network Load Balancers, instances are registered as targets with a target group. With Classic Load Balancers, instances are registered with the load balancer. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  ##   Version: string (required)
  var query_21626069 = newJObject()
  add(query_21626069, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626069, "Action", newJString(Action))
  if TargetGroupARNs != nil:
    query_21626069.add "TargetGroupARNs", TargetGroupARNs
  add(query_21626069, "Version", newJString(Version))
  result = call_21626068.call(nil, query_21626069, nil, nil, nil)

var getAttachLoadBalancerTargetGroups* = Call_GetAttachLoadBalancerTargetGroups_21626053(
    name: "getAttachLoadBalancerTargetGroups", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=AttachLoadBalancerTargetGroups",
    validator: validate_GetAttachLoadBalancerTargetGroups_21626054, base: "/",
    makeUrl: url_GetAttachLoadBalancerTargetGroups_21626055,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostAttachLoadBalancers_21626105 = ref object of OpenApiRestCall_21625435
proc url_PostAttachLoadBalancers_21626107(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostAttachLoadBalancers_21626106(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group.</p> <p>To attach an Application Load Balancer or a Network Load Balancer instead, see <a>AttachLoadBalancerTargetGroups</a>.</p> <p>To describe the load balancers for an Auto Scaling group, use <a>DescribeLoadBalancers</a>. To detach the load balancer from the Auto Scaling group, use <a>DetachLoadBalancers</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626108 = query.getOrDefault("Action")
  valid_21626108 = validateParameter(valid_21626108, JString, required = true,
                                   default = newJString("AttachLoadBalancers"))
  if valid_21626108 != nil:
    section.add "Action", valid_21626108
  var valid_21626109 = query.getOrDefault("Version")
  valid_21626109 = validateParameter(valid_21626109, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626109 != nil:
    section.add "Version", valid_21626109
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626110 = header.getOrDefault("X-Amz-Date")
  valid_21626110 = validateParameter(valid_21626110, JString, required = false,
                                   default = nil)
  if valid_21626110 != nil:
    section.add "X-Amz-Date", valid_21626110
  var valid_21626111 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626111 = validateParameter(valid_21626111, JString, required = false,
                                   default = nil)
  if valid_21626111 != nil:
    section.add "X-Amz-Security-Token", valid_21626111
  var valid_21626112 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626112 = validateParameter(valid_21626112, JString, required = false,
                                   default = nil)
  if valid_21626112 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626112
  var valid_21626113 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626113 = validateParameter(valid_21626113, JString, required = false,
                                   default = nil)
  if valid_21626113 != nil:
    section.add "X-Amz-Algorithm", valid_21626113
  var valid_21626114 = header.getOrDefault("X-Amz-Signature")
  valid_21626114 = validateParameter(valid_21626114, JString, required = false,
                                   default = nil)
  if valid_21626114 != nil:
    section.add "X-Amz-Signature", valid_21626114
  var valid_21626115 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626115 = validateParameter(valid_21626115, JString, required = false,
                                   default = nil)
  if valid_21626115 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626115
  var valid_21626116 = header.getOrDefault("X-Amz-Credential")
  valid_21626116 = validateParameter(valid_21626116, JString, required = false,
                                   default = nil)
  if valid_21626116 != nil:
    section.add "X-Amz-Credential", valid_21626116
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626117 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626117 = validateParameter(valid_21626117, JString, required = true,
                                   default = nil)
  if valid_21626117 != nil:
    section.add "AutoScalingGroupName", valid_21626117
  var valid_21626118 = formData.getOrDefault("LoadBalancerNames")
  valid_21626118 = validateParameter(valid_21626118, JArray, required = true,
                                   default = nil)
  if valid_21626118 != nil:
    section.add "LoadBalancerNames", valid_21626118
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626119: Call_PostAttachLoadBalancers_21626105;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group.</p> <p>To attach an Application Load Balancer or a Network Load Balancer instead, see <a>AttachLoadBalancerTargetGroups</a>.</p> <p>To describe the load balancers for an Auto Scaling group, use <a>DescribeLoadBalancers</a>. To detach the load balancer from the Auto Scaling group, use <a>DetachLoadBalancers</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626119.validator(path, query, header, formData, body, _)
  let scheme = call_21626119.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626119.makeUrl(scheme.get, call_21626119.host, call_21626119.base,
                               call_21626119.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626119, uri, valid, _)

proc call*(call_21626120: Call_PostAttachLoadBalancers_21626105;
          AutoScalingGroupName: string; LoadBalancerNames: JsonNode;
          Action: string = "AttachLoadBalancers"; Version: string = "2011-01-01"): Recallable =
  ## postAttachLoadBalancers
  ## <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group.</p> <p>To attach an Application Load Balancer or a Network Load Balancer instead, see <a>AttachLoadBalancerTargetGroups</a>.</p> <p>To describe the load balancers for an Auto Scaling group, use <a>DescribeLoadBalancers</a>. To detach the load balancer from the Auto Scaling group, use <a>DetachLoadBalancers</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  ##   Version: string (required)
  var query_21626121 = newJObject()
  var formData_21626122 = newJObject()
  add(formData_21626122, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626121, "Action", newJString(Action))
  if LoadBalancerNames != nil:
    formData_21626122.add "LoadBalancerNames", LoadBalancerNames
  add(query_21626121, "Version", newJString(Version))
  result = call_21626120.call(nil, query_21626121, nil, formData_21626122, nil)

var postAttachLoadBalancers* = Call_PostAttachLoadBalancers_21626105(
    name: "postAttachLoadBalancers", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=AttachLoadBalancers",
    validator: validate_PostAttachLoadBalancers_21626106, base: "/",
    makeUrl: url_PostAttachLoadBalancers_21626107,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetAttachLoadBalancers_21626088 = ref object of OpenApiRestCall_21625435
proc url_GetAttachLoadBalancers_21626090(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetAttachLoadBalancers_21626089(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group.</p> <p>To attach an Application Load Balancer or a Network Load Balancer instead, see <a>AttachLoadBalancerTargetGroups</a>.</p> <p>To describe the load balancers for an Auto Scaling group, use <a>DescribeLoadBalancers</a>. To detach the load balancer from the Auto Scaling group, use <a>DetachLoadBalancers</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626091 = query.getOrDefault("AutoScalingGroupName")
  valid_21626091 = validateParameter(valid_21626091, JString, required = true,
                                   default = nil)
  if valid_21626091 != nil:
    section.add "AutoScalingGroupName", valid_21626091
  var valid_21626092 = query.getOrDefault("Action")
  valid_21626092 = validateParameter(valid_21626092, JString, required = true,
                                   default = newJString("AttachLoadBalancers"))
  if valid_21626092 != nil:
    section.add "Action", valid_21626092
  var valid_21626093 = query.getOrDefault("LoadBalancerNames")
  valid_21626093 = validateParameter(valid_21626093, JArray, required = true,
                                   default = nil)
  if valid_21626093 != nil:
    section.add "LoadBalancerNames", valid_21626093
  var valid_21626094 = query.getOrDefault("Version")
  valid_21626094 = validateParameter(valid_21626094, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626094 != nil:
    section.add "Version", valid_21626094
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626095 = header.getOrDefault("X-Amz-Date")
  valid_21626095 = validateParameter(valid_21626095, JString, required = false,
                                   default = nil)
  if valid_21626095 != nil:
    section.add "X-Amz-Date", valid_21626095
  var valid_21626096 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626096 = validateParameter(valid_21626096, JString, required = false,
                                   default = nil)
  if valid_21626096 != nil:
    section.add "X-Amz-Security-Token", valid_21626096
  var valid_21626097 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626097 = validateParameter(valid_21626097, JString, required = false,
                                   default = nil)
  if valid_21626097 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626097
  var valid_21626098 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626098 = validateParameter(valid_21626098, JString, required = false,
                                   default = nil)
  if valid_21626098 != nil:
    section.add "X-Amz-Algorithm", valid_21626098
  var valid_21626099 = header.getOrDefault("X-Amz-Signature")
  valid_21626099 = validateParameter(valid_21626099, JString, required = false,
                                   default = nil)
  if valid_21626099 != nil:
    section.add "X-Amz-Signature", valid_21626099
  var valid_21626100 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626100 = validateParameter(valid_21626100, JString, required = false,
                                   default = nil)
  if valid_21626100 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626100
  var valid_21626101 = header.getOrDefault("X-Amz-Credential")
  valid_21626101 = validateParameter(valid_21626101, JString, required = false,
                                   default = nil)
  if valid_21626101 != nil:
    section.add "X-Amz-Credential", valid_21626101
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626102: Call_GetAttachLoadBalancers_21626088;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group.</p> <p>To attach an Application Load Balancer or a Network Load Balancer instead, see <a>AttachLoadBalancerTargetGroups</a>.</p> <p>To describe the load balancers for an Auto Scaling group, use <a>DescribeLoadBalancers</a>. To detach the load balancer from the Auto Scaling group, use <a>DetachLoadBalancers</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626102.validator(path, query, header, formData, body, _)
  let scheme = call_21626102.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626102.makeUrl(scheme.get, call_21626102.host, call_21626102.base,
                               call_21626102.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626102, uri, valid, _)

proc call*(call_21626103: Call_GetAttachLoadBalancers_21626088;
          AutoScalingGroupName: string; LoadBalancerNames: JsonNode;
          Action: string = "AttachLoadBalancers"; Version: string = "2011-01-01"): Recallable =
  ## getAttachLoadBalancers
  ## <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group.</p> <p>To attach an Application Load Balancer or a Network Load Balancer instead, see <a>AttachLoadBalancerTargetGroups</a>.</p> <p>To describe the load balancers for an Auto Scaling group, use <a>DescribeLoadBalancers</a>. To detach the load balancer from the Auto Scaling group, use <a>DetachLoadBalancers</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  ##   Version: string (required)
  var query_21626104 = newJObject()
  add(query_21626104, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626104, "Action", newJString(Action))
  if LoadBalancerNames != nil:
    query_21626104.add "LoadBalancerNames", LoadBalancerNames
  add(query_21626104, "Version", newJString(Version))
  result = call_21626103.call(nil, query_21626104, nil, nil, nil)

var getAttachLoadBalancers* = Call_GetAttachLoadBalancers_21626088(
    name: "getAttachLoadBalancers", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=AttachLoadBalancers",
    validator: validate_GetAttachLoadBalancers_21626089, base: "/",
    makeUrl: url_GetAttachLoadBalancers_21626090,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostBatchDeleteScheduledAction_21626140 = ref object of OpenApiRestCall_21625435
proc url_PostBatchDeleteScheduledAction_21626142(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostBatchDeleteScheduledAction_21626141(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Deletes one or more scheduled actions for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626143 = query.getOrDefault("Action")
  valid_21626143 = validateParameter(valid_21626143, JString, required = true, default = newJString(
      "BatchDeleteScheduledAction"))
  if valid_21626143 != nil:
    section.add "Action", valid_21626143
  var valid_21626144 = query.getOrDefault("Version")
  valid_21626144 = validateParameter(valid_21626144, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626144 != nil:
    section.add "Version", valid_21626144
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626145 = header.getOrDefault("X-Amz-Date")
  valid_21626145 = validateParameter(valid_21626145, JString, required = false,
                                   default = nil)
  if valid_21626145 != nil:
    section.add "X-Amz-Date", valid_21626145
  var valid_21626146 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626146 = validateParameter(valid_21626146, JString, required = false,
                                   default = nil)
  if valid_21626146 != nil:
    section.add "X-Amz-Security-Token", valid_21626146
  var valid_21626147 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626147 = validateParameter(valid_21626147, JString, required = false,
                                   default = nil)
  if valid_21626147 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626147
  var valid_21626148 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626148 = validateParameter(valid_21626148, JString, required = false,
                                   default = nil)
  if valid_21626148 != nil:
    section.add "X-Amz-Algorithm", valid_21626148
  var valid_21626149 = header.getOrDefault("X-Amz-Signature")
  valid_21626149 = validateParameter(valid_21626149, JString, required = false,
                                   default = nil)
  if valid_21626149 != nil:
    section.add "X-Amz-Signature", valid_21626149
  var valid_21626150 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626150 = validateParameter(valid_21626150, JString, required = false,
                                   default = nil)
  if valid_21626150 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626150
  var valid_21626151 = header.getOrDefault("X-Amz-Credential")
  valid_21626151 = validateParameter(valid_21626151, JString, required = false,
                                   default = nil)
  if valid_21626151 != nil:
    section.add "X-Amz-Credential", valid_21626151
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScheduledActionNames: JArray (required)
  ##                       : The names of the scheduled actions to delete. The maximum number allowed is 50. 
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626152 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626152 = validateParameter(valid_21626152, JString, required = true,
                                   default = nil)
  if valid_21626152 != nil:
    section.add "AutoScalingGroupName", valid_21626152
  var valid_21626153 = formData.getOrDefault("ScheduledActionNames")
  valid_21626153 = validateParameter(valid_21626153, JArray, required = true,
                                   default = nil)
  if valid_21626153 != nil:
    section.add "ScheduledActionNames", valid_21626153
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626154: Call_PostBatchDeleteScheduledAction_21626140;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes one or more scheduled actions for the specified Auto Scaling group.
  ## 
  let valid = call_21626154.validator(path, query, header, formData, body, _)
  let scheme = call_21626154.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626154.makeUrl(scheme.get, call_21626154.host, call_21626154.base,
                               call_21626154.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626154, uri, valid, _)

proc call*(call_21626155: Call_PostBatchDeleteScheduledAction_21626140;
          AutoScalingGroupName: string; ScheduledActionNames: JsonNode;
          Action: string = "BatchDeleteScheduledAction";
          Version: string = "2011-01-01"): Recallable =
  ## postBatchDeleteScheduledAction
  ## Deletes one or more scheduled actions for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   ScheduledActionNames: JArray (required)
  ##                       : The names of the scheduled actions to delete. The maximum number allowed is 50. 
  var query_21626156 = newJObject()
  var formData_21626157 = newJObject()
  add(formData_21626157, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626156, "Action", newJString(Action))
  add(query_21626156, "Version", newJString(Version))
  if ScheduledActionNames != nil:
    formData_21626157.add "ScheduledActionNames", ScheduledActionNames
  result = call_21626155.call(nil, query_21626156, nil, formData_21626157, nil)

var postBatchDeleteScheduledAction* = Call_PostBatchDeleteScheduledAction_21626140(
    name: "postBatchDeleteScheduledAction", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=BatchDeleteScheduledAction",
    validator: validate_PostBatchDeleteScheduledAction_21626141, base: "/",
    makeUrl: url_PostBatchDeleteScheduledAction_21626142,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetBatchDeleteScheduledAction_21626123 = ref object of OpenApiRestCall_21625435
proc url_GetBatchDeleteScheduledAction_21626125(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetBatchDeleteScheduledAction_21626124(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Deletes one or more scheduled actions for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   ScheduledActionNames: JArray (required)
  ##                       : The names of the scheduled actions to delete. The maximum number allowed is 50. 
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626126 = query.getOrDefault("AutoScalingGroupName")
  valid_21626126 = validateParameter(valid_21626126, JString, required = true,
                                   default = nil)
  if valid_21626126 != nil:
    section.add "AutoScalingGroupName", valid_21626126
  var valid_21626127 = query.getOrDefault("Action")
  valid_21626127 = validateParameter(valid_21626127, JString, required = true, default = newJString(
      "BatchDeleteScheduledAction"))
  if valid_21626127 != nil:
    section.add "Action", valid_21626127
  var valid_21626128 = query.getOrDefault("ScheduledActionNames")
  valid_21626128 = validateParameter(valid_21626128, JArray, required = true,
                                   default = nil)
  if valid_21626128 != nil:
    section.add "ScheduledActionNames", valid_21626128
  var valid_21626129 = query.getOrDefault("Version")
  valid_21626129 = validateParameter(valid_21626129, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626129 != nil:
    section.add "Version", valid_21626129
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626130 = header.getOrDefault("X-Amz-Date")
  valid_21626130 = validateParameter(valid_21626130, JString, required = false,
                                   default = nil)
  if valid_21626130 != nil:
    section.add "X-Amz-Date", valid_21626130
  var valid_21626131 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626131 = validateParameter(valid_21626131, JString, required = false,
                                   default = nil)
  if valid_21626131 != nil:
    section.add "X-Amz-Security-Token", valid_21626131
  var valid_21626132 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626132 = validateParameter(valid_21626132, JString, required = false,
                                   default = nil)
  if valid_21626132 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626132
  var valid_21626133 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626133 = validateParameter(valid_21626133, JString, required = false,
                                   default = nil)
  if valid_21626133 != nil:
    section.add "X-Amz-Algorithm", valid_21626133
  var valid_21626134 = header.getOrDefault("X-Amz-Signature")
  valid_21626134 = validateParameter(valid_21626134, JString, required = false,
                                   default = nil)
  if valid_21626134 != nil:
    section.add "X-Amz-Signature", valid_21626134
  var valid_21626135 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626135 = validateParameter(valid_21626135, JString, required = false,
                                   default = nil)
  if valid_21626135 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626135
  var valid_21626136 = header.getOrDefault("X-Amz-Credential")
  valid_21626136 = validateParameter(valid_21626136, JString, required = false,
                                   default = nil)
  if valid_21626136 != nil:
    section.add "X-Amz-Credential", valid_21626136
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626137: Call_GetBatchDeleteScheduledAction_21626123;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes one or more scheduled actions for the specified Auto Scaling group.
  ## 
  let valid = call_21626137.validator(path, query, header, formData, body, _)
  let scheme = call_21626137.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626137.makeUrl(scheme.get, call_21626137.host, call_21626137.base,
                               call_21626137.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626137, uri, valid, _)

proc call*(call_21626138: Call_GetBatchDeleteScheduledAction_21626123;
          AutoScalingGroupName: string; ScheduledActionNames: JsonNode;
          Action: string = "BatchDeleteScheduledAction";
          Version: string = "2011-01-01"): Recallable =
  ## getBatchDeleteScheduledAction
  ## Deletes one or more scheduled actions for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   ScheduledActionNames: JArray (required)
  ##                       : The names of the scheduled actions to delete. The maximum number allowed is 50. 
  ##   Version: string (required)
  var query_21626139 = newJObject()
  add(query_21626139, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626139, "Action", newJString(Action))
  if ScheduledActionNames != nil:
    query_21626139.add "ScheduledActionNames", ScheduledActionNames
  add(query_21626139, "Version", newJString(Version))
  result = call_21626138.call(nil, query_21626139, nil, nil, nil)

var getBatchDeleteScheduledAction* = Call_GetBatchDeleteScheduledAction_21626123(
    name: "getBatchDeleteScheduledAction", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=BatchDeleteScheduledAction",
    validator: validate_GetBatchDeleteScheduledAction_21626124, base: "/",
    makeUrl: url_GetBatchDeleteScheduledAction_21626125,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostBatchPutScheduledUpdateGroupAction_21626175 = ref object of OpenApiRestCall_21625435
proc url_PostBatchPutScheduledUpdateGroupAction_21626177(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostBatchPutScheduledUpdateGroupAction_21626176(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Creates or updates one or more scheduled scaling actions for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626178 = query.getOrDefault("Action")
  valid_21626178 = validateParameter(valid_21626178, JString, required = true, default = newJString(
      "BatchPutScheduledUpdateGroupAction"))
  if valid_21626178 != nil:
    section.add "Action", valid_21626178
  var valid_21626179 = query.getOrDefault("Version")
  valid_21626179 = validateParameter(valid_21626179, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626179 != nil:
    section.add "Version", valid_21626179
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626180 = header.getOrDefault("X-Amz-Date")
  valid_21626180 = validateParameter(valid_21626180, JString, required = false,
                                   default = nil)
  if valid_21626180 != nil:
    section.add "X-Amz-Date", valid_21626180
  var valid_21626181 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626181 = validateParameter(valid_21626181, JString, required = false,
                                   default = nil)
  if valid_21626181 != nil:
    section.add "X-Amz-Security-Token", valid_21626181
  var valid_21626182 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626182 = validateParameter(valid_21626182, JString, required = false,
                                   default = nil)
  if valid_21626182 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626182
  var valid_21626183 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626183 = validateParameter(valid_21626183, JString, required = false,
                                   default = nil)
  if valid_21626183 != nil:
    section.add "X-Amz-Algorithm", valid_21626183
  var valid_21626184 = header.getOrDefault("X-Amz-Signature")
  valid_21626184 = validateParameter(valid_21626184, JString, required = false,
                                   default = nil)
  if valid_21626184 != nil:
    section.add "X-Amz-Signature", valid_21626184
  var valid_21626185 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626185 = validateParameter(valid_21626185, JString, required = false,
                                   default = nil)
  if valid_21626185 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626185
  var valid_21626186 = header.getOrDefault("X-Amz-Credential")
  valid_21626186 = validateParameter(valid_21626186, JString, required = false,
                                   default = nil)
  if valid_21626186 != nil:
    section.add "X-Amz-Credential", valid_21626186
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScheduledUpdateGroupActions: JArray (required)
  ##                              : One or more scheduled actions. The maximum number allowed is 50.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626187 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626187 = validateParameter(valid_21626187, JString, required = true,
                                   default = nil)
  if valid_21626187 != nil:
    section.add "AutoScalingGroupName", valid_21626187
  var valid_21626188 = formData.getOrDefault("ScheduledUpdateGroupActions")
  valid_21626188 = validateParameter(valid_21626188, JArray, required = true,
                                   default = nil)
  if valid_21626188 != nil:
    section.add "ScheduledUpdateGroupActions", valid_21626188
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626189: Call_PostBatchPutScheduledUpdateGroupAction_21626175;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates or updates one or more scheduled scaling actions for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.
  ## 
  let valid = call_21626189.validator(path, query, header, formData, body, _)
  let scheme = call_21626189.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626189.makeUrl(scheme.get, call_21626189.host, call_21626189.base,
                               call_21626189.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626189, uri, valid, _)

proc call*(call_21626190: Call_PostBatchPutScheduledUpdateGroupAction_21626175;
          AutoScalingGroupName: string; ScheduledUpdateGroupActions: JsonNode;
          Action: string = "BatchPutScheduledUpdateGroupAction";
          Version: string = "2011-01-01"): Recallable =
  ## postBatchPutScheduledUpdateGroupAction
  ## Creates or updates one or more scheduled scaling actions for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScheduledUpdateGroupActions: JArray (required)
  ##                              : One or more scheduled actions. The maximum number allowed is 50.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626191 = newJObject()
  var formData_21626192 = newJObject()
  add(formData_21626192, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if ScheduledUpdateGroupActions != nil:
    formData_21626192.add "ScheduledUpdateGroupActions",
                         ScheduledUpdateGroupActions
  add(query_21626191, "Action", newJString(Action))
  add(query_21626191, "Version", newJString(Version))
  result = call_21626190.call(nil, query_21626191, nil, formData_21626192, nil)

var postBatchPutScheduledUpdateGroupAction* = Call_PostBatchPutScheduledUpdateGroupAction_21626175(
    name: "postBatchPutScheduledUpdateGroupAction", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=BatchPutScheduledUpdateGroupAction",
    validator: validate_PostBatchPutScheduledUpdateGroupAction_21626176,
    base: "/", makeUrl: url_PostBatchPutScheduledUpdateGroupAction_21626177,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetBatchPutScheduledUpdateGroupAction_21626158 = ref object of OpenApiRestCall_21625435
proc url_GetBatchPutScheduledUpdateGroupAction_21626160(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetBatchPutScheduledUpdateGroupAction_21626159(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Creates or updates one or more scheduled scaling actions for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   ScheduledUpdateGroupActions: JArray (required)
  ##                              : One or more scheduled actions. The maximum number allowed is 50.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626161 = query.getOrDefault("AutoScalingGroupName")
  valid_21626161 = validateParameter(valid_21626161, JString, required = true,
                                   default = nil)
  if valid_21626161 != nil:
    section.add "AutoScalingGroupName", valid_21626161
  var valid_21626162 = query.getOrDefault("Action")
  valid_21626162 = validateParameter(valid_21626162, JString, required = true, default = newJString(
      "BatchPutScheduledUpdateGroupAction"))
  if valid_21626162 != nil:
    section.add "Action", valid_21626162
  var valid_21626163 = query.getOrDefault("ScheduledUpdateGroupActions")
  valid_21626163 = validateParameter(valid_21626163, JArray, required = true,
                                   default = nil)
  if valid_21626163 != nil:
    section.add "ScheduledUpdateGroupActions", valid_21626163
  var valid_21626164 = query.getOrDefault("Version")
  valid_21626164 = validateParameter(valid_21626164, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626164 != nil:
    section.add "Version", valid_21626164
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626165 = header.getOrDefault("X-Amz-Date")
  valid_21626165 = validateParameter(valid_21626165, JString, required = false,
                                   default = nil)
  if valid_21626165 != nil:
    section.add "X-Amz-Date", valid_21626165
  var valid_21626166 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626166 = validateParameter(valid_21626166, JString, required = false,
                                   default = nil)
  if valid_21626166 != nil:
    section.add "X-Amz-Security-Token", valid_21626166
  var valid_21626167 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626167 = validateParameter(valid_21626167, JString, required = false,
                                   default = nil)
  if valid_21626167 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626167
  var valid_21626168 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626168 = validateParameter(valid_21626168, JString, required = false,
                                   default = nil)
  if valid_21626168 != nil:
    section.add "X-Amz-Algorithm", valid_21626168
  var valid_21626169 = header.getOrDefault("X-Amz-Signature")
  valid_21626169 = validateParameter(valid_21626169, JString, required = false,
                                   default = nil)
  if valid_21626169 != nil:
    section.add "X-Amz-Signature", valid_21626169
  var valid_21626170 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626170 = validateParameter(valid_21626170, JString, required = false,
                                   default = nil)
  if valid_21626170 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626170
  var valid_21626171 = header.getOrDefault("X-Amz-Credential")
  valid_21626171 = validateParameter(valid_21626171, JString, required = false,
                                   default = nil)
  if valid_21626171 != nil:
    section.add "X-Amz-Credential", valid_21626171
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626172: Call_GetBatchPutScheduledUpdateGroupAction_21626158;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates or updates one or more scheduled scaling actions for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.
  ## 
  let valid = call_21626172.validator(path, query, header, formData, body, _)
  let scheme = call_21626172.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626172.makeUrl(scheme.get, call_21626172.host, call_21626172.base,
                               call_21626172.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626172, uri, valid, _)

proc call*(call_21626173: Call_GetBatchPutScheduledUpdateGroupAction_21626158;
          AutoScalingGroupName: string; ScheduledUpdateGroupActions: JsonNode;
          Action: string = "BatchPutScheduledUpdateGroupAction";
          Version: string = "2011-01-01"): Recallable =
  ## getBatchPutScheduledUpdateGroupAction
  ## Creates or updates one or more scheduled scaling actions for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   ScheduledUpdateGroupActions: JArray (required)
  ##                              : One or more scheduled actions. The maximum number allowed is 50.
  ##   Version: string (required)
  var query_21626174 = newJObject()
  add(query_21626174, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626174, "Action", newJString(Action))
  if ScheduledUpdateGroupActions != nil:
    query_21626174.add "ScheduledUpdateGroupActions", ScheduledUpdateGroupActions
  add(query_21626174, "Version", newJString(Version))
  result = call_21626173.call(nil, query_21626174, nil, nil, nil)

var getBatchPutScheduledUpdateGroupAction* = Call_GetBatchPutScheduledUpdateGroupAction_21626158(
    name: "getBatchPutScheduledUpdateGroupAction", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=BatchPutScheduledUpdateGroupAction",
    validator: validate_GetBatchPutScheduledUpdateGroupAction_21626159, base: "/",
    makeUrl: url_GetBatchPutScheduledUpdateGroupAction_21626160,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCompleteLifecycleAction_21626214 = ref object of OpenApiRestCall_21625435
proc url_PostCompleteLifecycleAction_21626216(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCompleteLifecycleAction_21626215(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626217 = query.getOrDefault("Action")
  valid_21626217 = validateParameter(valid_21626217, JString, required = true, default = newJString(
      "CompleteLifecycleAction"))
  if valid_21626217 != nil:
    section.add "Action", valid_21626217
  var valid_21626218 = query.getOrDefault("Version")
  valid_21626218 = validateParameter(valid_21626218, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626218 != nil:
    section.add "Version", valid_21626218
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626219 = header.getOrDefault("X-Amz-Date")
  valid_21626219 = validateParameter(valid_21626219, JString, required = false,
                                   default = nil)
  if valid_21626219 != nil:
    section.add "X-Amz-Date", valid_21626219
  var valid_21626220 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626220 = validateParameter(valid_21626220, JString, required = false,
                                   default = nil)
  if valid_21626220 != nil:
    section.add "X-Amz-Security-Token", valid_21626220
  var valid_21626221 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626221 = validateParameter(valid_21626221, JString, required = false,
                                   default = nil)
  if valid_21626221 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626221
  var valid_21626222 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626222 = validateParameter(valid_21626222, JString, required = false,
                                   default = nil)
  if valid_21626222 != nil:
    section.add "X-Amz-Algorithm", valid_21626222
  var valid_21626223 = header.getOrDefault("X-Amz-Signature")
  valid_21626223 = validateParameter(valid_21626223, JString, required = false,
                                   default = nil)
  if valid_21626223 != nil:
    section.add "X-Amz-Signature", valid_21626223
  var valid_21626224 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626224 = validateParameter(valid_21626224, JString, required = false,
                                   default = nil)
  if valid_21626224 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626224
  var valid_21626225 = header.getOrDefault("X-Amz-Credential")
  valid_21626225 = validateParameter(valid_21626225, JString, required = false,
                                   default = nil)
  if valid_21626225 != nil:
    section.add "X-Amz-Credential", valid_21626225
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceId: JString
  ##             : The ID of the instance.
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  ##   LifecycleActionResult: JString (required)
  ##                        : The action for the group to take. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>.
  ##   LifecycleActionToken: JString
  ##                       : A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626226 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626226 = validateParameter(valid_21626226, JString, required = true,
                                   default = nil)
  if valid_21626226 != nil:
    section.add "AutoScalingGroupName", valid_21626226
  var valid_21626227 = formData.getOrDefault("InstanceId")
  valid_21626227 = validateParameter(valid_21626227, JString, required = false,
                                   default = nil)
  if valid_21626227 != nil:
    section.add "InstanceId", valid_21626227
  var valid_21626228 = formData.getOrDefault("LifecycleHookName")
  valid_21626228 = validateParameter(valid_21626228, JString, required = true,
                                   default = nil)
  if valid_21626228 != nil:
    section.add "LifecycleHookName", valid_21626228
  var valid_21626229 = formData.getOrDefault("LifecycleActionResult")
  valid_21626229 = validateParameter(valid_21626229, JString, required = true,
                                   default = nil)
  if valid_21626229 != nil:
    section.add "LifecycleActionResult", valid_21626229
  var valid_21626230 = formData.getOrDefault("LifecycleActionToken")
  valid_21626230 = validateParameter(valid_21626230, JString, required = false,
                                   default = nil)
  if valid_21626230 != nil:
    section.add "LifecycleActionToken", valid_21626230
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626231: Call_PostCompleteLifecycleAction_21626214;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626231.validator(path, query, header, formData, body, _)
  let scheme = call_21626231.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626231.makeUrl(scheme.get, call_21626231.host, call_21626231.base,
                               call_21626231.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626231, uri, valid, _)

proc call*(call_21626232: Call_PostCompleteLifecycleAction_21626214;
          AutoScalingGroupName: string; LifecycleHookName: string;
          LifecycleActionResult: string;
          Action: string = "CompleteLifecycleAction"; InstanceId: string = "";
          Version: string = "2011-01-01"; LifecycleActionToken: string = ""): Recallable =
  ## postCompleteLifecycleAction
  ## <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   InstanceId: string
  ##             : The ID of the instance.
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   LifecycleActionResult: string (required)
  ##                        : The action for the group to take. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>.
  ##   Version: string (required)
  ##   LifecycleActionToken: string
  ##                       : A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
  var query_21626233 = newJObject()
  var formData_21626234 = newJObject()
  add(formData_21626234, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626233, "Action", newJString(Action))
  add(formData_21626234, "InstanceId", newJString(InstanceId))
  add(formData_21626234, "LifecycleHookName", newJString(LifecycleHookName))
  add(formData_21626234, "LifecycleActionResult",
      newJString(LifecycleActionResult))
  add(query_21626233, "Version", newJString(Version))
  add(formData_21626234, "LifecycleActionToken", newJString(LifecycleActionToken))
  result = call_21626232.call(nil, query_21626233, nil, formData_21626234, nil)

var postCompleteLifecycleAction* = Call_PostCompleteLifecycleAction_21626214(
    name: "postCompleteLifecycleAction", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=CompleteLifecycleAction",
    validator: validate_PostCompleteLifecycleAction_21626215, base: "/",
    makeUrl: url_PostCompleteLifecycleAction_21626216,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCompleteLifecycleAction_21626193 = ref object of OpenApiRestCall_21625435
proc url_GetCompleteLifecycleAction_21626195(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCompleteLifecycleAction_21626194(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleActionResult: JString (required)
  ##                        : The action for the group to take. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>.
  ##   Action: JString (required)
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  ##   InstanceId: JString
  ##             : The ID of the instance.
  ##   Version: JString (required)
  ##   LifecycleActionToken: JString
  ##                       : A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626196 = query.getOrDefault("AutoScalingGroupName")
  valid_21626196 = validateParameter(valid_21626196, JString, required = true,
                                   default = nil)
  if valid_21626196 != nil:
    section.add "AutoScalingGroupName", valid_21626196
  var valid_21626197 = query.getOrDefault("LifecycleActionResult")
  valid_21626197 = validateParameter(valid_21626197, JString, required = true,
                                   default = nil)
  if valid_21626197 != nil:
    section.add "LifecycleActionResult", valid_21626197
  var valid_21626198 = query.getOrDefault("Action")
  valid_21626198 = validateParameter(valid_21626198, JString, required = true, default = newJString(
      "CompleteLifecycleAction"))
  if valid_21626198 != nil:
    section.add "Action", valid_21626198
  var valid_21626199 = query.getOrDefault("LifecycleHookName")
  valid_21626199 = validateParameter(valid_21626199, JString, required = true,
                                   default = nil)
  if valid_21626199 != nil:
    section.add "LifecycleHookName", valid_21626199
  var valid_21626200 = query.getOrDefault("InstanceId")
  valid_21626200 = validateParameter(valid_21626200, JString, required = false,
                                   default = nil)
  if valid_21626200 != nil:
    section.add "InstanceId", valid_21626200
  var valid_21626201 = query.getOrDefault("Version")
  valid_21626201 = validateParameter(valid_21626201, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626201 != nil:
    section.add "Version", valid_21626201
  var valid_21626202 = query.getOrDefault("LifecycleActionToken")
  valid_21626202 = validateParameter(valid_21626202, JString, required = false,
                                   default = nil)
  if valid_21626202 != nil:
    section.add "LifecycleActionToken", valid_21626202
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626203 = header.getOrDefault("X-Amz-Date")
  valid_21626203 = validateParameter(valid_21626203, JString, required = false,
                                   default = nil)
  if valid_21626203 != nil:
    section.add "X-Amz-Date", valid_21626203
  var valid_21626204 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626204 = validateParameter(valid_21626204, JString, required = false,
                                   default = nil)
  if valid_21626204 != nil:
    section.add "X-Amz-Security-Token", valid_21626204
  var valid_21626205 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626205 = validateParameter(valid_21626205, JString, required = false,
                                   default = nil)
  if valid_21626205 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626205
  var valid_21626206 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626206 = validateParameter(valid_21626206, JString, required = false,
                                   default = nil)
  if valid_21626206 != nil:
    section.add "X-Amz-Algorithm", valid_21626206
  var valid_21626207 = header.getOrDefault("X-Amz-Signature")
  valid_21626207 = validateParameter(valid_21626207, JString, required = false,
                                   default = nil)
  if valid_21626207 != nil:
    section.add "X-Amz-Signature", valid_21626207
  var valid_21626208 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626208 = validateParameter(valid_21626208, JString, required = false,
                                   default = nil)
  if valid_21626208 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626208
  var valid_21626209 = header.getOrDefault("X-Amz-Credential")
  valid_21626209 = validateParameter(valid_21626209, JString, required = false,
                                   default = nil)
  if valid_21626209 != nil:
    section.add "X-Amz-Credential", valid_21626209
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626210: Call_GetCompleteLifecycleAction_21626193;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626210.validator(path, query, header, formData, body, _)
  let scheme = call_21626210.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626210.makeUrl(scheme.get, call_21626210.host, call_21626210.base,
                               call_21626210.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626210, uri, valid, _)

proc call*(call_21626211: Call_GetCompleteLifecycleAction_21626193;
          AutoScalingGroupName: string; LifecycleActionResult: string;
          LifecycleHookName: string; Action: string = "CompleteLifecycleAction";
          InstanceId: string = ""; Version: string = "2011-01-01";
          LifecycleActionToken: string = ""): Recallable =
  ## getCompleteLifecycleAction
  ## <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleActionResult: string (required)
  ##                        : The action for the group to take. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>.
  ##   Action: string (required)
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   InstanceId: string
  ##             : The ID of the instance.
  ##   Version: string (required)
  ##   LifecycleActionToken: string
  ##                       : A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
  var query_21626212 = newJObject()
  add(query_21626212, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626212, "LifecycleActionResult", newJString(LifecycleActionResult))
  add(query_21626212, "Action", newJString(Action))
  add(query_21626212, "LifecycleHookName", newJString(LifecycleHookName))
  add(query_21626212, "InstanceId", newJString(InstanceId))
  add(query_21626212, "Version", newJString(Version))
  add(query_21626212, "LifecycleActionToken", newJString(LifecycleActionToken))
  result = call_21626211.call(nil, query_21626212, nil, nil, nil)

var getCompleteLifecycleAction* = Call_GetCompleteLifecycleAction_21626193(
    name: "getCompleteLifecycleAction", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=CompleteLifecycleAction",
    validator: validate_GetCompleteLifecycleAction_21626194, base: "/",
    makeUrl: url_GetCompleteLifecycleAction_21626195,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateAutoScalingGroup_21626275 = ref object of OpenApiRestCall_21625435
proc url_PostCreateAutoScalingGroup_21626277(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateAutoScalingGroup_21626276(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates an Auto Scaling group with the specified name and attributes.</p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626278 = query.getOrDefault("Action")
  valid_21626278 = validateParameter(valid_21626278, JString, required = true, default = newJString(
      "CreateAutoScalingGroup"))
  if valid_21626278 != nil:
    section.add "Action", valid_21626278
  var valid_21626279 = query.getOrDefault("Version")
  valid_21626279 = validateParameter(valid_21626279, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626279 != nil:
    section.add "Version", valid_21626279
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626280 = header.getOrDefault("X-Amz-Date")
  valid_21626280 = validateParameter(valid_21626280, JString, required = false,
                                   default = nil)
  if valid_21626280 != nil:
    section.add "X-Amz-Date", valid_21626280
  var valid_21626281 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626281 = validateParameter(valid_21626281, JString, required = false,
                                   default = nil)
  if valid_21626281 != nil:
    section.add "X-Amz-Security-Token", valid_21626281
  var valid_21626282 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626282 = validateParameter(valid_21626282, JString, required = false,
                                   default = nil)
  if valid_21626282 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626282
  var valid_21626283 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626283 = validateParameter(valid_21626283, JString, required = false,
                                   default = nil)
  if valid_21626283 != nil:
    section.add "X-Amz-Algorithm", valid_21626283
  var valid_21626284 = header.getOrDefault("X-Amz-Signature")
  valid_21626284 = validateParameter(valid_21626284, JString, required = false,
                                   default = nil)
  if valid_21626284 != nil:
    section.add "X-Amz-Signature", valid_21626284
  var valid_21626285 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626285 = validateParameter(valid_21626285, JString, required = false,
                                   default = nil)
  if valid_21626285 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626285
  var valid_21626286 = header.getOrDefault("X-Amz-Credential")
  valid_21626286 = validateParameter(valid_21626286, JString, required = false,
                                   default = nil)
  if valid_21626286 != nil:
    section.add "X-Amz-Credential", valid_21626286
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group. This name must be unique per Region per account.
  ##   LaunchTemplate.LaunchTemplateId: JString
  ##                                  : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchConfigurationName: JString
  ##                          : <p>The name of the launch configuration.</p> <p>If you do not specify <code>LaunchConfigurationName</code>, you must specify one of the following parameters: <code>InstanceId</code>, <code>LaunchTemplate</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   HealthCheckType: JString
  ##                  : <p>The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. The default value is <code>EC2</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   ServiceLinkedRoleARN: JString
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   DesiredCapacity: JInt
  ##                  : The number of Amazon EC2 instances that the Auto Scaling group attempts to maintain. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
  ##   HealthCheckGracePeriod: JInt
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   VPCZoneIdentifier: JString
  ##                    : <p>A comma-separated list of subnet IDs for your virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into a VPC.</p>
  ##   Tags: JArray
  ##       : <p>One or more tags.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   TargetGroupARNs: JArray
  ##                  : <p>The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling group. Instances are registered as targets in a target group, and traffic is routed to the target group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AvailabilityZones: JArray
  ##                    : <p>One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets for <code>VPCZoneIdentifier</code>.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into EC2-Classic.</p>
  ##   InstanceId: JString
  ##             : <p>The ID of the instance used to create a launch configuration for the group.</p> <p>When you specify an ID of an instance, Amazon EC2 Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, except for the block device mapping.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html">Create an Auto Scaling Group Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   MinSize: JInt (required)
  ##          : The minimum size of the group.
  ##   DefaultCooldown: JInt
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicy.LaunchTemplate: JString
  ##                                      : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   LoadBalancerNames: JArray
  ##                    : <p>A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers and Network Load Balancers, specify a list of target groups using the <code>TargetGroupARNs</code> property instead.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MaxSize: JInt (required)
  ##          : The maximum size of the group.
  ##   MaxInstanceLifetime: JInt
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   MixedInstancesPolicy.InstancesDistribution: JString
  ##                                             : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   PlacementGroup: JString
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   NewInstancesProtectedFromScaleIn: JBool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplate.Version: JString
  ##                         : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   TerminationPolicies: JArray
  ##                      : <p>One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplate.LaunchTemplateName: JString
  ##                                    : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  ##   LifecycleHookSpecificationList: JArray
  ##                                 : One or more lifecycle hooks.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626287 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626287 = validateParameter(valid_21626287, JString, required = true,
                                   default = nil)
  if valid_21626287 != nil:
    section.add "AutoScalingGroupName", valid_21626287
  var valid_21626288 = formData.getOrDefault("LaunchTemplate.LaunchTemplateId")
  valid_21626288 = validateParameter(valid_21626288, JString, required = false,
                                   default = nil)
  if valid_21626288 != nil:
    section.add "LaunchTemplate.LaunchTemplateId", valid_21626288
  var valid_21626289 = formData.getOrDefault("LaunchConfigurationName")
  valid_21626289 = validateParameter(valid_21626289, JString, required = false,
                                   default = nil)
  if valid_21626289 != nil:
    section.add "LaunchConfigurationName", valid_21626289
  var valid_21626290 = formData.getOrDefault("HealthCheckType")
  valid_21626290 = validateParameter(valid_21626290, JString, required = false,
                                   default = nil)
  if valid_21626290 != nil:
    section.add "HealthCheckType", valid_21626290
  var valid_21626291 = formData.getOrDefault("ServiceLinkedRoleARN")
  valid_21626291 = validateParameter(valid_21626291, JString, required = false,
                                   default = nil)
  if valid_21626291 != nil:
    section.add "ServiceLinkedRoleARN", valid_21626291
  var valid_21626292 = formData.getOrDefault("DesiredCapacity")
  valid_21626292 = validateParameter(valid_21626292, JInt, required = false,
                                   default = nil)
  if valid_21626292 != nil:
    section.add "DesiredCapacity", valid_21626292
  var valid_21626293 = formData.getOrDefault("HealthCheckGracePeriod")
  valid_21626293 = validateParameter(valid_21626293, JInt, required = false,
                                   default = nil)
  if valid_21626293 != nil:
    section.add "HealthCheckGracePeriod", valid_21626293
  var valid_21626294 = formData.getOrDefault("VPCZoneIdentifier")
  valid_21626294 = validateParameter(valid_21626294, JString, required = false,
                                   default = nil)
  if valid_21626294 != nil:
    section.add "VPCZoneIdentifier", valid_21626294
  var valid_21626295 = formData.getOrDefault("Tags")
  valid_21626295 = validateParameter(valid_21626295, JArray, required = false,
                                   default = nil)
  if valid_21626295 != nil:
    section.add "Tags", valid_21626295
  var valid_21626296 = formData.getOrDefault("TargetGroupARNs")
  valid_21626296 = validateParameter(valid_21626296, JArray, required = false,
                                   default = nil)
  if valid_21626296 != nil:
    section.add "TargetGroupARNs", valid_21626296
  var valid_21626297 = formData.getOrDefault("AvailabilityZones")
  valid_21626297 = validateParameter(valid_21626297, JArray, required = false,
                                   default = nil)
  if valid_21626297 != nil:
    section.add "AvailabilityZones", valid_21626297
  var valid_21626298 = formData.getOrDefault("InstanceId")
  valid_21626298 = validateParameter(valid_21626298, JString, required = false,
                                   default = nil)
  if valid_21626298 != nil:
    section.add "InstanceId", valid_21626298
  var valid_21626299 = formData.getOrDefault("MinSize")
  valid_21626299 = validateParameter(valid_21626299, JInt, required = true,
                                   default = nil)
  if valid_21626299 != nil:
    section.add "MinSize", valid_21626299
  var valid_21626300 = formData.getOrDefault("DefaultCooldown")
  valid_21626300 = validateParameter(valid_21626300, JInt, required = false,
                                   default = nil)
  if valid_21626300 != nil:
    section.add "DefaultCooldown", valid_21626300
  var valid_21626301 = formData.getOrDefault("MixedInstancesPolicy.LaunchTemplate")
  valid_21626301 = validateParameter(valid_21626301, JString, required = false,
                                   default = nil)
  if valid_21626301 != nil:
    section.add "MixedInstancesPolicy.LaunchTemplate", valid_21626301
  var valid_21626302 = formData.getOrDefault("LoadBalancerNames")
  valid_21626302 = validateParameter(valid_21626302, JArray, required = false,
                                   default = nil)
  if valid_21626302 != nil:
    section.add "LoadBalancerNames", valid_21626302
  var valid_21626303 = formData.getOrDefault("MaxSize")
  valid_21626303 = validateParameter(valid_21626303, JInt, required = true,
                                   default = nil)
  if valid_21626303 != nil:
    section.add "MaxSize", valid_21626303
  var valid_21626304 = formData.getOrDefault("MaxInstanceLifetime")
  valid_21626304 = validateParameter(valid_21626304, JInt, required = false,
                                   default = nil)
  if valid_21626304 != nil:
    section.add "MaxInstanceLifetime", valid_21626304
  var valid_21626305 = formData.getOrDefault(
      "MixedInstancesPolicy.InstancesDistribution")
  valid_21626305 = validateParameter(valid_21626305, JString, required = false,
                                   default = nil)
  if valid_21626305 != nil:
    section.add "MixedInstancesPolicy.InstancesDistribution", valid_21626305
  var valid_21626306 = formData.getOrDefault("PlacementGroup")
  valid_21626306 = validateParameter(valid_21626306, JString, required = false,
                                   default = nil)
  if valid_21626306 != nil:
    section.add "PlacementGroup", valid_21626306
  var valid_21626307 = formData.getOrDefault("NewInstancesProtectedFromScaleIn")
  valid_21626307 = validateParameter(valid_21626307, JBool, required = false,
                                   default = nil)
  if valid_21626307 != nil:
    section.add "NewInstancesProtectedFromScaleIn", valid_21626307
  var valid_21626308 = formData.getOrDefault("LaunchTemplate.Version")
  valid_21626308 = validateParameter(valid_21626308, JString, required = false,
                                   default = nil)
  if valid_21626308 != nil:
    section.add "LaunchTemplate.Version", valid_21626308
  var valid_21626309 = formData.getOrDefault("TerminationPolicies")
  valid_21626309 = validateParameter(valid_21626309, JArray, required = false,
                                   default = nil)
  if valid_21626309 != nil:
    section.add "TerminationPolicies", valid_21626309
  var valid_21626310 = formData.getOrDefault("LaunchTemplate.LaunchTemplateName")
  valid_21626310 = validateParameter(valid_21626310, JString, required = false,
                                   default = nil)
  if valid_21626310 != nil:
    section.add "LaunchTemplate.LaunchTemplateName", valid_21626310
  var valid_21626311 = formData.getOrDefault("LifecycleHookSpecificationList")
  valid_21626311 = validateParameter(valid_21626311, JArray, required = false,
                                   default = nil)
  if valid_21626311 != nil:
    section.add "LifecycleHookSpecificationList", valid_21626311
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626312: Call_PostCreateAutoScalingGroup_21626275;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates an Auto Scaling group with the specified name and attributes.</p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626312.validator(path, query, header, formData, body, _)
  let scheme = call_21626312.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626312.makeUrl(scheme.get, call_21626312.host, call_21626312.base,
                               call_21626312.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626312, uri, valid, _)

proc call*(call_21626313: Call_PostCreateAutoScalingGroup_21626275;
          AutoScalingGroupName: string; MinSize: int; MaxSize: int;
          LaunchTemplateLaunchTemplateId: string = "";
          LaunchConfigurationName: string = ""; HealthCheckType: string = "";
          ServiceLinkedRoleARN: string = ""; DesiredCapacity: int = 0;
          HealthCheckGracePeriod: int = 0; VPCZoneIdentifier: string = "";
          Tags: JsonNode = nil; TargetGroupARNs: JsonNode = nil;
          Action: string = "CreateAutoScalingGroup";
          AvailabilityZones: JsonNode = nil; InstanceId: string = "";
          DefaultCooldown: int = 0; MixedInstancesPolicyLaunchTemplate: string = "";
          LoadBalancerNames: JsonNode = nil; MaxInstanceLifetime: int = 0;
          MixedInstancesPolicyInstancesDistribution: string = "";
          PlacementGroup: string = "";
          NewInstancesProtectedFromScaleIn: bool = false;
          LaunchTemplateVersion: string = ""; TerminationPolicies: JsonNode = nil;
          Version: string = "2011-01-01";
          LaunchTemplateLaunchTemplateName: string = "";
          LifecycleHookSpecificationList: JsonNode = nil): Recallable =
  ## postCreateAutoScalingGroup
  ## <p>Creates an Auto Scaling group with the specified name and attributes.</p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group. This name must be unique per Region per account.
  ##   LaunchTemplateLaunchTemplateId: string
  ##                                 : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchConfigurationName: string
  ##                          : <p>The name of the launch configuration.</p> <p>If you do not specify <code>LaunchConfigurationName</code>, you must specify one of the following parameters: <code>InstanceId</code>, <code>LaunchTemplate</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   HealthCheckType: string
  ##                  : <p>The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. The default value is <code>EC2</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   ServiceLinkedRoleARN: string
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   DesiredCapacity: int
  ##                  : The number of Amazon EC2 instances that the Auto Scaling group attempts to maintain. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
  ##   HealthCheckGracePeriod: int
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   VPCZoneIdentifier: string
  ##                    : <p>A comma-separated list of subnet IDs for your virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into a VPC.</p>
  ##   Tags: JArray
  ##       : <p>One or more tags.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   TargetGroupARNs: JArray
  ##                  : <p>The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling group. Instances are registered as targets in a target group, and traffic is routed to the target group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   AvailabilityZones: JArray
  ##                    : <p>One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets for <code>VPCZoneIdentifier</code>.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into EC2-Classic.</p>
  ##   InstanceId: string
  ##             : <p>The ID of the instance used to create a launch configuration for the group.</p> <p>When you specify an ID of an instance, Amazon EC2 Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, except for the block device mapping.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html">Create an Auto Scaling Group Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   MinSize: int (required)
  ##          : The minimum size of the group.
  ##   DefaultCooldown: int
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicyLaunchTemplate: string
  ##                                     : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   LoadBalancerNames: JArray
  ##                    : <p>A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers and Network Load Balancers, specify a list of target groups using the <code>TargetGroupARNs</code> property instead.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MaxSize: int (required)
  ##          : The maximum size of the group.
  ##   MaxInstanceLifetime: int
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   MixedInstancesPolicyInstancesDistribution: string
  ##                                            : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   PlacementGroup: string
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   NewInstancesProtectedFromScaleIn: bool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplateVersion: string
  ##                        : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   TerminationPolicies: JArray
  ##                      : <p>One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Version: string (required)
  ##   LaunchTemplateLaunchTemplateName: string
  ##                                   : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  ##   LifecycleHookSpecificationList: JArray
  ##                                 : One or more lifecycle hooks.
  var query_21626314 = newJObject()
  var formData_21626315 = newJObject()
  add(formData_21626315, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21626315, "LaunchTemplate.LaunchTemplateId",
      newJString(LaunchTemplateLaunchTemplateId))
  add(formData_21626315, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  add(formData_21626315, "HealthCheckType", newJString(HealthCheckType))
  add(formData_21626315, "ServiceLinkedRoleARN", newJString(ServiceLinkedRoleARN))
  add(formData_21626315, "DesiredCapacity", newJInt(DesiredCapacity))
  add(formData_21626315, "HealthCheckGracePeriod", newJInt(HealthCheckGracePeriod))
  add(formData_21626315, "VPCZoneIdentifier", newJString(VPCZoneIdentifier))
  if Tags != nil:
    formData_21626315.add "Tags", Tags
  if TargetGroupARNs != nil:
    formData_21626315.add "TargetGroupARNs", TargetGroupARNs
  add(query_21626314, "Action", newJString(Action))
  if AvailabilityZones != nil:
    formData_21626315.add "AvailabilityZones", AvailabilityZones
  add(formData_21626315, "InstanceId", newJString(InstanceId))
  add(formData_21626315, "MinSize", newJInt(MinSize))
  add(formData_21626315, "DefaultCooldown", newJInt(DefaultCooldown))
  add(formData_21626315, "MixedInstancesPolicy.LaunchTemplate",
      newJString(MixedInstancesPolicyLaunchTemplate))
  if LoadBalancerNames != nil:
    formData_21626315.add "LoadBalancerNames", LoadBalancerNames
  add(formData_21626315, "MaxSize", newJInt(MaxSize))
  add(formData_21626315, "MaxInstanceLifetime", newJInt(MaxInstanceLifetime))
  add(formData_21626315, "MixedInstancesPolicy.InstancesDistribution",
      newJString(MixedInstancesPolicyInstancesDistribution))
  add(formData_21626315, "PlacementGroup", newJString(PlacementGroup))
  add(formData_21626315, "NewInstancesProtectedFromScaleIn",
      newJBool(NewInstancesProtectedFromScaleIn))
  add(formData_21626315, "LaunchTemplate.Version",
      newJString(LaunchTemplateVersion))
  if TerminationPolicies != nil:
    formData_21626315.add "TerminationPolicies", TerminationPolicies
  add(query_21626314, "Version", newJString(Version))
  add(formData_21626315, "LaunchTemplate.LaunchTemplateName",
      newJString(LaunchTemplateLaunchTemplateName))
  if LifecycleHookSpecificationList != nil:
    formData_21626315.add "LifecycleHookSpecificationList",
                         LifecycleHookSpecificationList
  result = call_21626313.call(nil, query_21626314, nil, formData_21626315, nil)

var postCreateAutoScalingGroup* = Call_PostCreateAutoScalingGroup_21626275(
    name: "postCreateAutoScalingGroup", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=CreateAutoScalingGroup",
    validator: validate_PostCreateAutoScalingGroup_21626276, base: "/",
    makeUrl: url_PostCreateAutoScalingGroup_21626277,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateAutoScalingGroup_21626235 = ref object of OpenApiRestCall_21625435
proc url_GetCreateAutoScalingGroup_21626237(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateAutoScalingGroup_21626236(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates an Auto Scaling group with the specified name and attributes.</p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   HealthCheckGracePeriod: JInt
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   TerminationPolicies: JArray
  ##                      : <p>One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   HealthCheckType: JString
  ##                  : <p>The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. The default value is <code>EC2</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   DesiredCapacity: JInt
  ##                  : The number of Amazon EC2 instances that the Auto Scaling group attempts to maintain. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
  ##   DefaultCooldown: JInt
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplate.LaunchTemplateId: JString
  ##                                  : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchTemplate.LaunchTemplateName: JString
  ##                                    : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  ##   LifecycleHookSpecificationList: JArray
  ##                                 : One or more lifecycle hooks.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group. This name must be unique per Region per account.
  ##   AvailabilityZones: JArray
  ##                    : <p>One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets for <code>VPCZoneIdentifier</code>.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into EC2-Classic.</p>
  ##   VPCZoneIdentifier: JString
  ##                    : <p>A comma-separated list of subnet IDs for your virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into a VPC.</p>
  ##   NewInstancesProtectedFromScaleIn: JBool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicy.LaunchTemplate: JString
  ##                                      : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   LaunchConfigurationName: JString
  ##                          : <p>The name of the launch configuration.</p> <p>If you do not specify <code>LaunchConfigurationName</code>, you must specify one of the following parameters: <code>InstanceId</code>, <code>LaunchTemplate</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   Tags: JArray
  ##       : <p>One or more tags.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MaxInstanceLifetime: JInt
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   Action: JString (required)
  ##   PlacementGroup: JString
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   MixedInstancesPolicy.InstancesDistribution: JString
  ##                                             : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   LaunchTemplate.Version: JString
  ##                         : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   TargetGroupARNs: JArray
  ##                  : <p>The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling group. Instances are registered as targets in a target group, and traffic is routed to the target group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LoadBalancerNames: JArray
  ##                    : <p>A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers and Network Load Balancers, specify a list of target groups using the <code>TargetGroupARNs</code> property instead.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   InstanceId: JString
  ##             : <p>The ID of the instance used to create a launch configuration for the group.</p> <p>When you specify an ID of an instance, Amazon EC2 Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, except for the block device mapping.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html">Create an Auto Scaling Group Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   MaxSize: JInt (required)
  ##          : The maximum size of the group.
  ##   MinSize: JInt (required)
  ##          : The minimum size of the group.
  ##   Version: JString (required)
  ##   ServiceLinkedRoleARN: JString
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  section = newJObject()
  var valid_21626238 = query.getOrDefault("HealthCheckGracePeriod")
  valid_21626238 = validateParameter(valid_21626238, JInt, required = false,
                                   default = nil)
  if valid_21626238 != nil:
    section.add "HealthCheckGracePeriod", valid_21626238
  var valid_21626239 = query.getOrDefault("TerminationPolicies")
  valid_21626239 = validateParameter(valid_21626239, JArray, required = false,
                                   default = nil)
  if valid_21626239 != nil:
    section.add "TerminationPolicies", valid_21626239
  var valid_21626240 = query.getOrDefault("HealthCheckType")
  valid_21626240 = validateParameter(valid_21626240, JString, required = false,
                                   default = nil)
  if valid_21626240 != nil:
    section.add "HealthCheckType", valid_21626240
  var valid_21626241 = query.getOrDefault("DesiredCapacity")
  valid_21626241 = validateParameter(valid_21626241, JInt, required = false,
                                   default = nil)
  if valid_21626241 != nil:
    section.add "DesiredCapacity", valid_21626241
  var valid_21626242 = query.getOrDefault("DefaultCooldown")
  valid_21626242 = validateParameter(valid_21626242, JInt, required = false,
                                   default = nil)
  if valid_21626242 != nil:
    section.add "DefaultCooldown", valid_21626242
  var valid_21626243 = query.getOrDefault("LaunchTemplate.LaunchTemplateId")
  valid_21626243 = validateParameter(valid_21626243, JString, required = false,
                                   default = nil)
  if valid_21626243 != nil:
    section.add "LaunchTemplate.LaunchTemplateId", valid_21626243
  var valid_21626244 = query.getOrDefault("LaunchTemplate.LaunchTemplateName")
  valid_21626244 = validateParameter(valid_21626244, JString, required = false,
                                   default = nil)
  if valid_21626244 != nil:
    section.add "LaunchTemplate.LaunchTemplateName", valid_21626244
  var valid_21626245 = query.getOrDefault("LifecycleHookSpecificationList")
  valid_21626245 = validateParameter(valid_21626245, JArray, required = false,
                                   default = nil)
  if valid_21626245 != nil:
    section.add "LifecycleHookSpecificationList", valid_21626245
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626246 = query.getOrDefault("AutoScalingGroupName")
  valid_21626246 = validateParameter(valid_21626246, JString, required = true,
                                   default = nil)
  if valid_21626246 != nil:
    section.add "AutoScalingGroupName", valid_21626246
  var valid_21626247 = query.getOrDefault("AvailabilityZones")
  valid_21626247 = validateParameter(valid_21626247, JArray, required = false,
                                   default = nil)
  if valid_21626247 != nil:
    section.add "AvailabilityZones", valid_21626247
  var valid_21626248 = query.getOrDefault("VPCZoneIdentifier")
  valid_21626248 = validateParameter(valid_21626248, JString, required = false,
                                   default = nil)
  if valid_21626248 != nil:
    section.add "VPCZoneIdentifier", valid_21626248
  var valid_21626249 = query.getOrDefault("NewInstancesProtectedFromScaleIn")
  valid_21626249 = validateParameter(valid_21626249, JBool, required = false,
                                   default = nil)
  if valid_21626249 != nil:
    section.add "NewInstancesProtectedFromScaleIn", valid_21626249
  var valid_21626250 = query.getOrDefault("MixedInstancesPolicy.LaunchTemplate")
  valid_21626250 = validateParameter(valid_21626250, JString, required = false,
                                   default = nil)
  if valid_21626250 != nil:
    section.add "MixedInstancesPolicy.LaunchTemplate", valid_21626250
  var valid_21626251 = query.getOrDefault("LaunchConfigurationName")
  valid_21626251 = validateParameter(valid_21626251, JString, required = false,
                                   default = nil)
  if valid_21626251 != nil:
    section.add "LaunchConfigurationName", valid_21626251
  var valid_21626252 = query.getOrDefault("Tags")
  valid_21626252 = validateParameter(valid_21626252, JArray, required = false,
                                   default = nil)
  if valid_21626252 != nil:
    section.add "Tags", valid_21626252
  var valid_21626253 = query.getOrDefault("MaxInstanceLifetime")
  valid_21626253 = validateParameter(valid_21626253, JInt, required = false,
                                   default = nil)
  if valid_21626253 != nil:
    section.add "MaxInstanceLifetime", valid_21626253
  var valid_21626254 = query.getOrDefault("Action")
  valid_21626254 = validateParameter(valid_21626254, JString, required = true, default = newJString(
      "CreateAutoScalingGroup"))
  if valid_21626254 != nil:
    section.add "Action", valid_21626254
  var valid_21626255 = query.getOrDefault("PlacementGroup")
  valid_21626255 = validateParameter(valid_21626255, JString, required = false,
                                   default = nil)
  if valid_21626255 != nil:
    section.add "PlacementGroup", valid_21626255
  var valid_21626256 = query.getOrDefault("MixedInstancesPolicy.InstancesDistribution")
  valid_21626256 = validateParameter(valid_21626256, JString, required = false,
                                   default = nil)
  if valid_21626256 != nil:
    section.add "MixedInstancesPolicy.InstancesDistribution", valid_21626256
  var valid_21626257 = query.getOrDefault("LaunchTemplate.Version")
  valid_21626257 = validateParameter(valid_21626257, JString, required = false,
                                   default = nil)
  if valid_21626257 != nil:
    section.add "LaunchTemplate.Version", valid_21626257
  var valid_21626258 = query.getOrDefault("TargetGroupARNs")
  valid_21626258 = validateParameter(valid_21626258, JArray, required = false,
                                   default = nil)
  if valid_21626258 != nil:
    section.add "TargetGroupARNs", valid_21626258
  var valid_21626259 = query.getOrDefault("LoadBalancerNames")
  valid_21626259 = validateParameter(valid_21626259, JArray, required = false,
                                   default = nil)
  if valid_21626259 != nil:
    section.add "LoadBalancerNames", valid_21626259
  var valid_21626260 = query.getOrDefault("InstanceId")
  valid_21626260 = validateParameter(valid_21626260, JString, required = false,
                                   default = nil)
  if valid_21626260 != nil:
    section.add "InstanceId", valid_21626260
  var valid_21626261 = query.getOrDefault("MaxSize")
  valid_21626261 = validateParameter(valid_21626261, JInt, required = true,
                                   default = nil)
  if valid_21626261 != nil:
    section.add "MaxSize", valid_21626261
  var valid_21626262 = query.getOrDefault("MinSize")
  valid_21626262 = validateParameter(valid_21626262, JInt, required = true,
                                   default = nil)
  if valid_21626262 != nil:
    section.add "MinSize", valid_21626262
  var valid_21626263 = query.getOrDefault("Version")
  valid_21626263 = validateParameter(valid_21626263, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626263 != nil:
    section.add "Version", valid_21626263
  var valid_21626264 = query.getOrDefault("ServiceLinkedRoleARN")
  valid_21626264 = validateParameter(valid_21626264, JString, required = false,
                                   default = nil)
  if valid_21626264 != nil:
    section.add "ServiceLinkedRoleARN", valid_21626264
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626265 = header.getOrDefault("X-Amz-Date")
  valid_21626265 = validateParameter(valid_21626265, JString, required = false,
                                   default = nil)
  if valid_21626265 != nil:
    section.add "X-Amz-Date", valid_21626265
  var valid_21626266 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626266 = validateParameter(valid_21626266, JString, required = false,
                                   default = nil)
  if valid_21626266 != nil:
    section.add "X-Amz-Security-Token", valid_21626266
  var valid_21626267 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626267 = validateParameter(valid_21626267, JString, required = false,
                                   default = nil)
  if valid_21626267 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626267
  var valid_21626268 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626268 = validateParameter(valid_21626268, JString, required = false,
                                   default = nil)
  if valid_21626268 != nil:
    section.add "X-Amz-Algorithm", valid_21626268
  var valid_21626269 = header.getOrDefault("X-Amz-Signature")
  valid_21626269 = validateParameter(valid_21626269, JString, required = false,
                                   default = nil)
  if valid_21626269 != nil:
    section.add "X-Amz-Signature", valid_21626269
  var valid_21626270 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626270 = validateParameter(valid_21626270, JString, required = false,
                                   default = nil)
  if valid_21626270 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626270
  var valid_21626271 = header.getOrDefault("X-Amz-Credential")
  valid_21626271 = validateParameter(valid_21626271, JString, required = false,
                                   default = nil)
  if valid_21626271 != nil:
    section.add "X-Amz-Credential", valid_21626271
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626272: Call_GetCreateAutoScalingGroup_21626235;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates an Auto Scaling group with the specified name and attributes.</p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626272.validator(path, query, header, formData, body, _)
  let scheme = call_21626272.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626272.makeUrl(scheme.get, call_21626272.host, call_21626272.base,
                               call_21626272.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626272, uri, valid, _)

proc call*(call_21626273: Call_GetCreateAutoScalingGroup_21626235;
          AutoScalingGroupName: string; MaxSize: int; MinSize: int;
          HealthCheckGracePeriod: int = 0; TerminationPolicies: JsonNode = nil;
          HealthCheckType: string = ""; DesiredCapacity: int = 0;
          DefaultCooldown: int = 0; LaunchTemplateLaunchTemplateId: string = "";
          LaunchTemplateLaunchTemplateName: string = "";
          LifecycleHookSpecificationList: JsonNode = nil;
          AvailabilityZones: JsonNode = nil; VPCZoneIdentifier: string = "";
          NewInstancesProtectedFromScaleIn: bool = false;
          MixedInstancesPolicyLaunchTemplate: string = "";
          LaunchConfigurationName: string = ""; Tags: JsonNode = nil;
          MaxInstanceLifetime: int = 0; Action: string = "CreateAutoScalingGroup";
          PlacementGroup: string = "";
          MixedInstancesPolicyInstancesDistribution: string = "";
          LaunchTemplateVersion: string = ""; TargetGroupARNs: JsonNode = nil;
          LoadBalancerNames: JsonNode = nil; InstanceId: string = "";
          Version: string = "2011-01-01"; ServiceLinkedRoleARN: string = ""): Recallable =
  ## getCreateAutoScalingGroup
  ## <p>Creates an Auto Scaling group with the specified name and attributes.</p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   HealthCheckGracePeriod: int
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   TerminationPolicies: JArray
  ##                      : <p>One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   HealthCheckType: string
  ##                  : <p>The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. The default value is <code>EC2</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   DesiredCapacity: int
  ##                  : The number of Amazon EC2 instances that the Auto Scaling group attempts to maintain. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
  ##   DefaultCooldown: int
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplateLaunchTemplateId: string
  ##                                 : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchTemplateLaunchTemplateName: string
  ##                                   : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  ##   LifecycleHookSpecificationList: JArray
  ##                                 : One or more lifecycle hooks.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group. This name must be unique per Region per account.
  ##   AvailabilityZones: JArray
  ##                    : <p>One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets for <code>VPCZoneIdentifier</code>.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into EC2-Classic.</p>
  ##   VPCZoneIdentifier: string
  ##                    : <p>A comma-separated list of subnet IDs for your virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into a VPC.</p>
  ##   NewInstancesProtectedFromScaleIn: bool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicyLaunchTemplate: string
  ##                                     : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   LaunchConfigurationName: string
  ##                          : <p>The name of the launch configuration.</p> <p>If you do not specify <code>LaunchConfigurationName</code>, you must specify one of the following parameters: <code>InstanceId</code>, <code>LaunchTemplate</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   Tags: JArray
  ##       : <p>One or more tags.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MaxInstanceLifetime: int
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   Action: string (required)
  ##   PlacementGroup: string
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   MixedInstancesPolicyInstancesDistribution: string
  ##                                            : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   LaunchTemplateVersion: string
  ##                        : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   TargetGroupARNs: JArray
  ##                  : <p>The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling group. Instances are registered as targets in a target group, and traffic is routed to the target group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LoadBalancerNames: JArray
  ##                    : <p>A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers and Network Load Balancers, specify a list of target groups using the <code>TargetGroupARNs</code> property instead.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   InstanceId: string
  ##             : <p>The ID of the instance used to create a launch configuration for the group.</p> <p>When you specify an ID of an instance, Amazon EC2 Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, except for the block device mapping.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html">Create an Auto Scaling Group Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>
  ##   MaxSize: int (required)
  ##          : The maximum size of the group.
  ##   MinSize: int (required)
  ##          : The minimum size of the group.
  ##   Version: string (required)
  ##   ServiceLinkedRoleARN: string
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  var query_21626274 = newJObject()
  add(query_21626274, "HealthCheckGracePeriod", newJInt(HealthCheckGracePeriod))
  if TerminationPolicies != nil:
    query_21626274.add "TerminationPolicies", TerminationPolicies
  add(query_21626274, "HealthCheckType", newJString(HealthCheckType))
  add(query_21626274, "DesiredCapacity", newJInt(DesiredCapacity))
  add(query_21626274, "DefaultCooldown", newJInt(DefaultCooldown))
  add(query_21626274, "LaunchTemplate.LaunchTemplateId",
      newJString(LaunchTemplateLaunchTemplateId))
  add(query_21626274, "LaunchTemplate.LaunchTemplateName",
      newJString(LaunchTemplateLaunchTemplateName))
  if LifecycleHookSpecificationList != nil:
    query_21626274.add "LifecycleHookSpecificationList",
                      LifecycleHookSpecificationList
  add(query_21626274, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if AvailabilityZones != nil:
    query_21626274.add "AvailabilityZones", AvailabilityZones
  add(query_21626274, "VPCZoneIdentifier", newJString(VPCZoneIdentifier))
  add(query_21626274, "NewInstancesProtectedFromScaleIn",
      newJBool(NewInstancesProtectedFromScaleIn))
  add(query_21626274, "MixedInstancesPolicy.LaunchTemplate",
      newJString(MixedInstancesPolicyLaunchTemplate))
  add(query_21626274, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  if Tags != nil:
    query_21626274.add "Tags", Tags
  add(query_21626274, "MaxInstanceLifetime", newJInt(MaxInstanceLifetime))
  add(query_21626274, "Action", newJString(Action))
  add(query_21626274, "PlacementGroup", newJString(PlacementGroup))
  add(query_21626274, "MixedInstancesPolicy.InstancesDistribution",
      newJString(MixedInstancesPolicyInstancesDistribution))
  add(query_21626274, "LaunchTemplate.Version", newJString(LaunchTemplateVersion))
  if TargetGroupARNs != nil:
    query_21626274.add "TargetGroupARNs", TargetGroupARNs
  if LoadBalancerNames != nil:
    query_21626274.add "LoadBalancerNames", LoadBalancerNames
  add(query_21626274, "InstanceId", newJString(InstanceId))
  add(query_21626274, "MaxSize", newJInt(MaxSize))
  add(query_21626274, "MinSize", newJInt(MinSize))
  add(query_21626274, "Version", newJString(Version))
  add(query_21626274, "ServiceLinkedRoleARN", newJString(ServiceLinkedRoleARN))
  result = call_21626273.call(nil, query_21626274, nil, nil, nil)

var getCreateAutoScalingGroup* = Call_GetCreateAutoScalingGroup_21626235(
    name: "getCreateAutoScalingGroup", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=CreateAutoScalingGroup",
    validator: validate_GetCreateAutoScalingGroup_21626236, base: "/",
    makeUrl: url_GetCreateAutoScalingGroup_21626237,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateLaunchConfiguration_21626349 = ref object of OpenApiRestCall_21625435
proc url_PostCreateLaunchConfiguration_21626351(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateLaunchConfiguration_21626350(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626352 = query.getOrDefault("Action")
  valid_21626352 = validateParameter(valid_21626352, JString, required = true, default = newJString(
      "CreateLaunchConfiguration"))
  if valid_21626352 != nil:
    section.add "Action", valid_21626352
  var valid_21626353 = query.getOrDefault("Version")
  valid_21626353 = validateParameter(valid_21626353, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626353 != nil:
    section.add "Version", valid_21626353
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626354 = header.getOrDefault("X-Amz-Date")
  valid_21626354 = validateParameter(valid_21626354, JString, required = false,
                                   default = nil)
  if valid_21626354 != nil:
    section.add "X-Amz-Date", valid_21626354
  var valid_21626355 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626355 = validateParameter(valid_21626355, JString, required = false,
                                   default = nil)
  if valid_21626355 != nil:
    section.add "X-Amz-Security-Token", valid_21626355
  var valid_21626356 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626356 = validateParameter(valid_21626356, JString, required = false,
                                   default = nil)
  if valid_21626356 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626356
  var valid_21626357 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626357 = validateParameter(valid_21626357, JString, required = false,
                                   default = nil)
  if valid_21626357 != nil:
    section.add "X-Amz-Algorithm", valid_21626357
  var valid_21626358 = header.getOrDefault("X-Amz-Signature")
  valid_21626358 = validateParameter(valid_21626358, JString, required = false,
                                   default = nil)
  if valid_21626358 != nil:
    section.add "X-Amz-Signature", valid_21626358
  var valid_21626359 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626359 = validateParameter(valid_21626359, JString, required = false,
                                   default = nil)
  if valid_21626359 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626359
  var valid_21626360 = header.getOrDefault("X-Amz-Credential")
  valid_21626360 = validateParameter(valid_21626360, JString, required = false,
                                   default = nil)
  if valid_21626360 != nil:
    section.add "X-Amz-Credential", valid_21626360
  result.add "header", section
  ## parameters in `formData` object:
  ##   PlacementTenancy: JString
  ##                   : <p>The tenancy of the instance. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.</p> <p>To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>), you must set the value of this parameter to <code>dedicated</code>.</p> <p>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-tenancy">Instance Placement Tenancy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Values: <code>default</code> | <code>dedicated</code> </p>
  ##   BlockDeviceMappings: JArray
  ##                      : A block device mapping, which specifies the block devices for the instance. You can specify virtual devices and EBS volumes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   AssociatePublicIpAddress: JBool
  ##                           : <p>For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances. If you specify <code>true</code>, each instance in the Auto Scaling group receives a unique public IP address. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify this parameter, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <note> <p>If the instance is launched into a default subnet, the default is to assign a public IP address, unless you disabled the option to assign a public IP address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IP address, unless you enabled the option to assign a public IP address on the subnet.</p> </note>
  ##   ClassicLinkVPCSecurityGroups: JArray
  ##                               : <p>The IDs of one or more security groups for the specified ClassicLink-enabled VPC. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify the <code>ClassicLinkVPCId</code> parameter, you must specify this parameter.</p>
  ##   KernelId: JString
  ##           : The ID of the kernel associated with the AMI.
  ##   KeyName: JString
  ##          : The name of the key pair. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   ImageId: JString
  ##          : <p>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>ImageId</code>.</p>
  ##   LaunchConfigurationName: JString (required)
  ##                          : The name of the launch configuration. This name must be unique per Region per account.
  ##   ClassicLinkVPCId: JString
  ##                   : <p>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This parameter can only be used if you are launching EC2-Classic instances.</p>
  ##   InstanceMonitoring.Enabled: JString
  ##                             : Describes whether detailed monitoring is enabled for the Auto Scaling instances.
  ## If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
  ##   IamInstanceProfile: JString
  ##                     : <p>The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM Role for Applications That Run on Amazon EC2 Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   InstanceId: JString
  ##             : <p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, except for the block device mapping.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Create a Launch Configuration Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify both <code>ImageId</code> and <code>InstanceType</code>.</p>
  ##   UserData: JString
  ##           : The Base64-encoded user data to make available to the launched EC2 instances. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   SecurityGroups: JArray
  ##                 : <p>A list that contains the security groups to assign to the instances in the Auto Scaling group.</p> <p>[EC2-VPC] Specify the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>[EC2-Classic] Specify either the security group names or the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
  ##   RamdiskId: JString
  ##            : The ID of the RAM disk to select.
  ##   EbsOptimized: JBool
  ##               : <p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>The default value is <code>false</code>.</p>
  ##   InstanceType: JString
  ##               : <p>Specifies the instance type of the EC2 instance.</p> <p>For information about available instance types, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available Instance Types</a> in the <i>Amazon EC2 User Guide for Linux Instances.</i> </p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>InstanceType</code>.</p>
  ##   SpotPrice: JString
  ##            : <p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html">Launching Spot Instances in Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.</p> </note>
  section = newJObject()
  var valid_21626361 = formData.getOrDefault("PlacementTenancy")
  valid_21626361 = validateParameter(valid_21626361, JString, required = false,
                                   default = nil)
  if valid_21626361 != nil:
    section.add "PlacementTenancy", valid_21626361
  var valid_21626362 = formData.getOrDefault("BlockDeviceMappings")
  valid_21626362 = validateParameter(valid_21626362, JArray, required = false,
                                   default = nil)
  if valid_21626362 != nil:
    section.add "BlockDeviceMappings", valid_21626362
  var valid_21626363 = formData.getOrDefault("AssociatePublicIpAddress")
  valid_21626363 = validateParameter(valid_21626363, JBool, required = false,
                                   default = nil)
  if valid_21626363 != nil:
    section.add "AssociatePublicIpAddress", valid_21626363
  var valid_21626364 = formData.getOrDefault("ClassicLinkVPCSecurityGroups")
  valid_21626364 = validateParameter(valid_21626364, JArray, required = false,
                                   default = nil)
  if valid_21626364 != nil:
    section.add "ClassicLinkVPCSecurityGroups", valid_21626364
  var valid_21626365 = formData.getOrDefault("KernelId")
  valid_21626365 = validateParameter(valid_21626365, JString, required = false,
                                   default = nil)
  if valid_21626365 != nil:
    section.add "KernelId", valid_21626365
  var valid_21626366 = formData.getOrDefault("KeyName")
  valid_21626366 = validateParameter(valid_21626366, JString, required = false,
                                   default = nil)
  if valid_21626366 != nil:
    section.add "KeyName", valid_21626366
  var valid_21626367 = formData.getOrDefault("ImageId")
  valid_21626367 = validateParameter(valid_21626367, JString, required = false,
                                   default = nil)
  if valid_21626367 != nil:
    section.add "ImageId", valid_21626367
  assert formData != nil, "formData argument is necessary due to required `LaunchConfigurationName` field"
  var valid_21626368 = formData.getOrDefault("LaunchConfigurationName")
  valid_21626368 = validateParameter(valid_21626368, JString, required = true,
                                   default = nil)
  if valid_21626368 != nil:
    section.add "LaunchConfigurationName", valid_21626368
  var valid_21626369 = formData.getOrDefault("ClassicLinkVPCId")
  valid_21626369 = validateParameter(valid_21626369, JString, required = false,
                                   default = nil)
  if valid_21626369 != nil:
    section.add "ClassicLinkVPCId", valid_21626369
  var valid_21626370 = formData.getOrDefault("InstanceMonitoring.Enabled")
  valid_21626370 = validateParameter(valid_21626370, JString, required = false,
                                   default = nil)
  if valid_21626370 != nil:
    section.add "InstanceMonitoring.Enabled", valid_21626370
  var valid_21626371 = formData.getOrDefault("IamInstanceProfile")
  valid_21626371 = validateParameter(valid_21626371, JString, required = false,
                                   default = nil)
  if valid_21626371 != nil:
    section.add "IamInstanceProfile", valid_21626371
  var valid_21626372 = formData.getOrDefault("InstanceId")
  valid_21626372 = validateParameter(valid_21626372, JString, required = false,
                                   default = nil)
  if valid_21626372 != nil:
    section.add "InstanceId", valid_21626372
  var valid_21626373 = formData.getOrDefault("UserData")
  valid_21626373 = validateParameter(valid_21626373, JString, required = false,
                                   default = nil)
  if valid_21626373 != nil:
    section.add "UserData", valid_21626373
  var valid_21626374 = formData.getOrDefault("SecurityGroups")
  valid_21626374 = validateParameter(valid_21626374, JArray, required = false,
                                   default = nil)
  if valid_21626374 != nil:
    section.add "SecurityGroups", valid_21626374
  var valid_21626375 = formData.getOrDefault("RamdiskId")
  valid_21626375 = validateParameter(valid_21626375, JString, required = false,
                                   default = nil)
  if valid_21626375 != nil:
    section.add "RamdiskId", valid_21626375
  var valid_21626376 = formData.getOrDefault("EbsOptimized")
  valid_21626376 = validateParameter(valid_21626376, JBool, required = false,
                                   default = nil)
  if valid_21626376 != nil:
    section.add "EbsOptimized", valid_21626376
  var valid_21626377 = formData.getOrDefault("InstanceType")
  valid_21626377 = validateParameter(valid_21626377, JString, required = false,
                                   default = nil)
  if valid_21626377 != nil:
    section.add "InstanceType", valid_21626377
  var valid_21626378 = formData.getOrDefault("SpotPrice")
  valid_21626378 = validateParameter(valid_21626378, JString, required = false,
                                   default = nil)
  if valid_21626378 != nil:
    section.add "SpotPrice", valid_21626378
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626379: Call_PostCreateLaunchConfiguration_21626349;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626379.validator(path, query, header, formData, body, _)
  let scheme = call_21626379.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626379.makeUrl(scheme.get, call_21626379.host, call_21626379.base,
                               call_21626379.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626379, uri, valid, _)

proc call*(call_21626380: Call_PostCreateLaunchConfiguration_21626349;
          LaunchConfigurationName: string; PlacementTenancy: string = "";
          BlockDeviceMappings: JsonNode = nil;
          AssociatePublicIpAddress: bool = false;
          ClassicLinkVPCSecurityGroups: JsonNode = nil; KernelId: string = "";
          KeyName: string = ""; ImageId: string = ""; ClassicLinkVPCId: string = "";
          InstanceMonitoringEnabled: string = ""; IamInstanceProfile: string = "";
          Action: string = "CreateLaunchConfiguration"; InstanceId: string = "";
          UserData: string = ""; SecurityGroups: JsonNode = nil; RamdiskId: string = "";
          EbsOptimized: bool = false; InstanceType: string = ""; SpotPrice: string = "";
          Version: string = "2011-01-01"): Recallable =
  ## postCreateLaunchConfiguration
  ## <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   PlacementTenancy: string
  ##                   : <p>The tenancy of the instance. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.</p> <p>To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>), you must set the value of this parameter to <code>dedicated</code>.</p> <p>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-tenancy">Instance Placement Tenancy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Values: <code>default</code> | <code>dedicated</code> </p>
  ##   BlockDeviceMappings: JArray
  ##                      : A block device mapping, which specifies the block devices for the instance. You can specify virtual devices and EBS volumes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   AssociatePublicIpAddress: bool
  ##                           : <p>For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances. If you specify <code>true</code>, each instance in the Auto Scaling group receives a unique public IP address. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify this parameter, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <note> <p>If the instance is launched into a default subnet, the default is to assign a public IP address, unless you disabled the option to assign a public IP address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IP address, unless you enabled the option to assign a public IP address on the subnet.</p> </note>
  ##   ClassicLinkVPCSecurityGroups: JArray
  ##                               : <p>The IDs of one or more security groups for the specified ClassicLink-enabled VPC. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify the <code>ClassicLinkVPCId</code> parameter, you must specify this parameter.</p>
  ##   KernelId: string
  ##           : The ID of the kernel associated with the AMI.
  ##   KeyName: string
  ##          : The name of the key pair. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   ImageId: string
  ##          : <p>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>ImageId</code>.</p>
  ##   LaunchConfigurationName: string (required)
  ##                          : The name of the launch configuration. This name must be unique per Region per account.
  ##   ClassicLinkVPCId: string
  ##                   : <p>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This parameter can only be used if you are launching EC2-Classic instances.</p>
  ##   InstanceMonitoringEnabled: string
  ##                            : Describes whether detailed monitoring is enabled for the Auto Scaling instances.
  ## If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
  ##   IamInstanceProfile: string
  ##                     : <p>The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM Role for Applications That Run on Amazon EC2 Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   InstanceId: string
  ##             : <p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, except for the block device mapping.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Create a Launch Configuration Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify both <code>ImageId</code> and <code>InstanceType</code>.</p>
  ##   UserData: string
  ##           : The Base64-encoded user data to make available to the launched EC2 instances. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   SecurityGroups: JArray
  ##                 : <p>A list that contains the security groups to assign to the instances in the Auto Scaling group.</p> <p>[EC2-VPC] Specify the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>[EC2-Classic] Specify either the security group names or the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
  ##   RamdiskId: string
  ##            : The ID of the RAM disk to select.
  ##   EbsOptimized: bool
  ##               : <p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>The default value is <code>false</code>.</p>
  ##   InstanceType: string
  ##               : <p>Specifies the instance type of the EC2 instance.</p> <p>For information about available instance types, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available Instance Types</a> in the <i>Amazon EC2 User Guide for Linux Instances.</i> </p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>InstanceType</code>.</p>
  ##   SpotPrice: string
  ##            : <p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html">Launching Spot Instances in Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.</p> </note>
  ##   Version: string (required)
  var query_21626381 = newJObject()
  var formData_21626382 = newJObject()
  add(formData_21626382, "PlacementTenancy", newJString(PlacementTenancy))
  if BlockDeviceMappings != nil:
    formData_21626382.add "BlockDeviceMappings", BlockDeviceMappings
  add(formData_21626382, "AssociatePublicIpAddress",
      newJBool(AssociatePublicIpAddress))
  if ClassicLinkVPCSecurityGroups != nil:
    formData_21626382.add "ClassicLinkVPCSecurityGroups",
                         ClassicLinkVPCSecurityGroups
  add(formData_21626382, "KernelId", newJString(KernelId))
  add(formData_21626382, "KeyName", newJString(KeyName))
  add(formData_21626382, "ImageId", newJString(ImageId))
  add(formData_21626382, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  add(formData_21626382, "ClassicLinkVPCId", newJString(ClassicLinkVPCId))
  add(formData_21626382, "InstanceMonitoring.Enabled",
      newJString(InstanceMonitoringEnabled))
  add(formData_21626382, "IamInstanceProfile", newJString(IamInstanceProfile))
  add(query_21626381, "Action", newJString(Action))
  add(formData_21626382, "InstanceId", newJString(InstanceId))
  add(formData_21626382, "UserData", newJString(UserData))
  if SecurityGroups != nil:
    formData_21626382.add "SecurityGroups", SecurityGroups
  add(formData_21626382, "RamdiskId", newJString(RamdiskId))
  add(formData_21626382, "EbsOptimized", newJBool(EbsOptimized))
  add(formData_21626382, "InstanceType", newJString(InstanceType))
  add(formData_21626382, "SpotPrice", newJString(SpotPrice))
  add(query_21626381, "Version", newJString(Version))
  result = call_21626380.call(nil, query_21626381, nil, formData_21626382, nil)

var postCreateLaunchConfiguration* = Call_PostCreateLaunchConfiguration_21626349(
    name: "postCreateLaunchConfiguration", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=CreateLaunchConfiguration",
    validator: validate_PostCreateLaunchConfiguration_21626350, base: "/",
    makeUrl: url_PostCreateLaunchConfiguration_21626351,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateLaunchConfiguration_21626316 = ref object of OpenApiRestCall_21625435
proc url_GetCreateLaunchConfiguration_21626318(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateLaunchConfiguration_21626317(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   PlacementTenancy: JString
  ##                   : <p>The tenancy of the instance. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.</p> <p>To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>), you must set the value of this parameter to <code>dedicated</code>.</p> <p>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-tenancy">Instance Placement Tenancy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Values: <code>default</code> | <code>dedicated</code> </p>
  ##   KeyName: JString
  ##          : The name of the key pair. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   KernelId: JString
  ##           : The ID of the kernel associated with the AMI.
  ##   UserData: JString
  ##           : The Base64-encoded user data to make available to the launched EC2 instances. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   LaunchConfigurationName: JString (required)
  ##                          : The name of the launch configuration. This name must be unique per Region per account.
  ##   AssociatePublicIpAddress: JBool
  ##                           : <p>For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances. If you specify <code>true</code>, each instance in the Auto Scaling group receives a unique public IP address. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify this parameter, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <note> <p>If the instance is launched into a default subnet, the default is to assign a public IP address, unless you disabled the option to assign a public IP address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IP address, unless you enabled the option to assign a public IP address on the subnet.</p> </note>
  ##   EbsOptimized: JBool
  ##               : <p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>The default value is <code>false</code>.</p>
  ##   ImageId: JString
  ##          : <p>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>ImageId</code>.</p>
  ##   Action: JString (required)
  ##   InstanceMonitoring.Enabled: JString
  ##                             : Describes whether detailed monitoring is enabled for the Auto Scaling instances.
  ## If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
  ##   BlockDeviceMappings: JArray
  ##                      : A block device mapping, which specifies the block devices for the instance. You can specify virtual devices and EBS volumes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   RamdiskId: JString
  ##            : The ID of the RAM disk to select.
  ##   ClassicLinkVPCSecurityGroups: JArray
  ##                               : <p>The IDs of one or more security groups for the specified ClassicLink-enabled VPC. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify the <code>ClassicLinkVPCId</code> parameter, you must specify this parameter.</p>
  ##   InstanceType: JString
  ##               : <p>Specifies the instance type of the EC2 instance.</p> <p>For information about available instance types, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available Instance Types</a> in the <i>Amazon EC2 User Guide for Linux Instances.</i> </p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>InstanceType</code>.</p>
  ##   ClassicLinkVPCId: JString
  ##                   : <p>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This parameter can only be used if you are launching EC2-Classic instances.</p>
  ##   InstanceId: JString
  ##             : <p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, except for the block device mapping.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Create a Launch Configuration Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify both <code>ImageId</code> and <code>InstanceType</code>.</p>
  ##   IamInstanceProfile: JString
  ##                     : <p>The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM Role for Applications That Run on Amazon EC2 Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Version: JString (required)
  ##   SecurityGroups: JArray
  ##                 : <p>A list that contains the security groups to assign to the instances in the Auto Scaling group.</p> <p>[EC2-VPC] Specify the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>[EC2-Classic] Specify either the security group names or the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
  ##   SpotPrice: JString
  ##            : <p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html">Launching Spot Instances in Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.</p> </note>
  section = newJObject()
  var valid_21626319 = query.getOrDefault("PlacementTenancy")
  valid_21626319 = validateParameter(valid_21626319, JString, required = false,
                                   default = nil)
  if valid_21626319 != nil:
    section.add "PlacementTenancy", valid_21626319
  var valid_21626320 = query.getOrDefault("KeyName")
  valid_21626320 = validateParameter(valid_21626320, JString, required = false,
                                   default = nil)
  if valid_21626320 != nil:
    section.add "KeyName", valid_21626320
  var valid_21626321 = query.getOrDefault("KernelId")
  valid_21626321 = validateParameter(valid_21626321, JString, required = false,
                                   default = nil)
  if valid_21626321 != nil:
    section.add "KernelId", valid_21626321
  var valid_21626322 = query.getOrDefault("UserData")
  valid_21626322 = validateParameter(valid_21626322, JString, required = false,
                                   default = nil)
  if valid_21626322 != nil:
    section.add "UserData", valid_21626322
  assert query != nil, "query argument is necessary due to required `LaunchConfigurationName` field"
  var valid_21626323 = query.getOrDefault("LaunchConfigurationName")
  valid_21626323 = validateParameter(valid_21626323, JString, required = true,
                                   default = nil)
  if valid_21626323 != nil:
    section.add "LaunchConfigurationName", valid_21626323
  var valid_21626324 = query.getOrDefault("AssociatePublicIpAddress")
  valid_21626324 = validateParameter(valid_21626324, JBool, required = false,
                                   default = nil)
  if valid_21626324 != nil:
    section.add "AssociatePublicIpAddress", valid_21626324
  var valid_21626325 = query.getOrDefault("EbsOptimized")
  valid_21626325 = validateParameter(valid_21626325, JBool, required = false,
                                   default = nil)
  if valid_21626325 != nil:
    section.add "EbsOptimized", valid_21626325
  var valid_21626326 = query.getOrDefault("ImageId")
  valid_21626326 = validateParameter(valid_21626326, JString, required = false,
                                   default = nil)
  if valid_21626326 != nil:
    section.add "ImageId", valid_21626326
  var valid_21626327 = query.getOrDefault("Action")
  valid_21626327 = validateParameter(valid_21626327, JString, required = true, default = newJString(
      "CreateLaunchConfiguration"))
  if valid_21626327 != nil:
    section.add "Action", valid_21626327
  var valid_21626328 = query.getOrDefault("InstanceMonitoring.Enabled")
  valid_21626328 = validateParameter(valid_21626328, JString, required = false,
                                   default = nil)
  if valid_21626328 != nil:
    section.add "InstanceMonitoring.Enabled", valid_21626328
  var valid_21626329 = query.getOrDefault("BlockDeviceMappings")
  valid_21626329 = validateParameter(valid_21626329, JArray, required = false,
                                   default = nil)
  if valid_21626329 != nil:
    section.add "BlockDeviceMappings", valid_21626329
  var valid_21626330 = query.getOrDefault("RamdiskId")
  valid_21626330 = validateParameter(valid_21626330, JString, required = false,
                                   default = nil)
  if valid_21626330 != nil:
    section.add "RamdiskId", valid_21626330
  var valid_21626331 = query.getOrDefault("ClassicLinkVPCSecurityGroups")
  valid_21626331 = validateParameter(valid_21626331, JArray, required = false,
                                   default = nil)
  if valid_21626331 != nil:
    section.add "ClassicLinkVPCSecurityGroups", valid_21626331
  var valid_21626332 = query.getOrDefault("InstanceType")
  valid_21626332 = validateParameter(valid_21626332, JString, required = false,
                                   default = nil)
  if valid_21626332 != nil:
    section.add "InstanceType", valid_21626332
  var valid_21626333 = query.getOrDefault("ClassicLinkVPCId")
  valid_21626333 = validateParameter(valid_21626333, JString, required = false,
                                   default = nil)
  if valid_21626333 != nil:
    section.add "ClassicLinkVPCId", valid_21626333
  var valid_21626334 = query.getOrDefault("InstanceId")
  valid_21626334 = validateParameter(valid_21626334, JString, required = false,
                                   default = nil)
  if valid_21626334 != nil:
    section.add "InstanceId", valid_21626334
  var valid_21626335 = query.getOrDefault("IamInstanceProfile")
  valid_21626335 = validateParameter(valid_21626335, JString, required = false,
                                   default = nil)
  if valid_21626335 != nil:
    section.add "IamInstanceProfile", valid_21626335
  var valid_21626336 = query.getOrDefault("Version")
  valid_21626336 = validateParameter(valid_21626336, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626336 != nil:
    section.add "Version", valid_21626336
  var valid_21626337 = query.getOrDefault("SecurityGroups")
  valid_21626337 = validateParameter(valid_21626337, JArray, required = false,
                                   default = nil)
  if valid_21626337 != nil:
    section.add "SecurityGroups", valid_21626337
  var valid_21626338 = query.getOrDefault("SpotPrice")
  valid_21626338 = validateParameter(valid_21626338, JString, required = false,
                                   default = nil)
  if valid_21626338 != nil:
    section.add "SpotPrice", valid_21626338
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626339 = header.getOrDefault("X-Amz-Date")
  valid_21626339 = validateParameter(valid_21626339, JString, required = false,
                                   default = nil)
  if valid_21626339 != nil:
    section.add "X-Amz-Date", valid_21626339
  var valid_21626340 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626340 = validateParameter(valid_21626340, JString, required = false,
                                   default = nil)
  if valid_21626340 != nil:
    section.add "X-Amz-Security-Token", valid_21626340
  var valid_21626341 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626341 = validateParameter(valid_21626341, JString, required = false,
                                   default = nil)
  if valid_21626341 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626341
  var valid_21626342 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626342 = validateParameter(valid_21626342, JString, required = false,
                                   default = nil)
  if valid_21626342 != nil:
    section.add "X-Amz-Algorithm", valid_21626342
  var valid_21626343 = header.getOrDefault("X-Amz-Signature")
  valid_21626343 = validateParameter(valid_21626343, JString, required = false,
                                   default = nil)
  if valid_21626343 != nil:
    section.add "X-Amz-Signature", valid_21626343
  var valid_21626344 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626344 = validateParameter(valid_21626344, JString, required = false,
                                   default = nil)
  if valid_21626344 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626344
  var valid_21626345 = header.getOrDefault("X-Amz-Credential")
  valid_21626345 = validateParameter(valid_21626345, JString, required = false,
                                   default = nil)
  if valid_21626345 != nil:
    section.add "X-Amz-Credential", valid_21626345
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626346: Call_GetCreateLaunchConfiguration_21626316;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626346.validator(path, query, header, formData, body, _)
  let scheme = call_21626346.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626346.makeUrl(scheme.get, call_21626346.host, call_21626346.base,
                               call_21626346.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626346, uri, valid, _)

proc call*(call_21626347: Call_GetCreateLaunchConfiguration_21626316;
          LaunchConfigurationName: string; PlacementTenancy: string = "";
          KeyName: string = ""; KernelId: string = ""; UserData: string = "";
          AssociatePublicIpAddress: bool = false; EbsOptimized: bool = false;
          ImageId: string = ""; Action: string = "CreateLaunchConfiguration";
          InstanceMonitoringEnabled: string = "";
          BlockDeviceMappings: JsonNode = nil; RamdiskId: string = "";
          ClassicLinkVPCSecurityGroups: JsonNode = nil; InstanceType: string = "";
          ClassicLinkVPCId: string = ""; InstanceId: string = "";
          IamInstanceProfile: string = ""; Version: string = "2011-01-01";
          SecurityGroups: JsonNode = nil; SpotPrice: string = ""): Recallable =
  ## getCreateLaunchConfiguration
  ## <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. For information about viewing this limit, see <a>DescribeAccountLimits</a>. For information about updating this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   PlacementTenancy: string
  ##                   : <p>The tenancy of the instance. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.</p> <p>To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>), you must set the value of this parameter to <code>dedicated</code>.</p> <p>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-tenancy">Instance Placement Tenancy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Values: <code>default</code> | <code>dedicated</code> </p>
  ##   KeyName: string
  ##          : The name of the key pair. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   KernelId: string
  ##           : The ID of the kernel associated with the AMI.
  ##   UserData: string
  ##           : The Base64-encoded user data to make available to the launched EC2 instances. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   LaunchConfigurationName: string (required)
  ##                          : The name of the launch configuration. This name must be unique per Region per account.
  ##   AssociatePublicIpAddress: bool
  ##                           : <p>For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances. If you specify <code>true</code>, each instance in the Auto Scaling group receives a unique public IP address. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify this parameter, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <note> <p>If the instance is launched into a default subnet, the default is to assign a public IP address, unless you disabled the option to assign a public IP address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IP address, unless you enabled the option to assign a public IP address on the subnet.</p> </note>
  ##   EbsOptimized: bool
  ##               : <p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>The default value is <code>false</code>.</p>
  ##   ImageId: string
  ##          : <p>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>ImageId</code>.</p>
  ##   Action: string (required)
  ##   InstanceMonitoringEnabled: string
  ##                            : Describes whether detailed monitoring is enabled for the Auto Scaling instances.
  ## If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
  ##   BlockDeviceMappings: JArray
  ##                      : A block device mapping, which specifies the block devices for the instance. You can specify virtual devices and EBS volumes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   RamdiskId: string
  ##            : The ID of the RAM disk to select.
  ##   ClassicLinkVPCSecurityGroups: JArray
  ##                               : <p>The IDs of one or more security groups for the specified ClassicLink-enabled VPC. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify the <code>ClassicLinkVPCId</code> parameter, you must specify this parameter.</p>
  ##   InstanceType: string
  ##               : <p>Specifies the instance type of the EC2 instance.</p> <p>For information about available instance types, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available Instance Types</a> in the <i>Amazon EC2 User Guide for Linux Instances.</i> </p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>InstanceType</code>.</p>
  ##   ClassicLinkVPCId: string
  ##                   : <p>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This parameter can only be used if you are launching EC2-Classic instances.</p>
  ##   InstanceId: string
  ##             : <p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, except for the block device mapping.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Create a Launch Configuration Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify both <code>ImageId</code> and <code>InstanceType</code>.</p>
  ##   IamInstanceProfile: string
  ##                     : <p>The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM Role for Applications That Run on Amazon EC2 Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Version: string (required)
  ##   SecurityGroups: JArray
  ##                 : <p>A list that contains the security groups to assign to the instances in the Auto Scaling group.</p> <p>[EC2-VPC] Specify the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>[EC2-Classic] Specify either the security group names or the security group IDs. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
  ##   SpotPrice: string
  ##            : <p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html">Launching Spot Instances in Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.</p> </note>
  var query_21626348 = newJObject()
  add(query_21626348, "PlacementTenancy", newJString(PlacementTenancy))
  add(query_21626348, "KeyName", newJString(KeyName))
  add(query_21626348, "KernelId", newJString(KernelId))
  add(query_21626348, "UserData", newJString(UserData))
  add(query_21626348, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  add(query_21626348, "AssociatePublicIpAddress",
      newJBool(AssociatePublicIpAddress))
  add(query_21626348, "EbsOptimized", newJBool(EbsOptimized))
  add(query_21626348, "ImageId", newJString(ImageId))
  add(query_21626348, "Action", newJString(Action))
  add(query_21626348, "InstanceMonitoring.Enabled",
      newJString(InstanceMonitoringEnabled))
  if BlockDeviceMappings != nil:
    query_21626348.add "BlockDeviceMappings", BlockDeviceMappings
  add(query_21626348, "RamdiskId", newJString(RamdiskId))
  if ClassicLinkVPCSecurityGroups != nil:
    query_21626348.add "ClassicLinkVPCSecurityGroups",
                      ClassicLinkVPCSecurityGroups
  add(query_21626348, "InstanceType", newJString(InstanceType))
  add(query_21626348, "ClassicLinkVPCId", newJString(ClassicLinkVPCId))
  add(query_21626348, "InstanceId", newJString(InstanceId))
  add(query_21626348, "IamInstanceProfile", newJString(IamInstanceProfile))
  add(query_21626348, "Version", newJString(Version))
  if SecurityGroups != nil:
    query_21626348.add "SecurityGroups", SecurityGroups
  add(query_21626348, "SpotPrice", newJString(SpotPrice))
  result = call_21626347.call(nil, query_21626348, nil, nil, nil)

var getCreateLaunchConfiguration* = Call_GetCreateLaunchConfiguration_21626316(
    name: "getCreateLaunchConfiguration", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=CreateLaunchConfiguration",
    validator: validate_GetCreateLaunchConfiguration_21626317, base: "/",
    makeUrl: url_GetCreateLaunchConfiguration_21626318,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateOrUpdateTags_21626399 = ref object of OpenApiRestCall_21625435
proc url_PostCreateOrUpdateTags_21626401(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateOrUpdateTags_21626400(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626402 = query.getOrDefault("Action")
  valid_21626402 = validateParameter(valid_21626402, JString, required = true,
                                   default = newJString("CreateOrUpdateTags"))
  if valid_21626402 != nil:
    section.add "Action", valid_21626402
  var valid_21626403 = query.getOrDefault("Version")
  valid_21626403 = validateParameter(valid_21626403, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626403 != nil:
    section.add "Version", valid_21626403
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626404 = header.getOrDefault("X-Amz-Date")
  valid_21626404 = validateParameter(valid_21626404, JString, required = false,
                                   default = nil)
  if valid_21626404 != nil:
    section.add "X-Amz-Date", valid_21626404
  var valid_21626405 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626405 = validateParameter(valid_21626405, JString, required = false,
                                   default = nil)
  if valid_21626405 != nil:
    section.add "X-Amz-Security-Token", valid_21626405
  var valid_21626406 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626406 = validateParameter(valid_21626406, JString, required = false,
                                   default = nil)
  if valid_21626406 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626406
  var valid_21626407 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626407 = validateParameter(valid_21626407, JString, required = false,
                                   default = nil)
  if valid_21626407 != nil:
    section.add "X-Amz-Algorithm", valid_21626407
  var valid_21626408 = header.getOrDefault("X-Amz-Signature")
  valid_21626408 = validateParameter(valid_21626408, JString, required = false,
                                   default = nil)
  if valid_21626408 != nil:
    section.add "X-Amz-Signature", valid_21626408
  var valid_21626409 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626409 = validateParameter(valid_21626409, JString, required = false,
                                   default = nil)
  if valid_21626409 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626409
  var valid_21626410 = header.getOrDefault("X-Amz-Credential")
  valid_21626410 = validateParameter(valid_21626410, JString, required = false,
                                   default = nil)
  if valid_21626410 != nil:
    section.add "X-Amz-Credential", valid_21626410
  result.add "header", section
  ## parameters in `formData` object:
  ##   Tags: JArray (required)
  ##       : One or more tags.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `Tags` field"
  var valid_21626411 = formData.getOrDefault("Tags")
  valid_21626411 = validateParameter(valid_21626411, JArray, required = true,
                                   default = nil)
  if valid_21626411 != nil:
    section.add "Tags", valid_21626411
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626412: Call_PostCreateOrUpdateTags_21626399;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626412.validator(path, query, header, formData, body, _)
  let scheme = call_21626412.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626412.makeUrl(scheme.get, call_21626412.host, call_21626412.base,
                               call_21626412.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626412, uri, valid, _)

proc call*(call_21626413: Call_PostCreateOrUpdateTags_21626399; Tags: JsonNode;
          Action: string = "CreateOrUpdateTags"; Version: string = "2011-01-01"): Recallable =
  ## postCreateOrUpdateTags
  ## <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Tags: JArray (required)
  ##       : One or more tags.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626414 = newJObject()
  var formData_21626415 = newJObject()
  if Tags != nil:
    formData_21626415.add "Tags", Tags
  add(query_21626414, "Action", newJString(Action))
  add(query_21626414, "Version", newJString(Version))
  result = call_21626413.call(nil, query_21626414, nil, formData_21626415, nil)

var postCreateOrUpdateTags* = Call_PostCreateOrUpdateTags_21626399(
    name: "postCreateOrUpdateTags", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=CreateOrUpdateTags",
    validator: validate_PostCreateOrUpdateTags_21626400, base: "/",
    makeUrl: url_PostCreateOrUpdateTags_21626401,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateOrUpdateTags_21626383 = ref object of OpenApiRestCall_21625435
proc url_GetCreateOrUpdateTags_21626385(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateOrUpdateTags_21626384(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Tags: JArray (required)
  ##       : One or more tags.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Tags` field"
  var valid_21626386 = query.getOrDefault("Tags")
  valid_21626386 = validateParameter(valid_21626386, JArray, required = true,
                                   default = nil)
  if valid_21626386 != nil:
    section.add "Tags", valid_21626386
  var valid_21626387 = query.getOrDefault("Action")
  valid_21626387 = validateParameter(valid_21626387, JString, required = true,
                                   default = newJString("CreateOrUpdateTags"))
  if valid_21626387 != nil:
    section.add "Action", valid_21626387
  var valid_21626388 = query.getOrDefault("Version")
  valid_21626388 = validateParameter(valid_21626388, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626388 != nil:
    section.add "Version", valid_21626388
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626389 = header.getOrDefault("X-Amz-Date")
  valid_21626389 = validateParameter(valid_21626389, JString, required = false,
                                   default = nil)
  if valid_21626389 != nil:
    section.add "X-Amz-Date", valid_21626389
  var valid_21626390 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626390 = validateParameter(valid_21626390, JString, required = false,
                                   default = nil)
  if valid_21626390 != nil:
    section.add "X-Amz-Security-Token", valid_21626390
  var valid_21626391 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626391 = validateParameter(valid_21626391, JString, required = false,
                                   default = nil)
  if valid_21626391 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626391
  var valid_21626392 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626392 = validateParameter(valid_21626392, JString, required = false,
                                   default = nil)
  if valid_21626392 != nil:
    section.add "X-Amz-Algorithm", valid_21626392
  var valid_21626393 = header.getOrDefault("X-Amz-Signature")
  valid_21626393 = validateParameter(valid_21626393, JString, required = false,
                                   default = nil)
  if valid_21626393 != nil:
    section.add "X-Amz-Signature", valid_21626393
  var valid_21626394 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626394 = validateParameter(valid_21626394, JString, required = false,
                                   default = nil)
  if valid_21626394 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626394
  var valid_21626395 = header.getOrDefault("X-Amz-Credential")
  valid_21626395 = validateParameter(valid_21626395, JString, required = false,
                                   default = nil)
  if valid_21626395 != nil:
    section.add "X-Amz-Credential", valid_21626395
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626396: Call_GetCreateOrUpdateTags_21626383;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626396.validator(path, query, header, formData, body, _)
  let scheme = call_21626396.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626396.makeUrl(scheme.get, call_21626396.host, call_21626396.base,
                               call_21626396.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626396, uri, valid, _)

proc call*(call_21626397: Call_GetCreateOrUpdateTags_21626383; Tags: JsonNode;
          Action: string = "CreateOrUpdateTags"; Version: string = "2011-01-01"): Recallable =
  ## getCreateOrUpdateTags
  ## <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Tags: JArray (required)
  ##       : One or more tags.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626398 = newJObject()
  if Tags != nil:
    query_21626398.add "Tags", Tags
  add(query_21626398, "Action", newJString(Action))
  add(query_21626398, "Version", newJString(Version))
  result = call_21626397.call(nil, query_21626398, nil, nil, nil)

var getCreateOrUpdateTags* = Call_GetCreateOrUpdateTags_21626383(
    name: "getCreateOrUpdateTags", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=CreateOrUpdateTags",
    validator: validate_GetCreateOrUpdateTags_21626384, base: "/",
    makeUrl: url_GetCreateOrUpdateTags_21626385,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteAutoScalingGroup_21626433 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteAutoScalingGroup_21626435(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteAutoScalingGroup_21626434(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call <a>DetachInstances</a> with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call <a>UpdateAutoScalingGroup</a> and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626436 = query.getOrDefault("Action")
  valid_21626436 = validateParameter(valid_21626436, JString, required = true, default = newJString(
      "DeleteAutoScalingGroup"))
  if valid_21626436 != nil:
    section.add "Action", valid_21626436
  var valid_21626437 = query.getOrDefault("Version")
  valid_21626437 = validateParameter(valid_21626437, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626437 != nil:
    section.add "Version", valid_21626437
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626438 = header.getOrDefault("X-Amz-Date")
  valid_21626438 = validateParameter(valid_21626438, JString, required = false,
                                   default = nil)
  if valid_21626438 != nil:
    section.add "X-Amz-Date", valid_21626438
  var valid_21626439 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626439 = validateParameter(valid_21626439, JString, required = false,
                                   default = nil)
  if valid_21626439 != nil:
    section.add "X-Amz-Security-Token", valid_21626439
  var valid_21626440 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626440 = validateParameter(valid_21626440, JString, required = false,
                                   default = nil)
  if valid_21626440 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626440
  var valid_21626441 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626441 = validateParameter(valid_21626441, JString, required = false,
                                   default = nil)
  if valid_21626441 != nil:
    section.add "X-Amz-Algorithm", valid_21626441
  var valid_21626442 = header.getOrDefault("X-Amz-Signature")
  valid_21626442 = validateParameter(valid_21626442, JString, required = false,
                                   default = nil)
  if valid_21626442 != nil:
    section.add "X-Amz-Signature", valid_21626442
  var valid_21626443 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626443 = validateParameter(valid_21626443, JString, required = false,
                                   default = nil)
  if valid_21626443 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626443
  var valid_21626444 = header.getOrDefault("X-Amz-Credential")
  valid_21626444 = validateParameter(valid_21626444, JString, required = false,
                                   default = nil)
  if valid_21626444 != nil:
    section.add "X-Amz-Credential", valid_21626444
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   ForceDelete: JBool
  ##              : Specifies that the group is to be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This parameter also deletes any lifecycle actions associated with the group.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626445 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626445 = validateParameter(valid_21626445, JString, required = true,
                                   default = nil)
  if valid_21626445 != nil:
    section.add "AutoScalingGroupName", valid_21626445
  var valid_21626446 = formData.getOrDefault("ForceDelete")
  valid_21626446 = validateParameter(valid_21626446, JBool, required = false,
                                   default = nil)
  if valid_21626446 != nil:
    section.add "ForceDelete", valid_21626446
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626447: Call_PostDeleteAutoScalingGroup_21626433;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call <a>DetachInstances</a> with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call <a>UpdateAutoScalingGroup</a> and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>
  ## 
  let valid = call_21626447.validator(path, query, header, formData, body, _)
  let scheme = call_21626447.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626447.makeUrl(scheme.get, call_21626447.host, call_21626447.base,
                               call_21626447.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626447, uri, valid, _)

proc call*(call_21626448: Call_PostDeleteAutoScalingGroup_21626433;
          AutoScalingGroupName: string; ForceDelete: bool = false;
          Action: string = "DeleteAutoScalingGroup"; Version: string = "2011-01-01"): Recallable =
  ## postDeleteAutoScalingGroup
  ## <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call <a>DetachInstances</a> with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call <a>UpdateAutoScalingGroup</a> and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   ForceDelete: bool
  ##              : Specifies that the group is to be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This parameter also deletes any lifecycle actions associated with the group.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626449 = newJObject()
  var formData_21626450 = newJObject()
  add(formData_21626450, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21626450, "ForceDelete", newJBool(ForceDelete))
  add(query_21626449, "Action", newJString(Action))
  add(query_21626449, "Version", newJString(Version))
  result = call_21626448.call(nil, query_21626449, nil, formData_21626450, nil)

var postDeleteAutoScalingGroup* = Call_PostDeleteAutoScalingGroup_21626433(
    name: "postDeleteAutoScalingGroup", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DeleteAutoScalingGroup",
    validator: validate_PostDeleteAutoScalingGroup_21626434, base: "/",
    makeUrl: url_PostDeleteAutoScalingGroup_21626435,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteAutoScalingGroup_21626416 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteAutoScalingGroup_21626418(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteAutoScalingGroup_21626417(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call <a>DetachInstances</a> with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call <a>UpdateAutoScalingGroup</a> and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   ForceDelete: JBool
  ##              : Specifies that the group is to be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This parameter also deletes any lifecycle actions associated with the group.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626419 = query.getOrDefault("AutoScalingGroupName")
  valid_21626419 = validateParameter(valid_21626419, JString, required = true,
                                   default = nil)
  if valid_21626419 != nil:
    section.add "AutoScalingGroupName", valid_21626419
  var valid_21626420 = query.getOrDefault("Action")
  valid_21626420 = validateParameter(valid_21626420, JString, required = true, default = newJString(
      "DeleteAutoScalingGroup"))
  if valid_21626420 != nil:
    section.add "Action", valid_21626420
  var valid_21626421 = query.getOrDefault("ForceDelete")
  valid_21626421 = validateParameter(valid_21626421, JBool, required = false,
                                   default = nil)
  if valid_21626421 != nil:
    section.add "ForceDelete", valid_21626421
  var valid_21626422 = query.getOrDefault("Version")
  valid_21626422 = validateParameter(valid_21626422, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626422 != nil:
    section.add "Version", valid_21626422
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626423 = header.getOrDefault("X-Amz-Date")
  valid_21626423 = validateParameter(valid_21626423, JString, required = false,
                                   default = nil)
  if valid_21626423 != nil:
    section.add "X-Amz-Date", valid_21626423
  var valid_21626424 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626424 = validateParameter(valid_21626424, JString, required = false,
                                   default = nil)
  if valid_21626424 != nil:
    section.add "X-Amz-Security-Token", valid_21626424
  var valid_21626425 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626425 = validateParameter(valid_21626425, JString, required = false,
                                   default = nil)
  if valid_21626425 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626425
  var valid_21626426 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626426 = validateParameter(valid_21626426, JString, required = false,
                                   default = nil)
  if valid_21626426 != nil:
    section.add "X-Amz-Algorithm", valid_21626426
  var valid_21626427 = header.getOrDefault("X-Amz-Signature")
  valid_21626427 = validateParameter(valid_21626427, JString, required = false,
                                   default = nil)
  if valid_21626427 != nil:
    section.add "X-Amz-Signature", valid_21626427
  var valid_21626428 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626428 = validateParameter(valid_21626428, JString, required = false,
                                   default = nil)
  if valid_21626428 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626428
  var valid_21626429 = header.getOrDefault("X-Amz-Credential")
  valid_21626429 = validateParameter(valid_21626429, JString, required = false,
                                   default = nil)
  if valid_21626429 != nil:
    section.add "X-Amz-Credential", valid_21626429
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626430: Call_GetDeleteAutoScalingGroup_21626416;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call <a>DetachInstances</a> with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call <a>UpdateAutoScalingGroup</a> and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>
  ## 
  let valid = call_21626430.validator(path, query, header, formData, body, _)
  let scheme = call_21626430.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626430.makeUrl(scheme.get, call_21626430.host, call_21626430.base,
                               call_21626430.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626430, uri, valid, _)

proc call*(call_21626431: Call_GetDeleteAutoScalingGroup_21626416;
          AutoScalingGroupName: string; Action: string = "DeleteAutoScalingGroup";
          ForceDelete: bool = false; Version: string = "2011-01-01"): Recallable =
  ## getDeleteAutoScalingGroup
  ## <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call <a>DetachInstances</a> with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call <a>UpdateAutoScalingGroup</a> and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   ForceDelete: bool
  ##              : Specifies that the group is to be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This parameter also deletes any lifecycle actions associated with the group.
  ##   Version: string (required)
  var query_21626432 = newJObject()
  add(query_21626432, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626432, "Action", newJString(Action))
  add(query_21626432, "ForceDelete", newJBool(ForceDelete))
  add(query_21626432, "Version", newJString(Version))
  result = call_21626431.call(nil, query_21626432, nil, nil, nil)

var getDeleteAutoScalingGroup* = Call_GetDeleteAutoScalingGroup_21626416(
    name: "getDeleteAutoScalingGroup", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DeleteAutoScalingGroup",
    validator: validate_GetDeleteAutoScalingGroup_21626417, base: "/",
    makeUrl: url_GetDeleteAutoScalingGroup_21626418,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteLaunchConfiguration_21626467 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteLaunchConfiguration_21626469(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteLaunchConfiguration_21626468(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626470 = query.getOrDefault("Action")
  valid_21626470 = validateParameter(valid_21626470, JString, required = true, default = newJString(
      "DeleteLaunchConfiguration"))
  if valid_21626470 != nil:
    section.add "Action", valid_21626470
  var valid_21626471 = query.getOrDefault("Version")
  valid_21626471 = validateParameter(valid_21626471, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626471 != nil:
    section.add "Version", valid_21626471
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626472 = header.getOrDefault("X-Amz-Date")
  valid_21626472 = validateParameter(valid_21626472, JString, required = false,
                                   default = nil)
  if valid_21626472 != nil:
    section.add "X-Amz-Date", valid_21626472
  var valid_21626473 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626473 = validateParameter(valid_21626473, JString, required = false,
                                   default = nil)
  if valid_21626473 != nil:
    section.add "X-Amz-Security-Token", valid_21626473
  var valid_21626474 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626474 = validateParameter(valid_21626474, JString, required = false,
                                   default = nil)
  if valid_21626474 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626474
  var valid_21626475 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626475 = validateParameter(valid_21626475, JString, required = false,
                                   default = nil)
  if valid_21626475 != nil:
    section.add "X-Amz-Algorithm", valid_21626475
  var valid_21626476 = header.getOrDefault("X-Amz-Signature")
  valid_21626476 = validateParameter(valid_21626476, JString, required = false,
                                   default = nil)
  if valid_21626476 != nil:
    section.add "X-Amz-Signature", valid_21626476
  var valid_21626477 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626477 = validateParameter(valid_21626477, JString, required = false,
                                   default = nil)
  if valid_21626477 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626477
  var valid_21626478 = header.getOrDefault("X-Amz-Credential")
  valid_21626478 = validateParameter(valid_21626478, JString, required = false,
                                   default = nil)
  if valid_21626478 != nil:
    section.add "X-Amz-Credential", valid_21626478
  result.add "header", section
  ## parameters in `formData` object:
  ##   LaunchConfigurationName: JString (required)
  ##                          : The name of the launch configuration.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `LaunchConfigurationName` field"
  var valid_21626479 = formData.getOrDefault("LaunchConfigurationName")
  valid_21626479 = validateParameter(valid_21626479, JString, required = true,
                                   default = nil)
  if valid_21626479 != nil:
    section.add "LaunchConfigurationName", valid_21626479
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626480: Call_PostDeleteLaunchConfiguration_21626467;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
  ## 
  let valid = call_21626480.validator(path, query, header, formData, body, _)
  let scheme = call_21626480.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626480.makeUrl(scheme.get, call_21626480.host, call_21626480.base,
                               call_21626480.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626480, uri, valid, _)

proc call*(call_21626481: Call_PostDeleteLaunchConfiguration_21626467;
          LaunchConfigurationName: string;
          Action: string = "DeleteLaunchConfiguration";
          Version: string = "2011-01-01"): Recallable =
  ## postDeleteLaunchConfiguration
  ## <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
  ##   LaunchConfigurationName: string (required)
  ##                          : The name of the launch configuration.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626482 = newJObject()
  var formData_21626483 = newJObject()
  add(formData_21626483, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  add(query_21626482, "Action", newJString(Action))
  add(query_21626482, "Version", newJString(Version))
  result = call_21626481.call(nil, query_21626482, nil, formData_21626483, nil)

var postDeleteLaunchConfiguration* = Call_PostDeleteLaunchConfiguration_21626467(
    name: "postDeleteLaunchConfiguration", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DeleteLaunchConfiguration",
    validator: validate_PostDeleteLaunchConfiguration_21626468, base: "/",
    makeUrl: url_PostDeleteLaunchConfiguration_21626469,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteLaunchConfiguration_21626451 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteLaunchConfiguration_21626453(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteLaunchConfiguration_21626452(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LaunchConfigurationName: JString (required)
  ##                          : The name of the launch configuration.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `LaunchConfigurationName` field"
  var valid_21626454 = query.getOrDefault("LaunchConfigurationName")
  valid_21626454 = validateParameter(valid_21626454, JString, required = true,
                                   default = nil)
  if valid_21626454 != nil:
    section.add "LaunchConfigurationName", valid_21626454
  var valid_21626455 = query.getOrDefault("Action")
  valid_21626455 = validateParameter(valid_21626455, JString, required = true, default = newJString(
      "DeleteLaunchConfiguration"))
  if valid_21626455 != nil:
    section.add "Action", valid_21626455
  var valid_21626456 = query.getOrDefault("Version")
  valid_21626456 = validateParameter(valid_21626456, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626456 != nil:
    section.add "Version", valid_21626456
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626457 = header.getOrDefault("X-Amz-Date")
  valid_21626457 = validateParameter(valid_21626457, JString, required = false,
                                   default = nil)
  if valid_21626457 != nil:
    section.add "X-Amz-Date", valid_21626457
  var valid_21626458 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626458 = validateParameter(valid_21626458, JString, required = false,
                                   default = nil)
  if valid_21626458 != nil:
    section.add "X-Amz-Security-Token", valid_21626458
  var valid_21626459 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626459 = validateParameter(valid_21626459, JString, required = false,
                                   default = nil)
  if valid_21626459 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626459
  var valid_21626460 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626460 = validateParameter(valid_21626460, JString, required = false,
                                   default = nil)
  if valid_21626460 != nil:
    section.add "X-Amz-Algorithm", valid_21626460
  var valid_21626461 = header.getOrDefault("X-Amz-Signature")
  valid_21626461 = validateParameter(valid_21626461, JString, required = false,
                                   default = nil)
  if valid_21626461 != nil:
    section.add "X-Amz-Signature", valid_21626461
  var valid_21626462 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626462 = validateParameter(valid_21626462, JString, required = false,
                                   default = nil)
  if valid_21626462 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626462
  var valid_21626463 = header.getOrDefault("X-Amz-Credential")
  valid_21626463 = validateParameter(valid_21626463, JString, required = false,
                                   default = nil)
  if valid_21626463 != nil:
    section.add "X-Amz-Credential", valid_21626463
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626464: Call_GetDeleteLaunchConfiguration_21626451;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
  ## 
  let valid = call_21626464.validator(path, query, header, formData, body, _)
  let scheme = call_21626464.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626464.makeUrl(scheme.get, call_21626464.host, call_21626464.base,
                               call_21626464.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626464, uri, valid, _)

proc call*(call_21626465: Call_GetDeleteLaunchConfiguration_21626451;
          LaunchConfigurationName: string;
          Action: string = "DeleteLaunchConfiguration";
          Version: string = "2011-01-01"): Recallable =
  ## getDeleteLaunchConfiguration
  ## <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
  ##   LaunchConfigurationName: string (required)
  ##                          : The name of the launch configuration.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626466 = newJObject()
  add(query_21626466, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  add(query_21626466, "Action", newJString(Action))
  add(query_21626466, "Version", newJString(Version))
  result = call_21626465.call(nil, query_21626466, nil, nil, nil)

var getDeleteLaunchConfiguration* = Call_GetDeleteLaunchConfiguration_21626451(
    name: "getDeleteLaunchConfiguration", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DeleteLaunchConfiguration",
    validator: validate_GetDeleteLaunchConfiguration_21626452, base: "/",
    makeUrl: url_GetDeleteLaunchConfiguration_21626453,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteLifecycleHook_21626501 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteLifecycleHook_21626503(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteLifecycleHook_21626502(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626504 = query.getOrDefault("Action")
  valid_21626504 = validateParameter(valid_21626504, JString, required = true,
                                   default = newJString("DeleteLifecycleHook"))
  if valid_21626504 != nil:
    section.add "Action", valid_21626504
  var valid_21626505 = query.getOrDefault("Version")
  valid_21626505 = validateParameter(valid_21626505, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626505 != nil:
    section.add "Version", valid_21626505
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626506 = header.getOrDefault("X-Amz-Date")
  valid_21626506 = validateParameter(valid_21626506, JString, required = false,
                                   default = nil)
  if valid_21626506 != nil:
    section.add "X-Amz-Date", valid_21626506
  var valid_21626507 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626507 = validateParameter(valid_21626507, JString, required = false,
                                   default = nil)
  if valid_21626507 != nil:
    section.add "X-Amz-Security-Token", valid_21626507
  var valid_21626508 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626508 = validateParameter(valid_21626508, JString, required = false,
                                   default = nil)
  if valid_21626508 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626508
  var valid_21626509 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626509 = validateParameter(valid_21626509, JString, required = false,
                                   default = nil)
  if valid_21626509 != nil:
    section.add "X-Amz-Algorithm", valid_21626509
  var valid_21626510 = header.getOrDefault("X-Amz-Signature")
  valid_21626510 = validateParameter(valid_21626510, JString, required = false,
                                   default = nil)
  if valid_21626510 != nil:
    section.add "X-Amz-Signature", valid_21626510
  var valid_21626511 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626511 = validateParameter(valid_21626511, JString, required = false,
                                   default = nil)
  if valid_21626511 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626511
  var valid_21626512 = header.getOrDefault("X-Amz-Credential")
  valid_21626512 = validateParameter(valid_21626512, JString, required = false,
                                   default = nil)
  if valid_21626512 != nil:
    section.add "X-Amz-Credential", valid_21626512
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626513 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626513 = validateParameter(valid_21626513, JString, required = true,
                                   default = nil)
  if valid_21626513 != nil:
    section.add "AutoScalingGroupName", valid_21626513
  var valid_21626514 = formData.getOrDefault("LifecycleHookName")
  valid_21626514 = validateParameter(valid_21626514, JString, required = true,
                                   default = nil)
  if valid_21626514 != nil:
    section.add "LifecycleHookName", valid_21626514
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626515: Call_PostDeleteLifecycleHook_21626501;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
  ## 
  let valid = call_21626515.validator(path, query, header, formData, body, _)
  let scheme = call_21626515.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626515.makeUrl(scheme.get, call_21626515.host, call_21626515.base,
                               call_21626515.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626515, uri, valid, _)

proc call*(call_21626516: Call_PostDeleteLifecycleHook_21626501;
          AutoScalingGroupName: string; LifecycleHookName: string;
          Action: string = "DeleteLifecycleHook"; Version: string = "2011-01-01"): Recallable =
  ## postDeleteLifecycleHook
  ## <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   Version: string (required)
  var query_21626517 = newJObject()
  var formData_21626518 = newJObject()
  add(formData_21626518, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626517, "Action", newJString(Action))
  add(formData_21626518, "LifecycleHookName", newJString(LifecycleHookName))
  add(query_21626517, "Version", newJString(Version))
  result = call_21626516.call(nil, query_21626517, nil, formData_21626518, nil)

var postDeleteLifecycleHook* = Call_PostDeleteLifecycleHook_21626501(
    name: "postDeleteLifecycleHook", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DeleteLifecycleHook",
    validator: validate_PostDeleteLifecycleHook_21626502, base: "/",
    makeUrl: url_PostDeleteLifecycleHook_21626503,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteLifecycleHook_21626484 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteLifecycleHook_21626486(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteLifecycleHook_21626485(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626487 = query.getOrDefault("AutoScalingGroupName")
  valid_21626487 = validateParameter(valid_21626487, JString, required = true,
                                   default = nil)
  if valid_21626487 != nil:
    section.add "AutoScalingGroupName", valid_21626487
  var valid_21626488 = query.getOrDefault("Action")
  valid_21626488 = validateParameter(valid_21626488, JString, required = true,
                                   default = newJString("DeleteLifecycleHook"))
  if valid_21626488 != nil:
    section.add "Action", valid_21626488
  var valid_21626489 = query.getOrDefault("LifecycleHookName")
  valid_21626489 = validateParameter(valid_21626489, JString, required = true,
                                   default = nil)
  if valid_21626489 != nil:
    section.add "LifecycleHookName", valid_21626489
  var valid_21626490 = query.getOrDefault("Version")
  valid_21626490 = validateParameter(valid_21626490, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626490 != nil:
    section.add "Version", valid_21626490
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626491 = header.getOrDefault("X-Amz-Date")
  valid_21626491 = validateParameter(valid_21626491, JString, required = false,
                                   default = nil)
  if valid_21626491 != nil:
    section.add "X-Amz-Date", valid_21626491
  var valid_21626492 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626492 = validateParameter(valid_21626492, JString, required = false,
                                   default = nil)
  if valid_21626492 != nil:
    section.add "X-Amz-Security-Token", valid_21626492
  var valid_21626493 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626493 = validateParameter(valid_21626493, JString, required = false,
                                   default = nil)
  if valid_21626493 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626493
  var valid_21626494 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626494 = validateParameter(valid_21626494, JString, required = false,
                                   default = nil)
  if valid_21626494 != nil:
    section.add "X-Amz-Algorithm", valid_21626494
  var valid_21626495 = header.getOrDefault("X-Amz-Signature")
  valid_21626495 = validateParameter(valid_21626495, JString, required = false,
                                   default = nil)
  if valid_21626495 != nil:
    section.add "X-Amz-Signature", valid_21626495
  var valid_21626496 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626496 = validateParameter(valid_21626496, JString, required = false,
                                   default = nil)
  if valid_21626496 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626496
  var valid_21626497 = header.getOrDefault("X-Amz-Credential")
  valid_21626497 = validateParameter(valid_21626497, JString, required = false,
                                   default = nil)
  if valid_21626497 != nil:
    section.add "X-Amz-Credential", valid_21626497
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626498: Call_GetDeleteLifecycleHook_21626484;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
  ## 
  let valid = call_21626498.validator(path, query, header, formData, body, _)
  let scheme = call_21626498.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626498.makeUrl(scheme.get, call_21626498.host, call_21626498.base,
                               call_21626498.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626498, uri, valid, _)

proc call*(call_21626499: Call_GetDeleteLifecycleHook_21626484;
          AutoScalingGroupName: string; LifecycleHookName: string;
          Action: string = "DeleteLifecycleHook"; Version: string = "2011-01-01"): Recallable =
  ## getDeleteLifecycleHook
  ## <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   Version: string (required)
  var query_21626500 = newJObject()
  add(query_21626500, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626500, "Action", newJString(Action))
  add(query_21626500, "LifecycleHookName", newJString(LifecycleHookName))
  add(query_21626500, "Version", newJString(Version))
  result = call_21626499.call(nil, query_21626500, nil, nil, nil)

var getDeleteLifecycleHook* = Call_GetDeleteLifecycleHook_21626484(
    name: "getDeleteLifecycleHook", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DeleteLifecycleHook",
    validator: validate_GetDeleteLifecycleHook_21626485, base: "/",
    makeUrl: url_GetDeleteLifecycleHook_21626486,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteNotificationConfiguration_21626536 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteNotificationConfiguration_21626538(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteNotificationConfiguration_21626537(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Deletes the specified notification.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626539 = query.getOrDefault("Action")
  valid_21626539 = validateParameter(valid_21626539, JString, required = true, default = newJString(
      "DeleteNotificationConfiguration"))
  if valid_21626539 != nil:
    section.add "Action", valid_21626539
  var valid_21626540 = query.getOrDefault("Version")
  valid_21626540 = validateParameter(valid_21626540, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626540 != nil:
    section.add "Version", valid_21626540
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626541 = header.getOrDefault("X-Amz-Date")
  valid_21626541 = validateParameter(valid_21626541, JString, required = false,
                                   default = nil)
  if valid_21626541 != nil:
    section.add "X-Amz-Date", valid_21626541
  var valid_21626542 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626542 = validateParameter(valid_21626542, JString, required = false,
                                   default = nil)
  if valid_21626542 != nil:
    section.add "X-Amz-Security-Token", valid_21626542
  var valid_21626543 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626543 = validateParameter(valid_21626543, JString, required = false,
                                   default = nil)
  if valid_21626543 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626543
  var valid_21626544 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626544 = validateParameter(valid_21626544, JString, required = false,
                                   default = nil)
  if valid_21626544 != nil:
    section.add "X-Amz-Algorithm", valid_21626544
  var valid_21626545 = header.getOrDefault("X-Amz-Signature")
  valid_21626545 = validateParameter(valid_21626545, JString, required = false,
                                   default = nil)
  if valid_21626545 != nil:
    section.add "X-Amz-Signature", valid_21626545
  var valid_21626546 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626546 = validateParameter(valid_21626546, JString, required = false,
                                   default = nil)
  if valid_21626546 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626546
  var valid_21626547 = header.getOrDefault("X-Amz-Credential")
  valid_21626547 = validateParameter(valid_21626547, JString, required = false,
                                   default = nil)
  if valid_21626547 != nil:
    section.add "X-Amz-Credential", valid_21626547
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   TopicARN: JString (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626548 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626548 = validateParameter(valid_21626548, JString, required = true,
                                   default = nil)
  if valid_21626548 != nil:
    section.add "AutoScalingGroupName", valid_21626548
  var valid_21626549 = formData.getOrDefault("TopicARN")
  valid_21626549 = validateParameter(valid_21626549, JString, required = true,
                                   default = nil)
  if valid_21626549 != nil:
    section.add "TopicARN", valid_21626549
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626550: Call_PostDeleteNotificationConfiguration_21626536;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the specified notification.
  ## 
  let valid = call_21626550.validator(path, query, header, formData, body, _)
  let scheme = call_21626550.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626550.makeUrl(scheme.get, call_21626550.host, call_21626550.base,
                               call_21626550.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626550, uri, valid, _)

proc call*(call_21626551: Call_PostDeleteNotificationConfiguration_21626536;
          AutoScalingGroupName: string; TopicARN: string;
          Action: string = "DeleteNotificationConfiguration";
          Version: string = "2011-01-01"): Recallable =
  ## postDeleteNotificationConfiguration
  ## Deletes the specified notification.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   TopicARN: string (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626552 = newJObject()
  var formData_21626553 = newJObject()
  add(formData_21626553, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21626553, "TopicARN", newJString(TopicARN))
  add(query_21626552, "Action", newJString(Action))
  add(query_21626552, "Version", newJString(Version))
  result = call_21626551.call(nil, query_21626552, nil, formData_21626553, nil)

var postDeleteNotificationConfiguration* = Call_PostDeleteNotificationConfiguration_21626536(
    name: "postDeleteNotificationConfiguration", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DeleteNotificationConfiguration",
    validator: validate_PostDeleteNotificationConfiguration_21626537, base: "/",
    makeUrl: url_PostDeleteNotificationConfiguration_21626538,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteNotificationConfiguration_21626519 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteNotificationConfiguration_21626521(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteNotificationConfiguration_21626520(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Deletes the specified notification.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   TopicARN: JString (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626522 = query.getOrDefault("AutoScalingGroupName")
  valid_21626522 = validateParameter(valid_21626522, JString, required = true,
                                   default = nil)
  if valid_21626522 != nil:
    section.add "AutoScalingGroupName", valid_21626522
  var valid_21626523 = query.getOrDefault("Action")
  valid_21626523 = validateParameter(valid_21626523, JString, required = true, default = newJString(
      "DeleteNotificationConfiguration"))
  if valid_21626523 != nil:
    section.add "Action", valid_21626523
  var valid_21626524 = query.getOrDefault("TopicARN")
  valid_21626524 = validateParameter(valid_21626524, JString, required = true,
                                   default = nil)
  if valid_21626524 != nil:
    section.add "TopicARN", valid_21626524
  var valid_21626525 = query.getOrDefault("Version")
  valid_21626525 = validateParameter(valid_21626525, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626525 != nil:
    section.add "Version", valid_21626525
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626526 = header.getOrDefault("X-Amz-Date")
  valid_21626526 = validateParameter(valid_21626526, JString, required = false,
                                   default = nil)
  if valid_21626526 != nil:
    section.add "X-Amz-Date", valid_21626526
  var valid_21626527 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626527 = validateParameter(valid_21626527, JString, required = false,
                                   default = nil)
  if valid_21626527 != nil:
    section.add "X-Amz-Security-Token", valid_21626527
  var valid_21626528 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626528 = validateParameter(valid_21626528, JString, required = false,
                                   default = nil)
  if valid_21626528 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626528
  var valid_21626529 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626529 = validateParameter(valid_21626529, JString, required = false,
                                   default = nil)
  if valid_21626529 != nil:
    section.add "X-Amz-Algorithm", valid_21626529
  var valid_21626530 = header.getOrDefault("X-Amz-Signature")
  valid_21626530 = validateParameter(valid_21626530, JString, required = false,
                                   default = nil)
  if valid_21626530 != nil:
    section.add "X-Amz-Signature", valid_21626530
  var valid_21626531 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626531 = validateParameter(valid_21626531, JString, required = false,
                                   default = nil)
  if valid_21626531 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626531
  var valid_21626532 = header.getOrDefault("X-Amz-Credential")
  valid_21626532 = validateParameter(valid_21626532, JString, required = false,
                                   default = nil)
  if valid_21626532 != nil:
    section.add "X-Amz-Credential", valid_21626532
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626533: Call_GetDeleteNotificationConfiguration_21626519;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the specified notification.
  ## 
  let valid = call_21626533.validator(path, query, header, formData, body, _)
  let scheme = call_21626533.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626533.makeUrl(scheme.get, call_21626533.host, call_21626533.base,
                               call_21626533.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626533, uri, valid, _)

proc call*(call_21626534: Call_GetDeleteNotificationConfiguration_21626519;
          AutoScalingGroupName: string; TopicARN: string;
          Action: string = "DeleteNotificationConfiguration";
          Version: string = "2011-01-01"): Recallable =
  ## getDeleteNotificationConfiguration
  ## Deletes the specified notification.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   TopicARN: string (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  ##   Version: string (required)
  var query_21626535 = newJObject()
  add(query_21626535, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626535, "Action", newJString(Action))
  add(query_21626535, "TopicARN", newJString(TopicARN))
  add(query_21626535, "Version", newJString(Version))
  result = call_21626534.call(nil, query_21626535, nil, nil, nil)

var getDeleteNotificationConfiguration* = Call_GetDeleteNotificationConfiguration_21626519(
    name: "getDeleteNotificationConfiguration", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DeleteNotificationConfiguration",
    validator: validate_GetDeleteNotificationConfiguration_21626520, base: "/",
    makeUrl: url_GetDeleteNotificationConfiguration_21626521,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeletePolicy_21626571 = ref object of OpenApiRestCall_21625435
proc url_PostDeletePolicy_21626573(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeletePolicy_21626572(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626574 = query.getOrDefault("Action")
  valid_21626574 = validateParameter(valid_21626574, JString, required = true,
                                   default = newJString("DeletePolicy"))
  if valid_21626574 != nil:
    section.add "Action", valid_21626574
  var valid_21626575 = query.getOrDefault("Version")
  valid_21626575 = validateParameter(valid_21626575, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626575 != nil:
    section.add "Version", valid_21626575
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626576 = header.getOrDefault("X-Amz-Date")
  valid_21626576 = validateParameter(valid_21626576, JString, required = false,
                                   default = nil)
  if valid_21626576 != nil:
    section.add "X-Amz-Date", valid_21626576
  var valid_21626577 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626577 = validateParameter(valid_21626577, JString, required = false,
                                   default = nil)
  if valid_21626577 != nil:
    section.add "X-Amz-Security-Token", valid_21626577
  var valid_21626578 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626578 = validateParameter(valid_21626578, JString, required = false,
                                   default = nil)
  if valid_21626578 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626578
  var valid_21626579 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626579 = validateParameter(valid_21626579, JString, required = false,
                                   default = nil)
  if valid_21626579 != nil:
    section.add "X-Amz-Algorithm", valid_21626579
  var valid_21626580 = header.getOrDefault("X-Amz-Signature")
  valid_21626580 = validateParameter(valid_21626580, JString, required = false,
                                   default = nil)
  if valid_21626580 != nil:
    section.add "X-Amz-Signature", valid_21626580
  var valid_21626581 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626581 = validateParameter(valid_21626581, JString, required = false,
                                   default = nil)
  if valid_21626581 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626581
  var valid_21626582 = header.getOrDefault("X-Amz-Credential")
  valid_21626582 = validateParameter(valid_21626582, JString, required = false,
                                   default = nil)
  if valid_21626582 != nil:
    section.add "X-Amz-Credential", valid_21626582
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   PolicyName: JString (required)
  ##             : The name or Amazon Resource Name (ARN) of the policy.
  section = newJObject()
  var valid_21626583 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626583 = validateParameter(valid_21626583, JString, required = false,
                                   default = nil)
  if valid_21626583 != nil:
    section.add "AutoScalingGroupName", valid_21626583
  assert formData != nil,
        "formData argument is necessary due to required `PolicyName` field"
  var valid_21626584 = formData.getOrDefault("PolicyName")
  valid_21626584 = validateParameter(valid_21626584, JString, required = true,
                                   default = nil)
  if valid_21626584 != nil:
    section.add "PolicyName", valid_21626584
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626585: Call_PostDeletePolicy_21626571; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626585.validator(path, query, header, formData, body, _)
  let scheme = call_21626585.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626585.makeUrl(scheme.get, call_21626585.host, call_21626585.base,
                               call_21626585.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626585, uri, valid, _)

proc call*(call_21626586: Call_PostDeletePolicy_21626571; PolicyName: string;
          AutoScalingGroupName: string = ""; Action: string = "DeletePolicy";
          Version: string = "2011-01-01"): Recallable =
  ## postDeletePolicy
  ## <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   PolicyName: string (required)
  ##             : The name or Amazon Resource Name (ARN) of the policy.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626587 = newJObject()
  var formData_21626588 = newJObject()
  add(formData_21626588, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21626588, "PolicyName", newJString(PolicyName))
  add(query_21626587, "Action", newJString(Action))
  add(query_21626587, "Version", newJString(Version))
  result = call_21626586.call(nil, query_21626587, nil, formData_21626588, nil)

var postDeletePolicy* = Call_PostDeletePolicy_21626571(name: "postDeletePolicy",
    meth: HttpMethod.HttpPost, host: "autoscaling.amazonaws.com",
    route: "/#Action=DeletePolicy", validator: validate_PostDeletePolicy_21626572,
    base: "/", makeUrl: url_PostDeletePolicy_21626573,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeletePolicy_21626554 = ref object of OpenApiRestCall_21625435
proc url_GetDeletePolicy_21626556(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeletePolicy_21626555(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   PolicyName: JString (required)
  ##             : The name or Amazon Resource Name (ARN) of the policy.
  section = newJObject()
  var valid_21626557 = query.getOrDefault("AutoScalingGroupName")
  valid_21626557 = validateParameter(valid_21626557, JString, required = false,
                                   default = nil)
  if valid_21626557 != nil:
    section.add "AutoScalingGroupName", valid_21626557
  var valid_21626558 = query.getOrDefault("Action")
  valid_21626558 = validateParameter(valid_21626558, JString, required = true,
                                   default = newJString("DeletePolicy"))
  if valid_21626558 != nil:
    section.add "Action", valid_21626558
  var valid_21626559 = query.getOrDefault("Version")
  valid_21626559 = validateParameter(valid_21626559, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626559 != nil:
    section.add "Version", valid_21626559
  var valid_21626560 = query.getOrDefault("PolicyName")
  valid_21626560 = validateParameter(valid_21626560, JString, required = true,
                                   default = nil)
  if valid_21626560 != nil:
    section.add "PolicyName", valid_21626560
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626561 = header.getOrDefault("X-Amz-Date")
  valid_21626561 = validateParameter(valid_21626561, JString, required = false,
                                   default = nil)
  if valid_21626561 != nil:
    section.add "X-Amz-Date", valid_21626561
  var valid_21626562 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626562 = validateParameter(valid_21626562, JString, required = false,
                                   default = nil)
  if valid_21626562 != nil:
    section.add "X-Amz-Security-Token", valid_21626562
  var valid_21626563 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626563 = validateParameter(valid_21626563, JString, required = false,
                                   default = nil)
  if valid_21626563 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626563
  var valid_21626564 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626564 = validateParameter(valid_21626564, JString, required = false,
                                   default = nil)
  if valid_21626564 != nil:
    section.add "X-Amz-Algorithm", valid_21626564
  var valid_21626565 = header.getOrDefault("X-Amz-Signature")
  valid_21626565 = validateParameter(valid_21626565, JString, required = false,
                                   default = nil)
  if valid_21626565 != nil:
    section.add "X-Amz-Signature", valid_21626565
  var valid_21626566 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626566 = validateParameter(valid_21626566, JString, required = false,
                                   default = nil)
  if valid_21626566 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626566
  var valid_21626567 = header.getOrDefault("X-Amz-Credential")
  valid_21626567 = validateParameter(valid_21626567, JString, required = false,
                                   default = nil)
  if valid_21626567 != nil:
    section.add "X-Amz-Credential", valid_21626567
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626568: Call_GetDeletePolicy_21626554; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626568.validator(path, query, header, formData, body, _)
  let scheme = call_21626568.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626568.makeUrl(scheme.get, call_21626568.host, call_21626568.base,
                               call_21626568.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626568, uri, valid, _)

proc call*(call_21626569: Call_GetDeletePolicy_21626554; PolicyName: string;
          AutoScalingGroupName: string = ""; Action: string = "DeletePolicy";
          Version: string = "2011-01-01"): Recallable =
  ## getDeletePolicy
  ## <p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   PolicyName: string (required)
  ##             : The name or Amazon Resource Name (ARN) of the policy.
  var query_21626570 = newJObject()
  add(query_21626570, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626570, "Action", newJString(Action))
  add(query_21626570, "Version", newJString(Version))
  add(query_21626570, "PolicyName", newJString(PolicyName))
  result = call_21626569.call(nil, query_21626570, nil, nil, nil)

var getDeletePolicy* = Call_GetDeletePolicy_21626554(name: "getDeletePolicy",
    meth: HttpMethod.HttpGet, host: "autoscaling.amazonaws.com",
    route: "/#Action=DeletePolicy", validator: validate_GetDeletePolicy_21626555,
    base: "/", makeUrl: url_GetDeletePolicy_21626556,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteScheduledAction_21626606 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteScheduledAction_21626608(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteScheduledAction_21626607(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes the specified scheduled action.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626609 = query.getOrDefault("Action")
  valid_21626609 = validateParameter(valid_21626609, JString, required = true, default = newJString(
      "DeleteScheduledAction"))
  if valid_21626609 != nil:
    section.add "Action", valid_21626609
  var valid_21626610 = query.getOrDefault("Version")
  valid_21626610 = validateParameter(valid_21626610, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626610 != nil:
    section.add "Version", valid_21626610
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626611 = header.getOrDefault("X-Amz-Date")
  valid_21626611 = validateParameter(valid_21626611, JString, required = false,
                                   default = nil)
  if valid_21626611 != nil:
    section.add "X-Amz-Date", valid_21626611
  var valid_21626612 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626612 = validateParameter(valid_21626612, JString, required = false,
                                   default = nil)
  if valid_21626612 != nil:
    section.add "X-Amz-Security-Token", valid_21626612
  var valid_21626613 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626613 = validateParameter(valid_21626613, JString, required = false,
                                   default = nil)
  if valid_21626613 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626613
  var valid_21626614 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626614 = validateParameter(valid_21626614, JString, required = false,
                                   default = nil)
  if valid_21626614 != nil:
    section.add "X-Amz-Algorithm", valid_21626614
  var valid_21626615 = header.getOrDefault("X-Amz-Signature")
  valid_21626615 = validateParameter(valid_21626615, JString, required = false,
                                   default = nil)
  if valid_21626615 != nil:
    section.add "X-Amz-Signature", valid_21626615
  var valid_21626616 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626616 = validateParameter(valid_21626616, JString, required = false,
                                   default = nil)
  if valid_21626616 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626616
  var valid_21626617 = header.getOrDefault("X-Amz-Credential")
  valid_21626617 = validateParameter(valid_21626617, JString, required = false,
                                   default = nil)
  if valid_21626617 != nil:
    section.add "X-Amz-Credential", valid_21626617
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScheduledActionName: JString (required)
  ##                      : The name of the action to delete.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626618 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626618 = validateParameter(valid_21626618, JString, required = true,
                                   default = nil)
  if valid_21626618 != nil:
    section.add "AutoScalingGroupName", valid_21626618
  var valid_21626619 = formData.getOrDefault("ScheduledActionName")
  valid_21626619 = validateParameter(valid_21626619, JString, required = true,
                                   default = nil)
  if valid_21626619 != nil:
    section.add "ScheduledActionName", valid_21626619
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626620: Call_PostDeleteScheduledAction_21626606;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the specified scheduled action.
  ## 
  let valid = call_21626620.validator(path, query, header, formData, body, _)
  let scheme = call_21626620.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626620.makeUrl(scheme.get, call_21626620.host, call_21626620.base,
                               call_21626620.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626620, uri, valid, _)

proc call*(call_21626621: Call_PostDeleteScheduledAction_21626606;
          AutoScalingGroupName: string; ScheduledActionName: string;
          Action: string = "DeleteScheduledAction"; Version: string = "2011-01-01"): Recallable =
  ## postDeleteScheduledAction
  ## Deletes the specified scheduled action.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   ScheduledActionName: string (required)
  ##                      : The name of the action to delete.
  ##   Version: string (required)
  var query_21626622 = newJObject()
  var formData_21626623 = newJObject()
  add(formData_21626623, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626622, "Action", newJString(Action))
  add(formData_21626623, "ScheduledActionName", newJString(ScheduledActionName))
  add(query_21626622, "Version", newJString(Version))
  result = call_21626621.call(nil, query_21626622, nil, formData_21626623, nil)

var postDeleteScheduledAction* = Call_PostDeleteScheduledAction_21626606(
    name: "postDeleteScheduledAction", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DeleteScheduledAction",
    validator: validate_PostDeleteScheduledAction_21626607, base: "/",
    makeUrl: url_PostDeleteScheduledAction_21626608,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteScheduledAction_21626589 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteScheduledAction_21626591(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteScheduledAction_21626590(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes the specified scheduled action.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ScheduledActionName: JString (required)
  ##                      : The name of the action to delete.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `ScheduledActionName` field"
  var valid_21626592 = query.getOrDefault("ScheduledActionName")
  valid_21626592 = validateParameter(valid_21626592, JString, required = true,
                                   default = nil)
  if valid_21626592 != nil:
    section.add "ScheduledActionName", valid_21626592
  var valid_21626593 = query.getOrDefault("AutoScalingGroupName")
  valid_21626593 = validateParameter(valid_21626593, JString, required = true,
                                   default = nil)
  if valid_21626593 != nil:
    section.add "AutoScalingGroupName", valid_21626593
  var valid_21626594 = query.getOrDefault("Action")
  valid_21626594 = validateParameter(valid_21626594, JString, required = true, default = newJString(
      "DeleteScheduledAction"))
  if valid_21626594 != nil:
    section.add "Action", valid_21626594
  var valid_21626595 = query.getOrDefault("Version")
  valid_21626595 = validateParameter(valid_21626595, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626595 != nil:
    section.add "Version", valid_21626595
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626596 = header.getOrDefault("X-Amz-Date")
  valid_21626596 = validateParameter(valid_21626596, JString, required = false,
                                   default = nil)
  if valid_21626596 != nil:
    section.add "X-Amz-Date", valid_21626596
  var valid_21626597 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626597 = validateParameter(valid_21626597, JString, required = false,
                                   default = nil)
  if valid_21626597 != nil:
    section.add "X-Amz-Security-Token", valid_21626597
  var valid_21626598 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626598 = validateParameter(valid_21626598, JString, required = false,
                                   default = nil)
  if valid_21626598 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626598
  var valid_21626599 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626599 = validateParameter(valid_21626599, JString, required = false,
                                   default = nil)
  if valid_21626599 != nil:
    section.add "X-Amz-Algorithm", valid_21626599
  var valid_21626600 = header.getOrDefault("X-Amz-Signature")
  valid_21626600 = validateParameter(valid_21626600, JString, required = false,
                                   default = nil)
  if valid_21626600 != nil:
    section.add "X-Amz-Signature", valid_21626600
  var valid_21626601 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626601 = validateParameter(valid_21626601, JString, required = false,
                                   default = nil)
  if valid_21626601 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626601
  var valid_21626602 = header.getOrDefault("X-Amz-Credential")
  valid_21626602 = validateParameter(valid_21626602, JString, required = false,
                                   default = nil)
  if valid_21626602 != nil:
    section.add "X-Amz-Credential", valid_21626602
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626603: Call_GetDeleteScheduledAction_21626589;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the specified scheduled action.
  ## 
  let valid = call_21626603.validator(path, query, header, formData, body, _)
  let scheme = call_21626603.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626603.makeUrl(scheme.get, call_21626603.host, call_21626603.base,
                               call_21626603.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626603, uri, valid, _)

proc call*(call_21626604: Call_GetDeleteScheduledAction_21626589;
          ScheduledActionName: string; AutoScalingGroupName: string;
          Action: string = "DeleteScheduledAction"; Version: string = "2011-01-01"): Recallable =
  ## getDeleteScheduledAction
  ## Deletes the specified scheduled action.
  ##   ScheduledActionName: string (required)
  ##                      : The name of the action to delete.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626605 = newJObject()
  add(query_21626605, "ScheduledActionName", newJString(ScheduledActionName))
  add(query_21626605, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626605, "Action", newJString(Action))
  add(query_21626605, "Version", newJString(Version))
  result = call_21626604.call(nil, query_21626605, nil, nil, nil)

var getDeleteScheduledAction* = Call_GetDeleteScheduledAction_21626589(
    name: "getDeleteScheduledAction", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DeleteScheduledAction",
    validator: validate_GetDeleteScheduledAction_21626590, base: "/",
    makeUrl: url_GetDeleteScheduledAction_21626591,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteTags_21626640 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteTags_21626642(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteTags_21626641(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes the specified tags.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626643 = query.getOrDefault("Action")
  valid_21626643 = validateParameter(valid_21626643, JString, required = true,
                                   default = newJString("DeleteTags"))
  if valid_21626643 != nil:
    section.add "Action", valid_21626643
  var valid_21626644 = query.getOrDefault("Version")
  valid_21626644 = validateParameter(valid_21626644, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626644 != nil:
    section.add "Version", valid_21626644
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626645 = header.getOrDefault("X-Amz-Date")
  valid_21626645 = validateParameter(valid_21626645, JString, required = false,
                                   default = nil)
  if valid_21626645 != nil:
    section.add "X-Amz-Date", valid_21626645
  var valid_21626646 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626646 = validateParameter(valid_21626646, JString, required = false,
                                   default = nil)
  if valid_21626646 != nil:
    section.add "X-Amz-Security-Token", valid_21626646
  var valid_21626647 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626647 = validateParameter(valid_21626647, JString, required = false,
                                   default = nil)
  if valid_21626647 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626647
  var valid_21626648 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626648 = validateParameter(valid_21626648, JString, required = false,
                                   default = nil)
  if valid_21626648 != nil:
    section.add "X-Amz-Algorithm", valid_21626648
  var valid_21626649 = header.getOrDefault("X-Amz-Signature")
  valid_21626649 = validateParameter(valid_21626649, JString, required = false,
                                   default = nil)
  if valid_21626649 != nil:
    section.add "X-Amz-Signature", valid_21626649
  var valid_21626650 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626650 = validateParameter(valid_21626650, JString, required = false,
                                   default = nil)
  if valid_21626650 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626650
  var valid_21626651 = header.getOrDefault("X-Amz-Credential")
  valid_21626651 = validateParameter(valid_21626651, JString, required = false,
                                   default = nil)
  if valid_21626651 != nil:
    section.add "X-Amz-Credential", valid_21626651
  result.add "header", section
  ## parameters in `formData` object:
  ##   Tags: JArray (required)
  ##       : One or more tags.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `Tags` field"
  var valid_21626652 = formData.getOrDefault("Tags")
  valid_21626652 = validateParameter(valid_21626652, JArray, required = true,
                                   default = nil)
  if valid_21626652 != nil:
    section.add "Tags", valid_21626652
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626653: Call_PostDeleteTags_21626640; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the specified tags.
  ## 
  let valid = call_21626653.validator(path, query, header, formData, body, _)
  let scheme = call_21626653.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626653.makeUrl(scheme.get, call_21626653.host, call_21626653.base,
                               call_21626653.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626653, uri, valid, _)

proc call*(call_21626654: Call_PostDeleteTags_21626640; Tags: JsonNode;
          Action: string = "DeleteTags"; Version: string = "2011-01-01"): Recallable =
  ## postDeleteTags
  ## Deletes the specified tags.
  ##   Tags: JArray (required)
  ##       : One or more tags.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626655 = newJObject()
  var formData_21626656 = newJObject()
  if Tags != nil:
    formData_21626656.add "Tags", Tags
  add(query_21626655, "Action", newJString(Action))
  add(query_21626655, "Version", newJString(Version))
  result = call_21626654.call(nil, query_21626655, nil, formData_21626656, nil)

var postDeleteTags* = Call_PostDeleteTags_21626640(name: "postDeleteTags",
    meth: HttpMethod.HttpPost, host: "autoscaling.amazonaws.com",
    route: "/#Action=DeleteTags", validator: validate_PostDeleteTags_21626641,
    base: "/", makeUrl: url_PostDeleteTags_21626642,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteTags_21626624 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteTags_21626626(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteTags_21626625(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode; _: string = ""): JsonNode {.nosinks.} =
  ## Deletes the specified tags.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Tags: JArray (required)
  ##       : One or more tags.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Tags` field"
  var valid_21626627 = query.getOrDefault("Tags")
  valid_21626627 = validateParameter(valid_21626627, JArray, required = true,
                                   default = nil)
  if valid_21626627 != nil:
    section.add "Tags", valid_21626627
  var valid_21626628 = query.getOrDefault("Action")
  valid_21626628 = validateParameter(valid_21626628, JString, required = true,
                                   default = newJString("DeleteTags"))
  if valid_21626628 != nil:
    section.add "Action", valid_21626628
  var valid_21626629 = query.getOrDefault("Version")
  valid_21626629 = validateParameter(valid_21626629, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626629 != nil:
    section.add "Version", valid_21626629
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626630 = header.getOrDefault("X-Amz-Date")
  valid_21626630 = validateParameter(valid_21626630, JString, required = false,
                                   default = nil)
  if valid_21626630 != nil:
    section.add "X-Amz-Date", valid_21626630
  var valid_21626631 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626631 = validateParameter(valid_21626631, JString, required = false,
                                   default = nil)
  if valid_21626631 != nil:
    section.add "X-Amz-Security-Token", valid_21626631
  var valid_21626632 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626632 = validateParameter(valid_21626632, JString, required = false,
                                   default = nil)
  if valid_21626632 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626632
  var valid_21626633 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626633 = validateParameter(valid_21626633, JString, required = false,
                                   default = nil)
  if valid_21626633 != nil:
    section.add "X-Amz-Algorithm", valid_21626633
  var valid_21626634 = header.getOrDefault("X-Amz-Signature")
  valid_21626634 = validateParameter(valid_21626634, JString, required = false,
                                   default = nil)
  if valid_21626634 != nil:
    section.add "X-Amz-Signature", valid_21626634
  var valid_21626635 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626635 = validateParameter(valid_21626635, JString, required = false,
                                   default = nil)
  if valid_21626635 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626635
  var valid_21626636 = header.getOrDefault("X-Amz-Credential")
  valid_21626636 = validateParameter(valid_21626636, JString, required = false,
                                   default = nil)
  if valid_21626636 != nil:
    section.add "X-Amz-Credential", valid_21626636
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626637: Call_GetDeleteTags_21626624; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the specified tags.
  ## 
  let valid = call_21626637.validator(path, query, header, formData, body, _)
  let scheme = call_21626637.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626637.makeUrl(scheme.get, call_21626637.host, call_21626637.base,
                               call_21626637.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626637, uri, valid, _)

proc call*(call_21626638: Call_GetDeleteTags_21626624; Tags: JsonNode;
          Action: string = "DeleteTags"; Version: string = "2011-01-01"): Recallable =
  ## getDeleteTags
  ## Deletes the specified tags.
  ##   Tags: JArray (required)
  ##       : One or more tags.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626639 = newJObject()
  if Tags != nil:
    query_21626639.add "Tags", Tags
  add(query_21626639, "Action", newJString(Action))
  add(query_21626639, "Version", newJString(Version))
  result = call_21626638.call(nil, query_21626639, nil, nil, nil)

var getDeleteTags* = Call_GetDeleteTags_21626624(name: "getDeleteTags",
    meth: HttpMethod.HttpGet, host: "autoscaling.amazonaws.com",
    route: "/#Action=DeleteTags", validator: validate_GetDeleteTags_21626625,
    base: "/", makeUrl: url_GetDeleteTags_21626626,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAccountLimits_21626672 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeAccountLimits_21626674(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAccountLimits_21626673(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.</p> <p>For information about requesting an increase, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626675 = query.getOrDefault("Action")
  valid_21626675 = validateParameter(valid_21626675, JString, required = true, default = newJString(
      "DescribeAccountLimits"))
  if valid_21626675 != nil:
    section.add "Action", valid_21626675
  var valid_21626676 = query.getOrDefault("Version")
  valid_21626676 = validateParameter(valid_21626676, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626676 != nil:
    section.add "Version", valid_21626676
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626677 = header.getOrDefault("X-Amz-Date")
  valid_21626677 = validateParameter(valid_21626677, JString, required = false,
                                   default = nil)
  if valid_21626677 != nil:
    section.add "X-Amz-Date", valid_21626677
  var valid_21626678 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626678 = validateParameter(valid_21626678, JString, required = false,
                                   default = nil)
  if valid_21626678 != nil:
    section.add "X-Amz-Security-Token", valid_21626678
  var valid_21626679 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626679 = validateParameter(valid_21626679, JString, required = false,
                                   default = nil)
  if valid_21626679 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626679
  var valid_21626680 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626680 = validateParameter(valid_21626680, JString, required = false,
                                   default = nil)
  if valid_21626680 != nil:
    section.add "X-Amz-Algorithm", valid_21626680
  var valid_21626681 = header.getOrDefault("X-Amz-Signature")
  valid_21626681 = validateParameter(valid_21626681, JString, required = false,
                                   default = nil)
  if valid_21626681 != nil:
    section.add "X-Amz-Signature", valid_21626681
  var valid_21626682 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626682 = validateParameter(valid_21626682, JString, required = false,
                                   default = nil)
  if valid_21626682 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626682
  var valid_21626683 = header.getOrDefault("X-Amz-Credential")
  valid_21626683 = validateParameter(valid_21626683, JString, required = false,
                                   default = nil)
  if valid_21626683 != nil:
    section.add "X-Amz-Credential", valid_21626683
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626684: Call_PostDescribeAccountLimits_21626672;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.</p> <p>For information about requesting an increase, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626684.validator(path, query, header, formData, body, _)
  let scheme = call_21626684.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626684.makeUrl(scheme.get, call_21626684.host, call_21626684.base,
                               call_21626684.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626684, uri, valid, _)

proc call*(call_21626685: Call_PostDescribeAccountLimits_21626672;
          Action: string = "DescribeAccountLimits"; Version: string = "2011-01-01"): Recallable =
  ## postDescribeAccountLimits
  ## <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.</p> <p>For information about requesting an increase, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626686 = newJObject()
  add(query_21626686, "Action", newJString(Action))
  add(query_21626686, "Version", newJString(Version))
  result = call_21626685.call(nil, query_21626686, nil, nil, nil)

var postDescribeAccountLimits* = Call_PostDescribeAccountLimits_21626672(
    name: "postDescribeAccountLimits", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_PostDescribeAccountLimits_21626673, base: "/",
    makeUrl: url_PostDescribeAccountLimits_21626674,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAccountLimits_21626657 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeAccountLimits_21626659(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAccountLimits_21626658(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.</p> <p>For information about requesting an increase, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626660 = query.getOrDefault("Action")
  valid_21626660 = validateParameter(valid_21626660, JString, required = true, default = newJString(
      "DescribeAccountLimits"))
  if valid_21626660 != nil:
    section.add "Action", valid_21626660
  var valid_21626661 = query.getOrDefault("Version")
  valid_21626661 = validateParameter(valid_21626661, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626661 != nil:
    section.add "Version", valid_21626661
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626662 = header.getOrDefault("X-Amz-Date")
  valid_21626662 = validateParameter(valid_21626662, JString, required = false,
                                   default = nil)
  if valid_21626662 != nil:
    section.add "X-Amz-Date", valid_21626662
  var valid_21626663 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626663 = validateParameter(valid_21626663, JString, required = false,
                                   default = nil)
  if valid_21626663 != nil:
    section.add "X-Amz-Security-Token", valid_21626663
  var valid_21626664 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626664 = validateParameter(valid_21626664, JString, required = false,
                                   default = nil)
  if valid_21626664 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626664
  var valid_21626665 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626665 = validateParameter(valid_21626665, JString, required = false,
                                   default = nil)
  if valid_21626665 != nil:
    section.add "X-Amz-Algorithm", valid_21626665
  var valid_21626666 = header.getOrDefault("X-Amz-Signature")
  valid_21626666 = validateParameter(valid_21626666, JString, required = false,
                                   default = nil)
  if valid_21626666 != nil:
    section.add "X-Amz-Signature", valid_21626666
  var valid_21626667 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626667 = validateParameter(valid_21626667, JString, required = false,
                                   default = nil)
  if valid_21626667 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626667
  var valid_21626668 = header.getOrDefault("X-Amz-Credential")
  valid_21626668 = validateParameter(valid_21626668, JString, required = false,
                                   default = nil)
  if valid_21626668 != nil:
    section.add "X-Amz-Credential", valid_21626668
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626669: Call_GetDescribeAccountLimits_21626657;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.</p> <p>For information about requesting an increase, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21626669.validator(path, query, header, formData, body, _)
  let scheme = call_21626669.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626669.makeUrl(scheme.get, call_21626669.host, call_21626669.base,
                               call_21626669.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626669, uri, valid, _)

proc call*(call_21626670: Call_GetDescribeAccountLimits_21626657;
          Action: string = "DescribeAccountLimits"; Version: string = "2011-01-01"): Recallable =
  ## getDescribeAccountLimits
  ## <p>Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.</p> <p>For information about requesting an increase, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626671 = newJObject()
  add(query_21626671, "Action", newJString(Action))
  add(query_21626671, "Version", newJString(Version))
  result = call_21626670.call(nil, query_21626671, nil, nil, nil)

var getDescribeAccountLimits* = Call_GetDescribeAccountLimits_21626657(
    name: "getDescribeAccountLimits", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_GetDescribeAccountLimits_21626658, base: "/",
    makeUrl: url_GetDescribeAccountLimits_21626659,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAdjustmentTypes_21626702 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeAdjustmentTypes_21626704(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAdjustmentTypes_21626703(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the policy adjustment types for use with <a>PutScalingPolicy</a>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626705 = query.getOrDefault("Action")
  valid_21626705 = validateParameter(valid_21626705, JString, required = true, default = newJString(
      "DescribeAdjustmentTypes"))
  if valid_21626705 != nil:
    section.add "Action", valid_21626705
  var valid_21626706 = query.getOrDefault("Version")
  valid_21626706 = validateParameter(valid_21626706, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626706 != nil:
    section.add "Version", valid_21626706
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626707 = header.getOrDefault("X-Amz-Date")
  valid_21626707 = validateParameter(valid_21626707, JString, required = false,
                                   default = nil)
  if valid_21626707 != nil:
    section.add "X-Amz-Date", valid_21626707
  var valid_21626708 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626708 = validateParameter(valid_21626708, JString, required = false,
                                   default = nil)
  if valid_21626708 != nil:
    section.add "X-Amz-Security-Token", valid_21626708
  var valid_21626709 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626709 = validateParameter(valid_21626709, JString, required = false,
                                   default = nil)
  if valid_21626709 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626709
  var valid_21626710 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626710 = validateParameter(valid_21626710, JString, required = false,
                                   default = nil)
  if valid_21626710 != nil:
    section.add "X-Amz-Algorithm", valid_21626710
  var valid_21626711 = header.getOrDefault("X-Amz-Signature")
  valid_21626711 = validateParameter(valid_21626711, JString, required = false,
                                   default = nil)
  if valid_21626711 != nil:
    section.add "X-Amz-Signature", valid_21626711
  var valid_21626712 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626712 = validateParameter(valid_21626712, JString, required = false,
                                   default = nil)
  if valid_21626712 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626712
  var valid_21626713 = header.getOrDefault("X-Amz-Credential")
  valid_21626713 = validateParameter(valid_21626713, JString, required = false,
                                   default = nil)
  if valid_21626713 != nil:
    section.add "X-Amz-Credential", valid_21626713
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626714: Call_PostDescribeAdjustmentTypes_21626702;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the policy adjustment types for use with <a>PutScalingPolicy</a>.
  ## 
  let valid = call_21626714.validator(path, query, header, formData, body, _)
  let scheme = call_21626714.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626714.makeUrl(scheme.get, call_21626714.host, call_21626714.base,
                               call_21626714.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626714, uri, valid, _)

proc call*(call_21626715: Call_PostDescribeAdjustmentTypes_21626702;
          Action: string = "DescribeAdjustmentTypes"; Version: string = "2011-01-01"): Recallable =
  ## postDescribeAdjustmentTypes
  ## Describes the policy adjustment types for use with <a>PutScalingPolicy</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626716 = newJObject()
  add(query_21626716, "Action", newJString(Action))
  add(query_21626716, "Version", newJString(Version))
  result = call_21626715.call(nil, query_21626716, nil, nil, nil)

var postDescribeAdjustmentTypes* = Call_PostDescribeAdjustmentTypes_21626702(
    name: "postDescribeAdjustmentTypes", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeAdjustmentTypes",
    validator: validate_PostDescribeAdjustmentTypes_21626703, base: "/",
    makeUrl: url_PostDescribeAdjustmentTypes_21626704,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAdjustmentTypes_21626687 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeAdjustmentTypes_21626689(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAdjustmentTypes_21626688(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the policy adjustment types for use with <a>PutScalingPolicy</a>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626690 = query.getOrDefault("Action")
  valid_21626690 = validateParameter(valid_21626690, JString, required = true, default = newJString(
      "DescribeAdjustmentTypes"))
  if valid_21626690 != nil:
    section.add "Action", valid_21626690
  var valid_21626691 = query.getOrDefault("Version")
  valid_21626691 = validateParameter(valid_21626691, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626691 != nil:
    section.add "Version", valid_21626691
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626692 = header.getOrDefault("X-Amz-Date")
  valid_21626692 = validateParameter(valid_21626692, JString, required = false,
                                   default = nil)
  if valid_21626692 != nil:
    section.add "X-Amz-Date", valid_21626692
  var valid_21626693 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626693 = validateParameter(valid_21626693, JString, required = false,
                                   default = nil)
  if valid_21626693 != nil:
    section.add "X-Amz-Security-Token", valid_21626693
  var valid_21626694 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626694 = validateParameter(valid_21626694, JString, required = false,
                                   default = nil)
  if valid_21626694 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626694
  var valid_21626695 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626695 = validateParameter(valid_21626695, JString, required = false,
                                   default = nil)
  if valid_21626695 != nil:
    section.add "X-Amz-Algorithm", valid_21626695
  var valid_21626696 = header.getOrDefault("X-Amz-Signature")
  valid_21626696 = validateParameter(valid_21626696, JString, required = false,
                                   default = nil)
  if valid_21626696 != nil:
    section.add "X-Amz-Signature", valid_21626696
  var valid_21626697 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626697 = validateParameter(valid_21626697, JString, required = false,
                                   default = nil)
  if valid_21626697 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626697
  var valid_21626698 = header.getOrDefault("X-Amz-Credential")
  valid_21626698 = validateParameter(valid_21626698, JString, required = false,
                                   default = nil)
  if valid_21626698 != nil:
    section.add "X-Amz-Credential", valid_21626698
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626699: Call_GetDescribeAdjustmentTypes_21626687;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the policy adjustment types for use with <a>PutScalingPolicy</a>.
  ## 
  let valid = call_21626699.validator(path, query, header, formData, body, _)
  let scheme = call_21626699.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626699.makeUrl(scheme.get, call_21626699.host, call_21626699.base,
                               call_21626699.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626699, uri, valid, _)

proc call*(call_21626700: Call_GetDescribeAdjustmentTypes_21626687;
          Action: string = "DescribeAdjustmentTypes"; Version: string = "2011-01-01"): Recallable =
  ## getDescribeAdjustmentTypes
  ## Describes the policy adjustment types for use with <a>PutScalingPolicy</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626701 = newJObject()
  add(query_21626701, "Action", newJString(Action))
  add(query_21626701, "Version", newJString(Version))
  result = call_21626700.call(nil, query_21626701, nil, nil, nil)

var getDescribeAdjustmentTypes* = Call_GetDescribeAdjustmentTypes_21626687(
    name: "getDescribeAdjustmentTypes", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeAdjustmentTypes",
    validator: validate_GetDescribeAdjustmentTypes_21626688, base: "/",
    makeUrl: url_GetDescribeAdjustmentTypes_21626689,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAutoScalingGroups_21626735 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeAutoScalingGroups_21626737(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAutoScalingGroups_21626736(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more Auto Scaling groups.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626738 = query.getOrDefault("Action")
  valid_21626738 = validateParameter(valid_21626738, JString, required = true, default = newJString(
      "DescribeAutoScalingGroups"))
  if valid_21626738 != nil:
    section.add "Action", valid_21626738
  var valid_21626739 = query.getOrDefault("Version")
  valid_21626739 = validateParameter(valid_21626739, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626739 != nil:
    section.add "Version", valid_21626739
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626740 = header.getOrDefault("X-Amz-Date")
  valid_21626740 = validateParameter(valid_21626740, JString, required = false,
                                   default = nil)
  if valid_21626740 != nil:
    section.add "X-Amz-Date", valid_21626740
  var valid_21626741 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626741 = validateParameter(valid_21626741, JString, required = false,
                                   default = nil)
  if valid_21626741 != nil:
    section.add "X-Amz-Security-Token", valid_21626741
  var valid_21626742 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626742 = validateParameter(valid_21626742, JString, required = false,
                                   default = nil)
  if valid_21626742 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626742
  var valid_21626743 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626743 = validateParameter(valid_21626743, JString, required = false,
                                   default = nil)
  if valid_21626743 != nil:
    section.add "X-Amz-Algorithm", valid_21626743
  var valid_21626744 = header.getOrDefault("X-Amz-Signature")
  valid_21626744 = validateParameter(valid_21626744, JString, required = false,
                                   default = nil)
  if valid_21626744 != nil:
    section.add "X-Amz-Signature", valid_21626744
  var valid_21626745 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626745 = validateParameter(valid_21626745, JString, required = false,
                                   default = nil)
  if valid_21626745 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626745
  var valid_21626746 = header.getOrDefault("X-Amz-Credential")
  valid_21626746 = validateParameter(valid_21626746, JString, required = false,
                                   default = nil)
  if valid_21626746 != nil:
    section.add "X-Amz-Credential", valid_21626746
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupNames: JArray
  ##                        : <p>The names of the Auto Scaling groups. Each name can be a maximum of 1600 characters. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> parameter.</p> <p>If you omit this parameter, all Auto Scaling groups are described.</p>
  section = newJObject()
  var valid_21626747 = formData.getOrDefault("NextToken")
  valid_21626747 = validateParameter(valid_21626747, JString, required = false,
                                   default = nil)
  if valid_21626747 != nil:
    section.add "NextToken", valid_21626747
  var valid_21626748 = formData.getOrDefault("MaxRecords")
  valid_21626748 = validateParameter(valid_21626748, JInt, required = false,
                                   default = nil)
  if valid_21626748 != nil:
    section.add "MaxRecords", valid_21626748
  var valid_21626749 = formData.getOrDefault("AutoScalingGroupNames")
  valid_21626749 = validateParameter(valid_21626749, JArray, required = false,
                                   default = nil)
  if valid_21626749 != nil:
    section.add "AutoScalingGroupNames", valid_21626749
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626750: Call_PostDescribeAutoScalingGroups_21626735;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more Auto Scaling groups.
  ## 
  let valid = call_21626750.validator(path, query, header, formData, body, _)
  let scheme = call_21626750.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626750.makeUrl(scheme.get, call_21626750.host, call_21626750.base,
                               call_21626750.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626750, uri, valid, _)

proc call*(call_21626751: Call_PostDescribeAutoScalingGroups_21626735;
          NextToken: string = ""; Action: string = "DescribeAutoScalingGroups";
          MaxRecords: int = 0; Version: string = "2011-01-01";
          AutoScalingGroupNames: JsonNode = nil): Recallable =
  ## postDescribeAutoScalingGroups
  ## Describes one or more Auto Scaling groups.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  ##   AutoScalingGroupNames: JArray
  ##                        : <p>The names of the Auto Scaling groups. Each name can be a maximum of 1600 characters. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> parameter.</p> <p>If you omit this parameter, all Auto Scaling groups are described.</p>
  var query_21626752 = newJObject()
  var formData_21626753 = newJObject()
  add(formData_21626753, "NextToken", newJString(NextToken))
  add(query_21626752, "Action", newJString(Action))
  add(formData_21626753, "MaxRecords", newJInt(MaxRecords))
  add(query_21626752, "Version", newJString(Version))
  if AutoScalingGroupNames != nil:
    formData_21626753.add "AutoScalingGroupNames", AutoScalingGroupNames
  result = call_21626751.call(nil, query_21626752, nil, formData_21626753, nil)

var postDescribeAutoScalingGroups* = Call_PostDescribeAutoScalingGroups_21626735(
    name: "postDescribeAutoScalingGroups", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeAutoScalingGroups",
    validator: validate_PostDescribeAutoScalingGroups_21626736, base: "/",
    makeUrl: url_PostDescribeAutoScalingGroups_21626737,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAutoScalingGroups_21626717 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeAutoScalingGroups_21626719(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAutoScalingGroups_21626718(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more Auto Scaling groups.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   AutoScalingGroupNames: JArray
  ##                        : <p>The names of the Auto Scaling groups. Each name can be a maximum of 1600 characters. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> parameter.</p> <p>If you omit this parameter, all Auto Scaling groups are described.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626720 = query.getOrDefault("MaxRecords")
  valid_21626720 = validateParameter(valid_21626720, JInt, required = false,
                                   default = nil)
  if valid_21626720 != nil:
    section.add "MaxRecords", valid_21626720
  var valid_21626721 = query.getOrDefault("NextToken")
  valid_21626721 = validateParameter(valid_21626721, JString, required = false,
                                   default = nil)
  if valid_21626721 != nil:
    section.add "NextToken", valid_21626721
  var valid_21626722 = query.getOrDefault("Action")
  valid_21626722 = validateParameter(valid_21626722, JString, required = true, default = newJString(
      "DescribeAutoScalingGroups"))
  if valid_21626722 != nil:
    section.add "Action", valid_21626722
  var valid_21626723 = query.getOrDefault("AutoScalingGroupNames")
  valid_21626723 = validateParameter(valid_21626723, JArray, required = false,
                                   default = nil)
  if valid_21626723 != nil:
    section.add "AutoScalingGroupNames", valid_21626723
  var valid_21626724 = query.getOrDefault("Version")
  valid_21626724 = validateParameter(valid_21626724, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626724 != nil:
    section.add "Version", valid_21626724
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626725 = header.getOrDefault("X-Amz-Date")
  valid_21626725 = validateParameter(valid_21626725, JString, required = false,
                                   default = nil)
  if valid_21626725 != nil:
    section.add "X-Amz-Date", valid_21626725
  var valid_21626726 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626726 = validateParameter(valid_21626726, JString, required = false,
                                   default = nil)
  if valid_21626726 != nil:
    section.add "X-Amz-Security-Token", valid_21626726
  var valid_21626727 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626727 = validateParameter(valid_21626727, JString, required = false,
                                   default = nil)
  if valid_21626727 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626727
  var valid_21626728 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626728 = validateParameter(valid_21626728, JString, required = false,
                                   default = nil)
  if valid_21626728 != nil:
    section.add "X-Amz-Algorithm", valid_21626728
  var valid_21626729 = header.getOrDefault("X-Amz-Signature")
  valid_21626729 = validateParameter(valid_21626729, JString, required = false,
                                   default = nil)
  if valid_21626729 != nil:
    section.add "X-Amz-Signature", valid_21626729
  var valid_21626730 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626730 = validateParameter(valid_21626730, JString, required = false,
                                   default = nil)
  if valid_21626730 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626730
  var valid_21626731 = header.getOrDefault("X-Amz-Credential")
  valid_21626731 = validateParameter(valid_21626731, JString, required = false,
                                   default = nil)
  if valid_21626731 != nil:
    section.add "X-Amz-Credential", valid_21626731
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626732: Call_GetDescribeAutoScalingGroups_21626717;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more Auto Scaling groups.
  ## 
  let valid = call_21626732.validator(path, query, header, formData, body, _)
  let scheme = call_21626732.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626732.makeUrl(scheme.get, call_21626732.host, call_21626732.base,
                               call_21626732.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626732, uri, valid, _)

proc call*(call_21626733: Call_GetDescribeAutoScalingGroups_21626717;
          MaxRecords: int = 0; NextToken: string = "";
          Action: string = "DescribeAutoScalingGroups";
          AutoScalingGroupNames: JsonNode = nil; Version: string = "2011-01-01"): Recallable =
  ## getDescribeAutoScalingGroups
  ## Describes one or more Auto Scaling groups.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   AutoScalingGroupNames: JArray
  ##                        : <p>The names of the Auto Scaling groups. Each name can be a maximum of 1600 characters. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> parameter.</p> <p>If you omit this parameter, all Auto Scaling groups are described.</p>
  ##   Version: string (required)
  var query_21626734 = newJObject()
  add(query_21626734, "MaxRecords", newJInt(MaxRecords))
  add(query_21626734, "NextToken", newJString(NextToken))
  add(query_21626734, "Action", newJString(Action))
  if AutoScalingGroupNames != nil:
    query_21626734.add "AutoScalingGroupNames", AutoScalingGroupNames
  add(query_21626734, "Version", newJString(Version))
  result = call_21626733.call(nil, query_21626734, nil, nil, nil)

var getDescribeAutoScalingGroups* = Call_GetDescribeAutoScalingGroups_21626717(
    name: "getDescribeAutoScalingGroups", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeAutoScalingGroups",
    validator: validate_GetDescribeAutoScalingGroups_21626718, base: "/",
    makeUrl: url_GetDescribeAutoScalingGroups_21626719,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAutoScalingInstances_21626772 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeAutoScalingInstances_21626774(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAutoScalingInstances_21626773(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more Auto Scaling instances.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626775 = query.getOrDefault("Action")
  valid_21626775 = validateParameter(valid_21626775, JString, required = true, default = newJString(
      "DescribeAutoScalingInstances"))
  if valid_21626775 != nil:
    section.add "Action", valid_21626775
  var valid_21626776 = query.getOrDefault("Version")
  valid_21626776 = validateParameter(valid_21626776, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626776 != nil:
    section.add "Version", valid_21626776
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626777 = header.getOrDefault("X-Amz-Date")
  valid_21626777 = validateParameter(valid_21626777, JString, required = false,
                                   default = nil)
  if valid_21626777 != nil:
    section.add "X-Amz-Date", valid_21626777
  var valid_21626778 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626778 = validateParameter(valid_21626778, JString, required = false,
                                   default = nil)
  if valid_21626778 != nil:
    section.add "X-Amz-Security-Token", valid_21626778
  var valid_21626779 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626779 = validateParameter(valid_21626779, JString, required = false,
                                   default = nil)
  if valid_21626779 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626779
  var valid_21626780 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626780 = validateParameter(valid_21626780, JString, required = false,
                                   default = nil)
  if valid_21626780 != nil:
    section.add "X-Amz-Algorithm", valid_21626780
  var valid_21626781 = header.getOrDefault("X-Amz-Signature")
  valid_21626781 = validateParameter(valid_21626781, JString, required = false,
                                   default = nil)
  if valid_21626781 != nil:
    section.add "X-Amz-Signature", valid_21626781
  var valid_21626782 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626782 = validateParameter(valid_21626782, JString, required = false,
                                   default = nil)
  if valid_21626782 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626782
  var valid_21626783 = header.getOrDefault("X-Amz-Credential")
  valid_21626783 = validateParameter(valid_21626783, JString, required = false,
                                   default = nil)
  if valid_21626783 != nil:
    section.add "X-Amz-Credential", valid_21626783
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to <code>MaxRecords</code> IDs. If you omit this parameter, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error.
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>50</code>.
  section = newJObject()
  var valid_21626784 = formData.getOrDefault("NextToken")
  valid_21626784 = validateParameter(valid_21626784, JString, required = false,
                                   default = nil)
  if valid_21626784 != nil:
    section.add "NextToken", valid_21626784
  var valid_21626785 = formData.getOrDefault("InstanceIds")
  valid_21626785 = validateParameter(valid_21626785, JArray, required = false,
                                   default = nil)
  if valid_21626785 != nil:
    section.add "InstanceIds", valid_21626785
  var valid_21626786 = formData.getOrDefault("MaxRecords")
  valid_21626786 = validateParameter(valid_21626786, JInt, required = false,
                                   default = nil)
  if valid_21626786 != nil:
    section.add "MaxRecords", valid_21626786
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626787: Call_PostDescribeAutoScalingInstances_21626772;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more Auto Scaling instances.
  ## 
  let valid = call_21626787.validator(path, query, header, formData, body, _)
  let scheme = call_21626787.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626787.makeUrl(scheme.get, call_21626787.host, call_21626787.base,
                               call_21626787.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626787, uri, valid, _)

proc call*(call_21626788: Call_PostDescribeAutoScalingInstances_21626772;
          NextToken: string = ""; InstanceIds: JsonNode = nil;
          Action: string = "DescribeAutoScalingInstances"; MaxRecords: int = 0;
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeAutoScalingInstances
  ## Describes one or more Auto Scaling instances.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to <code>MaxRecords</code> IDs. If you omit this parameter, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error.
  ##   Action: string (required)
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>50</code>.
  ##   Version: string (required)
  var query_21626789 = newJObject()
  var formData_21626790 = newJObject()
  add(formData_21626790, "NextToken", newJString(NextToken))
  if InstanceIds != nil:
    formData_21626790.add "InstanceIds", InstanceIds
  add(query_21626789, "Action", newJString(Action))
  add(formData_21626790, "MaxRecords", newJInt(MaxRecords))
  add(query_21626789, "Version", newJString(Version))
  result = call_21626788.call(nil, query_21626789, nil, formData_21626790, nil)

var postDescribeAutoScalingInstances* = Call_PostDescribeAutoScalingInstances_21626772(
    name: "postDescribeAutoScalingInstances", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeAutoScalingInstances",
    validator: validate_PostDescribeAutoScalingInstances_21626773, base: "/",
    makeUrl: url_PostDescribeAutoScalingInstances_21626774,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAutoScalingInstances_21626754 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeAutoScalingInstances_21626756(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAutoScalingInstances_21626755(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more Auto Scaling instances.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>50</code>.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to <code>MaxRecords</code> IDs. If you omit this parameter, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626757 = query.getOrDefault("MaxRecords")
  valid_21626757 = validateParameter(valid_21626757, JInt, required = false,
                                   default = nil)
  if valid_21626757 != nil:
    section.add "MaxRecords", valid_21626757
  var valid_21626758 = query.getOrDefault("NextToken")
  valid_21626758 = validateParameter(valid_21626758, JString, required = false,
                                   default = nil)
  if valid_21626758 != nil:
    section.add "NextToken", valid_21626758
  var valid_21626759 = query.getOrDefault("Action")
  valid_21626759 = validateParameter(valid_21626759, JString, required = true, default = newJString(
      "DescribeAutoScalingInstances"))
  if valid_21626759 != nil:
    section.add "Action", valid_21626759
  var valid_21626760 = query.getOrDefault("InstanceIds")
  valid_21626760 = validateParameter(valid_21626760, JArray, required = false,
                                   default = nil)
  if valid_21626760 != nil:
    section.add "InstanceIds", valid_21626760
  var valid_21626761 = query.getOrDefault("Version")
  valid_21626761 = validateParameter(valid_21626761, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626761 != nil:
    section.add "Version", valid_21626761
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626762 = header.getOrDefault("X-Amz-Date")
  valid_21626762 = validateParameter(valid_21626762, JString, required = false,
                                   default = nil)
  if valid_21626762 != nil:
    section.add "X-Amz-Date", valid_21626762
  var valid_21626763 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626763 = validateParameter(valid_21626763, JString, required = false,
                                   default = nil)
  if valid_21626763 != nil:
    section.add "X-Amz-Security-Token", valid_21626763
  var valid_21626764 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626764 = validateParameter(valid_21626764, JString, required = false,
                                   default = nil)
  if valid_21626764 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626764
  var valid_21626765 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626765 = validateParameter(valid_21626765, JString, required = false,
                                   default = nil)
  if valid_21626765 != nil:
    section.add "X-Amz-Algorithm", valid_21626765
  var valid_21626766 = header.getOrDefault("X-Amz-Signature")
  valid_21626766 = validateParameter(valid_21626766, JString, required = false,
                                   default = nil)
  if valid_21626766 != nil:
    section.add "X-Amz-Signature", valid_21626766
  var valid_21626767 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626767 = validateParameter(valid_21626767, JString, required = false,
                                   default = nil)
  if valid_21626767 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626767
  var valid_21626768 = header.getOrDefault("X-Amz-Credential")
  valid_21626768 = validateParameter(valid_21626768, JString, required = false,
                                   default = nil)
  if valid_21626768 != nil:
    section.add "X-Amz-Credential", valid_21626768
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626769: Call_GetDescribeAutoScalingInstances_21626754;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more Auto Scaling instances.
  ## 
  let valid = call_21626769.validator(path, query, header, formData, body, _)
  let scheme = call_21626769.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626769.makeUrl(scheme.get, call_21626769.host, call_21626769.base,
                               call_21626769.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626769, uri, valid, _)

proc call*(call_21626770: Call_GetDescribeAutoScalingInstances_21626754;
          MaxRecords: int = 0; NextToken: string = "";
          Action: string = "DescribeAutoScalingInstances";
          InstanceIds: JsonNode = nil; Version: string = "2011-01-01"): Recallable =
  ## getDescribeAutoScalingInstances
  ## Describes one or more Auto Scaling instances.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>50</code>.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to <code>MaxRecords</code> IDs. If you omit this parameter, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error.
  ##   Version: string (required)
  var query_21626771 = newJObject()
  add(query_21626771, "MaxRecords", newJInt(MaxRecords))
  add(query_21626771, "NextToken", newJString(NextToken))
  add(query_21626771, "Action", newJString(Action))
  if InstanceIds != nil:
    query_21626771.add "InstanceIds", InstanceIds
  add(query_21626771, "Version", newJString(Version))
  result = call_21626770.call(nil, query_21626771, nil, nil, nil)

var getDescribeAutoScalingInstances* = Call_GetDescribeAutoScalingInstances_21626754(
    name: "getDescribeAutoScalingInstances", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeAutoScalingInstances",
    validator: validate_GetDescribeAutoScalingInstances_21626755, base: "/",
    makeUrl: url_GetDescribeAutoScalingInstances_21626756,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAutoScalingNotificationTypes_21626806 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeAutoScalingNotificationTypes_21626808(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAutoScalingNotificationTypes_21626807(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the notification types that are supported by Amazon EC2 Auto Scaling.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626809 = query.getOrDefault("Action")
  valid_21626809 = validateParameter(valid_21626809, JString, required = true, default = newJString(
      "DescribeAutoScalingNotificationTypes"))
  if valid_21626809 != nil:
    section.add "Action", valid_21626809
  var valid_21626810 = query.getOrDefault("Version")
  valid_21626810 = validateParameter(valid_21626810, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626810 != nil:
    section.add "Version", valid_21626810
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626811 = header.getOrDefault("X-Amz-Date")
  valid_21626811 = validateParameter(valid_21626811, JString, required = false,
                                   default = nil)
  if valid_21626811 != nil:
    section.add "X-Amz-Date", valid_21626811
  var valid_21626812 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626812 = validateParameter(valid_21626812, JString, required = false,
                                   default = nil)
  if valid_21626812 != nil:
    section.add "X-Amz-Security-Token", valid_21626812
  var valid_21626813 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626813 = validateParameter(valid_21626813, JString, required = false,
                                   default = nil)
  if valid_21626813 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626813
  var valid_21626814 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626814 = validateParameter(valid_21626814, JString, required = false,
                                   default = nil)
  if valid_21626814 != nil:
    section.add "X-Amz-Algorithm", valid_21626814
  var valid_21626815 = header.getOrDefault("X-Amz-Signature")
  valid_21626815 = validateParameter(valid_21626815, JString, required = false,
                                   default = nil)
  if valid_21626815 != nil:
    section.add "X-Amz-Signature", valid_21626815
  var valid_21626816 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626816 = validateParameter(valid_21626816, JString, required = false,
                                   default = nil)
  if valid_21626816 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626816
  var valid_21626817 = header.getOrDefault("X-Amz-Credential")
  valid_21626817 = validateParameter(valid_21626817, JString, required = false,
                                   default = nil)
  if valid_21626817 != nil:
    section.add "X-Amz-Credential", valid_21626817
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626818: Call_PostDescribeAutoScalingNotificationTypes_21626806;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the notification types that are supported by Amazon EC2 Auto Scaling.
  ## 
  let valid = call_21626818.validator(path, query, header, formData, body, _)
  let scheme = call_21626818.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626818.makeUrl(scheme.get, call_21626818.host, call_21626818.base,
                               call_21626818.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626818, uri, valid, _)

proc call*(call_21626819: Call_PostDescribeAutoScalingNotificationTypes_21626806;
          Action: string = "DescribeAutoScalingNotificationTypes";
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeAutoScalingNotificationTypes
  ## Describes the notification types that are supported by Amazon EC2 Auto Scaling.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626820 = newJObject()
  add(query_21626820, "Action", newJString(Action))
  add(query_21626820, "Version", newJString(Version))
  result = call_21626819.call(nil, query_21626820, nil, nil, nil)

var postDescribeAutoScalingNotificationTypes* = Call_PostDescribeAutoScalingNotificationTypes_21626806(
    name: "postDescribeAutoScalingNotificationTypes", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeAutoScalingNotificationTypes",
    validator: validate_PostDescribeAutoScalingNotificationTypes_21626807,
    base: "/", makeUrl: url_PostDescribeAutoScalingNotificationTypes_21626808,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAutoScalingNotificationTypes_21626791 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeAutoScalingNotificationTypes_21626793(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAutoScalingNotificationTypes_21626792(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the notification types that are supported by Amazon EC2 Auto Scaling.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626794 = query.getOrDefault("Action")
  valid_21626794 = validateParameter(valid_21626794, JString, required = true, default = newJString(
      "DescribeAutoScalingNotificationTypes"))
  if valid_21626794 != nil:
    section.add "Action", valid_21626794
  var valid_21626795 = query.getOrDefault("Version")
  valid_21626795 = validateParameter(valid_21626795, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626795 != nil:
    section.add "Version", valid_21626795
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626796 = header.getOrDefault("X-Amz-Date")
  valid_21626796 = validateParameter(valid_21626796, JString, required = false,
                                   default = nil)
  if valid_21626796 != nil:
    section.add "X-Amz-Date", valid_21626796
  var valid_21626797 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626797 = validateParameter(valid_21626797, JString, required = false,
                                   default = nil)
  if valid_21626797 != nil:
    section.add "X-Amz-Security-Token", valid_21626797
  var valid_21626798 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626798 = validateParameter(valid_21626798, JString, required = false,
                                   default = nil)
  if valid_21626798 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626798
  var valid_21626799 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626799 = validateParameter(valid_21626799, JString, required = false,
                                   default = nil)
  if valid_21626799 != nil:
    section.add "X-Amz-Algorithm", valid_21626799
  var valid_21626800 = header.getOrDefault("X-Amz-Signature")
  valid_21626800 = validateParameter(valid_21626800, JString, required = false,
                                   default = nil)
  if valid_21626800 != nil:
    section.add "X-Amz-Signature", valid_21626800
  var valid_21626801 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626801 = validateParameter(valid_21626801, JString, required = false,
                                   default = nil)
  if valid_21626801 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626801
  var valid_21626802 = header.getOrDefault("X-Amz-Credential")
  valid_21626802 = validateParameter(valid_21626802, JString, required = false,
                                   default = nil)
  if valid_21626802 != nil:
    section.add "X-Amz-Credential", valid_21626802
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626803: Call_GetDescribeAutoScalingNotificationTypes_21626791;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the notification types that are supported by Amazon EC2 Auto Scaling.
  ## 
  let valid = call_21626803.validator(path, query, header, formData, body, _)
  let scheme = call_21626803.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626803.makeUrl(scheme.get, call_21626803.host, call_21626803.base,
                               call_21626803.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626803, uri, valid, _)

proc call*(call_21626804: Call_GetDescribeAutoScalingNotificationTypes_21626791;
          Action: string = "DescribeAutoScalingNotificationTypes";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeAutoScalingNotificationTypes
  ## Describes the notification types that are supported by Amazon EC2 Auto Scaling.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626805 = newJObject()
  add(query_21626805, "Action", newJString(Action))
  add(query_21626805, "Version", newJString(Version))
  result = call_21626804.call(nil, query_21626805, nil, nil, nil)

var getDescribeAutoScalingNotificationTypes* = Call_GetDescribeAutoScalingNotificationTypes_21626791(
    name: "getDescribeAutoScalingNotificationTypes", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeAutoScalingNotificationTypes",
    validator: validate_GetDescribeAutoScalingNotificationTypes_21626792,
    base: "/", makeUrl: url_GetDescribeAutoScalingNotificationTypes_21626793,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeLaunchConfigurations_21626839 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeLaunchConfigurations_21626841(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeLaunchConfigurations_21626840(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more launch configurations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626842 = query.getOrDefault("Action")
  valid_21626842 = validateParameter(valid_21626842, JString, required = true, default = newJString(
      "DescribeLaunchConfigurations"))
  if valid_21626842 != nil:
    section.add "Action", valid_21626842
  var valid_21626843 = query.getOrDefault("Version")
  valid_21626843 = validateParameter(valid_21626843, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626843 != nil:
    section.add "Version", valid_21626843
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626844 = header.getOrDefault("X-Amz-Date")
  valid_21626844 = validateParameter(valid_21626844, JString, required = false,
                                   default = nil)
  if valid_21626844 != nil:
    section.add "X-Amz-Date", valid_21626844
  var valid_21626845 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626845 = validateParameter(valid_21626845, JString, required = false,
                                   default = nil)
  if valid_21626845 != nil:
    section.add "X-Amz-Security-Token", valid_21626845
  var valid_21626846 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626846 = validateParameter(valid_21626846, JString, required = false,
                                   default = nil)
  if valid_21626846 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626846
  var valid_21626847 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626847 = validateParameter(valid_21626847, JString, required = false,
                                   default = nil)
  if valid_21626847 != nil:
    section.add "X-Amz-Algorithm", valid_21626847
  var valid_21626848 = header.getOrDefault("X-Amz-Signature")
  valid_21626848 = validateParameter(valid_21626848, JString, required = false,
                                   default = nil)
  if valid_21626848 != nil:
    section.add "X-Amz-Signature", valid_21626848
  var valid_21626849 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626849 = validateParameter(valid_21626849, JString, required = false,
                                   default = nil)
  if valid_21626849 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626849
  var valid_21626850 = header.getOrDefault("X-Amz-Credential")
  valid_21626850 = validateParameter(valid_21626850, JString, required = false,
                                   default = nil)
  if valid_21626850 != nil:
    section.add "X-Amz-Credential", valid_21626850
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   LaunchConfigurationNames: JArray
  ##                           : The launch configuration names. If you omit this parameter, all launch configurations are described.
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  section = newJObject()
  var valid_21626851 = formData.getOrDefault("NextToken")
  valid_21626851 = validateParameter(valid_21626851, JString, required = false,
                                   default = nil)
  if valid_21626851 != nil:
    section.add "NextToken", valid_21626851
  var valid_21626852 = formData.getOrDefault("LaunchConfigurationNames")
  valid_21626852 = validateParameter(valid_21626852, JArray, required = false,
                                   default = nil)
  if valid_21626852 != nil:
    section.add "LaunchConfigurationNames", valid_21626852
  var valid_21626853 = formData.getOrDefault("MaxRecords")
  valid_21626853 = validateParameter(valid_21626853, JInt, required = false,
                                   default = nil)
  if valid_21626853 != nil:
    section.add "MaxRecords", valid_21626853
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626854: Call_PostDescribeLaunchConfigurations_21626839;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more launch configurations.
  ## 
  let valid = call_21626854.validator(path, query, header, formData, body, _)
  let scheme = call_21626854.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626854.makeUrl(scheme.get, call_21626854.host, call_21626854.base,
                               call_21626854.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626854, uri, valid, _)

proc call*(call_21626855: Call_PostDescribeLaunchConfigurations_21626839;
          NextToken: string = ""; LaunchConfigurationNames: JsonNode = nil;
          Action: string = "DescribeLaunchConfigurations"; MaxRecords: int = 0;
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeLaunchConfigurations
  ## Describes one or more launch configurations.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   LaunchConfigurationNames: JArray
  ##                           : The launch configuration names. If you omit this parameter, all launch configurations are described.
  ##   Action: string (required)
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  var query_21626856 = newJObject()
  var formData_21626857 = newJObject()
  add(formData_21626857, "NextToken", newJString(NextToken))
  if LaunchConfigurationNames != nil:
    formData_21626857.add "LaunchConfigurationNames", LaunchConfigurationNames
  add(query_21626856, "Action", newJString(Action))
  add(formData_21626857, "MaxRecords", newJInt(MaxRecords))
  add(query_21626856, "Version", newJString(Version))
  result = call_21626855.call(nil, query_21626856, nil, formData_21626857, nil)

var postDescribeLaunchConfigurations* = Call_PostDescribeLaunchConfigurations_21626839(
    name: "postDescribeLaunchConfigurations", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeLaunchConfigurations",
    validator: validate_PostDescribeLaunchConfigurations_21626840, base: "/",
    makeUrl: url_PostDescribeLaunchConfigurations_21626841,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeLaunchConfigurations_21626821 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeLaunchConfigurations_21626823(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeLaunchConfigurations_21626822(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more launch configurations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   LaunchConfigurationNames: JArray
  ##                           : The launch configuration names. If you omit this parameter, all launch configurations are described.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626824 = query.getOrDefault("MaxRecords")
  valid_21626824 = validateParameter(valid_21626824, JInt, required = false,
                                   default = nil)
  if valid_21626824 != nil:
    section.add "MaxRecords", valid_21626824
  var valid_21626825 = query.getOrDefault("NextToken")
  valid_21626825 = validateParameter(valid_21626825, JString, required = false,
                                   default = nil)
  if valid_21626825 != nil:
    section.add "NextToken", valid_21626825
  var valid_21626826 = query.getOrDefault("LaunchConfigurationNames")
  valid_21626826 = validateParameter(valid_21626826, JArray, required = false,
                                   default = nil)
  if valid_21626826 != nil:
    section.add "LaunchConfigurationNames", valid_21626826
  var valid_21626827 = query.getOrDefault("Action")
  valid_21626827 = validateParameter(valid_21626827, JString, required = true, default = newJString(
      "DescribeLaunchConfigurations"))
  if valid_21626827 != nil:
    section.add "Action", valid_21626827
  var valid_21626828 = query.getOrDefault("Version")
  valid_21626828 = validateParameter(valid_21626828, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626828 != nil:
    section.add "Version", valid_21626828
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626829 = header.getOrDefault("X-Amz-Date")
  valid_21626829 = validateParameter(valid_21626829, JString, required = false,
                                   default = nil)
  if valid_21626829 != nil:
    section.add "X-Amz-Date", valid_21626829
  var valid_21626830 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626830 = validateParameter(valid_21626830, JString, required = false,
                                   default = nil)
  if valid_21626830 != nil:
    section.add "X-Amz-Security-Token", valid_21626830
  var valid_21626831 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626831 = validateParameter(valid_21626831, JString, required = false,
                                   default = nil)
  if valid_21626831 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626831
  var valid_21626832 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626832 = validateParameter(valid_21626832, JString, required = false,
                                   default = nil)
  if valid_21626832 != nil:
    section.add "X-Amz-Algorithm", valid_21626832
  var valid_21626833 = header.getOrDefault("X-Amz-Signature")
  valid_21626833 = validateParameter(valid_21626833, JString, required = false,
                                   default = nil)
  if valid_21626833 != nil:
    section.add "X-Amz-Signature", valid_21626833
  var valid_21626834 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626834 = validateParameter(valid_21626834, JString, required = false,
                                   default = nil)
  if valid_21626834 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626834
  var valid_21626835 = header.getOrDefault("X-Amz-Credential")
  valid_21626835 = validateParameter(valid_21626835, JString, required = false,
                                   default = nil)
  if valid_21626835 != nil:
    section.add "X-Amz-Credential", valid_21626835
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626836: Call_GetDescribeLaunchConfigurations_21626821;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more launch configurations.
  ## 
  let valid = call_21626836.validator(path, query, header, formData, body, _)
  let scheme = call_21626836.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626836.makeUrl(scheme.get, call_21626836.host, call_21626836.base,
                               call_21626836.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626836, uri, valid, _)

proc call*(call_21626837: Call_GetDescribeLaunchConfigurations_21626821;
          MaxRecords: int = 0; NextToken: string = "";
          LaunchConfigurationNames: JsonNode = nil;
          Action: string = "DescribeLaunchConfigurations";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeLaunchConfigurations
  ## Describes one or more launch configurations.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   LaunchConfigurationNames: JArray
  ##                           : The launch configuration names. If you omit this parameter, all launch configurations are described.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626838 = newJObject()
  add(query_21626838, "MaxRecords", newJInt(MaxRecords))
  add(query_21626838, "NextToken", newJString(NextToken))
  if LaunchConfigurationNames != nil:
    query_21626838.add "LaunchConfigurationNames", LaunchConfigurationNames
  add(query_21626838, "Action", newJString(Action))
  add(query_21626838, "Version", newJString(Version))
  result = call_21626837.call(nil, query_21626838, nil, nil, nil)

var getDescribeLaunchConfigurations* = Call_GetDescribeLaunchConfigurations_21626821(
    name: "getDescribeLaunchConfigurations", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeLaunchConfigurations",
    validator: validate_GetDescribeLaunchConfigurations_21626822, base: "/",
    makeUrl: url_GetDescribeLaunchConfigurations_21626823,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeLifecycleHookTypes_21626873 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeLifecycleHookTypes_21626875(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeLifecycleHookTypes_21626874(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626876 = query.getOrDefault("Action")
  valid_21626876 = validateParameter(valid_21626876, JString, required = true, default = newJString(
      "DescribeLifecycleHookTypes"))
  if valid_21626876 != nil:
    section.add "Action", valid_21626876
  var valid_21626877 = query.getOrDefault("Version")
  valid_21626877 = validateParameter(valid_21626877, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626877 != nil:
    section.add "Version", valid_21626877
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626878 = header.getOrDefault("X-Amz-Date")
  valid_21626878 = validateParameter(valid_21626878, JString, required = false,
                                   default = nil)
  if valid_21626878 != nil:
    section.add "X-Amz-Date", valid_21626878
  var valid_21626879 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626879 = validateParameter(valid_21626879, JString, required = false,
                                   default = nil)
  if valid_21626879 != nil:
    section.add "X-Amz-Security-Token", valid_21626879
  var valid_21626880 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626880 = validateParameter(valid_21626880, JString, required = false,
                                   default = nil)
  if valid_21626880 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626880
  var valid_21626881 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626881 = validateParameter(valid_21626881, JString, required = false,
                                   default = nil)
  if valid_21626881 != nil:
    section.add "X-Amz-Algorithm", valid_21626881
  var valid_21626882 = header.getOrDefault("X-Amz-Signature")
  valid_21626882 = validateParameter(valid_21626882, JString, required = false,
                                   default = nil)
  if valid_21626882 != nil:
    section.add "X-Amz-Signature", valid_21626882
  var valid_21626883 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626883 = validateParameter(valid_21626883, JString, required = false,
                                   default = nil)
  if valid_21626883 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626883
  var valid_21626884 = header.getOrDefault("X-Amz-Credential")
  valid_21626884 = validateParameter(valid_21626884, JString, required = false,
                                   default = nil)
  if valid_21626884 != nil:
    section.add "X-Amz-Credential", valid_21626884
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626885: Call_PostDescribeLifecycleHookTypes_21626873;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>
  ## 
  let valid = call_21626885.validator(path, query, header, formData, body, _)
  let scheme = call_21626885.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626885.makeUrl(scheme.get, call_21626885.host, call_21626885.base,
                               call_21626885.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626885, uri, valid, _)

proc call*(call_21626886: Call_PostDescribeLifecycleHookTypes_21626873;
          Action: string = "DescribeLifecycleHookTypes";
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeLifecycleHookTypes
  ## <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626887 = newJObject()
  add(query_21626887, "Action", newJString(Action))
  add(query_21626887, "Version", newJString(Version))
  result = call_21626886.call(nil, query_21626887, nil, nil, nil)

var postDescribeLifecycleHookTypes* = Call_PostDescribeLifecycleHookTypes_21626873(
    name: "postDescribeLifecycleHookTypes", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeLifecycleHookTypes",
    validator: validate_PostDescribeLifecycleHookTypes_21626874, base: "/",
    makeUrl: url_PostDescribeLifecycleHookTypes_21626875,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeLifecycleHookTypes_21626858 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeLifecycleHookTypes_21626860(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeLifecycleHookTypes_21626859(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626861 = query.getOrDefault("Action")
  valid_21626861 = validateParameter(valid_21626861, JString, required = true, default = newJString(
      "DescribeLifecycleHookTypes"))
  if valid_21626861 != nil:
    section.add "Action", valid_21626861
  var valid_21626862 = query.getOrDefault("Version")
  valid_21626862 = validateParameter(valid_21626862, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626862 != nil:
    section.add "Version", valid_21626862
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626863 = header.getOrDefault("X-Amz-Date")
  valid_21626863 = validateParameter(valid_21626863, JString, required = false,
                                   default = nil)
  if valid_21626863 != nil:
    section.add "X-Amz-Date", valid_21626863
  var valid_21626864 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626864 = validateParameter(valid_21626864, JString, required = false,
                                   default = nil)
  if valid_21626864 != nil:
    section.add "X-Amz-Security-Token", valid_21626864
  var valid_21626865 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626865 = validateParameter(valid_21626865, JString, required = false,
                                   default = nil)
  if valid_21626865 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626865
  var valid_21626866 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626866 = validateParameter(valid_21626866, JString, required = false,
                                   default = nil)
  if valid_21626866 != nil:
    section.add "X-Amz-Algorithm", valid_21626866
  var valid_21626867 = header.getOrDefault("X-Amz-Signature")
  valid_21626867 = validateParameter(valid_21626867, JString, required = false,
                                   default = nil)
  if valid_21626867 != nil:
    section.add "X-Amz-Signature", valid_21626867
  var valid_21626868 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626868 = validateParameter(valid_21626868, JString, required = false,
                                   default = nil)
  if valid_21626868 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626868
  var valid_21626869 = header.getOrDefault("X-Amz-Credential")
  valid_21626869 = validateParameter(valid_21626869, JString, required = false,
                                   default = nil)
  if valid_21626869 != nil:
    section.add "X-Amz-Credential", valid_21626869
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626870: Call_GetDescribeLifecycleHookTypes_21626858;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>
  ## 
  let valid = call_21626870.validator(path, query, header, formData, body, _)
  let scheme = call_21626870.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626870.makeUrl(scheme.get, call_21626870.host, call_21626870.base,
                               call_21626870.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626870, uri, valid, _)

proc call*(call_21626871: Call_GetDescribeLifecycleHookTypes_21626858;
          Action: string = "DescribeLifecycleHookTypes";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeLifecycleHookTypes
  ## <p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626872 = newJObject()
  add(query_21626872, "Action", newJString(Action))
  add(query_21626872, "Version", newJString(Version))
  result = call_21626871.call(nil, query_21626872, nil, nil, nil)

var getDescribeLifecycleHookTypes* = Call_GetDescribeLifecycleHookTypes_21626858(
    name: "getDescribeLifecycleHookTypes", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeLifecycleHookTypes",
    validator: validate_GetDescribeLifecycleHookTypes_21626859, base: "/",
    makeUrl: url_GetDescribeLifecycleHookTypes_21626860,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeLifecycleHooks_21626905 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeLifecycleHooks_21626907(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeLifecycleHooks_21626906(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the lifecycle hooks for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626908 = query.getOrDefault("Action")
  valid_21626908 = validateParameter(valid_21626908, JString, required = true, default = newJString(
      "DescribeLifecycleHooks"))
  if valid_21626908 != nil:
    section.add "Action", valid_21626908
  var valid_21626909 = query.getOrDefault("Version")
  valid_21626909 = validateParameter(valid_21626909, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626909 != nil:
    section.add "Version", valid_21626909
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626910 = header.getOrDefault("X-Amz-Date")
  valid_21626910 = validateParameter(valid_21626910, JString, required = false,
                                   default = nil)
  if valid_21626910 != nil:
    section.add "X-Amz-Date", valid_21626910
  var valid_21626911 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626911 = validateParameter(valid_21626911, JString, required = false,
                                   default = nil)
  if valid_21626911 != nil:
    section.add "X-Amz-Security-Token", valid_21626911
  var valid_21626912 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626912 = validateParameter(valid_21626912, JString, required = false,
                                   default = nil)
  if valid_21626912 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626912
  var valid_21626913 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626913 = validateParameter(valid_21626913, JString, required = false,
                                   default = nil)
  if valid_21626913 != nil:
    section.add "X-Amz-Algorithm", valid_21626913
  var valid_21626914 = header.getOrDefault("X-Amz-Signature")
  valid_21626914 = validateParameter(valid_21626914, JString, required = false,
                                   default = nil)
  if valid_21626914 != nil:
    section.add "X-Amz-Signature", valid_21626914
  var valid_21626915 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626915 = validateParameter(valid_21626915, JString, required = false,
                                   default = nil)
  if valid_21626915 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626915
  var valid_21626916 = header.getOrDefault("X-Amz-Credential")
  valid_21626916 = validateParameter(valid_21626916, JString, required = false,
                                   default = nil)
  if valid_21626916 != nil:
    section.add "X-Amz-Credential", valid_21626916
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleHookNames: JArray
  ##                     : The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626917 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626917 = validateParameter(valid_21626917, JString, required = true,
                                   default = nil)
  if valid_21626917 != nil:
    section.add "AutoScalingGroupName", valid_21626917
  var valid_21626918 = formData.getOrDefault("LifecycleHookNames")
  valid_21626918 = validateParameter(valid_21626918, JArray, required = false,
                                   default = nil)
  if valid_21626918 != nil:
    section.add "LifecycleHookNames", valid_21626918
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626919: Call_PostDescribeLifecycleHooks_21626905;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the lifecycle hooks for the specified Auto Scaling group.
  ## 
  let valid = call_21626919.validator(path, query, header, formData, body, _)
  let scheme = call_21626919.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626919.makeUrl(scheme.get, call_21626919.host, call_21626919.base,
                               call_21626919.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626919, uri, valid, _)

proc call*(call_21626920: Call_PostDescribeLifecycleHooks_21626905;
          AutoScalingGroupName: string; LifecycleHookNames: JsonNode = nil;
          Action: string = "DescribeLifecycleHooks"; Version: string = "2011-01-01"): Recallable =
  ## postDescribeLifecycleHooks
  ## Describes the lifecycle hooks for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleHookNames: JArray
  ##                     : The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626921 = newJObject()
  var formData_21626922 = newJObject()
  add(formData_21626922, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if LifecycleHookNames != nil:
    formData_21626922.add "LifecycleHookNames", LifecycleHookNames
  add(query_21626921, "Action", newJString(Action))
  add(query_21626921, "Version", newJString(Version))
  result = call_21626920.call(nil, query_21626921, nil, formData_21626922, nil)

var postDescribeLifecycleHooks* = Call_PostDescribeLifecycleHooks_21626905(
    name: "postDescribeLifecycleHooks", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeLifecycleHooks",
    validator: validate_PostDescribeLifecycleHooks_21626906, base: "/",
    makeUrl: url_PostDescribeLifecycleHooks_21626907,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeLifecycleHooks_21626888 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeLifecycleHooks_21626890(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeLifecycleHooks_21626889(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the lifecycle hooks for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleHookNames: JArray
  ##                     : The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626891 = query.getOrDefault("AutoScalingGroupName")
  valid_21626891 = validateParameter(valid_21626891, JString, required = true,
                                   default = nil)
  if valid_21626891 != nil:
    section.add "AutoScalingGroupName", valid_21626891
  var valid_21626892 = query.getOrDefault("LifecycleHookNames")
  valid_21626892 = validateParameter(valid_21626892, JArray, required = false,
                                   default = nil)
  if valid_21626892 != nil:
    section.add "LifecycleHookNames", valid_21626892
  var valid_21626893 = query.getOrDefault("Action")
  valid_21626893 = validateParameter(valid_21626893, JString, required = true, default = newJString(
      "DescribeLifecycleHooks"))
  if valid_21626893 != nil:
    section.add "Action", valid_21626893
  var valid_21626894 = query.getOrDefault("Version")
  valid_21626894 = validateParameter(valid_21626894, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626894 != nil:
    section.add "Version", valid_21626894
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626895 = header.getOrDefault("X-Amz-Date")
  valid_21626895 = validateParameter(valid_21626895, JString, required = false,
                                   default = nil)
  if valid_21626895 != nil:
    section.add "X-Amz-Date", valid_21626895
  var valid_21626896 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626896 = validateParameter(valid_21626896, JString, required = false,
                                   default = nil)
  if valid_21626896 != nil:
    section.add "X-Amz-Security-Token", valid_21626896
  var valid_21626897 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626897 = validateParameter(valid_21626897, JString, required = false,
                                   default = nil)
  if valid_21626897 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626897
  var valid_21626898 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626898 = validateParameter(valid_21626898, JString, required = false,
                                   default = nil)
  if valid_21626898 != nil:
    section.add "X-Amz-Algorithm", valid_21626898
  var valid_21626899 = header.getOrDefault("X-Amz-Signature")
  valid_21626899 = validateParameter(valid_21626899, JString, required = false,
                                   default = nil)
  if valid_21626899 != nil:
    section.add "X-Amz-Signature", valid_21626899
  var valid_21626900 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626900 = validateParameter(valid_21626900, JString, required = false,
                                   default = nil)
  if valid_21626900 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626900
  var valid_21626901 = header.getOrDefault("X-Amz-Credential")
  valid_21626901 = validateParameter(valid_21626901, JString, required = false,
                                   default = nil)
  if valid_21626901 != nil:
    section.add "X-Amz-Credential", valid_21626901
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626902: Call_GetDescribeLifecycleHooks_21626888;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the lifecycle hooks for the specified Auto Scaling group.
  ## 
  let valid = call_21626902.validator(path, query, header, formData, body, _)
  let scheme = call_21626902.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626902.makeUrl(scheme.get, call_21626902.host, call_21626902.base,
                               call_21626902.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626902, uri, valid, _)

proc call*(call_21626903: Call_GetDescribeLifecycleHooks_21626888;
          AutoScalingGroupName: string; LifecycleHookNames: JsonNode = nil;
          Action: string = "DescribeLifecycleHooks"; Version: string = "2011-01-01"): Recallable =
  ## getDescribeLifecycleHooks
  ## Describes the lifecycle hooks for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleHookNames: JArray
  ##                     : The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626904 = newJObject()
  add(query_21626904, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if LifecycleHookNames != nil:
    query_21626904.add "LifecycleHookNames", LifecycleHookNames
  add(query_21626904, "Action", newJString(Action))
  add(query_21626904, "Version", newJString(Version))
  result = call_21626903.call(nil, query_21626904, nil, nil, nil)

var getDescribeLifecycleHooks* = Call_GetDescribeLifecycleHooks_21626888(
    name: "getDescribeLifecycleHooks", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeLifecycleHooks",
    validator: validate_GetDescribeLifecycleHooks_21626889, base: "/",
    makeUrl: url_GetDescribeLifecycleHooks_21626890,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeLoadBalancerTargetGroups_21626941 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeLoadBalancerTargetGroups_21626943(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeLoadBalancerTargetGroups_21626942(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the target groups for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626944 = query.getOrDefault("Action")
  valid_21626944 = validateParameter(valid_21626944, JString, required = true, default = newJString(
      "DescribeLoadBalancerTargetGroups"))
  if valid_21626944 != nil:
    section.add "Action", valid_21626944
  var valid_21626945 = query.getOrDefault("Version")
  valid_21626945 = validateParameter(valid_21626945, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626945 != nil:
    section.add "Version", valid_21626945
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626946 = header.getOrDefault("X-Amz-Date")
  valid_21626946 = validateParameter(valid_21626946, JString, required = false,
                                   default = nil)
  if valid_21626946 != nil:
    section.add "X-Amz-Date", valid_21626946
  var valid_21626947 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626947 = validateParameter(valid_21626947, JString, required = false,
                                   default = nil)
  if valid_21626947 != nil:
    section.add "X-Amz-Security-Token", valid_21626947
  var valid_21626948 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626948 = validateParameter(valid_21626948, JString, required = false,
                                   default = nil)
  if valid_21626948 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626948
  var valid_21626949 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626949 = validateParameter(valid_21626949, JString, required = false,
                                   default = nil)
  if valid_21626949 != nil:
    section.add "X-Amz-Algorithm", valid_21626949
  var valid_21626950 = header.getOrDefault("X-Amz-Signature")
  valid_21626950 = validateParameter(valid_21626950, JString, required = false,
                                   default = nil)
  if valid_21626950 != nil:
    section.add "X-Amz-Signature", valid_21626950
  var valid_21626951 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626951 = validateParameter(valid_21626951, JString, required = false,
                                   default = nil)
  if valid_21626951 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626951
  var valid_21626952 = header.getOrDefault("X-Amz-Credential")
  valid_21626952 = validateParameter(valid_21626952, JString, required = false,
                                   default = nil)
  if valid_21626952 != nil:
    section.add "X-Amz-Credential", valid_21626952
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626953 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626953 = validateParameter(valid_21626953, JString, required = true,
                                   default = nil)
  if valid_21626953 != nil:
    section.add "AutoScalingGroupName", valid_21626953
  var valid_21626954 = formData.getOrDefault("NextToken")
  valid_21626954 = validateParameter(valid_21626954, JString, required = false,
                                   default = nil)
  if valid_21626954 != nil:
    section.add "NextToken", valid_21626954
  var valid_21626955 = formData.getOrDefault("MaxRecords")
  valid_21626955 = validateParameter(valid_21626955, JInt, required = false,
                                   default = nil)
  if valid_21626955 != nil:
    section.add "MaxRecords", valid_21626955
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626956: Call_PostDescribeLoadBalancerTargetGroups_21626941;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the target groups for the specified Auto Scaling group.
  ## 
  let valid = call_21626956.validator(path, query, header, formData, body, _)
  let scheme = call_21626956.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626956.makeUrl(scheme.get, call_21626956.host, call_21626956.base,
                               call_21626956.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626956, uri, valid, _)

proc call*(call_21626957: Call_PostDescribeLoadBalancerTargetGroups_21626941;
          AutoScalingGroupName: string; NextToken: string = "";
          Action: string = "DescribeLoadBalancerTargetGroups"; MaxRecords: int = 0;
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeLoadBalancerTargetGroups
  ## Describes the target groups for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  var query_21626958 = newJObject()
  var formData_21626959 = newJObject()
  add(formData_21626959, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21626959, "NextToken", newJString(NextToken))
  add(query_21626958, "Action", newJString(Action))
  add(formData_21626959, "MaxRecords", newJInt(MaxRecords))
  add(query_21626958, "Version", newJString(Version))
  result = call_21626957.call(nil, query_21626958, nil, formData_21626959, nil)

var postDescribeLoadBalancerTargetGroups* = Call_PostDescribeLoadBalancerTargetGroups_21626941(
    name: "postDescribeLoadBalancerTargetGroups", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeLoadBalancerTargetGroups",
    validator: validate_PostDescribeLoadBalancerTargetGroups_21626942, base: "/",
    makeUrl: url_PostDescribeLoadBalancerTargetGroups_21626943,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeLoadBalancerTargetGroups_21626923 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeLoadBalancerTargetGroups_21626925(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeLoadBalancerTargetGroups_21626924(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the target groups for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626926 = query.getOrDefault("MaxRecords")
  valid_21626926 = validateParameter(valid_21626926, JInt, required = false,
                                   default = nil)
  if valid_21626926 != nil:
    section.add "MaxRecords", valid_21626926
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626927 = query.getOrDefault("AutoScalingGroupName")
  valid_21626927 = validateParameter(valid_21626927, JString, required = true,
                                   default = nil)
  if valid_21626927 != nil:
    section.add "AutoScalingGroupName", valid_21626927
  var valid_21626928 = query.getOrDefault("NextToken")
  valid_21626928 = validateParameter(valid_21626928, JString, required = false,
                                   default = nil)
  if valid_21626928 != nil:
    section.add "NextToken", valid_21626928
  var valid_21626929 = query.getOrDefault("Action")
  valid_21626929 = validateParameter(valid_21626929, JString, required = true, default = newJString(
      "DescribeLoadBalancerTargetGroups"))
  if valid_21626929 != nil:
    section.add "Action", valid_21626929
  var valid_21626930 = query.getOrDefault("Version")
  valid_21626930 = validateParameter(valid_21626930, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626930 != nil:
    section.add "Version", valid_21626930
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626931 = header.getOrDefault("X-Amz-Date")
  valid_21626931 = validateParameter(valid_21626931, JString, required = false,
                                   default = nil)
  if valid_21626931 != nil:
    section.add "X-Amz-Date", valid_21626931
  var valid_21626932 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626932 = validateParameter(valid_21626932, JString, required = false,
                                   default = nil)
  if valid_21626932 != nil:
    section.add "X-Amz-Security-Token", valid_21626932
  var valid_21626933 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626933 = validateParameter(valid_21626933, JString, required = false,
                                   default = nil)
  if valid_21626933 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626933
  var valid_21626934 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626934 = validateParameter(valid_21626934, JString, required = false,
                                   default = nil)
  if valid_21626934 != nil:
    section.add "X-Amz-Algorithm", valid_21626934
  var valid_21626935 = header.getOrDefault("X-Amz-Signature")
  valid_21626935 = validateParameter(valid_21626935, JString, required = false,
                                   default = nil)
  if valid_21626935 != nil:
    section.add "X-Amz-Signature", valid_21626935
  var valid_21626936 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626936 = validateParameter(valid_21626936, JString, required = false,
                                   default = nil)
  if valid_21626936 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626936
  var valid_21626937 = header.getOrDefault("X-Amz-Credential")
  valid_21626937 = validateParameter(valid_21626937, JString, required = false,
                                   default = nil)
  if valid_21626937 != nil:
    section.add "X-Amz-Credential", valid_21626937
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626938: Call_GetDescribeLoadBalancerTargetGroups_21626923;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the target groups for the specified Auto Scaling group.
  ## 
  let valid = call_21626938.validator(path, query, header, formData, body, _)
  let scheme = call_21626938.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626938.makeUrl(scheme.get, call_21626938.host, call_21626938.base,
                               call_21626938.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626938, uri, valid, _)

proc call*(call_21626939: Call_GetDescribeLoadBalancerTargetGroups_21626923;
          AutoScalingGroupName: string; MaxRecords: int = 0; NextToken: string = "";
          Action: string = "DescribeLoadBalancerTargetGroups";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeLoadBalancerTargetGroups
  ## Describes the target groups for the specified Auto Scaling group.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626940 = newJObject()
  add(query_21626940, "MaxRecords", newJInt(MaxRecords))
  add(query_21626940, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626940, "NextToken", newJString(NextToken))
  add(query_21626940, "Action", newJString(Action))
  add(query_21626940, "Version", newJString(Version))
  result = call_21626939.call(nil, query_21626940, nil, nil, nil)

var getDescribeLoadBalancerTargetGroups* = Call_GetDescribeLoadBalancerTargetGroups_21626923(
    name: "getDescribeLoadBalancerTargetGroups", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeLoadBalancerTargetGroups",
    validator: validate_GetDescribeLoadBalancerTargetGroups_21626924, base: "/",
    makeUrl: url_GetDescribeLoadBalancerTargetGroups_21626925,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeLoadBalancers_21626978 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeLoadBalancers_21626980(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeLoadBalancers_21626979(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Describes the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DescribeLoadBalancerTargetGroups</a> instead.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626981 = query.getOrDefault("Action")
  valid_21626981 = validateParameter(valid_21626981, JString, required = true, default = newJString(
      "DescribeLoadBalancers"))
  if valid_21626981 != nil:
    section.add "Action", valid_21626981
  var valid_21626982 = query.getOrDefault("Version")
  valid_21626982 = validateParameter(valid_21626982, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626982 != nil:
    section.add "Version", valid_21626982
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626983 = header.getOrDefault("X-Amz-Date")
  valid_21626983 = validateParameter(valid_21626983, JString, required = false,
                                   default = nil)
  if valid_21626983 != nil:
    section.add "X-Amz-Date", valid_21626983
  var valid_21626984 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626984 = validateParameter(valid_21626984, JString, required = false,
                                   default = nil)
  if valid_21626984 != nil:
    section.add "X-Amz-Security-Token", valid_21626984
  var valid_21626985 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626985 = validateParameter(valid_21626985, JString, required = false,
                                   default = nil)
  if valid_21626985 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626985
  var valid_21626986 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626986 = validateParameter(valid_21626986, JString, required = false,
                                   default = nil)
  if valid_21626986 != nil:
    section.add "X-Amz-Algorithm", valid_21626986
  var valid_21626987 = header.getOrDefault("X-Amz-Signature")
  valid_21626987 = validateParameter(valid_21626987, JString, required = false,
                                   default = nil)
  if valid_21626987 != nil:
    section.add "X-Amz-Signature", valid_21626987
  var valid_21626988 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626988 = validateParameter(valid_21626988, JString, required = false,
                                   default = nil)
  if valid_21626988 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626988
  var valid_21626989 = header.getOrDefault("X-Amz-Credential")
  valid_21626989 = validateParameter(valid_21626989, JString, required = false,
                                   default = nil)
  if valid_21626989 != nil:
    section.add "X-Amz-Credential", valid_21626989
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626990 = formData.getOrDefault("AutoScalingGroupName")
  valid_21626990 = validateParameter(valid_21626990, JString, required = true,
                                   default = nil)
  if valid_21626990 != nil:
    section.add "AutoScalingGroupName", valid_21626990
  var valid_21626991 = formData.getOrDefault("NextToken")
  valid_21626991 = validateParameter(valid_21626991, JString, required = false,
                                   default = nil)
  if valid_21626991 != nil:
    section.add "NextToken", valid_21626991
  var valid_21626992 = formData.getOrDefault("MaxRecords")
  valid_21626992 = validateParameter(valid_21626992, JInt, required = false,
                                   default = nil)
  if valid_21626992 != nil:
    section.add "MaxRecords", valid_21626992
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626993: Call_PostDescribeLoadBalancers_21626978;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DescribeLoadBalancerTargetGroups</a> instead.</p>
  ## 
  let valid = call_21626993.validator(path, query, header, formData, body, _)
  let scheme = call_21626993.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626993.makeUrl(scheme.get, call_21626993.host, call_21626993.base,
                               call_21626993.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626993, uri, valid, _)

proc call*(call_21626994: Call_PostDescribeLoadBalancers_21626978;
          AutoScalingGroupName: string; NextToken: string = "";
          Action: string = "DescribeLoadBalancers"; MaxRecords: int = 0;
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeLoadBalancers
  ## <p>Describes the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DescribeLoadBalancerTargetGroups</a> instead.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  var query_21626995 = newJObject()
  var formData_21626996 = newJObject()
  add(formData_21626996, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21626996, "NextToken", newJString(NextToken))
  add(query_21626995, "Action", newJString(Action))
  add(formData_21626996, "MaxRecords", newJInt(MaxRecords))
  add(query_21626995, "Version", newJString(Version))
  result = call_21626994.call(nil, query_21626995, nil, formData_21626996, nil)

var postDescribeLoadBalancers* = Call_PostDescribeLoadBalancers_21626978(
    name: "postDescribeLoadBalancers", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeLoadBalancers",
    validator: validate_PostDescribeLoadBalancers_21626979, base: "/",
    makeUrl: url_PostDescribeLoadBalancers_21626980,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeLoadBalancers_21626960 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeLoadBalancers_21626962(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeLoadBalancers_21626961(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Describes the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DescribeLoadBalancerTargetGroups</a> instead.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626963 = query.getOrDefault("MaxRecords")
  valid_21626963 = validateParameter(valid_21626963, JInt, required = false,
                                   default = nil)
  if valid_21626963 != nil:
    section.add "MaxRecords", valid_21626963
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21626964 = query.getOrDefault("AutoScalingGroupName")
  valid_21626964 = validateParameter(valid_21626964, JString, required = true,
                                   default = nil)
  if valid_21626964 != nil:
    section.add "AutoScalingGroupName", valid_21626964
  var valid_21626965 = query.getOrDefault("NextToken")
  valid_21626965 = validateParameter(valid_21626965, JString, required = false,
                                   default = nil)
  if valid_21626965 != nil:
    section.add "NextToken", valid_21626965
  var valid_21626966 = query.getOrDefault("Action")
  valid_21626966 = validateParameter(valid_21626966, JString, required = true, default = newJString(
      "DescribeLoadBalancers"))
  if valid_21626966 != nil:
    section.add "Action", valid_21626966
  var valid_21626967 = query.getOrDefault("Version")
  valid_21626967 = validateParameter(valid_21626967, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21626967 != nil:
    section.add "Version", valid_21626967
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626968 = header.getOrDefault("X-Amz-Date")
  valid_21626968 = validateParameter(valid_21626968, JString, required = false,
                                   default = nil)
  if valid_21626968 != nil:
    section.add "X-Amz-Date", valid_21626968
  var valid_21626969 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626969 = validateParameter(valid_21626969, JString, required = false,
                                   default = nil)
  if valid_21626969 != nil:
    section.add "X-Amz-Security-Token", valid_21626969
  var valid_21626970 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626970 = validateParameter(valid_21626970, JString, required = false,
                                   default = nil)
  if valid_21626970 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626970
  var valid_21626971 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626971 = validateParameter(valid_21626971, JString, required = false,
                                   default = nil)
  if valid_21626971 != nil:
    section.add "X-Amz-Algorithm", valid_21626971
  var valid_21626972 = header.getOrDefault("X-Amz-Signature")
  valid_21626972 = validateParameter(valid_21626972, JString, required = false,
                                   default = nil)
  if valid_21626972 != nil:
    section.add "X-Amz-Signature", valid_21626972
  var valid_21626973 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626973 = validateParameter(valid_21626973, JString, required = false,
                                   default = nil)
  if valid_21626973 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626973
  var valid_21626974 = header.getOrDefault("X-Amz-Credential")
  valid_21626974 = validateParameter(valid_21626974, JString, required = false,
                                   default = nil)
  if valid_21626974 != nil:
    section.add "X-Amz-Credential", valid_21626974
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626975: Call_GetDescribeLoadBalancers_21626960;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DescribeLoadBalancerTargetGroups</a> instead.</p>
  ## 
  let valid = call_21626975.validator(path, query, header, formData, body, _)
  let scheme = call_21626975.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626975.makeUrl(scheme.get, call_21626975.host, call_21626975.base,
                               call_21626975.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626975, uri, valid, _)

proc call*(call_21626976: Call_GetDescribeLoadBalancers_21626960;
          AutoScalingGroupName: string; MaxRecords: int = 0; NextToken: string = "";
          Action: string = "DescribeLoadBalancers"; Version: string = "2011-01-01"): Recallable =
  ## getDescribeLoadBalancers
  ## <p>Describes the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DescribeLoadBalancerTargetGroups</a> instead.</p>
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626977 = newJObject()
  add(query_21626977, "MaxRecords", newJInt(MaxRecords))
  add(query_21626977, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21626977, "NextToken", newJString(NextToken))
  add(query_21626977, "Action", newJString(Action))
  add(query_21626977, "Version", newJString(Version))
  result = call_21626976.call(nil, query_21626977, nil, nil, nil)

var getDescribeLoadBalancers* = Call_GetDescribeLoadBalancers_21626960(
    name: "getDescribeLoadBalancers", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeLoadBalancers",
    validator: validate_GetDescribeLoadBalancers_21626961, base: "/",
    makeUrl: url_GetDescribeLoadBalancers_21626962,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeMetricCollectionTypes_21627012 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeMetricCollectionTypes_21627014(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeMetricCollectionTypes_21627013(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.</p> <p>The <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling <a>EnableMetricsCollection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627015 = query.getOrDefault("Action")
  valid_21627015 = validateParameter(valid_21627015, JString, required = true, default = newJString(
      "DescribeMetricCollectionTypes"))
  if valid_21627015 != nil:
    section.add "Action", valid_21627015
  var valid_21627016 = query.getOrDefault("Version")
  valid_21627016 = validateParameter(valid_21627016, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627016 != nil:
    section.add "Version", valid_21627016
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627017 = header.getOrDefault("X-Amz-Date")
  valid_21627017 = validateParameter(valid_21627017, JString, required = false,
                                   default = nil)
  if valid_21627017 != nil:
    section.add "X-Amz-Date", valid_21627017
  var valid_21627018 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627018 = validateParameter(valid_21627018, JString, required = false,
                                   default = nil)
  if valid_21627018 != nil:
    section.add "X-Amz-Security-Token", valid_21627018
  var valid_21627019 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627019 = validateParameter(valid_21627019, JString, required = false,
                                   default = nil)
  if valid_21627019 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627019
  var valid_21627020 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627020 = validateParameter(valid_21627020, JString, required = false,
                                   default = nil)
  if valid_21627020 != nil:
    section.add "X-Amz-Algorithm", valid_21627020
  var valid_21627021 = header.getOrDefault("X-Amz-Signature")
  valid_21627021 = validateParameter(valid_21627021, JString, required = false,
                                   default = nil)
  if valid_21627021 != nil:
    section.add "X-Amz-Signature", valid_21627021
  var valid_21627022 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627022 = validateParameter(valid_21627022, JString, required = false,
                                   default = nil)
  if valid_21627022 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627022
  var valid_21627023 = header.getOrDefault("X-Amz-Credential")
  valid_21627023 = validateParameter(valid_21627023, JString, required = false,
                                   default = nil)
  if valid_21627023 != nil:
    section.add "X-Amz-Credential", valid_21627023
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627024: Call_PostDescribeMetricCollectionTypes_21627012;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.</p> <p>The <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling <a>EnableMetricsCollection</a>.</p>
  ## 
  let valid = call_21627024.validator(path, query, header, formData, body, _)
  let scheme = call_21627024.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627024.makeUrl(scheme.get, call_21627024.host, call_21627024.base,
                               call_21627024.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627024, uri, valid, _)

proc call*(call_21627025: Call_PostDescribeMetricCollectionTypes_21627012;
          Action: string = "DescribeMetricCollectionTypes";
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeMetricCollectionTypes
  ## <p>Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.</p> <p>The <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling <a>EnableMetricsCollection</a>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627026 = newJObject()
  add(query_21627026, "Action", newJString(Action))
  add(query_21627026, "Version", newJString(Version))
  result = call_21627025.call(nil, query_21627026, nil, nil, nil)

var postDescribeMetricCollectionTypes* = Call_PostDescribeMetricCollectionTypes_21627012(
    name: "postDescribeMetricCollectionTypes", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeMetricCollectionTypes",
    validator: validate_PostDescribeMetricCollectionTypes_21627013, base: "/",
    makeUrl: url_PostDescribeMetricCollectionTypes_21627014,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeMetricCollectionTypes_21626997 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeMetricCollectionTypes_21626999(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeMetricCollectionTypes_21626998(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.</p> <p>The <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling <a>EnableMetricsCollection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627000 = query.getOrDefault("Action")
  valid_21627000 = validateParameter(valid_21627000, JString, required = true, default = newJString(
      "DescribeMetricCollectionTypes"))
  if valid_21627000 != nil:
    section.add "Action", valid_21627000
  var valid_21627001 = query.getOrDefault("Version")
  valid_21627001 = validateParameter(valid_21627001, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627001 != nil:
    section.add "Version", valid_21627001
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627002 = header.getOrDefault("X-Amz-Date")
  valid_21627002 = validateParameter(valid_21627002, JString, required = false,
                                   default = nil)
  if valid_21627002 != nil:
    section.add "X-Amz-Date", valid_21627002
  var valid_21627003 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627003 = validateParameter(valid_21627003, JString, required = false,
                                   default = nil)
  if valid_21627003 != nil:
    section.add "X-Amz-Security-Token", valid_21627003
  var valid_21627004 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627004 = validateParameter(valid_21627004, JString, required = false,
                                   default = nil)
  if valid_21627004 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627004
  var valid_21627005 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627005 = validateParameter(valid_21627005, JString, required = false,
                                   default = nil)
  if valid_21627005 != nil:
    section.add "X-Amz-Algorithm", valid_21627005
  var valid_21627006 = header.getOrDefault("X-Amz-Signature")
  valid_21627006 = validateParameter(valid_21627006, JString, required = false,
                                   default = nil)
  if valid_21627006 != nil:
    section.add "X-Amz-Signature", valid_21627006
  var valid_21627007 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627007 = validateParameter(valid_21627007, JString, required = false,
                                   default = nil)
  if valid_21627007 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627007
  var valid_21627008 = header.getOrDefault("X-Amz-Credential")
  valid_21627008 = validateParameter(valid_21627008, JString, required = false,
                                   default = nil)
  if valid_21627008 != nil:
    section.add "X-Amz-Credential", valid_21627008
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627009: Call_GetDescribeMetricCollectionTypes_21626997;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.</p> <p>The <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling <a>EnableMetricsCollection</a>.</p>
  ## 
  let valid = call_21627009.validator(path, query, header, formData, body, _)
  let scheme = call_21627009.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627009.makeUrl(scheme.get, call_21627009.host, call_21627009.base,
                               call_21627009.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627009, uri, valid, _)

proc call*(call_21627010: Call_GetDescribeMetricCollectionTypes_21626997;
          Action: string = "DescribeMetricCollectionTypes";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeMetricCollectionTypes
  ## <p>Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.</p> <p>The <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling <a>EnableMetricsCollection</a>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627011 = newJObject()
  add(query_21627011, "Action", newJString(Action))
  add(query_21627011, "Version", newJString(Version))
  result = call_21627010.call(nil, query_21627011, nil, nil, nil)

var getDescribeMetricCollectionTypes* = Call_GetDescribeMetricCollectionTypes_21626997(
    name: "getDescribeMetricCollectionTypes", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeMetricCollectionTypes",
    validator: validate_GetDescribeMetricCollectionTypes_21626998, base: "/",
    makeUrl: url_GetDescribeMetricCollectionTypes_21626999,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeNotificationConfigurations_21627045 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeNotificationConfigurations_21627047(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeNotificationConfigurations_21627046(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the notification actions associated with the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627048 = query.getOrDefault("Action")
  valid_21627048 = validateParameter(valid_21627048, JString, required = true, default = newJString(
      "DescribeNotificationConfigurations"))
  if valid_21627048 != nil:
    section.add "Action", valid_21627048
  var valid_21627049 = query.getOrDefault("Version")
  valid_21627049 = validateParameter(valid_21627049, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627049 != nil:
    section.add "Version", valid_21627049
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627050 = header.getOrDefault("X-Amz-Date")
  valid_21627050 = validateParameter(valid_21627050, JString, required = false,
                                   default = nil)
  if valid_21627050 != nil:
    section.add "X-Amz-Date", valid_21627050
  var valid_21627051 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627051 = validateParameter(valid_21627051, JString, required = false,
                                   default = nil)
  if valid_21627051 != nil:
    section.add "X-Amz-Security-Token", valid_21627051
  var valid_21627052 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627052 = validateParameter(valid_21627052, JString, required = false,
                                   default = nil)
  if valid_21627052 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627052
  var valid_21627053 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627053 = validateParameter(valid_21627053, JString, required = false,
                                   default = nil)
  if valid_21627053 != nil:
    section.add "X-Amz-Algorithm", valid_21627053
  var valid_21627054 = header.getOrDefault("X-Amz-Signature")
  valid_21627054 = validateParameter(valid_21627054, JString, required = false,
                                   default = nil)
  if valid_21627054 != nil:
    section.add "X-Amz-Signature", valid_21627054
  var valid_21627055 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627055 = validateParameter(valid_21627055, JString, required = false,
                                   default = nil)
  if valid_21627055 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627055
  var valid_21627056 = header.getOrDefault("X-Amz-Credential")
  valid_21627056 = validateParameter(valid_21627056, JString, required = false,
                                   default = nil)
  if valid_21627056 != nil:
    section.add "X-Amz-Credential", valid_21627056
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupNames: JArray
  ##                        : The name of the Auto Scaling group.
  section = newJObject()
  var valid_21627057 = formData.getOrDefault("NextToken")
  valid_21627057 = validateParameter(valid_21627057, JString, required = false,
                                   default = nil)
  if valid_21627057 != nil:
    section.add "NextToken", valid_21627057
  var valid_21627058 = formData.getOrDefault("MaxRecords")
  valid_21627058 = validateParameter(valid_21627058, JInt, required = false,
                                   default = nil)
  if valid_21627058 != nil:
    section.add "MaxRecords", valid_21627058
  var valid_21627059 = formData.getOrDefault("AutoScalingGroupNames")
  valid_21627059 = validateParameter(valid_21627059, JArray, required = false,
                                   default = nil)
  if valid_21627059 != nil:
    section.add "AutoScalingGroupNames", valid_21627059
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627060: Call_PostDescribeNotificationConfigurations_21627045;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the notification actions associated with the specified Auto Scaling group.
  ## 
  let valid = call_21627060.validator(path, query, header, formData, body, _)
  let scheme = call_21627060.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627060.makeUrl(scheme.get, call_21627060.host, call_21627060.base,
                               call_21627060.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627060, uri, valid, _)

proc call*(call_21627061: Call_PostDescribeNotificationConfigurations_21627045;
          NextToken: string = "";
          Action: string = "DescribeNotificationConfigurations";
          MaxRecords: int = 0; Version: string = "2011-01-01";
          AutoScalingGroupNames: JsonNode = nil): Recallable =
  ## postDescribeNotificationConfigurations
  ## Describes the notification actions associated with the specified Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  ##   AutoScalingGroupNames: JArray
  ##                        : The name of the Auto Scaling group.
  var query_21627062 = newJObject()
  var formData_21627063 = newJObject()
  add(formData_21627063, "NextToken", newJString(NextToken))
  add(query_21627062, "Action", newJString(Action))
  add(formData_21627063, "MaxRecords", newJInt(MaxRecords))
  add(query_21627062, "Version", newJString(Version))
  if AutoScalingGroupNames != nil:
    formData_21627063.add "AutoScalingGroupNames", AutoScalingGroupNames
  result = call_21627061.call(nil, query_21627062, nil, formData_21627063, nil)

var postDescribeNotificationConfigurations* = Call_PostDescribeNotificationConfigurations_21627045(
    name: "postDescribeNotificationConfigurations", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeNotificationConfigurations",
    validator: validate_PostDescribeNotificationConfigurations_21627046,
    base: "/", makeUrl: url_PostDescribeNotificationConfigurations_21627047,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeNotificationConfigurations_21627027 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeNotificationConfigurations_21627029(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeNotificationConfigurations_21627028(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the notification actions associated with the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   AutoScalingGroupNames: JArray
  ##                        : The name of the Auto Scaling group.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627030 = query.getOrDefault("MaxRecords")
  valid_21627030 = validateParameter(valid_21627030, JInt, required = false,
                                   default = nil)
  if valid_21627030 != nil:
    section.add "MaxRecords", valid_21627030
  var valid_21627031 = query.getOrDefault("NextToken")
  valid_21627031 = validateParameter(valid_21627031, JString, required = false,
                                   default = nil)
  if valid_21627031 != nil:
    section.add "NextToken", valid_21627031
  var valid_21627032 = query.getOrDefault("Action")
  valid_21627032 = validateParameter(valid_21627032, JString, required = true, default = newJString(
      "DescribeNotificationConfigurations"))
  if valid_21627032 != nil:
    section.add "Action", valid_21627032
  var valid_21627033 = query.getOrDefault("AutoScalingGroupNames")
  valid_21627033 = validateParameter(valid_21627033, JArray, required = false,
                                   default = nil)
  if valid_21627033 != nil:
    section.add "AutoScalingGroupNames", valid_21627033
  var valid_21627034 = query.getOrDefault("Version")
  valid_21627034 = validateParameter(valid_21627034, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627034 != nil:
    section.add "Version", valid_21627034
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627035 = header.getOrDefault("X-Amz-Date")
  valid_21627035 = validateParameter(valid_21627035, JString, required = false,
                                   default = nil)
  if valid_21627035 != nil:
    section.add "X-Amz-Date", valid_21627035
  var valid_21627036 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627036 = validateParameter(valid_21627036, JString, required = false,
                                   default = nil)
  if valid_21627036 != nil:
    section.add "X-Amz-Security-Token", valid_21627036
  var valid_21627037 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627037 = validateParameter(valid_21627037, JString, required = false,
                                   default = nil)
  if valid_21627037 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627037
  var valid_21627038 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627038 = validateParameter(valid_21627038, JString, required = false,
                                   default = nil)
  if valid_21627038 != nil:
    section.add "X-Amz-Algorithm", valid_21627038
  var valid_21627039 = header.getOrDefault("X-Amz-Signature")
  valid_21627039 = validateParameter(valid_21627039, JString, required = false,
                                   default = nil)
  if valid_21627039 != nil:
    section.add "X-Amz-Signature", valid_21627039
  var valid_21627040 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627040 = validateParameter(valid_21627040, JString, required = false,
                                   default = nil)
  if valid_21627040 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627040
  var valid_21627041 = header.getOrDefault("X-Amz-Credential")
  valid_21627041 = validateParameter(valid_21627041, JString, required = false,
                                   default = nil)
  if valid_21627041 != nil:
    section.add "X-Amz-Credential", valid_21627041
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627042: Call_GetDescribeNotificationConfigurations_21627027;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the notification actions associated with the specified Auto Scaling group.
  ## 
  let valid = call_21627042.validator(path, query, header, formData, body, _)
  let scheme = call_21627042.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627042.makeUrl(scheme.get, call_21627042.host, call_21627042.base,
                               call_21627042.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627042, uri, valid, _)

proc call*(call_21627043: Call_GetDescribeNotificationConfigurations_21627027;
          MaxRecords: int = 0; NextToken: string = "";
          Action: string = "DescribeNotificationConfigurations";
          AutoScalingGroupNames: JsonNode = nil; Version: string = "2011-01-01"): Recallable =
  ## getDescribeNotificationConfigurations
  ## Describes the notification actions associated with the specified Auto Scaling group.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   AutoScalingGroupNames: JArray
  ##                        : The name of the Auto Scaling group.
  ##   Version: string (required)
  var query_21627044 = newJObject()
  add(query_21627044, "MaxRecords", newJInt(MaxRecords))
  add(query_21627044, "NextToken", newJString(NextToken))
  add(query_21627044, "Action", newJString(Action))
  if AutoScalingGroupNames != nil:
    query_21627044.add "AutoScalingGroupNames", AutoScalingGroupNames
  add(query_21627044, "Version", newJString(Version))
  result = call_21627043.call(nil, query_21627044, nil, nil, nil)

var getDescribeNotificationConfigurations* = Call_GetDescribeNotificationConfigurations_21627027(
    name: "getDescribeNotificationConfigurations", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeNotificationConfigurations",
    validator: validate_GetDescribeNotificationConfigurations_21627028, base: "/",
    makeUrl: url_GetDescribeNotificationConfigurations_21627029,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribePolicies_21627084 = ref object of OpenApiRestCall_21625435
proc url_PostDescribePolicies_21627086(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribePolicies_21627085(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the policies for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627087 = query.getOrDefault("Action")
  valid_21627087 = validateParameter(valid_21627087, JString, required = true,
                                   default = newJString("DescribePolicies"))
  if valid_21627087 != nil:
    section.add "Action", valid_21627087
  var valid_21627088 = query.getOrDefault("Version")
  valid_21627088 = validateParameter(valid_21627088, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627088 != nil:
    section.add "Version", valid_21627088
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627089 = header.getOrDefault("X-Amz-Date")
  valid_21627089 = validateParameter(valid_21627089, JString, required = false,
                                   default = nil)
  if valid_21627089 != nil:
    section.add "X-Amz-Date", valid_21627089
  var valid_21627090 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627090 = validateParameter(valid_21627090, JString, required = false,
                                   default = nil)
  if valid_21627090 != nil:
    section.add "X-Amz-Security-Token", valid_21627090
  var valid_21627091 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627091 = validateParameter(valid_21627091, JString, required = false,
                                   default = nil)
  if valid_21627091 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627091
  var valid_21627092 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627092 = validateParameter(valid_21627092, JString, required = false,
                                   default = nil)
  if valid_21627092 != nil:
    section.add "X-Amz-Algorithm", valid_21627092
  var valid_21627093 = header.getOrDefault("X-Amz-Signature")
  valid_21627093 = validateParameter(valid_21627093, JString, required = false,
                                   default = nil)
  if valid_21627093 != nil:
    section.add "X-Amz-Signature", valid_21627093
  var valid_21627094 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627094 = validateParameter(valid_21627094, JString, required = false,
                                   default = nil)
  if valid_21627094 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627094
  var valid_21627095 = header.getOrDefault("X-Amz-Credential")
  valid_21627095 = validateParameter(valid_21627095, JString, required = false,
                                   default = nil)
  if valid_21627095 != nil:
    section.add "X-Amz-Credential", valid_21627095
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   PolicyNames: JArray
  ##              : The names of one or more policies. If you omit this parameter, all policies are described. If a group name is provided, the results are limited to that group. This list is limited to 50 items. If you specify an unknown policy name, it is ignored with no error.
  ##   PolicyTypes: JArray
  ##              : One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>.
  ##   MaxRecords: JInt
  ##             : The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  section = newJObject()
  var valid_21627096 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627096 = validateParameter(valid_21627096, JString, required = false,
                                   default = nil)
  if valid_21627096 != nil:
    section.add "AutoScalingGroupName", valid_21627096
  var valid_21627097 = formData.getOrDefault("NextToken")
  valid_21627097 = validateParameter(valid_21627097, JString, required = false,
                                   default = nil)
  if valid_21627097 != nil:
    section.add "NextToken", valid_21627097
  var valid_21627098 = formData.getOrDefault("PolicyNames")
  valid_21627098 = validateParameter(valid_21627098, JArray, required = false,
                                   default = nil)
  if valid_21627098 != nil:
    section.add "PolicyNames", valid_21627098
  var valid_21627099 = formData.getOrDefault("PolicyTypes")
  valid_21627099 = validateParameter(valid_21627099, JArray, required = false,
                                   default = nil)
  if valid_21627099 != nil:
    section.add "PolicyTypes", valid_21627099
  var valid_21627100 = formData.getOrDefault("MaxRecords")
  valid_21627100 = validateParameter(valid_21627100, JInt, required = false,
                                   default = nil)
  if valid_21627100 != nil:
    section.add "MaxRecords", valid_21627100
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627101: Call_PostDescribePolicies_21627084; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the policies for the specified Auto Scaling group.
  ## 
  let valid = call_21627101.validator(path, query, header, formData, body, _)
  let scheme = call_21627101.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627101.makeUrl(scheme.get, call_21627101.host, call_21627101.base,
                               call_21627101.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627101, uri, valid, _)

proc call*(call_21627102: Call_PostDescribePolicies_21627084;
          AutoScalingGroupName: string = ""; NextToken: string = "";
          PolicyNames: JsonNode = nil; Action: string = "DescribePolicies";
          PolicyTypes: JsonNode = nil; MaxRecords: int = 0;
          Version: string = "2011-01-01"): Recallable =
  ## postDescribePolicies
  ## Describes the policies for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   PolicyNames: JArray
  ##              : The names of one or more policies. If you omit this parameter, all policies are described. If a group name is provided, the results are limited to that group. This list is limited to 50 items. If you specify an unknown policy name, it is ignored with no error.
  ##   Action: string (required)
  ##   PolicyTypes: JArray
  ##              : One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>.
  ##   MaxRecords: int
  ##             : The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  var query_21627103 = newJObject()
  var formData_21627104 = newJObject()
  add(formData_21627104, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627104, "NextToken", newJString(NextToken))
  if PolicyNames != nil:
    formData_21627104.add "PolicyNames", PolicyNames
  add(query_21627103, "Action", newJString(Action))
  if PolicyTypes != nil:
    formData_21627104.add "PolicyTypes", PolicyTypes
  add(formData_21627104, "MaxRecords", newJInt(MaxRecords))
  add(query_21627103, "Version", newJString(Version))
  result = call_21627102.call(nil, query_21627103, nil, formData_21627104, nil)

var postDescribePolicies* = Call_PostDescribePolicies_21627084(
    name: "postDescribePolicies", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribePolicies",
    validator: validate_PostDescribePolicies_21627085, base: "/",
    makeUrl: url_PostDescribePolicies_21627086,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribePolicies_21627064 = ref object of OpenApiRestCall_21625435
proc url_GetDescribePolicies_21627066(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribePolicies_21627065(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the policies for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   PolicyNames: JArray
  ##              : The names of one or more policies. If you omit this parameter, all policies are described. If a group name is provided, the results are limited to that group. This list is limited to 50 items. If you specify an unknown policy name, it is ignored with no error.
  ##   Version: JString (required)
  ##   PolicyTypes: JArray
  ##              : One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>.
  section = newJObject()
  var valid_21627067 = query.getOrDefault("MaxRecords")
  valid_21627067 = validateParameter(valid_21627067, JInt, required = false,
                                   default = nil)
  if valid_21627067 != nil:
    section.add "MaxRecords", valid_21627067
  var valid_21627068 = query.getOrDefault("AutoScalingGroupName")
  valid_21627068 = validateParameter(valid_21627068, JString, required = false,
                                   default = nil)
  if valid_21627068 != nil:
    section.add "AutoScalingGroupName", valid_21627068
  var valid_21627069 = query.getOrDefault("NextToken")
  valid_21627069 = validateParameter(valid_21627069, JString, required = false,
                                   default = nil)
  if valid_21627069 != nil:
    section.add "NextToken", valid_21627069
  var valid_21627070 = query.getOrDefault("Action")
  valid_21627070 = validateParameter(valid_21627070, JString, required = true,
                                   default = newJString("DescribePolicies"))
  if valid_21627070 != nil:
    section.add "Action", valid_21627070
  var valid_21627071 = query.getOrDefault("PolicyNames")
  valid_21627071 = validateParameter(valid_21627071, JArray, required = false,
                                   default = nil)
  if valid_21627071 != nil:
    section.add "PolicyNames", valid_21627071
  var valid_21627072 = query.getOrDefault("Version")
  valid_21627072 = validateParameter(valid_21627072, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627072 != nil:
    section.add "Version", valid_21627072
  var valid_21627073 = query.getOrDefault("PolicyTypes")
  valid_21627073 = validateParameter(valid_21627073, JArray, required = false,
                                   default = nil)
  if valid_21627073 != nil:
    section.add "PolicyTypes", valid_21627073
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627074 = header.getOrDefault("X-Amz-Date")
  valid_21627074 = validateParameter(valid_21627074, JString, required = false,
                                   default = nil)
  if valid_21627074 != nil:
    section.add "X-Amz-Date", valid_21627074
  var valid_21627075 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627075 = validateParameter(valid_21627075, JString, required = false,
                                   default = nil)
  if valid_21627075 != nil:
    section.add "X-Amz-Security-Token", valid_21627075
  var valid_21627076 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627076 = validateParameter(valid_21627076, JString, required = false,
                                   default = nil)
  if valid_21627076 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627076
  var valid_21627077 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627077 = validateParameter(valid_21627077, JString, required = false,
                                   default = nil)
  if valid_21627077 != nil:
    section.add "X-Amz-Algorithm", valid_21627077
  var valid_21627078 = header.getOrDefault("X-Amz-Signature")
  valid_21627078 = validateParameter(valid_21627078, JString, required = false,
                                   default = nil)
  if valid_21627078 != nil:
    section.add "X-Amz-Signature", valid_21627078
  var valid_21627079 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627079 = validateParameter(valid_21627079, JString, required = false,
                                   default = nil)
  if valid_21627079 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627079
  var valid_21627080 = header.getOrDefault("X-Amz-Credential")
  valid_21627080 = validateParameter(valid_21627080, JString, required = false,
                                   default = nil)
  if valid_21627080 != nil:
    section.add "X-Amz-Credential", valid_21627080
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627081: Call_GetDescribePolicies_21627064; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the policies for the specified Auto Scaling group.
  ## 
  let valid = call_21627081.validator(path, query, header, formData, body, _)
  let scheme = call_21627081.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627081.makeUrl(scheme.get, call_21627081.host, call_21627081.base,
                               call_21627081.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627081, uri, valid, _)

proc call*(call_21627082: Call_GetDescribePolicies_21627064; MaxRecords: int = 0;
          AutoScalingGroupName: string = ""; NextToken: string = "";
          Action: string = "DescribePolicies"; PolicyNames: JsonNode = nil;
          Version: string = "2011-01-01"; PolicyTypes: JsonNode = nil): Recallable =
  ## getDescribePolicies
  ## Describes the policies for the specified Auto Scaling group.
  ##   MaxRecords: int
  ##             : The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   PolicyNames: JArray
  ##              : The names of one or more policies. If you omit this parameter, all policies are described. If a group name is provided, the results are limited to that group. This list is limited to 50 items. If you specify an unknown policy name, it is ignored with no error.
  ##   Version: string (required)
  ##   PolicyTypes: JArray
  ##              : One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>.
  var query_21627083 = newJObject()
  add(query_21627083, "MaxRecords", newJInt(MaxRecords))
  add(query_21627083, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627083, "NextToken", newJString(NextToken))
  add(query_21627083, "Action", newJString(Action))
  if PolicyNames != nil:
    query_21627083.add "PolicyNames", PolicyNames
  add(query_21627083, "Version", newJString(Version))
  if PolicyTypes != nil:
    query_21627083.add "PolicyTypes", PolicyTypes
  result = call_21627082.call(nil, query_21627083, nil, nil, nil)

var getDescribePolicies* = Call_GetDescribePolicies_21627064(
    name: "getDescribePolicies", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribePolicies",
    validator: validate_GetDescribePolicies_21627065, base: "/",
    makeUrl: url_GetDescribePolicies_21627066,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeScalingActivities_21627124 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeScalingActivities_21627126(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeScalingActivities_21627125(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more scaling activities for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627127 = query.getOrDefault("Action")
  valid_21627127 = validateParameter(valid_21627127, JString, required = true, default = newJString(
      "DescribeScalingActivities"))
  if valid_21627127 != nil:
    section.add "Action", valid_21627127
  var valid_21627128 = query.getOrDefault("Version")
  valid_21627128 = validateParameter(valid_21627128, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627128 != nil:
    section.add "Version", valid_21627128
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627129 = header.getOrDefault("X-Amz-Date")
  valid_21627129 = validateParameter(valid_21627129, JString, required = false,
                                   default = nil)
  if valid_21627129 != nil:
    section.add "X-Amz-Date", valid_21627129
  var valid_21627130 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627130 = validateParameter(valid_21627130, JString, required = false,
                                   default = nil)
  if valid_21627130 != nil:
    section.add "X-Amz-Security-Token", valid_21627130
  var valid_21627131 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627131 = validateParameter(valid_21627131, JString, required = false,
                                   default = nil)
  if valid_21627131 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627131
  var valid_21627132 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627132 = validateParameter(valid_21627132, JString, required = false,
                                   default = nil)
  if valid_21627132 != nil:
    section.add "X-Amz-Algorithm", valid_21627132
  var valid_21627133 = header.getOrDefault("X-Amz-Signature")
  valid_21627133 = validateParameter(valid_21627133, JString, required = false,
                                   default = nil)
  if valid_21627133 != nil:
    section.add "X-Amz-Signature", valid_21627133
  var valid_21627134 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627134 = validateParameter(valid_21627134, JString, required = false,
                                   default = nil)
  if valid_21627134 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627134
  var valid_21627135 = header.getOrDefault("X-Amz-Credential")
  valid_21627135 = validateParameter(valid_21627135, JString, required = false,
                                   default = nil)
  if valid_21627135 != nil:
    section.add "X-Amz-Credential", valid_21627135
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   ActivityIds: JArray
  ##              : The activity IDs of the desired scaling activities. You can specify up to 50 IDs. If you omit this parameter, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group.
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  section = newJObject()
  var valid_21627136 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627136 = validateParameter(valid_21627136, JString, required = false,
                                   default = nil)
  if valid_21627136 != nil:
    section.add "AutoScalingGroupName", valid_21627136
  var valid_21627137 = formData.getOrDefault("NextToken")
  valid_21627137 = validateParameter(valid_21627137, JString, required = false,
                                   default = nil)
  if valid_21627137 != nil:
    section.add "NextToken", valid_21627137
  var valid_21627138 = formData.getOrDefault("ActivityIds")
  valid_21627138 = validateParameter(valid_21627138, JArray, required = false,
                                   default = nil)
  if valid_21627138 != nil:
    section.add "ActivityIds", valid_21627138
  var valid_21627139 = formData.getOrDefault("MaxRecords")
  valid_21627139 = validateParameter(valid_21627139, JInt, required = false,
                                   default = nil)
  if valid_21627139 != nil:
    section.add "MaxRecords", valid_21627139
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627140: Call_PostDescribeScalingActivities_21627124;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more scaling activities for the specified Auto Scaling group.
  ## 
  let valid = call_21627140.validator(path, query, header, formData, body, _)
  let scheme = call_21627140.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627140.makeUrl(scheme.get, call_21627140.host, call_21627140.base,
                               call_21627140.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627140, uri, valid, _)

proc call*(call_21627141: Call_PostDescribeScalingActivities_21627124;
          AutoScalingGroupName: string = ""; NextToken: string = "";
          ActivityIds: JsonNode = nil; Action: string = "DescribeScalingActivities";
          MaxRecords: int = 0; Version: string = "2011-01-01"): Recallable =
  ## postDescribeScalingActivities
  ## Describes one or more scaling activities for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   ActivityIds: JArray
  ##              : The activity IDs of the desired scaling activities. You can specify up to 50 IDs. If you omit this parameter, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group.
  ##   Action: string (required)
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  var query_21627142 = newJObject()
  var formData_21627143 = newJObject()
  add(formData_21627143, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627143, "NextToken", newJString(NextToken))
  if ActivityIds != nil:
    formData_21627143.add "ActivityIds", ActivityIds
  add(query_21627142, "Action", newJString(Action))
  add(formData_21627143, "MaxRecords", newJInt(MaxRecords))
  add(query_21627142, "Version", newJString(Version))
  result = call_21627141.call(nil, query_21627142, nil, formData_21627143, nil)

var postDescribeScalingActivities* = Call_PostDescribeScalingActivities_21627124(
    name: "postDescribeScalingActivities", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeScalingActivities",
    validator: validate_PostDescribeScalingActivities_21627125, base: "/",
    makeUrl: url_PostDescribeScalingActivities_21627126,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeScalingActivities_21627105 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeScalingActivities_21627107(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeScalingActivities_21627106(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes one or more scaling activities for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   ActivityIds: JArray
  ##              : The activity IDs of the desired scaling activities. You can specify up to 50 IDs. If you omit this parameter, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627108 = query.getOrDefault("MaxRecords")
  valid_21627108 = validateParameter(valid_21627108, JInt, required = false,
                                   default = nil)
  if valid_21627108 != nil:
    section.add "MaxRecords", valid_21627108
  var valid_21627109 = query.getOrDefault("AutoScalingGroupName")
  valid_21627109 = validateParameter(valid_21627109, JString, required = false,
                                   default = nil)
  if valid_21627109 != nil:
    section.add "AutoScalingGroupName", valid_21627109
  var valid_21627110 = query.getOrDefault("NextToken")
  valid_21627110 = validateParameter(valid_21627110, JString, required = false,
                                   default = nil)
  if valid_21627110 != nil:
    section.add "NextToken", valid_21627110
  var valid_21627111 = query.getOrDefault("Action")
  valid_21627111 = validateParameter(valid_21627111, JString, required = true, default = newJString(
      "DescribeScalingActivities"))
  if valid_21627111 != nil:
    section.add "Action", valid_21627111
  var valid_21627112 = query.getOrDefault("ActivityIds")
  valid_21627112 = validateParameter(valid_21627112, JArray, required = false,
                                   default = nil)
  if valid_21627112 != nil:
    section.add "ActivityIds", valid_21627112
  var valid_21627113 = query.getOrDefault("Version")
  valid_21627113 = validateParameter(valid_21627113, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627113 != nil:
    section.add "Version", valid_21627113
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627114 = header.getOrDefault("X-Amz-Date")
  valid_21627114 = validateParameter(valid_21627114, JString, required = false,
                                   default = nil)
  if valid_21627114 != nil:
    section.add "X-Amz-Date", valid_21627114
  var valid_21627115 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627115 = validateParameter(valid_21627115, JString, required = false,
                                   default = nil)
  if valid_21627115 != nil:
    section.add "X-Amz-Security-Token", valid_21627115
  var valid_21627116 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627116 = validateParameter(valid_21627116, JString, required = false,
                                   default = nil)
  if valid_21627116 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627116
  var valid_21627117 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627117 = validateParameter(valid_21627117, JString, required = false,
                                   default = nil)
  if valid_21627117 != nil:
    section.add "X-Amz-Algorithm", valid_21627117
  var valid_21627118 = header.getOrDefault("X-Amz-Signature")
  valid_21627118 = validateParameter(valid_21627118, JString, required = false,
                                   default = nil)
  if valid_21627118 != nil:
    section.add "X-Amz-Signature", valid_21627118
  var valid_21627119 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627119 = validateParameter(valid_21627119, JString, required = false,
                                   default = nil)
  if valid_21627119 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627119
  var valid_21627120 = header.getOrDefault("X-Amz-Credential")
  valid_21627120 = validateParameter(valid_21627120, JString, required = false,
                                   default = nil)
  if valid_21627120 != nil:
    section.add "X-Amz-Credential", valid_21627120
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627121: Call_GetDescribeScalingActivities_21627105;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes one or more scaling activities for the specified Auto Scaling group.
  ## 
  let valid = call_21627121.validator(path, query, header, formData, body, _)
  let scheme = call_21627121.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627121.makeUrl(scheme.get, call_21627121.host, call_21627121.base,
                               call_21627121.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627121, uri, valid, _)

proc call*(call_21627122: Call_GetDescribeScalingActivities_21627105;
          MaxRecords: int = 0; AutoScalingGroupName: string = "";
          NextToken: string = ""; Action: string = "DescribeScalingActivities";
          ActivityIds: JsonNode = nil; Version: string = "2011-01-01"): Recallable =
  ## getDescribeScalingActivities
  ## Describes one or more scaling activities for the specified Auto Scaling group.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   ActivityIds: JArray
  ##              : The activity IDs of the desired scaling activities. You can specify up to 50 IDs. If you omit this parameter, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group.
  ##   Version: string (required)
  var query_21627123 = newJObject()
  add(query_21627123, "MaxRecords", newJInt(MaxRecords))
  add(query_21627123, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627123, "NextToken", newJString(NextToken))
  add(query_21627123, "Action", newJString(Action))
  if ActivityIds != nil:
    query_21627123.add "ActivityIds", ActivityIds
  add(query_21627123, "Version", newJString(Version))
  result = call_21627122.call(nil, query_21627123, nil, nil, nil)

var getDescribeScalingActivities* = Call_GetDescribeScalingActivities_21627105(
    name: "getDescribeScalingActivities", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeScalingActivities",
    validator: validate_GetDescribeScalingActivities_21627106, base: "/",
    makeUrl: url_GetDescribeScalingActivities_21627107,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeScalingProcessTypes_21627159 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeScalingProcessTypes_21627161(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeScalingProcessTypes_21627160(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the scaling process types for use with <a>ResumeProcesses</a> and <a>SuspendProcesses</a>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627162 = query.getOrDefault("Action")
  valid_21627162 = validateParameter(valid_21627162, JString, required = true, default = newJString(
      "DescribeScalingProcessTypes"))
  if valid_21627162 != nil:
    section.add "Action", valid_21627162
  var valid_21627163 = query.getOrDefault("Version")
  valid_21627163 = validateParameter(valid_21627163, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627163 != nil:
    section.add "Version", valid_21627163
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627164 = header.getOrDefault("X-Amz-Date")
  valid_21627164 = validateParameter(valid_21627164, JString, required = false,
                                   default = nil)
  if valid_21627164 != nil:
    section.add "X-Amz-Date", valid_21627164
  var valid_21627165 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627165 = validateParameter(valid_21627165, JString, required = false,
                                   default = nil)
  if valid_21627165 != nil:
    section.add "X-Amz-Security-Token", valid_21627165
  var valid_21627166 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627166 = validateParameter(valid_21627166, JString, required = false,
                                   default = nil)
  if valid_21627166 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627166
  var valid_21627167 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627167 = validateParameter(valid_21627167, JString, required = false,
                                   default = nil)
  if valid_21627167 != nil:
    section.add "X-Amz-Algorithm", valid_21627167
  var valid_21627168 = header.getOrDefault("X-Amz-Signature")
  valid_21627168 = validateParameter(valid_21627168, JString, required = false,
                                   default = nil)
  if valid_21627168 != nil:
    section.add "X-Amz-Signature", valid_21627168
  var valid_21627169 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627169 = validateParameter(valid_21627169, JString, required = false,
                                   default = nil)
  if valid_21627169 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627169
  var valid_21627170 = header.getOrDefault("X-Amz-Credential")
  valid_21627170 = validateParameter(valid_21627170, JString, required = false,
                                   default = nil)
  if valid_21627170 != nil:
    section.add "X-Amz-Credential", valid_21627170
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627171: Call_PostDescribeScalingProcessTypes_21627159;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the scaling process types for use with <a>ResumeProcesses</a> and <a>SuspendProcesses</a>.
  ## 
  let valid = call_21627171.validator(path, query, header, formData, body, _)
  let scheme = call_21627171.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627171.makeUrl(scheme.get, call_21627171.host, call_21627171.base,
                               call_21627171.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627171, uri, valid, _)

proc call*(call_21627172: Call_PostDescribeScalingProcessTypes_21627159;
          Action: string = "DescribeScalingProcessTypes";
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeScalingProcessTypes
  ## Describes the scaling process types for use with <a>ResumeProcesses</a> and <a>SuspendProcesses</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627173 = newJObject()
  add(query_21627173, "Action", newJString(Action))
  add(query_21627173, "Version", newJString(Version))
  result = call_21627172.call(nil, query_21627173, nil, nil, nil)

var postDescribeScalingProcessTypes* = Call_PostDescribeScalingProcessTypes_21627159(
    name: "postDescribeScalingProcessTypes", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeScalingProcessTypes",
    validator: validate_PostDescribeScalingProcessTypes_21627160, base: "/",
    makeUrl: url_PostDescribeScalingProcessTypes_21627161,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeScalingProcessTypes_21627144 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeScalingProcessTypes_21627146(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeScalingProcessTypes_21627145(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the scaling process types for use with <a>ResumeProcesses</a> and <a>SuspendProcesses</a>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627147 = query.getOrDefault("Action")
  valid_21627147 = validateParameter(valid_21627147, JString, required = true, default = newJString(
      "DescribeScalingProcessTypes"))
  if valid_21627147 != nil:
    section.add "Action", valid_21627147
  var valid_21627148 = query.getOrDefault("Version")
  valid_21627148 = validateParameter(valid_21627148, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627148 != nil:
    section.add "Version", valid_21627148
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627149 = header.getOrDefault("X-Amz-Date")
  valid_21627149 = validateParameter(valid_21627149, JString, required = false,
                                   default = nil)
  if valid_21627149 != nil:
    section.add "X-Amz-Date", valid_21627149
  var valid_21627150 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627150 = validateParameter(valid_21627150, JString, required = false,
                                   default = nil)
  if valid_21627150 != nil:
    section.add "X-Amz-Security-Token", valid_21627150
  var valid_21627151 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627151 = validateParameter(valid_21627151, JString, required = false,
                                   default = nil)
  if valid_21627151 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627151
  var valid_21627152 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627152 = validateParameter(valid_21627152, JString, required = false,
                                   default = nil)
  if valid_21627152 != nil:
    section.add "X-Amz-Algorithm", valid_21627152
  var valid_21627153 = header.getOrDefault("X-Amz-Signature")
  valid_21627153 = validateParameter(valid_21627153, JString, required = false,
                                   default = nil)
  if valid_21627153 != nil:
    section.add "X-Amz-Signature", valid_21627153
  var valid_21627154 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627154 = validateParameter(valid_21627154, JString, required = false,
                                   default = nil)
  if valid_21627154 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627154
  var valid_21627155 = header.getOrDefault("X-Amz-Credential")
  valid_21627155 = validateParameter(valid_21627155, JString, required = false,
                                   default = nil)
  if valid_21627155 != nil:
    section.add "X-Amz-Credential", valid_21627155
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627156: Call_GetDescribeScalingProcessTypes_21627144;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the scaling process types for use with <a>ResumeProcesses</a> and <a>SuspendProcesses</a>.
  ## 
  let valid = call_21627156.validator(path, query, header, formData, body, _)
  let scheme = call_21627156.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627156.makeUrl(scheme.get, call_21627156.host, call_21627156.base,
                               call_21627156.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627156, uri, valid, _)

proc call*(call_21627157: Call_GetDescribeScalingProcessTypes_21627144;
          Action: string = "DescribeScalingProcessTypes";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeScalingProcessTypes
  ## Describes the scaling process types for use with <a>ResumeProcesses</a> and <a>SuspendProcesses</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627158 = newJObject()
  add(query_21627158, "Action", newJString(Action))
  add(query_21627158, "Version", newJString(Version))
  result = call_21627157.call(nil, query_21627158, nil, nil, nil)

var getDescribeScalingProcessTypes* = Call_GetDescribeScalingProcessTypes_21627144(
    name: "getDescribeScalingProcessTypes", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeScalingProcessTypes",
    validator: validate_GetDescribeScalingProcessTypes_21627145, base: "/",
    makeUrl: url_GetDescribeScalingProcessTypes_21627146,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeScheduledActions_21627195 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeScheduledActions_21627197(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeScheduledActions_21627196(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the actions scheduled for your Auto Scaling group that haven't run or that have not reached their end time. To describe the actions that have already run, use <a>DescribeScalingActivities</a>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627198 = query.getOrDefault("Action")
  valid_21627198 = validateParameter(valid_21627198, JString, required = true, default = newJString(
      "DescribeScheduledActions"))
  if valid_21627198 != nil:
    section.add "Action", valid_21627198
  var valid_21627199 = query.getOrDefault("Version")
  valid_21627199 = validateParameter(valid_21627199, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627199 != nil:
    section.add "Version", valid_21627199
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627200 = header.getOrDefault("X-Amz-Date")
  valid_21627200 = validateParameter(valid_21627200, JString, required = false,
                                   default = nil)
  if valid_21627200 != nil:
    section.add "X-Amz-Date", valid_21627200
  var valid_21627201 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627201 = validateParameter(valid_21627201, JString, required = false,
                                   default = nil)
  if valid_21627201 != nil:
    section.add "X-Amz-Security-Token", valid_21627201
  var valid_21627202 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627202 = validateParameter(valid_21627202, JString, required = false,
                                   default = nil)
  if valid_21627202 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627202
  var valid_21627203 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627203 = validateParameter(valid_21627203, JString, required = false,
                                   default = nil)
  if valid_21627203 != nil:
    section.add "X-Amz-Algorithm", valid_21627203
  var valid_21627204 = header.getOrDefault("X-Amz-Signature")
  valid_21627204 = validateParameter(valid_21627204, JString, required = false,
                                   default = nil)
  if valid_21627204 != nil:
    section.add "X-Amz-Signature", valid_21627204
  var valid_21627205 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627205 = validateParameter(valid_21627205, JString, required = false,
                                   default = nil)
  if valid_21627205 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627205
  var valid_21627206 = header.getOrDefault("X-Amz-Credential")
  valid_21627206 = validateParameter(valid_21627206, JString, required = false,
                                   default = nil)
  if valid_21627206 != nil:
    section.add "X-Amz-Credential", valid_21627206
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   StartTime: JString
  ##            : The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   EndTime: JString
  ##          : The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   ScheduledActionNames: JArray
  ##                       : The names of one or more scheduled actions. You can specify up to 50 actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.
  section = newJObject()
  var valid_21627207 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627207 = validateParameter(valid_21627207, JString, required = false,
                                   default = nil)
  if valid_21627207 != nil:
    section.add "AutoScalingGroupName", valid_21627207
  var valid_21627208 = formData.getOrDefault("NextToken")
  valid_21627208 = validateParameter(valid_21627208, JString, required = false,
                                   default = nil)
  if valid_21627208 != nil:
    section.add "NextToken", valid_21627208
  var valid_21627209 = formData.getOrDefault("StartTime")
  valid_21627209 = validateParameter(valid_21627209, JString, required = false,
                                   default = nil)
  if valid_21627209 != nil:
    section.add "StartTime", valid_21627209
  var valid_21627210 = formData.getOrDefault("EndTime")
  valid_21627210 = validateParameter(valid_21627210, JString, required = false,
                                   default = nil)
  if valid_21627210 != nil:
    section.add "EndTime", valid_21627210
  var valid_21627211 = formData.getOrDefault("MaxRecords")
  valid_21627211 = validateParameter(valid_21627211, JInt, required = false,
                                   default = nil)
  if valid_21627211 != nil:
    section.add "MaxRecords", valid_21627211
  var valid_21627212 = formData.getOrDefault("ScheduledActionNames")
  valid_21627212 = validateParameter(valid_21627212, JArray, required = false,
                                   default = nil)
  if valid_21627212 != nil:
    section.add "ScheduledActionNames", valid_21627212
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627213: Call_PostDescribeScheduledActions_21627195;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the actions scheduled for your Auto Scaling group that haven't run or that have not reached their end time. To describe the actions that have already run, use <a>DescribeScalingActivities</a>.
  ## 
  let valid = call_21627213.validator(path, query, header, formData, body, _)
  let scheme = call_21627213.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627213.makeUrl(scheme.get, call_21627213.host, call_21627213.base,
                               call_21627213.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627213, uri, valid, _)

proc call*(call_21627214: Call_PostDescribeScheduledActions_21627195;
          AutoScalingGroupName: string = ""; NextToken: string = "";
          StartTime: string = ""; Action: string = "DescribeScheduledActions";
          EndTime: string = ""; MaxRecords: int = 0; Version: string = "2011-01-01";
          ScheduledActionNames: JsonNode = nil): Recallable =
  ## postDescribeScheduledActions
  ## Describes the actions scheduled for your Auto Scaling group that haven't run or that have not reached their end time. To describe the actions that have already run, use <a>DescribeScalingActivities</a>.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   StartTime: string
  ##            : The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   Action: string (required)
  ##   EndTime: string
  ##          : The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  ##   ScheduledActionNames: JArray
  ##                       : The names of one or more scheduled actions. You can specify up to 50 actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.
  var query_21627215 = newJObject()
  var formData_21627216 = newJObject()
  add(formData_21627216, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627216, "NextToken", newJString(NextToken))
  add(formData_21627216, "StartTime", newJString(StartTime))
  add(query_21627215, "Action", newJString(Action))
  add(formData_21627216, "EndTime", newJString(EndTime))
  add(formData_21627216, "MaxRecords", newJInt(MaxRecords))
  add(query_21627215, "Version", newJString(Version))
  if ScheduledActionNames != nil:
    formData_21627216.add "ScheduledActionNames", ScheduledActionNames
  result = call_21627214.call(nil, query_21627215, nil, formData_21627216, nil)

var postDescribeScheduledActions* = Call_PostDescribeScheduledActions_21627195(
    name: "postDescribeScheduledActions", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeScheduledActions",
    validator: validate_PostDescribeScheduledActions_21627196, base: "/",
    makeUrl: url_PostDescribeScheduledActions_21627197,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeScheduledActions_21627174 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeScheduledActions_21627176(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeScheduledActions_21627175(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the actions scheduled for your Auto Scaling group that haven't run or that have not reached their end time. To describe the actions that have already run, use <a>DescribeScalingActivities</a>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   StartTime: JString
  ##            : The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   ScheduledActionNames: JArray
  ##                       : The names of one or more scheduled actions. You can specify up to 50 actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.
  ##   EndTime: JString
  ##          : The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627177 = query.getOrDefault("MaxRecords")
  valid_21627177 = validateParameter(valid_21627177, JInt, required = false,
                                   default = nil)
  if valid_21627177 != nil:
    section.add "MaxRecords", valid_21627177
  var valid_21627178 = query.getOrDefault("AutoScalingGroupName")
  valid_21627178 = validateParameter(valid_21627178, JString, required = false,
                                   default = nil)
  if valid_21627178 != nil:
    section.add "AutoScalingGroupName", valid_21627178
  var valid_21627179 = query.getOrDefault("StartTime")
  valid_21627179 = validateParameter(valid_21627179, JString, required = false,
                                   default = nil)
  if valid_21627179 != nil:
    section.add "StartTime", valid_21627179
  var valid_21627180 = query.getOrDefault("NextToken")
  valid_21627180 = validateParameter(valid_21627180, JString, required = false,
                                   default = nil)
  if valid_21627180 != nil:
    section.add "NextToken", valid_21627180
  var valid_21627181 = query.getOrDefault("Action")
  valid_21627181 = validateParameter(valid_21627181, JString, required = true, default = newJString(
      "DescribeScheduledActions"))
  if valid_21627181 != nil:
    section.add "Action", valid_21627181
  var valid_21627182 = query.getOrDefault("ScheduledActionNames")
  valid_21627182 = validateParameter(valid_21627182, JArray, required = false,
                                   default = nil)
  if valid_21627182 != nil:
    section.add "ScheduledActionNames", valid_21627182
  var valid_21627183 = query.getOrDefault("EndTime")
  valid_21627183 = validateParameter(valid_21627183, JString, required = false,
                                   default = nil)
  if valid_21627183 != nil:
    section.add "EndTime", valid_21627183
  var valid_21627184 = query.getOrDefault("Version")
  valid_21627184 = validateParameter(valid_21627184, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627184 != nil:
    section.add "Version", valid_21627184
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627185 = header.getOrDefault("X-Amz-Date")
  valid_21627185 = validateParameter(valid_21627185, JString, required = false,
                                   default = nil)
  if valid_21627185 != nil:
    section.add "X-Amz-Date", valid_21627185
  var valid_21627186 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627186 = validateParameter(valid_21627186, JString, required = false,
                                   default = nil)
  if valid_21627186 != nil:
    section.add "X-Amz-Security-Token", valid_21627186
  var valid_21627187 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627187 = validateParameter(valid_21627187, JString, required = false,
                                   default = nil)
  if valid_21627187 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627187
  var valid_21627188 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627188 = validateParameter(valid_21627188, JString, required = false,
                                   default = nil)
  if valid_21627188 != nil:
    section.add "X-Amz-Algorithm", valid_21627188
  var valid_21627189 = header.getOrDefault("X-Amz-Signature")
  valid_21627189 = validateParameter(valid_21627189, JString, required = false,
                                   default = nil)
  if valid_21627189 != nil:
    section.add "X-Amz-Signature", valid_21627189
  var valid_21627190 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627190 = validateParameter(valid_21627190, JString, required = false,
                                   default = nil)
  if valid_21627190 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627190
  var valid_21627191 = header.getOrDefault("X-Amz-Credential")
  valid_21627191 = validateParameter(valid_21627191, JString, required = false,
                                   default = nil)
  if valid_21627191 != nil:
    section.add "X-Amz-Credential", valid_21627191
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627192: Call_GetDescribeScheduledActions_21627174;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the actions scheduled for your Auto Scaling group that haven't run or that have not reached their end time. To describe the actions that have already run, use <a>DescribeScalingActivities</a>.
  ## 
  let valid = call_21627192.validator(path, query, header, formData, body, _)
  let scheme = call_21627192.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627192.makeUrl(scheme.get, call_21627192.host, call_21627192.base,
                               call_21627192.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627192, uri, valid, _)

proc call*(call_21627193: Call_GetDescribeScheduledActions_21627174;
          MaxRecords: int = 0; AutoScalingGroupName: string = "";
          StartTime: string = ""; NextToken: string = "";
          Action: string = "DescribeScheduledActions";
          ScheduledActionNames: JsonNode = nil; EndTime: string = "";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeScheduledActions
  ## Describes the actions scheduled for your Auto Scaling group that haven't run or that have not reached their end time. To describe the actions that have already run, use <a>DescribeScalingActivities</a>.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   StartTime: string
  ##            : The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   ScheduledActionNames: JArray
  ##                       : The names of one or more scheduled actions. You can specify up to 50 actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.
  ##   EndTime: string
  ##          : The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
  ##   Version: string (required)
  var query_21627194 = newJObject()
  add(query_21627194, "MaxRecords", newJInt(MaxRecords))
  add(query_21627194, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627194, "StartTime", newJString(StartTime))
  add(query_21627194, "NextToken", newJString(NextToken))
  add(query_21627194, "Action", newJString(Action))
  if ScheduledActionNames != nil:
    query_21627194.add "ScheduledActionNames", ScheduledActionNames
  add(query_21627194, "EndTime", newJString(EndTime))
  add(query_21627194, "Version", newJString(Version))
  result = call_21627193.call(nil, query_21627194, nil, nil, nil)

var getDescribeScheduledActions* = Call_GetDescribeScheduledActions_21627174(
    name: "getDescribeScheduledActions", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DescribeScheduledActions",
    validator: validate_GetDescribeScheduledActions_21627175, base: "/",
    makeUrl: url_GetDescribeScheduledActions_21627176,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeTags_21627235 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeTags_21627237(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeTags_21627236(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627238 = query.getOrDefault("Action")
  valid_21627238 = validateParameter(valid_21627238, JString, required = true,
                                   default = newJString("DescribeTags"))
  if valid_21627238 != nil:
    section.add "Action", valid_21627238
  var valid_21627239 = query.getOrDefault("Version")
  valid_21627239 = validateParameter(valid_21627239, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627239 != nil:
    section.add "Version", valid_21627239
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627240 = header.getOrDefault("X-Amz-Date")
  valid_21627240 = validateParameter(valid_21627240, JString, required = false,
                                   default = nil)
  if valid_21627240 != nil:
    section.add "X-Amz-Date", valid_21627240
  var valid_21627241 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627241 = validateParameter(valid_21627241, JString, required = false,
                                   default = nil)
  if valid_21627241 != nil:
    section.add "X-Amz-Security-Token", valid_21627241
  var valid_21627242 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627242 = validateParameter(valid_21627242, JString, required = false,
                                   default = nil)
  if valid_21627242 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627242
  var valid_21627243 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627243 = validateParameter(valid_21627243, JString, required = false,
                                   default = nil)
  if valid_21627243 != nil:
    section.add "X-Amz-Algorithm", valid_21627243
  var valid_21627244 = header.getOrDefault("X-Amz-Signature")
  valid_21627244 = validateParameter(valid_21627244, JString, required = false,
                                   default = nil)
  if valid_21627244 != nil:
    section.add "X-Amz-Signature", valid_21627244
  var valid_21627245 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627245 = validateParameter(valid_21627245, JString, required = false,
                                   default = nil)
  if valid_21627245 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627245
  var valid_21627246 = header.getOrDefault("X-Amz-Credential")
  valid_21627246 = validateParameter(valid_21627246, JString, required = false,
                                   default = nil)
  if valid_21627246 != nil:
    section.add "X-Amz-Credential", valid_21627246
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Filters: JArray
  ##          : One or more filters to scope the tags to return. The maximum number of filters per filter type (for example, <code>auto-scaling-group</code>) is 1000.
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  section = newJObject()
  var valid_21627247 = formData.getOrDefault("NextToken")
  valid_21627247 = validateParameter(valid_21627247, JString, required = false,
                                   default = nil)
  if valid_21627247 != nil:
    section.add "NextToken", valid_21627247
  var valid_21627248 = formData.getOrDefault("Filters")
  valid_21627248 = validateParameter(valid_21627248, JArray, required = false,
                                   default = nil)
  if valid_21627248 != nil:
    section.add "Filters", valid_21627248
  var valid_21627249 = formData.getOrDefault("MaxRecords")
  valid_21627249 = validateParameter(valid_21627249, JInt, required = false,
                                   default = nil)
  if valid_21627249 != nil:
    section.add "MaxRecords", valid_21627249
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627250: Call_PostDescribeTags_21627235; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p>
  ## 
  let valid = call_21627250.validator(path, query, header, formData, body, _)
  let scheme = call_21627250.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627250.makeUrl(scheme.get, call_21627250.host, call_21627250.base,
                               call_21627250.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627250, uri, valid, _)

proc call*(call_21627251: Call_PostDescribeTags_21627235; NextToken: string = "";
          Action: string = "DescribeTags"; Filters: JsonNode = nil; MaxRecords: int = 0;
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeTags
  ## <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p>
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   Filters: JArray
  ##          : One or more filters to scope the tags to return. The maximum number of filters per filter type (for example, <code>auto-scaling-group</code>) is 1000.
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Version: string (required)
  var query_21627252 = newJObject()
  var formData_21627253 = newJObject()
  add(formData_21627253, "NextToken", newJString(NextToken))
  add(query_21627252, "Action", newJString(Action))
  if Filters != nil:
    formData_21627253.add "Filters", Filters
  add(formData_21627253, "MaxRecords", newJInt(MaxRecords))
  add(query_21627252, "Version", newJString(Version))
  result = call_21627251.call(nil, query_21627252, nil, formData_21627253, nil)

var postDescribeTags* = Call_PostDescribeTags_21627235(name: "postDescribeTags",
    meth: HttpMethod.HttpPost, host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeTags", validator: validate_PostDescribeTags_21627236,
    base: "/", makeUrl: url_PostDescribeTags_21627237,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeTags_21627217 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeTags_21627219(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeTags_21627218(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxRecords: JInt
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Filters: JArray
  ##          : One or more filters to scope the tags to return. The maximum number of filters per filter type (for example, <code>auto-scaling-group</code>) is 1000.
  ##   NextToken: JString
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627220 = query.getOrDefault("MaxRecords")
  valid_21627220 = validateParameter(valid_21627220, JInt, required = false,
                                   default = nil)
  if valid_21627220 != nil:
    section.add "MaxRecords", valid_21627220
  var valid_21627221 = query.getOrDefault("Filters")
  valid_21627221 = validateParameter(valid_21627221, JArray, required = false,
                                   default = nil)
  if valid_21627221 != nil:
    section.add "Filters", valid_21627221
  var valid_21627222 = query.getOrDefault("NextToken")
  valid_21627222 = validateParameter(valid_21627222, JString, required = false,
                                   default = nil)
  if valid_21627222 != nil:
    section.add "NextToken", valid_21627222
  var valid_21627223 = query.getOrDefault("Action")
  valid_21627223 = validateParameter(valid_21627223, JString, required = true,
                                   default = newJString("DescribeTags"))
  if valid_21627223 != nil:
    section.add "Action", valid_21627223
  var valid_21627224 = query.getOrDefault("Version")
  valid_21627224 = validateParameter(valid_21627224, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627224 != nil:
    section.add "Version", valid_21627224
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627225 = header.getOrDefault("X-Amz-Date")
  valid_21627225 = validateParameter(valid_21627225, JString, required = false,
                                   default = nil)
  if valid_21627225 != nil:
    section.add "X-Amz-Date", valid_21627225
  var valid_21627226 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627226 = validateParameter(valid_21627226, JString, required = false,
                                   default = nil)
  if valid_21627226 != nil:
    section.add "X-Amz-Security-Token", valid_21627226
  var valid_21627227 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627227 = validateParameter(valid_21627227, JString, required = false,
                                   default = nil)
  if valid_21627227 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627227
  var valid_21627228 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627228 = validateParameter(valid_21627228, JString, required = false,
                                   default = nil)
  if valid_21627228 != nil:
    section.add "X-Amz-Algorithm", valid_21627228
  var valid_21627229 = header.getOrDefault("X-Amz-Signature")
  valid_21627229 = validateParameter(valid_21627229, JString, required = false,
                                   default = nil)
  if valid_21627229 != nil:
    section.add "X-Amz-Signature", valid_21627229
  var valid_21627230 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627230 = validateParameter(valid_21627230, JString, required = false,
                                   default = nil)
  if valid_21627230 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627230
  var valid_21627231 = header.getOrDefault("X-Amz-Credential")
  valid_21627231 = validateParameter(valid_21627231, JString, required = false,
                                   default = nil)
  if valid_21627231 != nil:
    section.add "X-Amz-Credential", valid_21627231
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627232: Call_GetDescribeTags_21627217; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p>
  ## 
  let valid = call_21627232.validator(path, query, header, formData, body, _)
  let scheme = call_21627232.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627232.makeUrl(scheme.get, call_21627232.host, call_21627232.base,
                               call_21627232.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627232, uri, valid, _)

proc call*(call_21627233: Call_GetDescribeTags_21627217; MaxRecords: int = 0;
          Filters: JsonNode = nil; NextToken: string = "";
          Action: string = "DescribeTags"; Version: string = "2011-01-01"): Recallable =
  ## getDescribeTags
  ## <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p>
  ##   MaxRecords: int
  ##             : The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.
  ##   Filters: JArray
  ##          : One or more filters to scope the tags to return. The maximum number of filters per filter type (for example, <code>auto-scaling-group</code>) is 1000.
  ##   NextToken: string
  ##            : The token for the next set of items to return. (You received this token from a previous call.)
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627234 = newJObject()
  add(query_21627234, "MaxRecords", newJInt(MaxRecords))
  if Filters != nil:
    query_21627234.add "Filters", Filters
  add(query_21627234, "NextToken", newJString(NextToken))
  add(query_21627234, "Action", newJString(Action))
  add(query_21627234, "Version", newJString(Version))
  result = call_21627233.call(nil, query_21627234, nil, nil, nil)

var getDescribeTags* = Call_GetDescribeTags_21627217(name: "getDescribeTags",
    meth: HttpMethod.HttpGet, host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeTags", validator: validate_GetDescribeTags_21627218,
    base: "/", makeUrl: url_GetDescribeTags_21627219,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeTerminationPolicyTypes_21627269 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeTerminationPolicyTypes_21627271(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeTerminationPolicyTypes_21627270(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627272 = query.getOrDefault("Action")
  valid_21627272 = validateParameter(valid_21627272, JString, required = true, default = newJString(
      "DescribeTerminationPolicyTypes"))
  if valid_21627272 != nil:
    section.add "Action", valid_21627272
  var valid_21627273 = query.getOrDefault("Version")
  valid_21627273 = validateParameter(valid_21627273, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627273 != nil:
    section.add "Version", valid_21627273
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627274 = header.getOrDefault("X-Amz-Date")
  valid_21627274 = validateParameter(valid_21627274, JString, required = false,
                                   default = nil)
  if valid_21627274 != nil:
    section.add "X-Amz-Date", valid_21627274
  var valid_21627275 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627275 = validateParameter(valid_21627275, JString, required = false,
                                   default = nil)
  if valid_21627275 != nil:
    section.add "X-Amz-Security-Token", valid_21627275
  var valid_21627276 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627276 = validateParameter(valid_21627276, JString, required = false,
                                   default = nil)
  if valid_21627276 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627276
  var valid_21627277 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627277 = validateParameter(valid_21627277, JString, required = false,
                                   default = nil)
  if valid_21627277 != nil:
    section.add "X-Amz-Algorithm", valid_21627277
  var valid_21627278 = header.getOrDefault("X-Amz-Signature")
  valid_21627278 = validateParameter(valid_21627278, JString, required = false,
                                   default = nil)
  if valid_21627278 != nil:
    section.add "X-Amz-Signature", valid_21627278
  var valid_21627279 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627279 = validateParameter(valid_21627279, JString, required = false,
                                   default = nil)
  if valid_21627279 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627279
  var valid_21627280 = header.getOrDefault("X-Amz-Credential")
  valid_21627280 = validateParameter(valid_21627280, JString, required = false,
                                   default = nil)
  if valid_21627280 != nil:
    section.add "X-Amz-Credential", valid_21627280
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627281: Call_PostDescribeTerminationPolicyTypes_21627269;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627281.validator(path, query, header, formData, body, _)
  let scheme = call_21627281.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627281.makeUrl(scheme.get, call_21627281.host, call_21627281.base,
                               call_21627281.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627281, uri, valid, _)

proc call*(call_21627282: Call_PostDescribeTerminationPolicyTypes_21627269;
          Action: string = "DescribeTerminationPolicyTypes";
          Version: string = "2011-01-01"): Recallable =
  ## postDescribeTerminationPolicyTypes
  ## <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627283 = newJObject()
  add(query_21627283, "Action", newJString(Action))
  add(query_21627283, "Version", newJString(Version))
  result = call_21627282.call(nil, query_21627283, nil, nil, nil)

var postDescribeTerminationPolicyTypes* = Call_PostDescribeTerminationPolicyTypes_21627269(
    name: "postDescribeTerminationPolicyTypes", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeTerminationPolicyTypes",
    validator: validate_PostDescribeTerminationPolicyTypes_21627270, base: "/",
    makeUrl: url_PostDescribeTerminationPolicyTypes_21627271,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeTerminationPolicyTypes_21627254 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeTerminationPolicyTypes_21627256(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeTerminationPolicyTypes_21627255(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627257 = query.getOrDefault("Action")
  valid_21627257 = validateParameter(valid_21627257, JString, required = true, default = newJString(
      "DescribeTerminationPolicyTypes"))
  if valid_21627257 != nil:
    section.add "Action", valid_21627257
  var valid_21627258 = query.getOrDefault("Version")
  valid_21627258 = validateParameter(valid_21627258, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627258 != nil:
    section.add "Version", valid_21627258
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627259 = header.getOrDefault("X-Amz-Date")
  valid_21627259 = validateParameter(valid_21627259, JString, required = false,
                                   default = nil)
  if valid_21627259 != nil:
    section.add "X-Amz-Date", valid_21627259
  var valid_21627260 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627260 = validateParameter(valid_21627260, JString, required = false,
                                   default = nil)
  if valid_21627260 != nil:
    section.add "X-Amz-Security-Token", valid_21627260
  var valid_21627261 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627261 = validateParameter(valid_21627261, JString, required = false,
                                   default = nil)
  if valid_21627261 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627261
  var valid_21627262 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627262 = validateParameter(valid_21627262, JString, required = false,
                                   default = nil)
  if valid_21627262 != nil:
    section.add "X-Amz-Algorithm", valid_21627262
  var valid_21627263 = header.getOrDefault("X-Amz-Signature")
  valid_21627263 = validateParameter(valid_21627263, JString, required = false,
                                   default = nil)
  if valid_21627263 != nil:
    section.add "X-Amz-Signature", valid_21627263
  var valid_21627264 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627264 = validateParameter(valid_21627264, JString, required = false,
                                   default = nil)
  if valid_21627264 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627264
  var valid_21627265 = header.getOrDefault("X-Amz-Credential")
  valid_21627265 = validateParameter(valid_21627265, JString, required = false,
                                   default = nil)
  if valid_21627265 != nil:
    section.add "X-Amz-Credential", valid_21627265
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627266: Call_GetDescribeTerminationPolicyTypes_21627254;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627266.validator(path, query, header, formData, body, _)
  let scheme = call_21627266.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627266.makeUrl(scheme.get, call_21627266.host, call_21627266.base,
                               call_21627266.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627266, uri, valid, _)

proc call*(call_21627267: Call_GetDescribeTerminationPolicyTypes_21627254;
          Action: string = "DescribeTerminationPolicyTypes";
          Version: string = "2011-01-01"): Recallable =
  ## getDescribeTerminationPolicyTypes
  ## <p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627268 = newJObject()
  add(query_21627268, "Action", newJString(Action))
  add(query_21627268, "Version", newJString(Version))
  result = call_21627267.call(nil, query_21627268, nil, nil, nil)

var getDescribeTerminationPolicyTypes* = Call_GetDescribeTerminationPolicyTypes_21627254(
    name: "getDescribeTerminationPolicyTypes", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DescribeTerminationPolicyTypes",
    validator: validate_GetDescribeTerminationPolicyTypes_21627255, base: "/",
    makeUrl: url_GetDescribeTerminationPolicyTypes_21627256,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetachInstances_21627302 = ref object of OpenApiRestCall_21625435
proc url_PostDetachInstances_21627304(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetachInstances_21627303(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627305 = query.getOrDefault("Action")
  valid_21627305 = validateParameter(valid_21627305, JString, required = true,
                                   default = newJString("DetachInstances"))
  if valid_21627305 != nil:
    section.add "Action", valid_21627305
  var valid_21627306 = query.getOrDefault("Version")
  valid_21627306 = validateParameter(valid_21627306, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627306 != nil:
    section.add "Version", valid_21627306
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627307 = header.getOrDefault("X-Amz-Date")
  valid_21627307 = validateParameter(valid_21627307, JString, required = false,
                                   default = nil)
  if valid_21627307 != nil:
    section.add "X-Amz-Date", valid_21627307
  var valid_21627308 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627308 = validateParameter(valid_21627308, JString, required = false,
                                   default = nil)
  if valid_21627308 != nil:
    section.add "X-Amz-Security-Token", valid_21627308
  var valid_21627309 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627309 = validateParameter(valid_21627309, JString, required = false,
                                   default = nil)
  if valid_21627309 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627309
  var valid_21627310 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627310 = validateParameter(valid_21627310, JString, required = false,
                                   default = nil)
  if valid_21627310 != nil:
    section.add "X-Amz-Algorithm", valid_21627310
  var valid_21627311 = header.getOrDefault("X-Amz-Signature")
  valid_21627311 = validateParameter(valid_21627311, JString, required = false,
                                   default = nil)
  if valid_21627311 != nil:
    section.add "X-Amz-Signature", valid_21627311
  var valid_21627312 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627312 = validateParameter(valid_21627312, JString, required = false,
                                   default = nil)
  if valid_21627312 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627312
  var valid_21627313 = header.getOrDefault("X-Amz-Credential")
  valid_21627313 = validateParameter(valid_21627313, JString, required = false,
                                   default = nil)
  if valid_21627313 != nil:
    section.add "X-Amz-Credential", valid_21627313
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   ShouldDecrementDesiredCapacity: JBool (required)
  ##                                 : Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627314 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627314 = validateParameter(valid_21627314, JString, required = true,
                                   default = nil)
  if valid_21627314 != nil:
    section.add "AutoScalingGroupName", valid_21627314
  var valid_21627315 = formData.getOrDefault("InstanceIds")
  valid_21627315 = validateParameter(valid_21627315, JArray, required = false,
                                   default = nil)
  if valid_21627315 != nil:
    section.add "InstanceIds", valid_21627315
  var valid_21627316 = formData.getOrDefault("ShouldDecrementDesiredCapacity")
  valid_21627316 = validateParameter(valid_21627316, JBool, required = true,
                                   default = nil)
  if valid_21627316 != nil:
    section.add "ShouldDecrementDesiredCapacity", valid_21627316
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627317: Call_PostDetachInstances_21627302; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627317.validator(path, query, header, formData, body, _)
  let scheme = call_21627317.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627317.makeUrl(scheme.get, call_21627317.host, call_21627317.base,
                               call_21627317.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627317, uri, valid, _)

proc call*(call_21627318: Call_PostDetachInstances_21627302;
          AutoScalingGroupName: string; ShouldDecrementDesiredCapacity: bool;
          InstanceIds: JsonNode = nil; Action: string = "DetachInstances";
          Version: string = "2011-01-01"): Recallable =
  ## postDetachInstances
  ## <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   ShouldDecrementDesiredCapacity: bool (required)
  ##                                 : Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627319 = newJObject()
  var formData_21627320 = newJObject()
  add(formData_21627320, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if InstanceIds != nil:
    formData_21627320.add "InstanceIds", InstanceIds
  add(formData_21627320, "ShouldDecrementDesiredCapacity",
      newJBool(ShouldDecrementDesiredCapacity))
  add(query_21627319, "Action", newJString(Action))
  add(query_21627319, "Version", newJString(Version))
  result = call_21627318.call(nil, query_21627319, nil, formData_21627320, nil)

var postDetachInstances* = Call_PostDetachInstances_21627302(
    name: "postDetachInstances", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DetachInstances",
    validator: validate_PostDetachInstances_21627303, base: "/",
    makeUrl: url_PostDetachInstances_21627304,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetachInstances_21627284 = ref object of OpenApiRestCall_21625435
proc url_GetDetachInstances_21627286(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetachInstances_21627285(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   ShouldDecrementDesiredCapacity: JBool (required)
  ##                                 : Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627287 = query.getOrDefault("AutoScalingGroupName")
  valid_21627287 = validateParameter(valid_21627287, JString, required = true,
                                   default = nil)
  if valid_21627287 != nil:
    section.add "AutoScalingGroupName", valid_21627287
  var valid_21627288 = query.getOrDefault("Action")
  valid_21627288 = validateParameter(valid_21627288, JString, required = true,
                                   default = newJString("DetachInstances"))
  if valid_21627288 != nil:
    section.add "Action", valid_21627288
  var valid_21627289 = query.getOrDefault("ShouldDecrementDesiredCapacity")
  valid_21627289 = validateParameter(valid_21627289, JBool, required = true,
                                   default = nil)
  if valid_21627289 != nil:
    section.add "ShouldDecrementDesiredCapacity", valid_21627289
  var valid_21627290 = query.getOrDefault("InstanceIds")
  valid_21627290 = validateParameter(valid_21627290, JArray, required = false,
                                   default = nil)
  if valid_21627290 != nil:
    section.add "InstanceIds", valid_21627290
  var valid_21627291 = query.getOrDefault("Version")
  valid_21627291 = validateParameter(valid_21627291, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627291 != nil:
    section.add "Version", valid_21627291
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627292 = header.getOrDefault("X-Amz-Date")
  valid_21627292 = validateParameter(valid_21627292, JString, required = false,
                                   default = nil)
  if valid_21627292 != nil:
    section.add "X-Amz-Date", valid_21627292
  var valid_21627293 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627293 = validateParameter(valid_21627293, JString, required = false,
                                   default = nil)
  if valid_21627293 != nil:
    section.add "X-Amz-Security-Token", valid_21627293
  var valid_21627294 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627294 = validateParameter(valid_21627294, JString, required = false,
                                   default = nil)
  if valid_21627294 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627294
  var valid_21627295 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627295 = validateParameter(valid_21627295, JString, required = false,
                                   default = nil)
  if valid_21627295 != nil:
    section.add "X-Amz-Algorithm", valid_21627295
  var valid_21627296 = header.getOrDefault("X-Amz-Signature")
  valid_21627296 = validateParameter(valid_21627296, JString, required = false,
                                   default = nil)
  if valid_21627296 != nil:
    section.add "X-Amz-Signature", valid_21627296
  var valid_21627297 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627297 = validateParameter(valid_21627297, JString, required = false,
                                   default = nil)
  if valid_21627297 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627297
  var valid_21627298 = header.getOrDefault("X-Amz-Credential")
  valid_21627298 = validateParameter(valid_21627298, JString, required = false,
                                   default = nil)
  if valid_21627298 != nil:
    section.add "X-Amz-Credential", valid_21627298
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627299: Call_GetDetachInstances_21627284; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627299.validator(path, query, header, formData, body, _)
  let scheme = call_21627299.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627299.makeUrl(scheme.get, call_21627299.host, call_21627299.base,
                               call_21627299.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627299, uri, valid, _)

proc call*(call_21627300: Call_GetDetachInstances_21627284;
          AutoScalingGroupName: string; ShouldDecrementDesiredCapacity: bool;
          Action: string = "DetachInstances"; InstanceIds: JsonNode = nil;
          Version: string = "2011-01-01"): Recallable =
  ## getDetachInstances
  ## <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   ShouldDecrementDesiredCapacity: bool (required)
  ##                                 : Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: string (required)
  var query_21627301 = newJObject()
  add(query_21627301, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627301, "Action", newJString(Action))
  add(query_21627301, "ShouldDecrementDesiredCapacity",
      newJBool(ShouldDecrementDesiredCapacity))
  if InstanceIds != nil:
    query_21627301.add "InstanceIds", InstanceIds
  add(query_21627301, "Version", newJString(Version))
  result = call_21627300.call(nil, query_21627301, nil, nil, nil)

var getDetachInstances* = Call_GetDetachInstances_21627284(
    name: "getDetachInstances", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DetachInstances",
    validator: validate_GetDetachInstances_21627285, base: "/",
    makeUrl: url_GetDetachInstances_21627286, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetachLoadBalancerTargetGroups_21627338 = ref object of OpenApiRestCall_21625435
proc url_PostDetachLoadBalancerTargetGroups_21627340(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetachLoadBalancerTargetGroups_21627339(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Detaches one or more target groups from the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627341 = query.getOrDefault("Action")
  valid_21627341 = validateParameter(valid_21627341, JString, required = true, default = newJString(
      "DetachLoadBalancerTargetGroups"))
  if valid_21627341 != nil:
    section.add "Action", valid_21627341
  var valid_21627342 = query.getOrDefault("Version")
  valid_21627342 = validateParameter(valid_21627342, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627342 != nil:
    section.add "Version", valid_21627342
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627343 = header.getOrDefault("X-Amz-Date")
  valid_21627343 = validateParameter(valid_21627343, JString, required = false,
                                   default = nil)
  if valid_21627343 != nil:
    section.add "X-Amz-Date", valid_21627343
  var valid_21627344 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627344 = validateParameter(valid_21627344, JString, required = false,
                                   default = nil)
  if valid_21627344 != nil:
    section.add "X-Amz-Security-Token", valid_21627344
  var valid_21627345 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627345 = validateParameter(valid_21627345, JString, required = false,
                                   default = nil)
  if valid_21627345 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627345
  var valid_21627346 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627346 = validateParameter(valid_21627346, JString, required = false,
                                   default = nil)
  if valid_21627346 != nil:
    section.add "X-Amz-Algorithm", valid_21627346
  var valid_21627347 = header.getOrDefault("X-Amz-Signature")
  valid_21627347 = validateParameter(valid_21627347, JString, required = false,
                                   default = nil)
  if valid_21627347 != nil:
    section.add "X-Amz-Signature", valid_21627347
  var valid_21627348 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627348 = validateParameter(valid_21627348, JString, required = false,
                                   default = nil)
  if valid_21627348 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627348
  var valid_21627349 = header.getOrDefault("X-Amz-Credential")
  valid_21627349 = validateParameter(valid_21627349, JString, required = false,
                                   default = nil)
  if valid_21627349 != nil:
    section.add "X-Amz-Credential", valid_21627349
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627350 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627350 = validateParameter(valid_21627350, JString, required = true,
                                   default = nil)
  if valid_21627350 != nil:
    section.add "AutoScalingGroupName", valid_21627350
  var valid_21627351 = formData.getOrDefault("TargetGroupARNs")
  valid_21627351 = validateParameter(valid_21627351, JArray, required = true,
                                   default = nil)
  if valid_21627351 != nil:
    section.add "TargetGroupARNs", valid_21627351
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627352: Call_PostDetachLoadBalancerTargetGroups_21627338;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Detaches one or more target groups from the specified Auto Scaling group.
  ## 
  let valid = call_21627352.validator(path, query, header, formData, body, _)
  let scheme = call_21627352.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627352.makeUrl(scheme.get, call_21627352.host, call_21627352.base,
                               call_21627352.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627352, uri, valid, _)

proc call*(call_21627353: Call_PostDetachLoadBalancerTargetGroups_21627338;
          AutoScalingGroupName: string; TargetGroupARNs: JsonNode;
          Action: string = "DetachLoadBalancerTargetGroups";
          Version: string = "2011-01-01"): Recallable =
  ## postDetachLoadBalancerTargetGroups
  ## Detaches one or more target groups from the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627354 = newJObject()
  var formData_21627355 = newJObject()
  add(formData_21627355, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if TargetGroupARNs != nil:
    formData_21627355.add "TargetGroupARNs", TargetGroupARNs
  add(query_21627354, "Action", newJString(Action))
  add(query_21627354, "Version", newJString(Version))
  result = call_21627353.call(nil, query_21627354, nil, formData_21627355, nil)

var postDetachLoadBalancerTargetGroups* = Call_PostDetachLoadBalancerTargetGroups_21627338(
    name: "postDetachLoadBalancerTargetGroups", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DetachLoadBalancerTargetGroups",
    validator: validate_PostDetachLoadBalancerTargetGroups_21627339, base: "/",
    makeUrl: url_PostDetachLoadBalancerTargetGroups_21627340,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetachLoadBalancerTargetGroups_21627321 = ref object of OpenApiRestCall_21625435
proc url_GetDetachLoadBalancerTargetGroups_21627323(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetachLoadBalancerTargetGroups_21627322(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Detaches one or more target groups from the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627324 = query.getOrDefault("AutoScalingGroupName")
  valid_21627324 = validateParameter(valid_21627324, JString, required = true,
                                   default = nil)
  if valid_21627324 != nil:
    section.add "AutoScalingGroupName", valid_21627324
  var valid_21627325 = query.getOrDefault("Action")
  valid_21627325 = validateParameter(valid_21627325, JString, required = true, default = newJString(
      "DetachLoadBalancerTargetGroups"))
  if valid_21627325 != nil:
    section.add "Action", valid_21627325
  var valid_21627326 = query.getOrDefault("TargetGroupARNs")
  valid_21627326 = validateParameter(valid_21627326, JArray, required = true,
                                   default = nil)
  if valid_21627326 != nil:
    section.add "TargetGroupARNs", valid_21627326
  var valid_21627327 = query.getOrDefault("Version")
  valid_21627327 = validateParameter(valid_21627327, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627327 != nil:
    section.add "Version", valid_21627327
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627328 = header.getOrDefault("X-Amz-Date")
  valid_21627328 = validateParameter(valid_21627328, JString, required = false,
                                   default = nil)
  if valid_21627328 != nil:
    section.add "X-Amz-Date", valid_21627328
  var valid_21627329 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627329 = validateParameter(valid_21627329, JString, required = false,
                                   default = nil)
  if valid_21627329 != nil:
    section.add "X-Amz-Security-Token", valid_21627329
  var valid_21627330 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627330 = validateParameter(valid_21627330, JString, required = false,
                                   default = nil)
  if valid_21627330 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627330
  var valid_21627331 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627331 = validateParameter(valid_21627331, JString, required = false,
                                   default = nil)
  if valid_21627331 != nil:
    section.add "X-Amz-Algorithm", valid_21627331
  var valid_21627332 = header.getOrDefault("X-Amz-Signature")
  valid_21627332 = validateParameter(valid_21627332, JString, required = false,
                                   default = nil)
  if valid_21627332 != nil:
    section.add "X-Amz-Signature", valid_21627332
  var valid_21627333 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627333 = validateParameter(valid_21627333, JString, required = false,
                                   default = nil)
  if valid_21627333 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627333
  var valid_21627334 = header.getOrDefault("X-Amz-Credential")
  valid_21627334 = validateParameter(valid_21627334, JString, required = false,
                                   default = nil)
  if valid_21627334 != nil:
    section.add "X-Amz-Credential", valid_21627334
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627335: Call_GetDetachLoadBalancerTargetGroups_21627321;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Detaches one or more target groups from the specified Auto Scaling group.
  ## 
  let valid = call_21627335.validator(path, query, header, formData, body, _)
  let scheme = call_21627335.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627335.makeUrl(scheme.get, call_21627335.host, call_21627335.base,
                               call_21627335.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627335, uri, valid, _)

proc call*(call_21627336: Call_GetDetachLoadBalancerTargetGroups_21627321;
          AutoScalingGroupName: string; TargetGroupARNs: JsonNode;
          Action: string = "DetachLoadBalancerTargetGroups";
          Version: string = "2011-01-01"): Recallable =
  ## getDetachLoadBalancerTargetGroups
  ## Detaches one or more target groups from the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   TargetGroupARNs: JArray (required)
  ##                  : The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.
  ##   Version: string (required)
  var query_21627337 = newJObject()
  add(query_21627337, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627337, "Action", newJString(Action))
  if TargetGroupARNs != nil:
    query_21627337.add "TargetGroupARNs", TargetGroupARNs
  add(query_21627337, "Version", newJString(Version))
  result = call_21627336.call(nil, query_21627337, nil, nil, nil)

var getDetachLoadBalancerTargetGroups* = Call_GetDetachLoadBalancerTargetGroups_21627321(
    name: "getDetachLoadBalancerTargetGroups", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=DetachLoadBalancerTargetGroups",
    validator: validate_GetDetachLoadBalancerTargetGroups_21627322, base: "/",
    makeUrl: url_GetDetachLoadBalancerTargetGroups_21627323,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetachLoadBalancers_21627373 = ref object of OpenApiRestCall_21625435
proc url_PostDetachLoadBalancers_21627375(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetachLoadBalancers_21627374(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DetachLoadBalancerTargetGroups</a> instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using <a>DescribeLoadBalancers</a>. The instances remain running.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627376 = query.getOrDefault("Action")
  valid_21627376 = validateParameter(valid_21627376, JString, required = true,
                                   default = newJString("DetachLoadBalancers"))
  if valid_21627376 != nil:
    section.add "Action", valid_21627376
  var valid_21627377 = query.getOrDefault("Version")
  valid_21627377 = validateParameter(valid_21627377, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627377 != nil:
    section.add "Version", valid_21627377
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627378 = header.getOrDefault("X-Amz-Date")
  valid_21627378 = validateParameter(valid_21627378, JString, required = false,
                                   default = nil)
  if valid_21627378 != nil:
    section.add "X-Amz-Date", valid_21627378
  var valid_21627379 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627379 = validateParameter(valid_21627379, JString, required = false,
                                   default = nil)
  if valid_21627379 != nil:
    section.add "X-Amz-Security-Token", valid_21627379
  var valid_21627380 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627380 = validateParameter(valid_21627380, JString, required = false,
                                   default = nil)
  if valid_21627380 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627380
  var valid_21627381 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627381 = validateParameter(valid_21627381, JString, required = false,
                                   default = nil)
  if valid_21627381 != nil:
    section.add "X-Amz-Algorithm", valid_21627381
  var valid_21627382 = header.getOrDefault("X-Amz-Signature")
  valid_21627382 = validateParameter(valid_21627382, JString, required = false,
                                   default = nil)
  if valid_21627382 != nil:
    section.add "X-Amz-Signature", valid_21627382
  var valid_21627383 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627383 = validateParameter(valid_21627383, JString, required = false,
                                   default = nil)
  if valid_21627383 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627383
  var valid_21627384 = header.getOrDefault("X-Amz-Credential")
  valid_21627384 = validateParameter(valid_21627384, JString, required = false,
                                   default = nil)
  if valid_21627384 != nil:
    section.add "X-Amz-Credential", valid_21627384
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627385 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627385 = validateParameter(valid_21627385, JString, required = true,
                                   default = nil)
  if valid_21627385 != nil:
    section.add "AutoScalingGroupName", valid_21627385
  var valid_21627386 = formData.getOrDefault("LoadBalancerNames")
  valid_21627386 = validateParameter(valid_21627386, JArray, required = true,
                                   default = nil)
  if valid_21627386 != nil:
    section.add "LoadBalancerNames", valid_21627386
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627387: Call_PostDetachLoadBalancers_21627373;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DetachLoadBalancerTargetGroups</a> instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using <a>DescribeLoadBalancers</a>. The instances remain running.</p>
  ## 
  let valid = call_21627387.validator(path, query, header, formData, body, _)
  let scheme = call_21627387.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627387.makeUrl(scheme.get, call_21627387.host, call_21627387.base,
                               call_21627387.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627387, uri, valid, _)

proc call*(call_21627388: Call_PostDetachLoadBalancers_21627373;
          AutoScalingGroupName: string; LoadBalancerNames: JsonNode;
          Action: string = "DetachLoadBalancers"; Version: string = "2011-01-01"): Recallable =
  ## postDetachLoadBalancers
  ## <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DetachLoadBalancerTargetGroups</a> instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using <a>DescribeLoadBalancers</a>. The instances remain running.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  ##   Version: string (required)
  var query_21627389 = newJObject()
  var formData_21627390 = newJObject()
  add(formData_21627390, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627389, "Action", newJString(Action))
  if LoadBalancerNames != nil:
    formData_21627390.add "LoadBalancerNames", LoadBalancerNames
  add(query_21627389, "Version", newJString(Version))
  result = call_21627388.call(nil, query_21627389, nil, formData_21627390, nil)

var postDetachLoadBalancers* = Call_PostDetachLoadBalancers_21627373(
    name: "postDetachLoadBalancers", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DetachLoadBalancers",
    validator: validate_PostDetachLoadBalancers_21627374, base: "/",
    makeUrl: url_PostDetachLoadBalancers_21627375,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetachLoadBalancers_21627356 = ref object of OpenApiRestCall_21625435
proc url_GetDetachLoadBalancers_21627358(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetachLoadBalancers_21627357(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DetachLoadBalancerTargetGroups</a> instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using <a>DescribeLoadBalancers</a>. The instances remain running.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627359 = query.getOrDefault("AutoScalingGroupName")
  valid_21627359 = validateParameter(valid_21627359, JString, required = true,
                                   default = nil)
  if valid_21627359 != nil:
    section.add "AutoScalingGroupName", valid_21627359
  var valid_21627360 = query.getOrDefault("Action")
  valid_21627360 = validateParameter(valid_21627360, JString, required = true,
                                   default = newJString("DetachLoadBalancers"))
  if valid_21627360 != nil:
    section.add "Action", valid_21627360
  var valid_21627361 = query.getOrDefault("LoadBalancerNames")
  valid_21627361 = validateParameter(valid_21627361, JArray, required = true,
                                   default = nil)
  if valid_21627361 != nil:
    section.add "LoadBalancerNames", valid_21627361
  var valid_21627362 = query.getOrDefault("Version")
  valid_21627362 = validateParameter(valid_21627362, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627362 != nil:
    section.add "Version", valid_21627362
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627363 = header.getOrDefault("X-Amz-Date")
  valid_21627363 = validateParameter(valid_21627363, JString, required = false,
                                   default = nil)
  if valid_21627363 != nil:
    section.add "X-Amz-Date", valid_21627363
  var valid_21627364 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627364 = validateParameter(valid_21627364, JString, required = false,
                                   default = nil)
  if valid_21627364 != nil:
    section.add "X-Amz-Security-Token", valid_21627364
  var valid_21627365 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627365 = validateParameter(valid_21627365, JString, required = false,
                                   default = nil)
  if valid_21627365 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627365
  var valid_21627366 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627366 = validateParameter(valid_21627366, JString, required = false,
                                   default = nil)
  if valid_21627366 != nil:
    section.add "X-Amz-Algorithm", valid_21627366
  var valid_21627367 = header.getOrDefault("X-Amz-Signature")
  valid_21627367 = validateParameter(valid_21627367, JString, required = false,
                                   default = nil)
  if valid_21627367 != nil:
    section.add "X-Amz-Signature", valid_21627367
  var valid_21627368 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627368 = validateParameter(valid_21627368, JString, required = false,
                                   default = nil)
  if valid_21627368 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627368
  var valid_21627369 = header.getOrDefault("X-Amz-Credential")
  valid_21627369 = validateParameter(valid_21627369, JString, required = false,
                                   default = nil)
  if valid_21627369 != nil:
    section.add "X-Amz-Credential", valid_21627369
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627370: Call_GetDetachLoadBalancers_21627356;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DetachLoadBalancerTargetGroups</a> instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using <a>DescribeLoadBalancers</a>. The instances remain running.</p>
  ## 
  let valid = call_21627370.validator(path, query, header, formData, body, _)
  let scheme = call_21627370.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627370.makeUrl(scheme.get, call_21627370.host, call_21627370.base,
                               call_21627370.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627370, uri, valid, _)

proc call*(call_21627371: Call_GetDetachLoadBalancers_21627356;
          AutoScalingGroupName: string; LoadBalancerNames: JsonNode;
          Action: string = "DetachLoadBalancers"; Version: string = "2011-01-01"): Recallable =
  ## getDetachLoadBalancers
  ## <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use <a>DetachLoadBalancerTargetGroups</a> instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using <a>DescribeLoadBalancers</a>. The instances remain running.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   LoadBalancerNames: JArray (required)
  ##                    : The names of the load balancers. You can specify up to 10 load balancers.
  ##   Version: string (required)
  var query_21627372 = newJObject()
  add(query_21627372, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627372, "Action", newJString(Action))
  if LoadBalancerNames != nil:
    query_21627372.add "LoadBalancerNames", LoadBalancerNames
  add(query_21627372, "Version", newJString(Version))
  result = call_21627371.call(nil, query_21627372, nil, nil, nil)

var getDetachLoadBalancers* = Call_GetDetachLoadBalancers_21627356(
    name: "getDetachLoadBalancers", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DetachLoadBalancers",
    validator: validate_GetDetachLoadBalancers_21627357, base: "/",
    makeUrl: url_GetDetachLoadBalancers_21627358,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDisableMetricsCollection_21627408 = ref object of OpenApiRestCall_21625435
proc url_PostDisableMetricsCollection_21627410(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDisableMetricsCollection_21627409(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Disables group metrics for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627411 = query.getOrDefault("Action")
  valid_21627411 = validateParameter(valid_21627411, JString, required = true, default = newJString(
      "DisableMetricsCollection"))
  if valid_21627411 != nil:
    section.add "Action", valid_21627411
  var valid_21627412 = query.getOrDefault("Version")
  valid_21627412 = validateParameter(valid_21627412, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627412 != nil:
    section.add "Version", valid_21627412
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627413 = header.getOrDefault("X-Amz-Date")
  valid_21627413 = validateParameter(valid_21627413, JString, required = false,
                                   default = nil)
  if valid_21627413 != nil:
    section.add "X-Amz-Date", valid_21627413
  var valid_21627414 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627414 = validateParameter(valid_21627414, JString, required = false,
                                   default = nil)
  if valid_21627414 != nil:
    section.add "X-Amz-Security-Token", valid_21627414
  var valid_21627415 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627415 = validateParameter(valid_21627415, JString, required = false,
                                   default = nil)
  if valid_21627415 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627415
  var valid_21627416 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627416 = validateParameter(valid_21627416, JString, required = false,
                                   default = nil)
  if valid_21627416 != nil:
    section.add "X-Amz-Algorithm", valid_21627416
  var valid_21627417 = header.getOrDefault("X-Amz-Signature")
  valid_21627417 = validateParameter(valid_21627417, JString, required = false,
                                   default = nil)
  if valid_21627417 != nil:
    section.add "X-Amz-Signature", valid_21627417
  var valid_21627418 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627418 = validateParameter(valid_21627418, JString, required = false,
                                   default = nil)
  if valid_21627418 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627418
  var valid_21627419 = header.getOrDefault("X-Amz-Credential")
  valid_21627419 = validateParameter(valid_21627419, JString, required = false,
                                   default = nil)
  if valid_21627419 != nil:
    section.add "X-Amz-Credential", valid_21627419
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are disabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627420 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627420 = validateParameter(valid_21627420, JString, required = true,
                                   default = nil)
  if valid_21627420 != nil:
    section.add "AutoScalingGroupName", valid_21627420
  var valid_21627421 = formData.getOrDefault("Metrics")
  valid_21627421 = validateParameter(valid_21627421, JArray, required = false,
                                   default = nil)
  if valid_21627421 != nil:
    section.add "Metrics", valid_21627421
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627422: Call_PostDisableMetricsCollection_21627408;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Disables group metrics for the specified Auto Scaling group.
  ## 
  let valid = call_21627422.validator(path, query, header, formData, body, _)
  let scheme = call_21627422.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627422.makeUrl(scheme.get, call_21627422.host, call_21627422.base,
                               call_21627422.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627422, uri, valid, _)

proc call*(call_21627423: Call_PostDisableMetricsCollection_21627408;
          AutoScalingGroupName: string; Metrics: JsonNode = nil;
          Action: string = "DisableMetricsCollection";
          Version: string = "2011-01-01"): Recallable =
  ## postDisableMetricsCollection
  ## Disables group metrics for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are disabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627424 = newJObject()
  var formData_21627425 = newJObject()
  add(formData_21627425, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if Metrics != nil:
    formData_21627425.add "Metrics", Metrics
  add(query_21627424, "Action", newJString(Action))
  add(query_21627424, "Version", newJString(Version))
  result = call_21627423.call(nil, query_21627424, nil, formData_21627425, nil)

var postDisableMetricsCollection* = Call_PostDisableMetricsCollection_21627408(
    name: "postDisableMetricsCollection", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=DisableMetricsCollection",
    validator: validate_PostDisableMetricsCollection_21627409, base: "/",
    makeUrl: url_PostDisableMetricsCollection_21627410,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDisableMetricsCollection_21627391 = ref object of OpenApiRestCall_21625435
proc url_GetDisableMetricsCollection_21627393(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDisableMetricsCollection_21627392(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Disables group metrics for the specified Auto Scaling group.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are disabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627394 = query.getOrDefault("AutoScalingGroupName")
  valid_21627394 = validateParameter(valid_21627394, JString, required = true,
                                   default = nil)
  if valid_21627394 != nil:
    section.add "AutoScalingGroupName", valid_21627394
  var valid_21627395 = query.getOrDefault("Action")
  valid_21627395 = validateParameter(valid_21627395, JString, required = true, default = newJString(
      "DisableMetricsCollection"))
  if valid_21627395 != nil:
    section.add "Action", valid_21627395
  var valid_21627396 = query.getOrDefault("Metrics")
  valid_21627396 = validateParameter(valid_21627396, JArray, required = false,
                                   default = nil)
  if valid_21627396 != nil:
    section.add "Metrics", valid_21627396
  var valid_21627397 = query.getOrDefault("Version")
  valid_21627397 = validateParameter(valid_21627397, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627397 != nil:
    section.add "Version", valid_21627397
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627398 = header.getOrDefault("X-Amz-Date")
  valid_21627398 = validateParameter(valid_21627398, JString, required = false,
                                   default = nil)
  if valid_21627398 != nil:
    section.add "X-Amz-Date", valid_21627398
  var valid_21627399 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627399 = validateParameter(valid_21627399, JString, required = false,
                                   default = nil)
  if valid_21627399 != nil:
    section.add "X-Amz-Security-Token", valid_21627399
  var valid_21627400 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627400 = validateParameter(valid_21627400, JString, required = false,
                                   default = nil)
  if valid_21627400 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627400
  var valid_21627401 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627401 = validateParameter(valid_21627401, JString, required = false,
                                   default = nil)
  if valid_21627401 != nil:
    section.add "X-Amz-Algorithm", valid_21627401
  var valid_21627402 = header.getOrDefault("X-Amz-Signature")
  valid_21627402 = validateParameter(valid_21627402, JString, required = false,
                                   default = nil)
  if valid_21627402 != nil:
    section.add "X-Amz-Signature", valid_21627402
  var valid_21627403 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627403 = validateParameter(valid_21627403, JString, required = false,
                                   default = nil)
  if valid_21627403 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627403
  var valid_21627404 = header.getOrDefault("X-Amz-Credential")
  valid_21627404 = validateParameter(valid_21627404, JString, required = false,
                                   default = nil)
  if valid_21627404 != nil:
    section.add "X-Amz-Credential", valid_21627404
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627405: Call_GetDisableMetricsCollection_21627391;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Disables group metrics for the specified Auto Scaling group.
  ## 
  let valid = call_21627405.validator(path, query, header, formData, body, _)
  let scheme = call_21627405.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627405.makeUrl(scheme.get, call_21627405.host, call_21627405.base,
                               call_21627405.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627405, uri, valid, _)

proc call*(call_21627406: Call_GetDisableMetricsCollection_21627391;
          AutoScalingGroupName: string;
          Action: string = "DisableMetricsCollection"; Metrics: JsonNode = nil;
          Version: string = "2011-01-01"): Recallable =
  ## getDisableMetricsCollection
  ## Disables group metrics for the specified Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are disabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  ##   Version: string (required)
  var query_21627407 = newJObject()
  add(query_21627407, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627407, "Action", newJString(Action))
  if Metrics != nil:
    query_21627407.add "Metrics", Metrics
  add(query_21627407, "Version", newJString(Version))
  result = call_21627406.call(nil, query_21627407, nil, nil, nil)

var getDisableMetricsCollection* = Call_GetDisableMetricsCollection_21627391(
    name: "getDisableMetricsCollection", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=DisableMetricsCollection",
    validator: validate_GetDisableMetricsCollection_21627392, base: "/",
    makeUrl: url_GetDisableMetricsCollection_21627393,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostEnableMetricsCollection_21627444 = ref object of OpenApiRestCall_21625435
proc url_PostEnableMetricsCollection_21627446(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostEnableMetricsCollection_21627445(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Enables group metrics for the specified Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627447 = query.getOrDefault("Action")
  valid_21627447 = validateParameter(valid_21627447, JString, required = true, default = newJString(
      "EnableMetricsCollection"))
  if valid_21627447 != nil:
    section.add "Action", valid_21627447
  var valid_21627448 = query.getOrDefault("Version")
  valid_21627448 = validateParameter(valid_21627448, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627448 != nil:
    section.add "Version", valid_21627448
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627449 = header.getOrDefault("X-Amz-Date")
  valid_21627449 = validateParameter(valid_21627449, JString, required = false,
                                   default = nil)
  if valid_21627449 != nil:
    section.add "X-Amz-Date", valid_21627449
  var valid_21627450 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627450 = validateParameter(valid_21627450, JString, required = false,
                                   default = nil)
  if valid_21627450 != nil:
    section.add "X-Amz-Security-Token", valid_21627450
  var valid_21627451 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627451 = validateParameter(valid_21627451, JString, required = false,
                                   default = nil)
  if valid_21627451 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627451
  var valid_21627452 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627452 = validateParameter(valid_21627452, JString, required = false,
                                   default = nil)
  if valid_21627452 != nil:
    section.add "X-Amz-Algorithm", valid_21627452
  var valid_21627453 = header.getOrDefault("X-Amz-Signature")
  valid_21627453 = validateParameter(valid_21627453, JString, required = false,
                                   default = nil)
  if valid_21627453 != nil:
    section.add "X-Amz-Signature", valid_21627453
  var valid_21627454 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627454 = validateParameter(valid_21627454, JString, required = false,
                                   default = nil)
  if valid_21627454 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627454
  var valid_21627455 = header.getOrDefault("X-Amz-Credential")
  valid_21627455 = validateParameter(valid_21627455, JString, required = false,
                                   default = nil)
  if valid_21627455 != nil:
    section.add "X-Amz-Credential", valid_21627455
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are enabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  ##   Granularity: JString (required)
  ##              : The granularity to associate with the metrics to collect. The only valid value is <code>1Minute</code>.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627456 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627456 = validateParameter(valid_21627456, JString, required = true,
                                   default = nil)
  if valid_21627456 != nil:
    section.add "AutoScalingGroupName", valid_21627456
  var valid_21627457 = formData.getOrDefault("Metrics")
  valid_21627457 = validateParameter(valid_21627457, JArray, required = false,
                                   default = nil)
  if valid_21627457 != nil:
    section.add "Metrics", valid_21627457
  var valid_21627458 = formData.getOrDefault("Granularity")
  valid_21627458 = validateParameter(valid_21627458, JString, required = true,
                                   default = nil)
  if valid_21627458 != nil:
    section.add "Granularity", valid_21627458
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627459: Call_PostEnableMetricsCollection_21627444;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Enables group metrics for the specified Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ## 
  let valid = call_21627459.validator(path, query, header, formData, body, _)
  let scheme = call_21627459.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627459.makeUrl(scheme.get, call_21627459.host, call_21627459.base,
                               call_21627459.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627459, uri, valid, _)

proc call*(call_21627460: Call_PostEnableMetricsCollection_21627444;
          AutoScalingGroupName: string; Granularity: string;
          Metrics: JsonNode = nil; Action: string = "EnableMetricsCollection";
          Version: string = "2011-01-01"): Recallable =
  ## postEnableMetricsCollection
  ## Enables group metrics for the specified Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are enabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  ##   Granularity: string (required)
  ##              : The granularity to associate with the metrics to collect. The only valid value is <code>1Minute</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627461 = newJObject()
  var formData_21627462 = newJObject()
  add(formData_21627462, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if Metrics != nil:
    formData_21627462.add "Metrics", Metrics
  add(formData_21627462, "Granularity", newJString(Granularity))
  add(query_21627461, "Action", newJString(Action))
  add(query_21627461, "Version", newJString(Version))
  result = call_21627460.call(nil, query_21627461, nil, formData_21627462, nil)

var postEnableMetricsCollection* = Call_PostEnableMetricsCollection_21627444(
    name: "postEnableMetricsCollection", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=EnableMetricsCollection",
    validator: validate_PostEnableMetricsCollection_21627445, base: "/",
    makeUrl: url_PostEnableMetricsCollection_21627446,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetEnableMetricsCollection_21627426 = ref object of OpenApiRestCall_21625435
proc url_GetEnableMetricsCollection_21627428(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetEnableMetricsCollection_21627427(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Enables group metrics for the specified Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Granularity: JString (required)
  ##              : The granularity to associate with the metrics to collect. The only valid value is <code>1Minute</code>.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are enabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `Granularity` field"
  var valid_21627429 = query.getOrDefault("Granularity")
  valid_21627429 = validateParameter(valid_21627429, JString, required = true,
                                   default = nil)
  if valid_21627429 != nil:
    section.add "Granularity", valid_21627429
  var valid_21627430 = query.getOrDefault("AutoScalingGroupName")
  valid_21627430 = validateParameter(valid_21627430, JString, required = true,
                                   default = nil)
  if valid_21627430 != nil:
    section.add "AutoScalingGroupName", valid_21627430
  var valid_21627431 = query.getOrDefault("Action")
  valid_21627431 = validateParameter(valid_21627431, JString, required = true, default = newJString(
      "EnableMetricsCollection"))
  if valid_21627431 != nil:
    section.add "Action", valid_21627431
  var valid_21627432 = query.getOrDefault("Metrics")
  valid_21627432 = validateParameter(valid_21627432, JArray, required = false,
                                   default = nil)
  if valid_21627432 != nil:
    section.add "Metrics", valid_21627432
  var valid_21627433 = query.getOrDefault("Version")
  valid_21627433 = validateParameter(valid_21627433, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627433 != nil:
    section.add "Version", valid_21627433
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627434 = header.getOrDefault("X-Amz-Date")
  valid_21627434 = validateParameter(valid_21627434, JString, required = false,
                                   default = nil)
  if valid_21627434 != nil:
    section.add "X-Amz-Date", valid_21627434
  var valid_21627435 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627435 = validateParameter(valid_21627435, JString, required = false,
                                   default = nil)
  if valid_21627435 != nil:
    section.add "X-Amz-Security-Token", valid_21627435
  var valid_21627436 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627436 = validateParameter(valid_21627436, JString, required = false,
                                   default = nil)
  if valid_21627436 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627436
  var valid_21627437 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627437 = validateParameter(valid_21627437, JString, required = false,
                                   default = nil)
  if valid_21627437 != nil:
    section.add "X-Amz-Algorithm", valid_21627437
  var valid_21627438 = header.getOrDefault("X-Amz-Signature")
  valid_21627438 = validateParameter(valid_21627438, JString, required = false,
                                   default = nil)
  if valid_21627438 != nil:
    section.add "X-Amz-Signature", valid_21627438
  var valid_21627439 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627439 = validateParameter(valid_21627439, JString, required = false,
                                   default = nil)
  if valid_21627439 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627439
  var valid_21627440 = header.getOrDefault("X-Amz-Credential")
  valid_21627440 = validateParameter(valid_21627440, JString, required = false,
                                   default = nil)
  if valid_21627440 != nil:
    section.add "X-Amz-Credential", valid_21627440
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627441: Call_GetEnableMetricsCollection_21627426;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Enables group metrics for the specified Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ## 
  let valid = call_21627441.validator(path, query, header, formData, body, _)
  let scheme = call_21627441.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627441.makeUrl(scheme.get, call_21627441.host, call_21627441.base,
                               call_21627441.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627441, uri, valid, _)

proc call*(call_21627442: Call_GetEnableMetricsCollection_21627426;
          Granularity: string; AutoScalingGroupName: string;
          Action: string = "EnableMetricsCollection"; Metrics: JsonNode = nil;
          Version: string = "2011-01-01"): Recallable =
  ## getEnableMetricsCollection
  ## Enables group metrics for the specified Auto Scaling group. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   Granularity: string (required)
  ##              : The granularity to associate with the metrics to collect. The only valid value is <code>1Minute</code>.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   Metrics: JArray
  ##          : <p>One or more of the following metrics. If you omit this parameter, all metrics are enabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
  ##   Version: string (required)
  var query_21627443 = newJObject()
  add(query_21627443, "Granularity", newJString(Granularity))
  add(query_21627443, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627443, "Action", newJString(Action))
  if Metrics != nil:
    query_21627443.add "Metrics", Metrics
  add(query_21627443, "Version", newJString(Version))
  result = call_21627442.call(nil, query_21627443, nil, nil, nil)

var getEnableMetricsCollection* = Call_GetEnableMetricsCollection_21627426(
    name: "getEnableMetricsCollection", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=EnableMetricsCollection",
    validator: validate_GetEnableMetricsCollection_21627427, base: "/",
    makeUrl: url_GetEnableMetricsCollection_21627428,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostEnterStandby_21627481 = ref object of OpenApiRestCall_21625435
proc url_PostEnterStandby_21627483(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostEnterStandby_21627482(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627484 = query.getOrDefault("Action")
  valid_21627484 = validateParameter(valid_21627484, JString, required = true,
                                   default = newJString("EnterStandby"))
  if valid_21627484 != nil:
    section.add "Action", valid_21627484
  var valid_21627485 = query.getOrDefault("Version")
  valid_21627485 = validateParameter(valid_21627485, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627485 != nil:
    section.add "Version", valid_21627485
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627486 = header.getOrDefault("X-Amz-Date")
  valid_21627486 = validateParameter(valid_21627486, JString, required = false,
                                   default = nil)
  if valid_21627486 != nil:
    section.add "X-Amz-Date", valid_21627486
  var valid_21627487 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627487 = validateParameter(valid_21627487, JString, required = false,
                                   default = nil)
  if valid_21627487 != nil:
    section.add "X-Amz-Security-Token", valid_21627487
  var valid_21627488 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627488 = validateParameter(valid_21627488, JString, required = false,
                                   default = nil)
  if valid_21627488 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627488
  var valid_21627489 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627489 = validateParameter(valid_21627489, JString, required = false,
                                   default = nil)
  if valid_21627489 != nil:
    section.add "X-Amz-Algorithm", valid_21627489
  var valid_21627490 = header.getOrDefault("X-Amz-Signature")
  valid_21627490 = validateParameter(valid_21627490, JString, required = false,
                                   default = nil)
  if valid_21627490 != nil:
    section.add "X-Amz-Signature", valid_21627490
  var valid_21627491 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627491 = validateParameter(valid_21627491, JString, required = false,
                                   default = nil)
  if valid_21627491 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627491
  var valid_21627492 = header.getOrDefault("X-Amz-Credential")
  valid_21627492 = validateParameter(valid_21627492, JString, required = false,
                                   default = nil)
  if valid_21627492 != nil:
    section.add "X-Amz-Credential", valid_21627492
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   ShouldDecrementDesiredCapacity: JBool (required)
  ##                                 : Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627493 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627493 = validateParameter(valid_21627493, JString, required = true,
                                   default = nil)
  if valid_21627493 != nil:
    section.add "AutoScalingGroupName", valid_21627493
  var valid_21627494 = formData.getOrDefault("InstanceIds")
  valid_21627494 = validateParameter(valid_21627494, JArray, required = false,
                                   default = nil)
  if valid_21627494 != nil:
    section.add "InstanceIds", valid_21627494
  var valid_21627495 = formData.getOrDefault("ShouldDecrementDesiredCapacity")
  valid_21627495 = validateParameter(valid_21627495, JBool, required = true,
                                   default = nil)
  if valid_21627495 != nil:
    section.add "ShouldDecrementDesiredCapacity", valid_21627495
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627496: Call_PostEnterStandby_21627481; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627496.validator(path, query, header, formData, body, _)
  let scheme = call_21627496.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627496.makeUrl(scheme.get, call_21627496.host, call_21627496.base,
                               call_21627496.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627496, uri, valid, _)

proc call*(call_21627497: Call_PostEnterStandby_21627481;
          AutoScalingGroupName: string; ShouldDecrementDesiredCapacity: bool;
          InstanceIds: JsonNode = nil; Action: string = "EnterStandby";
          Version: string = "2011-01-01"): Recallable =
  ## postEnterStandby
  ## <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   ShouldDecrementDesiredCapacity: bool (required)
  ##                                 : Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627498 = newJObject()
  var formData_21627499 = newJObject()
  add(formData_21627499, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if InstanceIds != nil:
    formData_21627499.add "InstanceIds", InstanceIds
  add(formData_21627499, "ShouldDecrementDesiredCapacity",
      newJBool(ShouldDecrementDesiredCapacity))
  add(query_21627498, "Action", newJString(Action))
  add(query_21627498, "Version", newJString(Version))
  result = call_21627497.call(nil, query_21627498, nil, formData_21627499, nil)

var postEnterStandby* = Call_PostEnterStandby_21627481(name: "postEnterStandby",
    meth: HttpMethod.HttpPost, host: "autoscaling.amazonaws.com",
    route: "/#Action=EnterStandby", validator: validate_PostEnterStandby_21627482,
    base: "/", makeUrl: url_PostEnterStandby_21627483,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetEnterStandby_21627463 = ref object of OpenApiRestCall_21625435
proc url_GetEnterStandby_21627465(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetEnterStandby_21627464(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   ShouldDecrementDesiredCapacity: JBool (required)
  ##                                 : Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627466 = query.getOrDefault("AutoScalingGroupName")
  valid_21627466 = validateParameter(valid_21627466, JString, required = true,
                                   default = nil)
  if valid_21627466 != nil:
    section.add "AutoScalingGroupName", valid_21627466
  var valid_21627467 = query.getOrDefault("Action")
  valid_21627467 = validateParameter(valid_21627467, JString, required = true,
                                   default = newJString("EnterStandby"))
  if valid_21627467 != nil:
    section.add "Action", valid_21627467
  var valid_21627468 = query.getOrDefault("ShouldDecrementDesiredCapacity")
  valid_21627468 = validateParameter(valid_21627468, JBool, required = true,
                                   default = nil)
  if valid_21627468 != nil:
    section.add "ShouldDecrementDesiredCapacity", valid_21627468
  var valid_21627469 = query.getOrDefault("InstanceIds")
  valid_21627469 = validateParameter(valid_21627469, JArray, required = false,
                                   default = nil)
  if valid_21627469 != nil:
    section.add "InstanceIds", valid_21627469
  var valid_21627470 = query.getOrDefault("Version")
  valid_21627470 = validateParameter(valid_21627470, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627470 != nil:
    section.add "Version", valid_21627470
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627471 = header.getOrDefault("X-Amz-Date")
  valid_21627471 = validateParameter(valid_21627471, JString, required = false,
                                   default = nil)
  if valid_21627471 != nil:
    section.add "X-Amz-Date", valid_21627471
  var valid_21627472 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627472 = validateParameter(valid_21627472, JString, required = false,
                                   default = nil)
  if valid_21627472 != nil:
    section.add "X-Amz-Security-Token", valid_21627472
  var valid_21627473 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627473 = validateParameter(valid_21627473, JString, required = false,
                                   default = nil)
  if valid_21627473 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627473
  var valid_21627474 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627474 = validateParameter(valid_21627474, JString, required = false,
                                   default = nil)
  if valid_21627474 != nil:
    section.add "X-Amz-Algorithm", valid_21627474
  var valid_21627475 = header.getOrDefault("X-Amz-Signature")
  valid_21627475 = validateParameter(valid_21627475, JString, required = false,
                                   default = nil)
  if valid_21627475 != nil:
    section.add "X-Amz-Signature", valid_21627475
  var valid_21627476 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627476 = validateParameter(valid_21627476, JString, required = false,
                                   default = nil)
  if valid_21627476 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627476
  var valid_21627477 = header.getOrDefault("X-Amz-Credential")
  valid_21627477 = validateParameter(valid_21627477, JString, required = false,
                                   default = nil)
  if valid_21627477 != nil:
    section.add "X-Amz-Credential", valid_21627477
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627478: Call_GetEnterStandby_21627463; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627478.validator(path, query, header, formData, body, _)
  let scheme = call_21627478.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627478.makeUrl(scheme.get, call_21627478.host, call_21627478.base,
                               call_21627478.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627478, uri, valid, _)

proc call*(call_21627479: Call_GetEnterStandby_21627463;
          AutoScalingGroupName: string; ShouldDecrementDesiredCapacity: bool;
          Action: string = "EnterStandby"; InstanceIds: JsonNode = nil;
          Version: string = "2011-01-01"): Recallable =
  ## getEnterStandby
  ## <p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   ShouldDecrementDesiredCapacity: bool (required)
  ##                                 : Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: string (required)
  var query_21627480 = newJObject()
  add(query_21627480, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627480, "Action", newJString(Action))
  add(query_21627480, "ShouldDecrementDesiredCapacity",
      newJBool(ShouldDecrementDesiredCapacity))
  if InstanceIds != nil:
    query_21627480.add "InstanceIds", InstanceIds
  add(query_21627480, "Version", newJString(Version))
  result = call_21627479.call(nil, query_21627480, nil, nil, nil)

var getEnterStandby* = Call_GetEnterStandby_21627463(name: "getEnterStandby",
    meth: HttpMethod.HttpGet, host: "autoscaling.amazonaws.com",
    route: "/#Action=EnterStandby", validator: validate_GetEnterStandby_21627464,
    base: "/", makeUrl: url_GetEnterStandby_21627465,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostExecutePolicy_21627520 = ref object of OpenApiRestCall_21625435
proc url_PostExecutePolicy_21627522(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostExecutePolicy_21627521(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Executes the specified policy.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627523 = query.getOrDefault("Action")
  valid_21627523 = validateParameter(valid_21627523, JString, required = true,
                                   default = newJString("ExecutePolicy"))
  if valid_21627523 != nil:
    section.add "Action", valid_21627523
  var valid_21627524 = query.getOrDefault("Version")
  valid_21627524 = validateParameter(valid_21627524, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627524 != nil:
    section.add "Version", valid_21627524
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627525 = header.getOrDefault("X-Amz-Date")
  valid_21627525 = validateParameter(valid_21627525, JString, required = false,
                                   default = nil)
  if valid_21627525 != nil:
    section.add "X-Amz-Date", valid_21627525
  var valid_21627526 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627526 = validateParameter(valid_21627526, JString, required = false,
                                   default = nil)
  if valid_21627526 != nil:
    section.add "X-Amz-Security-Token", valid_21627526
  var valid_21627527 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627527 = validateParameter(valid_21627527, JString, required = false,
                                   default = nil)
  if valid_21627527 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627527
  var valid_21627528 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627528 = validateParameter(valid_21627528, JString, required = false,
                                   default = nil)
  if valid_21627528 != nil:
    section.add "X-Amz-Algorithm", valid_21627528
  var valid_21627529 = header.getOrDefault("X-Amz-Signature")
  valid_21627529 = validateParameter(valid_21627529, JString, required = false,
                                   default = nil)
  if valid_21627529 != nil:
    section.add "X-Amz-Signature", valid_21627529
  var valid_21627530 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627530 = validateParameter(valid_21627530, JString, required = false,
                                   default = nil)
  if valid_21627530 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627530
  var valid_21627531 = header.getOrDefault("X-Amz-Credential")
  valid_21627531 = validateParameter(valid_21627531, JString, required = false,
                                   default = nil)
  if valid_21627531 != nil:
    section.add "X-Amz-Credential", valid_21627531
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   PolicyName: JString (required)
  ##             : The name or ARN of the policy.
  ##   MetricValue: JFloat
  ##              : <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  ##   HonorCooldown: JBool
  ##                : <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>This parameter is not supported if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   BreachThreshold: JFloat
  ##                  : <p>The breach threshold for the alarm.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  section = newJObject()
  var valid_21627532 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627532 = validateParameter(valid_21627532, JString, required = false,
                                   default = nil)
  if valid_21627532 != nil:
    section.add "AutoScalingGroupName", valid_21627532
  assert formData != nil,
        "formData argument is necessary due to required `PolicyName` field"
  var valid_21627533 = formData.getOrDefault("PolicyName")
  valid_21627533 = validateParameter(valid_21627533, JString, required = true,
                                   default = nil)
  if valid_21627533 != nil:
    section.add "PolicyName", valid_21627533
  var valid_21627534 = formData.getOrDefault("MetricValue")
  valid_21627534 = validateParameter(valid_21627534, JFloat, required = false,
                                   default = nil)
  if valid_21627534 != nil:
    section.add "MetricValue", valid_21627534
  var valid_21627535 = formData.getOrDefault("HonorCooldown")
  valid_21627535 = validateParameter(valid_21627535, JBool, required = false,
                                   default = nil)
  if valid_21627535 != nil:
    section.add "HonorCooldown", valid_21627535
  var valid_21627536 = formData.getOrDefault("BreachThreshold")
  valid_21627536 = validateParameter(valid_21627536, JFloat, required = false,
                                   default = nil)
  if valid_21627536 != nil:
    section.add "BreachThreshold", valid_21627536
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627537: Call_PostExecutePolicy_21627520; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Executes the specified policy.
  ## 
  let valid = call_21627537.validator(path, query, header, formData, body, _)
  let scheme = call_21627537.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627537.makeUrl(scheme.get, call_21627537.host, call_21627537.base,
                               call_21627537.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627537, uri, valid, _)

proc call*(call_21627538: Call_PostExecutePolicy_21627520; PolicyName: string;
          AutoScalingGroupName: string = ""; MetricValue: float = 0.0;
          HonorCooldown: bool = false; BreachThreshold: float = 0.0;
          Action: string = "ExecutePolicy"; Version: string = "2011-01-01"): Recallable =
  ## postExecutePolicy
  ## Executes the specified policy.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   PolicyName: string (required)
  ##             : The name or ARN of the policy.
  ##   MetricValue: float
  ##              : <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  ##   HonorCooldown: bool
  ##                : <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>This parameter is not supported if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   BreachThreshold: float
  ##                  : <p>The breach threshold for the alarm.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627539 = newJObject()
  var formData_21627540 = newJObject()
  add(formData_21627540, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627540, "PolicyName", newJString(PolicyName))
  add(formData_21627540, "MetricValue", newJFloat(MetricValue))
  add(formData_21627540, "HonorCooldown", newJBool(HonorCooldown))
  add(formData_21627540, "BreachThreshold", newJFloat(BreachThreshold))
  add(query_21627539, "Action", newJString(Action))
  add(query_21627539, "Version", newJString(Version))
  result = call_21627538.call(nil, query_21627539, nil, formData_21627540, nil)

var postExecutePolicy* = Call_PostExecutePolicy_21627520(name: "postExecutePolicy",
    meth: HttpMethod.HttpPost, host: "autoscaling.amazonaws.com",
    route: "/#Action=ExecutePolicy", validator: validate_PostExecutePolicy_21627521,
    base: "/", makeUrl: url_PostExecutePolicy_21627522,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetExecutePolicy_21627500 = ref object of OpenApiRestCall_21625435
proc url_GetExecutePolicy_21627502(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetExecutePolicy_21627501(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Executes the specified policy.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString
  ##                       : The name of the Auto Scaling group.
  ##   MetricValue: JFloat
  ##              : <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  ##   BreachThreshold: JFloat
  ##                  : <p>The breach threshold for the alarm.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  ##   Action: JString (required)
  ##   HonorCooldown: JBool
  ##                : <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>This parameter is not supported if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Version: JString (required)
  ##   PolicyName: JString (required)
  ##             : The name or ARN of the policy.
  section = newJObject()
  var valid_21627503 = query.getOrDefault("AutoScalingGroupName")
  valid_21627503 = validateParameter(valid_21627503, JString, required = false,
                                   default = nil)
  if valid_21627503 != nil:
    section.add "AutoScalingGroupName", valid_21627503
  var valid_21627504 = query.getOrDefault("MetricValue")
  valid_21627504 = validateParameter(valid_21627504, JFloat, required = false,
                                   default = nil)
  if valid_21627504 != nil:
    section.add "MetricValue", valid_21627504
  var valid_21627505 = query.getOrDefault("BreachThreshold")
  valid_21627505 = validateParameter(valid_21627505, JFloat, required = false,
                                   default = nil)
  if valid_21627505 != nil:
    section.add "BreachThreshold", valid_21627505
  var valid_21627506 = query.getOrDefault("Action")
  valid_21627506 = validateParameter(valid_21627506, JString, required = true,
                                   default = newJString("ExecutePolicy"))
  if valid_21627506 != nil:
    section.add "Action", valid_21627506
  var valid_21627507 = query.getOrDefault("HonorCooldown")
  valid_21627507 = validateParameter(valid_21627507, JBool, required = false,
                                   default = nil)
  if valid_21627507 != nil:
    section.add "HonorCooldown", valid_21627507
  var valid_21627508 = query.getOrDefault("Version")
  valid_21627508 = validateParameter(valid_21627508, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627508 != nil:
    section.add "Version", valid_21627508
  var valid_21627509 = query.getOrDefault("PolicyName")
  valid_21627509 = validateParameter(valid_21627509, JString, required = true,
                                   default = nil)
  if valid_21627509 != nil:
    section.add "PolicyName", valid_21627509
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627510 = header.getOrDefault("X-Amz-Date")
  valid_21627510 = validateParameter(valid_21627510, JString, required = false,
                                   default = nil)
  if valid_21627510 != nil:
    section.add "X-Amz-Date", valid_21627510
  var valid_21627511 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627511 = validateParameter(valid_21627511, JString, required = false,
                                   default = nil)
  if valid_21627511 != nil:
    section.add "X-Amz-Security-Token", valid_21627511
  var valid_21627512 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627512 = validateParameter(valid_21627512, JString, required = false,
                                   default = nil)
  if valid_21627512 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627512
  var valid_21627513 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627513 = validateParameter(valid_21627513, JString, required = false,
                                   default = nil)
  if valid_21627513 != nil:
    section.add "X-Amz-Algorithm", valid_21627513
  var valid_21627514 = header.getOrDefault("X-Amz-Signature")
  valid_21627514 = validateParameter(valid_21627514, JString, required = false,
                                   default = nil)
  if valid_21627514 != nil:
    section.add "X-Amz-Signature", valid_21627514
  var valid_21627515 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627515 = validateParameter(valid_21627515, JString, required = false,
                                   default = nil)
  if valid_21627515 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627515
  var valid_21627516 = header.getOrDefault("X-Amz-Credential")
  valid_21627516 = validateParameter(valid_21627516, JString, required = false,
                                   default = nil)
  if valid_21627516 != nil:
    section.add "X-Amz-Credential", valid_21627516
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627517: Call_GetExecutePolicy_21627500; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Executes the specified policy.
  ## 
  let valid = call_21627517.validator(path, query, header, formData, body, _)
  let scheme = call_21627517.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627517.makeUrl(scheme.get, call_21627517.host, call_21627517.base,
                               call_21627517.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627517, uri, valid, _)

proc call*(call_21627518: Call_GetExecutePolicy_21627500; PolicyName: string;
          AutoScalingGroupName: string = ""; MetricValue: float = 0.0;
          BreachThreshold: float = 0.0; Action: string = "ExecutePolicy";
          HonorCooldown: bool = false; Version: string = "2011-01-01"): Recallable =
  ## getExecutePolicy
  ## Executes the specified policy.
  ##   AutoScalingGroupName: string
  ##                       : The name of the Auto Scaling group.
  ##   MetricValue: float
  ##              : <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  ##   BreachThreshold: float
  ##                  : <p>The breach threshold for the alarm.</p> <p>Conditional: This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
  ##   Action: string (required)
  ##   HonorCooldown: bool
  ##                : <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>This parameter is not supported if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Version: string (required)
  ##   PolicyName: string (required)
  ##             : The name or ARN of the policy.
  var query_21627519 = newJObject()
  add(query_21627519, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627519, "MetricValue", newJFloat(MetricValue))
  add(query_21627519, "BreachThreshold", newJFloat(BreachThreshold))
  add(query_21627519, "Action", newJString(Action))
  add(query_21627519, "HonorCooldown", newJBool(HonorCooldown))
  add(query_21627519, "Version", newJString(Version))
  add(query_21627519, "PolicyName", newJString(PolicyName))
  result = call_21627518.call(nil, query_21627519, nil, nil, nil)

var getExecutePolicy* = Call_GetExecutePolicy_21627500(name: "getExecutePolicy",
    meth: HttpMethod.HttpGet, host: "autoscaling.amazonaws.com",
    route: "/#Action=ExecutePolicy", validator: validate_GetExecutePolicy_21627501,
    base: "/", makeUrl: url_GetExecutePolicy_21627502,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostExitStandby_21627558 = ref object of OpenApiRestCall_21625435
proc url_PostExitStandby_21627560(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostExitStandby_21627559(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627561 = query.getOrDefault("Action")
  valid_21627561 = validateParameter(valid_21627561, JString, required = true,
                                   default = newJString("ExitStandby"))
  if valid_21627561 != nil:
    section.add "Action", valid_21627561
  var valid_21627562 = query.getOrDefault("Version")
  valid_21627562 = validateParameter(valid_21627562, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627562 != nil:
    section.add "Version", valid_21627562
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627563 = header.getOrDefault("X-Amz-Date")
  valid_21627563 = validateParameter(valid_21627563, JString, required = false,
                                   default = nil)
  if valid_21627563 != nil:
    section.add "X-Amz-Date", valid_21627563
  var valid_21627564 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627564 = validateParameter(valid_21627564, JString, required = false,
                                   default = nil)
  if valid_21627564 != nil:
    section.add "X-Amz-Security-Token", valid_21627564
  var valid_21627565 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627565 = validateParameter(valid_21627565, JString, required = false,
                                   default = nil)
  if valid_21627565 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627565
  var valid_21627566 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627566 = validateParameter(valid_21627566, JString, required = false,
                                   default = nil)
  if valid_21627566 != nil:
    section.add "X-Amz-Algorithm", valid_21627566
  var valid_21627567 = header.getOrDefault("X-Amz-Signature")
  valid_21627567 = validateParameter(valid_21627567, JString, required = false,
                                   default = nil)
  if valid_21627567 != nil:
    section.add "X-Amz-Signature", valid_21627567
  var valid_21627568 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627568 = validateParameter(valid_21627568, JString, required = false,
                                   default = nil)
  if valid_21627568 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627568
  var valid_21627569 = header.getOrDefault("X-Amz-Credential")
  valid_21627569 = validateParameter(valid_21627569, JString, required = false,
                                   default = nil)
  if valid_21627569 != nil:
    section.add "X-Amz-Credential", valid_21627569
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627570 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627570 = validateParameter(valid_21627570, JString, required = true,
                                   default = nil)
  if valid_21627570 != nil:
    section.add "AutoScalingGroupName", valid_21627570
  var valid_21627571 = formData.getOrDefault("InstanceIds")
  valid_21627571 = validateParameter(valid_21627571, JArray, required = false,
                                   default = nil)
  if valid_21627571 != nil:
    section.add "InstanceIds", valid_21627571
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627572: Call_PostExitStandby_21627558; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627572.validator(path, query, header, formData, body, _)
  let scheme = call_21627572.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627572.makeUrl(scheme.get, call_21627572.host, call_21627572.base,
                               call_21627572.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627572, uri, valid, _)

proc call*(call_21627573: Call_PostExitStandby_21627558;
          AutoScalingGroupName: string; InstanceIds: JsonNode = nil;
          Action: string = "ExitStandby"; Version: string = "2011-01-01"): Recallable =
  ## postExitStandby
  ## <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627574 = newJObject()
  var formData_21627575 = newJObject()
  add(formData_21627575, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if InstanceIds != nil:
    formData_21627575.add "InstanceIds", InstanceIds
  add(query_21627574, "Action", newJString(Action))
  add(query_21627574, "Version", newJString(Version))
  result = call_21627573.call(nil, query_21627574, nil, formData_21627575, nil)

var postExitStandby* = Call_PostExitStandby_21627558(name: "postExitStandby",
    meth: HttpMethod.HttpPost, host: "autoscaling.amazonaws.com",
    route: "/#Action=ExitStandby", validator: validate_PostExitStandby_21627559,
    base: "/", makeUrl: url_PostExitStandby_21627560,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetExitStandby_21627541 = ref object of OpenApiRestCall_21625435
proc url_GetExitStandby_21627543(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetExitStandby_21627542(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627544 = query.getOrDefault("AutoScalingGroupName")
  valid_21627544 = validateParameter(valid_21627544, JString, required = true,
                                   default = nil)
  if valid_21627544 != nil:
    section.add "AutoScalingGroupName", valid_21627544
  var valid_21627545 = query.getOrDefault("Action")
  valid_21627545 = validateParameter(valid_21627545, JString, required = true,
                                   default = newJString("ExitStandby"))
  if valid_21627545 != nil:
    section.add "Action", valid_21627545
  var valid_21627546 = query.getOrDefault("InstanceIds")
  valid_21627546 = validateParameter(valid_21627546, JArray, required = false,
                                   default = nil)
  if valid_21627546 != nil:
    section.add "InstanceIds", valid_21627546
  var valid_21627547 = query.getOrDefault("Version")
  valid_21627547 = validateParameter(valid_21627547, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627547 != nil:
    section.add "Version", valid_21627547
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627548 = header.getOrDefault("X-Amz-Date")
  valid_21627548 = validateParameter(valid_21627548, JString, required = false,
                                   default = nil)
  if valid_21627548 != nil:
    section.add "X-Amz-Date", valid_21627548
  var valid_21627549 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627549 = validateParameter(valid_21627549, JString, required = false,
                                   default = nil)
  if valid_21627549 != nil:
    section.add "X-Amz-Security-Token", valid_21627549
  var valid_21627550 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627550 = validateParameter(valid_21627550, JString, required = false,
                                   default = nil)
  if valid_21627550 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627550
  var valid_21627551 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627551 = validateParameter(valid_21627551, JString, required = false,
                                   default = nil)
  if valid_21627551 != nil:
    section.add "X-Amz-Algorithm", valid_21627551
  var valid_21627552 = header.getOrDefault("X-Amz-Signature")
  valid_21627552 = validateParameter(valid_21627552, JString, required = false,
                                   default = nil)
  if valid_21627552 != nil:
    section.add "X-Amz-Signature", valid_21627552
  var valid_21627553 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627553 = validateParameter(valid_21627553, JString, required = false,
                                   default = nil)
  if valid_21627553 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627553
  var valid_21627554 = header.getOrDefault("X-Amz-Credential")
  valid_21627554 = validateParameter(valid_21627554, JString, required = false,
                                   default = nil)
  if valid_21627554 != nil:
    section.add "X-Amz-Credential", valid_21627554
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627555: Call_GetExitStandby_21627541; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627555.validator(path, query, header, formData, body, _)
  let scheme = call_21627555.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627555.makeUrl(scheme.get, call_21627555.host, call_21627555.base,
                               call_21627555.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627555, uri, valid, _)

proc call*(call_21627556: Call_GetExitStandby_21627541;
          AutoScalingGroupName: string; Action: string = "ExitStandby";
          InstanceIds: JsonNode = nil; Version: string = "2011-01-01"): Recallable =
  ## getExitStandby
  ## <p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   InstanceIds: JArray
  ##              : The IDs of the instances. You can specify up to 20 instances.
  ##   Version: string (required)
  var query_21627557 = newJObject()
  add(query_21627557, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627557, "Action", newJString(Action))
  if InstanceIds != nil:
    query_21627557.add "InstanceIds", InstanceIds
  add(query_21627557, "Version", newJString(Version))
  result = call_21627556.call(nil, query_21627557, nil, nil, nil)

var getExitStandby* = Call_GetExitStandby_21627541(name: "getExitStandby",
    meth: HttpMethod.HttpGet, host: "autoscaling.amazonaws.com",
    route: "/#Action=ExitStandby", validator: validate_GetExitStandby_21627542,
    base: "/", makeUrl: url_GetExitStandby_21627543,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostPutLifecycleHook_21627599 = ref object of OpenApiRestCall_21625435
proc url_PostPutLifecycleHook_21627601(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostPutLifecycleHook_21627600(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state using <a>RecordLifecycleActionHeartbeat</a>.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action using <a>CompleteLifecycleAction</a>.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using <a>DescribeLifecycleHooks</a>. If you are no longer using a lifecycle hook, you can delete it using <a>DeleteLifecycleHook</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627602 = query.getOrDefault("Action")
  valid_21627602 = validateParameter(valid_21627602, JString, required = true,
                                   default = newJString("PutLifecycleHook"))
  if valid_21627602 != nil:
    section.add "Action", valid_21627602
  var valid_21627603 = query.getOrDefault("Version")
  valid_21627603 = validateParameter(valid_21627603, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627603 != nil:
    section.add "Version", valid_21627603
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627604 = header.getOrDefault("X-Amz-Date")
  valid_21627604 = validateParameter(valid_21627604, JString, required = false,
                                   default = nil)
  if valid_21627604 != nil:
    section.add "X-Amz-Date", valid_21627604
  var valid_21627605 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627605 = validateParameter(valid_21627605, JString, required = false,
                                   default = nil)
  if valid_21627605 != nil:
    section.add "X-Amz-Security-Token", valid_21627605
  var valid_21627606 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627606 = validateParameter(valid_21627606, JString, required = false,
                                   default = nil)
  if valid_21627606 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627606
  var valid_21627607 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627607 = validateParameter(valid_21627607, JString, required = false,
                                   default = nil)
  if valid_21627607 != nil:
    section.add "X-Amz-Algorithm", valid_21627607
  var valid_21627608 = header.getOrDefault("X-Amz-Signature")
  valid_21627608 = validateParameter(valid_21627608, JString, required = false,
                                   default = nil)
  if valid_21627608 != nil:
    section.add "X-Amz-Signature", valid_21627608
  var valid_21627609 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627609 = validateParameter(valid_21627609, JString, required = false,
                                   default = nil)
  if valid_21627609 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627609
  var valid_21627610 = header.getOrDefault("X-Amz-Credential")
  valid_21627610 = validateParameter(valid_21627610, JString, required = false,
                                   default = nil)
  if valid_21627610 != nil:
    section.add "X-Amz-Credential", valid_21627610
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleTransition: JString
  ##                      : <p>The instance state to which you want to attach the lifecycle hook. The valid values are:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  ##   DefaultResult: JString
  ##                : Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>. The default value is <code>ABANDON</code>.
  ##   NotificationTargetARN: JString
  ##                        : <p>The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  ##   NotificationMetadata: JString
  ##                       : Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
  ##   HeartbeatTimeout: JInt
  ##                   : <p>The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).</p> <p>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.</p>
  ##   RoleARN: JString
  ##          : <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.</p> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627611 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627611 = validateParameter(valid_21627611, JString, required = true,
                                   default = nil)
  if valid_21627611 != nil:
    section.add "AutoScalingGroupName", valid_21627611
  var valid_21627612 = formData.getOrDefault("LifecycleTransition")
  valid_21627612 = validateParameter(valid_21627612, JString, required = false,
                                   default = nil)
  if valid_21627612 != nil:
    section.add "LifecycleTransition", valid_21627612
  var valid_21627613 = formData.getOrDefault("DefaultResult")
  valid_21627613 = validateParameter(valid_21627613, JString, required = false,
                                   default = nil)
  if valid_21627613 != nil:
    section.add "DefaultResult", valid_21627613
  var valid_21627614 = formData.getOrDefault("NotificationTargetARN")
  valid_21627614 = validateParameter(valid_21627614, JString, required = false,
                                   default = nil)
  if valid_21627614 != nil:
    section.add "NotificationTargetARN", valid_21627614
  var valid_21627615 = formData.getOrDefault("LifecycleHookName")
  valid_21627615 = validateParameter(valid_21627615, JString, required = true,
                                   default = nil)
  if valid_21627615 != nil:
    section.add "LifecycleHookName", valid_21627615
  var valid_21627616 = formData.getOrDefault("NotificationMetadata")
  valid_21627616 = validateParameter(valid_21627616, JString, required = false,
                                   default = nil)
  if valid_21627616 != nil:
    section.add "NotificationMetadata", valid_21627616
  var valid_21627617 = formData.getOrDefault("HeartbeatTimeout")
  valid_21627617 = validateParameter(valid_21627617, JInt, required = false,
                                   default = nil)
  if valid_21627617 != nil:
    section.add "HeartbeatTimeout", valid_21627617
  var valid_21627618 = formData.getOrDefault("RoleARN")
  valid_21627618 = validateParameter(valid_21627618, JString, required = false,
                                   default = nil)
  if valid_21627618 != nil:
    section.add "RoleARN", valid_21627618
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627619: Call_PostPutLifecycleHook_21627599; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state using <a>RecordLifecycleActionHeartbeat</a>.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action using <a>CompleteLifecycleAction</a>.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using <a>DescribeLifecycleHooks</a>. If you are no longer using a lifecycle hook, you can delete it using <a>DeleteLifecycleHook</a>.</p>
  ## 
  let valid = call_21627619.validator(path, query, header, formData, body, _)
  let scheme = call_21627619.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627619.makeUrl(scheme.get, call_21627619.host, call_21627619.base,
                               call_21627619.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627619, uri, valid, _)

proc call*(call_21627620: Call_PostPutLifecycleHook_21627599;
          AutoScalingGroupName: string; LifecycleHookName: string;
          LifecycleTransition: string = ""; DefaultResult: string = "";
          Action: string = "PutLifecycleHook"; NotificationTargetARN: string = "";
          NotificationMetadata: string = ""; HeartbeatTimeout: int = 0;
          Version: string = "2011-01-01"; RoleARN: string = ""): Recallable =
  ## postPutLifecycleHook
  ## <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state using <a>RecordLifecycleActionHeartbeat</a>.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action using <a>CompleteLifecycleAction</a>.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using <a>DescribeLifecycleHooks</a>. If you are no longer using a lifecycle hook, you can delete it using <a>DeleteLifecycleHook</a>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   LifecycleTransition: string
  ##                      : <p>The instance state to which you want to attach the lifecycle hook. The valid values are:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  ##   DefaultResult: string
  ##                : Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>. The default value is <code>ABANDON</code>.
  ##   Action: string (required)
  ##   NotificationTargetARN: string
  ##                        : <p>The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   NotificationMetadata: string
  ##                       : Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
  ##   HeartbeatTimeout: int
  ##                   : <p>The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).</p> <p>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.</p>
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.</p> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  var query_21627621 = newJObject()
  var formData_21627622 = newJObject()
  add(formData_21627622, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627622, "LifecycleTransition", newJString(LifecycleTransition))
  add(formData_21627622, "DefaultResult", newJString(DefaultResult))
  add(query_21627621, "Action", newJString(Action))
  add(formData_21627622, "NotificationTargetARN",
      newJString(NotificationTargetARN))
  add(formData_21627622, "LifecycleHookName", newJString(LifecycleHookName))
  add(formData_21627622, "NotificationMetadata", newJString(NotificationMetadata))
  add(formData_21627622, "HeartbeatTimeout", newJInt(HeartbeatTimeout))
  add(query_21627621, "Version", newJString(Version))
  add(formData_21627622, "RoleARN", newJString(RoleARN))
  result = call_21627620.call(nil, query_21627621, nil, formData_21627622, nil)

var postPutLifecycleHook* = Call_PostPutLifecycleHook_21627599(
    name: "postPutLifecycleHook", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=PutLifecycleHook",
    validator: validate_PostPutLifecycleHook_21627600, base: "/",
    makeUrl: url_PostPutLifecycleHook_21627601,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetPutLifecycleHook_21627576 = ref object of OpenApiRestCall_21625435
proc url_GetPutLifecycleHook_21627578(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetPutLifecycleHook_21627577(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state using <a>RecordLifecycleActionHeartbeat</a>.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action using <a>CompleteLifecycleAction</a>.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using <a>DescribeLifecycleHooks</a>. If you are no longer using a lifecycle hook, you can delete it using <a>DeleteLifecycleHook</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   NotificationTargetARN: JString
  ##                        : <p>The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>
  ##   DefaultResult: JString
  ##                : Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>. The default value is <code>ABANDON</code>.
  ##   Action: JString (required)
  ##   RoleARN: JString
  ##          : <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.</p> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  ##   LifecycleTransition: JString
  ##                      : <p>The instance state to which you want to attach the lifecycle hook. The valid values are:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  ##   NotificationMetadata: JString
  ##                       : Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
  ##   HeartbeatTimeout: JInt
  ##                   : <p>The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).</p> <p>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.</p>
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627579 = query.getOrDefault("AutoScalingGroupName")
  valid_21627579 = validateParameter(valid_21627579, JString, required = true,
                                   default = nil)
  if valid_21627579 != nil:
    section.add "AutoScalingGroupName", valid_21627579
  var valid_21627580 = query.getOrDefault("NotificationTargetARN")
  valid_21627580 = validateParameter(valid_21627580, JString, required = false,
                                   default = nil)
  if valid_21627580 != nil:
    section.add "NotificationTargetARN", valid_21627580
  var valid_21627581 = query.getOrDefault("DefaultResult")
  valid_21627581 = validateParameter(valid_21627581, JString, required = false,
                                   default = nil)
  if valid_21627581 != nil:
    section.add "DefaultResult", valid_21627581
  var valid_21627582 = query.getOrDefault("Action")
  valid_21627582 = validateParameter(valid_21627582, JString, required = true,
                                   default = newJString("PutLifecycleHook"))
  if valid_21627582 != nil:
    section.add "Action", valid_21627582
  var valid_21627583 = query.getOrDefault("RoleARN")
  valid_21627583 = validateParameter(valid_21627583, JString, required = false,
                                   default = nil)
  if valid_21627583 != nil:
    section.add "RoleARN", valid_21627583
  var valid_21627584 = query.getOrDefault("LifecycleTransition")
  valid_21627584 = validateParameter(valid_21627584, JString, required = false,
                                   default = nil)
  if valid_21627584 != nil:
    section.add "LifecycleTransition", valid_21627584
  var valid_21627585 = query.getOrDefault("NotificationMetadata")
  valid_21627585 = validateParameter(valid_21627585, JString, required = false,
                                   default = nil)
  if valid_21627585 != nil:
    section.add "NotificationMetadata", valid_21627585
  var valid_21627586 = query.getOrDefault("HeartbeatTimeout")
  valid_21627586 = validateParameter(valid_21627586, JInt, required = false,
                                   default = nil)
  if valid_21627586 != nil:
    section.add "HeartbeatTimeout", valid_21627586
  var valid_21627587 = query.getOrDefault("LifecycleHookName")
  valid_21627587 = validateParameter(valid_21627587, JString, required = true,
                                   default = nil)
  if valid_21627587 != nil:
    section.add "LifecycleHookName", valid_21627587
  var valid_21627588 = query.getOrDefault("Version")
  valid_21627588 = validateParameter(valid_21627588, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627588 != nil:
    section.add "Version", valid_21627588
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627589 = header.getOrDefault("X-Amz-Date")
  valid_21627589 = validateParameter(valid_21627589, JString, required = false,
                                   default = nil)
  if valid_21627589 != nil:
    section.add "X-Amz-Date", valid_21627589
  var valid_21627590 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627590 = validateParameter(valid_21627590, JString, required = false,
                                   default = nil)
  if valid_21627590 != nil:
    section.add "X-Amz-Security-Token", valid_21627590
  var valid_21627591 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627591 = validateParameter(valid_21627591, JString, required = false,
                                   default = nil)
  if valid_21627591 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627591
  var valid_21627592 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627592 = validateParameter(valid_21627592, JString, required = false,
                                   default = nil)
  if valid_21627592 != nil:
    section.add "X-Amz-Algorithm", valid_21627592
  var valid_21627593 = header.getOrDefault("X-Amz-Signature")
  valid_21627593 = validateParameter(valid_21627593, JString, required = false,
                                   default = nil)
  if valid_21627593 != nil:
    section.add "X-Amz-Signature", valid_21627593
  var valid_21627594 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627594 = validateParameter(valid_21627594, JString, required = false,
                                   default = nil)
  if valid_21627594 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627594
  var valid_21627595 = header.getOrDefault("X-Amz-Credential")
  valid_21627595 = validateParameter(valid_21627595, JString, required = false,
                                   default = nil)
  if valid_21627595 != nil:
    section.add "X-Amz-Credential", valid_21627595
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627596: Call_GetPutLifecycleHook_21627576; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state using <a>RecordLifecycleActionHeartbeat</a>.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action using <a>CompleteLifecycleAction</a>.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using <a>DescribeLifecycleHooks</a>. If you are no longer using a lifecycle hook, you can delete it using <a>DeleteLifecycleHook</a>.</p>
  ## 
  let valid = call_21627596.validator(path, query, header, formData, body, _)
  let scheme = call_21627596.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627596.makeUrl(scheme.get, call_21627596.host, call_21627596.base,
                               call_21627596.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627596, uri, valid, _)

proc call*(call_21627597: Call_GetPutLifecycleHook_21627576;
          AutoScalingGroupName: string; LifecycleHookName: string;
          NotificationTargetARN: string = ""; DefaultResult: string = "";
          Action: string = "PutLifecycleHook"; RoleARN: string = "";
          LifecycleTransition: string = ""; NotificationMetadata: string = "";
          HeartbeatTimeout: int = 0; Version: string = "2011-01-01"): Recallable =
  ## getPutLifecycleHook
  ## <p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state using <a>RecordLifecycleActionHeartbeat</a>.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action using <a>CompleteLifecycleAction</a>.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using <a>DescribeLifecycleHooks</a>. If you are no longer using a lifecycle hook, you can delete it using <a>DeleteLifecycleHook</a>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   NotificationTargetARN: string
  ##                        : <p>The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>
  ##   DefaultResult: string
  ##                : Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>. The default value is <code>ABANDON</code>.
  ##   Action: string (required)
  ##   RoleARN: string
  ##          : <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.</p> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  ##   LifecycleTransition: string
  ##                      : <p>The instance state to which you want to attach the lifecycle hook. The valid values are:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul> <p>Conditional: This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
  ##   NotificationMetadata: string
  ##                       : Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
  ##   HeartbeatTimeout: int
  ##                   : <p>The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).</p> <p>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.</p>
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   Version: string (required)
  var query_21627598 = newJObject()
  add(query_21627598, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627598, "NotificationTargetARN", newJString(NotificationTargetARN))
  add(query_21627598, "DefaultResult", newJString(DefaultResult))
  add(query_21627598, "Action", newJString(Action))
  add(query_21627598, "RoleARN", newJString(RoleARN))
  add(query_21627598, "LifecycleTransition", newJString(LifecycleTransition))
  add(query_21627598, "NotificationMetadata", newJString(NotificationMetadata))
  add(query_21627598, "HeartbeatTimeout", newJInt(HeartbeatTimeout))
  add(query_21627598, "LifecycleHookName", newJString(LifecycleHookName))
  add(query_21627598, "Version", newJString(Version))
  result = call_21627597.call(nil, query_21627598, nil, nil, nil)

var getPutLifecycleHook* = Call_GetPutLifecycleHook_21627576(
    name: "getPutLifecycleHook", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=PutLifecycleHook",
    validator: validate_GetPutLifecycleHook_21627577, base: "/",
    makeUrl: url_GetPutLifecycleHook_21627578,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostPutNotificationConfiguration_21627641 = ref object of OpenApiRestCall_21625435
proc url_PostPutNotificationConfiguration_21627643(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostPutNotificationConfiguration_21627642(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627644 = query.getOrDefault("Action")
  valid_21627644 = validateParameter(valid_21627644, JString, required = true, default = newJString(
      "PutNotificationConfiguration"))
  if valid_21627644 != nil:
    section.add "Action", valid_21627644
  var valid_21627645 = query.getOrDefault("Version")
  valid_21627645 = validateParameter(valid_21627645, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627645 != nil:
    section.add "Version", valid_21627645
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627646 = header.getOrDefault("X-Amz-Date")
  valid_21627646 = validateParameter(valid_21627646, JString, required = false,
                                   default = nil)
  if valid_21627646 != nil:
    section.add "X-Amz-Date", valid_21627646
  var valid_21627647 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627647 = validateParameter(valid_21627647, JString, required = false,
                                   default = nil)
  if valid_21627647 != nil:
    section.add "X-Amz-Security-Token", valid_21627647
  var valid_21627648 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627648 = validateParameter(valid_21627648, JString, required = false,
                                   default = nil)
  if valid_21627648 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627648
  var valid_21627649 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627649 = validateParameter(valid_21627649, JString, required = false,
                                   default = nil)
  if valid_21627649 != nil:
    section.add "X-Amz-Algorithm", valid_21627649
  var valid_21627650 = header.getOrDefault("X-Amz-Signature")
  valid_21627650 = validateParameter(valid_21627650, JString, required = false,
                                   default = nil)
  if valid_21627650 != nil:
    section.add "X-Amz-Signature", valid_21627650
  var valid_21627651 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627651 = validateParameter(valid_21627651, JString, required = false,
                                   default = nil)
  if valid_21627651 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627651
  var valid_21627652 = header.getOrDefault("X-Amz-Credential")
  valid_21627652 = validateParameter(valid_21627652, JString, required = false,
                                   default = nil)
  if valid_21627652 != nil:
    section.add "X-Amz-Credential", valid_21627652
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   TopicARN: JString (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  ##   NotificationTypes: JArray (required)
  ##                    : The type of event that causes the notification to be sent. For more information about notification types supported by Amazon EC2 Auto Scaling, see <a>DescribeAutoScalingNotificationTypes</a>.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627653 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627653 = validateParameter(valid_21627653, JString, required = true,
                                   default = nil)
  if valid_21627653 != nil:
    section.add "AutoScalingGroupName", valid_21627653
  var valid_21627654 = formData.getOrDefault("TopicARN")
  valid_21627654 = validateParameter(valid_21627654, JString, required = true,
                                   default = nil)
  if valid_21627654 != nil:
    section.add "TopicARN", valid_21627654
  var valid_21627655 = formData.getOrDefault("NotificationTypes")
  valid_21627655 = validateParameter(valid_21627655, JArray, required = true,
                                   default = nil)
  if valid_21627655 != nil:
    section.add "NotificationTypes", valid_21627655
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627656: Call_PostPutNotificationConfiguration_21627641;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627656.validator(path, query, header, formData, body, _)
  let scheme = call_21627656.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627656.makeUrl(scheme.get, call_21627656.host, call_21627656.base,
                               call_21627656.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627656, uri, valid, _)

proc call*(call_21627657: Call_PostPutNotificationConfiguration_21627641;
          AutoScalingGroupName: string; TopicARN: string;
          NotificationTypes: JsonNode;
          Action: string = "PutNotificationConfiguration";
          Version: string = "2011-01-01"): Recallable =
  ## postPutNotificationConfiguration
  ## <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   TopicARN: string (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  ##   Action: string (required)
  ##   NotificationTypes: JArray (required)
  ##                    : The type of event that causes the notification to be sent. For more information about notification types supported by Amazon EC2 Auto Scaling, see <a>DescribeAutoScalingNotificationTypes</a>.
  ##   Version: string (required)
  var query_21627658 = newJObject()
  var formData_21627659 = newJObject()
  add(formData_21627659, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627659, "TopicARN", newJString(TopicARN))
  add(query_21627658, "Action", newJString(Action))
  if NotificationTypes != nil:
    formData_21627659.add "NotificationTypes", NotificationTypes
  add(query_21627658, "Version", newJString(Version))
  result = call_21627657.call(nil, query_21627658, nil, formData_21627659, nil)

var postPutNotificationConfiguration* = Call_PostPutNotificationConfiguration_21627641(
    name: "postPutNotificationConfiguration", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=PutNotificationConfiguration",
    validator: validate_PostPutNotificationConfiguration_21627642, base: "/",
    makeUrl: url_PostPutNotificationConfiguration_21627643,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetPutNotificationConfiguration_21627623 = ref object of OpenApiRestCall_21625435
proc url_GetPutNotificationConfiguration_21627625(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetPutNotificationConfiguration_21627624(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   NotificationTypes: JArray (required)
  ##                    : The type of event that causes the notification to be sent. For more information about notification types supported by Amazon EC2 Auto Scaling, see <a>DescribeAutoScalingNotificationTypes</a>.
  ##   TopicARN: JString (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627626 = query.getOrDefault("AutoScalingGroupName")
  valid_21627626 = validateParameter(valid_21627626, JString, required = true,
                                   default = nil)
  if valid_21627626 != nil:
    section.add "AutoScalingGroupName", valid_21627626
  var valid_21627627 = query.getOrDefault("Action")
  valid_21627627 = validateParameter(valid_21627627, JString, required = true, default = newJString(
      "PutNotificationConfiguration"))
  if valid_21627627 != nil:
    section.add "Action", valid_21627627
  var valid_21627628 = query.getOrDefault("NotificationTypes")
  valid_21627628 = validateParameter(valid_21627628, JArray, required = true,
                                   default = nil)
  if valid_21627628 != nil:
    section.add "NotificationTypes", valid_21627628
  var valid_21627629 = query.getOrDefault("TopicARN")
  valid_21627629 = validateParameter(valid_21627629, JString, required = true,
                                   default = nil)
  if valid_21627629 != nil:
    section.add "TopicARN", valid_21627629
  var valid_21627630 = query.getOrDefault("Version")
  valid_21627630 = validateParameter(valid_21627630, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627630 != nil:
    section.add "Version", valid_21627630
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627631 = header.getOrDefault("X-Amz-Date")
  valid_21627631 = validateParameter(valid_21627631, JString, required = false,
                                   default = nil)
  if valid_21627631 != nil:
    section.add "X-Amz-Date", valid_21627631
  var valid_21627632 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627632 = validateParameter(valid_21627632, JString, required = false,
                                   default = nil)
  if valid_21627632 != nil:
    section.add "X-Amz-Security-Token", valid_21627632
  var valid_21627633 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627633 = validateParameter(valid_21627633, JString, required = false,
                                   default = nil)
  if valid_21627633 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627633
  var valid_21627634 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627634 = validateParameter(valid_21627634, JString, required = false,
                                   default = nil)
  if valid_21627634 != nil:
    section.add "X-Amz-Algorithm", valid_21627634
  var valid_21627635 = header.getOrDefault("X-Amz-Signature")
  valid_21627635 = validateParameter(valid_21627635, JString, required = false,
                                   default = nil)
  if valid_21627635 != nil:
    section.add "X-Amz-Signature", valid_21627635
  var valid_21627636 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627636 = validateParameter(valid_21627636, JString, required = false,
                                   default = nil)
  if valid_21627636 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627636
  var valid_21627637 = header.getOrDefault("X-Amz-Credential")
  valid_21627637 = validateParameter(valid_21627637, JString, required = false,
                                   default = nil)
  if valid_21627637 != nil:
    section.add "X-Amz-Credential", valid_21627637
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627638: Call_GetPutNotificationConfiguration_21627623;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627638.validator(path, query, header, formData, body, _)
  let scheme = call_21627638.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627638.makeUrl(scheme.get, call_21627638.host, call_21627638.base,
                               call_21627638.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627638, uri, valid, _)

proc call*(call_21627639: Call_GetPutNotificationConfiguration_21627623;
          AutoScalingGroupName: string; NotificationTypes: JsonNode;
          TopicARN: string; Action: string = "PutNotificationConfiguration";
          Version: string = "2011-01-01"): Recallable =
  ## getPutNotificationConfiguration
  ## <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   NotificationTypes: JArray (required)
  ##                    : The type of event that causes the notification to be sent. For more information about notification types supported by Amazon EC2 Auto Scaling, see <a>DescribeAutoScalingNotificationTypes</a>.
  ##   TopicARN: string (required)
  ##           : The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
  ##   Version: string (required)
  var query_21627640 = newJObject()
  add(query_21627640, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627640, "Action", newJString(Action))
  if NotificationTypes != nil:
    query_21627640.add "NotificationTypes", NotificationTypes
  add(query_21627640, "TopicARN", newJString(TopicARN))
  add(query_21627640, "Version", newJString(Version))
  result = call_21627639.call(nil, query_21627640, nil, nil, nil)

var getPutNotificationConfiguration* = Call_GetPutNotificationConfiguration_21627623(
    name: "getPutNotificationConfiguration", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=PutNotificationConfiguration",
    validator: validate_GetPutNotificationConfiguration_21627624, base: "/",
    makeUrl: url_GetPutNotificationConfiguration_21627625,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostPutScalingPolicy_21627691 = ref object of OpenApiRestCall_21625435
proc url_PostPutScalingPolicy_21627693(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostPutScalingPolicy_21627692(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates or updates a scaling policy for an Auto Scaling group.</p> <p>For more information about using scaling policies to scale your Auto Scaling group automatically, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html">Dynamic Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627694 = query.getOrDefault("Action")
  valid_21627694 = validateParameter(valid_21627694, JString, required = true,
                                   default = newJString("PutScalingPolicy"))
  if valid_21627694 != nil:
    section.add "Action", valid_21627694
  var valid_21627695 = query.getOrDefault("Version")
  valid_21627695 = validateParameter(valid_21627695, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627695 != nil:
    section.add "Version", valid_21627695
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627696 = header.getOrDefault("X-Amz-Date")
  valid_21627696 = validateParameter(valid_21627696, JString, required = false,
                                   default = nil)
  if valid_21627696 != nil:
    section.add "X-Amz-Date", valid_21627696
  var valid_21627697 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627697 = validateParameter(valid_21627697, JString, required = false,
                                   default = nil)
  if valid_21627697 != nil:
    section.add "X-Amz-Security-Token", valid_21627697
  var valid_21627698 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627698 = validateParameter(valid_21627698, JString, required = false,
                                   default = nil)
  if valid_21627698 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627698
  var valid_21627699 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627699 = validateParameter(valid_21627699, JString, required = false,
                                   default = nil)
  if valid_21627699 != nil:
    section.add "X-Amz-Algorithm", valid_21627699
  var valid_21627700 = header.getOrDefault("X-Amz-Signature")
  valid_21627700 = validateParameter(valid_21627700, JString, required = false,
                                   default = nil)
  if valid_21627700 != nil:
    section.add "X-Amz-Signature", valid_21627700
  var valid_21627701 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627701 = validateParameter(valid_21627701, JString, required = false,
                                   default = nil)
  if valid_21627701 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627701
  var valid_21627702 = header.getOrDefault("X-Amz-Credential")
  valid_21627702 = validateParameter(valid_21627702, JString, required = false,
                                   default = nil)
  if valid_21627702 != nil:
    section.add "X-Amz-Credential", valid_21627702
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Enabled: JBool
  ##          : Indicates whether the scaling policy is enabled or disabled. The default is enabled. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling a Scaling Policy for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   TargetTrackingConfiguration.CustomizedMetricSpecification: JString
  ##                                                            : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A customized metric. You must specify either a predefined metric or a customized metric.
  ##   PolicyName: JString (required)
  ##             : The name of the policy.
  ##   StepAdjustments: JArray
  ##                  : <p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>Conditional: If you specify <code>StepScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  ##   TargetTrackingConfiguration.PredefinedMetricSpecification: JString
  ##                                                            : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A predefined metric. You must specify either a predefined metric or a customized metric.
  ##   TargetTrackingConfiguration.DisableScaleIn: JString
  ##                                             : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is <code>false</code>.
  ##   ScalingAdjustment: JInt
  ##                    : <p>The amount by which a simple scaling policy scales the Auto Scaling group in response to an alarm breach. The adjustment is based on the value that you specified in the <code>AdjustmentType</code> parameter (either an absolute number or a percentage). A positive value adds to the current capacity and a negative value subtracts from the current capacity. For exact capacity, you must specify a positive value.</p> <p>Conditional: If you specify <code>SimpleScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  ##   MinAdjustmentStep: JInt
  ##                    : Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
  ##   Cooldown: JInt
  ##           : <p>The amount of time, in seconds, after a scaling activity completes before any further dynamic scaling activities can start. If this parameter is not specified, the default cooldown period for the group applies.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MetricAggregationType: JString
  ##                        : <p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code>.</p>
  ##   AdjustmentType: JString
  ##                 : <p>Specifies whether the <code>ScalingAdjustment</code> parameter is an absolute number or a percentage of the current capacity. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   EstimatedInstanceWarmup: JInt
  ##                          : <p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. The default is to use the value specified for the default cooldown period for the group.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p>
  ##   MinAdjustmentMagnitude: JInt
  ##                         : <p>The minimum number of instances to scale. If the value of <code>AdjustmentType</code> is <code>PercentChangeInCapacity</code>, the scaling policy changes the <code>DesiredCapacity</code> of the Auto Scaling group by at least this many instances. Otherwise, the error is <code>ValidationError</code>.</p> <p>This property replaces the <code>MinAdjustmentStep</code> property. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.</p> <p>Valid only if the policy type is <code>SimpleScaling</code> or <code>StepScaling</code>.</p>
  ##   TargetTrackingConfiguration.TargetValue: JString
  ##                                          : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## The target value for the metric.
  ##   PolicyType: JString
  ##             : The policy type. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>. If the policy type is null, the value is treated as <code>SimpleScaling</code>.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627703 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627703 = validateParameter(valid_21627703, JString, required = true,
                                   default = nil)
  if valid_21627703 != nil:
    section.add "AutoScalingGroupName", valid_21627703
  var valid_21627704 = formData.getOrDefault("Enabled")
  valid_21627704 = validateParameter(valid_21627704, JBool, required = false,
                                   default = nil)
  if valid_21627704 != nil:
    section.add "Enabled", valid_21627704
  var valid_21627705 = formData.getOrDefault(
      "TargetTrackingConfiguration.CustomizedMetricSpecification")
  valid_21627705 = validateParameter(valid_21627705, JString, required = false,
                                   default = nil)
  if valid_21627705 != nil:
    section.add "TargetTrackingConfiguration.CustomizedMetricSpecification", valid_21627705
  var valid_21627706 = formData.getOrDefault("PolicyName")
  valid_21627706 = validateParameter(valid_21627706, JString, required = true,
                                   default = nil)
  if valid_21627706 != nil:
    section.add "PolicyName", valid_21627706
  var valid_21627707 = formData.getOrDefault("StepAdjustments")
  valid_21627707 = validateParameter(valid_21627707, JArray, required = false,
                                   default = nil)
  if valid_21627707 != nil:
    section.add "StepAdjustments", valid_21627707
  var valid_21627708 = formData.getOrDefault(
      "TargetTrackingConfiguration.PredefinedMetricSpecification")
  valid_21627708 = validateParameter(valid_21627708, JString, required = false,
                                   default = nil)
  if valid_21627708 != nil:
    section.add "TargetTrackingConfiguration.PredefinedMetricSpecification", valid_21627708
  var valid_21627709 = formData.getOrDefault(
      "TargetTrackingConfiguration.DisableScaleIn")
  valid_21627709 = validateParameter(valid_21627709, JString, required = false,
                                   default = nil)
  if valid_21627709 != nil:
    section.add "TargetTrackingConfiguration.DisableScaleIn", valid_21627709
  var valid_21627710 = formData.getOrDefault("ScalingAdjustment")
  valid_21627710 = validateParameter(valid_21627710, JInt, required = false,
                                   default = nil)
  if valid_21627710 != nil:
    section.add "ScalingAdjustment", valid_21627710
  var valid_21627711 = formData.getOrDefault("MinAdjustmentStep")
  valid_21627711 = validateParameter(valid_21627711, JInt, required = false,
                                   default = nil)
  if valid_21627711 != nil:
    section.add "MinAdjustmentStep", valid_21627711
  var valid_21627712 = formData.getOrDefault("Cooldown")
  valid_21627712 = validateParameter(valid_21627712, JInt, required = false,
                                   default = nil)
  if valid_21627712 != nil:
    section.add "Cooldown", valid_21627712
  var valid_21627713 = formData.getOrDefault("MetricAggregationType")
  valid_21627713 = validateParameter(valid_21627713, JString, required = false,
                                   default = nil)
  if valid_21627713 != nil:
    section.add "MetricAggregationType", valid_21627713
  var valid_21627714 = formData.getOrDefault("AdjustmentType")
  valid_21627714 = validateParameter(valid_21627714, JString, required = false,
                                   default = nil)
  if valid_21627714 != nil:
    section.add "AdjustmentType", valid_21627714
  var valid_21627715 = formData.getOrDefault("EstimatedInstanceWarmup")
  valid_21627715 = validateParameter(valid_21627715, JInt, required = false,
                                   default = nil)
  if valid_21627715 != nil:
    section.add "EstimatedInstanceWarmup", valid_21627715
  var valid_21627716 = formData.getOrDefault("MinAdjustmentMagnitude")
  valid_21627716 = validateParameter(valid_21627716, JInt, required = false,
                                   default = nil)
  if valid_21627716 != nil:
    section.add "MinAdjustmentMagnitude", valid_21627716
  var valid_21627717 = formData.getOrDefault(
      "TargetTrackingConfiguration.TargetValue")
  valid_21627717 = validateParameter(valid_21627717, JString, required = false,
                                   default = nil)
  if valid_21627717 != nil:
    section.add "TargetTrackingConfiguration.TargetValue", valid_21627717
  var valid_21627718 = formData.getOrDefault("PolicyType")
  valid_21627718 = validateParameter(valid_21627718, JString, required = false,
                                   default = nil)
  if valid_21627718 != nil:
    section.add "PolicyType", valid_21627718
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627719: Call_PostPutScalingPolicy_21627691; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates a scaling policy for an Auto Scaling group.</p> <p>For more information about using scaling policies to scale your Auto Scaling group automatically, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html">Dynamic Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627719.validator(path, query, header, formData, body, _)
  let scheme = call_21627719.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627719.makeUrl(scheme.get, call_21627719.host, call_21627719.base,
                               call_21627719.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627719, uri, valid, _)

proc call*(call_21627720: Call_PostPutScalingPolicy_21627691;
          AutoScalingGroupName: string; PolicyName: string; Enabled: bool = false;
    TargetTrackingConfigurationCustomizedMetricSpecification: string = "";
          StepAdjustments: JsonNode = nil; TargetTrackingConfigurationPredefinedMetricSpecification: string = "";
          TargetTrackingConfigurationDisableScaleIn: string = "";
          ScalingAdjustment: int = 0; MinAdjustmentStep: int = 0; Cooldown: int = 0;
          Action: string = "PutScalingPolicy"; MetricAggregationType: string = "";
          AdjustmentType: string = ""; EstimatedInstanceWarmup: int = 0;
          MinAdjustmentMagnitude: int = 0;
          TargetTrackingConfigurationTargetValue: string = "";
          Version: string = "2011-01-01"; PolicyType: string = ""): Recallable =
  ## postPutScalingPolicy
  ## <p>Creates or updates a scaling policy for an Auto Scaling group.</p> <p>For more information about using scaling policies to scale your Auto Scaling group automatically, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html">Dynamic Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Enabled: bool
  ##          : Indicates whether the scaling policy is enabled or disabled. The default is enabled. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling a Scaling Policy for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   TargetTrackingConfigurationCustomizedMetricSpecification: string
  ##                                                           : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A customized metric. You must specify either a predefined metric or a customized metric.
  ##   PolicyName: string (required)
  ##             : The name of the policy.
  ##   StepAdjustments: JArray
  ##                  : <p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>Conditional: If you specify <code>StepScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  ##   TargetTrackingConfigurationPredefinedMetricSpecification: string
  ##                                                           : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A predefined metric. You must specify either a predefined metric or a customized metric.
  ##   TargetTrackingConfigurationDisableScaleIn: string
  ##                                            : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is <code>false</code>.
  ##   ScalingAdjustment: int
  ##                    : <p>The amount by which a simple scaling policy scales the Auto Scaling group in response to an alarm breach. The adjustment is based on the value that you specified in the <code>AdjustmentType</code> parameter (either an absolute number or a percentage). A positive value adds to the current capacity and a negative value subtracts from the current capacity. For exact capacity, you must specify a positive value.</p> <p>Conditional: If you specify <code>SimpleScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  ##   MinAdjustmentStep: int
  ##                    : Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
  ##   Cooldown: int
  ##           : <p>The amount of time, in seconds, after a scaling activity completes before any further dynamic scaling activities can start. If this parameter is not specified, the default cooldown period for the group applies.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   MetricAggregationType: string
  ##                        : <p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code>.</p>
  ##   AdjustmentType: string
  ##                 : <p>Specifies whether the <code>ScalingAdjustment</code> parameter is an absolute number or a percentage of the current capacity. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   EstimatedInstanceWarmup: int
  ##                          : <p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. The default is to use the value specified for the default cooldown period for the group.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p>
  ##   MinAdjustmentMagnitude: int
  ##                         : <p>The minimum number of instances to scale. If the value of <code>AdjustmentType</code> is <code>PercentChangeInCapacity</code>, the scaling policy changes the <code>DesiredCapacity</code> of the Auto Scaling group by at least this many instances. Otherwise, the error is <code>ValidationError</code>.</p> <p>This property replaces the <code>MinAdjustmentStep</code> property. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.</p> <p>Valid only if the policy type is <code>SimpleScaling</code> or <code>StepScaling</code>.</p>
  ##   TargetTrackingConfigurationTargetValue: string
  ##                                         : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## The target value for the metric.
  ##   Version: string (required)
  ##   PolicyType: string
  ##             : The policy type. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>. If the policy type is null, the value is treated as <code>SimpleScaling</code>.
  var query_21627721 = newJObject()
  var formData_21627722 = newJObject()
  add(formData_21627722, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627722, "Enabled", newJBool(Enabled))
  add(formData_21627722,
      "TargetTrackingConfiguration.CustomizedMetricSpecification",
      newJString(TargetTrackingConfigurationCustomizedMetricSpecification))
  add(formData_21627722, "PolicyName", newJString(PolicyName))
  if StepAdjustments != nil:
    formData_21627722.add "StepAdjustments", StepAdjustments
  add(formData_21627722,
      "TargetTrackingConfiguration.PredefinedMetricSpecification",
      newJString(TargetTrackingConfigurationPredefinedMetricSpecification))
  add(formData_21627722, "TargetTrackingConfiguration.DisableScaleIn",
      newJString(TargetTrackingConfigurationDisableScaleIn))
  add(formData_21627722, "ScalingAdjustment", newJInt(ScalingAdjustment))
  add(formData_21627722, "MinAdjustmentStep", newJInt(MinAdjustmentStep))
  add(formData_21627722, "Cooldown", newJInt(Cooldown))
  add(query_21627721, "Action", newJString(Action))
  add(formData_21627722, "MetricAggregationType",
      newJString(MetricAggregationType))
  add(formData_21627722, "AdjustmentType", newJString(AdjustmentType))
  add(formData_21627722, "EstimatedInstanceWarmup",
      newJInt(EstimatedInstanceWarmup))
  add(formData_21627722, "MinAdjustmentMagnitude", newJInt(MinAdjustmentMagnitude))
  add(formData_21627722, "TargetTrackingConfiguration.TargetValue",
      newJString(TargetTrackingConfigurationTargetValue))
  add(query_21627721, "Version", newJString(Version))
  add(formData_21627722, "PolicyType", newJString(PolicyType))
  result = call_21627720.call(nil, query_21627721, nil, formData_21627722, nil)

var postPutScalingPolicy* = Call_PostPutScalingPolicy_21627691(
    name: "postPutScalingPolicy", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=PutScalingPolicy",
    validator: validate_PostPutScalingPolicy_21627692, base: "/",
    makeUrl: url_PostPutScalingPolicy_21627693,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetPutScalingPolicy_21627660 = ref object of OpenApiRestCall_21625435
proc url_GetPutScalingPolicy_21627662(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetPutScalingPolicy_21627661(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates or updates a scaling policy for an Auto Scaling group.</p> <p>For more information about using scaling policies to scale your Auto Scaling group automatically, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html">Dynamic Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TargetTrackingConfiguration.DisableScaleIn: JString
  ##                                             : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is <code>false</code>.
  ##   AdjustmentType: JString
  ##                 : <p>Specifies whether the <code>ScalingAdjustment</code> parameter is an absolute number or a percentage of the current capacity. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   TargetTrackingConfiguration.PredefinedMetricSpecification: JString
  ##                                                            : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A predefined metric. You must specify either a predefined metric or a customized metric.
  ##   MetricAggregationType: JString
  ##                        : <p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code>.</p>
  ##   MinAdjustmentStep: JInt
  ##                    : Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
  ##   Cooldown: JInt
  ##           : <p>The amount of time, in seconds, after a scaling activity completes before any further dynamic scaling activities can start. If this parameter is not specified, the default cooldown period for the group applies.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   TargetTrackingConfiguration.TargetValue: JString
  ##                                          : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## The target value for the metric.
  ##   Enabled: JBool
  ##          : Indicates whether the scaling policy is enabled or disabled. The default is enabled. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling a Scaling Policy for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   TargetTrackingConfiguration.CustomizedMetricSpecification: JString
  ##                                                            : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A customized metric. You must specify either a predefined metric or a customized metric.
  ##   Action: JString (required)
  ##   EstimatedInstanceWarmup: JInt
  ##                          : <p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. The default is to use the value specified for the default cooldown period for the group.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p>
  ##   MinAdjustmentMagnitude: JInt
  ##                         : <p>The minimum number of instances to scale. If the value of <code>AdjustmentType</code> is <code>PercentChangeInCapacity</code>, the scaling policy changes the <code>DesiredCapacity</code> of the Auto Scaling group by at least this many instances. Otherwise, the error is <code>ValidationError</code>.</p> <p>This property replaces the <code>MinAdjustmentStep</code> property. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.</p> <p>Valid only if the policy type is <code>SimpleScaling</code> or <code>StepScaling</code>.</p>
  ##   StepAdjustments: JArray
  ##                  : <p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>Conditional: If you specify <code>StepScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  ##   PolicyType: JString
  ##             : The policy type. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>. If the policy type is null, the value is treated as <code>SimpleScaling</code>.
  ##   Version: JString (required)
  ##   PolicyName: JString (required)
  ##             : The name of the policy.
  ##   ScalingAdjustment: JInt
  ##                    : <p>The amount by which a simple scaling policy scales the Auto Scaling group in response to an alarm breach. The adjustment is based on the value that you specified in the <code>AdjustmentType</code> parameter (either an absolute number or a percentage). A positive value adds to the current capacity and a negative value subtracts from the current capacity. For exact capacity, you must specify a positive value.</p> <p>Conditional: If you specify <code>SimpleScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  section = newJObject()
  var valid_21627663 = query.getOrDefault("TargetTrackingConfiguration.DisableScaleIn")
  valid_21627663 = validateParameter(valid_21627663, JString, required = false,
                                   default = nil)
  if valid_21627663 != nil:
    section.add "TargetTrackingConfiguration.DisableScaleIn", valid_21627663
  var valid_21627664 = query.getOrDefault("AdjustmentType")
  valid_21627664 = validateParameter(valid_21627664, JString, required = false,
                                   default = nil)
  if valid_21627664 != nil:
    section.add "AdjustmentType", valid_21627664
  var valid_21627665 = query.getOrDefault("TargetTrackingConfiguration.PredefinedMetricSpecification")
  valid_21627665 = validateParameter(valid_21627665, JString, required = false,
                                   default = nil)
  if valid_21627665 != nil:
    section.add "TargetTrackingConfiguration.PredefinedMetricSpecification", valid_21627665
  var valid_21627666 = query.getOrDefault("MetricAggregationType")
  valid_21627666 = validateParameter(valid_21627666, JString, required = false,
                                   default = nil)
  if valid_21627666 != nil:
    section.add "MetricAggregationType", valid_21627666
  var valid_21627667 = query.getOrDefault("MinAdjustmentStep")
  valid_21627667 = validateParameter(valid_21627667, JInt, required = false,
                                   default = nil)
  if valid_21627667 != nil:
    section.add "MinAdjustmentStep", valid_21627667
  var valid_21627668 = query.getOrDefault("Cooldown")
  valid_21627668 = validateParameter(valid_21627668, JInt, required = false,
                                   default = nil)
  if valid_21627668 != nil:
    section.add "Cooldown", valid_21627668
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627669 = query.getOrDefault("AutoScalingGroupName")
  valid_21627669 = validateParameter(valid_21627669, JString, required = true,
                                   default = nil)
  if valid_21627669 != nil:
    section.add "AutoScalingGroupName", valid_21627669
  var valid_21627670 = query.getOrDefault("TargetTrackingConfiguration.TargetValue")
  valid_21627670 = validateParameter(valid_21627670, JString, required = false,
                                   default = nil)
  if valid_21627670 != nil:
    section.add "TargetTrackingConfiguration.TargetValue", valid_21627670
  var valid_21627671 = query.getOrDefault("Enabled")
  valid_21627671 = validateParameter(valid_21627671, JBool, required = false,
                                   default = nil)
  if valid_21627671 != nil:
    section.add "Enabled", valid_21627671
  var valid_21627672 = query.getOrDefault("TargetTrackingConfiguration.CustomizedMetricSpecification")
  valid_21627672 = validateParameter(valid_21627672, JString, required = false,
                                   default = nil)
  if valid_21627672 != nil:
    section.add "TargetTrackingConfiguration.CustomizedMetricSpecification", valid_21627672
  var valid_21627673 = query.getOrDefault("Action")
  valid_21627673 = validateParameter(valid_21627673, JString, required = true,
                                   default = newJString("PutScalingPolicy"))
  if valid_21627673 != nil:
    section.add "Action", valid_21627673
  var valid_21627674 = query.getOrDefault("EstimatedInstanceWarmup")
  valid_21627674 = validateParameter(valid_21627674, JInt, required = false,
                                   default = nil)
  if valid_21627674 != nil:
    section.add "EstimatedInstanceWarmup", valid_21627674
  var valid_21627675 = query.getOrDefault("MinAdjustmentMagnitude")
  valid_21627675 = validateParameter(valid_21627675, JInt, required = false,
                                   default = nil)
  if valid_21627675 != nil:
    section.add "MinAdjustmentMagnitude", valid_21627675
  var valid_21627676 = query.getOrDefault("StepAdjustments")
  valid_21627676 = validateParameter(valid_21627676, JArray, required = false,
                                   default = nil)
  if valid_21627676 != nil:
    section.add "StepAdjustments", valid_21627676
  var valid_21627677 = query.getOrDefault("PolicyType")
  valid_21627677 = validateParameter(valid_21627677, JString, required = false,
                                   default = nil)
  if valid_21627677 != nil:
    section.add "PolicyType", valid_21627677
  var valid_21627678 = query.getOrDefault("Version")
  valid_21627678 = validateParameter(valid_21627678, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627678 != nil:
    section.add "Version", valid_21627678
  var valid_21627679 = query.getOrDefault("PolicyName")
  valid_21627679 = validateParameter(valid_21627679, JString, required = true,
                                   default = nil)
  if valid_21627679 != nil:
    section.add "PolicyName", valid_21627679
  var valid_21627680 = query.getOrDefault("ScalingAdjustment")
  valid_21627680 = validateParameter(valid_21627680, JInt, required = false,
                                   default = nil)
  if valid_21627680 != nil:
    section.add "ScalingAdjustment", valid_21627680
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627681 = header.getOrDefault("X-Amz-Date")
  valid_21627681 = validateParameter(valid_21627681, JString, required = false,
                                   default = nil)
  if valid_21627681 != nil:
    section.add "X-Amz-Date", valid_21627681
  var valid_21627682 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627682 = validateParameter(valid_21627682, JString, required = false,
                                   default = nil)
  if valid_21627682 != nil:
    section.add "X-Amz-Security-Token", valid_21627682
  var valid_21627683 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627683 = validateParameter(valid_21627683, JString, required = false,
                                   default = nil)
  if valid_21627683 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627683
  var valid_21627684 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627684 = validateParameter(valid_21627684, JString, required = false,
                                   default = nil)
  if valid_21627684 != nil:
    section.add "X-Amz-Algorithm", valid_21627684
  var valid_21627685 = header.getOrDefault("X-Amz-Signature")
  valid_21627685 = validateParameter(valid_21627685, JString, required = false,
                                   default = nil)
  if valid_21627685 != nil:
    section.add "X-Amz-Signature", valid_21627685
  var valid_21627686 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627686 = validateParameter(valid_21627686, JString, required = false,
                                   default = nil)
  if valid_21627686 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627686
  var valid_21627687 = header.getOrDefault("X-Amz-Credential")
  valid_21627687 = validateParameter(valid_21627687, JString, required = false,
                                   default = nil)
  if valid_21627687 != nil:
    section.add "X-Amz-Credential", valid_21627687
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627688: Call_GetPutScalingPolicy_21627660; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates a scaling policy for an Auto Scaling group.</p> <p>For more information about using scaling policies to scale your Auto Scaling group automatically, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html">Dynamic Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627688.validator(path, query, header, formData, body, _)
  let scheme = call_21627688.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627688.makeUrl(scheme.get, call_21627688.host, call_21627688.base,
                               call_21627688.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627688, uri, valid, _)

proc call*(call_21627689: Call_GetPutScalingPolicy_21627660;
          AutoScalingGroupName: string; PolicyName: string;
          TargetTrackingConfigurationDisableScaleIn: string = "";
          AdjustmentType: string = ""; TargetTrackingConfigurationPredefinedMetricSpecification: string = "";
          MetricAggregationType: string = ""; MinAdjustmentStep: int = 0;
          Cooldown: int = 0; TargetTrackingConfigurationTargetValue: string = "";
          Enabled: bool = false; TargetTrackingConfigurationCustomizedMetricSpecification: string = "";
          Action: string = "PutScalingPolicy"; EstimatedInstanceWarmup: int = 0;
          MinAdjustmentMagnitude: int = 0; StepAdjustments: JsonNode = nil;
          PolicyType: string = ""; Version: string = "2011-01-01";
          ScalingAdjustment: int = 0): Recallable =
  ## getPutScalingPolicy
  ## <p>Creates or updates a scaling policy for an Auto Scaling group.</p> <p>For more information about using scaling policies to scale your Auto Scaling group automatically, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html">Dynamic Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   TargetTrackingConfigurationDisableScaleIn: string
  ##                                            : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is <code>false</code>.
  ##   AdjustmentType: string
  ##                 : <p>Specifies whether the <code>ScalingAdjustment</code> parameter is an absolute number or a percentage of the current capacity. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   TargetTrackingConfigurationPredefinedMetricSpecification: string
  ##                                                           : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A predefined metric. You must specify either a predefined metric or a customized metric.
  ##   MetricAggregationType: string
  ##                        : <p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code>.</p>
  ##   MinAdjustmentStep: int
  ##                    : Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
  ##   Cooldown: int
  ##           : <p>The amount of time, in seconds, after a scaling activity completes before any further dynamic scaling activities can start. If this parameter is not specified, the default cooldown period for the group applies.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   TargetTrackingConfigurationTargetValue: string
  ##                                         : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## The target value for the metric.
  ##   Enabled: bool
  ##          : Indicates whether the scaling policy is enabled or disabled. The default is enabled. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling a Scaling Policy for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   TargetTrackingConfigurationCustomizedMetricSpecification: string
  ##                                                           : Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
  ## A customized metric. You must specify either a predefined metric or a customized metric.
  ##   Action: string (required)
  ##   EstimatedInstanceWarmup: int
  ##                          : <p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. The default is to use the value specified for the default cooldown period for the group.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p>
  ##   MinAdjustmentMagnitude: int
  ##                         : <p>The minimum number of instances to scale. If the value of <code>AdjustmentType</code> is <code>PercentChangeInCapacity</code>, the scaling policy changes the <code>DesiredCapacity</code> of the Auto Scaling group by at least this many instances. Otherwise, the error is <code>ValidationError</code>.</p> <p>This property replaces the <code>MinAdjustmentStep</code> property. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.</p> <p>Valid only if the policy type is <code>SimpleScaling</code> or <code>StepScaling</code>.</p>
  ##   StepAdjustments: JArray
  ##                  : <p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>Conditional: If you specify <code>StepScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  ##   PolicyType: string
  ##             : The policy type. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>. If the policy type is null, the value is treated as <code>SimpleScaling</code>.
  ##   Version: string (required)
  ##   PolicyName: string (required)
  ##             : The name of the policy.
  ##   ScalingAdjustment: int
  ##                    : <p>The amount by which a simple scaling policy scales the Auto Scaling group in response to an alarm breach. The adjustment is based on the value that you specified in the <code>AdjustmentType</code> parameter (either an absolute number or a percentage). A positive value adds to the current capacity and a negative value subtracts from the current capacity. For exact capacity, you must specify a positive value.</p> <p>Conditional: If you specify <code>SimpleScaling</code> for the policy type, you must specify this parameter. (Not used with any other policy type.) </p>
  var query_21627690 = newJObject()
  add(query_21627690, "TargetTrackingConfiguration.DisableScaleIn",
      newJString(TargetTrackingConfigurationDisableScaleIn))
  add(query_21627690, "AdjustmentType", newJString(AdjustmentType))
  add(query_21627690,
      "TargetTrackingConfiguration.PredefinedMetricSpecification",
      newJString(TargetTrackingConfigurationPredefinedMetricSpecification))
  add(query_21627690, "MetricAggregationType", newJString(MetricAggregationType))
  add(query_21627690, "MinAdjustmentStep", newJInt(MinAdjustmentStep))
  add(query_21627690, "Cooldown", newJInt(Cooldown))
  add(query_21627690, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627690, "TargetTrackingConfiguration.TargetValue",
      newJString(TargetTrackingConfigurationTargetValue))
  add(query_21627690, "Enabled", newJBool(Enabled))
  add(query_21627690,
      "TargetTrackingConfiguration.CustomizedMetricSpecification",
      newJString(TargetTrackingConfigurationCustomizedMetricSpecification))
  add(query_21627690, "Action", newJString(Action))
  add(query_21627690, "EstimatedInstanceWarmup", newJInt(EstimatedInstanceWarmup))
  add(query_21627690, "MinAdjustmentMagnitude", newJInt(MinAdjustmentMagnitude))
  if StepAdjustments != nil:
    query_21627690.add "StepAdjustments", StepAdjustments
  add(query_21627690, "PolicyType", newJString(PolicyType))
  add(query_21627690, "Version", newJString(Version))
  add(query_21627690, "PolicyName", newJString(PolicyName))
  add(query_21627690, "ScalingAdjustment", newJInt(ScalingAdjustment))
  result = call_21627689.call(nil, query_21627690, nil, nil, nil)

var getPutScalingPolicy* = Call_GetPutScalingPolicy_21627660(
    name: "getPutScalingPolicy", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=PutScalingPolicy",
    validator: validate_GetPutScalingPolicy_21627661, base: "/",
    makeUrl: url_GetPutScalingPolicy_21627662,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostPutScheduledUpdateGroupAction_21627747 = ref object of OpenApiRestCall_21625435
proc url_PostPutScheduledUpdateGroupAction_21627749(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostPutScheduledUpdateGroupAction_21627748(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627750 = query.getOrDefault("Action")
  valid_21627750 = validateParameter(valid_21627750, JString, required = true, default = newJString(
      "PutScheduledUpdateGroupAction"))
  if valid_21627750 != nil:
    section.add "Action", valid_21627750
  var valid_21627751 = query.getOrDefault("Version")
  valid_21627751 = validateParameter(valid_21627751, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627751 != nil:
    section.add "Version", valid_21627751
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627752 = header.getOrDefault("X-Amz-Date")
  valid_21627752 = validateParameter(valid_21627752, JString, required = false,
                                   default = nil)
  if valid_21627752 != nil:
    section.add "X-Amz-Date", valid_21627752
  var valid_21627753 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627753 = validateParameter(valid_21627753, JString, required = false,
                                   default = nil)
  if valid_21627753 != nil:
    section.add "X-Amz-Security-Token", valid_21627753
  var valid_21627754 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627754 = validateParameter(valid_21627754, JString, required = false,
                                   default = nil)
  if valid_21627754 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627754
  var valid_21627755 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627755 = validateParameter(valid_21627755, JString, required = false,
                                   default = nil)
  if valid_21627755 != nil:
    section.add "X-Amz-Algorithm", valid_21627755
  var valid_21627756 = header.getOrDefault("X-Amz-Signature")
  valid_21627756 = validateParameter(valid_21627756, JString, required = false,
                                   default = nil)
  if valid_21627756 != nil:
    section.add "X-Amz-Signature", valid_21627756
  var valid_21627757 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627757 = validateParameter(valid_21627757, JString, required = false,
                                   default = nil)
  if valid_21627757 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627757
  var valid_21627758 = header.getOrDefault("X-Amz-Credential")
  valid_21627758 = validateParameter(valid_21627758, JString, required = false,
                                   default = nil)
  if valid_21627758 != nil:
    section.add "X-Amz-Credential", valid_21627758
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Recurrence: JString
  ##             : <p>The recurring schedule for this action, in Unix cron syntax format. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information about this format, see <a href="http://crontab.org">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>
  ##   DesiredCapacity: JInt
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   Time: JString
  ##       : This parameter is no longer used.
  ##   StartTime: JString
  ##            : <p>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>"2019-06-01T00:00:00Z"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an error message.</p>
  ##   ScheduledActionName: JString (required)
  ##                      : The name of this scaling action.
  ##   MinSize: JInt
  ##          : The minimum number of instances in the Auto Scaling group.
  ##   MaxSize: JInt
  ##          : The maximum number of instances in the Auto Scaling group.
  ##   EndTime: JString
  ##          : The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does not perform the action after this time.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627759 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627759 = validateParameter(valid_21627759, JString, required = true,
                                   default = nil)
  if valid_21627759 != nil:
    section.add "AutoScalingGroupName", valid_21627759
  var valid_21627760 = formData.getOrDefault("Recurrence")
  valid_21627760 = validateParameter(valid_21627760, JString, required = false,
                                   default = nil)
  if valid_21627760 != nil:
    section.add "Recurrence", valid_21627760
  var valid_21627761 = formData.getOrDefault("DesiredCapacity")
  valid_21627761 = validateParameter(valid_21627761, JInt, required = false,
                                   default = nil)
  if valid_21627761 != nil:
    section.add "DesiredCapacity", valid_21627761
  var valid_21627762 = formData.getOrDefault("Time")
  valid_21627762 = validateParameter(valid_21627762, JString, required = false,
                                   default = nil)
  if valid_21627762 != nil:
    section.add "Time", valid_21627762
  var valid_21627763 = formData.getOrDefault("StartTime")
  valid_21627763 = validateParameter(valid_21627763, JString, required = false,
                                   default = nil)
  if valid_21627763 != nil:
    section.add "StartTime", valid_21627763
  var valid_21627764 = formData.getOrDefault("ScheduledActionName")
  valid_21627764 = validateParameter(valid_21627764, JString, required = true,
                                   default = nil)
  if valid_21627764 != nil:
    section.add "ScheduledActionName", valid_21627764
  var valid_21627765 = formData.getOrDefault("MinSize")
  valid_21627765 = validateParameter(valid_21627765, JInt, required = false,
                                   default = nil)
  if valid_21627765 != nil:
    section.add "MinSize", valid_21627765
  var valid_21627766 = formData.getOrDefault("MaxSize")
  valid_21627766 = validateParameter(valid_21627766, JInt, required = false,
                                   default = nil)
  if valid_21627766 != nil:
    section.add "MaxSize", valid_21627766
  var valid_21627767 = formData.getOrDefault("EndTime")
  valid_21627767 = validateParameter(valid_21627767, JString, required = false,
                                   default = nil)
  if valid_21627767 != nil:
    section.add "EndTime", valid_21627767
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627768: Call_PostPutScheduledUpdateGroupAction_21627747;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627768.validator(path, query, header, formData, body, _)
  let scheme = call_21627768.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627768.makeUrl(scheme.get, call_21627768.host, call_21627768.base,
                               call_21627768.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627768, uri, valid, _)

proc call*(call_21627769: Call_PostPutScheduledUpdateGroupAction_21627747;
          AutoScalingGroupName: string; ScheduledActionName: string;
          Recurrence: string = ""; DesiredCapacity: int = 0; Time: string = "";
          StartTime: string = ""; Action: string = "PutScheduledUpdateGroupAction";
          MinSize: int = 0; MaxSize: int = 0; EndTime: string = "";
          Version: string = "2011-01-01"): Recallable =
  ## postPutScheduledUpdateGroupAction
  ## <p>Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Recurrence: string
  ##             : <p>The recurring schedule for this action, in Unix cron syntax format. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information about this format, see <a href="http://crontab.org">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>
  ##   DesiredCapacity: int
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   Time: string
  ##       : This parameter is no longer used.
  ##   StartTime: string
  ##            : <p>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>"2019-06-01T00:00:00Z"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an error message.</p>
  ##   Action: string (required)
  ##   ScheduledActionName: string (required)
  ##                      : The name of this scaling action.
  ##   MinSize: int
  ##          : The minimum number of instances in the Auto Scaling group.
  ##   MaxSize: int
  ##          : The maximum number of instances in the Auto Scaling group.
  ##   EndTime: string
  ##          : The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does not perform the action after this time.
  ##   Version: string (required)
  var query_21627770 = newJObject()
  var formData_21627771 = newJObject()
  add(formData_21627771, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627771, "Recurrence", newJString(Recurrence))
  add(formData_21627771, "DesiredCapacity", newJInt(DesiredCapacity))
  add(formData_21627771, "Time", newJString(Time))
  add(formData_21627771, "StartTime", newJString(StartTime))
  add(query_21627770, "Action", newJString(Action))
  add(formData_21627771, "ScheduledActionName", newJString(ScheduledActionName))
  add(formData_21627771, "MinSize", newJInt(MinSize))
  add(formData_21627771, "MaxSize", newJInt(MaxSize))
  add(formData_21627771, "EndTime", newJString(EndTime))
  add(query_21627770, "Version", newJString(Version))
  result = call_21627769.call(nil, query_21627770, nil, formData_21627771, nil)

var postPutScheduledUpdateGroupAction* = Call_PostPutScheduledUpdateGroupAction_21627747(
    name: "postPutScheduledUpdateGroupAction", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=PutScheduledUpdateGroupAction",
    validator: validate_PostPutScheduledUpdateGroupAction_21627748, base: "/",
    makeUrl: url_PostPutScheduledUpdateGroupAction_21627749,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetPutScheduledUpdateGroupAction_21627723 = ref object of OpenApiRestCall_21625435
proc url_GetPutScheduledUpdateGroupAction_21627725(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetPutScheduledUpdateGroupAction_21627724(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   DesiredCapacity: JInt
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   ScheduledActionName: JString (required)
  ##                      : The name of this scaling action.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Time: JString
  ##       : This parameter is no longer used.
  ##   StartTime: JString
  ##            : <p>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>"2019-06-01T00:00:00Z"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an error message.</p>
  ##   Recurrence: JString
  ##             : <p>The recurring schedule for this action, in Unix cron syntax format. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information about this format, see <a href="http://crontab.org">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>
  ##   Action: JString (required)
  ##   MaxSize: JInt
  ##          : The maximum number of instances in the Auto Scaling group.
  ##   EndTime: JString
  ##          : The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does not perform the action after this time.
  ##   MinSize: JInt
  ##          : The minimum number of instances in the Auto Scaling group.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627726 = query.getOrDefault("DesiredCapacity")
  valid_21627726 = validateParameter(valid_21627726, JInt, required = false,
                                   default = nil)
  if valid_21627726 != nil:
    section.add "DesiredCapacity", valid_21627726
  assert query != nil, "query argument is necessary due to required `ScheduledActionName` field"
  var valid_21627727 = query.getOrDefault("ScheduledActionName")
  valid_21627727 = validateParameter(valid_21627727, JString, required = true,
                                   default = nil)
  if valid_21627727 != nil:
    section.add "ScheduledActionName", valid_21627727
  var valid_21627728 = query.getOrDefault("AutoScalingGroupName")
  valid_21627728 = validateParameter(valid_21627728, JString, required = true,
                                   default = nil)
  if valid_21627728 != nil:
    section.add "AutoScalingGroupName", valid_21627728
  var valid_21627729 = query.getOrDefault("Time")
  valid_21627729 = validateParameter(valid_21627729, JString, required = false,
                                   default = nil)
  if valid_21627729 != nil:
    section.add "Time", valid_21627729
  var valid_21627730 = query.getOrDefault("StartTime")
  valid_21627730 = validateParameter(valid_21627730, JString, required = false,
                                   default = nil)
  if valid_21627730 != nil:
    section.add "StartTime", valid_21627730
  var valid_21627731 = query.getOrDefault("Recurrence")
  valid_21627731 = validateParameter(valid_21627731, JString, required = false,
                                   default = nil)
  if valid_21627731 != nil:
    section.add "Recurrence", valid_21627731
  var valid_21627732 = query.getOrDefault("Action")
  valid_21627732 = validateParameter(valid_21627732, JString, required = true, default = newJString(
      "PutScheduledUpdateGroupAction"))
  if valid_21627732 != nil:
    section.add "Action", valid_21627732
  var valid_21627733 = query.getOrDefault("MaxSize")
  valid_21627733 = validateParameter(valid_21627733, JInt, required = false,
                                   default = nil)
  if valid_21627733 != nil:
    section.add "MaxSize", valid_21627733
  var valid_21627734 = query.getOrDefault("EndTime")
  valid_21627734 = validateParameter(valid_21627734, JString, required = false,
                                   default = nil)
  if valid_21627734 != nil:
    section.add "EndTime", valid_21627734
  var valid_21627735 = query.getOrDefault("MinSize")
  valid_21627735 = validateParameter(valid_21627735, JInt, required = false,
                                   default = nil)
  if valid_21627735 != nil:
    section.add "MinSize", valid_21627735
  var valid_21627736 = query.getOrDefault("Version")
  valid_21627736 = validateParameter(valid_21627736, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627736 != nil:
    section.add "Version", valid_21627736
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627737 = header.getOrDefault("X-Amz-Date")
  valid_21627737 = validateParameter(valid_21627737, JString, required = false,
                                   default = nil)
  if valid_21627737 != nil:
    section.add "X-Amz-Date", valid_21627737
  var valid_21627738 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627738 = validateParameter(valid_21627738, JString, required = false,
                                   default = nil)
  if valid_21627738 != nil:
    section.add "X-Amz-Security-Token", valid_21627738
  var valid_21627739 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627739 = validateParameter(valid_21627739, JString, required = false,
                                   default = nil)
  if valid_21627739 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627739
  var valid_21627740 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627740 = validateParameter(valid_21627740, JString, required = false,
                                   default = nil)
  if valid_21627740 != nil:
    section.add "X-Amz-Algorithm", valid_21627740
  var valid_21627741 = header.getOrDefault("X-Amz-Signature")
  valid_21627741 = validateParameter(valid_21627741, JString, required = false,
                                   default = nil)
  if valid_21627741 != nil:
    section.add "X-Amz-Signature", valid_21627741
  var valid_21627742 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627742 = validateParameter(valid_21627742, JString, required = false,
                                   default = nil)
  if valid_21627742 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627742
  var valid_21627743 = header.getOrDefault("X-Amz-Credential")
  valid_21627743 = validateParameter(valid_21627743, JString, required = false,
                                   default = nil)
  if valid_21627743 != nil:
    section.add "X-Amz-Credential", valid_21627743
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627744: Call_GetPutScheduledUpdateGroupAction_21627723;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627744.validator(path, query, header, formData, body, _)
  let scheme = call_21627744.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627744.makeUrl(scheme.get, call_21627744.host, call_21627744.base,
                               call_21627744.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627744, uri, valid, _)

proc call*(call_21627745: Call_GetPutScheduledUpdateGroupAction_21627723;
          ScheduledActionName: string; AutoScalingGroupName: string;
          DesiredCapacity: int = 0; Time: string = ""; StartTime: string = "";
          Recurrence: string = ""; Action: string = "PutScheduledUpdateGroupAction";
          MaxSize: int = 0; EndTime: string = ""; MinSize: int = 0;
          Version: string = "2011-01-01"): Recallable =
  ## getPutScheduledUpdateGroupAction
  ## <p>Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   DesiredCapacity: int
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   ScheduledActionName: string (required)
  ##                      : The name of this scaling action.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Time: string
  ##       : This parameter is no longer used.
  ##   StartTime: string
  ##            : <p>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>"2019-06-01T00:00:00Z"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an error message.</p>
  ##   Recurrence: string
  ##             : <p>The recurring schedule for this action, in Unix cron syntax format. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information about this format, see <a href="http://crontab.org">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>
  ##   Action: string (required)
  ##   MaxSize: int
  ##          : The maximum number of instances in the Auto Scaling group.
  ##   EndTime: string
  ##          : The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does not perform the action after this time.
  ##   MinSize: int
  ##          : The minimum number of instances in the Auto Scaling group.
  ##   Version: string (required)
  var query_21627746 = newJObject()
  add(query_21627746, "DesiredCapacity", newJInt(DesiredCapacity))
  add(query_21627746, "ScheduledActionName", newJString(ScheduledActionName))
  add(query_21627746, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627746, "Time", newJString(Time))
  add(query_21627746, "StartTime", newJString(StartTime))
  add(query_21627746, "Recurrence", newJString(Recurrence))
  add(query_21627746, "Action", newJString(Action))
  add(query_21627746, "MaxSize", newJInt(MaxSize))
  add(query_21627746, "EndTime", newJString(EndTime))
  add(query_21627746, "MinSize", newJInt(MinSize))
  add(query_21627746, "Version", newJString(Version))
  result = call_21627745.call(nil, query_21627746, nil, nil, nil)

var getPutScheduledUpdateGroupAction* = Call_GetPutScheduledUpdateGroupAction_21627723(
    name: "getPutScheduledUpdateGroupAction", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=PutScheduledUpdateGroupAction",
    validator: validate_GetPutScheduledUpdateGroupAction_21627724, base: "/",
    makeUrl: url_GetPutScheduledUpdateGroupAction_21627725,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostRecordLifecycleActionHeartbeat_21627791 = ref object of OpenApiRestCall_21625435
proc url_PostRecordLifecycleActionHeartbeat_21627793(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostRecordLifecycleActionHeartbeat_21627792(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using <a>PutLifecycleHook</a>.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627794 = query.getOrDefault("Action")
  valid_21627794 = validateParameter(valid_21627794, JString, required = true, default = newJString(
      "RecordLifecycleActionHeartbeat"))
  if valid_21627794 != nil:
    section.add "Action", valid_21627794
  var valid_21627795 = query.getOrDefault("Version")
  valid_21627795 = validateParameter(valid_21627795, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627795 != nil:
    section.add "Version", valid_21627795
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627796 = header.getOrDefault("X-Amz-Date")
  valid_21627796 = validateParameter(valid_21627796, JString, required = false,
                                   default = nil)
  if valid_21627796 != nil:
    section.add "X-Amz-Date", valid_21627796
  var valid_21627797 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627797 = validateParameter(valid_21627797, JString, required = false,
                                   default = nil)
  if valid_21627797 != nil:
    section.add "X-Amz-Security-Token", valid_21627797
  var valid_21627798 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627798 = validateParameter(valid_21627798, JString, required = false,
                                   default = nil)
  if valid_21627798 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627798
  var valid_21627799 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627799 = validateParameter(valid_21627799, JString, required = false,
                                   default = nil)
  if valid_21627799 != nil:
    section.add "X-Amz-Algorithm", valid_21627799
  var valid_21627800 = header.getOrDefault("X-Amz-Signature")
  valid_21627800 = validateParameter(valid_21627800, JString, required = false,
                                   default = nil)
  if valid_21627800 != nil:
    section.add "X-Amz-Signature", valid_21627800
  var valid_21627801 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627801 = validateParameter(valid_21627801, JString, required = false,
                                   default = nil)
  if valid_21627801 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627801
  var valid_21627802 = header.getOrDefault("X-Amz-Credential")
  valid_21627802 = validateParameter(valid_21627802, JString, required = false,
                                   default = nil)
  if valid_21627802 != nil:
    section.add "X-Amz-Credential", valid_21627802
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceId: JString
  ##             : The ID of the instance.
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  ##   LifecycleActionToken: JString
  ##                       : A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627803 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627803 = validateParameter(valid_21627803, JString, required = true,
                                   default = nil)
  if valid_21627803 != nil:
    section.add "AutoScalingGroupName", valid_21627803
  var valid_21627804 = formData.getOrDefault("InstanceId")
  valid_21627804 = validateParameter(valid_21627804, JString, required = false,
                                   default = nil)
  if valid_21627804 != nil:
    section.add "InstanceId", valid_21627804
  var valid_21627805 = formData.getOrDefault("LifecycleHookName")
  valid_21627805 = validateParameter(valid_21627805, JString, required = true,
                                   default = nil)
  if valid_21627805 != nil:
    section.add "LifecycleHookName", valid_21627805
  var valid_21627806 = formData.getOrDefault("LifecycleActionToken")
  valid_21627806 = validateParameter(valid_21627806, JString, required = false,
                                   default = nil)
  if valid_21627806 != nil:
    section.add "LifecycleActionToken", valid_21627806
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627807: Call_PostRecordLifecycleActionHeartbeat_21627791;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using <a>PutLifecycleHook</a>.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627807.validator(path, query, header, formData, body, _)
  let scheme = call_21627807.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627807.makeUrl(scheme.get, call_21627807.host, call_21627807.base,
                               call_21627807.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627807, uri, valid, _)

proc call*(call_21627808: Call_PostRecordLifecycleActionHeartbeat_21627791;
          AutoScalingGroupName: string; LifecycleHookName: string;
          Action: string = "RecordLifecycleActionHeartbeat";
          InstanceId: string = ""; Version: string = "2011-01-01";
          LifecycleActionToken: string = ""): Recallable =
  ## postRecordLifecycleActionHeartbeat
  ## <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using <a>PutLifecycleHook</a>.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   InstanceId: string
  ##             : The ID of the instance.
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   Version: string (required)
  ##   LifecycleActionToken: string
  ##                       : A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.
  var query_21627809 = newJObject()
  var formData_21627810 = newJObject()
  add(formData_21627810, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627809, "Action", newJString(Action))
  add(formData_21627810, "InstanceId", newJString(InstanceId))
  add(formData_21627810, "LifecycleHookName", newJString(LifecycleHookName))
  add(query_21627809, "Version", newJString(Version))
  add(formData_21627810, "LifecycleActionToken", newJString(LifecycleActionToken))
  result = call_21627808.call(nil, query_21627809, nil, formData_21627810, nil)

var postRecordLifecycleActionHeartbeat* = Call_PostRecordLifecycleActionHeartbeat_21627791(
    name: "postRecordLifecycleActionHeartbeat", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=RecordLifecycleActionHeartbeat",
    validator: validate_PostRecordLifecycleActionHeartbeat_21627792, base: "/",
    makeUrl: url_PostRecordLifecycleActionHeartbeat_21627793,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetRecordLifecycleActionHeartbeat_21627772 = ref object of OpenApiRestCall_21625435
proc url_GetRecordLifecycleActionHeartbeat_21627774(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetRecordLifecycleActionHeartbeat_21627773(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using <a>PutLifecycleHook</a>.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   LifecycleHookName: JString (required)
  ##                    : The name of the lifecycle hook.
  ##   InstanceId: JString
  ##             : The ID of the instance.
  ##   Version: JString (required)
  ##   LifecycleActionToken: JString
  ##                       : A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627775 = query.getOrDefault("AutoScalingGroupName")
  valid_21627775 = validateParameter(valid_21627775, JString, required = true,
                                   default = nil)
  if valid_21627775 != nil:
    section.add "AutoScalingGroupName", valid_21627775
  var valid_21627776 = query.getOrDefault("Action")
  valid_21627776 = validateParameter(valid_21627776, JString, required = true, default = newJString(
      "RecordLifecycleActionHeartbeat"))
  if valid_21627776 != nil:
    section.add "Action", valid_21627776
  var valid_21627777 = query.getOrDefault("LifecycleHookName")
  valid_21627777 = validateParameter(valid_21627777, JString, required = true,
                                   default = nil)
  if valid_21627777 != nil:
    section.add "LifecycleHookName", valid_21627777
  var valid_21627778 = query.getOrDefault("InstanceId")
  valid_21627778 = validateParameter(valid_21627778, JString, required = false,
                                   default = nil)
  if valid_21627778 != nil:
    section.add "InstanceId", valid_21627778
  var valid_21627779 = query.getOrDefault("Version")
  valid_21627779 = validateParameter(valid_21627779, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627779 != nil:
    section.add "Version", valid_21627779
  var valid_21627780 = query.getOrDefault("LifecycleActionToken")
  valid_21627780 = validateParameter(valid_21627780, JString, required = false,
                                   default = nil)
  if valid_21627780 != nil:
    section.add "LifecycleActionToken", valid_21627780
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627781 = header.getOrDefault("X-Amz-Date")
  valid_21627781 = validateParameter(valid_21627781, JString, required = false,
                                   default = nil)
  if valid_21627781 != nil:
    section.add "X-Amz-Date", valid_21627781
  var valid_21627782 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627782 = validateParameter(valid_21627782, JString, required = false,
                                   default = nil)
  if valid_21627782 != nil:
    section.add "X-Amz-Security-Token", valid_21627782
  var valid_21627783 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627783 = validateParameter(valid_21627783, JString, required = false,
                                   default = nil)
  if valid_21627783 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627783
  var valid_21627784 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627784 = validateParameter(valid_21627784, JString, required = false,
                                   default = nil)
  if valid_21627784 != nil:
    section.add "X-Amz-Algorithm", valid_21627784
  var valid_21627785 = header.getOrDefault("X-Amz-Signature")
  valid_21627785 = validateParameter(valid_21627785, JString, required = false,
                                   default = nil)
  if valid_21627785 != nil:
    section.add "X-Amz-Signature", valid_21627785
  var valid_21627786 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627786 = validateParameter(valid_21627786, JString, required = false,
                                   default = nil)
  if valid_21627786 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627786
  var valid_21627787 = header.getOrDefault("X-Amz-Credential")
  valid_21627787 = validateParameter(valid_21627787, JString, required = false,
                                   default = nil)
  if valid_21627787 != nil:
    section.add "X-Amz-Credential", valid_21627787
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627788: Call_GetRecordLifecycleActionHeartbeat_21627772;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using <a>PutLifecycleHook</a>.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627788.validator(path, query, header, formData, body, _)
  let scheme = call_21627788.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627788.makeUrl(scheme.get, call_21627788.host, call_21627788.base,
                               call_21627788.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627788, uri, valid, _)

proc call*(call_21627789: Call_GetRecordLifecycleActionHeartbeat_21627772;
          AutoScalingGroupName: string; LifecycleHookName: string;
          Action: string = "RecordLifecycleActionHeartbeat";
          InstanceId: string = ""; Version: string = "2011-01-01";
          LifecycleActionToken: string = ""): Recallable =
  ## getRecordLifecycleActionHeartbeat
  ## <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using <a>PutLifecycleHook</a>.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   LifecycleHookName: string (required)
  ##                    : The name of the lifecycle hook.
  ##   InstanceId: string
  ##             : The ID of the instance.
  ##   Version: string (required)
  ##   LifecycleActionToken: string
  ##                       : A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.
  var query_21627790 = newJObject()
  add(query_21627790, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627790, "Action", newJString(Action))
  add(query_21627790, "LifecycleHookName", newJString(LifecycleHookName))
  add(query_21627790, "InstanceId", newJString(InstanceId))
  add(query_21627790, "Version", newJString(Version))
  add(query_21627790, "LifecycleActionToken", newJString(LifecycleActionToken))
  result = call_21627789.call(nil, query_21627790, nil, nil, nil)

var getRecordLifecycleActionHeartbeat* = Call_GetRecordLifecycleActionHeartbeat_21627772(
    name: "getRecordLifecycleActionHeartbeat", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=RecordLifecycleActionHeartbeat",
    validator: validate_GetRecordLifecycleActionHeartbeat_21627773, base: "/",
    makeUrl: url_GetRecordLifecycleActionHeartbeat_21627774,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostResumeProcesses_21627828 = ref object of OpenApiRestCall_21625435
proc url_PostResumeProcesses_21627830(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostResumeProcesses_21627829(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Resumes the specified suspended automatic scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627831 = query.getOrDefault("Action")
  valid_21627831 = validateParameter(valid_21627831, JString, required = true,
                                   default = newJString("ResumeProcesses"))
  if valid_21627831 != nil:
    section.add "Action", valid_21627831
  var valid_21627832 = query.getOrDefault("Version")
  valid_21627832 = validateParameter(valid_21627832, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627832 != nil:
    section.add "Version", valid_21627832
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627833 = header.getOrDefault("X-Amz-Date")
  valid_21627833 = validateParameter(valid_21627833, JString, required = false,
                                   default = nil)
  if valid_21627833 != nil:
    section.add "X-Amz-Date", valid_21627833
  var valid_21627834 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627834 = validateParameter(valid_21627834, JString, required = false,
                                   default = nil)
  if valid_21627834 != nil:
    section.add "X-Amz-Security-Token", valid_21627834
  var valid_21627835 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627835 = validateParameter(valid_21627835, JString, required = false,
                                   default = nil)
  if valid_21627835 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627835
  var valid_21627836 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627836 = validateParameter(valid_21627836, JString, required = false,
                                   default = nil)
  if valid_21627836 != nil:
    section.add "X-Amz-Algorithm", valid_21627836
  var valid_21627837 = header.getOrDefault("X-Amz-Signature")
  valid_21627837 = validateParameter(valid_21627837, JString, required = false,
                                   default = nil)
  if valid_21627837 != nil:
    section.add "X-Amz-Signature", valid_21627837
  var valid_21627838 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627838 = validateParameter(valid_21627838, JString, required = false,
                                   default = nil)
  if valid_21627838 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627838
  var valid_21627839 = header.getOrDefault("X-Amz-Credential")
  valid_21627839 = validateParameter(valid_21627839, JString, required = false,
                                   default = nil)
  if valid_21627839 != nil:
    section.add "X-Amz-Credential", valid_21627839
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627840 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627840 = validateParameter(valid_21627840, JString, required = true,
                                   default = nil)
  if valid_21627840 != nil:
    section.add "AutoScalingGroupName", valid_21627840
  var valid_21627841 = formData.getOrDefault("ScalingProcesses")
  valid_21627841 = validateParameter(valid_21627841, JArray, required = false,
                                   default = nil)
  if valid_21627841 != nil:
    section.add "ScalingProcesses", valid_21627841
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627842: Call_PostResumeProcesses_21627828; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Resumes the specified suspended automatic scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627842.validator(path, query, header, formData, body, _)
  let scheme = call_21627842.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627842.makeUrl(scheme.get, call_21627842.host, call_21627842.base,
                               call_21627842.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627842, uri, valid, _)

proc call*(call_21627843: Call_PostResumeProcesses_21627828;
          AutoScalingGroupName: string; ScalingProcesses: JsonNode = nil;
          Action: string = "ResumeProcesses"; Version: string = "2011-01-01"): Recallable =
  ## postResumeProcesses
  ## <p>Resumes the specified suspended automatic scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627844 = newJObject()
  var formData_21627845 = newJObject()
  add(formData_21627845, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if ScalingProcesses != nil:
    formData_21627845.add "ScalingProcesses", ScalingProcesses
  add(query_21627844, "Action", newJString(Action))
  add(query_21627844, "Version", newJString(Version))
  result = call_21627843.call(nil, query_21627844, nil, formData_21627845, nil)

var postResumeProcesses* = Call_PostResumeProcesses_21627828(
    name: "postResumeProcesses", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=ResumeProcesses",
    validator: validate_PostResumeProcesses_21627829, base: "/",
    makeUrl: url_PostResumeProcesses_21627830,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetResumeProcesses_21627811 = ref object of OpenApiRestCall_21625435
proc url_GetResumeProcesses_21627813(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetResumeProcesses_21627812(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Resumes the specified suspended automatic scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627814 = query.getOrDefault("ScalingProcesses")
  valid_21627814 = validateParameter(valid_21627814, JArray, required = false,
                                   default = nil)
  if valid_21627814 != nil:
    section.add "ScalingProcesses", valid_21627814
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627815 = query.getOrDefault("AutoScalingGroupName")
  valid_21627815 = validateParameter(valid_21627815, JString, required = true,
                                   default = nil)
  if valid_21627815 != nil:
    section.add "AutoScalingGroupName", valid_21627815
  var valid_21627816 = query.getOrDefault("Action")
  valid_21627816 = validateParameter(valid_21627816, JString, required = true,
                                   default = newJString("ResumeProcesses"))
  if valid_21627816 != nil:
    section.add "Action", valid_21627816
  var valid_21627817 = query.getOrDefault("Version")
  valid_21627817 = validateParameter(valid_21627817, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627817 != nil:
    section.add "Version", valid_21627817
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627818 = header.getOrDefault("X-Amz-Date")
  valid_21627818 = validateParameter(valid_21627818, JString, required = false,
                                   default = nil)
  if valid_21627818 != nil:
    section.add "X-Amz-Date", valid_21627818
  var valid_21627819 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627819 = validateParameter(valid_21627819, JString, required = false,
                                   default = nil)
  if valid_21627819 != nil:
    section.add "X-Amz-Security-Token", valid_21627819
  var valid_21627820 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627820 = validateParameter(valid_21627820, JString, required = false,
                                   default = nil)
  if valid_21627820 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627820
  var valid_21627821 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627821 = validateParameter(valid_21627821, JString, required = false,
                                   default = nil)
  if valid_21627821 != nil:
    section.add "X-Amz-Algorithm", valid_21627821
  var valid_21627822 = header.getOrDefault("X-Amz-Signature")
  valid_21627822 = validateParameter(valid_21627822, JString, required = false,
                                   default = nil)
  if valid_21627822 != nil:
    section.add "X-Amz-Signature", valid_21627822
  var valid_21627823 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627823 = validateParameter(valid_21627823, JString, required = false,
                                   default = nil)
  if valid_21627823 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627823
  var valid_21627824 = header.getOrDefault("X-Amz-Credential")
  valid_21627824 = validateParameter(valid_21627824, JString, required = false,
                                   default = nil)
  if valid_21627824 != nil:
    section.add "X-Amz-Credential", valid_21627824
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627825: Call_GetResumeProcesses_21627811; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Resumes the specified suspended automatic scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627825.validator(path, query, header, formData, body, _)
  let scheme = call_21627825.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627825.makeUrl(scheme.get, call_21627825.host, call_21627825.base,
                               call_21627825.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627825, uri, valid, _)

proc call*(call_21627826: Call_GetResumeProcesses_21627811;
          AutoScalingGroupName: string; ScalingProcesses: JsonNode = nil;
          Action: string = "ResumeProcesses"; Version: string = "2011-01-01"): Recallable =
  ## getResumeProcesses
  ## <p>Resumes the specified suspended automatic scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627827 = newJObject()
  if ScalingProcesses != nil:
    query_21627827.add "ScalingProcesses", ScalingProcesses
  add(query_21627827, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627827, "Action", newJString(Action))
  add(query_21627827, "Version", newJString(Version))
  result = call_21627826.call(nil, query_21627827, nil, nil, nil)

var getResumeProcesses* = Call_GetResumeProcesses_21627811(
    name: "getResumeProcesses", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=ResumeProcesses",
    validator: validate_GetResumeProcesses_21627812, base: "/",
    makeUrl: url_GetResumeProcesses_21627813, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetDesiredCapacity_21627864 = ref object of OpenApiRestCall_21625435
proc url_PostSetDesiredCapacity_21627866(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetDesiredCapacity_21627865(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Sets the size of the specified Auto Scaling group.</p> <p>For more information about desired capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html">What Is Amazon EC2 Auto Scaling?</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627867 = query.getOrDefault("Action")
  valid_21627867 = validateParameter(valid_21627867, JString, required = true,
                                   default = newJString("SetDesiredCapacity"))
  if valid_21627867 != nil:
    section.add "Action", valid_21627867
  var valid_21627868 = query.getOrDefault("Version")
  valid_21627868 = validateParameter(valid_21627868, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627868 != nil:
    section.add "Version", valid_21627868
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627869 = header.getOrDefault("X-Amz-Date")
  valid_21627869 = validateParameter(valid_21627869, JString, required = false,
                                   default = nil)
  if valid_21627869 != nil:
    section.add "X-Amz-Date", valid_21627869
  var valid_21627870 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627870 = validateParameter(valid_21627870, JString, required = false,
                                   default = nil)
  if valid_21627870 != nil:
    section.add "X-Amz-Security-Token", valid_21627870
  var valid_21627871 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627871 = validateParameter(valid_21627871, JString, required = false,
                                   default = nil)
  if valid_21627871 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627871
  var valid_21627872 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627872 = validateParameter(valid_21627872, JString, required = false,
                                   default = nil)
  if valid_21627872 != nil:
    section.add "X-Amz-Algorithm", valid_21627872
  var valid_21627873 = header.getOrDefault("X-Amz-Signature")
  valid_21627873 = validateParameter(valid_21627873, JString, required = false,
                                   default = nil)
  if valid_21627873 != nil:
    section.add "X-Amz-Signature", valid_21627873
  var valid_21627874 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627874 = validateParameter(valid_21627874, JString, required = false,
                                   default = nil)
  if valid_21627874 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627874
  var valid_21627875 = header.getOrDefault("X-Amz-Credential")
  valid_21627875 = validateParameter(valid_21627875, JString, required = false,
                                   default = nil)
  if valid_21627875 != nil:
    section.add "X-Amz-Credential", valid_21627875
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   DesiredCapacity: JInt (required)
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   HonorCooldown: JBool
  ##                : Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627876 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627876 = validateParameter(valid_21627876, JString, required = true,
                                   default = nil)
  if valid_21627876 != nil:
    section.add "AutoScalingGroupName", valid_21627876
  var valid_21627877 = formData.getOrDefault("DesiredCapacity")
  valid_21627877 = validateParameter(valid_21627877, JInt, required = true,
                                   default = nil)
  if valid_21627877 != nil:
    section.add "DesiredCapacity", valid_21627877
  var valid_21627878 = formData.getOrDefault("HonorCooldown")
  valid_21627878 = validateParameter(valid_21627878, JBool, required = false,
                                   default = nil)
  if valid_21627878 != nil:
    section.add "HonorCooldown", valid_21627878
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627879: Call_PostSetDesiredCapacity_21627864;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Sets the size of the specified Auto Scaling group.</p> <p>For more information about desired capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html">What Is Amazon EC2 Auto Scaling?</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627879.validator(path, query, header, formData, body, _)
  let scheme = call_21627879.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627879.makeUrl(scheme.get, call_21627879.host, call_21627879.base,
                               call_21627879.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627879, uri, valid, _)

proc call*(call_21627880: Call_PostSetDesiredCapacity_21627864;
          AutoScalingGroupName: string; DesiredCapacity: int;
          HonorCooldown: bool = false; Action: string = "SetDesiredCapacity";
          Version: string = "2011-01-01"): Recallable =
  ## postSetDesiredCapacity
  ## <p>Sets the size of the specified Auto Scaling group.</p> <p>For more information about desired capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html">What Is Amazon EC2 Auto Scaling?</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   DesiredCapacity: int (required)
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   HonorCooldown: bool
  ##                : Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627881 = newJObject()
  var formData_21627882 = newJObject()
  add(formData_21627882, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21627882, "DesiredCapacity", newJInt(DesiredCapacity))
  add(formData_21627882, "HonorCooldown", newJBool(HonorCooldown))
  add(query_21627881, "Action", newJString(Action))
  add(query_21627881, "Version", newJString(Version))
  result = call_21627880.call(nil, query_21627881, nil, formData_21627882, nil)

var postSetDesiredCapacity* = Call_PostSetDesiredCapacity_21627864(
    name: "postSetDesiredCapacity", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=SetDesiredCapacity",
    validator: validate_PostSetDesiredCapacity_21627865, base: "/",
    makeUrl: url_PostSetDesiredCapacity_21627866,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetDesiredCapacity_21627846 = ref object of OpenApiRestCall_21625435
proc url_GetSetDesiredCapacity_21627848(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetDesiredCapacity_21627847(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Sets the size of the specified Auto Scaling group.</p> <p>For more information about desired capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html">What Is Amazon EC2 Auto Scaling?</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   DesiredCapacity: JInt (required)
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   HonorCooldown: JBool
  ##                : Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `DesiredCapacity` field"
  var valid_21627849 = query.getOrDefault("DesiredCapacity")
  valid_21627849 = validateParameter(valid_21627849, JInt, required = true,
                                   default = nil)
  if valid_21627849 != nil:
    section.add "DesiredCapacity", valid_21627849
  var valid_21627850 = query.getOrDefault("AutoScalingGroupName")
  valid_21627850 = validateParameter(valid_21627850, JString, required = true,
                                   default = nil)
  if valid_21627850 != nil:
    section.add "AutoScalingGroupName", valid_21627850
  var valid_21627851 = query.getOrDefault("Action")
  valid_21627851 = validateParameter(valid_21627851, JString, required = true,
                                   default = newJString("SetDesiredCapacity"))
  if valid_21627851 != nil:
    section.add "Action", valid_21627851
  var valid_21627852 = query.getOrDefault("HonorCooldown")
  valid_21627852 = validateParameter(valid_21627852, JBool, required = false,
                                   default = nil)
  if valid_21627852 != nil:
    section.add "HonorCooldown", valid_21627852
  var valid_21627853 = query.getOrDefault("Version")
  valid_21627853 = validateParameter(valid_21627853, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627853 != nil:
    section.add "Version", valid_21627853
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627854 = header.getOrDefault("X-Amz-Date")
  valid_21627854 = validateParameter(valid_21627854, JString, required = false,
                                   default = nil)
  if valid_21627854 != nil:
    section.add "X-Amz-Date", valid_21627854
  var valid_21627855 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627855 = validateParameter(valid_21627855, JString, required = false,
                                   default = nil)
  if valid_21627855 != nil:
    section.add "X-Amz-Security-Token", valid_21627855
  var valid_21627856 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627856 = validateParameter(valid_21627856, JString, required = false,
                                   default = nil)
  if valid_21627856 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627856
  var valid_21627857 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627857 = validateParameter(valid_21627857, JString, required = false,
                                   default = nil)
  if valid_21627857 != nil:
    section.add "X-Amz-Algorithm", valid_21627857
  var valid_21627858 = header.getOrDefault("X-Amz-Signature")
  valid_21627858 = validateParameter(valid_21627858, JString, required = false,
                                   default = nil)
  if valid_21627858 != nil:
    section.add "X-Amz-Signature", valid_21627858
  var valid_21627859 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627859 = validateParameter(valid_21627859, JString, required = false,
                                   default = nil)
  if valid_21627859 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627859
  var valid_21627860 = header.getOrDefault("X-Amz-Credential")
  valid_21627860 = validateParameter(valid_21627860, JString, required = false,
                                   default = nil)
  if valid_21627860 != nil:
    section.add "X-Amz-Credential", valid_21627860
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627861: Call_GetSetDesiredCapacity_21627846;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Sets the size of the specified Auto Scaling group.</p> <p>For more information about desired capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html">What Is Amazon EC2 Auto Scaling?</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627861.validator(path, query, header, formData, body, _)
  let scheme = call_21627861.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627861.makeUrl(scheme.get, call_21627861.host, call_21627861.base,
                               call_21627861.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627861, uri, valid, _)

proc call*(call_21627862: Call_GetSetDesiredCapacity_21627846;
          DesiredCapacity: int; AutoScalingGroupName: string;
          Action: string = "SetDesiredCapacity"; HonorCooldown: bool = false;
          Version: string = "2011-01-01"): Recallable =
  ## getSetDesiredCapacity
  ## <p>Sets the size of the specified Auto Scaling group.</p> <p>For more information about desired capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html">What Is Amazon EC2 Auto Scaling?</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   DesiredCapacity: int (required)
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   HonorCooldown: bool
  ##                : Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities.
  ##   Version: string (required)
  var query_21627863 = newJObject()
  add(query_21627863, "DesiredCapacity", newJInt(DesiredCapacity))
  add(query_21627863, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627863, "Action", newJString(Action))
  add(query_21627863, "HonorCooldown", newJBool(HonorCooldown))
  add(query_21627863, "Version", newJString(Version))
  result = call_21627862.call(nil, query_21627863, nil, nil, nil)

var getSetDesiredCapacity* = Call_GetSetDesiredCapacity_21627846(
    name: "getSetDesiredCapacity", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=SetDesiredCapacity",
    validator: validate_GetSetDesiredCapacity_21627847, base: "/",
    makeUrl: url_GetSetDesiredCapacity_21627848,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetInstanceHealth_21627901 = ref object of OpenApiRestCall_21625435
proc url_PostSetInstanceHealth_21627903(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetInstanceHealth_21627902(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627904 = query.getOrDefault("Action")
  valid_21627904 = validateParameter(valid_21627904, JString, required = true,
                                   default = newJString("SetInstanceHealth"))
  if valid_21627904 != nil:
    section.add "Action", valid_21627904
  var valid_21627905 = query.getOrDefault("Version")
  valid_21627905 = validateParameter(valid_21627905, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627905 != nil:
    section.add "Version", valid_21627905
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627906 = header.getOrDefault("X-Amz-Date")
  valid_21627906 = validateParameter(valid_21627906, JString, required = false,
                                   default = nil)
  if valid_21627906 != nil:
    section.add "X-Amz-Date", valid_21627906
  var valid_21627907 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627907 = validateParameter(valid_21627907, JString, required = false,
                                   default = nil)
  if valid_21627907 != nil:
    section.add "X-Amz-Security-Token", valid_21627907
  var valid_21627908 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627908 = validateParameter(valid_21627908, JString, required = false,
                                   default = nil)
  if valid_21627908 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627908
  var valid_21627909 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627909 = validateParameter(valid_21627909, JString, required = false,
                                   default = nil)
  if valid_21627909 != nil:
    section.add "X-Amz-Algorithm", valid_21627909
  var valid_21627910 = header.getOrDefault("X-Amz-Signature")
  valid_21627910 = validateParameter(valid_21627910, JString, required = false,
                                   default = nil)
  if valid_21627910 != nil:
    section.add "X-Amz-Signature", valid_21627910
  var valid_21627911 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627911 = validateParameter(valid_21627911, JString, required = false,
                                   default = nil)
  if valid_21627911 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627911
  var valid_21627912 = header.getOrDefault("X-Amz-Credential")
  valid_21627912 = validateParameter(valid_21627912, JString, required = false,
                                   default = nil)
  if valid_21627912 != nil:
    section.add "X-Amz-Credential", valid_21627912
  result.add "header", section
  ## parameters in `formData` object:
  ##   ShouldRespectGracePeriod: JBool
  ##                           : <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p> <p>For more information about the health check grace period, see <a>CreateAutoScalingGroup</a>.</p>
  ##   HealthStatus: JString (required)
  ##               : The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.
  ##   InstanceId: JString (required)
  ##             : The ID of the instance.
  section = newJObject()
  var valid_21627913 = formData.getOrDefault("ShouldRespectGracePeriod")
  valid_21627913 = validateParameter(valid_21627913, JBool, required = false,
                                   default = nil)
  if valid_21627913 != nil:
    section.add "ShouldRespectGracePeriod", valid_21627913
  assert formData != nil,
        "formData argument is necessary due to required `HealthStatus` field"
  var valid_21627914 = formData.getOrDefault("HealthStatus")
  valid_21627914 = validateParameter(valid_21627914, JString, required = true,
                                   default = nil)
  if valid_21627914 != nil:
    section.add "HealthStatus", valid_21627914
  var valid_21627915 = formData.getOrDefault("InstanceId")
  valid_21627915 = validateParameter(valid_21627915, JString, required = true,
                                   default = nil)
  if valid_21627915 != nil:
    section.add "InstanceId", valid_21627915
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627916: Call_PostSetInstanceHealth_21627901;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627916.validator(path, query, header, formData, body, _)
  let scheme = call_21627916.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627916.makeUrl(scheme.get, call_21627916.host, call_21627916.base,
                               call_21627916.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627916, uri, valid, _)

proc call*(call_21627917: Call_PostSetInstanceHealth_21627901;
          HealthStatus: string; InstanceId: string;
          ShouldRespectGracePeriod: bool = false;
          Action: string = "SetInstanceHealth"; Version: string = "2011-01-01"): Recallable =
  ## postSetInstanceHealth
  ## <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   ShouldRespectGracePeriod: bool
  ##                           : <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p> <p>For more information about the health check grace period, see <a>CreateAutoScalingGroup</a>.</p>
  ##   Action: string (required)
  ##   HealthStatus: string (required)
  ##               : The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.
  ##   InstanceId: string (required)
  ##             : The ID of the instance.
  ##   Version: string (required)
  var query_21627918 = newJObject()
  var formData_21627919 = newJObject()
  add(formData_21627919, "ShouldRespectGracePeriod",
      newJBool(ShouldRespectGracePeriod))
  add(query_21627918, "Action", newJString(Action))
  add(formData_21627919, "HealthStatus", newJString(HealthStatus))
  add(formData_21627919, "InstanceId", newJString(InstanceId))
  add(query_21627918, "Version", newJString(Version))
  result = call_21627917.call(nil, query_21627918, nil, formData_21627919, nil)

var postSetInstanceHealth* = Call_PostSetInstanceHealth_21627901(
    name: "postSetInstanceHealth", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=SetInstanceHealth",
    validator: validate_PostSetInstanceHealth_21627902, base: "/",
    makeUrl: url_PostSetInstanceHealth_21627903,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetInstanceHealth_21627883 = ref object of OpenApiRestCall_21625435
proc url_GetSetInstanceHealth_21627885(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetInstanceHealth_21627884(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   HealthStatus: JString (required)
  ##               : The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.
  ##   ShouldRespectGracePeriod: JBool
  ##                           : <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p> <p>For more information about the health check grace period, see <a>CreateAutoScalingGroup</a>.</p>
  ##   Action: JString (required)
  ##   InstanceId: JString (required)
  ##             : The ID of the instance.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `HealthStatus` field"
  var valid_21627886 = query.getOrDefault("HealthStatus")
  valid_21627886 = validateParameter(valid_21627886, JString, required = true,
                                   default = nil)
  if valid_21627886 != nil:
    section.add "HealthStatus", valid_21627886
  var valid_21627887 = query.getOrDefault("ShouldRespectGracePeriod")
  valid_21627887 = validateParameter(valid_21627887, JBool, required = false,
                                   default = nil)
  if valid_21627887 != nil:
    section.add "ShouldRespectGracePeriod", valid_21627887
  var valid_21627888 = query.getOrDefault("Action")
  valid_21627888 = validateParameter(valid_21627888, JString, required = true,
                                   default = newJString("SetInstanceHealth"))
  if valid_21627888 != nil:
    section.add "Action", valid_21627888
  var valid_21627889 = query.getOrDefault("InstanceId")
  valid_21627889 = validateParameter(valid_21627889, JString, required = true,
                                   default = nil)
  if valid_21627889 != nil:
    section.add "InstanceId", valid_21627889
  var valid_21627890 = query.getOrDefault("Version")
  valid_21627890 = validateParameter(valid_21627890, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627890 != nil:
    section.add "Version", valid_21627890
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627891 = header.getOrDefault("X-Amz-Date")
  valid_21627891 = validateParameter(valid_21627891, JString, required = false,
                                   default = nil)
  if valid_21627891 != nil:
    section.add "X-Amz-Date", valid_21627891
  var valid_21627892 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627892 = validateParameter(valid_21627892, JString, required = false,
                                   default = nil)
  if valid_21627892 != nil:
    section.add "X-Amz-Security-Token", valid_21627892
  var valid_21627893 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627893 = validateParameter(valid_21627893, JString, required = false,
                                   default = nil)
  if valid_21627893 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627893
  var valid_21627894 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627894 = validateParameter(valid_21627894, JString, required = false,
                                   default = nil)
  if valid_21627894 != nil:
    section.add "X-Amz-Algorithm", valid_21627894
  var valid_21627895 = header.getOrDefault("X-Amz-Signature")
  valid_21627895 = validateParameter(valid_21627895, JString, required = false,
                                   default = nil)
  if valid_21627895 != nil:
    section.add "X-Amz-Signature", valid_21627895
  var valid_21627896 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627896 = validateParameter(valid_21627896, JString, required = false,
                                   default = nil)
  if valid_21627896 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627896
  var valid_21627897 = header.getOrDefault("X-Amz-Credential")
  valid_21627897 = validateParameter(valid_21627897, JString, required = false,
                                   default = nil)
  if valid_21627897 != nil:
    section.add "X-Amz-Credential", valid_21627897
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627898: Call_GetSetInstanceHealth_21627883; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627898.validator(path, query, header, formData, body, _)
  let scheme = call_21627898.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627898.makeUrl(scheme.get, call_21627898.host, call_21627898.base,
                               call_21627898.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627898, uri, valid, _)

proc call*(call_21627899: Call_GetSetInstanceHealth_21627883; HealthStatus: string;
          InstanceId: string; ShouldRespectGracePeriod: bool = false;
          Action: string = "SetInstanceHealth"; Version: string = "2011-01-01"): Recallable =
  ## getSetInstanceHealth
  ## <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   HealthStatus: string (required)
  ##               : The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.
  ##   ShouldRespectGracePeriod: bool
  ##                           : <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p> <p>For more information about the health check grace period, see <a>CreateAutoScalingGroup</a>.</p>
  ##   Action: string (required)
  ##   InstanceId: string (required)
  ##             : The ID of the instance.
  ##   Version: string (required)
  var query_21627900 = newJObject()
  add(query_21627900, "HealthStatus", newJString(HealthStatus))
  add(query_21627900, "ShouldRespectGracePeriod",
      newJBool(ShouldRespectGracePeriod))
  add(query_21627900, "Action", newJString(Action))
  add(query_21627900, "InstanceId", newJString(InstanceId))
  add(query_21627900, "Version", newJString(Version))
  result = call_21627899.call(nil, query_21627900, nil, nil, nil)

var getSetInstanceHealth* = Call_GetSetInstanceHealth_21627883(
    name: "getSetInstanceHealth", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=SetInstanceHealth",
    validator: validate_GetSetInstanceHealth_21627884, base: "/",
    makeUrl: url_GetSetInstanceHealth_21627885,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetInstanceProtection_21627938 = ref object of OpenApiRestCall_21625435
proc url_PostSetInstanceProtection_21627940(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetInstanceProtection_21627939(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the instance protection settings of the specified instances.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627941 = query.getOrDefault("Action")
  valid_21627941 = validateParameter(valid_21627941, JString, required = true, default = newJString(
      "SetInstanceProtection"))
  if valid_21627941 != nil:
    section.add "Action", valid_21627941
  var valid_21627942 = query.getOrDefault("Version")
  valid_21627942 = validateParameter(valid_21627942, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627942 != nil:
    section.add "Version", valid_21627942
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627943 = header.getOrDefault("X-Amz-Date")
  valid_21627943 = validateParameter(valid_21627943, JString, required = false,
                                   default = nil)
  if valid_21627943 != nil:
    section.add "X-Amz-Date", valid_21627943
  var valid_21627944 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627944 = validateParameter(valid_21627944, JString, required = false,
                                   default = nil)
  if valid_21627944 != nil:
    section.add "X-Amz-Security-Token", valid_21627944
  var valid_21627945 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627945 = validateParameter(valid_21627945, JString, required = false,
                                   default = nil)
  if valid_21627945 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627945
  var valid_21627946 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627946 = validateParameter(valid_21627946, JString, required = false,
                                   default = nil)
  if valid_21627946 != nil:
    section.add "X-Amz-Algorithm", valid_21627946
  var valid_21627947 = header.getOrDefault("X-Amz-Signature")
  valid_21627947 = validateParameter(valid_21627947, JString, required = false,
                                   default = nil)
  if valid_21627947 != nil:
    section.add "X-Amz-Signature", valid_21627947
  var valid_21627948 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627948 = validateParameter(valid_21627948, JString, required = false,
                                   default = nil)
  if valid_21627948 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627948
  var valid_21627949 = header.getOrDefault("X-Amz-Credential")
  valid_21627949 = validateParameter(valid_21627949, JString, required = false,
                                   default = nil)
  if valid_21627949 != nil:
    section.add "X-Amz-Credential", valid_21627949
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray (required)
  ##              : One or more instance IDs.
  ##   ProtectedFromScaleIn: JBool (required)
  ##                       : Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627950 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627950 = validateParameter(valid_21627950, JString, required = true,
                                   default = nil)
  if valid_21627950 != nil:
    section.add "AutoScalingGroupName", valid_21627950
  var valid_21627951 = formData.getOrDefault("InstanceIds")
  valid_21627951 = validateParameter(valid_21627951, JArray, required = true,
                                   default = nil)
  if valid_21627951 != nil:
    section.add "InstanceIds", valid_21627951
  var valid_21627952 = formData.getOrDefault("ProtectedFromScaleIn")
  valid_21627952 = validateParameter(valid_21627952, JBool, required = true,
                                   default = nil)
  if valid_21627952 != nil:
    section.add "ProtectedFromScaleIn", valid_21627952
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627953: Call_PostSetInstanceProtection_21627938;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the instance protection settings of the specified instances.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627953.validator(path, query, header, formData, body, _)
  let scheme = call_21627953.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627953.makeUrl(scheme.get, call_21627953.host, call_21627953.base,
                               call_21627953.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627953, uri, valid, _)

proc call*(call_21627954: Call_PostSetInstanceProtection_21627938;
          AutoScalingGroupName: string; InstanceIds: JsonNode;
          ProtectedFromScaleIn: bool; Action: string = "SetInstanceProtection";
          Version: string = "2011-01-01"): Recallable =
  ## postSetInstanceProtection
  ## <p>Updates the instance protection settings of the specified instances.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   InstanceIds: JArray (required)
  ##              : One or more instance IDs.
  ##   Action: string (required)
  ##   ProtectedFromScaleIn: bool (required)
  ##                       : Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
  ##   Version: string (required)
  var query_21627955 = newJObject()
  var formData_21627956 = newJObject()
  add(formData_21627956, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if InstanceIds != nil:
    formData_21627956.add "InstanceIds", InstanceIds
  add(query_21627955, "Action", newJString(Action))
  add(formData_21627956, "ProtectedFromScaleIn", newJBool(ProtectedFromScaleIn))
  add(query_21627955, "Version", newJString(Version))
  result = call_21627954.call(nil, query_21627955, nil, formData_21627956, nil)

var postSetInstanceProtection* = Call_PostSetInstanceProtection_21627938(
    name: "postSetInstanceProtection", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=SetInstanceProtection",
    validator: validate_PostSetInstanceProtection_21627939, base: "/",
    makeUrl: url_PostSetInstanceProtection_21627940,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetInstanceProtection_21627920 = ref object of OpenApiRestCall_21625435
proc url_GetSetInstanceProtection_21627922(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetInstanceProtection_21627921(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the instance protection settings of the specified instances.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   InstanceIds: JArray (required)
  ##              : One or more instance IDs.
  ##   ProtectedFromScaleIn: JBool (required)
  ##                       : Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627923 = query.getOrDefault("AutoScalingGroupName")
  valid_21627923 = validateParameter(valid_21627923, JString, required = true,
                                   default = nil)
  if valid_21627923 != nil:
    section.add "AutoScalingGroupName", valid_21627923
  var valid_21627924 = query.getOrDefault("Action")
  valid_21627924 = validateParameter(valid_21627924, JString, required = true, default = newJString(
      "SetInstanceProtection"))
  if valid_21627924 != nil:
    section.add "Action", valid_21627924
  var valid_21627925 = query.getOrDefault("InstanceIds")
  valid_21627925 = validateParameter(valid_21627925, JArray, required = true,
                                   default = nil)
  if valid_21627925 != nil:
    section.add "InstanceIds", valid_21627925
  var valid_21627926 = query.getOrDefault("ProtectedFromScaleIn")
  valid_21627926 = validateParameter(valid_21627926, JBool, required = true,
                                   default = nil)
  if valid_21627926 != nil:
    section.add "ProtectedFromScaleIn", valid_21627926
  var valid_21627927 = query.getOrDefault("Version")
  valid_21627927 = validateParameter(valid_21627927, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627927 != nil:
    section.add "Version", valid_21627927
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627928 = header.getOrDefault("X-Amz-Date")
  valid_21627928 = validateParameter(valid_21627928, JString, required = false,
                                   default = nil)
  if valid_21627928 != nil:
    section.add "X-Amz-Date", valid_21627928
  var valid_21627929 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627929 = validateParameter(valid_21627929, JString, required = false,
                                   default = nil)
  if valid_21627929 != nil:
    section.add "X-Amz-Security-Token", valid_21627929
  var valid_21627930 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627930 = validateParameter(valid_21627930, JString, required = false,
                                   default = nil)
  if valid_21627930 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627930
  var valid_21627931 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627931 = validateParameter(valid_21627931, JString, required = false,
                                   default = nil)
  if valid_21627931 != nil:
    section.add "X-Amz-Algorithm", valid_21627931
  var valid_21627932 = header.getOrDefault("X-Amz-Signature")
  valid_21627932 = validateParameter(valid_21627932, JString, required = false,
                                   default = nil)
  if valid_21627932 != nil:
    section.add "X-Amz-Signature", valid_21627932
  var valid_21627933 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627933 = validateParameter(valid_21627933, JString, required = false,
                                   default = nil)
  if valid_21627933 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627933
  var valid_21627934 = header.getOrDefault("X-Amz-Credential")
  valid_21627934 = validateParameter(valid_21627934, JString, required = false,
                                   default = nil)
  if valid_21627934 != nil:
    section.add "X-Amz-Credential", valid_21627934
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627935: Call_GetSetInstanceProtection_21627920;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the instance protection settings of the specified instances.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627935.validator(path, query, header, formData, body, _)
  let scheme = call_21627935.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627935.makeUrl(scheme.get, call_21627935.host, call_21627935.base,
                               call_21627935.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627935, uri, valid, _)

proc call*(call_21627936: Call_GetSetInstanceProtection_21627920;
          AutoScalingGroupName: string; InstanceIds: JsonNode;
          ProtectedFromScaleIn: bool; Action: string = "SetInstanceProtection";
          Version: string = "2011-01-01"): Recallable =
  ## getSetInstanceProtection
  ## <p>Updates the instance protection settings of the specified instances.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   InstanceIds: JArray (required)
  ##              : One or more instance IDs.
  ##   ProtectedFromScaleIn: bool (required)
  ##                       : Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.
  ##   Version: string (required)
  var query_21627937 = newJObject()
  add(query_21627937, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627937, "Action", newJString(Action))
  if InstanceIds != nil:
    query_21627937.add "InstanceIds", InstanceIds
  add(query_21627937, "ProtectedFromScaleIn", newJBool(ProtectedFromScaleIn))
  add(query_21627937, "Version", newJString(Version))
  result = call_21627936.call(nil, query_21627937, nil, nil, nil)

var getSetInstanceProtection* = Call_GetSetInstanceProtection_21627920(
    name: "getSetInstanceProtection", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=SetInstanceProtection",
    validator: validate_GetSetInstanceProtection_21627921, base: "/",
    makeUrl: url_GetSetInstanceProtection_21627922,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSuspendProcesses_21627974 = ref object of OpenApiRestCall_21625435
proc url_PostSuspendProcesses_21627976(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSuspendProcesses_21627975(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Suspends the specified automatic scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly.</p> <p>To resume processes that have been suspended, use <a>ResumeProcesses</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627977 = query.getOrDefault("Action")
  valid_21627977 = validateParameter(valid_21627977, JString, required = true,
                                   default = newJString("SuspendProcesses"))
  if valid_21627977 != nil:
    section.add "Action", valid_21627977
  var valid_21627978 = query.getOrDefault("Version")
  valid_21627978 = validateParameter(valid_21627978, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627978 != nil:
    section.add "Version", valid_21627978
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627979 = header.getOrDefault("X-Amz-Date")
  valid_21627979 = validateParameter(valid_21627979, JString, required = false,
                                   default = nil)
  if valid_21627979 != nil:
    section.add "X-Amz-Date", valid_21627979
  var valid_21627980 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627980 = validateParameter(valid_21627980, JString, required = false,
                                   default = nil)
  if valid_21627980 != nil:
    section.add "X-Amz-Security-Token", valid_21627980
  var valid_21627981 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627981 = validateParameter(valid_21627981, JString, required = false,
                                   default = nil)
  if valid_21627981 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627981
  var valid_21627982 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627982 = validateParameter(valid_21627982, JString, required = false,
                                   default = nil)
  if valid_21627982 != nil:
    section.add "X-Amz-Algorithm", valid_21627982
  var valid_21627983 = header.getOrDefault("X-Amz-Signature")
  valid_21627983 = validateParameter(valid_21627983, JString, required = false,
                                   default = nil)
  if valid_21627983 != nil:
    section.add "X-Amz-Signature", valid_21627983
  var valid_21627984 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627984 = validateParameter(valid_21627984, JString, required = false,
                                   default = nil)
  if valid_21627984 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627984
  var valid_21627985 = header.getOrDefault("X-Amz-Credential")
  valid_21627985 = validateParameter(valid_21627985, JString, required = false,
                                   default = nil)
  if valid_21627985 != nil:
    section.add "X-Amz-Credential", valid_21627985
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627986 = formData.getOrDefault("AutoScalingGroupName")
  valid_21627986 = validateParameter(valid_21627986, JString, required = true,
                                   default = nil)
  if valid_21627986 != nil:
    section.add "AutoScalingGroupName", valid_21627986
  var valid_21627987 = formData.getOrDefault("ScalingProcesses")
  valid_21627987 = validateParameter(valid_21627987, JArray, required = false,
                                   default = nil)
  if valid_21627987 != nil:
    section.add "ScalingProcesses", valid_21627987
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627988: Call_PostSuspendProcesses_21627974; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Suspends the specified automatic scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly.</p> <p>To resume processes that have been suspended, use <a>ResumeProcesses</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627988.validator(path, query, header, formData, body, _)
  let scheme = call_21627988.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627988.makeUrl(scheme.get, call_21627988.host, call_21627988.base,
                               call_21627988.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627988, uri, valid, _)

proc call*(call_21627989: Call_PostSuspendProcesses_21627974;
          AutoScalingGroupName: string; ScalingProcesses: JsonNode = nil;
          Action: string = "SuspendProcesses"; Version: string = "2011-01-01"): Recallable =
  ## postSuspendProcesses
  ## <p>Suspends the specified automatic scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly.</p> <p>To resume processes that have been suspended, use <a>ResumeProcesses</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627990 = newJObject()
  var formData_21627991 = newJObject()
  add(formData_21627991, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if ScalingProcesses != nil:
    formData_21627991.add "ScalingProcesses", ScalingProcesses
  add(query_21627990, "Action", newJString(Action))
  add(query_21627990, "Version", newJString(Version))
  result = call_21627989.call(nil, query_21627990, nil, formData_21627991, nil)

var postSuspendProcesses* = Call_PostSuspendProcesses_21627974(
    name: "postSuspendProcesses", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=SuspendProcesses",
    validator: validate_PostSuspendProcesses_21627975, base: "/",
    makeUrl: url_PostSuspendProcesses_21627976,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSuspendProcesses_21627957 = ref object of OpenApiRestCall_21625435
proc url_GetSuspendProcesses_21627959(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSuspendProcesses_21627958(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Suspends the specified automatic scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly.</p> <p>To resume processes that have been suspended, use <a>ResumeProcesses</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627960 = query.getOrDefault("ScalingProcesses")
  valid_21627960 = validateParameter(valid_21627960, JArray, required = false,
                                   default = nil)
  if valid_21627960 != nil:
    section.add "ScalingProcesses", valid_21627960
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21627961 = query.getOrDefault("AutoScalingGroupName")
  valid_21627961 = validateParameter(valid_21627961, JString, required = true,
                                   default = nil)
  if valid_21627961 != nil:
    section.add "AutoScalingGroupName", valid_21627961
  var valid_21627962 = query.getOrDefault("Action")
  valid_21627962 = validateParameter(valid_21627962, JString, required = true,
                                   default = newJString("SuspendProcesses"))
  if valid_21627962 != nil:
    section.add "Action", valid_21627962
  var valid_21627963 = query.getOrDefault("Version")
  valid_21627963 = validateParameter(valid_21627963, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627963 != nil:
    section.add "Version", valid_21627963
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627964 = header.getOrDefault("X-Amz-Date")
  valid_21627964 = validateParameter(valid_21627964, JString, required = false,
                                   default = nil)
  if valid_21627964 != nil:
    section.add "X-Amz-Date", valid_21627964
  var valid_21627965 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627965 = validateParameter(valid_21627965, JString, required = false,
                                   default = nil)
  if valid_21627965 != nil:
    section.add "X-Amz-Security-Token", valid_21627965
  var valid_21627966 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627966 = validateParameter(valid_21627966, JString, required = false,
                                   default = nil)
  if valid_21627966 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627966
  var valid_21627967 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627967 = validateParameter(valid_21627967, JString, required = false,
                                   default = nil)
  if valid_21627967 != nil:
    section.add "X-Amz-Algorithm", valid_21627967
  var valid_21627968 = header.getOrDefault("X-Amz-Signature")
  valid_21627968 = validateParameter(valid_21627968, JString, required = false,
                                   default = nil)
  if valid_21627968 != nil:
    section.add "X-Amz-Signature", valid_21627968
  var valid_21627969 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627969 = validateParameter(valid_21627969, JString, required = false,
                                   default = nil)
  if valid_21627969 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627969
  var valid_21627970 = header.getOrDefault("X-Amz-Credential")
  valid_21627970 = validateParameter(valid_21627970, JString, required = false,
                                   default = nil)
  if valid_21627970 != nil:
    section.add "X-Amz-Credential", valid_21627970
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627971: Call_GetSuspendProcesses_21627957; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Suspends the specified automatic scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly.</p> <p>To resume processes that have been suspended, use <a>ResumeProcesses</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21627971.validator(path, query, header, formData, body, _)
  let scheme = call_21627971.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627971.makeUrl(scheme.get, call_21627971.host, call_21627971.base,
                               call_21627971.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627971, uri, valid, _)

proc call*(call_21627972: Call_GetSuspendProcesses_21627957;
          AutoScalingGroupName: string; ScalingProcesses: JsonNode = nil;
          Action: string = "SuspendProcesses"; Version: string = "2011-01-01"): Recallable =
  ## getSuspendProcesses
  ## <p>Suspends the specified automatic scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly.</p> <p>To resume processes that have been suspended, use <a>ResumeProcesses</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   ScalingProcesses: JArray
  ##                   : <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627973 = newJObject()
  if ScalingProcesses != nil:
    query_21627973.add "ScalingProcesses", ScalingProcesses
  add(query_21627973, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(query_21627973, "Action", newJString(Action))
  add(query_21627973, "Version", newJString(Version))
  result = call_21627972.call(nil, query_21627973, nil, nil, nil)

var getSuspendProcesses* = Call_GetSuspendProcesses_21627957(
    name: "getSuspendProcesses", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=SuspendProcesses",
    validator: validate_GetSuspendProcesses_21627958, base: "/",
    makeUrl: url_GetSuspendProcesses_21627959,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostTerminateInstanceInAutoScalingGroup_21628009 = ref object of OpenApiRestCall_21625435
proc url_PostTerminateInstanceInAutoScalingGroup_21628011(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostTerminateInstanceInAutoScalingGroup_21628010(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Terminates the specified instance and optionally adjusts the desired group size. This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628012 = query.getOrDefault("Action")
  valid_21628012 = validateParameter(valid_21628012, JString, required = true, default = newJString(
      "TerminateInstanceInAutoScalingGroup"))
  if valid_21628012 != nil:
    section.add "Action", valid_21628012
  var valid_21628013 = query.getOrDefault("Version")
  valid_21628013 = validateParameter(valid_21628013, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21628013 != nil:
    section.add "Version", valid_21628013
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628014 = header.getOrDefault("X-Amz-Date")
  valid_21628014 = validateParameter(valid_21628014, JString, required = false,
                                   default = nil)
  if valid_21628014 != nil:
    section.add "X-Amz-Date", valid_21628014
  var valid_21628015 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628015 = validateParameter(valid_21628015, JString, required = false,
                                   default = nil)
  if valid_21628015 != nil:
    section.add "X-Amz-Security-Token", valid_21628015
  var valid_21628016 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628016 = validateParameter(valid_21628016, JString, required = false,
                                   default = nil)
  if valid_21628016 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628016
  var valid_21628017 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628017 = validateParameter(valid_21628017, JString, required = false,
                                   default = nil)
  if valid_21628017 != nil:
    section.add "X-Amz-Algorithm", valid_21628017
  var valid_21628018 = header.getOrDefault("X-Amz-Signature")
  valid_21628018 = validateParameter(valid_21628018, JString, required = false,
                                   default = nil)
  if valid_21628018 != nil:
    section.add "X-Amz-Signature", valid_21628018
  var valid_21628019 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628019 = validateParameter(valid_21628019, JString, required = false,
                                   default = nil)
  if valid_21628019 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628019
  var valid_21628020 = header.getOrDefault("X-Amz-Credential")
  valid_21628020 = validateParameter(valid_21628020, JString, required = false,
                                   default = nil)
  if valid_21628020 != nil:
    section.add "X-Amz-Credential", valid_21628020
  result.add "header", section
  ## parameters in `formData` object:
  ##   ShouldDecrementDesiredCapacity: JBool (required)
  ##                                 : Indicates whether terminating the instance also decrements the size of the Auto Scaling group.
  ##   InstanceId: JString (required)
  ##             : The ID of the instance.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `ShouldDecrementDesiredCapacity` field"
  var valid_21628021 = formData.getOrDefault("ShouldDecrementDesiredCapacity")
  valid_21628021 = validateParameter(valid_21628021, JBool, required = true,
                                   default = nil)
  if valid_21628021 != nil:
    section.add "ShouldDecrementDesiredCapacity", valid_21628021
  var valid_21628022 = formData.getOrDefault("InstanceId")
  valid_21628022 = validateParameter(valid_21628022, JString, required = true,
                                   default = nil)
  if valid_21628022 != nil:
    section.add "InstanceId", valid_21628022
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628023: Call_PostTerminateInstanceInAutoScalingGroup_21628009;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Terminates the specified instance and optionally adjusts the desired group size. This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21628023.validator(path, query, header, formData, body, _)
  let scheme = call_21628023.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628023.makeUrl(scheme.get, call_21628023.host, call_21628023.base,
                               call_21628023.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628023, uri, valid, _)

proc call*(call_21628024: Call_PostTerminateInstanceInAutoScalingGroup_21628009;
          ShouldDecrementDesiredCapacity: bool; InstanceId: string;
          Action: string = "TerminateInstanceInAutoScalingGroup";
          Version: string = "2011-01-01"): Recallable =
  ## postTerminateInstanceInAutoScalingGroup
  ## <p>Terminates the specified instance and optionally adjusts the desired group size. This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   ShouldDecrementDesiredCapacity: bool (required)
  ##                                 : Indicates whether terminating the instance also decrements the size of the Auto Scaling group.
  ##   Action: string (required)
  ##   InstanceId: string (required)
  ##             : The ID of the instance.
  ##   Version: string (required)
  var query_21628025 = newJObject()
  var formData_21628026 = newJObject()
  add(formData_21628026, "ShouldDecrementDesiredCapacity",
      newJBool(ShouldDecrementDesiredCapacity))
  add(query_21628025, "Action", newJString(Action))
  add(formData_21628026, "InstanceId", newJString(InstanceId))
  add(query_21628025, "Version", newJString(Version))
  result = call_21628024.call(nil, query_21628025, nil, formData_21628026, nil)

var postTerminateInstanceInAutoScalingGroup* = Call_PostTerminateInstanceInAutoScalingGroup_21628009(
    name: "postTerminateInstanceInAutoScalingGroup", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=TerminateInstanceInAutoScalingGroup",
    validator: validate_PostTerminateInstanceInAutoScalingGroup_21628010,
    base: "/", makeUrl: url_PostTerminateInstanceInAutoScalingGroup_21628011,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetTerminateInstanceInAutoScalingGroup_21627992 = ref object of OpenApiRestCall_21625435
proc url_GetTerminateInstanceInAutoScalingGroup_21627994(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetTerminateInstanceInAutoScalingGroup_21627993(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Terminates the specified instance and optionally adjusts the desired group size. This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   ShouldDecrementDesiredCapacity: JBool (required)
  ##                                 : Indicates whether terminating the instance also decrements the size of the Auto Scaling group.
  ##   InstanceId: JString (required)
  ##             : The ID of the instance.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627995 = query.getOrDefault("Action")
  valid_21627995 = validateParameter(valid_21627995, JString, required = true, default = newJString(
      "TerminateInstanceInAutoScalingGroup"))
  if valid_21627995 != nil:
    section.add "Action", valid_21627995
  var valid_21627996 = query.getOrDefault("ShouldDecrementDesiredCapacity")
  valid_21627996 = validateParameter(valid_21627996, JBool, required = true,
                                   default = nil)
  if valid_21627996 != nil:
    section.add "ShouldDecrementDesiredCapacity", valid_21627996
  var valid_21627997 = query.getOrDefault("InstanceId")
  valid_21627997 = validateParameter(valid_21627997, JString, required = true,
                                   default = nil)
  if valid_21627997 != nil:
    section.add "InstanceId", valid_21627997
  var valid_21627998 = query.getOrDefault("Version")
  valid_21627998 = validateParameter(valid_21627998, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21627998 != nil:
    section.add "Version", valid_21627998
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627999 = header.getOrDefault("X-Amz-Date")
  valid_21627999 = validateParameter(valid_21627999, JString, required = false,
                                   default = nil)
  if valid_21627999 != nil:
    section.add "X-Amz-Date", valid_21627999
  var valid_21628000 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628000 = validateParameter(valid_21628000, JString, required = false,
                                   default = nil)
  if valid_21628000 != nil:
    section.add "X-Amz-Security-Token", valid_21628000
  var valid_21628001 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628001 = validateParameter(valid_21628001, JString, required = false,
                                   default = nil)
  if valid_21628001 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628001
  var valid_21628002 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628002 = validateParameter(valid_21628002, JString, required = false,
                                   default = nil)
  if valid_21628002 != nil:
    section.add "X-Amz-Algorithm", valid_21628002
  var valid_21628003 = header.getOrDefault("X-Amz-Signature")
  valid_21628003 = validateParameter(valid_21628003, JString, required = false,
                                   default = nil)
  if valid_21628003 != nil:
    section.add "X-Amz-Signature", valid_21628003
  var valid_21628004 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628004 = validateParameter(valid_21628004, JString, required = false,
                                   default = nil)
  if valid_21628004 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628004
  var valid_21628005 = header.getOrDefault("X-Amz-Credential")
  valid_21628005 = validateParameter(valid_21628005, JString, required = false,
                                   default = nil)
  if valid_21628005 != nil:
    section.add "X-Amz-Credential", valid_21628005
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628006: Call_GetTerminateInstanceInAutoScalingGroup_21627992;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Terminates the specified instance and optionally adjusts the desired group size. This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## 
  let valid = call_21628006.validator(path, query, header, formData, body, _)
  let scheme = call_21628006.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628006.makeUrl(scheme.get, call_21628006.host, call_21628006.base,
                               call_21628006.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628006, uri, valid, _)

proc call*(call_21628007: Call_GetTerminateInstanceInAutoScalingGroup_21627992;
          ShouldDecrementDesiredCapacity: bool; InstanceId: string;
          Action: string = "TerminateInstanceInAutoScalingGroup";
          Version: string = "2011-01-01"): Recallable =
  ## getTerminateInstanceInAutoScalingGroup
  ## <p>Terminates the specified instance and optionally adjusts the desired group size. This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Action: string (required)
  ##   ShouldDecrementDesiredCapacity: bool (required)
  ##                                 : Indicates whether terminating the instance also decrements the size of the Auto Scaling group.
  ##   InstanceId: string (required)
  ##             : The ID of the instance.
  ##   Version: string (required)
  var query_21628008 = newJObject()
  add(query_21628008, "Action", newJString(Action))
  add(query_21628008, "ShouldDecrementDesiredCapacity",
      newJBool(ShouldDecrementDesiredCapacity))
  add(query_21628008, "InstanceId", newJString(InstanceId))
  add(query_21628008, "Version", newJString(Version))
  result = call_21628007.call(nil, query_21628008, nil, nil, nil)

var getTerminateInstanceInAutoScalingGroup* = Call_GetTerminateInstanceInAutoScalingGroup_21627992(
    name: "getTerminateInstanceInAutoScalingGroup", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com",
    route: "/#Action=TerminateInstanceInAutoScalingGroup",
    validator: validate_GetTerminateInstanceInAutoScalingGroup_21627993,
    base: "/", makeUrl: url_GetTerminateInstanceInAutoScalingGroup_21627994,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateAutoScalingGroup_21628062 = ref object of OpenApiRestCall_21625435
proc url_PostUpdateAutoScalingGroup_21628064(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateAutoScalingGroup_21628063(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the parameter that you want to change. Any parameters that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in event occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which parameters have been set, use <a>DescribeAutoScalingGroups</a>. You can also view the scaling policies for an Auto Scaling group using <a>DescribePolicies</a>. If the group has scaling policies, you can update them using <a>PutScalingPolicy</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628065 = query.getOrDefault("Action")
  valid_21628065 = validateParameter(valid_21628065, JString, required = true, default = newJString(
      "UpdateAutoScalingGroup"))
  if valid_21628065 != nil:
    section.add "Action", valid_21628065
  var valid_21628066 = query.getOrDefault("Version")
  valid_21628066 = validateParameter(valid_21628066, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21628066 != nil:
    section.add "Version", valid_21628066
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628067 = header.getOrDefault("X-Amz-Date")
  valid_21628067 = validateParameter(valid_21628067, JString, required = false,
                                   default = nil)
  if valid_21628067 != nil:
    section.add "X-Amz-Date", valid_21628067
  var valid_21628068 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628068 = validateParameter(valid_21628068, JString, required = false,
                                   default = nil)
  if valid_21628068 != nil:
    section.add "X-Amz-Security-Token", valid_21628068
  var valid_21628069 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628069 = validateParameter(valid_21628069, JString, required = false,
                                   default = nil)
  if valid_21628069 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628069
  var valid_21628070 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628070 = validateParameter(valid_21628070, JString, required = false,
                                   default = nil)
  if valid_21628070 != nil:
    section.add "X-Amz-Algorithm", valid_21628070
  var valid_21628071 = header.getOrDefault("X-Amz-Signature")
  valid_21628071 = validateParameter(valid_21628071, JString, required = false,
                                   default = nil)
  if valid_21628071 != nil:
    section.add "X-Amz-Signature", valid_21628071
  var valid_21628072 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628072 = validateParameter(valid_21628072, JString, required = false,
                                   default = nil)
  if valid_21628072 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628072
  var valid_21628073 = header.getOrDefault("X-Amz-Credential")
  valid_21628073 = validateParameter(valid_21628073, JString, required = false,
                                   default = nil)
  if valid_21628073 != nil:
    section.add "X-Amz-Credential", valid_21628073
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   LaunchTemplate.LaunchTemplateId: JString
  ##                                  : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchConfigurationName: JString
  ##                          : The name of the launch configuration. If you specify <code>LaunchConfigurationName</code> in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.
  ##   HealthCheckType: JString
  ##                  : The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.
  ##   ServiceLinkedRoleARN: JString
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   DesiredCapacity: JInt
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.
  ##   HealthCheckGracePeriod: JInt
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   VPCZoneIdentifier: JString
  ##                    : <p>A comma-separated list of subnet IDs for virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p>
  ##   AvailabilityZones: JArray
  ##                    : One or more Availability Zones for the group.
  ##   MinSize: JInt
  ##          : The minimum size of the Auto Scaling group.
  ##   DefaultCooldown: JInt
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>. This cooldown period is not used when a scaling-specific cooldown is specified.</p> <p>Cooldown periods are not supported for target tracking scaling policies, step scaling policies, or scheduled scaling. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicy.LaunchTemplate: JString
  ##                                      : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   MaxInstanceLifetime: JInt
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   MaxSize: JInt
  ##          : The maximum size of the Auto Scaling group.
  ##   MixedInstancesPolicy.InstancesDistribution: JString
  ##                                             : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   PlacementGroup: JString
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   NewInstancesProtectedFromScaleIn: JBool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplate.Version: JString
  ##                         : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   TerminationPolicies: JArray
  ##                      : <p>A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplate.LaunchTemplateName: JString
  ##                                    : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21628074 = formData.getOrDefault("AutoScalingGroupName")
  valid_21628074 = validateParameter(valid_21628074, JString, required = true,
                                   default = nil)
  if valid_21628074 != nil:
    section.add "AutoScalingGroupName", valid_21628074
  var valid_21628075 = formData.getOrDefault("LaunchTemplate.LaunchTemplateId")
  valid_21628075 = validateParameter(valid_21628075, JString, required = false,
                                   default = nil)
  if valid_21628075 != nil:
    section.add "LaunchTemplate.LaunchTemplateId", valid_21628075
  var valid_21628076 = formData.getOrDefault("LaunchConfigurationName")
  valid_21628076 = validateParameter(valid_21628076, JString, required = false,
                                   default = nil)
  if valid_21628076 != nil:
    section.add "LaunchConfigurationName", valid_21628076
  var valid_21628077 = formData.getOrDefault("HealthCheckType")
  valid_21628077 = validateParameter(valid_21628077, JString, required = false,
                                   default = nil)
  if valid_21628077 != nil:
    section.add "HealthCheckType", valid_21628077
  var valid_21628078 = formData.getOrDefault("ServiceLinkedRoleARN")
  valid_21628078 = validateParameter(valid_21628078, JString, required = false,
                                   default = nil)
  if valid_21628078 != nil:
    section.add "ServiceLinkedRoleARN", valid_21628078
  var valid_21628079 = formData.getOrDefault("DesiredCapacity")
  valid_21628079 = validateParameter(valid_21628079, JInt, required = false,
                                   default = nil)
  if valid_21628079 != nil:
    section.add "DesiredCapacity", valid_21628079
  var valid_21628080 = formData.getOrDefault("HealthCheckGracePeriod")
  valid_21628080 = validateParameter(valid_21628080, JInt, required = false,
                                   default = nil)
  if valid_21628080 != nil:
    section.add "HealthCheckGracePeriod", valid_21628080
  var valid_21628081 = formData.getOrDefault("VPCZoneIdentifier")
  valid_21628081 = validateParameter(valid_21628081, JString, required = false,
                                   default = nil)
  if valid_21628081 != nil:
    section.add "VPCZoneIdentifier", valid_21628081
  var valid_21628082 = formData.getOrDefault("AvailabilityZones")
  valid_21628082 = validateParameter(valid_21628082, JArray, required = false,
                                   default = nil)
  if valid_21628082 != nil:
    section.add "AvailabilityZones", valid_21628082
  var valid_21628083 = formData.getOrDefault("MinSize")
  valid_21628083 = validateParameter(valid_21628083, JInt, required = false,
                                   default = nil)
  if valid_21628083 != nil:
    section.add "MinSize", valid_21628083
  var valid_21628084 = formData.getOrDefault("DefaultCooldown")
  valid_21628084 = validateParameter(valid_21628084, JInt, required = false,
                                   default = nil)
  if valid_21628084 != nil:
    section.add "DefaultCooldown", valid_21628084
  var valid_21628085 = formData.getOrDefault("MixedInstancesPolicy.LaunchTemplate")
  valid_21628085 = validateParameter(valid_21628085, JString, required = false,
                                   default = nil)
  if valid_21628085 != nil:
    section.add "MixedInstancesPolicy.LaunchTemplate", valid_21628085
  var valid_21628086 = formData.getOrDefault("MaxInstanceLifetime")
  valid_21628086 = validateParameter(valid_21628086, JInt, required = false,
                                   default = nil)
  if valid_21628086 != nil:
    section.add "MaxInstanceLifetime", valid_21628086
  var valid_21628087 = formData.getOrDefault("MaxSize")
  valid_21628087 = validateParameter(valid_21628087, JInt, required = false,
                                   default = nil)
  if valid_21628087 != nil:
    section.add "MaxSize", valid_21628087
  var valid_21628088 = formData.getOrDefault(
      "MixedInstancesPolicy.InstancesDistribution")
  valid_21628088 = validateParameter(valid_21628088, JString, required = false,
                                   default = nil)
  if valid_21628088 != nil:
    section.add "MixedInstancesPolicy.InstancesDistribution", valid_21628088
  var valid_21628089 = formData.getOrDefault("PlacementGroup")
  valid_21628089 = validateParameter(valid_21628089, JString, required = false,
                                   default = nil)
  if valid_21628089 != nil:
    section.add "PlacementGroup", valid_21628089
  var valid_21628090 = formData.getOrDefault("NewInstancesProtectedFromScaleIn")
  valid_21628090 = validateParameter(valid_21628090, JBool, required = false,
                                   default = nil)
  if valid_21628090 != nil:
    section.add "NewInstancesProtectedFromScaleIn", valid_21628090
  var valid_21628091 = formData.getOrDefault("LaunchTemplate.Version")
  valid_21628091 = validateParameter(valid_21628091, JString, required = false,
                                   default = nil)
  if valid_21628091 != nil:
    section.add "LaunchTemplate.Version", valid_21628091
  var valid_21628092 = formData.getOrDefault("TerminationPolicies")
  valid_21628092 = validateParameter(valid_21628092, JArray, required = false,
                                   default = nil)
  if valid_21628092 != nil:
    section.add "TerminationPolicies", valid_21628092
  var valid_21628093 = formData.getOrDefault("LaunchTemplate.LaunchTemplateName")
  valid_21628093 = validateParameter(valid_21628093, JString, required = false,
                                   default = nil)
  if valid_21628093 != nil:
    section.add "LaunchTemplate.LaunchTemplateName", valid_21628093
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628094: Call_PostUpdateAutoScalingGroup_21628062;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the parameter that you want to change. Any parameters that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in event occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which parameters have been set, use <a>DescribeAutoScalingGroups</a>. You can also view the scaling policies for an Auto Scaling group using <a>DescribePolicies</a>. If the group has scaling policies, you can update them using <a>PutScalingPolicy</a>.</p>
  ## 
  let valid = call_21628094.validator(path, query, header, formData, body, _)
  let scheme = call_21628094.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628094.makeUrl(scheme.get, call_21628094.host, call_21628094.base,
                               call_21628094.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628094, uri, valid, _)

proc call*(call_21628095: Call_PostUpdateAutoScalingGroup_21628062;
          AutoScalingGroupName: string;
          LaunchTemplateLaunchTemplateId: string = "";
          LaunchConfigurationName: string = ""; HealthCheckType: string = "";
          ServiceLinkedRoleARN: string = ""; DesiredCapacity: int = 0;
          HealthCheckGracePeriod: int = 0; VPCZoneIdentifier: string = "";
          Action: string = "UpdateAutoScalingGroup";
          AvailabilityZones: JsonNode = nil; MinSize: int = 0; DefaultCooldown: int = 0;
          MixedInstancesPolicyLaunchTemplate: string = "";
          MaxInstanceLifetime: int = 0; MaxSize: int = 0;
          MixedInstancesPolicyInstancesDistribution: string = "";
          PlacementGroup: string = "";
          NewInstancesProtectedFromScaleIn: bool = false;
          LaunchTemplateVersion: string = ""; TerminationPolicies: JsonNode = nil;
          Version: string = "2011-01-01";
          LaunchTemplateLaunchTemplateName: string = ""): Recallable =
  ## postUpdateAutoScalingGroup
  ## <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the parameter that you want to change. Any parameters that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in event occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which parameters have been set, use <a>DescribeAutoScalingGroups</a>. You can also view the scaling policies for an Auto Scaling group using <a>DescribePolicies</a>. If the group has scaling policies, you can update them using <a>PutScalingPolicy</a>.</p>
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   LaunchTemplateLaunchTemplateId: string
  ##                                 : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchConfigurationName: string
  ##                          : The name of the launch configuration. If you specify <code>LaunchConfigurationName</code> in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.
  ##   HealthCheckType: string
  ##                  : The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.
  ##   ServiceLinkedRoleARN: string
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  ##   DesiredCapacity: int
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.
  ##   HealthCheckGracePeriod: int
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   VPCZoneIdentifier: string
  ##                    : <p>A comma-separated list of subnet IDs for virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p>
  ##   Action: string (required)
  ##   AvailabilityZones: JArray
  ##                    : One or more Availability Zones for the group.
  ##   MinSize: int
  ##          : The minimum size of the Auto Scaling group.
  ##   DefaultCooldown: int
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>. This cooldown period is not used when a scaling-specific cooldown is specified.</p> <p>Cooldown periods are not supported for target tracking scaling policies, step scaling policies, or scheduled scaling. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicyLaunchTemplate: string
  ##                                     : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   MaxInstanceLifetime: int
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   MaxSize: int
  ##          : The maximum size of the Auto Scaling group.
  ##   MixedInstancesPolicyInstancesDistribution: string
  ##                                            : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   PlacementGroup: string
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   NewInstancesProtectedFromScaleIn: bool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplateVersion: string
  ##                        : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   TerminationPolicies: JArray
  ##                      : <p>A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   Version: string (required)
  ##   LaunchTemplateLaunchTemplateName: string
  ##                                   : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  var query_21628096 = newJObject()
  var formData_21628097 = newJObject()
  add(formData_21628097, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  add(formData_21628097, "LaunchTemplate.LaunchTemplateId",
      newJString(LaunchTemplateLaunchTemplateId))
  add(formData_21628097, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  add(formData_21628097, "HealthCheckType", newJString(HealthCheckType))
  add(formData_21628097, "ServiceLinkedRoleARN", newJString(ServiceLinkedRoleARN))
  add(formData_21628097, "DesiredCapacity", newJInt(DesiredCapacity))
  add(formData_21628097, "HealthCheckGracePeriod", newJInt(HealthCheckGracePeriod))
  add(formData_21628097, "VPCZoneIdentifier", newJString(VPCZoneIdentifier))
  add(query_21628096, "Action", newJString(Action))
  if AvailabilityZones != nil:
    formData_21628097.add "AvailabilityZones", AvailabilityZones
  add(formData_21628097, "MinSize", newJInt(MinSize))
  add(formData_21628097, "DefaultCooldown", newJInt(DefaultCooldown))
  add(formData_21628097, "MixedInstancesPolicy.LaunchTemplate",
      newJString(MixedInstancesPolicyLaunchTemplate))
  add(formData_21628097, "MaxInstanceLifetime", newJInt(MaxInstanceLifetime))
  add(formData_21628097, "MaxSize", newJInt(MaxSize))
  add(formData_21628097, "MixedInstancesPolicy.InstancesDistribution",
      newJString(MixedInstancesPolicyInstancesDistribution))
  add(formData_21628097, "PlacementGroup", newJString(PlacementGroup))
  add(formData_21628097, "NewInstancesProtectedFromScaleIn",
      newJBool(NewInstancesProtectedFromScaleIn))
  add(formData_21628097, "LaunchTemplate.Version",
      newJString(LaunchTemplateVersion))
  if TerminationPolicies != nil:
    formData_21628097.add "TerminationPolicies", TerminationPolicies
  add(query_21628096, "Version", newJString(Version))
  add(formData_21628097, "LaunchTemplate.LaunchTemplateName",
      newJString(LaunchTemplateLaunchTemplateName))
  result = call_21628095.call(nil, query_21628096, nil, formData_21628097, nil)

var postUpdateAutoScalingGroup* = Call_PostUpdateAutoScalingGroup_21628062(
    name: "postUpdateAutoScalingGroup", meth: HttpMethod.HttpPost,
    host: "autoscaling.amazonaws.com", route: "/#Action=UpdateAutoScalingGroup",
    validator: validate_PostUpdateAutoScalingGroup_21628063, base: "/",
    makeUrl: url_PostUpdateAutoScalingGroup_21628064,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateAutoScalingGroup_21628027 = ref object of OpenApiRestCall_21625435
proc url_GetUpdateAutoScalingGroup_21628029(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateAutoScalingGroup_21628028(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the parameter that you want to change. Any parameters that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in event occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which parameters have been set, use <a>DescribeAutoScalingGroups</a>. You can also view the scaling policies for an Auto Scaling group using <a>DescribePolicies</a>. If the group has scaling policies, you can update them using <a>PutScalingPolicy</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   HealthCheckGracePeriod: JInt
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   TerminationPolicies: JArray
  ##                      : <p>A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   HealthCheckType: JString
  ##                  : The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.
  ##   DesiredCapacity: JInt
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.
  ##   DefaultCooldown: JInt
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>. This cooldown period is not used when a scaling-specific cooldown is specified.</p> <p>Cooldown periods are not supported for target tracking scaling policies, step scaling policies, or scheduled scaling. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplate.LaunchTemplateId: JString
  ##                                  : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchTemplate.LaunchTemplateName: JString
  ##                                    : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  ##   AutoScalingGroupName: JString (required)
  ##                       : The name of the Auto Scaling group.
  ##   AvailabilityZones: JArray
  ##                    : One or more Availability Zones for the group.
  ##   VPCZoneIdentifier: JString
  ##                    : <p>A comma-separated list of subnet IDs for virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p>
  ##   NewInstancesProtectedFromScaleIn: JBool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicy.LaunchTemplate: JString
  ##                                      : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   LaunchConfigurationName: JString
  ##                          : The name of the launch configuration. If you specify <code>LaunchConfigurationName</code> in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.
  ##   MaxInstanceLifetime: JInt
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   Action: JString (required)
  ##   PlacementGroup: JString
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   MixedInstancesPolicy.InstancesDistribution: JString
  ##                                             : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   LaunchTemplate.Version: JString
  ##                         : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   MaxSize: JInt
  ##          : The maximum size of the Auto Scaling group.
  ##   MinSize: JInt
  ##          : The minimum size of the Auto Scaling group.
  ##   Version: JString (required)
  ##   ServiceLinkedRoleARN: JString
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  section = newJObject()
  var valid_21628030 = query.getOrDefault("HealthCheckGracePeriod")
  valid_21628030 = validateParameter(valid_21628030, JInt, required = false,
                                   default = nil)
  if valid_21628030 != nil:
    section.add "HealthCheckGracePeriod", valid_21628030
  var valid_21628031 = query.getOrDefault("TerminationPolicies")
  valid_21628031 = validateParameter(valid_21628031, JArray, required = false,
                                   default = nil)
  if valid_21628031 != nil:
    section.add "TerminationPolicies", valid_21628031
  var valid_21628032 = query.getOrDefault("HealthCheckType")
  valid_21628032 = validateParameter(valid_21628032, JString, required = false,
                                   default = nil)
  if valid_21628032 != nil:
    section.add "HealthCheckType", valid_21628032
  var valid_21628033 = query.getOrDefault("DesiredCapacity")
  valid_21628033 = validateParameter(valid_21628033, JInt, required = false,
                                   default = nil)
  if valid_21628033 != nil:
    section.add "DesiredCapacity", valid_21628033
  var valid_21628034 = query.getOrDefault("DefaultCooldown")
  valid_21628034 = validateParameter(valid_21628034, JInt, required = false,
                                   default = nil)
  if valid_21628034 != nil:
    section.add "DefaultCooldown", valid_21628034
  var valid_21628035 = query.getOrDefault("LaunchTemplate.LaunchTemplateId")
  valid_21628035 = validateParameter(valid_21628035, JString, required = false,
                                   default = nil)
  if valid_21628035 != nil:
    section.add "LaunchTemplate.LaunchTemplateId", valid_21628035
  var valid_21628036 = query.getOrDefault("LaunchTemplate.LaunchTemplateName")
  valid_21628036 = validateParameter(valid_21628036, JString, required = false,
                                   default = nil)
  if valid_21628036 != nil:
    section.add "LaunchTemplate.LaunchTemplateName", valid_21628036
  assert query != nil, "query argument is necessary due to required `AutoScalingGroupName` field"
  var valid_21628037 = query.getOrDefault("AutoScalingGroupName")
  valid_21628037 = validateParameter(valid_21628037, JString, required = true,
                                   default = nil)
  if valid_21628037 != nil:
    section.add "AutoScalingGroupName", valid_21628037
  var valid_21628038 = query.getOrDefault("AvailabilityZones")
  valid_21628038 = validateParameter(valid_21628038, JArray, required = false,
                                   default = nil)
  if valid_21628038 != nil:
    section.add "AvailabilityZones", valid_21628038
  var valid_21628039 = query.getOrDefault("VPCZoneIdentifier")
  valid_21628039 = validateParameter(valid_21628039, JString, required = false,
                                   default = nil)
  if valid_21628039 != nil:
    section.add "VPCZoneIdentifier", valid_21628039
  var valid_21628040 = query.getOrDefault("NewInstancesProtectedFromScaleIn")
  valid_21628040 = validateParameter(valid_21628040, JBool, required = false,
                                   default = nil)
  if valid_21628040 != nil:
    section.add "NewInstancesProtectedFromScaleIn", valid_21628040
  var valid_21628041 = query.getOrDefault("MixedInstancesPolicy.LaunchTemplate")
  valid_21628041 = validateParameter(valid_21628041, JString, required = false,
                                   default = nil)
  if valid_21628041 != nil:
    section.add "MixedInstancesPolicy.LaunchTemplate", valid_21628041
  var valid_21628042 = query.getOrDefault("LaunchConfigurationName")
  valid_21628042 = validateParameter(valid_21628042, JString, required = false,
                                   default = nil)
  if valid_21628042 != nil:
    section.add "LaunchConfigurationName", valid_21628042
  var valid_21628043 = query.getOrDefault("MaxInstanceLifetime")
  valid_21628043 = validateParameter(valid_21628043, JInt, required = false,
                                   default = nil)
  if valid_21628043 != nil:
    section.add "MaxInstanceLifetime", valid_21628043
  var valid_21628044 = query.getOrDefault("Action")
  valid_21628044 = validateParameter(valid_21628044, JString, required = true, default = newJString(
      "UpdateAutoScalingGroup"))
  if valid_21628044 != nil:
    section.add "Action", valid_21628044
  var valid_21628045 = query.getOrDefault("PlacementGroup")
  valid_21628045 = validateParameter(valid_21628045, JString, required = false,
                                   default = nil)
  if valid_21628045 != nil:
    section.add "PlacementGroup", valid_21628045
  var valid_21628046 = query.getOrDefault("MixedInstancesPolicy.InstancesDistribution")
  valid_21628046 = validateParameter(valid_21628046, JString, required = false,
                                   default = nil)
  if valid_21628046 != nil:
    section.add "MixedInstancesPolicy.InstancesDistribution", valid_21628046
  var valid_21628047 = query.getOrDefault("LaunchTemplate.Version")
  valid_21628047 = validateParameter(valid_21628047, JString, required = false,
                                   default = nil)
  if valid_21628047 != nil:
    section.add "LaunchTemplate.Version", valid_21628047
  var valid_21628048 = query.getOrDefault("MaxSize")
  valid_21628048 = validateParameter(valid_21628048, JInt, required = false,
                                   default = nil)
  if valid_21628048 != nil:
    section.add "MaxSize", valid_21628048
  var valid_21628049 = query.getOrDefault("MinSize")
  valid_21628049 = validateParameter(valid_21628049, JInt, required = false,
                                   default = nil)
  if valid_21628049 != nil:
    section.add "MinSize", valid_21628049
  var valid_21628050 = query.getOrDefault("Version")
  valid_21628050 = validateParameter(valid_21628050, JString, required = true,
                                   default = newJString("2011-01-01"))
  if valid_21628050 != nil:
    section.add "Version", valid_21628050
  var valid_21628051 = query.getOrDefault("ServiceLinkedRoleARN")
  valid_21628051 = validateParameter(valid_21628051, JString, required = false,
                                   default = nil)
  if valid_21628051 != nil:
    section.add "ServiceLinkedRoleARN", valid_21628051
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628052 = header.getOrDefault("X-Amz-Date")
  valid_21628052 = validateParameter(valid_21628052, JString, required = false,
                                   default = nil)
  if valid_21628052 != nil:
    section.add "X-Amz-Date", valid_21628052
  var valid_21628053 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628053 = validateParameter(valid_21628053, JString, required = false,
                                   default = nil)
  if valid_21628053 != nil:
    section.add "X-Amz-Security-Token", valid_21628053
  var valid_21628054 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628054 = validateParameter(valid_21628054, JString, required = false,
                                   default = nil)
  if valid_21628054 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628054
  var valid_21628055 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628055 = validateParameter(valid_21628055, JString, required = false,
                                   default = nil)
  if valid_21628055 != nil:
    section.add "X-Amz-Algorithm", valid_21628055
  var valid_21628056 = header.getOrDefault("X-Amz-Signature")
  valid_21628056 = validateParameter(valid_21628056, JString, required = false,
                                   default = nil)
  if valid_21628056 != nil:
    section.add "X-Amz-Signature", valid_21628056
  var valid_21628057 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628057 = validateParameter(valid_21628057, JString, required = false,
                                   default = nil)
  if valid_21628057 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628057
  var valid_21628058 = header.getOrDefault("X-Amz-Credential")
  valid_21628058 = validateParameter(valid_21628058, JString, required = false,
                                   default = nil)
  if valid_21628058 != nil:
    section.add "X-Amz-Credential", valid_21628058
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628059: Call_GetUpdateAutoScalingGroup_21628027;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the parameter that you want to change. Any parameters that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in event occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which parameters have been set, use <a>DescribeAutoScalingGroups</a>. You can also view the scaling policies for an Auto Scaling group using <a>DescribePolicies</a>. If the group has scaling policies, you can update them using <a>PutScalingPolicy</a>.</p>
  ## 
  let valid = call_21628059.validator(path, query, header, formData, body, _)
  let scheme = call_21628059.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628059.makeUrl(scheme.get, call_21628059.host, call_21628059.base,
                               call_21628059.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628059, uri, valid, _)

proc call*(call_21628060: Call_GetUpdateAutoScalingGroup_21628027;
          AutoScalingGroupName: string; HealthCheckGracePeriod: int = 0;
          TerminationPolicies: JsonNode = nil; HealthCheckType: string = "";
          DesiredCapacity: int = 0; DefaultCooldown: int = 0;
          LaunchTemplateLaunchTemplateId: string = "";
          LaunchTemplateLaunchTemplateName: string = "";
          AvailabilityZones: JsonNode = nil; VPCZoneIdentifier: string = "";
          NewInstancesProtectedFromScaleIn: bool = false;
          MixedInstancesPolicyLaunchTemplate: string = "";
          LaunchConfigurationName: string = ""; MaxInstanceLifetime: int = 0;
          Action: string = "UpdateAutoScalingGroup"; PlacementGroup: string = "";
          MixedInstancesPolicyInstancesDistribution: string = "";
          LaunchTemplateVersion: string = ""; MaxSize: int = 0; MinSize: int = 0;
          Version: string = "2011-01-01"; ServiceLinkedRoleARN: string = ""): Recallable =
  ## getUpdateAutoScalingGroup
  ## <p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the parameter that you want to change. Any parameters that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in event occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which parameters have been set, use <a>DescribeAutoScalingGroups</a>. You can also view the scaling policies for an Auto Scaling group using <a>DescribePolicies</a>. If the group has scaling policies, you can update them using <a>PutScalingPolicy</a>.</p>
  ##   HealthCheckGracePeriod: int
  ##                         : <p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default value is <code>0</code>.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Conditional: This parameter is required if you are adding an <code>ELB</code> health check.</p>
  ##   TerminationPolicies: JArray
  ##                      : <p>A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   HealthCheckType: string
  ##                  : The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.
  ##   DesiredCapacity: int
  ##                  : The number of EC2 instances that should be running in the Auto Scaling group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.
  ##   DefaultCooldown: int
  ##                  : <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>. This cooldown period is not used when a scaling-specific cooldown is specified.</p> <p>Cooldown periods are not supported for target tracking scaling policies, step scaling policies, or scheduled scaling. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling Cooldowns</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   LaunchTemplateLaunchTemplateId: string
  ##                                 : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The ID of the launch template. You must specify either a template ID or a template name.
  ##   LaunchTemplateLaunchTemplateName: string
  ##                                   : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The name of the launch template. You must specify either a template name or a template ID.
  ##   AutoScalingGroupName: string (required)
  ##                       : The name of the Auto Scaling group.
  ##   AvailabilityZones: JArray
  ##                    : One or more Availability Zones for the group.
  ##   VPCZoneIdentifier: string
  ##                    : <p>A comma-separated list of subnet IDs for virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p>
  ##   NewInstancesProtectedFromScaleIn: bool
  ##                                   : <p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ##   MixedInstancesPolicyLaunchTemplate: string
  ##                                     : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The launch template and instance types (overrides).</p> <p>This parameter must be specified when creating a mixed instances policy.</p>
  ##   LaunchConfigurationName: string
  ##                          : The name of the launch configuration. If you specify <code>LaunchConfigurationName</code> in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.
  ##   MaxInstanceLifetime: int
  ##                      : <p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 604800.</p>
  ##   Action: string (required)
  ##   PlacementGroup: string
  ##                 : The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
  ##   MixedInstancesPolicyInstancesDistribution: string
  ##                                            : <p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>
  ## <p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>
  ##   LaunchTemplateVersion: string
  ##                        : <p>Describes a launch template and the launch template version.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
  ## The version number, <code>$Latest</code>, or <code>$Default</code>. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.
  ##   MaxSize: int
  ##          : The maximum size of the Auto Scaling group.
  ##   MinSize: int
  ##          : The minimum size of the Auto Scaling group.
  ##   Version: string (required)
  ##   ServiceLinkedRoleARN: string
  ##                       : The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. For more information, see <a 
  ## href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
  var query_21628061 = newJObject()
  add(query_21628061, "HealthCheckGracePeriod", newJInt(HealthCheckGracePeriod))
  if TerminationPolicies != nil:
    query_21628061.add "TerminationPolicies", TerminationPolicies
  add(query_21628061, "HealthCheckType", newJString(HealthCheckType))
  add(query_21628061, "DesiredCapacity", newJInt(DesiredCapacity))
  add(query_21628061, "DefaultCooldown", newJInt(DefaultCooldown))
  add(query_21628061, "LaunchTemplate.LaunchTemplateId",
      newJString(LaunchTemplateLaunchTemplateId))
  add(query_21628061, "LaunchTemplate.LaunchTemplateName",
      newJString(LaunchTemplateLaunchTemplateName))
  add(query_21628061, "AutoScalingGroupName", newJString(AutoScalingGroupName))
  if AvailabilityZones != nil:
    query_21628061.add "AvailabilityZones", AvailabilityZones
  add(query_21628061, "VPCZoneIdentifier", newJString(VPCZoneIdentifier))
  add(query_21628061, "NewInstancesProtectedFromScaleIn",
      newJBool(NewInstancesProtectedFromScaleIn))
  add(query_21628061, "MixedInstancesPolicy.LaunchTemplate",
      newJString(MixedInstancesPolicyLaunchTemplate))
  add(query_21628061, "LaunchConfigurationName",
      newJString(LaunchConfigurationName))
  add(query_21628061, "MaxInstanceLifetime", newJInt(MaxInstanceLifetime))
  add(query_21628061, "Action", newJString(Action))
  add(query_21628061, "PlacementGroup", newJString(PlacementGroup))
  add(query_21628061, "MixedInstancesPolicy.InstancesDistribution",
      newJString(MixedInstancesPolicyInstancesDistribution))
  add(query_21628061, "LaunchTemplate.Version", newJString(LaunchTemplateVersion))
  add(query_21628061, "MaxSize", newJInt(MaxSize))
  add(query_21628061, "MinSize", newJInt(MinSize))
  add(query_21628061, "Version", newJString(Version))
  add(query_21628061, "ServiceLinkedRoleARN", newJString(ServiceLinkedRoleARN))
  result = call_21628060.call(nil, query_21628061, nil, nil, nil)

var getUpdateAutoScalingGroup* = Call_GetUpdateAutoScalingGroup_21628027(
    name: "getUpdateAutoScalingGroup", meth: HttpMethod.HttpGet,
    host: "autoscaling.amazonaws.com", route: "/#Action=UpdateAutoScalingGroup",
    validator: validate_GetUpdateAutoScalingGroup_21628028, base: "/",
    makeUrl: url_GetUpdateAutoScalingGroup_21628029,
    schemes: {Scheme.Https, Scheme.Http})
export
  rest

type
  EnvKind = enum
    BakeIntoBinary = "Baking $1 into the binary",
    FetchFromEnv = "Fetch $1 from the environment"
template sloppyConst(via: EnvKind; name: untyped): untyped =
  import
    macros

  const
    name {.strdefine.}: string = case via
    of BakeIntoBinary:
      getEnv(astToStr(name), "")
    of FetchFromEnv:
      ""
  static :
    let msg = block:
      if name == "":
        "Missing $1 in the environment"
      else:
        $via
    warning msg % [astToStr(name)]

sloppyConst FetchFromEnv, AWS_ACCESS_KEY_ID
sloppyConst FetchFromEnv, AWS_SECRET_ACCESS_KEY
sloppyConst BakeIntoBinary, AWS_REGION
sloppyConst FetchFromEnv, AWS_ACCOUNT_ID
type
  XAmz = enum
    SecurityToken = "X-Amz-Security-Token", ContentSha256 = "X-Amz-Content-Sha256"
proc atozSign(recall: var Recallable; query: JsonNode; algo: SigningAlgo = SHA256) =
  let
    date = makeDateTime()
    access = os.getEnv("AWS_ACCESS_KEY_ID", AWS_ACCESS_KEY_ID)
    secret = os.getEnv("AWS_SECRET_ACCESS_KEY", AWS_SECRET_ACCESS_KEY)
    region = os.getEnv("AWS_REGION", AWS_REGION)
  assert secret != "", "need $AWS_SECRET_ACCESS_KEY in environment"
  assert access != "", "need $AWS_ACCESS_KEY_ID in environment"
  assert region != "", "need $AWS_REGION in environment"
  var
    normal: PathNormal
    url = normalizeUrl(recall.url, query, normalize = normal)
    scheme = parseEnum[Scheme](url.scheme)
  assert scheme in awsServers, "unknown scheme `" & $scheme & "`"
  assert region in awsServers[scheme], "unknown region `" & region & "`"
  url.hostname = awsServers[scheme][region]
  case awsServiceName.toLowerAscii
  of "s3":
    normal = PathNormal.S3
  else:
    normal = PathNormal.Default
  recall.headers["Host"] = url.hostname
  recall.headers["X-Amz-Date"] = date
  recall.headers[$ContentSha256] = hash(recall.body, SHA256)
  let
    scope = credentialScope(region = region, service = awsServiceName, date = date)
    request = canonicalRequest(recall.meth, $url, query, recall.headers, recall.body,
                             normalize = normal, digest = algo)
    sts = stringToSign(request.hash(algo), scope, date = date, digest = algo)
    signature = calculateSignature(secret = secret, date = date, region = region,
                                 service = awsServiceName, sts, digest = algo)
  var auth = $algo & " "
  auth &= "Credential=" & access / scope & ", "
  auth &= "SignedHeaders=" & recall.headers.signedHeaders & ", "
  auth &= "Signature=" & signature
  recall.headers["Authorization"] = auth
  recall.headers.del "Host"
  recall.url = $url

method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode; body = ""): Recallable {.
    base.} =
  ## the hook is a terrible earworm
  var
    headers = newHttpHeaders(massageHeaders(input.getOrDefault("header")))
    text = body
  if text.len == 0 and "body" in input:
    text = input.getOrDefault("body").getStr
    if not headers.hasKey("content-type"):
      headers["content-type"] = "application/x-amz-json-1.0"
  else:
    headers["content-md5"] = base64.encode text.toMD5
  if not headers.hasKey($SecurityToken):
    let session = getEnv("AWS_SESSION_TOKEN", "")
    if session != "":
      headers[$SecurityToken] = session
  result = newRecallable(call, url, headers, text)
  result.atozSign(input.getOrDefault("query"), SHA256)

when not defined(ssl):
  {.error: "use ssl".}