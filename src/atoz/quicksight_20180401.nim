
import
  json, options, hashes, uri, strutils, tables, rest, os, uri, strutils, md5,
  base64, httpcore, sigv4

## auto-generated via openapi macro
## title: Amazon QuickSight
## version: 2018-04-01
## termsOfService: https://aws.amazon.com/service-terms/
## license:
##     name: Apache 2.0 License
##     url: http://www.apache.org/licenses/
## 
## <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the AWS Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
## 
## Amazon Web Services documentation
## https://docs.aws.amazon.com/quicksight/
type
  Scheme* {.pure.} = enum
    Https = "https", Http = "http", Wss = "wss", Ws = "ws"
  ValidatorSignature = proc (path: JsonNode = nil; query: JsonNode = nil;
                             header: JsonNode = nil; formData: JsonNode = nil;
                             body: JsonNode = nil; _: string = ""): JsonNode
  OpenApiRestCall = ref object of RestCall
    validator*: ValidatorSignature
    route*: string
    base*: string
    host*: string
    schemes*: set[Scheme]
    makeUrl*: proc (protocol: Scheme; host: string; base: string; route: string;
                    path: JsonNode; query: JsonNode): Uri

  OpenApiRestCall_402656044 = ref object of OpenApiRestCall
proc hash(scheme: Scheme): Hash {.used.} =
  result = hash(ord(scheme))

proc clone[T: OpenApiRestCall_402656044](t: T): T {.used.} =
  result = T(name: t.name, meth: t.meth, host: t.host, base: t.base,
             route: t.route, schemes: t.schemes, validator: t.validator,
             url: t.url)

proc pickScheme(t: OpenApiRestCall_402656044): Option[Scheme] {.used.} =
  ## select a supported scheme from a set of candidates
  for scheme in Scheme.low .. Scheme.high:
    if scheme notin t.schemes:
      continue
    if scheme in [Scheme.Https, Scheme.Wss]:
      when defined(ssl):
        return some(scheme)
      else:
        continue
    return some(scheme)

proc validateParameter(js: JsonNode; kind: JsonNodeKind; required: bool;
                       default: JsonNode = nil): JsonNode =
  ## ensure an input is of the correct json type and yield
                                                            ## a suitable default value when appropriate
  if js == nil:
    if required:
      if default != nil:
        return validateParameter(default, kind, required = required)
  result = js
  if result == nil:
    assert not required, $kind & " expected; received nil"
    if required:
      result = newJNull()
  else:
    assert js.kind == kind, $kind & " expected; received " & $js.kind

type
  KeyVal {.used.} = tuple[key: string, val: string]
  PathTokenKind = enum
    ConstantSegment, VariableSegment
  PathToken = tuple[kind: PathTokenKind, value: string]
proc queryString(query: JsonNode): string {.used.} =
  var qs: seq[KeyVal]
  if query == nil:
    return ""
  for k, v in query.pairs:
    qs.add (key: k, val: v.getStr)
  result = encodeQuery(qs)

proc hydratePath(input: JsonNode; segments: seq[PathToken]): Option[string] {.
    used.} =
  ## reconstitute a path with constants and variable values taken from json
  var head: string
  if segments.len == 0:
    return some("")
  head = segments[0].value
  case segments[0].kind
  of ConstantSegment:
    discard
  of VariableSegment:
    if head notin input:
      return
    let js = input[head]
    case js.kind
    of JInt, JFloat, JNull, JBool:
      head = $js
    of JString:
      head = js.getStr
    else:
      return
  var remainder = input.hydratePath(segments[1 ..^ 1])
  if remainder.isNone:
    return
  result = some(head & remainder.get)

const
  awsServers = {Scheme.Https: {"ap-northeast-1": "quicksight.ap-northeast-1.amazonaws.com", "ap-southeast-1": "quicksight.ap-southeast-1.amazonaws.com", "us-west-2": "quicksight.us-west-2.amazonaws.com", "eu-west-2": "quicksight.eu-west-2.amazonaws.com", "ap-northeast-3": "quicksight.ap-northeast-3.amazonaws.com", "eu-central-1": "quicksight.eu-central-1.amazonaws.com", "us-east-2": "quicksight.us-east-2.amazonaws.com", "us-east-1": "quicksight.us-east-1.amazonaws.com", "cn-northwest-1": "quicksight.cn-northwest-1.amazonaws.com.cn", "ap-south-1": "quicksight.ap-south-1.amazonaws.com", "eu-north-1": "quicksight.eu-north-1.amazonaws.com", "ap-northeast-2": "quicksight.ap-northeast-2.amazonaws.com", "us-west-1": "quicksight.us-west-1.amazonaws.com", "us-gov-east-1": "quicksight.us-gov-east-1.amazonaws.com", "eu-west-3": "quicksight.eu-west-3.amazonaws.com", "cn-north-1": "quicksight.cn-north-1.amazonaws.com.cn", "sa-east-1": "quicksight.sa-east-1.amazonaws.com", "eu-west-1": "quicksight.eu-west-1.amazonaws.com", "us-gov-west-1": "quicksight.us-gov-west-1.amazonaws.com", "ap-southeast-2": "quicksight.ap-southeast-2.amazonaws.com", "ca-central-1": "quicksight.ca-central-1.amazonaws.com"}.toTable, Scheme.Http: {
      "ap-northeast-1": "quicksight.ap-northeast-1.amazonaws.com",
      "ap-southeast-1": "quicksight.ap-southeast-1.amazonaws.com",
      "us-west-2": "quicksight.us-west-2.amazonaws.com",
      "eu-west-2": "quicksight.eu-west-2.amazonaws.com",
      "ap-northeast-3": "quicksight.ap-northeast-3.amazonaws.com",
      "eu-central-1": "quicksight.eu-central-1.amazonaws.com",
      "us-east-2": "quicksight.us-east-2.amazonaws.com",
      "us-east-1": "quicksight.us-east-1.amazonaws.com",
      "cn-northwest-1": "quicksight.cn-northwest-1.amazonaws.com.cn",
      "ap-south-1": "quicksight.ap-south-1.amazonaws.com",
      "eu-north-1": "quicksight.eu-north-1.amazonaws.com",
      "ap-northeast-2": "quicksight.ap-northeast-2.amazonaws.com",
      "us-west-1": "quicksight.us-west-1.amazonaws.com",
      "us-gov-east-1": "quicksight.us-gov-east-1.amazonaws.com",
      "eu-west-3": "quicksight.eu-west-3.amazonaws.com",
      "cn-north-1": "quicksight.cn-north-1.amazonaws.com.cn",
      "sa-east-1": "quicksight.sa-east-1.amazonaws.com",
      "eu-west-1": "quicksight.eu-west-1.amazonaws.com",
      "us-gov-west-1": "quicksight.us-gov-west-1.amazonaws.com",
      "ap-southeast-2": "quicksight.ap-southeast-2.amazonaws.com",
      "ca-central-1": "quicksight.ca-central-1.amazonaws.com"}.toTable}.toTable
const
  awsServiceName = "quicksight"
method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode;
                body: string = ""): Recallable {.base.}
type
  Call_CreateIngestion_402656489 = ref object of OpenApiRestCall_402656044
proc url_CreateIngestion_402656491(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode;
                                   query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  assert "IngestionId" in path, "`IngestionId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId"),
                 (kind: ConstantSegment, value: "/ingestions/"),
                 (kind: VariableSegment, value: "IngestionId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateIngestion_402656490(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates and starts a new SPICE ingestion on a dataset</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href="https://aws.example.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the AWS Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID of the 
                                                                       ## dataset 
                                                                       ## used 
                                                                       ## in 
                                                                       ## the 
                                                                       ## ingestion.
  ##   
                                                                                    ## IngestionId: JString (required)
                                                                                    ##              
                                                                                    ## : 
                                                                                    ## An 
                                                                                    ## ID 
                                                                                    ## for 
                                                                                    ## the 
                                                                                    ## ingestion.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656492 = path.getOrDefault("AwsAccountId")
  valid_402656492 = validateParameter(valid_402656492, JString, required = true,
                                      default = nil)
  if valid_402656492 != nil:
    section.add "AwsAccountId", valid_402656492
  var valid_402656493 = path.getOrDefault("DataSetId")
  valid_402656493 = validateParameter(valid_402656493, JString, required = true,
                                      default = nil)
  if valid_402656493 != nil:
    section.add "DataSetId", valid_402656493
  var valid_402656494 = path.getOrDefault("IngestionId")
  valid_402656494 = validateParameter(valid_402656494, JString, required = true,
                                      default = nil)
  if valid_402656494 != nil:
    section.add "IngestionId", valid_402656494
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656495 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656495 = validateParameter(valid_402656495, JString,
                                      required = false, default = nil)
  if valid_402656495 != nil:
    section.add "X-Amz-Security-Token", valid_402656495
  var valid_402656496 = header.getOrDefault("X-Amz-Signature")
  valid_402656496 = validateParameter(valid_402656496, JString,
                                      required = false, default = nil)
  if valid_402656496 != nil:
    section.add "X-Amz-Signature", valid_402656496
  var valid_402656497 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656497 = validateParameter(valid_402656497, JString,
                                      required = false, default = nil)
  if valid_402656497 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656497
  var valid_402656498 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656498 = validateParameter(valid_402656498, JString,
                                      required = false, default = nil)
  if valid_402656498 != nil:
    section.add "X-Amz-Algorithm", valid_402656498
  var valid_402656499 = header.getOrDefault("X-Amz-Date")
  valid_402656499 = validateParameter(valid_402656499, JString,
                                      required = false, default = nil)
  if valid_402656499 != nil:
    section.add "X-Amz-Date", valid_402656499
  var valid_402656500 = header.getOrDefault("X-Amz-Credential")
  valid_402656500 = validateParameter(valid_402656500, JString,
                                      required = false, default = nil)
  if valid_402656500 != nil:
    section.add "X-Amz-Credential", valid_402656500
  var valid_402656501 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656501 = validateParameter(valid_402656501, JString,
                                      required = false, default = nil)
  if valid_402656501 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656501
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656502: Call_CreateIngestion_402656489; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates and starts a new SPICE ingestion on a dataset</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href="https://aws.example.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the AWS Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>
                                                                                         ## 
  let valid = call_402656502.validator(path, query, header, formData, body, _)
  let scheme = call_402656502.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656502.makeUrl(scheme.get, call_402656502.host, call_402656502.base,
                                   call_402656502.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656502, uri, valid, _)

proc call*(call_402656503: Call_CreateIngestion_402656489; AwsAccountId: string;
           DataSetId: string; IngestionId: string): Recallable =
  ## createIngestion
  ## <p>Creates and starts a new SPICE ingestion on a dataset</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href="https://aws.example.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the AWS Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ## AwsAccountId: string (required)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ##               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ## : 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ## The 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ## AWS 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ## account 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ## ID.
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## DataSetId: string (required)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## : 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## The 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## ID 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## of 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## the 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## dataset 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## used 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## in 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## the 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ## ingestion.
  ##   
ngestionId: string (required)


n 

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ## for 
the 
ingestion.
  var path_402656504 = newJObject()
  add(path_402656504, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656504, "DataSetId", newJString(DataSetId))
  add(path_402656504, "IngestionId", newJString(IngestionId))
  result = call_402656503.call(path_402656504, nil, nil, nil, nil)

var createIngestion* = Call_CreateIngestion_402656489(name: "createIngestion",
    meth: HttpMethod.HttpPut, host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}",
    validator: validate_CreateIngestion_402656490, base: "/",
    makeUrl: url_CreateIngestion_402656491, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeIngestion_402656294 = ref object of OpenApiRestCall_402656044
proc url_DescribeIngestion_402656296(protocol: Scheme; host: string;
                                     base: string; route: string;
                                     path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  assert "IngestionId" in path, "`IngestionId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId"),
                 (kind: ConstantSegment, value: "/ingestions/"),
                 (kind: VariableSegment, value: "IngestionId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeIngestion_402656295(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes a SPICE ingestion.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID of the 
                                                                       ## dataset 
                                                                       ## used 
                                                                       ## in 
                                                                       ## the 
                                                                       ## ingestion.
  ##   
                                                                                    ## IngestionId: JString (required)
                                                                                    ##              
                                                                                    ## : 
                                                                                    ## An 
                                                                                    ## ID 
                                                                                    ## for 
                                                                                    ## the 
                                                                                    ## ingestion.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656386 = path.getOrDefault("AwsAccountId")
  valid_402656386 = validateParameter(valid_402656386, JString, required = true,
                                      default = nil)
  if valid_402656386 != nil:
    section.add "AwsAccountId", valid_402656386
  var valid_402656387 = path.getOrDefault("DataSetId")
  valid_402656387 = validateParameter(valid_402656387, JString, required = true,
                                      default = nil)
  if valid_402656387 != nil:
    section.add "DataSetId", valid_402656387
  var valid_402656388 = path.getOrDefault("IngestionId")
  valid_402656388 = validateParameter(valid_402656388, JString, required = true,
                                      default = nil)
  if valid_402656388 != nil:
    section.add "IngestionId", valid_402656388
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656389 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656389 = validateParameter(valid_402656389, JString,
                                      required = false, default = nil)
  if valid_402656389 != nil:
    section.add "X-Amz-Security-Token", valid_402656389
  var valid_402656390 = header.getOrDefault("X-Amz-Signature")
  valid_402656390 = validateParameter(valid_402656390, JString,
                                      required = false, default = nil)
  if valid_402656390 != nil:
    section.add "X-Amz-Signature", valid_402656390
  var valid_402656391 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656391 = validateParameter(valid_402656391, JString,
                                      required = false, default = nil)
  if valid_402656391 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656391
  var valid_402656392 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656392 = validateParameter(valid_402656392, JString,
                                      required = false, default = nil)
  if valid_402656392 != nil:
    section.add "X-Amz-Algorithm", valid_402656392
  var valid_402656393 = header.getOrDefault("X-Amz-Date")
  valid_402656393 = validateParameter(valid_402656393, JString,
                                      required = false, default = nil)
  if valid_402656393 != nil:
    section.add "X-Amz-Date", valid_402656393
  var valid_402656394 = header.getOrDefault("X-Amz-Credential")
  valid_402656394 = validateParameter(valid_402656394, JString,
                                      required = false, default = nil)
  if valid_402656394 != nil:
    section.add "X-Amz-Credential", valid_402656394
  var valid_402656395 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656395 = validateParameter(valid_402656395, JString,
                                      required = false, default = nil)
  if valid_402656395 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656395
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656409: Call_DescribeIngestion_402656294;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes a SPICE ingestion.
                                                                                         ## 
  let valid = call_402656409.validator(path, query, header, formData, body, _)
  let scheme = call_402656409.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656409.makeUrl(scheme.get, call_402656409.host, call_402656409.base,
                                   call_402656409.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656409, uri, valid, _)

proc call*(call_402656458: Call_DescribeIngestion_402656294;
           AwsAccountId: string; DataSetId: string; IngestionId: string): Recallable =
  ## describeIngestion
  ## Describes a SPICE ingestion.
  ##   AwsAccountId: string (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: string (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID of the 
                                                                       ## dataset 
                                                                       ## used 
                                                                       ## in 
                                                                       ## the 
                                                                       ## ingestion.
  ##   
                                                                                    ## IngestionId: string (required)
                                                                                    ##              
                                                                                    ## : 
                                                                                    ## An 
                                                                                    ## ID 
                                                                                    ## for 
                                                                                    ## the 
                                                                                    ## ingestion.
  var path_402656459 = newJObject()
  add(path_402656459, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656459, "DataSetId", newJString(DataSetId))
  add(path_402656459, "IngestionId", newJString(IngestionId))
  result = call_402656458.call(path_402656459, nil, nil, nil, nil)

var describeIngestion* = Call_DescribeIngestion_402656294(
    name: "describeIngestion", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}",
    validator: validate_DescribeIngestion_402656295, base: "/",
    makeUrl: url_DescribeIngestion_402656296,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_CancelIngestion_402656505 = ref object of OpenApiRestCall_402656044
proc url_CancelIngestion_402656507(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode;
                                   query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  assert "IngestionId" in path, "`IngestionId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId"),
                 (kind: ConstantSegment, value: "/ingestions/"),
                 (kind: VariableSegment, value: "IngestionId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CancelIngestion_402656506(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Cancels an ongoing ingestion of data into SPICE.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID of the 
                                                                       ## dataset 
                                                                       ## used 
                                                                       ## in 
                                                                       ## the 
                                                                       ## ingestion.
  ##   
                                                                                    ## IngestionId: JString (required)
                                                                                    ##              
                                                                                    ## : 
                                                                                    ## An 
                                                                                    ## ID 
                                                                                    ## for 
                                                                                    ## the 
                                                                                    ## ingestion.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656508 = path.getOrDefault("AwsAccountId")
  valid_402656508 = validateParameter(valid_402656508, JString, required = true,
                                      default = nil)
  if valid_402656508 != nil:
    section.add "AwsAccountId", valid_402656508
  var valid_402656509 = path.getOrDefault("DataSetId")
  valid_402656509 = validateParameter(valid_402656509, JString, required = true,
                                      default = nil)
  if valid_402656509 != nil:
    section.add "DataSetId", valid_402656509
  var valid_402656510 = path.getOrDefault("IngestionId")
  valid_402656510 = validateParameter(valid_402656510, JString, required = true,
                                      default = nil)
  if valid_402656510 != nil:
    section.add "IngestionId", valid_402656510
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656511 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656511 = validateParameter(valid_402656511, JString,
                                      required = false, default = nil)
  if valid_402656511 != nil:
    section.add "X-Amz-Security-Token", valid_402656511
  var valid_402656512 = header.getOrDefault("X-Amz-Signature")
  valid_402656512 = validateParameter(valid_402656512, JString,
                                      required = false, default = nil)
  if valid_402656512 != nil:
    section.add "X-Amz-Signature", valid_402656512
  var valid_402656513 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656513 = validateParameter(valid_402656513, JString,
                                      required = false, default = nil)
  if valid_402656513 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656513
  var valid_402656514 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656514 = validateParameter(valid_402656514, JString,
                                      required = false, default = nil)
  if valid_402656514 != nil:
    section.add "X-Amz-Algorithm", valid_402656514
  var valid_402656515 = header.getOrDefault("X-Amz-Date")
  valid_402656515 = validateParameter(valid_402656515, JString,
                                      required = false, default = nil)
  if valid_402656515 != nil:
    section.add "X-Amz-Date", valid_402656515
  var valid_402656516 = header.getOrDefault("X-Amz-Credential")
  valid_402656516 = validateParameter(valid_402656516, JString,
                                      required = false, default = nil)
  if valid_402656516 != nil:
    section.add "X-Amz-Credential", valid_402656516
  var valid_402656517 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656517 = validateParameter(valid_402656517, JString,
                                      required = false, default = nil)
  if valid_402656517 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656517
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656518: Call_CancelIngestion_402656505; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Cancels an ongoing ingestion of data into SPICE.
                                                                                         ## 
  let valid = call_402656518.validator(path, query, header, formData, body, _)
  let scheme = call_402656518.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656518.makeUrl(scheme.get, call_402656518.host, call_402656518.base,
                                   call_402656518.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656518, uri, valid, _)

proc call*(call_402656519: Call_CancelIngestion_402656505; AwsAccountId: string;
           DataSetId: string; IngestionId: string): Recallable =
  ## cancelIngestion
  ## Cancels an ongoing ingestion of data into SPICE.
  ##   AwsAccountId: string (required)
                                                     ##               : The AWS account ID.
  ##   
                                                                                           ## DataSetId: string (required)
                                                                                           ##            
                                                                                           ## : 
                                                                                           ## The 
                                                                                           ## ID 
                                                                                           ## of 
                                                                                           ## the 
                                                                                           ## dataset 
                                                                                           ## used 
                                                                                           ## in 
                                                                                           ## the 
                                                                                           ## ingestion.
  ##   
                                                                                                        ## IngestionId: string (required)
                                                                                                        ##              
                                                                                                        ## : 
                                                                                                        ## An 
                                                                                                        ## ID 
                                                                                                        ## for 
                                                                                                        ## the 
                                                                                                        ## ingestion.
  var path_402656520 = newJObject()
  add(path_402656520, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656520, "DataSetId", newJString(DataSetId))
  add(path_402656520, "IngestionId", newJString(IngestionId))
  result = call_402656519.call(path_402656520, nil, nil, nil, nil)

var cancelIngestion* = Call_CancelIngestion_402656505(name: "cancelIngestion",
    meth: HttpMethod.HttpDelete, host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}",
    validator: validate_CancelIngestion_402656506, base: "/",
    makeUrl: url_CancelIngestion_402656507, schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateDashboard_402656539 = ref object of OpenApiRestCall_402656044
proc url_UpdateDashboard_402656541(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode;
                                   query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateDashboard_402656540(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Updates a dashboard in an AWS account.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the dashboard that you're updating.
  ##   
                                                                                                                               ## DashboardId: JString (required)
                                                                                                                               ##              
                                                                                                                               ## : 
                                                                                                                               ## The 
                                                                                                                               ## ID 
                                                                                                                               ## for 
                                                                                                                               ## the 
                                                                                                                               ## dashboard.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656542 = path.getOrDefault("AwsAccountId")
  valid_402656542 = validateParameter(valid_402656542, JString, required = true,
                                      default = nil)
  if valid_402656542 != nil:
    section.add "AwsAccountId", valid_402656542
  var valid_402656543 = path.getOrDefault("DashboardId")
  valid_402656543 = validateParameter(valid_402656543, JString, required = true,
                                      default = nil)
  if valid_402656543 != nil:
    section.add "DashboardId", valid_402656543
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656544 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656544 = validateParameter(valid_402656544, JString,
                                      required = false, default = nil)
  if valid_402656544 != nil:
    section.add "X-Amz-Security-Token", valid_402656544
  var valid_402656545 = header.getOrDefault("X-Amz-Signature")
  valid_402656545 = validateParameter(valid_402656545, JString,
                                      required = false, default = nil)
  if valid_402656545 != nil:
    section.add "X-Amz-Signature", valid_402656545
  var valid_402656546 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656546 = validateParameter(valid_402656546, JString,
                                      required = false, default = nil)
  if valid_402656546 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656546
  var valid_402656547 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656547 = validateParameter(valid_402656547, JString,
                                      required = false, default = nil)
  if valid_402656547 != nil:
    section.add "X-Amz-Algorithm", valid_402656547
  var valid_402656548 = header.getOrDefault("X-Amz-Date")
  valid_402656548 = validateParameter(valid_402656548, JString,
                                      required = false, default = nil)
  if valid_402656548 != nil:
    section.add "X-Amz-Date", valid_402656548
  var valid_402656549 = header.getOrDefault("X-Amz-Credential")
  valid_402656549 = validateParameter(valid_402656549, JString,
                                      required = false, default = nil)
  if valid_402656549 != nil:
    section.add "X-Amz-Credential", valid_402656549
  var valid_402656550 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656550 = validateParameter(valid_402656550, JString,
                                      required = false, default = nil)
  if valid_402656550 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656550
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656552: Call_UpdateDashboard_402656539; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates a dashboard in an AWS account.
                                                                                         ## 
  let valid = call_402656552.validator(path, query, header, formData, body, _)
  let scheme = call_402656552.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656552.makeUrl(scheme.get, call_402656552.host, call_402656552.base,
                                   call_402656552.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656552, uri, valid, _)

proc call*(call_402656553: Call_UpdateDashboard_402656539; AwsAccountId: string;
           DashboardId: string; body: JsonNode): Recallable =
  ## updateDashboard
  ## Updates a dashboard in an AWS account.
  ##   AwsAccountId: string (required)
                                           ##               : The ID of the AWS account that contains the dashboard that you're updating.
  ##   
                                                                                                                                         ## DashboardId: string (required)
                                                                                                                                         ##              
                                                                                                                                         ## : 
                                                                                                                                         ## The 
                                                                                                                                         ## ID 
                                                                                                                                         ## for 
                                                                                                                                         ## the 
                                                                                                                                         ## dashboard.
  ##   
                                                                                                                                                      ## body: JObject (required)
  var path_402656554 = newJObject()
  var body_402656555 = newJObject()
  add(path_402656554, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656554, "DashboardId", newJString(DashboardId))
  if body != nil:
    body_402656555 = body
  result = call_402656553.call(path_402656554, nil, nil, nil, body_402656555)

var updateDashboard* = Call_UpdateDashboard_402656539(name: "updateDashboard",
    meth: HttpMethod.HttpPut, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}",
    validator: validate_UpdateDashboard_402656540, base: "/",
    makeUrl: url_UpdateDashboard_402656541, schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateDashboard_402656556 = ref object of OpenApiRestCall_402656044
proc url_CreateDashboard_402656558(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode;
                                   query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateDashboard_402656557(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates a dashboard from a template. To first create a template, see the CreateTemplate API operation.</p> <p>A dashboard is an entity in QuickSight that identifies QuickSight reports, created from analyses. You can share QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. The <code>CreateDashboard</code>, <code>DescribeDashboard</code>, and <code>ListDashboardsByUser</code> API operations act on the dashboard entity. If you have the correct permissions, you can create a dashboard from a template that exists in a different AWS account.</p>
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account where you want to create the dashboard.
  ##   
                                                                                                                     ## DashboardId: JString (required)
                                                                                                                     ##              
                                                                                                                     ## : 
                                                                                                                     ## The 
                                                                                                                     ## ID 
                                                                                                                     ## for 
                                                                                                                     ## the 
                                                                                                                     ## dashboard, 
                                                                                                                     ## also 
                                                                                                                     ## added 
                                                                                                                     ## to 
                                                                                                                     ## the 
                                                                                                                     ## IAM 
                                                                                                                     ## policy.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656559 = path.getOrDefault("AwsAccountId")
  valid_402656559 = validateParameter(valid_402656559, JString, required = true,
                                      default = nil)
  if valid_402656559 != nil:
    section.add "AwsAccountId", valid_402656559
  var valid_402656560 = path.getOrDefault("DashboardId")
  valid_402656560 = validateParameter(valid_402656560, JString, required = true,
                                      default = nil)
  if valid_402656560 != nil:
    section.add "DashboardId", valid_402656560
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656561 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656561 = validateParameter(valid_402656561, JString,
                                      required = false, default = nil)
  if valid_402656561 != nil:
    section.add "X-Amz-Security-Token", valid_402656561
  var valid_402656562 = header.getOrDefault("X-Amz-Signature")
  valid_402656562 = validateParameter(valid_402656562, JString,
                                      required = false, default = nil)
  if valid_402656562 != nil:
    section.add "X-Amz-Signature", valid_402656562
  var valid_402656563 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656563 = validateParameter(valid_402656563, JString,
                                      required = false, default = nil)
  if valid_402656563 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656563
  var valid_402656564 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656564 = validateParameter(valid_402656564, JString,
                                      required = false, default = nil)
  if valid_402656564 != nil:
    section.add "X-Amz-Algorithm", valid_402656564
  var valid_402656565 = header.getOrDefault("X-Amz-Date")
  valid_402656565 = validateParameter(valid_402656565, JString,
                                      required = false, default = nil)
  if valid_402656565 != nil:
    section.add "X-Amz-Date", valid_402656565
  var valid_402656566 = header.getOrDefault("X-Amz-Credential")
  valid_402656566 = validateParameter(valid_402656566, JString,
                                      required = false, default = nil)
  if valid_402656566 != nil:
    section.add "X-Amz-Credential", valid_402656566
  var valid_402656567 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656567 = validateParameter(valid_402656567, JString,
                                      required = false, default = nil)
  if valid_402656567 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656567
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656569: Call_CreateDashboard_402656556; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates a dashboard from a template. To first create a template, see the CreateTemplate API operation.</p> <p>A dashboard is an entity in QuickSight that identifies QuickSight reports, created from analyses. You can share QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. The <code>CreateDashboard</code>, <code>DescribeDashboard</code>, and <code>ListDashboardsByUser</code> API operations act on the dashboard entity. If you have the correct permissions, you can create a dashboard from a template that exists in a different AWS account.</p>
                                                                                         ## 
  let valid = call_402656569.validator(path, query, header, formData, body, _)
  let scheme = call_402656569.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656569.makeUrl(scheme.get, call_402656569.host, call_402656569.base,
                                   call_402656569.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656569, uri, valid, _)

proc call*(call_402656570: Call_CreateDashboard_402656556; AwsAccountId: string;
           DashboardId: string; body: JsonNode): Recallable =
  ## createDashboard
  ## <p>Creates a dashboard from a template. To first create a template, see the CreateTemplate API operation.</p> <p>A dashboard is an entity in QuickSight that identifies QuickSight reports, created from analyses. You can share QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. The <code>CreateDashboard</code>, <code>DescribeDashboard</code>, and <code>ListDashboardsByUser</code> API operations act on the dashboard entity. If you have the correct permissions, you can create a dashboard from a template that exists in a different AWS account.</p>
  ##   
wsAccountId: string (required)


he 

of 
the 

account 
where 
you 
want 
to 
create 
the 
dashboard.
  ##   
ashboardId: string (required)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ##              

he 

for 
the 
dashboard, 
also 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## added 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## to 
the 

policy.
  ##   
body: JObject (required)
  var path_402656571 = newJObject()
  var body_402656572 = newJObject()
  add(path_402656571, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656571, "DashboardId", newJString(DashboardId))
  if body != nil:
    body_402656572 = body
  result = call_402656570.call(path_402656571, nil, nil, nil, body_402656572)

var createDashboard* = Call_CreateDashboard_402656556(name: "createDashboard",
    meth: HttpMethod.HttpPost, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}",
    validator: validate_CreateDashboard_402656557, base: "/",
    makeUrl: url_CreateDashboard_402656558, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeDashboard_402656521 = ref object of OpenApiRestCall_402656044
proc url_DescribeDashboard_402656523(protocol: Scheme; host: string;
                                     base: string; route: string;
                                     path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeDashboard_402656522(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Provides a summary for a dashboard.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the dashboard that you're describing.
  ##   
                                                                                                                                 ## DashboardId: JString (required)
                                                                                                                                 ##              
                                                                                                                                 ## : 
                                                                                                                                 ## The 
                                                                                                                                 ## ID 
                                                                                                                                 ## for 
                                                                                                                                 ## the 
                                                                                                                                 ## dashboard.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656524 = path.getOrDefault("AwsAccountId")
  valid_402656524 = validateParameter(valid_402656524, JString, required = true,
                                      default = nil)
  if valid_402656524 != nil:
    section.add "AwsAccountId", valid_402656524
  var valid_402656525 = path.getOrDefault("DashboardId")
  valid_402656525 = validateParameter(valid_402656525, JString, required = true,
                                      default = nil)
  if valid_402656525 != nil:
    section.add "DashboardId", valid_402656525
  result.add "path", section
  ## parameters in `query` object:
  ##   alias-name: JString
                                  ##             : The alias name.
  ##   
                                                                  ## version-number: JInt
                                                                  ##                 
                                                                  ## : 
                                                                  ## The version number for the 
                                                                  ## dashboard. 
                                                                  ## If 
                                                                  ## a version number isn't passed, the latest 
                                                                  ## published 
                                                                  ## dashboard 
                                                                  ## version 
                                                                  ## is 
                                                                  ## described. 
  section = newJObject()
  var valid_402656526 = query.getOrDefault("alias-name")
  valid_402656526 = validateParameter(valid_402656526, JString,
                                      required = false, default = nil)
  if valid_402656526 != nil:
    section.add "alias-name", valid_402656526
  var valid_402656527 = query.getOrDefault("version-number")
  valid_402656527 = validateParameter(valid_402656527, JInt, required = false,
                                      default = nil)
  if valid_402656527 != nil:
    section.add "version-number", valid_402656527
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656528 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656528 = validateParameter(valid_402656528, JString,
                                      required = false, default = nil)
  if valid_402656528 != nil:
    section.add "X-Amz-Security-Token", valid_402656528
  var valid_402656529 = header.getOrDefault("X-Amz-Signature")
  valid_402656529 = validateParameter(valid_402656529, JString,
                                      required = false, default = nil)
  if valid_402656529 != nil:
    section.add "X-Amz-Signature", valid_402656529
  var valid_402656530 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656530 = validateParameter(valid_402656530, JString,
                                      required = false, default = nil)
  if valid_402656530 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656530
  var valid_402656531 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656531 = validateParameter(valid_402656531, JString,
                                      required = false, default = nil)
  if valid_402656531 != nil:
    section.add "X-Amz-Algorithm", valid_402656531
  var valid_402656532 = header.getOrDefault("X-Amz-Date")
  valid_402656532 = validateParameter(valid_402656532, JString,
                                      required = false, default = nil)
  if valid_402656532 != nil:
    section.add "X-Amz-Date", valid_402656532
  var valid_402656533 = header.getOrDefault("X-Amz-Credential")
  valid_402656533 = validateParameter(valid_402656533, JString,
                                      required = false, default = nil)
  if valid_402656533 != nil:
    section.add "X-Amz-Credential", valid_402656533
  var valid_402656534 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656534 = validateParameter(valid_402656534, JString,
                                      required = false, default = nil)
  if valid_402656534 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656534
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656535: Call_DescribeDashboard_402656521;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Provides a summary for a dashboard.
                                                                                         ## 
  let valid = call_402656535.validator(path, query, header, formData, body, _)
  let scheme = call_402656535.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656535.makeUrl(scheme.get, call_402656535.host, call_402656535.base,
                                   call_402656535.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656535, uri, valid, _)

proc call*(call_402656536: Call_DescribeDashboard_402656521;
           AwsAccountId: string; DashboardId: string; aliasName: string = "";
           versionNumber: int = 0): Recallable =
  ## describeDashboard
  ## Provides a summary for a dashboard.
  ##   aliasName: string
                                        ##            : The alias name.
  ##   
                                                                       ## AwsAccountId: string (required)
                                                                       ##               
                                                                       ## : 
                                                                       ## The ID of the AWS 
                                                                       ## account 
                                                                       ## that 
                                                                       ## contains 
                                                                       ## the 
                                                                       ## dashboard 
                                                                       ## that 
                                                                       ## you're 
                                                                       ## describing.
  ##   
                                                                                     ## DashboardId: string (required)
                                                                                     ##              
                                                                                     ## : 
                                                                                     ## The 
                                                                                     ## ID 
                                                                                     ## for 
                                                                                     ## the 
                                                                                     ## dashboard.
  ##   
                                                                                                  ## versionNumber: int
                                                                                                  ##                
                                                                                                  ## : 
                                                                                                  ## The 
                                                                                                  ## version 
                                                                                                  ## number 
                                                                                                  ## for 
                                                                                                  ## the 
                                                                                                  ## dashboard. 
                                                                                                  ## If 
                                                                                                  ## a 
                                                                                                  ## version 
                                                                                                  ## number 
                                                                                                  ## isn't 
                                                                                                  ## passed, 
                                                                                                  ## the 
                                                                                                  ## latest 
                                                                                                  ## published 
                                                                                                  ## dashboard 
                                                                                                  ## version 
                                                                                                  ## is 
                                                                                                  ## described. 
  var path_402656537 = newJObject()
  var query_402656538 = newJObject()
  add(query_402656538, "alias-name", newJString(aliasName))
  add(path_402656537, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656537, "DashboardId", newJString(DashboardId))
  add(query_402656538, "version-number", newJInt(versionNumber))
  result = call_402656536.call(path_402656537, query_402656538, nil, nil, nil)

var describeDashboard* = Call_DescribeDashboard_402656521(
    name: "describeDashboard", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}",
    validator: validate_DescribeDashboard_402656522, base: "/",
    makeUrl: url_DescribeDashboard_402656523,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteDashboard_402656573 = ref object of OpenApiRestCall_402656044
proc url_DeleteDashboard_402656575(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode;
                                   query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteDashboard_402656574(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a dashboard.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the dashboard that you're deleting.
  ##   
                                                                                                                               ## DashboardId: JString (required)
                                                                                                                               ##              
                                                                                                                               ## : 
                                                                                                                               ## The 
                                                                                                                               ## ID 
                                                                                                                               ## for 
                                                                                                                               ## the 
                                                                                                                               ## dashboard.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656576 = path.getOrDefault("AwsAccountId")
  valid_402656576 = validateParameter(valid_402656576, JString, required = true,
                                      default = nil)
  if valid_402656576 != nil:
    section.add "AwsAccountId", valid_402656576
  var valid_402656577 = path.getOrDefault("DashboardId")
  valid_402656577 = validateParameter(valid_402656577, JString, required = true,
                                      default = nil)
  if valid_402656577 != nil:
    section.add "DashboardId", valid_402656577
  result.add "path", section
  ## parameters in `query` object:
  ##   version-number: JInt
                                  ##                 : The version number of the dashboard. If the version number property is provided, only the specified version of the dashboard is deleted.
  section = newJObject()
  var valid_402656578 = query.getOrDefault("version-number")
  valid_402656578 = validateParameter(valid_402656578, JInt, required = false,
                                      default = nil)
  if valid_402656578 != nil:
    section.add "version-number", valid_402656578
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656579 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656579 = validateParameter(valid_402656579, JString,
                                      required = false, default = nil)
  if valid_402656579 != nil:
    section.add "X-Amz-Security-Token", valid_402656579
  var valid_402656580 = header.getOrDefault("X-Amz-Signature")
  valid_402656580 = validateParameter(valid_402656580, JString,
                                      required = false, default = nil)
  if valid_402656580 != nil:
    section.add "X-Amz-Signature", valid_402656580
  var valid_402656581 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656581 = validateParameter(valid_402656581, JString,
                                      required = false, default = nil)
  if valid_402656581 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656581
  var valid_402656582 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656582 = validateParameter(valid_402656582, JString,
                                      required = false, default = nil)
  if valid_402656582 != nil:
    section.add "X-Amz-Algorithm", valid_402656582
  var valid_402656583 = header.getOrDefault("X-Amz-Date")
  valid_402656583 = validateParameter(valid_402656583, JString,
                                      required = false, default = nil)
  if valid_402656583 != nil:
    section.add "X-Amz-Date", valid_402656583
  var valid_402656584 = header.getOrDefault("X-Amz-Credential")
  valid_402656584 = validateParameter(valid_402656584, JString,
                                      required = false, default = nil)
  if valid_402656584 != nil:
    section.add "X-Amz-Credential", valid_402656584
  var valid_402656585 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656585 = validateParameter(valid_402656585, JString,
                                      required = false, default = nil)
  if valid_402656585 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656585
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656586: Call_DeleteDashboard_402656573; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a dashboard.
                                                                                         ## 
  let valid = call_402656586.validator(path, query, header, formData, body, _)
  let scheme = call_402656586.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656586.makeUrl(scheme.get, call_402656586.host, call_402656586.base,
                                   call_402656586.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656586, uri, valid, _)

proc call*(call_402656587: Call_DeleteDashboard_402656573; AwsAccountId: string;
           DashboardId: string; versionNumber: int = 0): Recallable =
  ## deleteDashboard
  ## Deletes a dashboard.
  ##   AwsAccountId: string (required)
                         ##               : The ID of the AWS account that contains the dashboard that you're deleting.
  ##   
                                                                                                                       ## DashboardId: string (required)
                                                                                                                       ##              
                                                                                                                       ## : 
                                                                                                                       ## The 
                                                                                                                       ## ID 
                                                                                                                       ## for 
                                                                                                                       ## the 
                                                                                                                       ## dashboard.
  ##   
                                                                                                                                    ## versionNumber: int
                                                                                                                                    ##                
                                                                                                                                    ## : 
                                                                                                                                    ## The 
                                                                                                                                    ## version 
                                                                                                                                    ## number 
                                                                                                                                    ## of 
                                                                                                                                    ## the 
                                                                                                                                    ## dashboard. 
                                                                                                                                    ## If 
                                                                                                                                    ## the 
                                                                                                                                    ## version 
                                                                                                                                    ## number 
                                                                                                                                    ## property 
                                                                                                                                    ## is 
                                                                                                                                    ## provided, 
                                                                                                                                    ## only 
                                                                                                                                    ## the 
                                                                                                                                    ## specified 
                                                                                                                                    ## version 
                                                                                                                                    ## of 
                                                                                                                                    ## the 
                                                                                                                                    ## dashboard 
                                                                                                                                    ## is 
                                                                                                                                    ## deleted.
  var path_402656588 = newJObject()
  var query_402656589 = newJObject()
  add(path_402656588, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656588, "DashboardId", newJString(DashboardId))
  add(query_402656589, "version-number", newJInt(versionNumber))
  result = call_402656587.call(path_402656588, query_402656589, nil, nil, nil)

var deleteDashboard* = Call_DeleteDashboard_402656573(name: "deleteDashboard",
    meth: HttpMethod.HttpDelete, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}",
    validator: validate_DeleteDashboard_402656574, base: "/",
    makeUrl: url_DeleteDashboard_402656575, schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateDataSet_402656609 = ref object of OpenApiRestCall_402656044
proc url_CreateDataSet_402656611(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateDataSet_402656610(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates a dataset.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656612 = path.getOrDefault("AwsAccountId")
  valid_402656612 = validateParameter(valid_402656612, JString, required = true,
                                      default = nil)
  if valid_402656612 != nil:
    section.add "AwsAccountId", valid_402656612
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656613 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656613 = validateParameter(valid_402656613, JString,
                                      required = false, default = nil)
  if valid_402656613 != nil:
    section.add "X-Amz-Security-Token", valid_402656613
  var valid_402656614 = header.getOrDefault("X-Amz-Signature")
  valid_402656614 = validateParameter(valid_402656614, JString,
                                      required = false, default = nil)
  if valid_402656614 != nil:
    section.add "X-Amz-Signature", valid_402656614
  var valid_402656615 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656615 = validateParameter(valid_402656615, JString,
                                      required = false, default = nil)
  if valid_402656615 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656615
  var valid_402656616 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656616 = validateParameter(valid_402656616, JString,
                                      required = false, default = nil)
  if valid_402656616 != nil:
    section.add "X-Amz-Algorithm", valid_402656616
  var valid_402656617 = header.getOrDefault("X-Amz-Date")
  valid_402656617 = validateParameter(valid_402656617, JString,
                                      required = false, default = nil)
  if valid_402656617 != nil:
    section.add "X-Amz-Date", valid_402656617
  var valid_402656618 = header.getOrDefault("X-Amz-Credential")
  valid_402656618 = validateParameter(valid_402656618, JString,
                                      required = false, default = nil)
  if valid_402656618 != nil:
    section.add "X-Amz-Credential", valid_402656618
  var valid_402656619 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656619 = validateParameter(valid_402656619, JString,
                                      required = false, default = nil)
  if valid_402656619 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656619
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656621: Call_CreateDataSet_402656609; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates a dataset.
                                                                                         ## 
  let valid = call_402656621.validator(path, query, header, formData, body, _)
  let scheme = call_402656621.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656621.makeUrl(scheme.get, call_402656621.host, call_402656621.base,
                                   call_402656621.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656621, uri, valid, _)

proc call*(call_402656622: Call_CreateDataSet_402656609; AwsAccountId: string;
           body: JsonNode): Recallable =
  ## createDataSet
  ## Creates a dataset.
  ##   AwsAccountId: string (required)
                       ##               : The AWS account ID.
  ##   body: JObject (required)
  var path_402656623 = newJObject()
  var body_402656624 = newJObject()
  add(path_402656623, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656624 = body
  result = call_402656622.call(path_402656623, nil, nil, nil, body_402656624)

var createDataSet* = Call_CreateDataSet_402656609(name: "createDataSet",
    meth: HttpMethod.HttpPost, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets",
    validator: validate_CreateDataSet_402656610, base: "/",
    makeUrl: url_CreateDataSet_402656611, schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListDataSets_402656590 = ref object of OpenApiRestCall_402656044
proc url_ListDataSets_402656592(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListDataSets_402656591(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Lists all of the datasets belonging to the current AWS account in an AWS Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656593 = path.getOrDefault("AwsAccountId")
  valid_402656593 = validateParameter(valid_402656593, JString, required = true,
                                      default = nil)
  if valid_402656593 != nil:
    section.add "AwsAccountId", valid_402656593
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## MaxResults: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## Pagination 
                                                                                                             ## limit
  ##   
                                                                                                                     ## NextToken: JString
                                                                                                                     ##            
                                                                                                                     ## : 
                                                                                                                     ## Pagination 
                                                                                                                     ## token
  ##   
                                                                                                                             ## next-token: JString
                                                                                                                             ##             
                                                                                                                             ## : 
                                                                                                                             ## The 
                                                                                                                             ## token 
                                                                                                                             ## for 
                                                                                                                             ## the 
                                                                                                                             ## next 
                                                                                                                             ## set 
                                                                                                                             ## of 
                                                                                                                             ## results, 
                                                                                                                             ## or 
                                                                                                                             ## null 
                                                                                                                             ## if 
                                                                                                                             ## there 
                                                                                                                             ## are 
                                                                                                                             ## no 
                                                                                                                             ## more 
                                                                                                                             ## results.
  section = newJObject()
  var valid_402656594 = query.getOrDefault("max-results")
  valid_402656594 = validateParameter(valid_402656594, JInt, required = false,
                                      default = nil)
  if valid_402656594 != nil:
    section.add "max-results", valid_402656594
  var valid_402656595 = query.getOrDefault("MaxResults")
  valid_402656595 = validateParameter(valid_402656595, JString,
                                      required = false, default = nil)
  if valid_402656595 != nil:
    section.add "MaxResults", valid_402656595
  var valid_402656596 = query.getOrDefault("NextToken")
  valid_402656596 = validateParameter(valid_402656596, JString,
                                      required = false, default = nil)
  if valid_402656596 != nil:
    section.add "NextToken", valid_402656596
  var valid_402656597 = query.getOrDefault("next-token")
  valid_402656597 = validateParameter(valid_402656597, JString,
                                      required = false, default = nil)
  if valid_402656597 != nil:
    section.add "next-token", valid_402656597
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656598 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656598 = validateParameter(valid_402656598, JString,
                                      required = false, default = nil)
  if valid_402656598 != nil:
    section.add "X-Amz-Security-Token", valid_402656598
  var valid_402656599 = header.getOrDefault("X-Amz-Signature")
  valid_402656599 = validateParameter(valid_402656599, JString,
                                      required = false, default = nil)
  if valid_402656599 != nil:
    section.add "X-Amz-Signature", valid_402656599
  var valid_402656600 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656600 = validateParameter(valid_402656600, JString,
                                      required = false, default = nil)
  if valid_402656600 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656600
  var valid_402656601 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656601 = validateParameter(valid_402656601, JString,
                                      required = false, default = nil)
  if valid_402656601 != nil:
    section.add "X-Amz-Algorithm", valid_402656601
  var valid_402656602 = header.getOrDefault("X-Amz-Date")
  valid_402656602 = validateParameter(valid_402656602, JString,
                                      required = false, default = nil)
  if valid_402656602 != nil:
    section.add "X-Amz-Date", valid_402656602
  var valid_402656603 = header.getOrDefault("X-Amz-Credential")
  valid_402656603 = validateParameter(valid_402656603, JString,
                                      required = false, default = nil)
  if valid_402656603 != nil:
    section.add "X-Amz-Credential", valid_402656603
  var valid_402656604 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656604 = validateParameter(valid_402656604, JString,
                                      required = false, default = nil)
  if valid_402656604 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656604
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656605: Call_ListDataSets_402656590; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Lists all of the datasets belonging to the current AWS account in an AWS Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>
                                                                                         ## 
  let valid = call_402656605.validator(path, query, header, formData, body, _)
  let scheme = call_402656605.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656605.makeUrl(scheme.get, call_402656605.host, call_402656605.base,
                                   call_402656605.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656605, uri, valid, _)

proc call*(call_402656606: Call_ListDataSets_402656590; AwsAccountId: string;
           maxResults: int = 0; MaxResults: string = ""; NextToken: string = "";
           nextToken: string = ""): Recallable =
  ## listDataSets
  ## <p>Lists all of the datasets belonging to the current AWS account in an AWS Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>
  ##   
                                                                                                                                                                                                ## AwsAccountId: string (required)
                                                                                                                                                                                                ##               
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## AWS 
                                                                                                                                                                                                ## account 
                                                                                                                                                                                                ## ID.
  ##   
                                                                                                                                                                                                      ## maxResults: int
                                                                                                                                                                                                      ##             
                                                                                                                                                                                                      ## : 
                                                                                                                                                                                                      ## The 
                                                                                                                                                                                                      ## maximum 
                                                                                                                                                                                                      ## number 
                                                                                                                                                                                                      ## of 
                                                                                                                                                                                                      ## results 
                                                                                                                                                                                                      ## to 
                                                                                                                                                                                                      ## be 
                                                                                                                                                                                                      ## returned 
                                                                                                                                                                                                      ## per 
                                                                                                                                                                                                      ## request.
  ##   
                                                                                                                                                                                                                 ## MaxResults: string
                                                                                                                                                                                                                 ##             
                                                                                                                                                                                                                 ## : 
                                                                                                                                                                                                                 ## Pagination 
                                                                                                                                                                                                                 ## limit
  ##   
                                                                                                                                                                                                                         ## NextToken: string
                                                                                                                                                                                                                         ##            
                                                                                                                                                                                                                         ## : 
                                                                                                                                                                                                                         ## Pagination 
                                                                                                                                                                                                                         ## token
  ##   
                                                                                                                                                                                                                                 ## nextToken: string
                                                                                                                                                                                                                                 ##            
                                                                                                                                                                                                                                 ## : 
                                                                                                                                                                                                                                 ## The 
                                                                                                                                                                                                                                 ## token 
                                                                                                                                                                                                                                 ## for 
                                                                                                                                                                                                                                 ## the 
                                                                                                                                                                                                                                 ## next 
                                                                                                                                                                                                                                 ## set 
                                                                                                                                                                                                                                 ## of 
                                                                                                                                                                                                                                 ## results, 
                                                                                                                                                                                                                                 ## or 
                                                                                                                                                                                                                                 ## null 
                                                                                                                                                                                                                                 ## if 
                                                                                                                                                                                                                                 ## there 
                                                                                                                                                                                                                                 ## are 
                                                                                                                                                                                                                                 ## no 
                                                                                                                                                                                                                                 ## more 
                                                                                                                                                                                                                                 ## results.
  var path_402656607 = newJObject()
  var query_402656608 = newJObject()
  add(path_402656607, "AwsAccountId", newJString(AwsAccountId))
  add(query_402656608, "max-results", newJInt(maxResults))
  add(query_402656608, "MaxResults", newJString(MaxResults))
  add(query_402656608, "NextToken", newJString(NextToken))
  add(query_402656608, "next-token", newJString(nextToken))
  result = call_402656606.call(path_402656607, query_402656608, nil, nil, nil)

var listDataSets* = Call_ListDataSets_402656590(name: "listDataSets",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets",
    validator: validate_ListDataSets_402656591, base: "/",
    makeUrl: url_ListDataSets_402656592, schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateDataSource_402656644 = ref object of OpenApiRestCall_402656044
proc url_CreateDataSource_402656646(protocol: Scheme; host: string;
                                    base: string; route: string; path: JsonNode;
                                    query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sources")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateDataSource_402656645(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates a data source.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656647 = path.getOrDefault("AwsAccountId")
  valid_402656647 = validateParameter(valid_402656647, JString, required = true,
                                      default = nil)
  if valid_402656647 != nil:
    section.add "AwsAccountId", valid_402656647
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656648 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656648 = validateParameter(valid_402656648, JString,
                                      required = false, default = nil)
  if valid_402656648 != nil:
    section.add "X-Amz-Security-Token", valid_402656648
  var valid_402656649 = header.getOrDefault("X-Amz-Signature")
  valid_402656649 = validateParameter(valid_402656649, JString,
                                      required = false, default = nil)
  if valid_402656649 != nil:
    section.add "X-Amz-Signature", valid_402656649
  var valid_402656650 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656650 = validateParameter(valid_402656650, JString,
                                      required = false, default = nil)
  if valid_402656650 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656650
  var valid_402656651 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656651 = validateParameter(valid_402656651, JString,
                                      required = false, default = nil)
  if valid_402656651 != nil:
    section.add "X-Amz-Algorithm", valid_402656651
  var valid_402656652 = header.getOrDefault("X-Amz-Date")
  valid_402656652 = validateParameter(valid_402656652, JString,
                                      required = false, default = nil)
  if valid_402656652 != nil:
    section.add "X-Amz-Date", valid_402656652
  var valid_402656653 = header.getOrDefault("X-Amz-Credential")
  valid_402656653 = validateParameter(valid_402656653, JString,
                                      required = false, default = nil)
  if valid_402656653 != nil:
    section.add "X-Amz-Credential", valid_402656653
  var valid_402656654 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656654 = validateParameter(valid_402656654, JString,
                                      required = false, default = nil)
  if valid_402656654 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656654
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656656: Call_CreateDataSource_402656644;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates a data source.
                                                                                         ## 
  let valid = call_402656656.validator(path, query, header, formData, body, _)
  let scheme = call_402656656.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656656.makeUrl(scheme.get, call_402656656.host, call_402656656.base,
                                   call_402656656.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656656, uri, valid, _)

proc call*(call_402656657: Call_CreateDataSource_402656644;
           AwsAccountId: string; body: JsonNode): Recallable =
  ## createDataSource
  ## Creates a data source.
  ##   AwsAccountId: string (required)
                           ##               : The AWS account ID.
  ##   body: JObject (required)
  var path_402656658 = newJObject()
  var body_402656659 = newJObject()
  add(path_402656658, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656659 = body
  result = call_402656657.call(path_402656658, nil, nil, nil, body_402656659)

var createDataSource* = Call_CreateDataSource_402656644(
    name: "createDataSource", meth: HttpMethod.HttpPost,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sources",
    validator: validate_CreateDataSource_402656645, base: "/",
    makeUrl: url_CreateDataSource_402656646,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListDataSources_402656625 = ref object of OpenApiRestCall_402656044
proc url_ListDataSources_402656627(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode;
                                   query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sources")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListDataSources_402656626(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists data sources in current AWS Region that belong to this AWS account.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656628 = path.getOrDefault("AwsAccountId")
  valid_402656628 = validateParameter(valid_402656628, JString, required = true,
                                      default = nil)
  if valid_402656628 != nil:
    section.add "AwsAccountId", valid_402656628
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## MaxResults: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## Pagination 
                                                                                                             ## limit
  ##   
                                                                                                                     ## NextToken: JString
                                                                                                                     ##            
                                                                                                                     ## : 
                                                                                                                     ## Pagination 
                                                                                                                     ## token
  ##   
                                                                                                                             ## next-token: JString
                                                                                                                             ##             
                                                                                                                             ## : 
                                                                                                                             ## The 
                                                                                                                             ## token 
                                                                                                                             ## for 
                                                                                                                             ## the 
                                                                                                                             ## next 
                                                                                                                             ## set 
                                                                                                                             ## of 
                                                                                                                             ## results, 
                                                                                                                             ## or 
                                                                                                                             ## null 
                                                                                                                             ## if 
                                                                                                                             ## there 
                                                                                                                             ## are 
                                                                                                                             ## no 
                                                                                                                             ## more 
                                                                                                                             ## results.
  section = newJObject()
  var valid_402656629 = query.getOrDefault("max-results")
  valid_402656629 = validateParameter(valid_402656629, JInt, required = false,
                                      default = nil)
  if valid_402656629 != nil:
    section.add "max-results", valid_402656629
  var valid_402656630 = query.getOrDefault("MaxResults")
  valid_402656630 = validateParameter(valid_402656630, JString,
                                      required = false, default = nil)
  if valid_402656630 != nil:
    section.add "MaxResults", valid_402656630
  var valid_402656631 = query.getOrDefault("NextToken")
  valid_402656631 = validateParameter(valid_402656631, JString,
                                      required = false, default = nil)
  if valid_402656631 != nil:
    section.add "NextToken", valid_402656631
  var valid_402656632 = query.getOrDefault("next-token")
  valid_402656632 = validateParameter(valid_402656632, JString,
                                      required = false, default = nil)
  if valid_402656632 != nil:
    section.add "next-token", valid_402656632
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656633 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656633 = validateParameter(valid_402656633, JString,
                                      required = false, default = nil)
  if valid_402656633 != nil:
    section.add "X-Amz-Security-Token", valid_402656633
  var valid_402656634 = header.getOrDefault("X-Amz-Signature")
  valid_402656634 = validateParameter(valid_402656634, JString,
                                      required = false, default = nil)
  if valid_402656634 != nil:
    section.add "X-Amz-Signature", valid_402656634
  var valid_402656635 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656635 = validateParameter(valid_402656635, JString,
                                      required = false, default = nil)
  if valid_402656635 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656635
  var valid_402656636 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656636 = validateParameter(valid_402656636, JString,
                                      required = false, default = nil)
  if valid_402656636 != nil:
    section.add "X-Amz-Algorithm", valid_402656636
  var valid_402656637 = header.getOrDefault("X-Amz-Date")
  valid_402656637 = validateParameter(valid_402656637, JString,
                                      required = false, default = nil)
  if valid_402656637 != nil:
    section.add "X-Amz-Date", valid_402656637
  var valid_402656638 = header.getOrDefault("X-Amz-Credential")
  valid_402656638 = validateParameter(valid_402656638, JString,
                                      required = false, default = nil)
  if valid_402656638 != nil:
    section.add "X-Amz-Credential", valid_402656638
  var valid_402656639 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656639 = validateParameter(valid_402656639, JString,
                                      required = false, default = nil)
  if valid_402656639 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656639
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656640: Call_ListDataSources_402656625; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists data sources in current AWS Region that belong to this AWS account.
                                                                                         ## 
  let valid = call_402656640.validator(path, query, header, formData, body, _)
  let scheme = call_402656640.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656640.makeUrl(scheme.get, call_402656640.host, call_402656640.base,
                                   call_402656640.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656640, uri, valid, _)

proc call*(call_402656641: Call_ListDataSources_402656625; AwsAccountId: string;
           maxResults: int = 0; MaxResults: string = ""; NextToken: string = "";
           nextToken: string = ""): Recallable =
  ## listDataSources
  ## Lists data sources in current AWS Region that belong to this AWS account.
  ##   
                                                                              ## AwsAccountId: string (required)
                                                                              ##               
                                                                              ## : 
                                                                              ## The 
                                                                              ## AWS 
                                                                              ## account 
                                                                              ## ID.
  ##   
                                                                                    ## maxResults: int
                                                                                    ##             
                                                                                    ## : 
                                                                                    ## The 
                                                                                    ## maximum 
                                                                                    ## number 
                                                                                    ## of 
                                                                                    ## results 
                                                                                    ## to 
                                                                                    ## be 
                                                                                    ## returned 
                                                                                    ## per 
                                                                                    ## request.
  ##   
                                                                                               ## MaxResults: string
                                                                                               ##             
                                                                                               ## : 
                                                                                               ## Pagination 
                                                                                               ## limit
  ##   
                                                                                                       ## NextToken: string
                                                                                                       ##            
                                                                                                       ## : 
                                                                                                       ## Pagination 
                                                                                                       ## token
  ##   
                                                                                                               ## nextToken: string
                                                                                                               ##            
                                                                                                               ## : 
                                                                                                               ## The 
                                                                                                               ## token 
                                                                                                               ## for 
                                                                                                               ## the 
                                                                                                               ## next 
                                                                                                               ## set 
                                                                                                               ## of 
                                                                                                               ## results, 
                                                                                                               ## or 
                                                                                                               ## null 
                                                                                                               ## if 
                                                                                                               ## there 
                                                                                                               ## are 
                                                                                                               ## no 
                                                                                                               ## more 
                                                                                                               ## results.
  var path_402656642 = newJObject()
  var query_402656643 = newJObject()
  add(path_402656642, "AwsAccountId", newJString(AwsAccountId))
  add(query_402656643, "max-results", newJInt(maxResults))
  add(query_402656643, "MaxResults", newJString(MaxResults))
  add(query_402656643, "NextToken", newJString(NextToken))
  add(query_402656643, "next-token", newJString(nextToken))
  result = call_402656641.call(path_402656642, query_402656643, nil, nil, nil)

var listDataSources* = Call_ListDataSources_402656625(name: "listDataSources",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sources",
    validator: validate_ListDataSources_402656626, base: "/",
    makeUrl: url_ListDataSources_402656627, schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateGroup_402656678 = ref object of OpenApiRestCall_402656044
proc url_CreateGroup_402656680(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateGroup_402656679(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## Namespace: JString (required)
                                                                                                                                                                                                ##            
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## namespace. 
                                                                                                                                                                                                ## Currently, 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## should 
                                                                                                                                                                                                ## set 
                                                                                                                                                                                                ## this 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656681 = path.getOrDefault("AwsAccountId")
  valid_402656681 = validateParameter(valid_402656681, JString, required = true,
                                      default = nil)
  if valid_402656681 != nil:
    section.add "AwsAccountId", valid_402656681
  var valid_402656682 = path.getOrDefault("Namespace")
  valid_402656682 = validateParameter(valid_402656682, JString, required = true,
                                      default = nil)
  if valid_402656682 != nil:
    section.add "Namespace", valid_402656682
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656683 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656683 = validateParameter(valid_402656683, JString,
                                      required = false, default = nil)
  if valid_402656683 != nil:
    section.add "X-Amz-Security-Token", valid_402656683
  var valid_402656684 = header.getOrDefault("X-Amz-Signature")
  valid_402656684 = validateParameter(valid_402656684, JString,
                                      required = false, default = nil)
  if valid_402656684 != nil:
    section.add "X-Amz-Signature", valid_402656684
  var valid_402656685 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656685 = validateParameter(valid_402656685, JString,
                                      required = false, default = nil)
  if valid_402656685 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656685
  var valid_402656686 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656686 = validateParameter(valid_402656686, JString,
                                      required = false, default = nil)
  if valid_402656686 != nil:
    section.add "X-Amz-Algorithm", valid_402656686
  var valid_402656687 = header.getOrDefault("X-Amz-Date")
  valid_402656687 = validateParameter(valid_402656687, JString,
                                      required = false, default = nil)
  if valid_402656687 != nil:
    section.add "X-Amz-Date", valid_402656687
  var valid_402656688 = header.getOrDefault("X-Amz-Credential")
  valid_402656688 = validateParameter(valid_402656688, JString,
                                      required = false, default = nil)
  if valid_402656688 != nil:
    section.add "X-Amz-Credential", valid_402656688
  var valid_402656689 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656689 = validateParameter(valid_402656689, JString,
                                      required = false, default = nil)
  if valid_402656689 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656689
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656691: Call_CreateGroup_402656678; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>
                                                                                         ## 
  let valid = call_402656691.validator(path, query, header, formData, body, _)
  let scheme = call_402656691.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656691.makeUrl(scheme.get, call_402656691.host, call_402656691.base,
                                   call_402656691.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656691, uri, valid, _)

proc call*(call_402656692: Call_CreateGroup_402656678; AwsAccountId: string;
           body: JsonNode; Namespace: string): Recallable =
  ## createGroup
  ## <p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>
  ##   
                                                                                                                                                                                                                                                    ## AwsAccountId: string (required)
                                                                                                                                                                                                                                                    ##               
                                                                                                                                                                                                                                                    ## : 
                                                                                                                                                                                                                                                    ## The 
                                                                                                                                                                                                                                                    ## ID 
                                                                                                                                                                                                                                                    ## for 
                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                    ## AWS 
                                                                                                                                                                                                                                                    ## account 
                                                                                                                                                                                                                                                    ## that 
                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                    ## group 
                                                                                                                                                                                                                                                    ## is 
                                                                                                                                                                                                                                                    ## in. 
                                                                                                                                                                                                                                                    ## Currently, 
                                                                                                                                                                                                                                                    ## you 
                                                                                                                                                                                                                                                    ## use 
                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                    ## ID 
                                                                                                                                                                                                                                                    ## for 
                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                    ## AWS 
                                                                                                                                                                                                                                                    ## account 
                                                                                                                                                                                                                                                    ## that 
                                                                                                                                                                                                                                                    ## contains 
                                                                                                                                                                                                                                                    ## your 
                                                                                                                                                                                                                                                    ## Amazon 
                                                                                                                                                                                                                                                    ## QuickSight 
                                                                                                                                                                                                                                                    ## account.
  ##   
                                                                                                                                                                                                                                                               ## body: JObject (required)
  ##   
                                                                                                                                                                                                                                                                                          ## Namespace: string (required)
                                                                                                                                                                                                                                                                                          ##            
                                                                                                                                                                                                                                                                                          ## : 
                                                                                                                                                                                                                                                                                          ## The 
                                                                                                                                                                                                                                                                                          ## namespace. 
                                                                                                                                                                                                                                                                                          ## Currently, 
                                                                                                                                                                                                                                                                                          ## you 
                                                                                                                                                                                                                                                                                          ## should 
                                                                                                                                                                                                                                                                                          ## set 
                                                                                                                                                                                                                                                                                          ## this 
                                                                                                                                                                                                                                                                                          ## to 
                                                                                                                                                                                                                                                                                          ## <code>default</code>.
  var path_402656693 = newJObject()
  var body_402656694 = newJObject()
  add(path_402656693, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656694 = body
  add(path_402656693, "Namespace", newJString(Namespace))
  result = call_402656692.call(path_402656693, nil, nil, nil, body_402656694)

var createGroup* = Call_CreateGroup_402656678(name: "createGroup",
    meth: HttpMethod.HttpPost, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups",
    validator: validate_CreateGroup_402656679, base: "/",
    makeUrl: url_CreateGroup_402656680, schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListGroups_402656660 = ref object of OpenApiRestCall_402656044
proc url_ListGroups_402656662(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListGroups_402656661(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists all user groups in Amazon QuickSight. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## Namespace: JString (required)
                                                                                                                                                                                                ##            
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## namespace. 
                                                                                                                                                                                                ## Currently, 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## should 
                                                                                                                                                                                                ## set 
                                                                                                                                                                                                ## this 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656663 = path.getOrDefault("AwsAccountId")
  valid_402656663 = validateParameter(valid_402656663, JString, required = true,
                                      default = nil)
  if valid_402656663 != nil:
    section.add "AwsAccountId", valid_402656663
  var valid_402656664 = path.getOrDefault("Namespace")
  valid_402656664 = validateParameter(valid_402656664, JString, required = true,
                                      default = nil)
  if valid_402656664 != nil:
    section.add "Namespace", valid_402656664
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to return.
  ##   
                                                                                            ## next-token: JString
                                                                                            ##             
                                                                                            ## : 
                                                                                            ## A 
                                                                                            ## pagination 
                                                                                            ## token 
                                                                                            ## that 
                                                                                            ## can 
                                                                                            ## be 
                                                                                            ## used 
                                                                                            ## in 
                                                                                            ## a 
                                                                                            ## subsequent 
                                                                                            ## request.
  section = newJObject()
  var valid_402656665 = query.getOrDefault("max-results")
  valid_402656665 = validateParameter(valid_402656665, JInt, required = false,
                                      default = nil)
  if valid_402656665 != nil:
    section.add "max-results", valid_402656665
  var valid_402656666 = query.getOrDefault("next-token")
  valid_402656666 = validateParameter(valid_402656666, JString,
                                      required = false, default = nil)
  if valid_402656666 != nil:
    section.add "next-token", valid_402656666
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656667 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656667 = validateParameter(valid_402656667, JString,
                                      required = false, default = nil)
  if valid_402656667 != nil:
    section.add "X-Amz-Security-Token", valid_402656667
  var valid_402656668 = header.getOrDefault("X-Amz-Signature")
  valid_402656668 = validateParameter(valid_402656668, JString,
                                      required = false, default = nil)
  if valid_402656668 != nil:
    section.add "X-Amz-Signature", valid_402656668
  var valid_402656669 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656669 = validateParameter(valid_402656669, JString,
                                      required = false, default = nil)
  if valid_402656669 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656669
  var valid_402656670 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656670 = validateParameter(valid_402656670, JString,
                                      required = false, default = nil)
  if valid_402656670 != nil:
    section.add "X-Amz-Algorithm", valid_402656670
  var valid_402656671 = header.getOrDefault("X-Amz-Date")
  valid_402656671 = validateParameter(valid_402656671, JString,
                                      required = false, default = nil)
  if valid_402656671 != nil:
    section.add "X-Amz-Date", valid_402656671
  var valid_402656672 = header.getOrDefault("X-Amz-Credential")
  valid_402656672 = validateParameter(valid_402656672, JString,
                                      required = false, default = nil)
  if valid_402656672 != nil:
    section.add "X-Amz-Credential", valid_402656672
  var valid_402656673 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656673 = validateParameter(valid_402656673, JString,
                                      required = false, default = nil)
  if valid_402656673 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656673
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656674: Call_ListGroups_402656660; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists all user groups in Amazon QuickSight. 
                                                                                         ## 
  let valid = call_402656674.validator(path, query, header, formData, body, _)
  let scheme = call_402656674.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656674.makeUrl(scheme.get, call_402656674.host, call_402656674.base,
                                   call_402656674.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656674, uri, valid, _)

proc call*(call_402656675: Call_ListGroups_402656660; AwsAccountId: string;
           Namespace: string; maxResults: int = 0; nextToken: string = ""): Recallable =
  ## listGroups
  ## Lists all user groups in Amazon QuickSight. 
  ##   AwsAccountId: string (required)
                                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                                ## maxResults: int
                                                                                                                                                                                                                ##             
                                                                                                                                                                                                                ## : 
                                                                                                                                                                                                                ## The 
                                                                                                                                                                                                                ## maximum 
                                                                                                                                                                                                                ## number 
                                                                                                                                                                                                                ## of 
                                                                                                                                                                                                                ## results 
                                                                                                                                                                                                                ## to 
                                                                                                                                                                                                                ## return.
  ##   
                                                                                                                                                                                                                          ## Namespace: string (required)
                                                                                                                                                                                                                          ##            
                                                                                                                                                                                                                          ## : 
                                                                                                                                                                                                                          ## The 
                                                                                                                                                                                                                          ## namespace. 
                                                                                                                                                                                                                          ## Currently, 
                                                                                                                                                                                                                          ## you 
                                                                                                                                                                                                                          ## should 
                                                                                                                                                                                                                          ## set 
                                                                                                                                                                                                                          ## this 
                                                                                                                                                                                                                          ## to 
                                                                                                                                                                                                                          ## <code>default</code>.
  ##   
                                                                                                                                                                                                                                                  ## nextToken: string
                                                                                                                                                                                                                                                  ##            
                                                                                                                                                                                                                                                  ## : 
                                                                                                                                                                                                                                                  ## A 
                                                                                                                                                                                                                                                  ## pagination 
                                                                                                                                                                                                                                                  ## token 
                                                                                                                                                                                                                                                  ## that 
                                                                                                                                                                                                                                                  ## can 
                                                                                                                                                                                                                                                  ## be 
                                                                                                                                                                                                                                                  ## used 
                                                                                                                                                                                                                                                  ## in 
                                                                                                                                                                                                                                                  ## a 
                                                                                                                                                                                                                                                  ## subsequent 
                                                                                                                                                                                                                                                  ## request.
  var path_402656676 = newJObject()
  var query_402656677 = newJObject()
  add(path_402656676, "AwsAccountId", newJString(AwsAccountId))
  add(query_402656677, "max-results", newJInt(maxResults))
  add(path_402656676, "Namespace", newJString(Namespace))
  add(query_402656677, "next-token", newJString(nextToken))
  result = call_402656675.call(path_402656676, query_402656677, nil, nil, nil)

var listGroups* = Call_ListGroups_402656660(name: "listGroups",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups",
    validator: validate_ListGroups_402656661, base: "/",
    makeUrl: url_ListGroups_402656662, schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateGroupMembership_402656695 = ref object of OpenApiRestCall_402656044
proc url_CreateGroupMembership_402656697(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "GroupName" in path, "`GroupName` is a required path parameter"
  assert "MemberName" in path, "`MemberName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups/"),
                 (kind: VariableSegment, value: "GroupName"),
                 (kind: ConstantSegment, value: "/members/"),
                 (kind: VariableSegment, value: "MemberName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateGroupMembership_402656696(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Adds an Amazon QuickSight user to an Amazon QuickSight group. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## MemberName: JString (required)
                                                                                                                                                                                                ##             
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## name 
                                                                                                                                                                                                ## of 
                                                                                                                                                                                                ## the 
                                                                                                                                                                                                ## user 
                                                                                                                                                                                                ## that 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## want 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## add 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## the 
                                                                                                                                                                                                ## group 
                                                                                                                                                                                                ## membership.
  ##   
                                                                                                                                                                                                              ## Namespace: JString (required)
                                                                                                                                                                                                              ##            
                                                                                                                                                                                                              ## : 
                                                                                                                                                                                                              ## The 
                                                                                                                                                                                                              ## namespace. 
                                                                                                                                                                                                              ## Currently, 
                                                                                                                                                                                                              ## you 
                                                                                                                                                                                                              ## should 
                                                                                                                                                                                                              ## set 
                                                                                                                                                                                                              ## this 
                                                                                                                                                                                                              ## to 
                                                                                                                                                                                                              ## <code>default</code>.
  ##   
                                                                                                                                                                                                                                      ## GroupName: JString (required)
                                                                                                                                                                                                                                      ##            
                                                                                                                                                                                                                                      ## : 
                                                                                                                                                                                                                                      ## The 
                                                                                                                                                                                                                                      ## name 
                                                                                                                                                                                                                                      ## of 
                                                                                                                                                                                                                                      ## the 
                                                                                                                                                                                                                                      ## group 
                                                                                                                                                                                                                                      ## that 
                                                                                                                                                                                                                                      ## you 
                                                                                                                                                                                                                                      ## want 
                                                                                                                                                                                                                                      ## to 
                                                                                                                                                                                                                                      ## add 
                                                                                                                                                                                                                                      ## the 
                                                                                                                                                                                                                                      ## user 
                                                                                                                                                                                                                                      ## to.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656698 = path.getOrDefault("AwsAccountId")
  valid_402656698 = validateParameter(valid_402656698, JString, required = true,
                                      default = nil)
  if valid_402656698 != nil:
    section.add "AwsAccountId", valid_402656698
  var valid_402656699 = path.getOrDefault("MemberName")
  valid_402656699 = validateParameter(valid_402656699, JString, required = true,
                                      default = nil)
  if valid_402656699 != nil:
    section.add "MemberName", valid_402656699
  var valid_402656700 = path.getOrDefault("Namespace")
  valid_402656700 = validateParameter(valid_402656700, JString, required = true,
                                      default = nil)
  if valid_402656700 != nil:
    section.add "Namespace", valid_402656700
  var valid_402656701 = path.getOrDefault("GroupName")
  valid_402656701 = validateParameter(valid_402656701, JString, required = true,
                                      default = nil)
  if valid_402656701 != nil:
    section.add "GroupName", valid_402656701
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656702 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656702 = validateParameter(valid_402656702, JString,
                                      required = false, default = nil)
  if valid_402656702 != nil:
    section.add "X-Amz-Security-Token", valid_402656702
  var valid_402656703 = header.getOrDefault("X-Amz-Signature")
  valid_402656703 = validateParameter(valid_402656703, JString,
                                      required = false, default = nil)
  if valid_402656703 != nil:
    section.add "X-Amz-Signature", valid_402656703
  var valid_402656704 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656704 = validateParameter(valid_402656704, JString,
                                      required = false, default = nil)
  if valid_402656704 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656704
  var valid_402656705 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656705 = validateParameter(valid_402656705, JString,
                                      required = false, default = nil)
  if valid_402656705 != nil:
    section.add "X-Amz-Algorithm", valid_402656705
  var valid_402656706 = header.getOrDefault("X-Amz-Date")
  valid_402656706 = validateParameter(valid_402656706, JString,
                                      required = false, default = nil)
  if valid_402656706 != nil:
    section.add "X-Amz-Date", valid_402656706
  var valid_402656707 = header.getOrDefault("X-Amz-Credential")
  valid_402656707 = validateParameter(valid_402656707, JString,
                                      required = false, default = nil)
  if valid_402656707 != nil:
    section.add "X-Amz-Credential", valid_402656707
  var valid_402656708 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656708 = validateParameter(valid_402656708, JString,
                                      required = false, default = nil)
  if valid_402656708 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656708
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656709: Call_CreateGroupMembership_402656695;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Adds an Amazon QuickSight user to an Amazon QuickSight group. 
                                                                                         ## 
  let valid = call_402656709.validator(path, query, header, formData, body, _)
  let scheme = call_402656709.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656709.makeUrl(scheme.get, call_402656709.host, call_402656709.base,
                                   call_402656709.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656709, uri, valid, _)

proc call*(call_402656710: Call_CreateGroupMembership_402656695;
           AwsAccountId: string; MemberName: string; Namespace: string;
           GroupName: string): Recallable =
  ## createGroupMembership
  ## Adds an Amazon QuickSight user to an Amazon QuickSight group. 
  ##   AwsAccountId: string (required)
                                                                   ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                                                  ## MemberName: string (required)
                                                                                                                                                                                                                                  ##             
                                                                                                                                                                                                                                  ## : 
                                                                                                                                                                                                                                  ## The 
                                                                                                                                                                                                                                  ## name 
                                                                                                                                                                                                                                  ## of 
                                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                                  ## user 
                                                                                                                                                                                                                                  ## that 
                                                                                                                                                                                                                                  ## you 
                                                                                                                                                                                                                                  ## want 
                                                                                                                                                                                                                                  ## to 
                                                                                                                                                                                                                                  ## add 
                                                                                                                                                                                                                                  ## to 
                                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                                  ## group 
                                                                                                                                                                                                                                  ## membership.
  ##   
                                                                                                                                                                                                                                                ## Namespace: string (required)
                                                                                                                                                                                                                                                ##            
                                                                                                                                                                                                                                                ## : 
                                                                                                                                                                                                                                                ## The 
                                                                                                                                                                                                                                                ## namespace. 
                                                                                                                                                                                                                                                ## Currently, 
                                                                                                                                                                                                                                                ## you 
                                                                                                                                                                                                                                                ## should 
                                                                                                                                                                                                                                                ## set 
                                                                                                                                                                                                                                                ## this 
                                                                                                                                                                                                                                                ## to 
                                                                                                                                                                                                                                                ## <code>default</code>.
  ##   
                                                                                                                                                                                                                                                                        ## GroupName: string (required)
                                                                                                                                                                                                                                                                        ##            
                                                                                                                                                                                                                                                                        ## : 
                                                                                                                                                                                                                                                                        ## The 
                                                                                                                                                                                                                                                                        ## name 
                                                                                                                                                                                                                                                                        ## of 
                                                                                                                                                                                                                                                                        ## the 
                                                                                                                                                                                                                                                                        ## group 
                                                                                                                                                                                                                                                                        ## that 
                                                                                                                                                                                                                                                                        ## you 
                                                                                                                                                                                                                                                                        ## want 
                                                                                                                                                                                                                                                                        ## to 
                                                                                                                                                                                                                                                                        ## add 
                                                                                                                                                                                                                                                                        ## the 
                                                                                                                                                                                                                                                                        ## user 
                                                                                                                                                                                                                                                                        ## to.
  var path_402656711 = newJObject()
  add(path_402656711, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656711, "MemberName", newJString(MemberName))
  add(path_402656711, "Namespace", newJString(Namespace))
  add(path_402656711, "GroupName", newJString(GroupName))
  result = call_402656710.call(path_402656711, nil, nil, nil, nil)

var createGroupMembership* = Call_CreateGroupMembership_402656695(
    name: "createGroupMembership", meth: HttpMethod.HttpPut,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}",
    validator: validate_CreateGroupMembership_402656696, base: "/",
    makeUrl: url_CreateGroupMembership_402656697,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteGroupMembership_402656712 = ref object of OpenApiRestCall_402656044
proc url_DeleteGroupMembership_402656714(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "GroupName" in path, "`GroupName` is a required path parameter"
  assert "MemberName" in path, "`MemberName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups/"),
                 (kind: VariableSegment, value: "GroupName"),
                 (kind: ConstantSegment, value: "/members/"),
                 (kind: VariableSegment, value: "MemberName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteGroupMembership_402656713(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Removes a user from a group so that the user is no longer a member of the group.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## MemberName: JString (required)
                                                                                                                                                                                                ##             
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## name 
                                                                                                                                                                                                ## of 
                                                                                                                                                                                                ## the 
                                                                                                                                                                                                ## user 
                                                                                                                                                                                                ## that 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## want 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## delete 
                                                                                                                                                                                                ## from 
                                                                                                                                                                                                ## the 
                                                                                                                                                                                                ## group 
                                                                                                                                                                                                ## membership.
  ##   
                                                                                                                                                                                                              ## Namespace: JString (required)
                                                                                                                                                                                                              ##            
                                                                                                                                                                                                              ## : 
                                                                                                                                                                                                              ## The 
                                                                                                                                                                                                              ## namespace. 
                                                                                                                                                                                                              ## Currently, 
                                                                                                                                                                                                              ## you 
                                                                                                                                                                                                              ## should 
                                                                                                                                                                                                              ## set 
                                                                                                                                                                                                              ## this 
                                                                                                                                                                                                              ## to 
                                                                                                                                                                                                              ## <code>default</code>.
  ##   
                                                                                                                                                                                                                                      ## GroupName: JString (required)
                                                                                                                                                                                                                                      ##            
                                                                                                                                                                                                                                      ## : 
                                                                                                                                                                                                                                      ## The 
                                                                                                                                                                                                                                      ## name 
                                                                                                                                                                                                                                      ## of 
                                                                                                                                                                                                                                      ## the 
                                                                                                                                                                                                                                      ## group 
                                                                                                                                                                                                                                      ## that 
                                                                                                                                                                                                                                      ## you 
                                                                                                                                                                                                                                      ## want 
                                                                                                                                                                                                                                      ## to 
                                                                                                                                                                                                                                      ## delete 
                                                                                                                                                                                                                                      ## the 
                                                                                                                                                                                                                                      ## user 
                                                                                                                                                                                                                                      ## from.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656715 = path.getOrDefault("AwsAccountId")
  valid_402656715 = validateParameter(valid_402656715, JString, required = true,
                                      default = nil)
  if valid_402656715 != nil:
    section.add "AwsAccountId", valid_402656715
  var valid_402656716 = path.getOrDefault("MemberName")
  valid_402656716 = validateParameter(valid_402656716, JString, required = true,
                                      default = nil)
  if valid_402656716 != nil:
    section.add "MemberName", valid_402656716
  var valid_402656717 = path.getOrDefault("Namespace")
  valid_402656717 = validateParameter(valid_402656717, JString, required = true,
                                      default = nil)
  if valid_402656717 != nil:
    section.add "Namespace", valid_402656717
  var valid_402656718 = path.getOrDefault("GroupName")
  valid_402656718 = validateParameter(valid_402656718, JString, required = true,
                                      default = nil)
  if valid_402656718 != nil:
    section.add "GroupName", valid_402656718
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656719 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656719 = validateParameter(valid_402656719, JString,
                                      required = false, default = nil)
  if valid_402656719 != nil:
    section.add "X-Amz-Security-Token", valid_402656719
  var valid_402656720 = header.getOrDefault("X-Amz-Signature")
  valid_402656720 = validateParameter(valid_402656720, JString,
                                      required = false, default = nil)
  if valid_402656720 != nil:
    section.add "X-Amz-Signature", valid_402656720
  var valid_402656721 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656721 = validateParameter(valid_402656721, JString,
                                      required = false, default = nil)
  if valid_402656721 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656721
  var valid_402656722 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656722 = validateParameter(valid_402656722, JString,
                                      required = false, default = nil)
  if valid_402656722 != nil:
    section.add "X-Amz-Algorithm", valid_402656722
  var valid_402656723 = header.getOrDefault("X-Amz-Date")
  valid_402656723 = validateParameter(valid_402656723, JString,
                                      required = false, default = nil)
  if valid_402656723 != nil:
    section.add "X-Amz-Date", valid_402656723
  var valid_402656724 = header.getOrDefault("X-Amz-Credential")
  valid_402656724 = validateParameter(valid_402656724, JString,
                                      required = false, default = nil)
  if valid_402656724 != nil:
    section.add "X-Amz-Credential", valid_402656724
  var valid_402656725 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656725 = validateParameter(valid_402656725, JString,
                                      required = false, default = nil)
  if valid_402656725 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656725
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656726: Call_DeleteGroupMembership_402656712;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Removes a user from a group so that the user is no longer a member of the group.
                                                                                         ## 
  let valid = call_402656726.validator(path, query, header, formData, body, _)
  let scheme = call_402656726.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656726.makeUrl(scheme.get, call_402656726.host, call_402656726.base,
                                   call_402656726.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656726, uri, valid, _)

proc call*(call_402656727: Call_DeleteGroupMembership_402656712;
           AwsAccountId: string; MemberName: string; Namespace: string;
           GroupName: string): Recallable =
  ## deleteGroupMembership
  ## Removes a user from a group so that the user is no longer a member of the group.
  ##   
                                                                                     ## AwsAccountId: string (required)
                                                                                     ##               
                                                                                     ## : 
                                                                                     ## The 
                                                                                     ## ID 
                                                                                     ## for 
                                                                                     ## the 
                                                                                     ## AWS 
                                                                                     ## account 
                                                                                     ## that 
                                                                                     ## the 
                                                                                     ## group 
                                                                                     ## is 
                                                                                     ## in. 
                                                                                     ## Currently, 
                                                                                     ## you 
                                                                                     ## use 
                                                                                     ## the 
                                                                                     ## ID 
                                                                                     ## for 
                                                                                     ## the 
                                                                                     ## AWS 
                                                                                     ## account 
                                                                                     ## that 
                                                                                     ## contains 
                                                                                     ## your 
                                                                                     ## Amazon 
                                                                                     ## QuickSight 
                                                                                     ## account.
  ##   
                                                                                                ## MemberName: string (required)
                                                                                                ##             
                                                                                                ## : 
                                                                                                ## The 
                                                                                                ## name 
                                                                                                ## of 
                                                                                                ## the 
                                                                                                ## user 
                                                                                                ## that 
                                                                                                ## you 
                                                                                                ## want 
                                                                                                ## to 
                                                                                                ## delete 
                                                                                                ## from 
                                                                                                ## the 
                                                                                                ## group 
                                                                                                ## membership.
  ##   
                                                                                                              ## Namespace: string (required)
                                                                                                              ##            
                                                                                                              ## : 
                                                                                                              ## The 
                                                                                                              ## namespace. 
                                                                                                              ## Currently, 
                                                                                                              ## you 
                                                                                                              ## should 
                                                                                                              ## set 
                                                                                                              ## this 
                                                                                                              ## to 
                                                                                                              ## <code>default</code>.
  ##   
                                                                                                                                      ## GroupName: string (required)
                                                                                                                                      ##            
                                                                                                                                      ## : 
                                                                                                                                      ## The 
                                                                                                                                      ## name 
                                                                                                                                      ## of 
                                                                                                                                      ## the 
                                                                                                                                      ## group 
                                                                                                                                      ## that 
                                                                                                                                      ## you 
                                                                                                                                      ## want 
                                                                                                                                      ## to 
                                                                                                                                      ## delete 
                                                                                                                                      ## the 
                                                                                                                                      ## user 
                                                                                                                                      ## from.
  var path_402656728 = newJObject()
  add(path_402656728, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656728, "MemberName", newJString(MemberName))
  add(path_402656728, "Namespace", newJString(Namespace))
  add(path_402656728, "GroupName", newJString(GroupName))
  result = call_402656727.call(path_402656728, nil, nil, nil, nil)

var deleteGroupMembership* = Call_DeleteGroupMembership_402656712(
    name: "deleteGroupMembership", meth: HttpMethod.HttpDelete,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}",
    validator: validate_DeleteGroupMembership_402656713, base: "/",
    makeUrl: url_DeleteGroupMembership_402656714,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateIAMPolicyAssignment_402656729 = ref object of OpenApiRestCall_402656044
proc url_CreateIAMPolicyAssignment_402656731(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/iam-policy-assignments/")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateIAMPolicyAssignment_402656730(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy will be assigned to specified groups or users of Amazon QuickSight. The users and groups need to be in the same namespace. 
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account where you want to assign an IAM policy to QuickSight users or groups.
  ##   
                                                                                                                                                   ## Namespace: JString (required)
                                                                                                                                                   ##            
                                                                                                                                                   ## : 
                                                                                                                                                   ## The 
                                                                                                                                                   ## namespace 
                                                                                                                                                   ## that 
                                                                                                                                                   ## contains 
                                                                                                                                                   ## the 
                                                                                                                                                   ## assignment.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656732 = path.getOrDefault("AwsAccountId")
  valid_402656732 = validateParameter(valid_402656732, JString, required = true,
                                      default = nil)
  if valid_402656732 != nil:
    section.add "AwsAccountId", valid_402656732
  var valid_402656733 = path.getOrDefault("Namespace")
  valid_402656733 = validateParameter(valid_402656733, JString, required = true,
                                      default = nil)
  if valid_402656733 != nil:
    section.add "Namespace", valid_402656733
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656734 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656734 = validateParameter(valid_402656734, JString,
                                      required = false, default = nil)
  if valid_402656734 != nil:
    section.add "X-Amz-Security-Token", valid_402656734
  var valid_402656735 = header.getOrDefault("X-Amz-Signature")
  valid_402656735 = validateParameter(valid_402656735, JString,
                                      required = false, default = nil)
  if valid_402656735 != nil:
    section.add "X-Amz-Signature", valid_402656735
  var valid_402656736 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656736 = validateParameter(valid_402656736, JString,
                                      required = false, default = nil)
  if valid_402656736 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656736
  var valid_402656737 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656737 = validateParameter(valid_402656737, JString,
                                      required = false, default = nil)
  if valid_402656737 != nil:
    section.add "X-Amz-Algorithm", valid_402656737
  var valid_402656738 = header.getOrDefault("X-Amz-Date")
  valid_402656738 = validateParameter(valid_402656738, JString,
                                      required = false, default = nil)
  if valid_402656738 != nil:
    section.add "X-Amz-Date", valid_402656738
  var valid_402656739 = header.getOrDefault("X-Amz-Credential")
  valid_402656739 = validateParameter(valid_402656739, JString,
                                      required = false, default = nil)
  if valid_402656739 != nil:
    section.add "X-Amz-Credential", valid_402656739
  var valid_402656740 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656740 = validateParameter(valid_402656740, JString,
                                      required = false, default = nil)
  if valid_402656740 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656740
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656742: Call_CreateIAMPolicyAssignment_402656729;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy will be assigned to specified groups or users of Amazon QuickSight. The users and groups need to be in the same namespace. 
                                                                                         ## 
  let valid = call_402656742.validator(path, query, header, formData, body, _)
  let scheme = call_402656742.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656742.makeUrl(scheme.get, call_402656742.host, call_402656742.base,
                                   call_402656742.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656742, uri, valid, _)

proc call*(call_402656743: Call_CreateIAMPolicyAssignment_402656729;
           AwsAccountId: string; body: JsonNode; Namespace: string): Recallable =
  ## createIAMPolicyAssignment
  ## Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy will be assigned to specified groups or users of Amazon QuickSight. The users and groups need to be in the same namespace. 
  ##   
                                                                                                                                                                                                                                               ## AwsAccountId: string (required)
                                                                                                                                                                                                                                               ##               
                                                                                                                                                                                                                                               ## : 
                                                                                                                                                                                                                                               ## The 
                                                                                                                                                                                                                                               ## ID 
                                                                                                                                                                                                                                               ## of 
                                                                                                                                                                                                                                               ## the 
                                                                                                                                                                                                                                               ## AWS 
                                                                                                                                                                                                                                               ## account 
                                                                                                                                                                                                                                               ## where 
                                                                                                                                                                                                                                               ## you 
                                                                                                                                                                                                                                               ## want 
                                                                                                                                                                                                                                               ## to 
                                                                                                                                                                                                                                               ## assign 
                                                                                                                                                                                                                                               ## an 
                                                                                                                                                                                                                                               ## IAM 
                                                                                                                                                                                                                                               ## policy 
                                                                                                                                                                                                                                               ## to 
                                                                                                                                                                                                                                               ## QuickSight 
                                                                                                                                                                                                                                               ## users 
                                                                                                                                                                                                                                               ## or 
                                                                                                                                                                                                                                               ## groups.
  ##   
                                                                                                                                                                                                                                                         ## body: JObject (required)
  ##   
                                                                                                                                                                                                                                                                                    ## Namespace: string (required)
                                                                                                                                                                                                                                                                                    ##            
                                                                                                                                                                                                                                                                                    ## : 
                                                                                                                                                                                                                                                                                    ## The 
                                                                                                                                                                                                                                                                                    ## namespace 
                                                                                                                                                                                                                                                                                    ## that 
                                                                                                                                                                                                                                                                                    ## contains 
                                                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                                                    ## assignment.
  var path_402656744 = newJObject()
  var body_402656745 = newJObject()
  add(path_402656744, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656745 = body
  add(path_402656744, "Namespace", newJString(Namespace))
  result = call_402656743.call(path_402656744, nil, nil, nil, body_402656745)

var createIAMPolicyAssignment* = Call_CreateIAMPolicyAssignment_402656729(
    name: "createIAMPolicyAssignment", meth: HttpMethod.HttpPost,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/",
    validator: validate_CreateIAMPolicyAssignment_402656730, base: "/",
    makeUrl: url_CreateIAMPolicyAssignment_402656731,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateTemplate_402656764 = ref object of OpenApiRestCall_402656044
proc url_UpdateTemplate_402656766(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateTemplate_402656765(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Updates a template from an existing Amazon QuickSight analysis or another template.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template that you're updating.
  ##   
                                                                                                                              ## TemplateId: JString (required)
                                                                                                                              ##             
                                                                                                                              ## : 
                                                                                                                              ## The 
                                                                                                                              ## ID 
                                                                                                                              ## for 
                                                                                                                              ## the 
                                                                                                                              ## template.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656767 = path.getOrDefault("AwsAccountId")
  valid_402656767 = validateParameter(valid_402656767, JString, required = true,
                                      default = nil)
  if valid_402656767 != nil:
    section.add "AwsAccountId", valid_402656767
  var valid_402656768 = path.getOrDefault("TemplateId")
  valid_402656768 = validateParameter(valid_402656768, JString, required = true,
                                      default = nil)
  if valid_402656768 != nil:
    section.add "TemplateId", valid_402656768
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656769 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656769 = validateParameter(valid_402656769, JString,
                                      required = false, default = nil)
  if valid_402656769 != nil:
    section.add "X-Amz-Security-Token", valid_402656769
  var valid_402656770 = header.getOrDefault("X-Amz-Signature")
  valid_402656770 = validateParameter(valid_402656770, JString,
                                      required = false, default = nil)
  if valid_402656770 != nil:
    section.add "X-Amz-Signature", valid_402656770
  var valid_402656771 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656771 = validateParameter(valid_402656771, JString,
                                      required = false, default = nil)
  if valid_402656771 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656771
  var valid_402656772 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656772 = validateParameter(valid_402656772, JString,
                                      required = false, default = nil)
  if valid_402656772 != nil:
    section.add "X-Amz-Algorithm", valid_402656772
  var valid_402656773 = header.getOrDefault("X-Amz-Date")
  valid_402656773 = validateParameter(valid_402656773, JString,
                                      required = false, default = nil)
  if valid_402656773 != nil:
    section.add "X-Amz-Date", valid_402656773
  var valid_402656774 = header.getOrDefault("X-Amz-Credential")
  valid_402656774 = validateParameter(valid_402656774, JString,
                                      required = false, default = nil)
  if valid_402656774 != nil:
    section.add "X-Amz-Credential", valid_402656774
  var valid_402656775 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656775 = validateParameter(valid_402656775, JString,
                                      required = false, default = nil)
  if valid_402656775 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656775
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656777: Call_UpdateTemplate_402656764; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates a template from an existing Amazon QuickSight analysis or another template.
                                                                                         ## 
  let valid = call_402656777.validator(path, query, header, formData, body, _)
  let scheme = call_402656777.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656777.makeUrl(scheme.get, call_402656777.host, call_402656777.base,
                                   call_402656777.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656777, uri, valid, _)

proc call*(call_402656778: Call_UpdateTemplate_402656764; AwsAccountId: string;
           body: JsonNode; TemplateId: string): Recallable =
  ## updateTemplate
  ## Updates a template from an existing Amazon QuickSight analysis or another template.
  ##   
                                                                                        ## AwsAccountId: string (required)
                                                                                        ##               
                                                                                        ## : 
                                                                                        ## The 
                                                                                        ## ID 
                                                                                        ## of 
                                                                                        ## the 
                                                                                        ## AWS 
                                                                                        ## account 
                                                                                        ## that 
                                                                                        ## contains 
                                                                                        ## the 
                                                                                        ## template 
                                                                                        ## that 
                                                                                        ## you're 
                                                                                        ## updating.
  ##   
                                                                                                    ## body: JObject (required)
  ##   
                                                                                                                               ## TemplateId: string (required)
                                                                                                                               ##             
                                                                                                                               ## : 
                                                                                                                               ## The 
                                                                                                                               ## ID 
                                                                                                                               ## for 
                                                                                                                               ## the 
                                                                                                                               ## template.
  var path_402656779 = newJObject()
  var body_402656780 = newJObject()
  add(path_402656779, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656780 = body
  add(path_402656779, "TemplateId", newJString(TemplateId))
  result = call_402656778.call(path_402656779, nil, nil, nil, body_402656780)

var updateTemplate* = Call_UpdateTemplate_402656764(name: "updateTemplate",
    meth: HttpMethod.HttpPut, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}",
    validator: validate_UpdateTemplate_402656765, base: "/",
    makeUrl: url_UpdateTemplate_402656766, schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateTemplate_402656781 = ref object of OpenApiRestCall_402656044
proc url_CreateTemplate_402656783(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateTemplate_402656782(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates a template from an existing QuickSight analysis or template. You can use the resulting template to create a dashboard.</p> <p>A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## TemplateId: JString (required)
                                                                                                                                                                                                ##             
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## An 
                                                                                                                                                                                                ## ID 
                                                                                                                                                                                                ## for 
                                                                                                                                                                                                ## the 
                                                                                                                                                                                                ## template 
                                                                                                                                                                                                ## that 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## want 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## create. 
                                                                                                                                                                                                ## This 
                                                                                                                                                                                                ## template 
                                                                                                                                                                                                ## is 
                                                                                                                                                                                                ## unique 
                                                                                                                                                                                                ## per 
                                                                                                                                                                                                ## AWS 
                                                                                                                                                                                                ## Region 
                                                                                                                                                                                                ## in 
                                                                                                                                                                                                ## each 
                                                                                                                                                                                                ## AWS 
                                                                                                                                                                                                ## account.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656784 = path.getOrDefault("AwsAccountId")
  valid_402656784 = validateParameter(valid_402656784, JString, required = true,
                                      default = nil)
  if valid_402656784 != nil:
    section.add "AwsAccountId", valid_402656784
  var valid_402656785 = path.getOrDefault("TemplateId")
  valid_402656785 = validateParameter(valid_402656785, JString, required = true,
                                      default = nil)
  if valid_402656785 != nil:
    section.add "TemplateId", valid_402656785
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656786 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656786 = validateParameter(valid_402656786, JString,
                                      required = false, default = nil)
  if valid_402656786 != nil:
    section.add "X-Amz-Security-Token", valid_402656786
  var valid_402656787 = header.getOrDefault("X-Amz-Signature")
  valid_402656787 = validateParameter(valid_402656787, JString,
                                      required = false, default = nil)
  if valid_402656787 != nil:
    section.add "X-Amz-Signature", valid_402656787
  var valid_402656788 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656788 = validateParameter(valid_402656788, JString,
                                      required = false, default = nil)
  if valid_402656788 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656788
  var valid_402656789 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656789 = validateParameter(valid_402656789, JString,
                                      required = false, default = nil)
  if valid_402656789 != nil:
    section.add "X-Amz-Algorithm", valid_402656789
  var valid_402656790 = header.getOrDefault("X-Amz-Date")
  valid_402656790 = validateParameter(valid_402656790, JString,
                                      required = false, default = nil)
  if valid_402656790 != nil:
    section.add "X-Amz-Date", valid_402656790
  var valid_402656791 = header.getOrDefault("X-Amz-Credential")
  valid_402656791 = validateParameter(valid_402656791, JString,
                                      required = false, default = nil)
  if valid_402656791 != nil:
    section.add "X-Amz-Credential", valid_402656791
  var valid_402656792 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656792 = validateParameter(valid_402656792, JString,
                                      required = false, default = nil)
  if valid_402656792 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656792
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656794: Call_CreateTemplate_402656781; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates a template from an existing QuickSight analysis or template. You can use the resulting template to create a dashboard.</p> <p>A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>
                                                                                         ## 
  let valid = call_402656794.validator(path, query, header, formData, body, _)
  let scheme = call_402656794.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656794.makeUrl(scheme.get, call_402656794.host, call_402656794.base,
                                   call_402656794.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656794, uri, valid, _)

proc call*(call_402656795: Call_CreateTemplate_402656781; AwsAccountId: string;
           body: JsonNode; TemplateId: string): Recallable =
  ## createTemplate
  ## <p>Creates a template from an existing QuickSight analysis or template. You can use the resulting template to create a dashboard.</p> <p>A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>
  ##   
wsAccountId: string (required)


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ## The 

for 
the 

account 
that 
the 
group 
is 
in. 
urrently, 
you 
use 
the 

for 
the 

account 
that 
contains 
your 
mazon 
uickSight 
account.
  ##   
body: JObject (required)
  ##   
emplateId: string (required)


n 

for 
the 
template 
that 
you 
want 
to 
create. 
his 
template 
is 
unique 
per 

egion 
in 
each 

account.
  var path_402656796 = newJObject()
  var body_402656797 = newJObject()
  add(path_402656796, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656797 = body
  add(path_402656796, "TemplateId", newJString(TemplateId))
  result = call_402656795.call(path_402656796, nil, nil, nil, body_402656797)

var createTemplate* = Call_CreateTemplate_402656781(name: "createTemplate",
    meth: HttpMethod.HttpPost, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}",
    validator: validate_CreateTemplate_402656782, base: "/",
    makeUrl: url_CreateTemplate_402656783, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeTemplate_402656746 = ref object of OpenApiRestCall_402656044
proc url_DescribeTemplate_402656748(protocol: Scheme; host: string;
                                    base: string; route: string; path: JsonNode;
                                    query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeTemplate_402656747(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes a template's metadata.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template that you're describing.
  ##   
                                                                                                                                ## TemplateId: JString (required)
                                                                                                                                ##             
                                                                                                                                ## : 
                                                                                                                                ## The 
                                                                                                                                ## ID 
                                                                                                                                ## for 
                                                                                                                                ## the 
                                                                                                                                ## template.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656749 = path.getOrDefault("AwsAccountId")
  valid_402656749 = validateParameter(valid_402656749, JString, required = true,
                                      default = nil)
  if valid_402656749 != nil:
    section.add "AwsAccountId", valid_402656749
  var valid_402656750 = path.getOrDefault("TemplateId")
  valid_402656750 = validateParameter(valid_402656750, JString, required = true,
                                      default = nil)
  if valid_402656750 != nil:
    section.add "TemplateId", valid_402656750
  result.add "path", section
  ## parameters in `query` object:
  ##   alias-name: JString
                                  ##             : The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                  ## version-number: JInt
                                                                                                                                                                                                                                                                                                                                                                                                  ##                 
                                                                                                                                                                                                                                                                                                                                                                                                  ## : 
                                                                                                                                                                                                                                                                                                                                                                                                  ## (Optional) 
                                                                                                                                                                                                                                                                                                                                                                                                  ## The 
                                                                                                                                                                                                                                                                                                                                                                                                  ## number 
                                                                                                                                                                                                                                                                                                                                                                                                  ## for 
                                                                                                                                                                                                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                                                                                                                                                                                                  ## version 
                                                                                                                                                                                                                                                                                                                                                                                                  ## to 
                                                                                                                                                                                                                                                                                                                                                                                                  ## describe. 
                                                                                                                                                                                                                                                                                                                                                                                                  ## If 
                                                                                                                                                                                                                                                                                                                                                                                                  ## a 
                                                                                                                                                                                                                                                                                                                                                                                                  ## <code>VersionNumber</code> 
                                                                                                                                                                                                                                                                                                                                                                                                  ## parameter 
                                                                                                                                                                                                                                                                                                                                                                                                  ## value 
                                                                                                                                                                                                                                                                                                                                                                                                  ## isn't 
                                                                                                                                                                                                                                                                                                                                                                                                  ## provided, 
                                                                                                                                                                                                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                                                                                                                                                                                                  ## latest 
                                                                                                                                                                                                                                                                                                                                                                                                  ## version 
                                                                                                                                                                                                                                                                                                                                                                                                  ## of 
                                                                                                                                                                                                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                                                                                                                                                                                                  ## template 
                                                                                                                                                                                                                                                                                                                                                                                                  ## is 
                                                                                                                                                                                                                                                                                                                                                                                                  ## described.
  section = newJObject()
  var valid_402656751 = query.getOrDefault("alias-name")
  valid_402656751 = validateParameter(valid_402656751, JString,
                                      required = false, default = nil)
  if valid_402656751 != nil:
    section.add "alias-name", valid_402656751
  var valid_402656752 = query.getOrDefault("version-number")
  valid_402656752 = validateParameter(valid_402656752, JInt, required = false,
                                      default = nil)
  if valid_402656752 != nil:
    section.add "version-number", valid_402656752
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656753 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656753 = validateParameter(valid_402656753, JString,
                                      required = false, default = nil)
  if valid_402656753 != nil:
    section.add "X-Amz-Security-Token", valid_402656753
  var valid_402656754 = header.getOrDefault("X-Amz-Signature")
  valid_402656754 = validateParameter(valid_402656754, JString,
                                      required = false, default = nil)
  if valid_402656754 != nil:
    section.add "X-Amz-Signature", valid_402656754
  var valid_402656755 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656755 = validateParameter(valid_402656755, JString,
                                      required = false, default = nil)
  if valid_402656755 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656755
  var valid_402656756 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656756 = validateParameter(valid_402656756, JString,
                                      required = false, default = nil)
  if valid_402656756 != nil:
    section.add "X-Amz-Algorithm", valid_402656756
  var valid_402656757 = header.getOrDefault("X-Amz-Date")
  valid_402656757 = validateParameter(valid_402656757, JString,
                                      required = false, default = nil)
  if valid_402656757 != nil:
    section.add "X-Amz-Date", valid_402656757
  var valid_402656758 = header.getOrDefault("X-Amz-Credential")
  valid_402656758 = validateParameter(valid_402656758, JString,
                                      required = false, default = nil)
  if valid_402656758 != nil:
    section.add "X-Amz-Credential", valid_402656758
  var valid_402656759 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656759 = validateParameter(valid_402656759, JString,
                                      required = false, default = nil)
  if valid_402656759 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656759
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656760: Call_DescribeTemplate_402656746;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes a template's metadata.
                                                                                         ## 
  let valid = call_402656760.validator(path, query, header, formData, body, _)
  let scheme = call_402656760.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656760.makeUrl(scheme.get, call_402656760.host, call_402656760.base,
                                   call_402656760.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656760, uri, valid, _)

proc call*(call_402656761: Call_DescribeTemplate_402656746;
           AwsAccountId: string; TemplateId: string; aliasName: string = "";
           versionNumber: int = 0): Recallable =
  ## describeTemplate
  ## Describes a template's metadata.
  ##   aliasName: string
                                     ##            : The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                    ## AwsAccountId: string (required)
                                                                                                                                                                                                                                                                                                                                                                                                    ##               
                                                                                                                                                                                                                                                                                                                                                                                                    ## : 
                                                                                                                                                                                                                                                                                                                                                                                                    ## The 
                                                                                                                                                                                                                                                                                                                                                                                                    ## ID 
                                                                                                                                                                                                                                                                                                                                                                                                    ## of 
                                                                                                                                                                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                                                                                                                                                                    ## AWS 
                                                                                                                                                                                                                                                                                                                                                                                                    ## account 
                                                                                                                                                                                                                                                                                                                                                                                                    ## that 
                                                                                                                                                                                                                                                                                                                                                                                                    ## contains 
                                                                                                                                                                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                                                                                                                                                                    ## template 
                                                                                                                                                                                                                                                                                                                                                                                                    ## that 
                                                                                                                                                                                                                                                                                                                                                                                                    ## you're 
                                                                                                                                                                                                                                                                                                                                                                                                    ## describing.
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                                  ## TemplateId: string (required)
                                                                                                                                                                                                                                                                                                                                                                                                                  ##             
                                                                                                                                                                                                                                                                                                                                                                                                                  ## : 
                                                                                                                                                                                                                                                                                                                                                                                                                  ## The 
                                                                                                                                                                                                                                                                                                                                                                                                                  ## ID 
                                                                                                                                                                                                                                                                                                                                                                                                                  ## for 
                                                                                                                                                                                                                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                                                                                                                                                                                                                  ## template.
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                                              ## versionNumber: int
                                                                                                                                                                                                                                                                                                                                                                                                                              ##                
                                                                                                                                                                                                                                                                                                                                                                                                                              ## : 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## (Optional) 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## The 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## number 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## for 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## the 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## version 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## to 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## describe. 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## If 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## a 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## <code>VersionNumber</code> 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## parameter 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## value 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## isn't 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## provided, 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## the 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## latest 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## version 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## of 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## the 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## template 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## is 
                                                                                                                                                                                                                                                                                                                                                                                                                              ## described.
  var path_402656762 = newJObject()
  var query_402656763 = newJObject()
  add(query_402656763, "alias-name", newJString(aliasName))
  add(path_402656762, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656762, "TemplateId", newJString(TemplateId))
  add(query_402656763, "version-number", newJInt(versionNumber))
  result = call_402656761.call(path_402656762, query_402656763, nil, nil, nil)

var describeTemplate* = Call_DescribeTemplate_402656746(
    name: "describeTemplate", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}",
    validator: validate_DescribeTemplate_402656747, base: "/",
    makeUrl: url_DescribeTemplate_402656748,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteTemplate_402656798 = ref object of OpenApiRestCall_402656044
proc url_DeleteTemplate_402656800(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteTemplate_402656799(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a template.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template that you're deleting.
  ##   
                                                                                                                              ## TemplateId: JString (required)
                                                                                                                              ##             
                                                                                                                              ## : 
                                                                                                                              ## An 
                                                                                                                              ## ID 
                                                                                                                              ## for 
                                                                                                                              ## the 
                                                                                                                              ## template 
                                                                                                                              ## you 
                                                                                                                              ## want 
                                                                                                                              ## to 
                                                                                                                              ## delete.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656801 = path.getOrDefault("AwsAccountId")
  valid_402656801 = validateParameter(valid_402656801, JString, required = true,
                                      default = nil)
  if valid_402656801 != nil:
    section.add "AwsAccountId", valid_402656801
  var valid_402656802 = path.getOrDefault("TemplateId")
  valid_402656802 = validateParameter(valid_402656802, JString, required = true,
                                      default = nil)
  if valid_402656802 != nil:
    section.add "TemplateId", valid_402656802
  result.add "path", section
  ## parameters in `query` object:
  ##   version-number: JInt
                                  ##                 : Specifies the version of the template that you want to delete. If you don't provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. 
  section = newJObject()
  var valid_402656803 = query.getOrDefault("version-number")
  valid_402656803 = validateParameter(valid_402656803, JInt, required = false,
                                      default = nil)
  if valid_402656803 != nil:
    section.add "version-number", valid_402656803
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656804 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656804 = validateParameter(valid_402656804, JString,
                                      required = false, default = nil)
  if valid_402656804 != nil:
    section.add "X-Amz-Security-Token", valid_402656804
  var valid_402656805 = header.getOrDefault("X-Amz-Signature")
  valid_402656805 = validateParameter(valid_402656805, JString,
                                      required = false, default = nil)
  if valid_402656805 != nil:
    section.add "X-Amz-Signature", valid_402656805
  var valid_402656806 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656806 = validateParameter(valid_402656806, JString,
                                      required = false, default = nil)
  if valid_402656806 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656806
  var valid_402656807 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656807 = validateParameter(valid_402656807, JString,
                                      required = false, default = nil)
  if valid_402656807 != nil:
    section.add "X-Amz-Algorithm", valid_402656807
  var valid_402656808 = header.getOrDefault("X-Amz-Date")
  valid_402656808 = validateParameter(valid_402656808, JString,
                                      required = false, default = nil)
  if valid_402656808 != nil:
    section.add "X-Amz-Date", valid_402656808
  var valid_402656809 = header.getOrDefault("X-Amz-Credential")
  valid_402656809 = validateParameter(valid_402656809, JString,
                                      required = false, default = nil)
  if valid_402656809 != nil:
    section.add "X-Amz-Credential", valid_402656809
  var valid_402656810 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656810 = validateParameter(valid_402656810, JString,
                                      required = false, default = nil)
  if valid_402656810 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656810
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656811: Call_DeleteTemplate_402656798; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a template.
                                                                                         ## 
  let valid = call_402656811.validator(path, query, header, formData, body, _)
  let scheme = call_402656811.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656811.makeUrl(scheme.get, call_402656811.host, call_402656811.base,
                                   call_402656811.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656811, uri, valid, _)

proc call*(call_402656812: Call_DeleteTemplate_402656798; AwsAccountId: string;
           TemplateId: string; versionNumber: int = 0): Recallable =
  ## deleteTemplate
  ## Deletes a template.
  ##   AwsAccountId: string (required)
                        ##               : The ID of the AWS account that contains the template that you're deleting.
  ##   
                                                                                                                     ## TemplateId: string (required)
                                                                                                                     ##             
                                                                                                                     ## : 
                                                                                                                     ## An 
                                                                                                                     ## ID 
                                                                                                                     ## for 
                                                                                                                     ## the 
                                                                                                                     ## template 
                                                                                                                     ## you 
                                                                                                                     ## want 
                                                                                                                     ## to 
                                                                                                                     ## delete.
  ##   
                                                                                                                               ## versionNumber: int
                                                                                                                               ##                
                                                                                                                               ## : 
                                                                                                                               ## Specifies 
                                                                                                                               ## the 
                                                                                                                               ## version 
                                                                                                                               ## of 
                                                                                                                               ## the 
                                                                                                                               ## template 
                                                                                                                               ## that 
                                                                                                                               ## you 
                                                                                                                               ## want 
                                                                                                                               ## to 
                                                                                                                               ## delete. 
                                                                                                                               ## If 
                                                                                                                               ## you 
                                                                                                                               ## don't 
                                                                                                                               ## provide 
                                                                                                                               ## a 
                                                                                                                               ## version 
                                                                                                                               ## number, 
                                                                                                                               ## <code>DeleteTemplate</code> 
                                                                                                                               ## deletes 
                                                                                                                               ## all 
                                                                                                                               ## versions 
                                                                                                                               ## of 
                                                                                                                               ## the 
                                                                                                                               ## template. 
  var path_402656813 = newJObject()
  var query_402656814 = newJObject()
  add(path_402656813, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656813, "TemplateId", newJString(TemplateId))
  add(query_402656814, "version-number", newJInt(versionNumber))
  result = call_402656812.call(path_402656813, query_402656814, nil, nil, nil)

var deleteTemplate* = Call_DeleteTemplate_402656798(name: "deleteTemplate",
    meth: HttpMethod.HttpDelete, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}",
    validator: validate_DeleteTemplate_402656799, base: "/",
    makeUrl: url_DeleteTemplate_402656800, schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateTemplateAlias_402656831 = ref object of OpenApiRestCall_402656044
proc url_UpdateTemplateAlias_402656833(protocol: Scheme; host: string;
                                       base: string; route: string;
                                       path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  assert "AliasName" in path, "`AliasName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/aliases/"),
                 (kind: VariableSegment, value: "AliasName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateTemplateAlias_402656832(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Updates the template alias of a template.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template alias that you're updating.
  ##   
                                                                                                                                    ## TemplateId: JString (required)
                                                                                                                                    ##             
                                                                                                                                    ## : 
                                                                                                                                    ## The 
                                                                                                                                    ## ID 
                                                                                                                                    ## for 
                                                                                                                                    ## the 
                                                                                                                                    ## template.
  ##   
                                                                                                                                                ## AliasName: JString (required)
                                                                                                                                                ##            
                                                                                                                                                ## : 
                                                                                                                                                ## The 
                                                                                                                                                ## alias 
                                                                                                                                                ## of 
                                                                                                                                                ## the 
                                                                                                                                                ## template 
                                                                                                                                                ## that 
                                                                                                                                                ## you 
                                                                                                                                                ## want 
                                                                                                                                                ## to 
                                                                                                                                                ## update. 
                                                                                                                                                ## If 
                                                                                                                                                ## you 
                                                                                                                                                ## name 
                                                                                                                                                ## a 
                                                                                                                                                ## specific 
                                                                                                                                                ## alias, 
                                                                                                                                                ## you 
                                                                                                                                                ## update 
                                                                                                                                                ## the 
                                                                                                                                                ## version 
                                                                                                                                                ## that 
                                                                                                                                                ## the 
                                                                                                                                                ## alias 
                                                                                                                                                ## points 
                                                                                                                                                ## to. 
                                                                                                                                                ## You 
                                                                                                                                                ## can 
                                                                                                                                                ## specify 
                                                                                                                                                ## the 
                                                                                                                                                ## latest 
                                                                                                                                                ## version 
                                                                                                                                                ## of 
                                                                                                                                                ## the 
                                                                                                                                                ## template 
                                                                                                                                                ## by 
                                                                                                                                                ## providing 
                                                                                                                                                ## the 
                                                                                                                                                ## keyword 
                                                                                                                                                ## <code>$LATEST</code> 
                                                                                                                                                ## in 
                                                                                                                                                ## the 
                                                                                                                                                ## <code>AliasName</code> 
                                                                                                                                                ## parameter. 
                                                                                                                                                ## The 
                                                                                                                                                ## keyword 
                                                                                                                                                ## <code>$PUBLISHED</code> 
                                                                                                                                                ## doesn't 
                                                                                                                                                ## apply 
                                                                                                                                                ## to 
                                                                                                                                                ## templates.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656834 = path.getOrDefault("AwsAccountId")
  valid_402656834 = validateParameter(valid_402656834, JString, required = true,
                                      default = nil)
  if valid_402656834 != nil:
    section.add "AwsAccountId", valid_402656834
  var valid_402656835 = path.getOrDefault("TemplateId")
  valid_402656835 = validateParameter(valid_402656835, JString, required = true,
                                      default = nil)
  if valid_402656835 != nil:
    section.add "TemplateId", valid_402656835
  var valid_402656836 = path.getOrDefault("AliasName")
  valid_402656836 = validateParameter(valid_402656836, JString, required = true,
                                      default = nil)
  if valid_402656836 != nil:
    section.add "AliasName", valid_402656836
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656837 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656837 = validateParameter(valid_402656837, JString,
                                      required = false, default = nil)
  if valid_402656837 != nil:
    section.add "X-Amz-Security-Token", valid_402656837
  var valid_402656838 = header.getOrDefault("X-Amz-Signature")
  valid_402656838 = validateParameter(valid_402656838, JString,
                                      required = false, default = nil)
  if valid_402656838 != nil:
    section.add "X-Amz-Signature", valid_402656838
  var valid_402656839 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656839 = validateParameter(valid_402656839, JString,
                                      required = false, default = nil)
  if valid_402656839 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656839
  var valid_402656840 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656840 = validateParameter(valid_402656840, JString,
                                      required = false, default = nil)
  if valid_402656840 != nil:
    section.add "X-Amz-Algorithm", valid_402656840
  var valid_402656841 = header.getOrDefault("X-Amz-Date")
  valid_402656841 = validateParameter(valid_402656841, JString,
                                      required = false, default = nil)
  if valid_402656841 != nil:
    section.add "X-Amz-Date", valid_402656841
  var valid_402656842 = header.getOrDefault("X-Amz-Credential")
  valid_402656842 = validateParameter(valid_402656842, JString,
                                      required = false, default = nil)
  if valid_402656842 != nil:
    section.add "X-Amz-Credential", valid_402656842
  var valid_402656843 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656843 = validateParameter(valid_402656843, JString,
                                      required = false, default = nil)
  if valid_402656843 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656843
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656845: Call_UpdateTemplateAlias_402656831;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates the template alias of a template.
                                                                                         ## 
  let valid = call_402656845.validator(path, query, header, formData, body, _)
  let scheme = call_402656845.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656845.makeUrl(scheme.get, call_402656845.host, call_402656845.base,
                                   call_402656845.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656845, uri, valid, _)

proc call*(call_402656846: Call_UpdateTemplateAlias_402656831;
           AwsAccountId: string; body: JsonNode; TemplateId: string;
           AliasName: string): Recallable =
  ## updateTemplateAlias
  ## Updates the template alias of a template.
  ##   AwsAccountId: string (required)
                                              ##               : The ID of the AWS account that contains the template alias that you're updating.
  ##   
                                                                                                                                                 ## body: JObject (required)
  ##   
                                                                                                                                                                            ## TemplateId: string (required)
                                                                                                                                                                            ##             
                                                                                                                                                                            ## : 
                                                                                                                                                                            ## The 
                                                                                                                                                                            ## ID 
                                                                                                                                                                            ## for 
                                                                                                                                                                            ## the 
                                                                                                                                                                            ## template.
  ##   
                                                                                                                                                                                        ## AliasName: string (required)
                                                                                                                                                                                        ##            
                                                                                                                                                                                        ## : 
                                                                                                                                                                                        ## The 
                                                                                                                                                                                        ## alias 
                                                                                                                                                                                        ## of 
                                                                                                                                                                                        ## the 
                                                                                                                                                                                        ## template 
                                                                                                                                                                                        ## that 
                                                                                                                                                                                        ## you 
                                                                                                                                                                                        ## want 
                                                                                                                                                                                        ## to 
                                                                                                                                                                                        ## update. 
                                                                                                                                                                                        ## If 
                                                                                                                                                                                        ## you 
                                                                                                                                                                                        ## name 
                                                                                                                                                                                        ## a 
                                                                                                                                                                                        ## specific 
                                                                                                                                                                                        ## alias, 
                                                                                                                                                                                        ## you 
                                                                                                                                                                                        ## update 
                                                                                                                                                                                        ## the 
                                                                                                                                                                                        ## version 
                                                                                                                                                                                        ## that 
                                                                                                                                                                                        ## the 
                                                                                                                                                                                        ## alias 
                                                                                                                                                                                        ## points 
                                                                                                                                                                                        ## to. 
                                                                                                                                                                                        ## You 
                                                                                                                                                                                        ## can 
                                                                                                                                                                                        ## specify 
                                                                                                                                                                                        ## the 
                                                                                                                                                                                        ## latest 
                                                                                                                                                                                        ## version 
                                                                                                                                                                                        ## of 
                                                                                                                                                                                        ## the 
                                                                                                                                                                                        ## template 
                                                                                                                                                                                        ## by 
                                                                                                                                                                                        ## providing 
                                                                                                                                                                                        ## the 
                                                                                                                                                                                        ## keyword 
                                                                                                                                                                                        ## <code>$LATEST</code> 
                                                                                                                                                                                        ## in 
                                                                                                                                                                                        ## the 
                                                                                                                                                                                        ## <code>AliasName</code> 
                                                                                                                                                                                        ## parameter. 
                                                                                                                                                                                        ## The 
                                                                                                                                                                                        ## keyword 
                                                                                                                                                                                        ## <code>$PUBLISHED</code> 
                                                                                                                                                                                        ## doesn't 
                                                                                                                                                                                        ## apply 
                                                                                                                                                                                        ## to 
                                                                                                                                                                                        ## templates.
  var path_402656847 = newJObject()
  var body_402656848 = newJObject()
  add(path_402656847, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656848 = body
  add(path_402656847, "TemplateId", newJString(TemplateId))
  add(path_402656847, "AliasName", newJString(AliasName))
  result = call_402656846.call(path_402656847, nil, nil, nil, body_402656848)

var updateTemplateAlias* = Call_UpdateTemplateAlias_402656831(
    name: "updateTemplateAlias", meth: HttpMethod.HttpPut,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}",
    validator: validate_UpdateTemplateAlias_402656832, base: "/",
    makeUrl: url_UpdateTemplateAlias_402656833,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_CreateTemplateAlias_402656849 = ref object of OpenApiRestCall_402656044
proc url_CreateTemplateAlias_402656851(protocol: Scheme; host: string;
                                       base: string; route: string;
                                       path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  assert "AliasName" in path, "`AliasName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/aliases/"),
                 (kind: VariableSegment, value: "AliasName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_CreateTemplateAlias_402656850(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates a template alias for a template.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template that you creating an alias for.
  ##   
                                                                                                                                        ## TemplateId: JString (required)
                                                                                                                                        ##             
                                                                                                                                        ## : 
                                                                                                                                        ## An 
                                                                                                                                        ## ID 
                                                                                                                                        ## for 
                                                                                                                                        ## the 
                                                                                                                                        ## template.
  ##   
                                                                                                                                                    ## AliasName: JString (required)
                                                                                                                                                    ##            
                                                                                                                                                    ## : 
                                                                                                                                                    ## The 
                                                                                                                                                    ## name 
                                                                                                                                                    ## that 
                                                                                                                                                    ## you 
                                                                                                                                                    ## want 
                                                                                                                                                    ## to 
                                                                                                                                                    ## give 
                                                                                                                                                    ## to 
                                                                                                                                                    ## the 
                                                                                                                                                    ## template 
                                                                                                                                                    ## alias 
                                                                                                                                                    ## that 
                                                                                                                                                    ## you're 
                                                                                                                                                    ## creating. 
                                                                                                                                                    ## Don't 
                                                                                                                                                    ## start 
                                                                                                                                                    ## the 
                                                                                                                                                    ## alias 
                                                                                                                                                    ## name 
                                                                                                                                                    ## with 
                                                                                                                                                    ## the 
                                                                                                                                                    ## <code>$</code> 
                                                                                                                                                    ## character. 
                                                                                                                                                    ## Alias 
                                                                                                                                                    ## names 
                                                                                                                                                    ## that 
                                                                                                                                                    ## start 
                                                                                                                                                    ## with 
                                                                                                                                                    ## <code>$</code> 
                                                                                                                                                    ## are 
                                                                                                                                                    ## reserved 
                                                                                                                                                    ## by 
                                                                                                                                                    ## QuickSight. 
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656852 = path.getOrDefault("AwsAccountId")
  valid_402656852 = validateParameter(valid_402656852, JString, required = true,
                                      default = nil)
  if valid_402656852 != nil:
    section.add "AwsAccountId", valid_402656852
  var valid_402656853 = path.getOrDefault("TemplateId")
  valid_402656853 = validateParameter(valid_402656853, JString, required = true,
                                      default = nil)
  if valid_402656853 != nil:
    section.add "TemplateId", valid_402656853
  var valid_402656854 = path.getOrDefault("AliasName")
  valid_402656854 = validateParameter(valid_402656854, JString, required = true,
                                      default = nil)
  if valid_402656854 != nil:
    section.add "AliasName", valid_402656854
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656855 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656855 = validateParameter(valid_402656855, JString,
                                      required = false, default = nil)
  if valid_402656855 != nil:
    section.add "X-Amz-Security-Token", valid_402656855
  var valid_402656856 = header.getOrDefault("X-Amz-Signature")
  valid_402656856 = validateParameter(valid_402656856, JString,
                                      required = false, default = nil)
  if valid_402656856 != nil:
    section.add "X-Amz-Signature", valid_402656856
  var valid_402656857 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656857 = validateParameter(valid_402656857, JString,
                                      required = false, default = nil)
  if valid_402656857 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656857
  var valid_402656858 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656858 = validateParameter(valid_402656858, JString,
                                      required = false, default = nil)
  if valid_402656858 != nil:
    section.add "X-Amz-Algorithm", valid_402656858
  var valid_402656859 = header.getOrDefault("X-Amz-Date")
  valid_402656859 = validateParameter(valid_402656859, JString,
                                      required = false, default = nil)
  if valid_402656859 != nil:
    section.add "X-Amz-Date", valid_402656859
  var valid_402656860 = header.getOrDefault("X-Amz-Credential")
  valid_402656860 = validateParameter(valid_402656860, JString,
                                      required = false, default = nil)
  if valid_402656860 != nil:
    section.add "X-Amz-Credential", valid_402656860
  var valid_402656861 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656861 = validateParameter(valid_402656861, JString,
                                      required = false, default = nil)
  if valid_402656861 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656861
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656863: Call_CreateTemplateAlias_402656849;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates a template alias for a template.
                                                                                         ## 
  let valid = call_402656863.validator(path, query, header, formData, body, _)
  let scheme = call_402656863.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656863.makeUrl(scheme.get, call_402656863.host, call_402656863.base,
                                   call_402656863.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656863, uri, valid, _)

proc call*(call_402656864: Call_CreateTemplateAlias_402656849;
           AwsAccountId: string; body: JsonNode; TemplateId: string;
           AliasName: string): Recallable =
  ## createTemplateAlias
  ## Creates a template alias for a template.
  ##   AwsAccountId: string (required)
                                             ##               : The ID of the AWS account that contains the template that you creating an alias for.
  ##   
                                                                                                                                                    ## body: JObject (required)
  ##   
                                                                                                                                                                               ## TemplateId: string (required)
                                                                                                                                                                               ##             
                                                                                                                                                                               ## : 
                                                                                                                                                                               ## An 
                                                                                                                                                                               ## ID 
                                                                                                                                                                               ## for 
                                                                                                                                                                               ## the 
                                                                                                                                                                               ## template.
  ##   
                                                                                                                                                                                           ## AliasName: string (required)
                                                                                                                                                                                           ##            
                                                                                                                                                                                           ## : 
                                                                                                                                                                                           ## The 
                                                                                                                                                                                           ## name 
                                                                                                                                                                                           ## that 
                                                                                                                                                                                           ## you 
                                                                                                                                                                                           ## want 
                                                                                                                                                                                           ## to 
                                                                                                                                                                                           ## give 
                                                                                                                                                                                           ## to 
                                                                                                                                                                                           ## the 
                                                                                                                                                                                           ## template 
                                                                                                                                                                                           ## alias 
                                                                                                                                                                                           ## that 
                                                                                                                                                                                           ## you're 
                                                                                                                                                                                           ## creating. 
                                                                                                                                                                                           ## Don't 
                                                                                                                                                                                           ## start 
                                                                                                                                                                                           ## the 
                                                                                                                                                                                           ## alias 
                                                                                                                                                                                           ## name 
                                                                                                                                                                                           ## with 
                                                                                                                                                                                           ## the 
                                                                                                                                                                                           ## <code>$</code> 
                                                                                                                                                                                           ## character. 
                                                                                                                                                                                           ## Alias 
                                                                                                                                                                                           ## names 
                                                                                                                                                                                           ## that 
                                                                                                                                                                                           ## start 
                                                                                                                                                                                           ## with 
                                                                                                                                                                                           ## <code>$</code> 
                                                                                                                                                                                           ## are 
                                                                                                                                                                                           ## reserved 
                                                                                                                                                                                           ## by 
                                                                                                                                                                                           ## QuickSight. 
  var path_402656865 = newJObject()
  var body_402656866 = newJObject()
  add(path_402656865, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656866 = body
  add(path_402656865, "TemplateId", newJString(TemplateId))
  add(path_402656865, "AliasName", newJString(AliasName))
  result = call_402656864.call(path_402656865, nil, nil, nil, body_402656866)

var createTemplateAlias* = Call_CreateTemplateAlias_402656849(
    name: "createTemplateAlias", meth: HttpMethod.HttpPost,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}",
    validator: validate_CreateTemplateAlias_402656850, base: "/",
    makeUrl: url_CreateTemplateAlias_402656851,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeTemplateAlias_402656815 = ref object of OpenApiRestCall_402656044
proc url_DescribeTemplateAlias_402656817(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  assert "AliasName" in path, "`AliasName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/aliases/"),
                 (kind: VariableSegment, value: "AliasName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeTemplateAlias_402656816(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes the template alias for a template.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template alias that you're describing.
  ##   
                                                                                                                                      ## TemplateId: JString (required)
                                                                                                                                      ##             
                                                                                                                                      ## : 
                                                                                                                                      ## The 
                                                                                                                                      ## ID 
                                                                                                                                      ## for 
                                                                                                                                      ## the 
                                                                                                                                      ## template.
  ##   
                                                                                                                                                  ## AliasName: JString (required)
                                                                                                                                                  ##            
                                                                                                                                                  ## : 
                                                                                                                                                  ## The 
                                                                                                                                                  ## name 
                                                                                                                                                  ## of 
                                                                                                                                                  ## the 
                                                                                                                                                  ## template 
                                                                                                                                                  ## alias 
                                                                                                                                                  ## that 
                                                                                                                                                  ## you 
                                                                                                                                                  ## want 
                                                                                                                                                  ## to 
                                                                                                                                                  ## describe. 
                                                                                                                                                  ## If 
                                                                                                                                                  ## you 
                                                                                                                                                  ## name 
                                                                                                                                                  ## a 
                                                                                                                                                  ## specific 
                                                                                                                                                  ## alias, 
                                                                                                                                                  ## you 
                                                                                                                                                  ## describe 
                                                                                                                                                  ## the 
                                                                                                                                                  ## version 
                                                                                                                                                  ## that 
                                                                                                                                                  ## the 
                                                                                                                                                  ## alias 
                                                                                                                                                  ## points 
                                                                                                                                                  ## to. 
                                                                                                                                                  ## You 
                                                                                                                                                  ## can 
                                                                                                                                                  ## specify 
                                                                                                                                                  ## the 
                                                                                                                                                  ## latest 
                                                                                                                                                  ## version 
                                                                                                                                                  ## of 
                                                                                                                                                  ## the 
                                                                                                                                                  ## template 
                                                                                                                                                  ## by 
                                                                                                                                                  ## providing 
                                                                                                                                                  ## the 
                                                                                                                                                  ## keyword 
                                                                                                                                                  ## <code>$LATEST</code> 
                                                                                                                                                  ## in 
                                                                                                                                                  ## the 
                                                                                                                                                  ## <code>AliasName</code> 
                                                                                                                                                  ## parameter. 
                                                                                                                                                  ## The 
                                                                                                                                                  ## keyword 
                                                                                                                                                  ## <code>$PUBLISHED</code> 
                                                                                                                                                  ## doesn't 
                                                                                                                                                  ## apply 
                                                                                                                                                  ## to 
                                                                                                                                                  ## templates.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656818 = path.getOrDefault("AwsAccountId")
  valid_402656818 = validateParameter(valid_402656818, JString, required = true,
                                      default = nil)
  if valid_402656818 != nil:
    section.add "AwsAccountId", valid_402656818
  var valid_402656819 = path.getOrDefault("TemplateId")
  valid_402656819 = validateParameter(valid_402656819, JString, required = true,
                                      default = nil)
  if valid_402656819 != nil:
    section.add "TemplateId", valid_402656819
  var valid_402656820 = path.getOrDefault("AliasName")
  valid_402656820 = validateParameter(valid_402656820, JString, required = true,
                                      default = nil)
  if valid_402656820 != nil:
    section.add "AliasName", valid_402656820
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656821 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656821 = validateParameter(valid_402656821, JString,
                                      required = false, default = nil)
  if valid_402656821 != nil:
    section.add "X-Amz-Security-Token", valid_402656821
  var valid_402656822 = header.getOrDefault("X-Amz-Signature")
  valid_402656822 = validateParameter(valid_402656822, JString,
                                      required = false, default = nil)
  if valid_402656822 != nil:
    section.add "X-Amz-Signature", valid_402656822
  var valid_402656823 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656823 = validateParameter(valid_402656823, JString,
                                      required = false, default = nil)
  if valid_402656823 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656823
  var valid_402656824 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656824 = validateParameter(valid_402656824, JString,
                                      required = false, default = nil)
  if valid_402656824 != nil:
    section.add "X-Amz-Algorithm", valid_402656824
  var valid_402656825 = header.getOrDefault("X-Amz-Date")
  valid_402656825 = validateParameter(valid_402656825, JString,
                                      required = false, default = nil)
  if valid_402656825 != nil:
    section.add "X-Amz-Date", valid_402656825
  var valid_402656826 = header.getOrDefault("X-Amz-Credential")
  valid_402656826 = validateParameter(valid_402656826, JString,
                                      required = false, default = nil)
  if valid_402656826 != nil:
    section.add "X-Amz-Credential", valid_402656826
  var valid_402656827 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656827 = validateParameter(valid_402656827, JString,
                                      required = false, default = nil)
  if valid_402656827 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656827
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656828: Call_DescribeTemplateAlias_402656815;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the template alias for a template.
                                                                                         ## 
  let valid = call_402656828.validator(path, query, header, formData, body, _)
  let scheme = call_402656828.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656828.makeUrl(scheme.get, call_402656828.host, call_402656828.base,
                                   call_402656828.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656828, uri, valid, _)

proc call*(call_402656829: Call_DescribeTemplateAlias_402656815;
           AwsAccountId: string; TemplateId: string; AliasName: string): Recallable =
  ## describeTemplateAlias
  ## Describes the template alias for a template.
  ##   AwsAccountId: string (required)
                                                 ##               : The ID of the AWS account that contains the template alias that you're describing.
  ##   
                                                                                                                                                      ## TemplateId: string (required)
                                                                                                                                                      ##             
                                                                                                                                                      ## : 
                                                                                                                                                      ## The 
                                                                                                                                                      ## ID 
                                                                                                                                                      ## for 
                                                                                                                                                      ## the 
                                                                                                                                                      ## template.
  ##   
                                                                                                                                                                  ## AliasName: string (required)
                                                                                                                                                                  ##            
                                                                                                                                                                  ## : 
                                                                                                                                                                  ## The 
                                                                                                                                                                  ## name 
                                                                                                                                                                  ## of 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## template 
                                                                                                                                                                  ## alias 
                                                                                                                                                                  ## that 
                                                                                                                                                                  ## you 
                                                                                                                                                                  ## want 
                                                                                                                                                                  ## to 
                                                                                                                                                                  ## describe. 
                                                                                                                                                                  ## If 
                                                                                                                                                                  ## you 
                                                                                                                                                                  ## name 
                                                                                                                                                                  ## a 
                                                                                                                                                                  ## specific 
                                                                                                                                                                  ## alias, 
                                                                                                                                                                  ## you 
                                                                                                                                                                  ## describe 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## version 
                                                                                                                                                                  ## that 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## alias 
                                                                                                                                                                  ## points 
                                                                                                                                                                  ## to. 
                                                                                                                                                                  ## You 
                                                                                                                                                                  ## can 
                                                                                                                                                                  ## specify 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## latest 
                                                                                                                                                                  ## version 
                                                                                                                                                                  ## of 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## template 
                                                                                                                                                                  ## by 
                                                                                                                                                                  ## providing 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## keyword 
                                                                                                                                                                  ## <code>$LATEST</code> 
                                                                                                                                                                  ## in 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## <code>AliasName</code> 
                                                                                                                                                                  ## parameter. 
                                                                                                                                                                  ## The 
                                                                                                                                                                  ## keyword 
                                                                                                                                                                  ## <code>$PUBLISHED</code> 
                                                                                                                                                                  ## doesn't 
                                                                                                                                                                  ## apply 
                                                                                                                                                                  ## to 
                                                                                                                                                                  ## templates.
  var path_402656830 = newJObject()
  add(path_402656830, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656830, "TemplateId", newJString(TemplateId))
  add(path_402656830, "AliasName", newJString(AliasName))
  result = call_402656829.call(path_402656830, nil, nil, nil, nil)

var describeTemplateAlias* = Call_DescribeTemplateAlias_402656815(
    name: "describeTemplateAlias", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}",
    validator: validate_DescribeTemplateAlias_402656816, base: "/",
    makeUrl: url_DescribeTemplateAlias_402656817,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteTemplateAlias_402656867 = ref object of OpenApiRestCall_402656044
proc url_DeleteTemplateAlias_402656869(protocol: Scheme; host: string;
                                       base: string; route: string;
                                       path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  assert "AliasName" in path, "`AliasName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/aliases/"),
                 (kind: VariableSegment, value: "AliasName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteTemplateAlias_402656868(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the item to delete.
  ##   
                                                                                                               ## TemplateId: JString (required)
                                                                                                               ##             
                                                                                                               ## : 
                                                                                                               ## The 
                                                                                                               ## ID 
                                                                                                               ## for 
                                                                                                               ## the 
                                                                                                               ## template 
                                                                                                               ## that 
                                                                                                               ## the 
                                                                                                               ## specified 
                                                                                                               ## alias 
                                                                                                               ## is 
                                                                                                               ## for.
  ##   
                                                                                                                      ## AliasName: JString (required)
                                                                                                                      ##            
                                                                                                                      ## : 
                                                                                                                      ## The 
                                                                                                                      ## name 
                                                                                                                      ## for 
                                                                                                                      ## the 
                                                                                                                      ## template 
                                                                                                                      ## alias. 
                                                                                                                      ## If 
                                                                                                                      ## you 
                                                                                                                      ## name 
                                                                                                                      ## a 
                                                                                                                      ## specific 
                                                                                                                      ## alias, 
                                                                                                                      ## you 
                                                                                                                      ## delete 
                                                                                                                      ## the 
                                                                                                                      ## version 
                                                                                                                      ## that 
                                                                                                                      ## the 
                                                                                                                      ## alias 
                                                                                                                      ## points 
                                                                                                                      ## to. 
                                                                                                                      ## You 
                                                                                                                      ## can 
                                                                                                                      ## specify 
                                                                                                                      ## the 
                                                                                                                      ## latest 
                                                                                                                      ## version 
                                                                                                                      ## of 
                                                                                                                      ## the 
                                                                                                                      ## template 
                                                                                                                      ## by 
                                                                                                                      ## providing 
                                                                                                                      ## the 
                                                                                                                      ## keyword 
                                                                                                                      ## <code>$LATEST</code> 
                                                                                                                      ## in 
                                                                                                                      ## the 
                                                                                                                      ## <code>AliasName</code> 
                                                                                                                      ## parameter. 
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656870 = path.getOrDefault("AwsAccountId")
  valid_402656870 = validateParameter(valid_402656870, JString, required = true,
                                      default = nil)
  if valid_402656870 != nil:
    section.add "AwsAccountId", valid_402656870
  var valid_402656871 = path.getOrDefault("TemplateId")
  valid_402656871 = validateParameter(valid_402656871, JString, required = true,
                                      default = nil)
  if valid_402656871 != nil:
    section.add "TemplateId", valid_402656871
  var valid_402656872 = path.getOrDefault("AliasName")
  valid_402656872 = validateParameter(valid_402656872, JString, required = true,
                                      default = nil)
  if valid_402656872 != nil:
    section.add "AliasName", valid_402656872
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656873 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656873 = validateParameter(valid_402656873, JString,
                                      required = false, default = nil)
  if valid_402656873 != nil:
    section.add "X-Amz-Security-Token", valid_402656873
  var valid_402656874 = header.getOrDefault("X-Amz-Signature")
  valid_402656874 = validateParameter(valid_402656874, JString,
                                      required = false, default = nil)
  if valid_402656874 != nil:
    section.add "X-Amz-Signature", valid_402656874
  var valid_402656875 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656875 = validateParameter(valid_402656875, JString,
                                      required = false, default = nil)
  if valid_402656875 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656875
  var valid_402656876 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656876 = validateParameter(valid_402656876, JString,
                                      required = false, default = nil)
  if valid_402656876 != nil:
    section.add "X-Amz-Algorithm", valid_402656876
  var valid_402656877 = header.getOrDefault("X-Amz-Date")
  valid_402656877 = validateParameter(valid_402656877, JString,
                                      required = false, default = nil)
  if valid_402656877 != nil:
    section.add "X-Amz-Date", valid_402656877
  var valid_402656878 = header.getOrDefault("X-Amz-Credential")
  valid_402656878 = validateParameter(valid_402656878, JString,
                                      required = false, default = nil)
  if valid_402656878 != nil:
    section.add "X-Amz-Credential", valid_402656878
  var valid_402656879 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656879 = validateParameter(valid_402656879, JString,
                                      required = false, default = nil)
  if valid_402656879 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656879
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656880: Call_DeleteTemplateAlias_402656867;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.
                                                                                         ## 
  let valid = call_402656880.validator(path, query, header, formData, body, _)
  let scheme = call_402656880.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656880.makeUrl(scheme.get, call_402656880.host, call_402656880.base,
                                   call_402656880.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656880, uri, valid, _)

proc call*(call_402656881: Call_DeleteTemplateAlias_402656867;
           AwsAccountId: string; TemplateId: string; AliasName: string): Recallable =
  ## deleteTemplateAlias
  ## Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.
  ##   
                                                                                                                                                                    ## AwsAccountId: string (required)
                                                                                                                                                                    ##               
                                                                                                                                                                    ## : 
                                                                                                                                                                    ## The 
                                                                                                                                                                    ## ID 
                                                                                                                                                                    ## of 
                                                                                                                                                                    ## the 
                                                                                                                                                                    ## AWS 
                                                                                                                                                                    ## account 
                                                                                                                                                                    ## that 
                                                                                                                                                                    ## contains 
                                                                                                                                                                    ## the 
                                                                                                                                                                    ## item 
                                                                                                                                                                    ## to 
                                                                                                                                                                    ## delete.
  ##   
                                                                                                                                                                              ## TemplateId: string (required)
                                                                                                                                                                              ##             
                                                                                                                                                                              ## : 
                                                                                                                                                                              ## The 
                                                                                                                                                                              ## ID 
                                                                                                                                                                              ## for 
                                                                                                                                                                              ## the 
                                                                                                                                                                              ## template 
                                                                                                                                                                              ## that 
                                                                                                                                                                              ## the 
                                                                                                                                                                              ## specified 
                                                                                                                                                                              ## alias 
                                                                                                                                                                              ## is 
                                                                                                                                                                              ## for.
  ##   
                                                                                                                                                                                     ## AliasName: string (required)
                                                                                                                                                                                     ##            
                                                                                                                                                                                     ## : 
                                                                                                                                                                                     ## The 
                                                                                                                                                                                     ## name 
                                                                                                                                                                                     ## for 
                                                                                                                                                                                     ## the 
                                                                                                                                                                                     ## template 
                                                                                                                                                                                     ## alias. 
                                                                                                                                                                                     ## If 
                                                                                                                                                                                     ## you 
                                                                                                                                                                                     ## name 
                                                                                                                                                                                     ## a 
                                                                                                                                                                                     ## specific 
                                                                                                                                                                                     ## alias, 
                                                                                                                                                                                     ## you 
                                                                                                                                                                                     ## delete 
                                                                                                                                                                                     ## the 
                                                                                                                                                                                     ## version 
                                                                                                                                                                                     ## that 
                                                                                                                                                                                     ## the 
                                                                                                                                                                                     ## alias 
                                                                                                                                                                                     ## points 
                                                                                                                                                                                     ## to. 
                                                                                                                                                                                     ## You 
                                                                                                                                                                                     ## can 
                                                                                                                                                                                     ## specify 
                                                                                                                                                                                     ## the 
                                                                                                                                                                                     ## latest 
                                                                                                                                                                                     ## version 
                                                                                                                                                                                     ## of 
                                                                                                                                                                                     ## the 
                                                                                                                                                                                     ## template 
                                                                                                                                                                                     ## by 
                                                                                                                                                                                     ## providing 
                                                                                                                                                                                     ## the 
                                                                                                                                                                                     ## keyword 
                                                                                                                                                                                     ## <code>$LATEST</code> 
                                                                                                                                                                                     ## in 
                                                                                                                                                                                     ## the 
                                                                                                                                                                                     ## <code>AliasName</code> 
                                                                                                                                                                                     ## parameter. 
  var path_402656882 = newJObject()
  add(path_402656882, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656882, "TemplateId", newJString(TemplateId))
  add(path_402656882, "AliasName", newJString(AliasName))
  result = call_402656881.call(path_402656882, nil, nil, nil, nil)

var deleteTemplateAlias* = Call_DeleteTemplateAlias_402656867(
    name: "deleteTemplateAlias", meth: HttpMethod.HttpDelete,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}",
    validator: validate_DeleteTemplateAlias_402656868, base: "/",
    makeUrl: url_DeleteTemplateAlias_402656869,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateDataSet_402656898 = ref object of OpenApiRestCall_402656044
proc url_UpdateDataSet_402656900(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateDataSet_402656899(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Updates a dataset.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID for the 
                                                                       ## dataset 
                                                                       ## that 
                                                                       ## you 
                                                                       ## want to 
                                                                       ## update. 
                                                                       ## This 
                                                                       ## ID 
                                                                       ## is 
                                                                       ## unique per AWS 
                                                                       ## Region 
                                                                       ## for 
                                                                       ## each 
                                                                       ## AWS 
                                                                       ## account.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656901 = path.getOrDefault("AwsAccountId")
  valid_402656901 = validateParameter(valid_402656901, JString, required = true,
                                      default = nil)
  if valid_402656901 != nil:
    section.add "AwsAccountId", valid_402656901
  var valid_402656902 = path.getOrDefault("DataSetId")
  valid_402656902 = validateParameter(valid_402656902, JString, required = true,
                                      default = nil)
  if valid_402656902 != nil:
    section.add "DataSetId", valid_402656902
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656903 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656903 = validateParameter(valid_402656903, JString,
                                      required = false, default = nil)
  if valid_402656903 != nil:
    section.add "X-Amz-Security-Token", valid_402656903
  var valid_402656904 = header.getOrDefault("X-Amz-Signature")
  valid_402656904 = validateParameter(valid_402656904, JString,
                                      required = false, default = nil)
  if valid_402656904 != nil:
    section.add "X-Amz-Signature", valid_402656904
  var valid_402656905 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656905 = validateParameter(valid_402656905, JString,
                                      required = false, default = nil)
  if valid_402656905 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656905
  var valid_402656906 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656906 = validateParameter(valid_402656906, JString,
                                      required = false, default = nil)
  if valid_402656906 != nil:
    section.add "X-Amz-Algorithm", valid_402656906
  var valid_402656907 = header.getOrDefault("X-Amz-Date")
  valid_402656907 = validateParameter(valid_402656907, JString,
                                      required = false, default = nil)
  if valid_402656907 != nil:
    section.add "X-Amz-Date", valid_402656907
  var valid_402656908 = header.getOrDefault("X-Amz-Credential")
  valid_402656908 = validateParameter(valid_402656908, JString,
                                      required = false, default = nil)
  if valid_402656908 != nil:
    section.add "X-Amz-Credential", valid_402656908
  var valid_402656909 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656909 = validateParameter(valid_402656909, JString,
                                      required = false, default = nil)
  if valid_402656909 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656909
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656911: Call_UpdateDataSet_402656898; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates a dataset.
                                                                                         ## 
  let valid = call_402656911.validator(path, query, header, formData, body, _)
  let scheme = call_402656911.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656911.makeUrl(scheme.get, call_402656911.host, call_402656911.base,
                                   call_402656911.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656911, uri, valid, _)

proc call*(call_402656912: Call_UpdateDataSet_402656898; AwsAccountId: string;
           body: JsonNode; DataSetId: string): Recallable =
  ## updateDataSet
  ## Updates a dataset.
  ##   AwsAccountId: string (required)
                       ##               : The AWS account ID.
  ##   body: JObject (required)
  ##   DataSetId: string (required)
                               ##            : The ID for the dataset that you want to update. This ID is unique per AWS Region for each AWS account.
  var path_402656913 = newJObject()
  var body_402656914 = newJObject()
  add(path_402656913, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656914 = body
  add(path_402656913, "DataSetId", newJString(DataSetId))
  result = call_402656912.call(path_402656913, nil, nil, nil, body_402656914)

var updateDataSet* = Call_UpdateDataSet_402656898(name: "updateDataSet",
    meth: HttpMethod.HttpPut, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}",
    validator: validate_UpdateDataSet_402656899, base: "/",
    makeUrl: url_UpdateDataSet_402656900, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeDataSet_402656883 = ref object of OpenApiRestCall_402656044
proc url_DescribeDataSet_402656885(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode;
                                   query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeDataSet_402656884(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes a dataset. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID for the 
                                                                       ## dataset 
                                                                       ## that 
                                                                       ## you 
                                                                       ## want to 
                                                                       ## create. 
                                                                       ## This 
                                                                       ## ID 
                                                                       ## is 
                                                                       ## unique per AWS 
                                                                       ## Region 
                                                                       ## for 
                                                                       ## each 
                                                                       ## AWS 
                                                                       ## account.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656886 = path.getOrDefault("AwsAccountId")
  valid_402656886 = validateParameter(valid_402656886, JString, required = true,
                                      default = nil)
  if valid_402656886 != nil:
    section.add "AwsAccountId", valid_402656886
  var valid_402656887 = path.getOrDefault("DataSetId")
  valid_402656887 = validateParameter(valid_402656887, JString, required = true,
                                      default = nil)
  if valid_402656887 != nil:
    section.add "DataSetId", valid_402656887
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656888 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656888 = validateParameter(valid_402656888, JString,
                                      required = false, default = nil)
  if valid_402656888 != nil:
    section.add "X-Amz-Security-Token", valid_402656888
  var valid_402656889 = header.getOrDefault("X-Amz-Signature")
  valid_402656889 = validateParameter(valid_402656889, JString,
                                      required = false, default = nil)
  if valid_402656889 != nil:
    section.add "X-Amz-Signature", valid_402656889
  var valid_402656890 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656890 = validateParameter(valid_402656890, JString,
                                      required = false, default = nil)
  if valid_402656890 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656890
  var valid_402656891 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656891 = validateParameter(valid_402656891, JString,
                                      required = false, default = nil)
  if valid_402656891 != nil:
    section.add "X-Amz-Algorithm", valid_402656891
  var valid_402656892 = header.getOrDefault("X-Amz-Date")
  valid_402656892 = validateParameter(valid_402656892, JString,
                                      required = false, default = nil)
  if valid_402656892 != nil:
    section.add "X-Amz-Date", valid_402656892
  var valid_402656893 = header.getOrDefault("X-Amz-Credential")
  valid_402656893 = validateParameter(valid_402656893, JString,
                                      required = false, default = nil)
  if valid_402656893 != nil:
    section.add "X-Amz-Credential", valid_402656893
  var valid_402656894 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656894 = validateParameter(valid_402656894, JString,
                                      required = false, default = nil)
  if valid_402656894 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656894
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656895: Call_DescribeDataSet_402656883; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes a dataset. 
                                                                                         ## 
  let valid = call_402656895.validator(path, query, header, formData, body, _)
  let scheme = call_402656895.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656895.makeUrl(scheme.get, call_402656895.host, call_402656895.base,
                                   call_402656895.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656895, uri, valid, _)

proc call*(call_402656896: Call_DescribeDataSet_402656883; AwsAccountId: string;
           DataSetId: string): Recallable =
  ## describeDataSet
  ## Describes a dataset. 
  ##   AwsAccountId: string (required)
                          ##               : The AWS account ID.
  ##   DataSetId: string (required)
                                                                ##            : The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
  var path_402656897 = newJObject()
  add(path_402656897, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656897, "DataSetId", newJString(DataSetId))
  result = call_402656896.call(path_402656897, nil, nil, nil, nil)

var describeDataSet* = Call_DescribeDataSet_402656883(name: "describeDataSet",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}",
    validator: validate_DescribeDataSet_402656884, base: "/",
    makeUrl: url_DescribeDataSet_402656885, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteDataSet_402656915 = ref object of OpenApiRestCall_402656044
proc url_DeleteDataSet_402656917(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteDataSet_402656916(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a dataset.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID for the 
                                                                       ## dataset 
                                                                       ## that 
                                                                       ## you 
                                                                       ## want to 
                                                                       ## create. 
                                                                       ## This 
                                                                       ## ID 
                                                                       ## is 
                                                                       ## unique per AWS 
                                                                       ## Region 
                                                                       ## for 
                                                                       ## each 
                                                                       ## AWS 
                                                                       ## account.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656918 = path.getOrDefault("AwsAccountId")
  valid_402656918 = validateParameter(valid_402656918, JString, required = true,
                                      default = nil)
  if valid_402656918 != nil:
    section.add "AwsAccountId", valid_402656918
  var valid_402656919 = path.getOrDefault("DataSetId")
  valid_402656919 = validateParameter(valid_402656919, JString, required = true,
                                      default = nil)
  if valid_402656919 != nil:
    section.add "DataSetId", valid_402656919
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656920 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656920 = validateParameter(valid_402656920, JString,
                                      required = false, default = nil)
  if valid_402656920 != nil:
    section.add "X-Amz-Security-Token", valid_402656920
  var valid_402656921 = header.getOrDefault("X-Amz-Signature")
  valid_402656921 = validateParameter(valid_402656921, JString,
                                      required = false, default = nil)
  if valid_402656921 != nil:
    section.add "X-Amz-Signature", valid_402656921
  var valid_402656922 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656922 = validateParameter(valid_402656922, JString,
                                      required = false, default = nil)
  if valid_402656922 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656922
  var valid_402656923 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656923 = validateParameter(valid_402656923, JString,
                                      required = false, default = nil)
  if valid_402656923 != nil:
    section.add "X-Amz-Algorithm", valid_402656923
  var valid_402656924 = header.getOrDefault("X-Amz-Date")
  valid_402656924 = validateParameter(valid_402656924, JString,
                                      required = false, default = nil)
  if valid_402656924 != nil:
    section.add "X-Amz-Date", valid_402656924
  var valid_402656925 = header.getOrDefault("X-Amz-Credential")
  valid_402656925 = validateParameter(valid_402656925, JString,
                                      required = false, default = nil)
  if valid_402656925 != nil:
    section.add "X-Amz-Credential", valid_402656925
  var valid_402656926 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656926 = validateParameter(valid_402656926, JString,
                                      required = false, default = nil)
  if valid_402656926 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656926
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656927: Call_DeleteDataSet_402656915; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a dataset.
                                                                                         ## 
  let valid = call_402656927.validator(path, query, header, formData, body, _)
  let scheme = call_402656927.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656927.makeUrl(scheme.get, call_402656927.host, call_402656927.base,
                                   call_402656927.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656927, uri, valid, _)

proc call*(call_402656928: Call_DeleteDataSet_402656915; AwsAccountId: string;
           DataSetId: string): Recallable =
  ## deleteDataSet
  ## Deletes a dataset.
  ##   AwsAccountId: string (required)
                       ##               : The AWS account ID.
  ##   DataSetId: string (required)
                                                             ##            : The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
  var path_402656929 = newJObject()
  add(path_402656929, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656929, "DataSetId", newJString(DataSetId))
  result = call_402656928.call(path_402656929, nil, nil, nil, nil)

var deleteDataSet* = Call_DeleteDataSet_402656915(name: "deleteDataSet",
    meth: HttpMethod.HttpDelete, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}",
    validator: validate_DeleteDataSet_402656916, base: "/",
    makeUrl: url_DeleteDataSet_402656917, schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateDataSource_402656945 = ref object of OpenApiRestCall_402656044
proc url_UpdateDataSource_402656947(protocol: Scheme; host: string;
                                    base: string; route: string; path: JsonNode;
                                    query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSourceId" in path, "`DataSourceId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sources/"),
                 (kind: VariableSegment, value: "DataSourceId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateDataSource_402656946(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Updates a data source.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   DataSourceId: JString (required)
                                 ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account. 
  ##   
                                                                                                                                      ## AwsAccountId: JString (required)
                                                                                                                                      ##               
                                                                                                                                      ## : 
                                                                                                                                      ## The 
                                                                                                                                      ## AWS 
                                                                                                                                      ## account 
                                                                                                                                      ## ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `DataSourceId` field"
  var valid_402656948 = path.getOrDefault("DataSourceId")
  valid_402656948 = validateParameter(valid_402656948, JString, required = true,
                                      default = nil)
  if valid_402656948 != nil:
    section.add "DataSourceId", valid_402656948
  var valid_402656949 = path.getOrDefault("AwsAccountId")
  valid_402656949 = validateParameter(valid_402656949, JString, required = true,
                                      default = nil)
  if valid_402656949 != nil:
    section.add "AwsAccountId", valid_402656949
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656950 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656950 = validateParameter(valid_402656950, JString,
                                      required = false, default = nil)
  if valid_402656950 != nil:
    section.add "X-Amz-Security-Token", valid_402656950
  var valid_402656951 = header.getOrDefault("X-Amz-Signature")
  valid_402656951 = validateParameter(valid_402656951, JString,
                                      required = false, default = nil)
  if valid_402656951 != nil:
    section.add "X-Amz-Signature", valid_402656951
  var valid_402656952 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656952 = validateParameter(valid_402656952, JString,
                                      required = false, default = nil)
  if valid_402656952 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656952
  var valid_402656953 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656953 = validateParameter(valid_402656953, JString,
                                      required = false, default = nil)
  if valid_402656953 != nil:
    section.add "X-Amz-Algorithm", valid_402656953
  var valid_402656954 = header.getOrDefault("X-Amz-Date")
  valid_402656954 = validateParameter(valid_402656954, JString,
                                      required = false, default = nil)
  if valid_402656954 != nil:
    section.add "X-Amz-Date", valid_402656954
  var valid_402656955 = header.getOrDefault("X-Amz-Credential")
  valid_402656955 = validateParameter(valid_402656955, JString,
                                      required = false, default = nil)
  if valid_402656955 != nil:
    section.add "X-Amz-Credential", valid_402656955
  var valid_402656956 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656956 = validateParameter(valid_402656956, JString,
                                      required = false, default = nil)
  if valid_402656956 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656956
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402656958: Call_UpdateDataSource_402656945;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates a data source.
                                                                                         ## 
  let valid = call_402656958.validator(path, query, header, formData, body, _)
  let scheme = call_402656958.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656958.makeUrl(scheme.get, call_402656958.host, call_402656958.base,
                                   call_402656958.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656958, uri, valid, _)

proc call*(call_402656959: Call_UpdateDataSource_402656945;
           DataSourceId: string; AwsAccountId: string; body: JsonNode): Recallable =
  ## updateDataSource
  ## Updates a data source.
  ##   DataSourceId: string (required)
                           ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account. 
  ##   
                                                                                                                                ## AwsAccountId: string (required)
                                                                                                                                ##               
                                                                                                                                ## : 
                                                                                                                                ## The 
                                                                                                                                ## AWS 
                                                                                                                                ## account 
                                                                                                                                ## ID.
  ##   
                                                                                                                                      ## body: JObject (required)
  var path_402656960 = newJObject()
  var body_402656961 = newJObject()
  add(path_402656960, "DataSourceId", newJString(DataSourceId))
  add(path_402656960, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402656961 = body
  result = call_402656959.call(path_402656960, nil, nil, nil, body_402656961)

var updateDataSource* = Call_UpdateDataSource_402656945(
    name: "updateDataSource", meth: HttpMethod.HttpPut,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sources/{DataSourceId}",
    validator: validate_UpdateDataSource_402656946, base: "/",
    makeUrl: url_UpdateDataSource_402656947,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeDataSource_402656930 = ref object of OpenApiRestCall_402656044
proc url_DescribeDataSource_402656932(protocol: Scheme; host: string;
                                      base: string; route: string;
                                      path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSourceId" in path, "`DataSourceId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sources/"),
                 (kind: VariableSegment, value: "DataSourceId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeDataSource_402656931(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Describes a data source.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   DataSourceId: JString (required)
                                 ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account.
  ##   
                                                                                                                                     ## AwsAccountId: JString (required)
                                                                                                                                     ##               
                                                                                                                                     ## : 
                                                                                                                                     ## The 
                                                                                                                                     ## AWS 
                                                                                                                                     ## account 
                                                                                                                                     ## ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `DataSourceId` field"
  var valid_402656933 = path.getOrDefault("DataSourceId")
  valid_402656933 = validateParameter(valid_402656933, JString, required = true,
                                      default = nil)
  if valid_402656933 != nil:
    section.add "DataSourceId", valid_402656933
  var valid_402656934 = path.getOrDefault("AwsAccountId")
  valid_402656934 = validateParameter(valid_402656934, JString, required = true,
                                      default = nil)
  if valid_402656934 != nil:
    section.add "AwsAccountId", valid_402656934
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656935 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656935 = validateParameter(valid_402656935, JString,
                                      required = false, default = nil)
  if valid_402656935 != nil:
    section.add "X-Amz-Security-Token", valid_402656935
  var valid_402656936 = header.getOrDefault("X-Amz-Signature")
  valid_402656936 = validateParameter(valid_402656936, JString,
                                      required = false, default = nil)
  if valid_402656936 != nil:
    section.add "X-Amz-Signature", valid_402656936
  var valid_402656937 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656937 = validateParameter(valid_402656937, JString,
                                      required = false, default = nil)
  if valid_402656937 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656937
  var valid_402656938 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656938 = validateParameter(valid_402656938, JString,
                                      required = false, default = nil)
  if valid_402656938 != nil:
    section.add "X-Amz-Algorithm", valid_402656938
  var valid_402656939 = header.getOrDefault("X-Amz-Date")
  valid_402656939 = validateParameter(valid_402656939, JString,
                                      required = false, default = nil)
  if valid_402656939 != nil:
    section.add "X-Amz-Date", valid_402656939
  var valid_402656940 = header.getOrDefault("X-Amz-Credential")
  valid_402656940 = validateParameter(valid_402656940, JString,
                                      required = false, default = nil)
  if valid_402656940 != nil:
    section.add "X-Amz-Credential", valid_402656940
  var valid_402656941 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656941 = validateParameter(valid_402656941, JString,
                                      required = false, default = nil)
  if valid_402656941 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656941
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656942: Call_DescribeDataSource_402656930;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes a data source.
                                                                                         ## 
  let valid = call_402656942.validator(path, query, header, formData, body, _)
  let scheme = call_402656942.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656942.makeUrl(scheme.get, call_402656942.host, call_402656942.base,
                                   call_402656942.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656942, uri, valid, _)

proc call*(call_402656943: Call_DescribeDataSource_402656930;
           DataSourceId: string; AwsAccountId: string): Recallable =
  ## describeDataSource
  ## Describes a data source.
  ##   DataSourceId: string (required)
                             ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account.
  ##   
                                                                                                                                 ## AwsAccountId: string (required)
                                                                                                                                 ##               
                                                                                                                                 ## : 
                                                                                                                                 ## The 
                                                                                                                                 ## AWS 
                                                                                                                                 ## account 
                                                                                                                                 ## ID.
  var path_402656944 = newJObject()
  add(path_402656944, "DataSourceId", newJString(DataSourceId))
  add(path_402656944, "AwsAccountId", newJString(AwsAccountId))
  result = call_402656943.call(path_402656944, nil, nil, nil, nil)

var describeDataSource* = Call_DescribeDataSource_402656930(
    name: "describeDataSource", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sources/{DataSourceId}",
    validator: validate_DescribeDataSource_402656931, base: "/",
    makeUrl: url_DescribeDataSource_402656932,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteDataSource_402656962 = ref object of OpenApiRestCall_402656044
proc url_DeleteDataSource_402656964(protocol: Scheme; host: string;
                                    base: string; route: string; path: JsonNode;
                                    query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSourceId" in path, "`DataSourceId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sources/"),
                 (kind: VariableSegment, value: "DataSourceId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteDataSource_402656963(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes the data source permanently. This action breaks all the datasets that reference the deleted data source.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   DataSourceId: JString (required)
                                 ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account.
  ##   
                                                                                                                                     ## AwsAccountId: JString (required)
                                                                                                                                     ##               
                                                                                                                                     ## : 
                                                                                                                                     ## The 
                                                                                                                                     ## AWS 
                                                                                                                                     ## account 
                                                                                                                                     ## ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `DataSourceId` field"
  var valid_402656965 = path.getOrDefault("DataSourceId")
  valid_402656965 = validateParameter(valid_402656965, JString, required = true,
                                      default = nil)
  if valid_402656965 != nil:
    section.add "DataSourceId", valid_402656965
  var valid_402656966 = path.getOrDefault("AwsAccountId")
  valid_402656966 = validateParameter(valid_402656966, JString, required = true,
                                      default = nil)
  if valid_402656966 != nil:
    section.add "AwsAccountId", valid_402656966
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656967 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656967 = validateParameter(valid_402656967, JString,
                                      required = false, default = nil)
  if valid_402656967 != nil:
    section.add "X-Amz-Security-Token", valid_402656967
  var valid_402656968 = header.getOrDefault("X-Amz-Signature")
  valid_402656968 = validateParameter(valid_402656968, JString,
                                      required = false, default = nil)
  if valid_402656968 != nil:
    section.add "X-Amz-Signature", valid_402656968
  var valid_402656969 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656969 = validateParameter(valid_402656969, JString,
                                      required = false, default = nil)
  if valid_402656969 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656969
  var valid_402656970 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656970 = validateParameter(valid_402656970, JString,
                                      required = false, default = nil)
  if valid_402656970 != nil:
    section.add "X-Amz-Algorithm", valid_402656970
  var valid_402656971 = header.getOrDefault("X-Amz-Date")
  valid_402656971 = validateParameter(valid_402656971, JString,
                                      required = false, default = nil)
  if valid_402656971 != nil:
    section.add "X-Amz-Date", valid_402656971
  var valid_402656972 = header.getOrDefault("X-Amz-Credential")
  valid_402656972 = validateParameter(valid_402656972, JString,
                                      required = false, default = nil)
  if valid_402656972 != nil:
    section.add "X-Amz-Credential", valid_402656972
  var valid_402656973 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656973 = validateParameter(valid_402656973, JString,
                                      required = false, default = nil)
  if valid_402656973 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656973
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656974: Call_DeleteDataSource_402656962;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the data source permanently. This action breaks all the datasets that reference the deleted data source.
                                                                                         ## 
  let valid = call_402656974.validator(path, query, header, formData, body, _)
  let scheme = call_402656974.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656974.makeUrl(scheme.get, call_402656974.host, call_402656974.base,
                                   call_402656974.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656974, uri, valid, _)

proc call*(call_402656975: Call_DeleteDataSource_402656962;
           DataSourceId: string; AwsAccountId: string): Recallable =
  ## deleteDataSource
  ## Deletes the data source permanently. This action breaks all the datasets that reference the deleted data source.
  ##   
                                                                                                                     ## DataSourceId: string (required)
                                                                                                                     ##               
                                                                                                                     ## : 
                                                                                                                     ## The 
                                                                                                                     ## ID 
                                                                                                                     ## of 
                                                                                                                     ## the 
                                                                                                                     ## data 
                                                                                                                     ## source. 
                                                                                                                     ## This 
                                                                                                                     ## ID 
                                                                                                                     ## is 
                                                                                                                     ## unique 
                                                                                                                     ## per 
                                                                                                                     ## AWS 
                                                                                                                     ## Region 
                                                                                                                     ## for 
                                                                                                                     ## each 
                                                                                                                     ## AWS 
                                                                                                                     ## account.
  ##   
                                                                                                                                ## AwsAccountId: string (required)
                                                                                                                                ##               
                                                                                                                                ## : 
                                                                                                                                ## The 
                                                                                                                                ## AWS 
                                                                                                                                ## account 
                                                                                                                                ## ID.
  var path_402656976 = newJObject()
  add(path_402656976, "DataSourceId", newJString(DataSourceId))
  add(path_402656976, "AwsAccountId", newJString(AwsAccountId))
  result = call_402656975.call(path_402656976, nil, nil, nil, nil)

var deleteDataSource* = Call_DeleteDataSource_402656962(
    name: "deleteDataSource", meth: HttpMethod.HttpDelete,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sources/{DataSourceId}",
    validator: validate_DeleteDataSource_402656963, base: "/",
    makeUrl: url_DeleteDataSource_402656964,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateGroup_402656993 = ref object of OpenApiRestCall_402656044
proc url_UpdateGroup_402656995(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "GroupName" in path, "`GroupName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups/"),
                 (kind: VariableSegment, value: "GroupName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateGroup_402656994(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Changes a group description. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## Namespace: JString (required)
                                                                                                                                                                                                ##            
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## namespace. 
                                                                                                                                                                                                ## Currently, 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## should 
                                                                                                                                                                                                ## set 
                                                                                                                                                                                                ## this 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## <code>default</code>.
  ##   
                                                                                                                                                                                                                        ## GroupName: JString (required)
                                                                                                                                                                                                                        ##            
                                                                                                                                                                                                                        ## : 
                                                                                                                                                                                                                        ## The 
                                                                                                                                                                                                                        ## name 
                                                                                                                                                                                                                        ## of 
                                                                                                                                                                                                                        ## the 
                                                                                                                                                                                                                        ## group 
                                                                                                                                                                                                                        ## that 
                                                                                                                                                                                                                        ## you 
                                                                                                                                                                                                                        ## want 
                                                                                                                                                                                                                        ## to 
                                                                                                                                                                                                                        ## update.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656996 = path.getOrDefault("AwsAccountId")
  valid_402656996 = validateParameter(valid_402656996, JString, required = true,
                                      default = nil)
  if valid_402656996 != nil:
    section.add "AwsAccountId", valid_402656996
  var valid_402656997 = path.getOrDefault("Namespace")
  valid_402656997 = validateParameter(valid_402656997, JString, required = true,
                                      default = nil)
  if valid_402656997 != nil:
    section.add "Namespace", valid_402656997
  var valid_402656998 = path.getOrDefault("GroupName")
  valid_402656998 = validateParameter(valid_402656998, JString, required = true,
                                      default = nil)
  if valid_402656998 != nil:
    section.add "GroupName", valid_402656998
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656999 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656999 = validateParameter(valid_402656999, JString,
                                      required = false, default = nil)
  if valid_402656999 != nil:
    section.add "X-Amz-Security-Token", valid_402656999
  var valid_402657000 = header.getOrDefault("X-Amz-Signature")
  valid_402657000 = validateParameter(valid_402657000, JString,
                                      required = false, default = nil)
  if valid_402657000 != nil:
    section.add "X-Amz-Signature", valid_402657000
  var valid_402657001 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657001 = validateParameter(valid_402657001, JString,
                                      required = false, default = nil)
  if valid_402657001 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657001
  var valid_402657002 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657002 = validateParameter(valid_402657002, JString,
                                      required = false, default = nil)
  if valid_402657002 != nil:
    section.add "X-Amz-Algorithm", valid_402657002
  var valid_402657003 = header.getOrDefault("X-Amz-Date")
  valid_402657003 = validateParameter(valid_402657003, JString,
                                      required = false, default = nil)
  if valid_402657003 != nil:
    section.add "X-Amz-Date", valid_402657003
  var valid_402657004 = header.getOrDefault("X-Amz-Credential")
  valid_402657004 = validateParameter(valid_402657004, JString,
                                      required = false, default = nil)
  if valid_402657004 != nil:
    section.add "X-Amz-Credential", valid_402657004
  var valid_402657005 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657005 = validateParameter(valid_402657005, JString,
                                      required = false, default = nil)
  if valid_402657005 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657005
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657007: Call_UpdateGroup_402656993; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Changes a group description. 
                                                                                         ## 
  let valid = call_402657007.validator(path, query, header, formData, body, _)
  let scheme = call_402657007.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657007.makeUrl(scheme.get, call_402657007.host, call_402657007.base,
                                   call_402657007.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657007, uri, valid, _)

proc call*(call_402657008: Call_UpdateGroup_402656993; AwsAccountId: string;
           body: JsonNode; Namespace: string; GroupName: string): Recallable =
  ## updateGroup
  ## Changes a group description. 
  ##   AwsAccountId: string (required)
                                  ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                 ## body: JObject (required)
  ##   
                                                                                                                                                                                                                            ## Namespace: string (required)
                                                                                                                                                                                                                            ##            
                                                                                                                                                                                                                            ## : 
                                                                                                                                                                                                                            ## The 
                                                                                                                                                                                                                            ## namespace. 
                                                                                                                                                                                                                            ## Currently, 
                                                                                                                                                                                                                            ## you 
                                                                                                                                                                                                                            ## should 
                                                                                                                                                                                                                            ## set 
                                                                                                                                                                                                                            ## this 
                                                                                                                                                                                                                            ## to 
                                                                                                                                                                                                                            ## <code>default</code>.
  ##   
                                                                                                                                                                                                                                                    ## GroupName: string (required)
                                                                                                                                                                                                                                                    ##            
                                                                                                                                                                                                                                                    ## : 
                                                                                                                                                                                                                                                    ## The 
                                                                                                                                                                                                                                                    ## name 
                                                                                                                                                                                                                                                    ## of 
                                                                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                                                                    ## group 
                                                                                                                                                                                                                                                    ## that 
                                                                                                                                                                                                                                                    ## you 
                                                                                                                                                                                                                                                    ## want 
                                                                                                                                                                                                                                                    ## to 
                                                                                                                                                                                                                                                    ## update.
  var path_402657009 = newJObject()
  var body_402657010 = newJObject()
  add(path_402657009, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402657010 = body
  add(path_402657009, "Namespace", newJString(Namespace))
  add(path_402657009, "GroupName", newJString(GroupName))
  result = call_402657008.call(path_402657009, nil, nil, nil, body_402657010)

var updateGroup* = Call_UpdateGroup_402656993(name: "updateGroup",
    meth: HttpMethod.HttpPut, host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}",
    validator: validate_UpdateGroup_402656994, base: "/",
    makeUrl: url_UpdateGroup_402656995, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeGroup_402656977 = ref object of OpenApiRestCall_402656044
proc url_DescribeGroup_402656979(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "GroupName" in path, "`GroupName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups/"),
                 (kind: VariableSegment, value: "GroupName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeGroup_402656978(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## Namespace: JString (required)
                                                                                                                                                                                                ##            
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## namespace. 
                                                                                                                                                                                                ## Currently, 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## should 
                                                                                                                                                                                                ## set 
                                                                                                                                                                                                ## this 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## <code>default</code>.
  ##   
                                                                                                                                                                                                                        ## GroupName: JString (required)
                                                                                                                                                                                                                        ##            
                                                                                                                                                                                                                        ## : 
                                                                                                                                                                                                                        ## The 
                                                                                                                                                                                                                        ## name 
                                                                                                                                                                                                                        ## of 
                                                                                                                                                                                                                        ## the 
                                                                                                                                                                                                                        ## group 
                                                                                                                                                                                                                        ## that 
                                                                                                                                                                                                                        ## you 
                                                                                                                                                                                                                        ## want 
                                                                                                                                                                                                                        ## to 
                                                                                                                                                                                                                        ## describe.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402656980 = path.getOrDefault("AwsAccountId")
  valid_402656980 = validateParameter(valid_402656980, JString, required = true,
                                      default = nil)
  if valid_402656980 != nil:
    section.add "AwsAccountId", valid_402656980
  var valid_402656981 = path.getOrDefault("Namespace")
  valid_402656981 = validateParameter(valid_402656981, JString, required = true,
                                      default = nil)
  if valid_402656981 != nil:
    section.add "Namespace", valid_402656981
  var valid_402656982 = path.getOrDefault("GroupName")
  valid_402656982 = validateParameter(valid_402656982, JString, required = true,
                                      default = nil)
  if valid_402656982 != nil:
    section.add "GroupName", valid_402656982
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402656983 = header.getOrDefault("X-Amz-Security-Token")
  valid_402656983 = validateParameter(valid_402656983, JString,
                                      required = false, default = nil)
  if valid_402656983 != nil:
    section.add "X-Amz-Security-Token", valid_402656983
  var valid_402656984 = header.getOrDefault("X-Amz-Signature")
  valid_402656984 = validateParameter(valid_402656984, JString,
                                      required = false, default = nil)
  if valid_402656984 != nil:
    section.add "X-Amz-Signature", valid_402656984
  var valid_402656985 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402656985 = validateParameter(valid_402656985, JString,
                                      required = false, default = nil)
  if valid_402656985 != nil:
    section.add "X-Amz-Content-Sha256", valid_402656985
  var valid_402656986 = header.getOrDefault("X-Amz-Algorithm")
  valid_402656986 = validateParameter(valid_402656986, JString,
                                      required = false, default = nil)
  if valid_402656986 != nil:
    section.add "X-Amz-Algorithm", valid_402656986
  var valid_402656987 = header.getOrDefault("X-Amz-Date")
  valid_402656987 = validateParameter(valid_402656987, JString,
                                      required = false, default = nil)
  if valid_402656987 != nil:
    section.add "X-Amz-Date", valid_402656987
  var valid_402656988 = header.getOrDefault("X-Amz-Credential")
  valid_402656988 = validateParameter(valid_402656988, JString,
                                      required = false, default = nil)
  if valid_402656988 != nil:
    section.add "X-Amz-Credential", valid_402656988
  var valid_402656989 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402656989 = validateParameter(valid_402656989, JString,
                                      required = false, default = nil)
  if valid_402656989 != nil:
    section.add "X-Amz-SignedHeaders", valid_402656989
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402656990: Call_DescribeGroup_402656977; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). 
                                                                                         ## 
  let valid = call_402656990.validator(path, query, header, formData, body, _)
  let scheme = call_402656990.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402656990.makeUrl(scheme.get, call_402656990.host, call_402656990.base,
                                   call_402656990.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402656990, uri, valid, _)

proc call*(call_402656991: Call_DescribeGroup_402656977; AwsAccountId: string;
           Namespace: string; GroupName: string): Recallable =
  ## describeGroup
  ## Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). 
  ##   
                                                                                      ## AwsAccountId: string (required)
                                                                                      ##               
                                                                                      ## : 
                                                                                      ## The 
                                                                                      ## ID 
                                                                                      ## for 
                                                                                      ## the 
                                                                                      ## AWS 
                                                                                      ## account 
                                                                                      ## that 
                                                                                      ## the 
                                                                                      ## group 
                                                                                      ## is 
                                                                                      ## in. 
                                                                                      ## Currently, 
                                                                                      ## you 
                                                                                      ## use 
                                                                                      ## the 
                                                                                      ## ID 
                                                                                      ## for 
                                                                                      ## the 
                                                                                      ## AWS 
                                                                                      ## account 
                                                                                      ## that 
                                                                                      ## contains 
                                                                                      ## your 
                                                                                      ## Amazon 
                                                                                      ## QuickSight 
                                                                                      ## account.
  ##   
                                                                                                 ## Namespace: string (required)
                                                                                                 ##            
                                                                                                 ## : 
                                                                                                 ## The 
                                                                                                 ## namespace. 
                                                                                                 ## Currently, 
                                                                                                 ## you 
                                                                                                 ## should 
                                                                                                 ## set 
                                                                                                 ## this 
                                                                                                 ## to 
                                                                                                 ## <code>default</code>.
  ##   
                                                                                                                         ## GroupName: string (required)
                                                                                                                         ##            
                                                                                                                         ## : 
                                                                                                                         ## The 
                                                                                                                         ## name 
                                                                                                                         ## of 
                                                                                                                         ## the 
                                                                                                                         ## group 
                                                                                                                         ## that 
                                                                                                                         ## you 
                                                                                                                         ## want 
                                                                                                                         ## to 
                                                                                                                         ## describe.
  var path_402656992 = newJObject()
  add(path_402656992, "AwsAccountId", newJString(AwsAccountId))
  add(path_402656992, "Namespace", newJString(Namespace))
  add(path_402656992, "GroupName", newJString(GroupName))
  result = call_402656991.call(path_402656992, nil, nil, nil, nil)

var describeGroup* = Call_DescribeGroup_402656977(name: "describeGroup",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}",
    validator: validate_DescribeGroup_402656978, base: "/",
    makeUrl: url_DescribeGroup_402656979, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteGroup_402657011 = ref object of OpenApiRestCall_402656044
proc url_DeleteGroup_402657013(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "GroupName" in path, "`GroupName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups/"),
                 (kind: VariableSegment, value: "GroupName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteGroup_402657012(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Removes a user group from Amazon QuickSight. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## Namespace: JString (required)
                                                                                                                                                                                                ##            
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## namespace. 
                                                                                                                                                                                                ## Currently, 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## should 
                                                                                                                                                                                                ## set 
                                                                                                                                                                                                ## this 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## <code>default</code>.
  ##   
                                                                                                                                                                                                                        ## GroupName: JString (required)
                                                                                                                                                                                                                        ##            
                                                                                                                                                                                                                        ## : 
                                                                                                                                                                                                                        ## The 
                                                                                                                                                                                                                        ## name 
                                                                                                                                                                                                                        ## of 
                                                                                                                                                                                                                        ## the 
                                                                                                                                                                                                                        ## group 
                                                                                                                                                                                                                        ## that 
                                                                                                                                                                                                                        ## you 
                                                                                                                                                                                                                        ## want 
                                                                                                                                                                                                                        ## to 
                                                                                                                                                                                                                        ## delete.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657014 = path.getOrDefault("AwsAccountId")
  valid_402657014 = validateParameter(valid_402657014, JString, required = true,
                                      default = nil)
  if valid_402657014 != nil:
    section.add "AwsAccountId", valid_402657014
  var valid_402657015 = path.getOrDefault("Namespace")
  valid_402657015 = validateParameter(valid_402657015, JString, required = true,
                                      default = nil)
  if valid_402657015 != nil:
    section.add "Namespace", valid_402657015
  var valid_402657016 = path.getOrDefault("GroupName")
  valid_402657016 = validateParameter(valid_402657016, JString, required = true,
                                      default = nil)
  if valid_402657016 != nil:
    section.add "GroupName", valid_402657016
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657017 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657017 = validateParameter(valid_402657017, JString,
                                      required = false, default = nil)
  if valid_402657017 != nil:
    section.add "X-Amz-Security-Token", valid_402657017
  var valid_402657018 = header.getOrDefault("X-Amz-Signature")
  valid_402657018 = validateParameter(valid_402657018, JString,
                                      required = false, default = nil)
  if valid_402657018 != nil:
    section.add "X-Amz-Signature", valid_402657018
  var valid_402657019 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657019 = validateParameter(valid_402657019, JString,
                                      required = false, default = nil)
  if valid_402657019 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657019
  var valid_402657020 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657020 = validateParameter(valid_402657020, JString,
                                      required = false, default = nil)
  if valid_402657020 != nil:
    section.add "X-Amz-Algorithm", valid_402657020
  var valid_402657021 = header.getOrDefault("X-Amz-Date")
  valid_402657021 = validateParameter(valid_402657021, JString,
                                      required = false, default = nil)
  if valid_402657021 != nil:
    section.add "X-Amz-Date", valid_402657021
  var valid_402657022 = header.getOrDefault("X-Amz-Credential")
  valid_402657022 = validateParameter(valid_402657022, JString,
                                      required = false, default = nil)
  if valid_402657022 != nil:
    section.add "X-Amz-Credential", valid_402657022
  var valid_402657023 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657023 = validateParameter(valid_402657023, JString,
                                      required = false, default = nil)
  if valid_402657023 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657023
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657024: Call_DeleteGroup_402657011; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Removes a user group from Amazon QuickSight. 
                                                                                         ## 
  let valid = call_402657024.validator(path, query, header, formData, body, _)
  let scheme = call_402657024.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657024.makeUrl(scheme.get, call_402657024.host, call_402657024.base,
                                   call_402657024.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657024, uri, valid, _)

proc call*(call_402657025: Call_DeleteGroup_402657011; AwsAccountId: string;
           Namespace: string; GroupName: string): Recallable =
  ## deleteGroup
  ## Removes a user group from Amazon QuickSight. 
  ##   AwsAccountId: string (required)
                                                  ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                                 ## Namespace: string (required)
                                                                                                                                                                                                                 ##            
                                                                                                                                                                                                                 ## : 
                                                                                                                                                                                                                 ## The 
                                                                                                                                                                                                                 ## namespace. 
                                                                                                                                                                                                                 ## Currently, 
                                                                                                                                                                                                                 ## you 
                                                                                                                                                                                                                 ## should 
                                                                                                                                                                                                                 ## set 
                                                                                                                                                                                                                 ## this 
                                                                                                                                                                                                                 ## to 
                                                                                                                                                                                                                 ## <code>default</code>.
  ##   
                                                                                                                                                                                                                                         ## GroupName: string (required)
                                                                                                                                                                                                                                         ##            
                                                                                                                                                                                                                                         ## : 
                                                                                                                                                                                                                                         ## The 
                                                                                                                                                                                                                                         ## name 
                                                                                                                                                                                                                                         ## of 
                                                                                                                                                                                                                                         ## the 
                                                                                                                                                                                                                                         ## group 
                                                                                                                                                                                                                                         ## that 
                                                                                                                                                                                                                                         ## you 
                                                                                                                                                                                                                                         ## want 
                                                                                                                                                                                                                                         ## to 
                                                                                                                                                                                                                                         ## delete.
  var path_402657026 = newJObject()
  add(path_402657026, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657026, "Namespace", newJString(Namespace))
  add(path_402657026, "GroupName", newJString(GroupName))
  result = call_402657025.call(path_402657026, nil, nil, nil, nil)

var deleteGroup* = Call_DeleteGroup_402657011(name: "deleteGroup",
    meth: HttpMethod.HttpDelete, host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}",
    validator: validate_DeleteGroup_402657012, base: "/",
    makeUrl: url_DeleteGroup_402657013, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteIAMPolicyAssignment_402657027 = ref object of OpenApiRestCall_402656044
proc url_DeleteIAMPolicyAssignment_402657029(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "AssignmentName" in path,
         "`AssignmentName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespace/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/iam-policy-assignments/"),
                 (kind: VariableSegment, value: "AssignmentName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteIAMPolicyAssignment_402657028(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Deletes an existing IAM policy assignment.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID where you want to delete the IAM policy assignment.
  ##   
                                                                                                                          ## Namespace: JString (required)
                                                                                                                          ##            
                                                                                                                          ## : 
                                                                                                                          ## The 
                                                                                                                          ## namespace 
                                                                                                                          ## that 
                                                                                                                          ## contains 
                                                                                                                          ## the 
                                                                                                                          ## assignment.
  ##   
                                                                                                                                        ## AssignmentName: JString (required)
                                                                                                                                        ##                 
                                                                                                                                        ## : 
                                                                                                                                        ## The 
                                                                                                                                        ## name 
                                                                                                                                        ## of 
                                                                                                                                        ## the 
                                                                                                                                        ## assignment. 
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657030 = path.getOrDefault("AwsAccountId")
  valid_402657030 = validateParameter(valid_402657030, JString, required = true,
                                      default = nil)
  if valid_402657030 != nil:
    section.add "AwsAccountId", valid_402657030
  var valid_402657031 = path.getOrDefault("Namespace")
  valid_402657031 = validateParameter(valid_402657031, JString, required = true,
                                      default = nil)
  if valid_402657031 != nil:
    section.add "Namespace", valid_402657031
  var valid_402657032 = path.getOrDefault("AssignmentName")
  valid_402657032 = validateParameter(valid_402657032, JString, required = true,
                                      default = nil)
  if valid_402657032 != nil:
    section.add "AssignmentName", valid_402657032
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657033 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657033 = validateParameter(valid_402657033, JString,
                                      required = false, default = nil)
  if valid_402657033 != nil:
    section.add "X-Amz-Security-Token", valid_402657033
  var valid_402657034 = header.getOrDefault("X-Amz-Signature")
  valid_402657034 = validateParameter(valid_402657034, JString,
                                      required = false, default = nil)
  if valid_402657034 != nil:
    section.add "X-Amz-Signature", valid_402657034
  var valid_402657035 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657035 = validateParameter(valid_402657035, JString,
                                      required = false, default = nil)
  if valid_402657035 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657035
  var valid_402657036 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657036 = validateParameter(valid_402657036, JString,
                                      required = false, default = nil)
  if valid_402657036 != nil:
    section.add "X-Amz-Algorithm", valid_402657036
  var valid_402657037 = header.getOrDefault("X-Amz-Date")
  valid_402657037 = validateParameter(valid_402657037, JString,
                                      required = false, default = nil)
  if valid_402657037 != nil:
    section.add "X-Amz-Date", valid_402657037
  var valid_402657038 = header.getOrDefault("X-Amz-Credential")
  valid_402657038 = validateParameter(valid_402657038, JString,
                                      required = false, default = nil)
  if valid_402657038 != nil:
    section.add "X-Amz-Credential", valid_402657038
  var valid_402657039 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657039 = validateParameter(valid_402657039, JString,
                                      required = false, default = nil)
  if valid_402657039 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657039
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657040: Call_DeleteIAMPolicyAssignment_402657027;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes an existing IAM policy assignment.
                                                                                         ## 
  let valid = call_402657040.validator(path, query, header, formData, body, _)
  let scheme = call_402657040.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657040.makeUrl(scheme.get, call_402657040.host, call_402657040.base,
                                   call_402657040.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657040, uri, valid, _)

proc call*(call_402657041: Call_DeleteIAMPolicyAssignment_402657027;
           AwsAccountId: string; Namespace: string; AssignmentName: string): Recallable =
  ## deleteIAMPolicyAssignment
  ## Deletes an existing IAM policy assignment.
  ##   AwsAccountId: string (required)
                                               ##               : The AWS account ID where you want to delete the IAM policy assignment.
  ##   
                                                                                                                                        ## Namespace: string (required)
                                                                                                                                        ##            
                                                                                                                                        ## : 
                                                                                                                                        ## The 
                                                                                                                                        ## namespace 
                                                                                                                                        ## that 
                                                                                                                                        ## contains 
                                                                                                                                        ## the 
                                                                                                                                        ## assignment.
  ##   
                                                                                                                                                      ## AssignmentName: string (required)
                                                                                                                                                      ##                 
                                                                                                                                                      ## : 
                                                                                                                                                      ## The 
                                                                                                                                                      ## name 
                                                                                                                                                      ## of 
                                                                                                                                                      ## the 
                                                                                                                                                      ## assignment. 
  var path_402657042 = newJObject()
  add(path_402657042, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657042, "Namespace", newJString(Namespace))
  add(path_402657042, "AssignmentName", newJString(AssignmentName))
  result = call_402657041.call(path_402657042, nil, nil, nil, nil)

var deleteIAMPolicyAssignment* = Call_DeleteIAMPolicyAssignment_402657027(
    name: "deleteIAMPolicyAssignment", meth: HttpMethod.HttpDelete,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespace/{Namespace}/iam-policy-assignments/{AssignmentName}",
    validator: validate_DeleteIAMPolicyAssignment_402657028, base: "/",
    makeUrl: url_DeleteIAMPolicyAssignment_402657029,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateUser_402657059 = ref object of OpenApiRestCall_402656044
proc url_UpdateUser_402657061(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "UserName" in path, "`UserName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/users/"),
                 (kind: VariableSegment, value: "UserName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateUser_402657060(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Updates an Amazon QuickSight user.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                               ## UserName: JString (required)
                                                                                                                                                                                               ##           
                                                                                                                                                                                               ## : 
                                                                                                                                                                                               ## The 
                                                                                                                                                                                               ## Amazon 
                                                                                                                                                                                               ## QuickSight 
                                                                                                                                                                                               ## user 
                                                                                                                                                                                               ## name 
                                                                                                                                                                                               ## that 
                                                                                                                                                                                               ## you 
                                                                                                                                                                                               ## want 
                                                                                                                                                                                               ## to 
                                                                                                                                                                                               ## update.
  ##   
                                                                                                                                                                                                         ## Namespace: JString (required)
                                                                                                                                                                                                         ##            
                                                                                                                                                                                                         ## : 
                                                                                                                                                                                                         ## The 
                                                                                                                                                                                                         ## namespace. 
                                                                                                                                                                                                         ## Currently, 
                                                                                                                                                                                                         ## you 
                                                                                                                                                                                                         ## should 
                                                                                                                                                                                                         ## set 
                                                                                                                                                                                                         ## this 
                                                                                                                                                                                                         ## to 
                                                                                                                                                                                                         ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657062 = path.getOrDefault("AwsAccountId")
  valid_402657062 = validateParameter(valid_402657062, JString, required = true,
                                      default = nil)
  if valid_402657062 != nil:
    section.add "AwsAccountId", valid_402657062
  var valid_402657063 = path.getOrDefault("UserName")
  valid_402657063 = validateParameter(valid_402657063, JString, required = true,
                                      default = nil)
  if valid_402657063 != nil:
    section.add "UserName", valid_402657063
  var valid_402657064 = path.getOrDefault("Namespace")
  valid_402657064 = validateParameter(valid_402657064, JString, required = true,
                                      default = nil)
  if valid_402657064 != nil:
    section.add "Namespace", valid_402657064
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657065 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657065 = validateParameter(valid_402657065, JString,
                                      required = false, default = nil)
  if valid_402657065 != nil:
    section.add "X-Amz-Security-Token", valid_402657065
  var valid_402657066 = header.getOrDefault("X-Amz-Signature")
  valid_402657066 = validateParameter(valid_402657066, JString,
                                      required = false, default = nil)
  if valid_402657066 != nil:
    section.add "X-Amz-Signature", valid_402657066
  var valid_402657067 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657067 = validateParameter(valid_402657067, JString,
                                      required = false, default = nil)
  if valid_402657067 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657067
  var valid_402657068 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657068 = validateParameter(valid_402657068, JString,
                                      required = false, default = nil)
  if valid_402657068 != nil:
    section.add "X-Amz-Algorithm", valid_402657068
  var valid_402657069 = header.getOrDefault("X-Amz-Date")
  valid_402657069 = validateParameter(valid_402657069, JString,
                                      required = false, default = nil)
  if valid_402657069 != nil:
    section.add "X-Amz-Date", valid_402657069
  var valid_402657070 = header.getOrDefault("X-Amz-Credential")
  valid_402657070 = validateParameter(valid_402657070, JString,
                                      required = false, default = nil)
  if valid_402657070 != nil:
    section.add "X-Amz-Credential", valid_402657070
  var valid_402657071 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657071 = validateParameter(valid_402657071, JString,
                                      required = false, default = nil)
  if valid_402657071 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657071
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657073: Call_UpdateUser_402657059; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates an Amazon QuickSight user.
                                                                                         ## 
  let valid = call_402657073.validator(path, query, header, formData, body, _)
  let scheme = call_402657073.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657073.makeUrl(scheme.get, call_402657073.host, call_402657073.base,
                                   call_402657073.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657073, uri, valid, _)

proc call*(call_402657074: Call_UpdateUser_402657059; AwsAccountId: string;
           body: JsonNode; UserName: string; Namespace: string): Recallable =
  ## updateUser
  ## Updates an Amazon QuickSight user.
  ##   AwsAccountId: string (required)
                                       ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                     ## body: JObject (required)
  ##   
                                                                                                                                                                                                                                ## UserName: string (required)
                                                                                                                                                                                                                                ##           
                                                                                                                                                                                                                                ## : 
                                                                                                                                                                                                                                ## The 
                                                                                                                                                                                                                                ## Amazon 
                                                                                                                                                                                                                                ## QuickSight 
                                                                                                                                                                                                                                ## user 
                                                                                                                                                                                                                                ## name 
                                                                                                                                                                                                                                ## that 
                                                                                                                                                                                                                                ## you 
                                                                                                                                                                                                                                ## want 
                                                                                                                                                                                                                                ## to 
                                                                                                                                                                                                                                ## update.
  ##   
                                                                                                                                                                                                                                          ## Namespace: string (required)
                                                                                                                                                                                                                                          ##            
                                                                                                                                                                                                                                          ## : 
                                                                                                                                                                                                                                          ## The 
                                                                                                                                                                                                                                          ## namespace. 
                                                                                                                                                                                                                                          ## Currently, 
                                                                                                                                                                                                                                          ## you 
                                                                                                                                                                                                                                          ## should 
                                                                                                                                                                                                                                          ## set 
                                                                                                                                                                                                                                          ## this 
                                                                                                                                                                                                                                          ## to 
                                                                                                                                                                                                                                          ## <code>default</code>.
  var path_402657075 = newJObject()
  var body_402657076 = newJObject()
  add(path_402657075, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402657076 = body
  add(path_402657075, "UserName", newJString(UserName))
  add(path_402657075, "Namespace", newJString(Namespace))
  result = call_402657074.call(path_402657075, nil, nil, nil, body_402657076)

var updateUser* = Call_UpdateUser_402657059(name: "updateUser",
    meth: HttpMethod.HttpPut, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}",
    validator: validate_UpdateUser_402657060, base: "/",
    makeUrl: url_UpdateUser_402657061, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeUser_402657043 = ref object of OpenApiRestCall_402656044
proc url_DescribeUser_402657045(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "UserName" in path, "`UserName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/users/"),
                 (kind: VariableSegment, value: "UserName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeUser_402657044(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns information about a user, given the user name. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                               ## UserName: JString (required)
                                                                                                                                                                                               ##           
                                                                                                                                                                                               ## : 
                                                                                                                                                                                               ## The 
                                                                                                                                                                                               ## name 
                                                                                                                                                                                               ## of 
                                                                                                                                                                                               ## the 
                                                                                                                                                                                               ## user 
                                                                                                                                                                                               ## that 
                                                                                                                                                                                               ## you 
                                                                                                                                                                                               ## want 
                                                                                                                                                                                               ## to 
                                                                                                                                                                                               ## describe.
  ##   
                                                                                                                                                                                                           ## Namespace: JString (required)
                                                                                                                                                                                                           ##            
                                                                                                                                                                                                           ## : 
                                                                                                                                                                                                           ## The 
                                                                                                                                                                                                           ## namespace. 
                                                                                                                                                                                                           ## Currently, 
                                                                                                                                                                                                           ## you 
                                                                                                                                                                                                           ## should 
                                                                                                                                                                                                           ## set 
                                                                                                                                                                                                           ## this 
                                                                                                                                                                                                           ## to 
                                                                                                                                                                                                           ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657046 = path.getOrDefault("AwsAccountId")
  valid_402657046 = validateParameter(valid_402657046, JString, required = true,
                                      default = nil)
  if valid_402657046 != nil:
    section.add "AwsAccountId", valid_402657046
  var valid_402657047 = path.getOrDefault("UserName")
  valid_402657047 = validateParameter(valid_402657047, JString, required = true,
                                      default = nil)
  if valid_402657047 != nil:
    section.add "UserName", valid_402657047
  var valid_402657048 = path.getOrDefault("Namespace")
  valid_402657048 = validateParameter(valid_402657048, JString, required = true,
                                      default = nil)
  if valid_402657048 != nil:
    section.add "Namespace", valid_402657048
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657049 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657049 = validateParameter(valid_402657049, JString,
                                      required = false, default = nil)
  if valid_402657049 != nil:
    section.add "X-Amz-Security-Token", valid_402657049
  var valid_402657050 = header.getOrDefault("X-Amz-Signature")
  valid_402657050 = validateParameter(valid_402657050, JString,
                                      required = false, default = nil)
  if valid_402657050 != nil:
    section.add "X-Amz-Signature", valid_402657050
  var valid_402657051 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657051 = validateParameter(valid_402657051, JString,
                                      required = false, default = nil)
  if valid_402657051 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657051
  var valid_402657052 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657052 = validateParameter(valid_402657052, JString,
                                      required = false, default = nil)
  if valid_402657052 != nil:
    section.add "X-Amz-Algorithm", valid_402657052
  var valid_402657053 = header.getOrDefault("X-Amz-Date")
  valid_402657053 = validateParameter(valid_402657053, JString,
                                      required = false, default = nil)
  if valid_402657053 != nil:
    section.add "X-Amz-Date", valid_402657053
  var valid_402657054 = header.getOrDefault("X-Amz-Credential")
  valid_402657054 = validateParameter(valid_402657054, JString,
                                      required = false, default = nil)
  if valid_402657054 != nil:
    section.add "X-Amz-Credential", valid_402657054
  var valid_402657055 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657055 = validateParameter(valid_402657055, JString,
                                      required = false, default = nil)
  if valid_402657055 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657055
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657056: Call_DescribeUser_402657043; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns information about a user, given the user name. 
                                                                                         ## 
  let valid = call_402657056.validator(path, query, header, formData, body, _)
  let scheme = call_402657056.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657056.makeUrl(scheme.get, call_402657056.host, call_402657056.base,
                                   call_402657056.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657056, uri, valid, _)

proc call*(call_402657057: Call_DescribeUser_402657043; AwsAccountId: string;
           UserName: string; Namespace: string): Recallable =
  ## describeUser
  ## Returns information about a user, given the user name. 
  ##   AwsAccountId: string (required)
                                                            ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                                          ## UserName: string (required)
                                                                                                                                                                                                                          ##           
                                                                                                                                                                                                                          ## : 
                                                                                                                                                                                                                          ## The 
                                                                                                                                                                                                                          ## name 
                                                                                                                                                                                                                          ## of 
                                                                                                                                                                                                                          ## the 
                                                                                                                                                                                                                          ## user 
                                                                                                                                                                                                                          ## that 
                                                                                                                                                                                                                          ## you 
                                                                                                                                                                                                                          ## want 
                                                                                                                                                                                                                          ## to 
                                                                                                                                                                                                                          ## describe.
  ##   
                                                                                                                                                                                                                                      ## Namespace: string (required)
                                                                                                                                                                                                                                      ##            
                                                                                                                                                                                                                                      ## : 
                                                                                                                                                                                                                                      ## The 
                                                                                                                                                                                                                                      ## namespace. 
                                                                                                                                                                                                                                      ## Currently, 
                                                                                                                                                                                                                                      ## you 
                                                                                                                                                                                                                                      ## should 
                                                                                                                                                                                                                                      ## set 
                                                                                                                                                                                                                                      ## this 
                                                                                                                                                                                                                                      ## to 
                                                                                                                                                                                                                                      ## <code>default</code>.
  var path_402657058 = newJObject()
  add(path_402657058, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657058, "UserName", newJString(UserName))
  add(path_402657058, "Namespace", newJString(Namespace))
  result = call_402657057.call(path_402657058, nil, nil, nil, nil)

var describeUser* = Call_DescribeUser_402657043(name: "describeUser",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}",
    validator: validate_DescribeUser_402657044, base: "/",
    makeUrl: url_DescribeUser_402657045, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteUser_402657077 = ref object of OpenApiRestCall_402656044
proc url_DeleteUser_402657079(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "UserName" in path, "`UserName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/users/"),
                 (kind: VariableSegment, value: "UserName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteUser_402657078(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes the Amazon QuickSight user that is associated with the identity of the AWS Identity and Access Management (IAM) user or role that's making the call. The IAM user isn't deleted as a result of this call. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                               ## UserName: JString (required)
                                                                                                                                                                                               ##           
                                                                                                                                                                                               ## : 
                                                                                                                                                                                               ## The 
                                                                                                                                                                                               ## name 
                                                                                                                                                                                               ## of 
                                                                                                                                                                                               ## the 
                                                                                                                                                                                               ## user 
                                                                                                                                                                                               ## that 
                                                                                                                                                                                               ## you 
                                                                                                                                                                                               ## want 
                                                                                                                                                                                               ## to 
                                                                                                                                                                                               ## delete.
  ##   
                                                                                                                                                                                                         ## Namespace: JString (required)
                                                                                                                                                                                                         ##            
                                                                                                                                                                                                         ## : 
                                                                                                                                                                                                         ## The 
                                                                                                                                                                                                         ## namespace. 
                                                                                                                                                                                                         ## Currently, 
                                                                                                                                                                                                         ## you 
                                                                                                                                                                                                         ## should 
                                                                                                                                                                                                         ## set 
                                                                                                                                                                                                         ## this 
                                                                                                                                                                                                         ## to 
                                                                                                                                                                                                         ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657080 = path.getOrDefault("AwsAccountId")
  valid_402657080 = validateParameter(valid_402657080, JString, required = true,
                                      default = nil)
  if valid_402657080 != nil:
    section.add "AwsAccountId", valid_402657080
  var valid_402657081 = path.getOrDefault("UserName")
  valid_402657081 = validateParameter(valid_402657081, JString, required = true,
                                      default = nil)
  if valid_402657081 != nil:
    section.add "UserName", valid_402657081
  var valid_402657082 = path.getOrDefault("Namespace")
  valid_402657082 = validateParameter(valid_402657082, JString, required = true,
                                      default = nil)
  if valid_402657082 != nil:
    section.add "Namespace", valid_402657082
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657083 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657083 = validateParameter(valid_402657083, JString,
                                      required = false, default = nil)
  if valid_402657083 != nil:
    section.add "X-Amz-Security-Token", valid_402657083
  var valid_402657084 = header.getOrDefault("X-Amz-Signature")
  valid_402657084 = validateParameter(valid_402657084, JString,
                                      required = false, default = nil)
  if valid_402657084 != nil:
    section.add "X-Amz-Signature", valid_402657084
  var valid_402657085 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657085 = validateParameter(valid_402657085, JString,
                                      required = false, default = nil)
  if valid_402657085 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657085
  var valid_402657086 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657086 = validateParameter(valid_402657086, JString,
                                      required = false, default = nil)
  if valid_402657086 != nil:
    section.add "X-Amz-Algorithm", valid_402657086
  var valid_402657087 = header.getOrDefault("X-Amz-Date")
  valid_402657087 = validateParameter(valid_402657087, JString,
                                      required = false, default = nil)
  if valid_402657087 != nil:
    section.add "X-Amz-Date", valid_402657087
  var valid_402657088 = header.getOrDefault("X-Amz-Credential")
  valid_402657088 = validateParameter(valid_402657088, JString,
                                      required = false, default = nil)
  if valid_402657088 != nil:
    section.add "X-Amz-Credential", valid_402657088
  var valid_402657089 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657089 = validateParameter(valid_402657089, JString,
                                      required = false, default = nil)
  if valid_402657089 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657089
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657090: Call_DeleteUser_402657077; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes the Amazon QuickSight user that is associated with the identity of the AWS Identity and Access Management (IAM) user or role that's making the call. The IAM user isn't deleted as a result of this call. 
                                                                                         ## 
  let valid = call_402657090.validator(path, query, header, formData, body, _)
  let scheme = call_402657090.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657090.makeUrl(scheme.get, call_402657090.host, call_402657090.base,
                                   call_402657090.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657090, uri, valid, _)

proc call*(call_402657091: Call_DeleteUser_402657077; AwsAccountId: string;
           UserName: string; Namespace: string): Recallable =
  ## deleteUser
  ## Deletes the Amazon QuickSight user that is associated with the identity of the AWS Identity and Access Management (IAM) user or role that's making the call. The IAM user isn't deleted as a result of this call. 
  ##   
                                                                                                                                                                                                                       ## AwsAccountId: string (required)
                                                                                                                                                                                                                       ##               
                                                                                                                                                                                                                       ## : 
                                                                                                                                                                                                                       ## The 
                                                                                                                                                                                                                       ## ID 
                                                                                                                                                                                                                       ## for 
                                                                                                                                                                                                                       ## the 
                                                                                                                                                                                                                       ## AWS 
                                                                                                                                                                                                                       ## account 
                                                                                                                                                                                                                       ## that 
                                                                                                                                                                                                                       ## the 
                                                                                                                                                                                                                       ## user 
                                                                                                                                                                                                                       ## is 
                                                                                                                                                                                                                       ## in. 
                                                                                                                                                                                                                       ## Currently, 
                                                                                                                                                                                                                       ## you 
                                                                                                                                                                                                                       ## use 
                                                                                                                                                                                                                       ## the 
                                                                                                                                                                                                                       ## ID 
                                                                                                                                                                                                                       ## for 
                                                                                                                                                                                                                       ## the 
                                                                                                                                                                                                                       ## AWS 
                                                                                                                                                                                                                       ## account 
                                                                                                                                                                                                                       ## that 
                                                                                                                                                                                                                       ## contains 
                                                                                                                                                                                                                       ## your 
                                                                                                                                                                                                                       ## Amazon 
                                                                                                                                                                                                                       ## QuickSight 
                                                                                                                                                                                                                       ## account.
  ##   
                                                                                                                                                                                                                                  ## UserName: string (required)
                                                                                                                                                                                                                                  ##           
                                                                                                                                                                                                                                  ## : 
                                                                                                                                                                                                                                  ## The 
                                                                                                                                                                                                                                  ## name 
                                                                                                                                                                                                                                  ## of 
                                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                                  ## user 
                                                                                                                                                                                                                                  ## that 
                                                                                                                                                                                                                                  ## you 
                                                                                                                                                                                                                                  ## want 
                                                                                                                                                                                                                                  ## to 
                                                                                                                                                                                                                                  ## delete.
  ##   
                                                                                                                                                                                                                                            ## Namespace: string (required)
                                                                                                                                                                                                                                            ##            
                                                                                                                                                                                                                                            ## : 
                                                                                                                                                                                                                                            ## The 
                                                                                                                                                                                                                                            ## namespace. 
                                                                                                                                                                                                                                            ## Currently, 
                                                                                                                                                                                                                                            ## you 
                                                                                                                                                                                                                                            ## should 
                                                                                                                                                                                                                                            ## set 
                                                                                                                                                                                                                                            ## this 
                                                                                                                                                                                                                                            ## to 
                                                                                                                                                                                                                                            ## <code>default</code>.
  var path_402657092 = newJObject()
  add(path_402657092, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657092, "UserName", newJString(UserName))
  add(path_402657092, "Namespace", newJString(Namespace))
  result = call_402657091.call(path_402657092, nil, nil, nil, nil)

var deleteUser* = Call_DeleteUser_402657077(name: "deleteUser",
    meth: HttpMethod.HttpDelete, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}",
    validator: validate_DeleteUser_402657078, base: "/",
    makeUrl: url_DeleteUser_402657079, schemes: {Scheme.Https, Scheme.Http})
type
  Call_DeleteUserByPrincipalId_402657093 = ref object of OpenApiRestCall_402656044
proc url_DeleteUserByPrincipalId_402657095(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "PrincipalId" in path, "`PrincipalId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/user-principals/"),
                 (kind: VariableSegment, value: "PrincipalId")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DeleteUserByPrincipalId_402657094(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a user identified by its principal ID. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                               ## PrincipalId: JString (required)
                                                                                                                                                                                               ##              
                                                                                                                                                                                               ## : 
                                                                                                                                                                                               ## The 
                                                                                                                                                                                               ## principal 
                                                                                                                                                                                               ## ID 
                                                                                                                                                                                               ## of 
                                                                                                                                                                                               ## the 
                                                                                                                                                                                               ## user.
  ##   
                                                                                                                                                                                                       ## Namespace: JString (required)
                                                                                                                                                                                                       ##            
                                                                                                                                                                                                       ## : 
                                                                                                                                                                                                       ## The 
                                                                                                                                                                                                       ## namespace. 
                                                                                                                                                                                                       ## Currently, 
                                                                                                                                                                                                       ## you 
                                                                                                                                                                                                       ## should 
                                                                                                                                                                                                       ## set 
                                                                                                                                                                                                       ## this 
                                                                                                                                                                                                       ## to 
                                                                                                                                                                                                       ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657096 = path.getOrDefault("AwsAccountId")
  valid_402657096 = validateParameter(valid_402657096, JString, required = true,
                                      default = nil)
  if valid_402657096 != nil:
    section.add "AwsAccountId", valid_402657096
  var valid_402657097 = path.getOrDefault("PrincipalId")
  valid_402657097 = validateParameter(valid_402657097, JString, required = true,
                                      default = nil)
  if valid_402657097 != nil:
    section.add "PrincipalId", valid_402657097
  var valid_402657098 = path.getOrDefault("Namespace")
  valid_402657098 = validateParameter(valid_402657098, JString, required = true,
                                      default = nil)
  if valid_402657098 != nil:
    section.add "Namespace", valid_402657098
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657099 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657099 = validateParameter(valid_402657099, JString,
                                      required = false, default = nil)
  if valid_402657099 != nil:
    section.add "X-Amz-Security-Token", valid_402657099
  var valid_402657100 = header.getOrDefault("X-Amz-Signature")
  valid_402657100 = validateParameter(valid_402657100, JString,
                                      required = false, default = nil)
  if valid_402657100 != nil:
    section.add "X-Amz-Signature", valid_402657100
  var valid_402657101 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657101 = validateParameter(valid_402657101, JString,
                                      required = false, default = nil)
  if valid_402657101 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657101
  var valid_402657102 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657102 = validateParameter(valid_402657102, JString,
                                      required = false, default = nil)
  if valid_402657102 != nil:
    section.add "X-Amz-Algorithm", valid_402657102
  var valid_402657103 = header.getOrDefault("X-Amz-Date")
  valid_402657103 = validateParameter(valid_402657103, JString,
                                      required = false, default = nil)
  if valid_402657103 != nil:
    section.add "X-Amz-Date", valid_402657103
  var valid_402657104 = header.getOrDefault("X-Amz-Credential")
  valid_402657104 = validateParameter(valid_402657104, JString,
                                      required = false, default = nil)
  if valid_402657104 != nil:
    section.add "X-Amz-Credential", valid_402657104
  var valid_402657105 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657105 = validateParameter(valid_402657105, JString,
                                      required = false, default = nil)
  if valid_402657105 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657105
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657106: Call_DeleteUserByPrincipalId_402657093;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a user identified by its principal ID. 
                                                                                         ## 
  let valid = call_402657106.validator(path, query, header, formData, body, _)
  let scheme = call_402657106.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657106.makeUrl(scheme.get, call_402657106.host, call_402657106.base,
                                   call_402657106.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657106, uri, valid, _)

proc call*(call_402657107: Call_DeleteUserByPrincipalId_402657093;
           AwsAccountId: string; PrincipalId: string; Namespace: string): Recallable =
  ## deleteUserByPrincipalId
  ## Deletes a user identified by its principal ID. 
  ##   AwsAccountId: string (required)
                                                    ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                                  ## PrincipalId: string (required)
                                                                                                                                                                                                                  ##              
                                                                                                                                                                                                                  ## : 
                                                                                                                                                                                                                  ## The 
                                                                                                                                                                                                                  ## principal 
                                                                                                                                                                                                                  ## ID 
                                                                                                                                                                                                                  ## of 
                                                                                                                                                                                                                  ## the 
                                                                                                                                                                                                                  ## user.
  ##   
                                                                                                                                                                                                                          ## Namespace: string (required)
                                                                                                                                                                                                                          ##            
                                                                                                                                                                                                                          ## : 
                                                                                                                                                                                                                          ## The 
                                                                                                                                                                                                                          ## namespace. 
                                                                                                                                                                                                                          ## Currently, 
                                                                                                                                                                                                                          ## you 
                                                                                                                                                                                                                          ## should 
                                                                                                                                                                                                                          ## set 
                                                                                                                                                                                                                          ## this 
                                                                                                                                                                                                                          ## to 
                                                                                                                                                                                                                          ## <code>default</code>.
  var path_402657108 = newJObject()
  add(path_402657108, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657108, "PrincipalId", newJString(PrincipalId))
  add(path_402657108, "Namespace", newJString(Namespace))
  result = call_402657107.call(path_402657108, nil, nil, nil, nil)

var deleteUserByPrincipalId* = Call_DeleteUserByPrincipalId_402657093(
    name: "deleteUserByPrincipalId", meth: HttpMethod.HttpDelete,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}",
    validator: validate_DeleteUserByPrincipalId_402657094, base: "/",
    makeUrl: url_DeleteUserByPrincipalId_402657095,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateDashboardPermissions_402657124 = ref object of OpenApiRestCall_402656044
proc url_UpdateDashboardPermissions_402657126(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateDashboardPermissions_402657125(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Updates read and write permissions on a dashboard.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the dashboard whose permissions you're updating.
  ##   
                                                                                                                                            ## DashboardId: JString (required)
                                                                                                                                            ##              
                                                                                                                                            ## : 
                                                                                                                                            ## The 
                                                                                                                                            ## ID 
                                                                                                                                            ## for 
                                                                                                                                            ## the 
                                                                                                                                            ## dashboard.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657127 = path.getOrDefault("AwsAccountId")
  valid_402657127 = validateParameter(valid_402657127, JString, required = true,
                                      default = nil)
  if valid_402657127 != nil:
    section.add "AwsAccountId", valid_402657127
  var valid_402657128 = path.getOrDefault("DashboardId")
  valid_402657128 = validateParameter(valid_402657128, JString, required = true,
                                      default = nil)
  if valid_402657128 != nil:
    section.add "DashboardId", valid_402657128
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657129 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657129 = validateParameter(valid_402657129, JString,
                                      required = false, default = nil)
  if valid_402657129 != nil:
    section.add "X-Amz-Security-Token", valid_402657129
  var valid_402657130 = header.getOrDefault("X-Amz-Signature")
  valid_402657130 = validateParameter(valid_402657130, JString,
                                      required = false, default = nil)
  if valid_402657130 != nil:
    section.add "X-Amz-Signature", valid_402657130
  var valid_402657131 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657131 = validateParameter(valid_402657131, JString,
                                      required = false, default = nil)
  if valid_402657131 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657131
  var valid_402657132 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657132 = validateParameter(valid_402657132, JString,
                                      required = false, default = nil)
  if valid_402657132 != nil:
    section.add "X-Amz-Algorithm", valid_402657132
  var valid_402657133 = header.getOrDefault("X-Amz-Date")
  valid_402657133 = validateParameter(valid_402657133, JString,
                                      required = false, default = nil)
  if valid_402657133 != nil:
    section.add "X-Amz-Date", valid_402657133
  var valid_402657134 = header.getOrDefault("X-Amz-Credential")
  valid_402657134 = validateParameter(valid_402657134, JString,
                                      required = false, default = nil)
  if valid_402657134 != nil:
    section.add "X-Amz-Credential", valid_402657134
  var valid_402657135 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657135 = validateParameter(valid_402657135, JString,
                                      required = false, default = nil)
  if valid_402657135 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657135
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657137: Call_UpdateDashboardPermissions_402657124;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates read and write permissions on a dashboard.
                                                                                         ## 
  let valid = call_402657137.validator(path, query, header, formData, body, _)
  let scheme = call_402657137.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657137.makeUrl(scheme.get, call_402657137.host, call_402657137.base,
                                   call_402657137.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657137, uri, valid, _)

proc call*(call_402657138: Call_UpdateDashboardPermissions_402657124;
           AwsAccountId: string; DashboardId: string; body: JsonNode): Recallable =
  ## updateDashboardPermissions
  ## Updates read and write permissions on a dashboard.
  ##   AwsAccountId: string (required)
                                                       ##               : The ID of the AWS account that contains the dashboard whose permissions you're updating.
  ##   
                                                                                                                                                                  ## DashboardId: string (required)
                                                                                                                                                                  ##              
                                                                                                                                                                  ## : 
                                                                                                                                                                  ## The 
                                                                                                                                                                  ## ID 
                                                                                                                                                                  ## for 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## dashboard.
  ##   
                                                                                                                                                                               ## body: JObject (required)
  var path_402657139 = newJObject()
  var body_402657140 = newJObject()
  add(path_402657139, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657139, "DashboardId", newJString(DashboardId))
  if body != nil:
    body_402657140 = body
  result = call_402657138.call(path_402657139, nil, nil, nil, body_402657140)

var updateDashboardPermissions* = Call_UpdateDashboardPermissions_402657124(
    name: "updateDashboardPermissions", meth: HttpMethod.HttpPut,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions",
    validator: validate_UpdateDashboardPermissions_402657125, base: "/",
    makeUrl: url_UpdateDashboardPermissions_402657126,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeDashboardPermissions_402657109 = ref object of OpenApiRestCall_402656044
proc url_DescribeDashboardPermissions_402657111(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeDashboardPermissions_402657110(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes read and write permissions for a dashboard.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the dashboard that you're describing permissions for.
  ##   
                                                                                                                                                 ## DashboardId: JString (required)
                                                                                                                                                 ##              
                                                                                                                                                 ## : 
                                                                                                                                                 ## The 
                                                                                                                                                 ## ID 
                                                                                                                                                 ## for 
                                                                                                                                                 ## the 
                                                                                                                                                 ## dashboard, 
                                                                                                                                                 ## also 
                                                                                                                                                 ## added 
                                                                                                                                                 ## to 
                                                                                                                                                 ## the 
                                                                                                                                                 ## IAM 
                                                                                                                                                 ## policy.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657112 = path.getOrDefault("AwsAccountId")
  valid_402657112 = validateParameter(valid_402657112, JString, required = true,
                                      default = nil)
  if valid_402657112 != nil:
    section.add "AwsAccountId", valid_402657112
  var valid_402657113 = path.getOrDefault("DashboardId")
  valid_402657113 = validateParameter(valid_402657113, JString, required = true,
                                      default = nil)
  if valid_402657113 != nil:
    section.add "DashboardId", valid_402657113
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657114 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657114 = validateParameter(valid_402657114, JString,
                                      required = false, default = nil)
  if valid_402657114 != nil:
    section.add "X-Amz-Security-Token", valid_402657114
  var valid_402657115 = header.getOrDefault("X-Amz-Signature")
  valid_402657115 = validateParameter(valid_402657115, JString,
                                      required = false, default = nil)
  if valid_402657115 != nil:
    section.add "X-Amz-Signature", valid_402657115
  var valid_402657116 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657116 = validateParameter(valid_402657116, JString,
                                      required = false, default = nil)
  if valid_402657116 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657116
  var valid_402657117 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657117 = validateParameter(valid_402657117, JString,
                                      required = false, default = nil)
  if valid_402657117 != nil:
    section.add "X-Amz-Algorithm", valid_402657117
  var valid_402657118 = header.getOrDefault("X-Amz-Date")
  valid_402657118 = validateParameter(valid_402657118, JString,
                                      required = false, default = nil)
  if valid_402657118 != nil:
    section.add "X-Amz-Date", valid_402657118
  var valid_402657119 = header.getOrDefault("X-Amz-Credential")
  valid_402657119 = validateParameter(valid_402657119, JString,
                                      required = false, default = nil)
  if valid_402657119 != nil:
    section.add "X-Amz-Credential", valid_402657119
  var valid_402657120 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657120 = validateParameter(valid_402657120, JString,
                                      required = false, default = nil)
  if valid_402657120 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657120
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657121: Call_DescribeDashboardPermissions_402657109;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes read and write permissions for a dashboard.
                                                                                         ## 
  let valid = call_402657121.validator(path, query, header, formData, body, _)
  let scheme = call_402657121.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657121.makeUrl(scheme.get, call_402657121.host, call_402657121.base,
                                   call_402657121.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657121, uri, valid, _)

proc call*(call_402657122: Call_DescribeDashboardPermissions_402657109;
           AwsAccountId: string; DashboardId: string): Recallable =
  ## describeDashboardPermissions
  ## Describes read and write permissions for a dashboard.
  ##   AwsAccountId: string (required)
                                                          ##               : The ID of the AWS account that contains the dashboard that you're describing permissions for.
  ##   
                                                                                                                                                                          ## DashboardId: string (required)
                                                                                                                                                                          ##              
                                                                                                                                                                          ## : 
                                                                                                                                                                          ## The 
                                                                                                                                                                          ## ID 
                                                                                                                                                                          ## for 
                                                                                                                                                                          ## the 
                                                                                                                                                                          ## dashboard, 
                                                                                                                                                                          ## also 
                                                                                                                                                                          ## added 
                                                                                                                                                                          ## to 
                                                                                                                                                                          ## the 
                                                                                                                                                                          ## IAM 
                                                                                                                                                                          ## policy.
  var path_402657123 = newJObject()
  add(path_402657123, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657123, "DashboardId", newJString(DashboardId))
  result = call_402657122.call(path_402657123, nil, nil, nil, nil)

var describeDashboardPermissions* = Call_DescribeDashboardPermissions_402657109(
    name: "describeDashboardPermissions", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions",
    validator: validate_DescribeDashboardPermissions_402657110, base: "/",
    makeUrl: url_DescribeDashboardPermissions_402657111,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateDataSetPermissions_402657156 = ref object of OpenApiRestCall_402656044
proc url_UpdateDataSetPermissions_402657158(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateDataSetPermissions_402657157(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID for the 
                                                                       ## dataset 
                                                                       ## whose 
                                                                       ## permissions 
                                                                       ## you 
                                                                       ## want to 
                                                                       ## update. 
                                                                       ## This 
                                                                       ## ID 
                                                                       ## is 
                                                                       ## unique per AWS 
                                                                       ## Region 
                                                                       ## for 
                                                                       ## each 
                                                                       ## AWS 
                                                                       ## account.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657159 = path.getOrDefault("AwsAccountId")
  valid_402657159 = validateParameter(valid_402657159, JString, required = true,
                                      default = nil)
  if valid_402657159 != nil:
    section.add "AwsAccountId", valid_402657159
  var valid_402657160 = path.getOrDefault("DataSetId")
  valid_402657160 = validateParameter(valid_402657160, JString, required = true,
                                      default = nil)
  if valid_402657160 != nil:
    section.add "DataSetId", valid_402657160
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657161 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657161 = validateParameter(valid_402657161, JString,
                                      required = false, default = nil)
  if valid_402657161 != nil:
    section.add "X-Amz-Security-Token", valid_402657161
  var valid_402657162 = header.getOrDefault("X-Amz-Signature")
  valid_402657162 = validateParameter(valid_402657162, JString,
                                      required = false, default = nil)
  if valid_402657162 != nil:
    section.add "X-Amz-Signature", valid_402657162
  var valid_402657163 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657163 = validateParameter(valid_402657163, JString,
                                      required = false, default = nil)
  if valid_402657163 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657163
  var valid_402657164 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657164 = validateParameter(valid_402657164, JString,
                                      required = false, default = nil)
  if valid_402657164 != nil:
    section.add "X-Amz-Algorithm", valid_402657164
  var valid_402657165 = header.getOrDefault("X-Amz-Date")
  valid_402657165 = validateParameter(valid_402657165, JString,
                                      required = false, default = nil)
  if valid_402657165 != nil:
    section.add "X-Amz-Date", valid_402657165
  var valid_402657166 = header.getOrDefault("X-Amz-Credential")
  valid_402657166 = validateParameter(valid_402657166, JString,
                                      required = false, default = nil)
  if valid_402657166 != nil:
    section.add "X-Amz-Credential", valid_402657166
  var valid_402657167 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657167 = validateParameter(valid_402657167, JString,
                                      required = false, default = nil)
  if valid_402657167 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657167
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657169: Call_UpdateDataSetPermissions_402657156;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
                                                                                         ## 
  let valid = call_402657169.validator(path, query, header, formData, body, _)
  let scheme = call_402657169.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657169.makeUrl(scheme.get, call_402657169.host, call_402657169.base,
                                   call_402657169.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657169, uri, valid, _)

proc call*(call_402657170: Call_UpdateDataSetPermissions_402657156;
           AwsAccountId: string; body: JsonNode; DataSetId: string): Recallable =
  ## updateDataSetPermissions
  ## <p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
  ##   
                                                                                                                                                               ## AwsAccountId: string (required)
                                                                                                                                                               ##               
                                                                                                                                                               ## : 
                                                                                                                                                               ## The 
                                                                                                                                                               ## AWS 
                                                                                                                                                               ## account 
                                                                                                                                                               ## ID.
  ##   
                                                                                                                                                                     ## body: JObject (required)
  ##   
                                                                                                                                                                                                ## DataSetId: string (required)
                                                                                                                                                                                                ##            
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## ID 
                                                                                                                                                                                                ## for 
                                                                                                                                                                                                ## the 
                                                                                                                                                                                                ## dataset 
                                                                                                                                                                                                ## whose 
                                                                                                                                                                                                ## permissions 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## want 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## update. 
                                                                                                                                                                                                ## This 
                                                                                                                                                                                                ## ID 
                                                                                                                                                                                                ## is 
                                                                                                                                                                                                ## unique 
                                                                                                                                                                                                ## per 
                                                                                                                                                                                                ## AWS 
                                                                                                                                                                                                ## Region 
                                                                                                                                                                                                ## for 
                                                                                                                                                                                                ## each 
                                                                                                                                                                                                ## AWS 
                                                                                                                                                                                                ## account.
  var path_402657171 = newJObject()
  var body_402657172 = newJObject()
  add(path_402657171, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402657172 = body
  add(path_402657171, "DataSetId", newJString(DataSetId))
  result = call_402657170.call(path_402657171, nil, nil, nil, body_402657172)

var updateDataSetPermissions* = Call_UpdateDataSetPermissions_402657156(
    name: "updateDataSetPermissions", meth: HttpMethod.HttpPost,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions",
    validator: validate_UpdateDataSetPermissions_402657157, base: "/",
    makeUrl: url_UpdateDataSetPermissions_402657158,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeDataSetPermissions_402657141 = ref object of OpenApiRestCall_402656044
proc url_DescribeDataSetPermissions_402657143(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeDataSetPermissions_402657142(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID for the 
                                                                       ## dataset 
                                                                       ## that 
                                                                       ## you 
                                                                       ## want to 
                                                                       ## create. 
                                                                       ## This 
                                                                       ## ID 
                                                                       ## is 
                                                                       ## unique per AWS 
                                                                       ## Region 
                                                                       ## for 
                                                                       ## each 
                                                                       ## AWS 
                                                                       ## account.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657144 = path.getOrDefault("AwsAccountId")
  valid_402657144 = validateParameter(valid_402657144, JString, required = true,
                                      default = nil)
  if valid_402657144 != nil:
    section.add "AwsAccountId", valid_402657144
  var valid_402657145 = path.getOrDefault("DataSetId")
  valid_402657145 = validateParameter(valid_402657145, JString, required = true,
                                      default = nil)
  if valid_402657145 != nil:
    section.add "DataSetId", valid_402657145
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657146 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657146 = validateParameter(valid_402657146, JString,
                                      required = false, default = nil)
  if valid_402657146 != nil:
    section.add "X-Amz-Security-Token", valid_402657146
  var valid_402657147 = header.getOrDefault("X-Amz-Signature")
  valid_402657147 = validateParameter(valid_402657147, JString,
                                      required = false, default = nil)
  if valid_402657147 != nil:
    section.add "X-Amz-Signature", valid_402657147
  var valid_402657148 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657148 = validateParameter(valid_402657148, JString,
                                      required = false, default = nil)
  if valid_402657148 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657148
  var valid_402657149 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657149 = validateParameter(valid_402657149, JString,
                                      required = false, default = nil)
  if valid_402657149 != nil:
    section.add "X-Amz-Algorithm", valid_402657149
  var valid_402657150 = header.getOrDefault("X-Amz-Date")
  valid_402657150 = validateParameter(valid_402657150, JString,
                                      required = false, default = nil)
  if valid_402657150 != nil:
    section.add "X-Amz-Date", valid_402657150
  var valid_402657151 = header.getOrDefault("X-Amz-Credential")
  valid_402657151 = validateParameter(valid_402657151, JString,
                                      required = false, default = nil)
  if valid_402657151 != nil:
    section.add "X-Amz-Credential", valid_402657151
  var valid_402657152 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657152 = validateParameter(valid_402657152, JString,
                                      required = false, default = nil)
  if valid_402657152 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657152
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657153: Call_DescribeDataSetPermissions_402657141;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
                                                                                         ## 
  let valid = call_402657153.validator(path, query, header, formData, body, _)
  let scheme = call_402657153.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657153.makeUrl(scheme.get, call_402657153.host, call_402657153.base,
                                   call_402657153.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657153, uri, valid, _)

proc call*(call_402657154: Call_DescribeDataSetPermissions_402657141;
           AwsAccountId: string; DataSetId: string): Recallable =
  ## describeDataSetPermissions
  ## <p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
  ##   
                                                                                                                                                                 ## AwsAccountId: string (required)
                                                                                                                                                                 ##               
                                                                                                                                                                 ## : 
                                                                                                                                                                 ## The 
                                                                                                                                                                 ## AWS 
                                                                                                                                                                 ## account 
                                                                                                                                                                 ## ID.
  ##   
                                                                                                                                                                       ## DataSetId: string (required)
                                                                                                                                                                       ##            
                                                                                                                                                                       ## : 
                                                                                                                                                                       ## The 
                                                                                                                                                                       ## ID 
                                                                                                                                                                       ## for 
                                                                                                                                                                       ## the 
                                                                                                                                                                       ## dataset 
                                                                                                                                                                       ## that 
                                                                                                                                                                       ## you 
                                                                                                                                                                       ## want 
                                                                                                                                                                       ## to 
                                                                                                                                                                       ## create. 
                                                                                                                                                                       ## This 
                                                                                                                                                                       ## ID 
                                                                                                                                                                       ## is 
                                                                                                                                                                       ## unique 
                                                                                                                                                                       ## per 
                                                                                                                                                                       ## AWS 
                                                                                                                                                                       ## Region 
                                                                                                                                                                       ## for 
                                                                                                                                                                       ## each 
                                                                                                                                                                       ## AWS 
                                                                                                                                                                       ## account.
  var path_402657155 = newJObject()
  add(path_402657155, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657155, "DataSetId", newJString(DataSetId))
  result = call_402657154.call(path_402657155, nil, nil, nil, nil)

var describeDataSetPermissions* = Call_DescribeDataSetPermissions_402657141(
    name: "describeDataSetPermissions", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions",
    validator: validate_DescribeDataSetPermissions_402657142, base: "/",
    makeUrl: url_DescribeDataSetPermissions_402657143,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateDataSourcePermissions_402657188 = ref object of OpenApiRestCall_402656044
proc url_UpdateDataSourcePermissions_402657190(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSourceId" in path, "`DataSourceId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sources/"),
                 (kind: VariableSegment, value: "DataSourceId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateDataSourcePermissions_402657189(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Updates the permissions to a data source.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   DataSourceId: JString (required)
                                 ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account. 
  ##   
                                                                                                                                      ## AwsAccountId: JString (required)
                                                                                                                                      ##               
                                                                                                                                      ## : 
                                                                                                                                      ## The 
                                                                                                                                      ## AWS 
                                                                                                                                      ## account 
                                                                                                                                      ## ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `DataSourceId` field"
  var valid_402657191 = path.getOrDefault("DataSourceId")
  valid_402657191 = validateParameter(valid_402657191, JString, required = true,
                                      default = nil)
  if valid_402657191 != nil:
    section.add "DataSourceId", valid_402657191
  var valid_402657192 = path.getOrDefault("AwsAccountId")
  valid_402657192 = validateParameter(valid_402657192, JString, required = true,
                                      default = nil)
  if valid_402657192 != nil:
    section.add "AwsAccountId", valid_402657192
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657193 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657193 = validateParameter(valid_402657193, JString,
                                      required = false, default = nil)
  if valid_402657193 != nil:
    section.add "X-Amz-Security-Token", valid_402657193
  var valid_402657194 = header.getOrDefault("X-Amz-Signature")
  valid_402657194 = validateParameter(valid_402657194, JString,
                                      required = false, default = nil)
  if valid_402657194 != nil:
    section.add "X-Amz-Signature", valid_402657194
  var valid_402657195 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657195 = validateParameter(valid_402657195, JString,
                                      required = false, default = nil)
  if valid_402657195 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657195
  var valid_402657196 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657196 = validateParameter(valid_402657196, JString,
                                      required = false, default = nil)
  if valid_402657196 != nil:
    section.add "X-Amz-Algorithm", valid_402657196
  var valid_402657197 = header.getOrDefault("X-Amz-Date")
  valid_402657197 = validateParameter(valid_402657197, JString,
                                      required = false, default = nil)
  if valid_402657197 != nil:
    section.add "X-Amz-Date", valid_402657197
  var valid_402657198 = header.getOrDefault("X-Amz-Credential")
  valid_402657198 = validateParameter(valid_402657198, JString,
                                      required = false, default = nil)
  if valid_402657198 != nil:
    section.add "X-Amz-Credential", valid_402657198
  var valid_402657199 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657199 = validateParameter(valid_402657199, JString,
                                      required = false, default = nil)
  if valid_402657199 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657199
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657201: Call_UpdateDataSourcePermissions_402657188;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates the permissions to a data source.
                                                                                         ## 
  let valid = call_402657201.validator(path, query, header, formData, body, _)
  let scheme = call_402657201.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657201.makeUrl(scheme.get, call_402657201.host, call_402657201.base,
                                   call_402657201.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657201, uri, valid, _)

proc call*(call_402657202: Call_UpdateDataSourcePermissions_402657188;
           DataSourceId: string; AwsAccountId: string; body: JsonNode): Recallable =
  ## updateDataSourcePermissions
  ## Updates the permissions to a data source.
  ##   DataSourceId: string (required)
                                              ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account. 
  ##   
                                                                                                                                                   ## AwsAccountId: string (required)
                                                                                                                                                   ##               
                                                                                                                                                   ## : 
                                                                                                                                                   ## The 
                                                                                                                                                   ## AWS 
                                                                                                                                                   ## account 
                                                                                                                                                   ## ID.
  ##   
                                                                                                                                                         ## body: JObject (required)
  var path_402657203 = newJObject()
  var body_402657204 = newJObject()
  add(path_402657203, "DataSourceId", newJString(DataSourceId))
  add(path_402657203, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402657204 = body
  result = call_402657202.call(path_402657203, nil, nil, nil, body_402657204)

var updateDataSourcePermissions* = Call_UpdateDataSourcePermissions_402657188(
    name: "updateDataSourcePermissions", meth: HttpMethod.HttpPost,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions",
    validator: validate_UpdateDataSourcePermissions_402657189, base: "/",
    makeUrl: url_UpdateDataSourcePermissions_402657190,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeDataSourcePermissions_402657173 = ref object of OpenApiRestCall_402656044
proc url_DescribeDataSourcePermissions_402657175(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSourceId" in path, "`DataSourceId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sources/"),
                 (kind: VariableSegment, value: "DataSourceId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeDataSourcePermissions_402657174(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes the resource permissions for a data source.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   DataSourceId: JString (required)
                                 ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account.
  ##   
                                                                                                                                     ## AwsAccountId: JString (required)
                                                                                                                                     ##               
                                                                                                                                     ## : 
                                                                                                                                     ## The 
                                                                                                                                     ## AWS 
                                                                                                                                     ## account 
                                                                                                                                     ## ID.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `DataSourceId` field"
  var valid_402657176 = path.getOrDefault("DataSourceId")
  valid_402657176 = validateParameter(valid_402657176, JString, required = true,
                                      default = nil)
  if valid_402657176 != nil:
    section.add "DataSourceId", valid_402657176
  var valid_402657177 = path.getOrDefault("AwsAccountId")
  valid_402657177 = validateParameter(valid_402657177, JString, required = true,
                                      default = nil)
  if valid_402657177 != nil:
    section.add "AwsAccountId", valid_402657177
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657178 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657178 = validateParameter(valid_402657178, JString,
                                      required = false, default = nil)
  if valid_402657178 != nil:
    section.add "X-Amz-Security-Token", valid_402657178
  var valid_402657179 = header.getOrDefault("X-Amz-Signature")
  valid_402657179 = validateParameter(valid_402657179, JString,
                                      required = false, default = nil)
  if valid_402657179 != nil:
    section.add "X-Amz-Signature", valid_402657179
  var valid_402657180 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657180 = validateParameter(valid_402657180, JString,
                                      required = false, default = nil)
  if valid_402657180 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657180
  var valid_402657181 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657181 = validateParameter(valid_402657181, JString,
                                      required = false, default = nil)
  if valid_402657181 != nil:
    section.add "X-Amz-Algorithm", valid_402657181
  var valid_402657182 = header.getOrDefault("X-Amz-Date")
  valid_402657182 = validateParameter(valid_402657182, JString,
                                      required = false, default = nil)
  if valid_402657182 != nil:
    section.add "X-Amz-Date", valid_402657182
  var valid_402657183 = header.getOrDefault("X-Amz-Credential")
  valid_402657183 = validateParameter(valid_402657183, JString,
                                      required = false, default = nil)
  if valid_402657183 != nil:
    section.add "X-Amz-Credential", valid_402657183
  var valid_402657184 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657184 = validateParameter(valid_402657184, JString,
                                      required = false, default = nil)
  if valid_402657184 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657184
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657185: Call_DescribeDataSourcePermissions_402657173;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes the resource permissions for a data source.
                                                                                         ## 
  let valid = call_402657185.validator(path, query, header, formData, body, _)
  let scheme = call_402657185.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657185.makeUrl(scheme.get, call_402657185.host, call_402657185.base,
                                   call_402657185.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657185, uri, valid, _)

proc call*(call_402657186: Call_DescribeDataSourcePermissions_402657173;
           DataSourceId: string; AwsAccountId: string): Recallable =
  ## describeDataSourcePermissions
  ## Describes the resource permissions for a data source.
  ##   DataSourceId: string (required)
                                                          ##               : The ID of the data source. This ID is unique per AWS Region for each AWS account.
  ##   
                                                                                                                                                              ## AwsAccountId: string (required)
                                                                                                                                                              ##               
                                                                                                                                                              ## : 
                                                                                                                                                              ## The 
                                                                                                                                                              ## AWS 
                                                                                                                                                              ## account 
                                                                                                                                                              ## ID.
  var path_402657187 = newJObject()
  add(path_402657187, "DataSourceId", newJString(DataSourceId))
  add(path_402657187, "AwsAccountId", newJString(AwsAccountId))
  result = call_402657186.call(path_402657187, nil, nil, nil, nil)

var describeDataSourcePermissions* = Call_DescribeDataSourcePermissions_402657173(
    name: "describeDataSourcePermissions", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions",
    validator: validate_DescribeDataSourcePermissions_402657174, base: "/",
    makeUrl: url_DescribeDataSourcePermissions_402657175,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateIAMPolicyAssignment_402657221 = ref object of OpenApiRestCall_402656044
proc url_UpdateIAMPolicyAssignment_402657223(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "AssignmentName" in path,
         "`AssignmentName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/iam-policy-assignments/"),
                 (kind: VariableSegment, value: "AssignmentName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateIAMPolicyAssignment_402657222(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the IAM policy assignment.
  ##   
                                                                                                                      ## Namespace: JString (required)
                                                                                                                      ##            
                                                                                                                      ## : 
                                                                                                                      ## The 
                                                                                                                      ## namespace 
                                                                                                                      ## of 
                                                                                                                      ## the 
                                                                                                                      ## assignment.
  ##   
                                                                                                                                    ## AssignmentName: JString (required)
                                                                                                                                    ##                 
                                                                                                                                    ## : 
                                                                                                                                    ## The 
                                                                                                                                    ## name 
                                                                                                                                    ## of 
                                                                                                                                    ## the 
                                                                                                                                    ## assignment. 
                                                                                                                                    ## This 
                                                                                                                                    ## name 
                                                                                                                                    ## must 
                                                                                                                                    ## be 
                                                                                                                                    ## unique 
                                                                                                                                    ## within 
                                                                                                                                    ## an 
                                                                                                                                    ## AWS 
                                                                                                                                    ## account.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657224 = path.getOrDefault("AwsAccountId")
  valid_402657224 = validateParameter(valid_402657224, JString, required = true,
                                      default = nil)
  if valid_402657224 != nil:
    section.add "AwsAccountId", valid_402657224
  var valid_402657225 = path.getOrDefault("Namespace")
  valid_402657225 = validateParameter(valid_402657225, JString, required = true,
                                      default = nil)
  if valid_402657225 != nil:
    section.add "Namespace", valid_402657225
  var valid_402657226 = path.getOrDefault("AssignmentName")
  valid_402657226 = validateParameter(valid_402657226, JString, required = true,
                                      default = nil)
  if valid_402657226 != nil:
    section.add "AssignmentName", valid_402657226
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657227 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657227 = validateParameter(valid_402657227, JString,
                                      required = false, default = nil)
  if valid_402657227 != nil:
    section.add "X-Amz-Security-Token", valid_402657227
  var valid_402657228 = header.getOrDefault("X-Amz-Signature")
  valid_402657228 = validateParameter(valid_402657228, JString,
                                      required = false, default = nil)
  if valid_402657228 != nil:
    section.add "X-Amz-Signature", valid_402657228
  var valid_402657229 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657229 = validateParameter(valid_402657229, JString,
                                      required = false, default = nil)
  if valid_402657229 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657229
  var valid_402657230 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657230 = validateParameter(valid_402657230, JString,
                                      required = false, default = nil)
  if valid_402657230 != nil:
    section.add "X-Amz-Algorithm", valid_402657230
  var valid_402657231 = header.getOrDefault("X-Amz-Date")
  valid_402657231 = validateParameter(valid_402657231, JString,
                                      required = false, default = nil)
  if valid_402657231 != nil:
    section.add "X-Amz-Date", valid_402657231
  var valid_402657232 = header.getOrDefault("X-Amz-Credential")
  valid_402657232 = validateParameter(valid_402657232, JString,
                                      required = false, default = nil)
  if valid_402657232 != nil:
    section.add "X-Amz-Credential", valid_402657232
  var valid_402657233 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657233 = validateParameter(valid_402657233, JString,
                                      required = false, default = nil)
  if valid_402657233 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657233
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657235: Call_UpdateIAMPolicyAssignment_402657221;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request.
                                                                                         ## 
  let valid = call_402657235.validator(path, query, header, formData, body, _)
  let scheme = call_402657235.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657235.makeUrl(scheme.get, call_402657235.host, call_402657235.base,
                                   call_402657235.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657235, uri, valid, _)

proc call*(call_402657236: Call_UpdateIAMPolicyAssignment_402657221;
           AwsAccountId: string; body: JsonNode; Namespace: string;
           AssignmentName: string): Recallable =
  ## updateIAMPolicyAssignment
  ## Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request.
  ##   
                                                                                                                                                   ## AwsAccountId: string (required)
                                                                                                                                                   ##               
                                                                                                                                                   ## : 
                                                                                                                                                   ## The 
                                                                                                                                                   ## ID 
                                                                                                                                                   ## of 
                                                                                                                                                   ## the 
                                                                                                                                                   ## AWS 
                                                                                                                                                   ## account 
                                                                                                                                                   ## that 
                                                                                                                                                   ## contains 
                                                                                                                                                   ## the 
                                                                                                                                                   ## IAM 
                                                                                                                                                   ## policy 
                                                                                                                                                   ## assignment.
  ##   
                                                                                                                                                                 ## body: JObject (required)
  ##   
                                                                                                                                                                                            ## Namespace: string (required)
                                                                                                                                                                                            ##            
                                                                                                                                                                                            ## : 
                                                                                                                                                                                            ## The 
                                                                                                                                                                                            ## namespace 
                                                                                                                                                                                            ## of 
                                                                                                                                                                                            ## the 
                                                                                                                                                                                            ## assignment.
  ##   
                                                                                                                                                                                                          ## AssignmentName: string (required)
                                                                                                                                                                                                          ##                 
                                                                                                                                                                                                          ## : 
                                                                                                                                                                                                          ## The 
                                                                                                                                                                                                          ## name 
                                                                                                                                                                                                          ## of 
                                                                                                                                                                                                          ## the 
                                                                                                                                                                                                          ## assignment. 
                                                                                                                                                                                                          ## This 
                                                                                                                                                                                                          ## name 
                                                                                                                                                                                                          ## must 
                                                                                                                                                                                                          ## be 
                                                                                                                                                                                                          ## unique 
                                                                                                                                                                                                          ## within 
                                                                                                                                                                                                          ## an 
                                                                                                                                                                                                          ## AWS 
                                                                                                                                                                                                          ## account.
  var path_402657237 = newJObject()
  var body_402657238 = newJObject()
  add(path_402657237, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402657238 = body
  add(path_402657237, "Namespace", newJString(Namespace))
  add(path_402657237, "AssignmentName", newJString(AssignmentName))
  result = call_402657236.call(path_402657237, nil, nil, nil, body_402657238)

var updateIAMPolicyAssignment* = Call_UpdateIAMPolicyAssignment_402657221(
    name: "updateIAMPolicyAssignment", meth: HttpMethod.HttpPut,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}",
    validator: validate_UpdateIAMPolicyAssignment_402657222, base: "/",
    makeUrl: url_UpdateIAMPolicyAssignment_402657223,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeIAMPolicyAssignment_402657205 = ref object of OpenApiRestCall_402656044
proc url_DescribeIAMPolicyAssignment_402657207(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "AssignmentName" in path,
         "`AssignmentName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/iam-policy-assignments/"),
                 (kind: VariableSegment, value: "AssignmentName")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeIAMPolicyAssignment_402657206(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes an existing IAM policy assignment, as specified by the assignment name.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the assignment that you want to describe.
  ##   
                                                                                                                                     ## Namespace: JString (required)
                                                                                                                                     ##            
                                                                                                                                     ## : 
                                                                                                                                     ## The 
                                                                                                                                     ## namespace 
                                                                                                                                     ## that 
                                                                                                                                     ## contains 
                                                                                                                                     ## the 
                                                                                                                                     ## assignment.
  ##   
                                                                                                                                                   ## AssignmentName: JString (required)
                                                                                                                                                   ##                 
                                                                                                                                                   ## : 
                                                                                                                                                   ## The 
                                                                                                                                                   ## name 
                                                                                                                                                   ## of 
                                                                                                                                                   ## the 
                                                                                                                                                   ## assignment. 
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657208 = path.getOrDefault("AwsAccountId")
  valid_402657208 = validateParameter(valid_402657208, JString, required = true,
                                      default = nil)
  if valid_402657208 != nil:
    section.add "AwsAccountId", valid_402657208
  var valid_402657209 = path.getOrDefault("Namespace")
  valid_402657209 = validateParameter(valid_402657209, JString, required = true,
                                      default = nil)
  if valid_402657209 != nil:
    section.add "Namespace", valid_402657209
  var valid_402657210 = path.getOrDefault("AssignmentName")
  valid_402657210 = validateParameter(valid_402657210, JString, required = true,
                                      default = nil)
  if valid_402657210 != nil:
    section.add "AssignmentName", valid_402657210
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657211 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657211 = validateParameter(valid_402657211, JString,
                                      required = false, default = nil)
  if valid_402657211 != nil:
    section.add "X-Amz-Security-Token", valid_402657211
  var valid_402657212 = header.getOrDefault("X-Amz-Signature")
  valid_402657212 = validateParameter(valid_402657212, JString,
                                      required = false, default = nil)
  if valid_402657212 != nil:
    section.add "X-Amz-Signature", valid_402657212
  var valid_402657213 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657213 = validateParameter(valid_402657213, JString,
                                      required = false, default = nil)
  if valid_402657213 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657213
  var valid_402657214 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657214 = validateParameter(valid_402657214, JString,
                                      required = false, default = nil)
  if valid_402657214 != nil:
    section.add "X-Amz-Algorithm", valid_402657214
  var valid_402657215 = header.getOrDefault("X-Amz-Date")
  valid_402657215 = validateParameter(valid_402657215, JString,
                                      required = false, default = nil)
  if valid_402657215 != nil:
    section.add "X-Amz-Date", valid_402657215
  var valid_402657216 = header.getOrDefault("X-Amz-Credential")
  valid_402657216 = validateParameter(valid_402657216, JString,
                                      required = false, default = nil)
  if valid_402657216 != nil:
    section.add "X-Amz-Credential", valid_402657216
  var valid_402657217 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657217 = validateParameter(valid_402657217, JString,
                                      required = false, default = nil)
  if valid_402657217 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657217
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657218: Call_DescribeIAMPolicyAssignment_402657205;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes an existing IAM policy assignment, as specified by the assignment name.
                                                                                         ## 
  let valid = call_402657218.validator(path, query, header, formData, body, _)
  let scheme = call_402657218.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657218.makeUrl(scheme.get, call_402657218.host, call_402657218.base,
                                   call_402657218.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657218, uri, valid, _)

proc call*(call_402657219: Call_DescribeIAMPolicyAssignment_402657205;
           AwsAccountId: string; Namespace: string; AssignmentName: string): Recallable =
  ## describeIAMPolicyAssignment
  ## Describes an existing IAM policy assignment, as specified by the assignment name.
  ##   
                                                                                      ## AwsAccountId: string (required)
                                                                                      ##               
                                                                                      ## : 
                                                                                      ## The 
                                                                                      ## ID 
                                                                                      ## of 
                                                                                      ## the 
                                                                                      ## AWS 
                                                                                      ## account 
                                                                                      ## that 
                                                                                      ## contains 
                                                                                      ## the 
                                                                                      ## assignment 
                                                                                      ## that 
                                                                                      ## you 
                                                                                      ## want 
                                                                                      ## to 
                                                                                      ## describe.
  ##   
                                                                                                  ## Namespace: string (required)
                                                                                                  ##            
                                                                                                  ## : 
                                                                                                  ## The 
                                                                                                  ## namespace 
                                                                                                  ## that 
                                                                                                  ## contains 
                                                                                                  ## the 
                                                                                                  ## assignment.
  ##   
                                                                                                                ## AssignmentName: string (required)
                                                                                                                ##                 
                                                                                                                ## : 
                                                                                                                ## The 
                                                                                                                ## name 
                                                                                                                ## of 
                                                                                                                ## the 
                                                                                                                ## assignment. 
  var path_402657220 = newJObject()
  add(path_402657220, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657220, "Namespace", newJString(Namespace))
  add(path_402657220, "AssignmentName", newJString(AssignmentName))
  result = call_402657219.call(path_402657220, nil, nil, nil, nil)

var describeIAMPolicyAssignment* = Call_DescribeIAMPolicyAssignment_402657205(
    name: "describeIAMPolicyAssignment", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}",
    validator: validate_DescribeIAMPolicyAssignment_402657206, base: "/",
    makeUrl: url_DescribeIAMPolicyAssignment_402657207,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateTemplatePermissions_402657254 = ref object of OpenApiRestCall_402656044
proc url_UpdateTemplatePermissions_402657256(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateTemplatePermissions_402657255(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Updates the resource permissions for a template.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template.
  ##   
                                                                                                         ## TemplateId: JString (required)
                                                                                                         ##             
                                                                                                         ## : 
                                                                                                         ## The 
                                                                                                         ## ID 
                                                                                                         ## for 
                                                                                                         ## the 
                                                                                                         ## template.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657257 = path.getOrDefault("AwsAccountId")
  valid_402657257 = validateParameter(valid_402657257, JString, required = true,
                                      default = nil)
  if valid_402657257 != nil:
    section.add "AwsAccountId", valid_402657257
  var valid_402657258 = path.getOrDefault("TemplateId")
  valid_402657258 = validateParameter(valid_402657258, JString, required = true,
                                      default = nil)
  if valid_402657258 != nil:
    section.add "TemplateId", valid_402657258
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657259 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657259 = validateParameter(valid_402657259, JString,
                                      required = false, default = nil)
  if valid_402657259 != nil:
    section.add "X-Amz-Security-Token", valid_402657259
  var valid_402657260 = header.getOrDefault("X-Amz-Signature")
  valid_402657260 = validateParameter(valid_402657260, JString,
                                      required = false, default = nil)
  if valid_402657260 != nil:
    section.add "X-Amz-Signature", valid_402657260
  var valid_402657261 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657261 = validateParameter(valid_402657261, JString,
                                      required = false, default = nil)
  if valid_402657261 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657261
  var valid_402657262 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657262 = validateParameter(valid_402657262, JString,
                                      required = false, default = nil)
  if valid_402657262 != nil:
    section.add "X-Amz-Algorithm", valid_402657262
  var valid_402657263 = header.getOrDefault("X-Amz-Date")
  valid_402657263 = validateParameter(valid_402657263, JString,
                                      required = false, default = nil)
  if valid_402657263 != nil:
    section.add "X-Amz-Date", valid_402657263
  var valid_402657264 = header.getOrDefault("X-Amz-Credential")
  valid_402657264 = validateParameter(valid_402657264, JString,
                                      required = false, default = nil)
  if valid_402657264 != nil:
    section.add "X-Amz-Credential", valid_402657264
  var valid_402657265 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657265 = validateParameter(valid_402657265, JString,
                                      required = false, default = nil)
  if valid_402657265 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657265
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657267: Call_UpdateTemplatePermissions_402657254;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates the resource permissions for a template.
                                                                                         ## 
  let valid = call_402657267.validator(path, query, header, formData, body, _)
  let scheme = call_402657267.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657267.makeUrl(scheme.get, call_402657267.host, call_402657267.base,
                                   call_402657267.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657267, uri, valid, _)

proc call*(call_402657268: Call_UpdateTemplatePermissions_402657254;
           AwsAccountId: string; body: JsonNode; TemplateId: string): Recallable =
  ## updateTemplatePermissions
  ## Updates the resource permissions for a template.
  ##   AwsAccountId: string (required)
                                                     ##               : The ID of the AWS account that contains the template.
  ##   
                                                                                                                             ## body: JObject (required)
  ##   
                                                                                                                                                        ## TemplateId: string (required)
                                                                                                                                                        ##             
                                                                                                                                                        ## : 
                                                                                                                                                        ## The 
                                                                                                                                                        ## ID 
                                                                                                                                                        ## for 
                                                                                                                                                        ## the 
                                                                                                                                                        ## template.
  var path_402657269 = newJObject()
  var body_402657270 = newJObject()
  add(path_402657269, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402657270 = body
  add(path_402657269, "TemplateId", newJString(TemplateId))
  result = call_402657268.call(path_402657269, nil, nil, nil, body_402657270)

var updateTemplatePermissions* = Call_UpdateTemplatePermissions_402657254(
    name: "updateTemplatePermissions", meth: HttpMethod.HttpPut,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}/permissions",
    validator: validate_UpdateTemplatePermissions_402657255, base: "/",
    makeUrl: url_UpdateTemplatePermissions_402657256,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_DescribeTemplatePermissions_402657239 = ref object of OpenApiRestCall_402656044
proc url_DescribeTemplatePermissions_402657241(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/permissions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_DescribeTemplatePermissions_402657240(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Describes read and write permissions on a template.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template that you're describing.
  ##   
                                                                                                                                ## TemplateId: JString (required)
                                                                                                                                ##             
                                                                                                                                ## : 
                                                                                                                                ## The 
                                                                                                                                ## ID 
                                                                                                                                ## for 
                                                                                                                                ## the 
                                                                                                                                ## template.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657242 = path.getOrDefault("AwsAccountId")
  valid_402657242 = validateParameter(valid_402657242, JString, required = true,
                                      default = nil)
  if valid_402657242 != nil:
    section.add "AwsAccountId", valid_402657242
  var valid_402657243 = path.getOrDefault("TemplateId")
  valid_402657243 = validateParameter(valid_402657243, JString, required = true,
                                      default = nil)
  if valid_402657243 != nil:
    section.add "TemplateId", valid_402657243
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657244 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657244 = validateParameter(valid_402657244, JString,
                                      required = false, default = nil)
  if valid_402657244 != nil:
    section.add "X-Amz-Security-Token", valid_402657244
  var valid_402657245 = header.getOrDefault("X-Amz-Signature")
  valid_402657245 = validateParameter(valid_402657245, JString,
                                      required = false, default = nil)
  if valid_402657245 != nil:
    section.add "X-Amz-Signature", valid_402657245
  var valid_402657246 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657246 = validateParameter(valid_402657246, JString,
                                      required = false, default = nil)
  if valid_402657246 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657246
  var valid_402657247 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657247 = validateParameter(valid_402657247, JString,
                                      required = false, default = nil)
  if valid_402657247 != nil:
    section.add "X-Amz-Algorithm", valid_402657247
  var valid_402657248 = header.getOrDefault("X-Amz-Date")
  valid_402657248 = validateParameter(valid_402657248, JString,
                                      required = false, default = nil)
  if valid_402657248 != nil:
    section.add "X-Amz-Date", valid_402657248
  var valid_402657249 = header.getOrDefault("X-Amz-Credential")
  valid_402657249 = validateParameter(valid_402657249, JString,
                                      required = false, default = nil)
  if valid_402657249 != nil:
    section.add "X-Amz-Credential", valid_402657249
  var valid_402657250 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657250 = validateParameter(valid_402657250, JString,
                                      required = false, default = nil)
  if valid_402657250 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657250
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657251: Call_DescribeTemplatePermissions_402657239;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Describes read and write permissions on a template.
                                                                                         ## 
  let valid = call_402657251.validator(path, query, header, formData, body, _)
  let scheme = call_402657251.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657251.makeUrl(scheme.get, call_402657251.host, call_402657251.base,
                                   call_402657251.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657251, uri, valid, _)

proc call*(call_402657252: Call_DescribeTemplatePermissions_402657239;
           AwsAccountId: string; TemplateId: string): Recallable =
  ## describeTemplatePermissions
  ## Describes read and write permissions on a template.
  ##   AwsAccountId: string (required)
                                                        ##               : The ID of the AWS account that contains the template that you're describing.
  ##   
                                                                                                                                                       ## TemplateId: string (required)
                                                                                                                                                       ##             
                                                                                                                                                       ## : 
                                                                                                                                                       ## The 
                                                                                                                                                       ## ID 
                                                                                                                                                       ## for 
                                                                                                                                                       ## the 
                                                                                                                                                       ## template.
  var path_402657253 = newJObject()
  add(path_402657253, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657253, "TemplateId", newJString(TemplateId))
  result = call_402657252.call(path_402657253, nil, nil, nil, nil)

var describeTemplatePermissions* = Call_DescribeTemplatePermissions_402657239(
    name: "describeTemplatePermissions", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}/permissions",
    validator: validate_DescribeTemplatePermissions_402657240, base: "/",
    makeUrl: url_DescribeTemplatePermissions_402657241,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDashboardEmbedUrl_402657271 = ref object of OpenApiRestCall_402656044
proc url_GetDashboardEmbedUrl_402657273(protocol: Scheme; host: string;
                                        base: string; route: string;
                                        path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId"),
                 (kind: ConstantSegment, value: "/embed-url#creds-type")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_GetDashboardEmbedUrl_402657272(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Generates a server-side embeddable URL and authorization code. For this process to work properly, first configure the dashboards and user permissions. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight User Guide</i> or <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/qs-dev-embedded-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight API Reference</i>.</p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user’s browser.</p>
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that contains the dashboard that you're embedding.
  ##   
                                                                                                                                 ## DashboardId: JString (required)
                                                                                                                                 ##              
                                                                                                                                 ## : 
                                                                                                                                 ## The 
                                                                                                                                 ## ID 
                                                                                                                                 ## for 
                                                                                                                                 ## the 
                                                                                                                                 ## dashboard, 
                                                                                                                                 ## also 
                                                                                                                                 ## added 
                                                                                                                                 ## to 
                                                                                                                                 ## the 
                                                                                                                                 ## IAM 
                                                                                                                                 ## policy.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657274 = path.getOrDefault("AwsAccountId")
  valid_402657274 = validateParameter(valid_402657274, JString, required = true,
                                      default = nil)
  if valid_402657274 != nil:
    section.add "AwsAccountId", valid_402657274
  var valid_402657275 = path.getOrDefault("DashboardId")
  valid_402657275 = validateParameter(valid_402657275, JString, required = true,
                                      default = nil)
  if valid_402657275 != nil:
    section.add "DashboardId", valid_402657275
  result.add "path", section
  ## parameters in `query` object:
  ##   undo-redo-disabled: JBool
                                  ##                     : Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables the undo/redo button.
  ##   
                                                                                                                                                                           ## user-arn: JString
                                                                                                                                                                           ##           
                                                                                                                                                                           ## : 
                                                                                                                                                                           ## <p>The 
                                                                                                                                                                           ## Amazon 
                                                                                                                                                                           ## QuickSight 
                                                                                                                                                                           ## user's 
                                                                                                                                                                           ## Amazon 
                                                                                                                                                                           ## Resource 
                                                                                                                                                                           ## Name 
                                                                                                                                                                           ## (ARN), 
                                                                                                                                                                           ## for 
                                                                                                                                                                           ## use 
                                                                                                                                                                           ## with 
                                                                                                                                                                           ## <code>QUICKSIGHT</code> 
                                                                                                                                                                           ## identity 
                                                                                                                                                                           ## type. 
                                                                                                                                                                           ## You 
                                                                                                                                                                           ## can 
                                                                                                                                                                           ## use 
                                                                                                                                                                           ## this 
                                                                                                                                                                           ## for 
                                                                                                                                                                           ## any 
                                                                                                                                                                           ## Amazon 
                                                                                                                                                                           ## QuickSight 
                                                                                                                                                                           ## users 
                                                                                                                                                                           ## in 
                                                                                                                                                                           ## your 
                                                                                                                                                                           ## account 
                                                                                                                                                                           ## (readers, 
                                                                                                                                                                           ## authors, 
                                                                                                                                                                           ## or 
                                                                                                                                                                           ## admins) 
                                                                                                                                                                           ## authenticated 
                                                                                                                                                                           ## as 
                                                                                                                                                                           ## one 
                                                                                                                                                                           ## of 
                                                                                                                                                                           ## the 
                                                                                                                                                                           ## following:</p> 
                                                                                                                                                                           ## <ul> 
                                                                                                                                                                           ## <li> 
                                                                                                                                                                           ## <p>Active 
                                                                                                                                                                           ## Directory 
                                                                                                                                                                           ## (AD) 
                                                                                                                                                                           ## users 
                                                                                                                                                                           ## or 
                                                                                                                                                                           ## group 
                                                                                                                                                                           ## members</p> 
                                                                                                                                                                           ## </li> 
                                                                                                                                                                           ## <li> 
                                                                                                                                                                           ## <p>Invited 
                                                                                                                                                                           ## nonfederated 
                                                                                                                                                                           ## users</p> 
                                                                                                                                                                           ## </li> 
                                                                                                                                                                           ## <li> 
                                                                                                                                                                           ## <p>IAM 
                                                                                                                                                                           ## users 
                                                                                                                                                                           ## and 
                                                                                                                                                                           ## IAM 
                                                                                                                                                                           ## role-based 
                                                                                                                                                                           ## sessions 
                                                                                                                                                                           ## authenticated 
                                                                                                                                                                           ## through 
                                                                                                                                                                           ## Federated 
                                                                                                                                                                           ## Single 
                                                                                                                                                                           ## Sign-On 
                                                                                                                                                                           ## using 
                                                                                                                                                                           ## SAML, 
                                                                                                                                                                           ## OpenID 
                                                                                                                                                                           ## Connect, 
                                                                                                                                                                           ## or 
                                                                                                                                                                           ## IAM 
                                                                                                                                                                           ## federation.</p> 
                                                                                                                                                                           ## </li> 
                                                                                                                                                                           ## </ul>
  ##   
                                                                                                                                                                                   ## session-lifetime: JInt
                                                                                                                                                                                   ##                   
                                                                                                                                                                                   ## : 
                                                                                                                                                                                   ## How 
                                                                                                                                                                                   ## many 
                                                                                                                                                                                   ## minutes 
                                                                                                                                                                                   ## the 
                                                                                                                                                                                   ## session 
                                                                                                                                                                                   ## is 
                                                                                                                                                                                   ## valid. 
                                                                                                                                                                                   ## The 
                                                                                                                                                                                   ## session 
                                                                                                                                                                                   ## lifetime 
                                                                                                                                                                                   ## must 
                                                                                                                                                                                   ## be 
                                                                                                                                                                                   ## 15-600 
                                                                                                                                                                                   ## minutes.
  ##   
                                                                                                                                                                                              ## creds-type: JString (required)
                                                                                                                                                                                              ##             
                                                                                                                                                                                              ## : 
                                                                                                                                                                                              ## The 
                                                                                                                                                                                              ## authentication 
                                                                                                                                                                                              ## method 
                                                                                                                                                                                              ## that 
                                                                                                                                                                                              ## the 
                                                                                                                                                                                              ## user 
                                                                                                                                                                                              ## uses 
                                                                                                                                                                                              ## to 
                                                                                                                                                                                              ## sign 
                                                                                                                                                                                              ## in.
  ##   
                                                                                                                                                                                                    ## reset-disabled: JBool
                                                                                                                                                                                                    ##                 
                                                                                                                                                                                                    ## : 
                                                                                                                                                                                                    ## Remove 
                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                    ## reset 
                                                                                                                                                                                                    ## button 
                                                                                                                                                                                                    ## on 
                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                    ## embedded 
                                                                                                                                                                                                    ## dashboard. 
                                                                                                                                                                                                    ## The 
                                                                                                                                                                                                    ## default 
                                                                                                                                                                                                    ## is 
                                                                                                                                                                                                    ## FALSE, 
                                                                                                                                                                                                    ## which 
                                                                                                                                                                                                    ## enables 
                                                                                                                                                                                                    ## the 
                                                                                                                                                                                                    ## reset 
                                                                                                                                                                                                    ## button.
  section = newJObject()
  var valid_402657276 = query.getOrDefault("undo-redo-disabled")
  valid_402657276 = validateParameter(valid_402657276, JBool, required = false,
                                      default = nil)
  if valid_402657276 != nil:
    section.add "undo-redo-disabled", valid_402657276
  var valid_402657277 = query.getOrDefault("user-arn")
  valid_402657277 = validateParameter(valid_402657277, JString,
                                      required = false, default = nil)
  if valid_402657277 != nil:
    section.add "user-arn", valid_402657277
  var valid_402657278 = query.getOrDefault("session-lifetime")
  valid_402657278 = validateParameter(valid_402657278, JInt, required = false,
                                      default = nil)
  if valid_402657278 != nil:
    section.add "session-lifetime", valid_402657278
  var valid_402657291 = query.getOrDefault("creds-type")
  valid_402657291 = validateParameter(valid_402657291, JString, required = true,
                                      default = newJString("IAM"))
  if valid_402657291 != nil:
    section.add "creds-type", valid_402657291
  var valid_402657292 = query.getOrDefault("reset-disabled")
  valid_402657292 = validateParameter(valid_402657292, JBool, required = false,
                                      default = nil)
  if valid_402657292 != nil:
    section.add "reset-disabled", valid_402657292
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657293 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657293 = validateParameter(valid_402657293, JString,
                                      required = false, default = nil)
  if valid_402657293 != nil:
    section.add "X-Amz-Security-Token", valid_402657293
  var valid_402657294 = header.getOrDefault("X-Amz-Signature")
  valid_402657294 = validateParameter(valid_402657294, JString,
                                      required = false, default = nil)
  if valid_402657294 != nil:
    section.add "X-Amz-Signature", valid_402657294
  var valid_402657295 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657295 = validateParameter(valid_402657295, JString,
                                      required = false, default = nil)
  if valid_402657295 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657295
  var valid_402657296 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657296 = validateParameter(valid_402657296, JString,
                                      required = false, default = nil)
  if valid_402657296 != nil:
    section.add "X-Amz-Algorithm", valid_402657296
  var valid_402657297 = header.getOrDefault("X-Amz-Date")
  valid_402657297 = validateParameter(valid_402657297, JString,
                                      required = false, default = nil)
  if valid_402657297 != nil:
    section.add "X-Amz-Date", valid_402657297
  var valid_402657298 = header.getOrDefault("X-Amz-Credential")
  valid_402657298 = validateParameter(valid_402657298, JString,
                                      required = false, default = nil)
  if valid_402657298 != nil:
    section.add "X-Amz-Credential", valid_402657298
  var valid_402657299 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657299 = validateParameter(valid_402657299, JString,
                                      required = false, default = nil)
  if valid_402657299 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657299
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657300: Call_GetDashboardEmbedUrl_402657271;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Generates a server-side embeddable URL and authorization code. For this process to work properly, first configure the dashboards and user permissions. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight User Guide</i> or <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/qs-dev-embedded-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight API Reference</i>.</p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user’s browser.</p>
                                                                                         ## 
  let valid = call_402657300.validator(path, query, header, formData, body, _)
  let scheme = call_402657300.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657300.makeUrl(scheme.get, call_402657300.host, call_402657300.base,
                                   call_402657300.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657300, uri, valid, _)

proc call*(call_402657301: Call_GetDashboardEmbedUrl_402657271;
           AwsAccountId: string; DashboardId: string;
           undoRedoDisabled: bool = false; userArn: string = "";
           sessionLifetime: int = 0; credsType: string = "IAM";
           resetDisabled: bool = false): Recallable =
  ## getDashboardEmbedUrl
  ## <p>Generates a server-side embeddable URL and authorization code. For this process to work properly, first configure the dashboards and user permissions. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight User Guide</i> or <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/qs-dev-embedded-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight API Reference</i>.</p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user’s browser.</p>
  ##   
undoRedoDisabled: bool


emove 
the 
undo/redo 
button 
on 
the 
embedded 
dashboard. 
he 
default 
is 

which 
enables 
the 
undo/redo 
button.
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ## AwsAccountId: string (required)


he 

for 
the 

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ## account 
that 
contains 
the 
dashboard 
that 
you're 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ## embedding.
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## userArn: string


p>The 
mazon 
uickSight 
user's 
mazon 
esource 
ame 

for 
use 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## with 
code>QUICKSIGHT</code> 
identity 
type. 
ou 
can 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## use 
this 
for 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## any 
mazon 
uickSight 
users 
in 
your 
account 
readers, 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## authors, 
or 
admins) 
authenticated 
as 
one 
of 
the 
following:</p> 
ul> 
li> 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## <p>Active 
irectory 

users 
or 
group 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ## members</p> 
li> 
li> 
p>Invited 
nonfederated 
users</p> 
li> 
li> 
p>IAM 
users 
and 

role-based 
sessions 
authenticated 
through 
ederated 
ingle 
ign-On 
using 

penID 
onnect, 
or 

federation.</p> 
li> 
ul>
  ##   
ashboardId: string (required)


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ## The 

for 
the 
dashboard, 
also 
added 
to 
the 

policy.
  ##   
sessionLifetime: int


ow 
many 
minutes 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ## the 
session 
is 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ## valid. 
he 
session 
lifetime 
must 
be 

minutes.
  ##   
credsType: string (required)


he 
authentication 
method 
that 
the 
user 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ## uses 
to 
sign 
in.
  ##   
resetDisabled: bool
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ##                

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ## Remove 
the 
reset 
button 
on 
the 
embedded 
dashboard. 
he 
default 
is 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ## FALSE, 
which 
enables 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ## the 
reset 
button.
  var path_402657302 = newJObject()
  var query_402657303 = newJObject()
  add(query_402657303, "undo-redo-disabled", newJBool(undoRedoDisabled))
  add(path_402657302, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657303, "user-arn", newJString(userArn))
  add(path_402657302, "DashboardId", newJString(DashboardId))
  add(query_402657303, "session-lifetime", newJInt(sessionLifetime))
  add(query_402657303, "creds-type", newJString(credsType))
  add(query_402657303, "reset-disabled", newJBool(resetDisabled))
  result = call_402657301.call(path_402657302, query_402657303, nil, nil, nil)

var getDashboardEmbedUrl* = Call_GetDashboardEmbedUrl_402657271(
    name: "getDashboardEmbedUrl", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url#creds-type",
    validator: validate_GetDashboardEmbedUrl_402657272, base: "/",
    makeUrl: url_GetDashboardEmbedUrl_402657273,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListDashboardVersions_402657304 = ref object of OpenApiRestCall_402656044
proc url_ListDashboardVersions_402657306(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId"),
                 (kind: ConstantSegment, value: "/versions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListDashboardVersions_402657305(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists all the versions of the dashboards in the QuickSight subscription.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the dashboard that you're listing versions for.
  ##   
                                                                                                                                           ## DashboardId: JString (required)
                                                                                                                                           ##              
                                                                                                                                           ## : 
                                                                                                                                           ## The 
                                                                                                                                           ## ID 
                                                                                                                                           ## for 
                                                                                                                                           ## the 
                                                                                                                                           ## dashboard.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657307 = path.getOrDefault("AwsAccountId")
  valid_402657307 = validateParameter(valid_402657307, JString, required = true,
                                      default = nil)
  if valid_402657307 != nil:
    section.add "AwsAccountId", valid_402657307
  var valid_402657308 = path.getOrDefault("DashboardId")
  valid_402657308 = validateParameter(valid_402657308, JString, required = true,
                                      default = nil)
  if valid_402657308 != nil:
    section.add "DashboardId", valid_402657308
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## MaxResults: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## Pagination 
                                                                                                             ## limit
  ##   
                                                                                                                     ## NextToken: JString
                                                                                                                     ##            
                                                                                                                     ## : 
                                                                                                                     ## Pagination 
                                                                                                                     ## token
  ##   
                                                                                                                             ## next-token: JString
                                                                                                                             ##             
                                                                                                                             ## : 
                                                                                                                             ## The 
                                                                                                                             ## token 
                                                                                                                             ## for 
                                                                                                                             ## the 
                                                                                                                             ## next 
                                                                                                                             ## set 
                                                                                                                             ## of 
                                                                                                                             ## results, 
                                                                                                                             ## or 
                                                                                                                             ## null 
                                                                                                                             ## if 
                                                                                                                             ## there 
                                                                                                                             ## are 
                                                                                                                             ## no 
                                                                                                                             ## more 
                                                                                                                             ## results.
  section = newJObject()
  var valid_402657309 = query.getOrDefault("max-results")
  valid_402657309 = validateParameter(valid_402657309, JInt, required = false,
                                      default = nil)
  if valid_402657309 != nil:
    section.add "max-results", valid_402657309
  var valid_402657310 = query.getOrDefault("MaxResults")
  valid_402657310 = validateParameter(valid_402657310, JString,
                                      required = false, default = nil)
  if valid_402657310 != nil:
    section.add "MaxResults", valid_402657310
  var valid_402657311 = query.getOrDefault("NextToken")
  valid_402657311 = validateParameter(valid_402657311, JString,
                                      required = false, default = nil)
  if valid_402657311 != nil:
    section.add "NextToken", valid_402657311
  var valid_402657312 = query.getOrDefault("next-token")
  valid_402657312 = validateParameter(valid_402657312, JString,
                                      required = false, default = nil)
  if valid_402657312 != nil:
    section.add "next-token", valid_402657312
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657313 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657313 = validateParameter(valid_402657313, JString,
                                      required = false, default = nil)
  if valid_402657313 != nil:
    section.add "X-Amz-Security-Token", valid_402657313
  var valid_402657314 = header.getOrDefault("X-Amz-Signature")
  valid_402657314 = validateParameter(valid_402657314, JString,
                                      required = false, default = nil)
  if valid_402657314 != nil:
    section.add "X-Amz-Signature", valid_402657314
  var valid_402657315 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657315 = validateParameter(valid_402657315, JString,
                                      required = false, default = nil)
  if valid_402657315 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657315
  var valid_402657316 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657316 = validateParameter(valid_402657316, JString,
                                      required = false, default = nil)
  if valid_402657316 != nil:
    section.add "X-Amz-Algorithm", valid_402657316
  var valid_402657317 = header.getOrDefault("X-Amz-Date")
  valid_402657317 = validateParameter(valid_402657317, JString,
                                      required = false, default = nil)
  if valid_402657317 != nil:
    section.add "X-Amz-Date", valid_402657317
  var valid_402657318 = header.getOrDefault("X-Amz-Credential")
  valid_402657318 = validateParameter(valid_402657318, JString,
                                      required = false, default = nil)
  if valid_402657318 != nil:
    section.add "X-Amz-Credential", valid_402657318
  var valid_402657319 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657319 = validateParameter(valid_402657319, JString,
                                      required = false, default = nil)
  if valid_402657319 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657319
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657320: Call_ListDashboardVersions_402657304;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists all the versions of the dashboards in the QuickSight subscription.
                                                                                         ## 
  let valid = call_402657320.validator(path, query, header, formData, body, _)
  let scheme = call_402657320.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657320.makeUrl(scheme.get, call_402657320.host, call_402657320.base,
                                   call_402657320.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657320, uri, valid, _)

proc call*(call_402657321: Call_ListDashboardVersions_402657304;
           AwsAccountId: string; DashboardId: string; maxResults: int = 0;
           MaxResults: string = ""; NextToken: string = "";
           nextToken: string = ""): Recallable =
  ## listDashboardVersions
  ## Lists all the versions of the dashboards in the QuickSight subscription.
  ##   
                                                                             ## AwsAccountId: string (required)
                                                                             ##               
                                                                             ## : 
                                                                             ## The 
                                                                             ## ID 
                                                                             ## of 
                                                                             ## the 
                                                                             ## AWS 
                                                                             ## account 
                                                                             ## that 
                                                                             ## contains 
                                                                             ## the 
                                                                             ## dashboard 
                                                                             ## that 
                                                                             ## you're 
                                                                             ## listing 
                                                                             ## versions 
                                                                             ## for.
  ##   
                                                                                    ## DashboardId: string (required)
                                                                                    ##              
                                                                                    ## : 
                                                                                    ## The 
                                                                                    ## ID 
                                                                                    ## for 
                                                                                    ## the 
                                                                                    ## dashboard.
  ##   
                                                                                                 ## maxResults: int
                                                                                                 ##             
                                                                                                 ## : 
                                                                                                 ## The 
                                                                                                 ## maximum 
                                                                                                 ## number 
                                                                                                 ## of 
                                                                                                 ## results 
                                                                                                 ## to 
                                                                                                 ## be 
                                                                                                 ## returned 
                                                                                                 ## per 
                                                                                                 ## request.
  ##   
                                                                                                            ## MaxResults: string
                                                                                                            ##             
                                                                                                            ## : 
                                                                                                            ## Pagination 
                                                                                                            ## limit
  ##   
                                                                                                                    ## NextToken: string
                                                                                                                    ##            
                                                                                                                    ## : 
                                                                                                                    ## Pagination 
                                                                                                                    ## token
  ##   
                                                                                                                            ## nextToken: string
                                                                                                                            ##            
                                                                                                                            ## : 
                                                                                                                            ## The 
                                                                                                                            ## token 
                                                                                                                            ## for 
                                                                                                                            ## the 
                                                                                                                            ## next 
                                                                                                                            ## set 
                                                                                                                            ## of 
                                                                                                                            ## results, 
                                                                                                                            ## or 
                                                                                                                            ## null 
                                                                                                                            ## if 
                                                                                                                            ## there 
                                                                                                                            ## are 
                                                                                                                            ## no 
                                                                                                                            ## more 
                                                                                                                            ## results.
  var path_402657322 = newJObject()
  var query_402657323 = newJObject()
  add(path_402657322, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657322, "DashboardId", newJString(DashboardId))
  add(query_402657323, "max-results", newJInt(maxResults))
  add(query_402657323, "MaxResults", newJString(MaxResults))
  add(query_402657323, "NextToken", newJString(NextToken))
  add(query_402657323, "next-token", newJString(nextToken))
  result = call_402657321.call(path_402657322, query_402657323, nil, nil, nil)

var listDashboardVersions* = Call_ListDashboardVersions_402657304(
    name: "listDashboardVersions", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions",
    validator: validate_ListDashboardVersions_402657305, base: "/",
    makeUrl: url_ListDashboardVersions_402657306,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListDashboards_402657324 = ref object of OpenApiRestCall_402656044
proc url_ListDashboards_402657326(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListDashboards_402657325(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists dashboards in an AWS account.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the dashboards that you're listing.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657327 = path.getOrDefault("AwsAccountId")
  valid_402657327 = validateParameter(valid_402657327, JString, required = true,
                                      default = nil)
  if valid_402657327 != nil:
    section.add "AwsAccountId", valid_402657327
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## MaxResults: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## Pagination 
                                                                                                             ## limit
  ##   
                                                                                                                     ## NextToken: JString
                                                                                                                     ##            
                                                                                                                     ## : 
                                                                                                                     ## Pagination 
                                                                                                                     ## token
  ##   
                                                                                                                             ## next-token: JString
                                                                                                                             ##             
                                                                                                                             ## : 
                                                                                                                             ## The 
                                                                                                                             ## token 
                                                                                                                             ## for 
                                                                                                                             ## the 
                                                                                                                             ## next 
                                                                                                                             ## set 
                                                                                                                             ## of 
                                                                                                                             ## results, 
                                                                                                                             ## or 
                                                                                                                             ## null 
                                                                                                                             ## if 
                                                                                                                             ## there 
                                                                                                                             ## are 
                                                                                                                             ## no 
                                                                                                                             ## more 
                                                                                                                             ## results.
  section = newJObject()
  var valid_402657328 = query.getOrDefault("max-results")
  valid_402657328 = validateParameter(valid_402657328, JInt, required = false,
                                      default = nil)
  if valid_402657328 != nil:
    section.add "max-results", valid_402657328
  var valid_402657329 = query.getOrDefault("MaxResults")
  valid_402657329 = validateParameter(valid_402657329, JString,
                                      required = false, default = nil)
  if valid_402657329 != nil:
    section.add "MaxResults", valid_402657329
  var valid_402657330 = query.getOrDefault("NextToken")
  valid_402657330 = validateParameter(valid_402657330, JString,
                                      required = false, default = nil)
  if valid_402657330 != nil:
    section.add "NextToken", valid_402657330
  var valid_402657331 = query.getOrDefault("next-token")
  valid_402657331 = validateParameter(valid_402657331, JString,
                                      required = false, default = nil)
  if valid_402657331 != nil:
    section.add "next-token", valid_402657331
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657332 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657332 = validateParameter(valid_402657332, JString,
                                      required = false, default = nil)
  if valid_402657332 != nil:
    section.add "X-Amz-Security-Token", valid_402657332
  var valid_402657333 = header.getOrDefault("X-Amz-Signature")
  valid_402657333 = validateParameter(valid_402657333, JString,
                                      required = false, default = nil)
  if valid_402657333 != nil:
    section.add "X-Amz-Signature", valid_402657333
  var valid_402657334 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657334 = validateParameter(valid_402657334, JString,
                                      required = false, default = nil)
  if valid_402657334 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657334
  var valid_402657335 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657335 = validateParameter(valid_402657335, JString,
                                      required = false, default = nil)
  if valid_402657335 != nil:
    section.add "X-Amz-Algorithm", valid_402657335
  var valid_402657336 = header.getOrDefault("X-Amz-Date")
  valid_402657336 = validateParameter(valid_402657336, JString,
                                      required = false, default = nil)
  if valid_402657336 != nil:
    section.add "X-Amz-Date", valid_402657336
  var valid_402657337 = header.getOrDefault("X-Amz-Credential")
  valid_402657337 = validateParameter(valid_402657337, JString,
                                      required = false, default = nil)
  if valid_402657337 != nil:
    section.add "X-Amz-Credential", valid_402657337
  var valid_402657338 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657338 = validateParameter(valid_402657338, JString,
                                      required = false, default = nil)
  if valid_402657338 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657338
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657339: Call_ListDashboards_402657324; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists dashboards in an AWS account.
                                                                                         ## 
  let valid = call_402657339.validator(path, query, header, formData, body, _)
  let scheme = call_402657339.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657339.makeUrl(scheme.get, call_402657339.host, call_402657339.base,
                                   call_402657339.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657339, uri, valid, _)

proc call*(call_402657340: Call_ListDashboards_402657324; AwsAccountId: string;
           maxResults: int = 0; MaxResults: string = ""; NextToken: string = "";
           nextToken: string = ""): Recallable =
  ## listDashboards
  ## Lists dashboards in an AWS account.
  ##   AwsAccountId: string (required)
                                        ##               : The ID of the AWS account that contains the dashboards that you're listing.
  ##   
                                                                                                                                      ## maxResults: int
                                                                                                                                      ##             
                                                                                                                                      ## : 
                                                                                                                                      ## The 
                                                                                                                                      ## maximum 
                                                                                                                                      ## number 
                                                                                                                                      ## of 
                                                                                                                                      ## results 
                                                                                                                                      ## to 
                                                                                                                                      ## be 
                                                                                                                                      ## returned 
                                                                                                                                      ## per 
                                                                                                                                      ## request.
  ##   
                                                                                                                                                 ## MaxResults: string
                                                                                                                                                 ##             
                                                                                                                                                 ## : 
                                                                                                                                                 ## Pagination 
                                                                                                                                                 ## limit
  ##   
                                                                                                                                                         ## NextToken: string
                                                                                                                                                         ##            
                                                                                                                                                         ## : 
                                                                                                                                                         ## Pagination 
                                                                                                                                                         ## token
  ##   
                                                                                                                                                                 ## nextToken: string
                                                                                                                                                                 ##            
                                                                                                                                                                 ## : 
                                                                                                                                                                 ## The 
                                                                                                                                                                 ## token 
                                                                                                                                                                 ## for 
                                                                                                                                                                 ## the 
                                                                                                                                                                 ## next 
                                                                                                                                                                 ## set 
                                                                                                                                                                 ## of 
                                                                                                                                                                 ## results, 
                                                                                                                                                                 ## or 
                                                                                                                                                                 ## null 
                                                                                                                                                                 ## if 
                                                                                                                                                                 ## there 
                                                                                                                                                                 ## are 
                                                                                                                                                                 ## no 
                                                                                                                                                                 ## more 
                                                                                                                                                                 ## results.
  var path_402657341 = newJObject()
  var query_402657342 = newJObject()
  add(path_402657341, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657342, "max-results", newJInt(maxResults))
  add(query_402657342, "MaxResults", newJString(MaxResults))
  add(query_402657342, "NextToken", newJString(NextToken))
  add(query_402657342, "next-token", newJString(nextToken))
  result = call_402657340.call(path_402657341, query_402657342, nil, nil, nil)

var listDashboards* = Call_ListDashboards_402657324(name: "listDashboards",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/dashboards",
    validator: validate_ListDashboards_402657325, base: "/",
    makeUrl: url_ListDashboards_402657326, schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListGroupMemberships_402657343 = ref object of OpenApiRestCall_402656044
proc url_ListGroupMemberships_402657345(protocol: Scheme; host: string;
                                        base: string; route: string;
                                        path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "GroupName" in path, "`GroupName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/groups/"),
                 (kind: VariableSegment, value: "GroupName"),
                 (kind: ConstantSegment, value: "/members")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListGroupMemberships_402657344(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists member users in a group.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                ## Namespace: JString (required)
                                                                                                                                                                                                ##            
                                                                                                                                                                                                ## : 
                                                                                                                                                                                                ## The 
                                                                                                                                                                                                ## namespace. 
                                                                                                                                                                                                ## Currently, 
                                                                                                                                                                                                ## you 
                                                                                                                                                                                                ## should 
                                                                                                                                                                                                ## set 
                                                                                                                                                                                                ## this 
                                                                                                                                                                                                ## to 
                                                                                                                                                                                                ## <code>default</code>.
  ##   
                                                                                                                                                                                                                        ## GroupName: JString (required)
                                                                                                                                                                                                                        ##            
                                                                                                                                                                                                                        ## : 
                                                                                                                                                                                                                        ## The 
                                                                                                                                                                                                                        ## name 
                                                                                                                                                                                                                        ## of 
                                                                                                                                                                                                                        ## the 
                                                                                                                                                                                                                        ## group 
                                                                                                                                                                                                                        ## that 
                                                                                                                                                                                                                        ## you 
                                                                                                                                                                                                                        ## want 
                                                                                                                                                                                                                        ## to 
                                                                                                                                                                                                                        ## see 
                                                                                                                                                                                                                        ## a 
                                                                                                                                                                                                                        ## membership 
                                                                                                                                                                                                                        ## list 
                                                                                                                                                                                                                        ## of.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657346 = path.getOrDefault("AwsAccountId")
  valid_402657346 = validateParameter(valid_402657346, JString, required = true,
                                      default = nil)
  if valid_402657346 != nil:
    section.add "AwsAccountId", valid_402657346
  var valid_402657347 = path.getOrDefault("Namespace")
  valid_402657347 = validateParameter(valid_402657347, JString, required = true,
                                      default = nil)
  if valid_402657347 != nil:
    section.add "Namespace", valid_402657347
  var valid_402657348 = path.getOrDefault("GroupName")
  valid_402657348 = validateParameter(valid_402657348, JString, required = true,
                                      default = nil)
  if valid_402657348 != nil:
    section.add "GroupName", valid_402657348
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to return from this request.
  ##   
                                                                                                              ## next-token: JString
                                                                                                              ##             
                                                                                                              ## : 
                                                                                                              ## A 
                                                                                                              ## pagination 
                                                                                                              ## token 
                                                                                                              ## that 
                                                                                                              ## can 
                                                                                                              ## be 
                                                                                                              ## used 
                                                                                                              ## in 
                                                                                                              ## a 
                                                                                                              ## subsequent 
                                                                                                              ## request.
  section = newJObject()
  var valid_402657349 = query.getOrDefault("max-results")
  valid_402657349 = validateParameter(valid_402657349, JInt, required = false,
                                      default = nil)
  if valid_402657349 != nil:
    section.add "max-results", valid_402657349
  var valid_402657350 = query.getOrDefault("next-token")
  valid_402657350 = validateParameter(valid_402657350, JString,
                                      required = false, default = nil)
  if valid_402657350 != nil:
    section.add "next-token", valid_402657350
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657351 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657351 = validateParameter(valid_402657351, JString,
                                      required = false, default = nil)
  if valid_402657351 != nil:
    section.add "X-Amz-Security-Token", valid_402657351
  var valid_402657352 = header.getOrDefault("X-Amz-Signature")
  valid_402657352 = validateParameter(valid_402657352, JString,
                                      required = false, default = nil)
  if valid_402657352 != nil:
    section.add "X-Amz-Signature", valid_402657352
  var valid_402657353 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657353 = validateParameter(valid_402657353, JString,
                                      required = false, default = nil)
  if valid_402657353 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657353
  var valid_402657354 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657354 = validateParameter(valid_402657354, JString,
                                      required = false, default = nil)
  if valid_402657354 != nil:
    section.add "X-Amz-Algorithm", valid_402657354
  var valid_402657355 = header.getOrDefault("X-Amz-Date")
  valid_402657355 = validateParameter(valid_402657355, JString,
                                      required = false, default = nil)
  if valid_402657355 != nil:
    section.add "X-Amz-Date", valid_402657355
  var valid_402657356 = header.getOrDefault("X-Amz-Credential")
  valid_402657356 = validateParameter(valid_402657356, JString,
                                      required = false, default = nil)
  if valid_402657356 != nil:
    section.add "X-Amz-Credential", valid_402657356
  var valid_402657357 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657357 = validateParameter(valid_402657357, JString,
                                      required = false, default = nil)
  if valid_402657357 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657357
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657358: Call_ListGroupMemberships_402657343;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists member users in a group.
                                                                                         ## 
  let valid = call_402657358.validator(path, query, header, formData, body, _)
  let scheme = call_402657358.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657358.makeUrl(scheme.get, call_402657358.host, call_402657358.base,
                                   call_402657358.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657358, uri, valid, _)

proc call*(call_402657359: Call_ListGroupMemberships_402657343;
           AwsAccountId: string; Namespace: string; GroupName: string;
           maxResults: int = 0; nextToken: string = ""): Recallable =
  ## listGroupMemberships
  ## Lists member users in a group.
  ##   AwsAccountId: string (required)
                                   ##               : The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                                  ## maxResults: int
                                                                                                                                                                                                  ##             
                                                                                                                                                                                                  ## : 
                                                                                                                                                                                                  ## The 
                                                                                                                                                                                                  ## maximum 
                                                                                                                                                                                                  ## number 
                                                                                                                                                                                                  ## of 
                                                                                                                                                                                                  ## results 
                                                                                                                                                                                                  ## to 
                                                                                                                                                                                                  ## return 
                                                                                                                                                                                                  ## from 
                                                                                                                                                                                                  ## this 
                                                                                                                                                                                                  ## request.
  ##   
                                                                                                                                                                                                             ## Namespace: string (required)
                                                                                                                                                                                                             ##            
                                                                                                                                                                                                             ## : 
                                                                                                                                                                                                             ## The 
                                                                                                                                                                                                             ## namespace. 
                                                                                                                                                                                                             ## Currently, 
                                                                                                                                                                                                             ## you 
                                                                                                                                                                                                             ## should 
                                                                                                                                                                                                             ## set 
                                                                                                                                                                                                             ## this 
                                                                                                                                                                                                             ## to 
                                                                                                                                                                                                             ## <code>default</code>.
  ##   
                                                                                                                                                                                                                                     ## GroupName: string (required)
                                                                                                                                                                                                                                     ##            
                                                                                                                                                                                                                                     ## : 
                                                                                                                                                                                                                                     ## The 
                                                                                                                                                                                                                                     ## name 
                                                                                                                                                                                                                                     ## of 
                                                                                                                                                                                                                                     ## the 
                                                                                                                                                                                                                                     ## group 
                                                                                                                                                                                                                                     ## that 
                                                                                                                                                                                                                                     ## you 
                                                                                                                                                                                                                                     ## want 
                                                                                                                                                                                                                                     ## to 
                                                                                                                                                                                                                                     ## see 
                                                                                                                                                                                                                                     ## a 
                                                                                                                                                                                                                                     ## membership 
                                                                                                                                                                                                                                     ## list 
                                                                                                                                                                                                                                     ## of.
  ##   
                                                                                                                                                                                                                                           ## nextToken: string
                                                                                                                                                                                                                                           ##            
                                                                                                                                                                                                                                           ## : 
                                                                                                                                                                                                                                           ## A 
                                                                                                                                                                                                                                           ## pagination 
                                                                                                                                                                                                                                           ## token 
                                                                                                                                                                                                                                           ## that 
                                                                                                                                                                                                                                           ## can 
                                                                                                                                                                                                                                           ## be 
                                                                                                                                                                                                                                           ## used 
                                                                                                                                                                                                                                           ## in 
                                                                                                                                                                                                                                           ## a 
                                                                                                                                                                                                                                           ## subsequent 
                                                                                                                                                                                                                                           ## request.
  var path_402657360 = newJObject()
  var query_402657361 = newJObject()
  add(path_402657360, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657361, "max-results", newJInt(maxResults))
  add(path_402657360, "Namespace", newJString(Namespace))
  add(path_402657360, "GroupName", newJString(GroupName))
  add(query_402657361, "next-token", newJString(nextToken))
  result = call_402657359.call(path_402657360, query_402657361, nil, nil, nil)

var listGroupMemberships* = Call_ListGroupMemberships_402657343(
    name: "listGroupMemberships", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members",
    validator: validate_ListGroupMemberships_402657344, base: "/",
    makeUrl: url_ListGroupMemberships_402657345,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListIAMPolicyAssignments_402657362 = ref object of OpenApiRestCall_402656044
proc url_ListIAMPolicyAssignments_402657364(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/iam-policy-assignments")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListIAMPolicyAssignments_402657363(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Lists IAM policy assignments in the current Amazon QuickSight account.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains these IAM policy assignments.
  ##   
                                                                                                                         ## Namespace: JString (required)
                                                                                                                         ##            
                                                                                                                         ## : 
                                                                                                                         ## The 
                                                                                                                         ## namespace 
                                                                                                                         ## for 
                                                                                                                         ## the 
                                                                                                                         ## assignments.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657365 = path.getOrDefault("AwsAccountId")
  valid_402657365 = validateParameter(valid_402657365, JString, required = true,
                                      default = nil)
  if valid_402657365 != nil:
    section.add "AwsAccountId", valid_402657365
  var valid_402657366 = path.getOrDefault("Namespace")
  valid_402657366 = validateParameter(valid_402657366, JString, required = true,
                                      default = nil)
  if valid_402657366 != nil:
    section.add "Namespace", valid_402657366
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## next-token: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## The 
                                                                                                             ## token 
                                                                                                             ## for 
                                                                                                             ## the 
                                                                                                             ## next 
                                                                                                             ## set 
                                                                                                             ## of 
                                                                                                             ## results, 
                                                                                                             ## or 
                                                                                                             ## null 
                                                                                                             ## if 
                                                                                                             ## there 
                                                                                                             ## are 
                                                                                                             ## no 
                                                                                                             ## more 
                                                                                                             ## results.
  section = newJObject()
  var valid_402657367 = query.getOrDefault("max-results")
  valid_402657367 = validateParameter(valid_402657367, JInt, required = false,
                                      default = nil)
  if valid_402657367 != nil:
    section.add "max-results", valid_402657367
  var valid_402657368 = query.getOrDefault("next-token")
  valid_402657368 = validateParameter(valid_402657368, JString,
                                      required = false, default = nil)
  if valid_402657368 != nil:
    section.add "next-token", valid_402657368
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657369 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657369 = validateParameter(valid_402657369, JString,
                                      required = false, default = nil)
  if valid_402657369 != nil:
    section.add "X-Amz-Security-Token", valid_402657369
  var valid_402657370 = header.getOrDefault("X-Amz-Signature")
  valid_402657370 = validateParameter(valid_402657370, JString,
                                      required = false, default = nil)
  if valid_402657370 != nil:
    section.add "X-Amz-Signature", valid_402657370
  var valid_402657371 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657371 = validateParameter(valid_402657371, JString,
                                      required = false, default = nil)
  if valid_402657371 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657371
  var valid_402657372 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657372 = validateParameter(valid_402657372, JString,
                                      required = false, default = nil)
  if valid_402657372 != nil:
    section.add "X-Amz-Algorithm", valid_402657372
  var valid_402657373 = header.getOrDefault("X-Amz-Date")
  valid_402657373 = validateParameter(valid_402657373, JString,
                                      required = false, default = nil)
  if valid_402657373 != nil:
    section.add "X-Amz-Date", valid_402657373
  var valid_402657374 = header.getOrDefault("X-Amz-Credential")
  valid_402657374 = validateParameter(valid_402657374, JString,
                                      required = false, default = nil)
  if valid_402657374 != nil:
    section.add "X-Amz-Credential", valid_402657374
  var valid_402657375 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657375 = validateParameter(valid_402657375, JString,
                                      required = false, default = nil)
  if valid_402657375 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657375
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657377: Call_ListIAMPolicyAssignments_402657362;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists IAM policy assignments in the current Amazon QuickSight account.
                                                                                         ## 
  let valid = call_402657377.validator(path, query, header, formData, body, _)
  let scheme = call_402657377.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657377.makeUrl(scheme.get, call_402657377.host, call_402657377.base,
                                   call_402657377.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657377, uri, valid, _)

proc call*(call_402657378: Call_ListIAMPolicyAssignments_402657362;
           AwsAccountId: string; body: JsonNode; Namespace: string;
           maxResults: int = 0; nextToken: string = ""): Recallable =
  ## listIAMPolicyAssignments
  ## Lists IAM policy assignments in the current Amazon QuickSight account.
  ##   
                                                                           ## AwsAccountId: string (required)
                                                                           ##               
                                                                           ## : 
                                                                           ## The 
                                                                           ## ID 
                                                                           ## of 
                                                                           ## the 
                                                                           ## AWS 
                                                                           ## account 
                                                                           ## that 
                                                                           ## contains 
                                                                           ## these 
                                                                           ## IAM 
                                                                           ## policy 
                                                                           ## assignments.
  ##   
                                                                                          ## maxResults: int
                                                                                          ##             
                                                                                          ## : 
                                                                                          ## The 
                                                                                          ## maximum 
                                                                                          ## number 
                                                                                          ## of 
                                                                                          ## results 
                                                                                          ## to 
                                                                                          ## be 
                                                                                          ## returned 
                                                                                          ## per 
                                                                                          ## request.
  ##   
                                                                                                     ## body: JObject (required)
  ##   
                                                                                                                                ## Namespace: string (required)
                                                                                                                                ##            
                                                                                                                                ## : 
                                                                                                                                ## The 
                                                                                                                                ## namespace 
                                                                                                                                ## for 
                                                                                                                                ## the 
                                                                                                                                ## assignments.
  ##   
                                                                                                                                               ## nextToken: string
                                                                                                                                               ##            
                                                                                                                                               ## : 
                                                                                                                                               ## The 
                                                                                                                                               ## token 
                                                                                                                                               ## for 
                                                                                                                                               ## the 
                                                                                                                                               ## next 
                                                                                                                                               ## set 
                                                                                                                                               ## of 
                                                                                                                                               ## results, 
                                                                                                                                               ## or 
                                                                                                                                               ## null 
                                                                                                                                               ## if 
                                                                                                                                               ## there 
                                                                                                                                               ## are 
                                                                                                                                               ## no 
                                                                                                                                               ## more 
                                                                                                                                               ## results.
  var path_402657379 = newJObject()
  var query_402657380 = newJObject()
  var body_402657381 = newJObject()
  add(path_402657379, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657380, "max-results", newJInt(maxResults))
  if body != nil:
    body_402657381 = body
  add(path_402657379, "Namespace", newJString(Namespace))
  add(query_402657380, "next-token", newJString(nextToken))
  result = call_402657378.call(path_402657379, query_402657380, nil, nil, body_402657381)

var listIAMPolicyAssignments* = Call_ListIAMPolicyAssignments_402657362(
    name: "listIAMPolicyAssignments", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments",
    validator: validate_ListIAMPolicyAssignments_402657363, base: "/",
    makeUrl: url_ListIAMPolicyAssignments_402657364,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListIAMPolicyAssignmentsForUser_402657382 = ref object of OpenApiRestCall_402656044
proc url_ListIAMPolicyAssignmentsForUser_402657384(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "UserName" in path, "`UserName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/users/"),
                 (kind: VariableSegment, value: "UserName"),
                 (kind: ConstantSegment, value: "/iam-policy-assignments")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListIAMPolicyAssignmentsForUser_402657383(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the assignments.
  ##   
                                                                                                            ## UserName: JString (required)
                                                                                                            ##           
                                                                                                            ## : 
                                                                                                            ## The 
                                                                                                            ## name 
                                                                                                            ## of 
                                                                                                            ## the 
                                                                                                            ## user.
  ##   
                                                                                                                    ## Namespace: JString (required)
                                                                                                                    ##            
                                                                                                                    ## : 
                                                                                                                    ## The 
                                                                                                                    ## namespace 
                                                                                                                    ## of 
                                                                                                                    ## the 
                                                                                                                    ## assignment.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657385 = path.getOrDefault("AwsAccountId")
  valid_402657385 = validateParameter(valid_402657385, JString, required = true,
                                      default = nil)
  if valid_402657385 != nil:
    section.add "AwsAccountId", valid_402657385
  var valid_402657386 = path.getOrDefault("UserName")
  valid_402657386 = validateParameter(valid_402657386, JString, required = true,
                                      default = nil)
  if valid_402657386 != nil:
    section.add "UserName", valid_402657386
  var valid_402657387 = path.getOrDefault("Namespace")
  valid_402657387 = validateParameter(valid_402657387, JString, required = true,
                                      default = nil)
  if valid_402657387 != nil:
    section.add "Namespace", valid_402657387
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## next-token: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## The 
                                                                                                             ## token 
                                                                                                             ## for 
                                                                                                             ## the 
                                                                                                             ## next 
                                                                                                             ## set 
                                                                                                             ## of 
                                                                                                             ## results, 
                                                                                                             ## or 
                                                                                                             ## null 
                                                                                                             ## if 
                                                                                                             ## there 
                                                                                                             ## are 
                                                                                                             ## no 
                                                                                                             ## more 
                                                                                                             ## results.
  section = newJObject()
  var valid_402657388 = query.getOrDefault("max-results")
  valid_402657388 = validateParameter(valid_402657388, JInt, required = false,
                                      default = nil)
  if valid_402657388 != nil:
    section.add "max-results", valid_402657388
  var valid_402657389 = query.getOrDefault("next-token")
  valid_402657389 = validateParameter(valid_402657389, JString,
                                      required = false, default = nil)
  if valid_402657389 != nil:
    section.add "next-token", valid_402657389
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657390 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657390 = validateParameter(valid_402657390, JString,
                                      required = false, default = nil)
  if valid_402657390 != nil:
    section.add "X-Amz-Security-Token", valid_402657390
  var valid_402657391 = header.getOrDefault("X-Amz-Signature")
  valid_402657391 = validateParameter(valid_402657391, JString,
                                      required = false, default = nil)
  if valid_402657391 != nil:
    section.add "X-Amz-Signature", valid_402657391
  var valid_402657392 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657392 = validateParameter(valid_402657392, JString,
                                      required = false, default = nil)
  if valid_402657392 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657392
  var valid_402657393 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657393 = validateParameter(valid_402657393, JString,
                                      required = false, default = nil)
  if valid_402657393 != nil:
    section.add "X-Amz-Algorithm", valid_402657393
  var valid_402657394 = header.getOrDefault("X-Amz-Date")
  valid_402657394 = validateParameter(valid_402657394, JString,
                                      required = false, default = nil)
  if valid_402657394 != nil:
    section.add "X-Amz-Date", valid_402657394
  var valid_402657395 = header.getOrDefault("X-Amz-Credential")
  valid_402657395 = validateParameter(valid_402657395, JString,
                                      required = false, default = nil)
  if valid_402657395 != nil:
    section.add "X-Amz-Credential", valid_402657395
  var valid_402657396 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657396 = validateParameter(valid_402657396, JString,
                                      required = false, default = nil)
  if valid_402657396 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657396
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657397: Call_ListIAMPolicyAssignmentsForUser_402657382;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.
                                                                                         ## 
  let valid = call_402657397.validator(path, query, header, formData, body, _)
  let scheme = call_402657397.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657397.makeUrl(scheme.get, call_402657397.host, call_402657397.base,
                                   call_402657397.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657397, uri, valid, _)

proc call*(call_402657398: Call_ListIAMPolicyAssignmentsForUser_402657382;
           AwsAccountId: string; UserName: string; Namespace: string;
           maxResults: int = 0; nextToken: string = ""): Recallable =
  ## listIAMPolicyAssignmentsForUser
  ## Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.
  ##   
                                                                                                                                                                                       ## AwsAccountId: string (required)
                                                                                                                                                                                       ##               
                                                                                                                                                                                       ## : 
                                                                                                                                                                                       ## The 
                                                                                                                                                                                       ## ID 
                                                                                                                                                                                       ## of 
                                                                                                                                                                                       ## the 
                                                                                                                                                                                       ## AWS 
                                                                                                                                                                                       ## account 
                                                                                                                                                                                       ## that 
                                                                                                                                                                                       ## contains 
                                                                                                                                                                                       ## the 
                                                                                                                                                                                       ## assignments.
  ##   
                                                                                                                                                                                                      ## maxResults: int
                                                                                                                                                                                                      ##             
                                                                                                                                                                                                      ## : 
                                                                                                                                                                                                      ## The 
                                                                                                                                                                                                      ## maximum 
                                                                                                                                                                                                      ## number 
                                                                                                                                                                                                      ## of 
                                                                                                                                                                                                      ## results 
                                                                                                                                                                                                      ## to 
                                                                                                                                                                                                      ## be 
                                                                                                                                                                                                      ## returned 
                                                                                                                                                                                                      ## per 
                                                                                                                                                                                                      ## request.
  ##   
                                                                                                                                                                                                                 ## UserName: string (required)
                                                                                                                                                                                                                 ##           
                                                                                                                                                                                                                 ## : 
                                                                                                                                                                                                                 ## The 
                                                                                                                                                                                                                 ## name 
                                                                                                                                                                                                                 ## of 
                                                                                                                                                                                                                 ## the 
                                                                                                                                                                                                                 ## user.
  ##   
                                                                                                                                                                                                                         ## Namespace: string (required)
                                                                                                                                                                                                                         ##            
                                                                                                                                                                                                                         ## : 
                                                                                                                                                                                                                         ## The 
                                                                                                                                                                                                                         ## namespace 
                                                                                                                                                                                                                         ## of 
                                                                                                                                                                                                                         ## the 
                                                                                                                                                                                                                         ## assignment.
  ##   
                                                                                                                                                                                                                                       ## nextToken: string
                                                                                                                                                                                                                                       ##            
                                                                                                                                                                                                                                       ## : 
                                                                                                                                                                                                                                       ## The 
                                                                                                                                                                                                                                       ## token 
                                                                                                                                                                                                                                       ## for 
                                                                                                                                                                                                                                       ## the 
                                                                                                                                                                                                                                       ## next 
                                                                                                                                                                                                                                       ## set 
                                                                                                                                                                                                                                       ## of 
                                                                                                                                                                                                                                       ## results, 
                                                                                                                                                                                                                                       ## or 
                                                                                                                                                                                                                                       ## null 
                                                                                                                                                                                                                                       ## if 
                                                                                                                                                                                                                                       ## there 
                                                                                                                                                                                                                                       ## are 
                                                                                                                                                                                                                                       ## no 
                                                                                                                                                                                                                                       ## more 
                                                                                                                                                                                                                                       ## results.
  var path_402657399 = newJObject()
  var query_402657400 = newJObject()
  add(path_402657399, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657400, "max-results", newJInt(maxResults))
  add(path_402657399, "UserName", newJString(UserName))
  add(path_402657399, "Namespace", newJString(Namespace))
  add(query_402657400, "next-token", newJString(nextToken))
  result = call_402657398.call(path_402657399, query_402657400, nil, nil, nil)

var listIAMPolicyAssignmentsForUser* = Call_ListIAMPolicyAssignmentsForUser_402657382(
    name: "listIAMPolicyAssignmentsForUser", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments",
    validator: validate_ListIAMPolicyAssignmentsForUser_402657383, base: "/",
    makeUrl: url_ListIAMPolicyAssignmentsForUser_402657384,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListIngestions_402657401 = ref object of OpenApiRestCall_402656044
proc url_ListIngestions_402657403(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DataSetId" in path, "`DataSetId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/data-sets/"),
                 (kind: VariableSegment, value: "DataSetId"),
                 (kind: ConstantSegment, value: "/ingestions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListIngestions_402657402(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists the history of SPICE ingestions for a dataset.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID.
  ##   
                                                                       ## DataSetId: JString (required)
                                                                       ##            
                                                                       ## : 
                                                                       ## The ID of the 
                                                                       ## dataset 
                                                                       ## used 
                                                                       ## in 
                                                                       ## the 
                                                                       ## ingestion.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657404 = path.getOrDefault("AwsAccountId")
  valid_402657404 = validateParameter(valid_402657404, JString, required = true,
                                      default = nil)
  if valid_402657404 != nil:
    section.add "AwsAccountId", valid_402657404
  var valid_402657405 = path.getOrDefault("DataSetId")
  valid_402657405 = validateParameter(valid_402657405, JString, required = true,
                                      default = nil)
  if valid_402657405 != nil:
    section.add "DataSetId", valid_402657405
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## MaxResults: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## Pagination 
                                                                                                             ## limit
  ##   
                                                                                                                     ## NextToken: JString
                                                                                                                     ##            
                                                                                                                     ## : 
                                                                                                                     ## Pagination 
                                                                                                                     ## token
  ##   
                                                                                                                             ## next-token: JString
                                                                                                                             ##             
                                                                                                                             ## : 
                                                                                                                             ## The 
                                                                                                                             ## token 
                                                                                                                             ## for 
                                                                                                                             ## the 
                                                                                                                             ## next 
                                                                                                                             ## set 
                                                                                                                             ## of 
                                                                                                                             ## results, 
                                                                                                                             ## or 
                                                                                                                             ## null 
                                                                                                                             ## if 
                                                                                                                             ## there 
                                                                                                                             ## are 
                                                                                                                             ## no 
                                                                                                                             ## more 
                                                                                                                             ## results.
  section = newJObject()
  var valid_402657406 = query.getOrDefault("max-results")
  valid_402657406 = validateParameter(valid_402657406, JInt, required = false,
                                      default = nil)
  if valid_402657406 != nil:
    section.add "max-results", valid_402657406
  var valid_402657407 = query.getOrDefault("MaxResults")
  valid_402657407 = validateParameter(valid_402657407, JString,
                                      required = false, default = nil)
  if valid_402657407 != nil:
    section.add "MaxResults", valid_402657407
  var valid_402657408 = query.getOrDefault("NextToken")
  valid_402657408 = validateParameter(valid_402657408, JString,
                                      required = false, default = nil)
  if valid_402657408 != nil:
    section.add "NextToken", valid_402657408
  var valid_402657409 = query.getOrDefault("next-token")
  valid_402657409 = validateParameter(valid_402657409, JString,
                                      required = false, default = nil)
  if valid_402657409 != nil:
    section.add "next-token", valid_402657409
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657410 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657410 = validateParameter(valid_402657410, JString,
                                      required = false, default = nil)
  if valid_402657410 != nil:
    section.add "X-Amz-Security-Token", valid_402657410
  var valid_402657411 = header.getOrDefault("X-Amz-Signature")
  valid_402657411 = validateParameter(valid_402657411, JString,
                                      required = false, default = nil)
  if valid_402657411 != nil:
    section.add "X-Amz-Signature", valid_402657411
  var valid_402657412 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657412 = validateParameter(valid_402657412, JString,
                                      required = false, default = nil)
  if valid_402657412 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657412
  var valid_402657413 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657413 = validateParameter(valid_402657413, JString,
                                      required = false, default = nil)
  if valid_402657413 != nil:
    section.add "X-Amz-Algorithm", valid_402657413
  var valid_402657414 = header.getOrDefault("X-Amz-Date")
  valid_402657414 = validateParameter(valid_402657414, JString,
                                      required = false, default = nil)
  if valid_402657414 != nil:
    section.add "X-Amz-Date", valid_402657414
  var valid_402657415 = header.getOrDefault("X-Amz-Credential")
  valid_402657415 = validateParameter(valid_402657415, JString,
                                      required = false, default = nil)
  if valid_402657415 != nil:
    section.add "X-Amz-Credential", valid_402657415
  var valid_402657416 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657416 = validateParameter(valid_402657416, JString,
                                      required = false, default = nil)
  if valid_402657416 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657416
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657417: Call_ListIngestions_402657401; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists the history of SPICE ingestions for a dataset.
                                                                                         ## 
  let valid = call_402657417.validator(path, query, header, formData, body, _)
  let scheme = call_402657417.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657417.makeUrl(scheme.get, call_402657417.host, call_402657417.base,
                                   call_402657417.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657417, uri, valid, _)

proc call*(call_402657418: Call_ListIngestions_402657401; AwsAccountId: string;
           DataSetId: string; maxResults: int = 0; MaxResults: string = "";
           NextToken: string = ""; nextToken: string = ""): Recallable =
  ## listIngestions
  ## Lists the history of SPICE ingestions for a dataset.
  ##   AwsAccountId: string (required)
                                                         ##               : The AWS account ID.
  ##   
                                                                                               ## maxResults: int
                                                                                               ##             
                                                                                               ## : 
                                                                                               ## The 
                                                                                               ## maximum 
                                                                                               ## number 
                                                                                               ## of 
                                                                                               ## results 
                                                                                               ## to 
                                                                                               ## be 
                                                                                               ## returned 
                                                                                               ## per 
                                                                                               ## request.
  ##   
                                                                                                          ## MaxResults: string
                                                                                                          ##             
                                                                                                          ## : 
                                                                                                          ## Pagination 
                                                                                                          ## limit
  ##   
                                                                                                                  ## DataSetId: string (required)
                                                                                                                  ##            
                                                                                                                  ## : 
                                                                                                                  ## The 
                                                                                                                  ## ID 
                                                                                                                  ## of 
                                                                                                                  ## the 
                                                                                                                  ## dataset 
                                                                                                                  ## used 
                                                                                                                  ## in 
                                                                                                                  ## the 
                                                                                                                  ## ingestion.
  ##   
                                                                                                                               ## NextToken: string
                                                                                                                               ##            
                                                                                                                               ## : 
                                                                                                                               ## Pagination 
                                                                                                                               ## token
  ##   
                                                                                                                                       ## nextToken: string
                                                                                                                                       ##            
                                                                                                                                       ## : 
                                                                                                                                       ## The 
                                                                                                                                       ## token 
                                                                                                                                       ## for 
                                                                                                                                       ## the 
                                                                                                                                       ## next 
                                                                                                                                       ## set 
                                                                                                                                       ## of 
                                                                                                                                       ## results, 
                                                                                                                                       ## or 
                                                                                                                                       ## null 
                                                                                                                                       ## if 
                                                                                                                                       ## there 
                                                                                                                                       ## are 
                                                                                                                                       ## no 
                                                                                                                                       ## more 
                                                                                                                                       ## results.
  var path_402657419 = newJObject()
  var query_402657420 = newJObject()
  add(path_402657419, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657420, "max-results", newJInt(maxResults))
  add(query_402657420, "MaxResults", newJString(MaxResults))
  add(path_402657419, "DataSetId", newJString(DataSetId))
  add(query_402657420, "NextToken", newJString(NextToken))
  add(query_402657420, "next-token", newJString(nextToken))
  result = call_402657418.call(path_402657419, query_402657420, nil, nil, nil)

var listIngestions* = Call_ListIngestions_402657401(name: "listIngestions",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions",
    validator: validate_ListIngestions_402657402, base: "/",
    makeUrl: url_ListIngestions_402657403, schemes: {Scheme.Https, Scheme.Http})
type
  Call_TagResource_402657435 = ref object of OpenApiRestCall_402656044
proc url_TagResource_402657437(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "ResourceArn" in path, "`ResourceArn` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/resources/"),
                 (kind: VariableSegment, value: "ResourceArn"),
                 (kind: ConstantSegment, value: "/tags")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_TagResource_402657436(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Assigns one or more tags (key-value pairs) to the specified QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for QuickSight works in a similar way to tagging for other AWS services, except for the following:</p> <ul> <li> <p>You can't use tags to track AWS costs for QuickSight. This restriction is because QuickSight costs are based on users and SPICE capacity, which aren't taggable resources.</p> </li> <li> <p>QuickSight doesn't currently support the Tag Editor for AWS Resource Groups.</p> </li> </ul>
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   ResourceArn: JString (required)
                                 ##              : The Amazon Resource Name (ARN) of the resource that you want to tag.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `ResourceArn` field"
  var valid_402657438 = path.getOrDefault("ResourceArn")
  valid_402657438 = validateParameter(valid_402657438, JString, required = true,
                                      default = nil)
  if valid_402657438 != nil:
    section.add "ResourceArn", valid_402657438
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657439 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657439 = validateParameter(valid_402657439, JString,
                                      required = false, default = nil)
  if valid_402657439 != nil:
    section.add "X-Amz-Security-Token", valid_402657439
  var valid_402657440 = header.getOrDefault("X-Amz-Signature")
  valid_402657440 = validateParameter(valid_402657440, JString,
                                      required = false, default = nil)
  if valid_402657440 != nil:
    section.add "X-Amz-Signature", valid_402657440
  var valid_402657441 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657441 = validateParameter(valid_402657441, JString,
                                      required = false, default = nil)
  if valid_402657441 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657441
  var valid_402657442 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657442 = validateParameter(valid_402657442, JString,
                                      required = false, default = nil)
  if valid_402657442 != nil:
    section.add "X-Amz-Algorithm", valid_402657442
  var valid_402657443 = header.getOrDefault("X-Amz-Date")
  valid_402657443 = validateParameter(valid_402657443, JString,
                                      required = false, default = nil)
  if valid_402657443 != nil:
    section.add "X-Amz-Date", valid_402657443
  var valid_402657444 = header.getOrDefault("X-Amz-Credential")
  valid_402657444 = validateParameter(valid_402657444, JString,
                                      required = false, default = nil)
  if valid_402657444 != nil:
    section.add "X-Amz-Credential", valid_402657444
  var valid_402657445 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657445 = validateParameter(valid_402657445, JString,
                                      required = false, default = nil)
  if valid_402657445 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657445
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657447: Call_TagResource_402657435; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Assigns one or more tags (key-value pairs) to the specified QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for QuickSight works in a similar way to tagging for other AWS services, except for the following:</p> <ul> <li> <p>You can't use tags to track AWS costs for QuickSight. This restriction is because QuickSight costs are based on users and SPICE capacity, which aren't taggable resources.</p> </li> <li> <p>QuickSight doesn't currently support the Tag Editor for AWS Resource Groups.</p> </li> </ul>
                                                                                         ## 
  let valid = call_402657447.validator(path, query, header, formData, body, _)
  let scheme = call_402657447.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657447.makeUrl(scheme.get, call_402657447.host, call_402657447.base,
                                   call_402657447.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657447, uri, valid, _)

proc call*(call_402657448: Call_TagResource_402657435; body: JsonNode;
           ResourceArn: string): Recallable =
  ## tagResource
  ## <p>Assigns one or more tags (key-value pairs) to the specified QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for QuickSight works in a similar way to tagging for other AWS services, except for the following:</p> <ul> <li> <p>You can't use tags to track AWS costs for QuickSight. This restriction is because QuickSight costs are based on users and SPICE capacity, which aren't taggable resources.</p> </li> <li> <p>QuickSight doesn't currently support the Tag Editor for AWS Resource Groups.</p> </li> </ul>
  ##   
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ## body: JObject (required)
  ##   
esourceArn: string (required)


he 
mazon 
esource 
ame 

of 
the 
resource 
that 
you 
want 
to 
tag.
  var path_402657449 = newJObject()
  var body_402657450 = newJObject()
  if body != nil:
    body_402657450 = body
  add(path_402657449, "ResourceArn", newJString(ResourceArn))
  result = call_402657448.call(path_402657449, nil, nil, nil, body_402657450)

var tagResource* = Call_TagResource_402657435(name: "tagResource",
    meth: HttpMethod.HttpPost, host: "quicksight.amazonaws.com",
    route: "/resources/{ResourceArn}/tags", validator: validate_TagResource_402657436,
    base: "/", makeUrl: url_TagResource_402657437,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListTagsForResource_402657421 = ref object of OpenApiRestCall_402656044
proc url_ListTagsForResource_402657423(protocol: Scheme; host: string;
                                       base: string; route: string;
                                       path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "ResourceArn" in path, "`ResourceArn` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/resources/"),
                 (kind: VariableSegment, value: "ResourceArn"),
                 (kind: ConstantSegment, value: "/tags")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListTagsForResource_402657422(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists the tags assigned to a resource.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   ResourceArn: JString (required)
                                 ##              : The Amazon Resource Name (ARN) of the resource that you want a list of tags for.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `ResourceArn` field"
  var valid_402657424 = path.getOrDefault("ResourceArn")
  valid_402657424 = validateParameter(valid_402657424, JString, required = true,
                                      default = nil)
  if valid_402657424 != nil:
    section.add "ResourceArn", valid_402657424
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657425 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657425 = validateParameter(valid_402657425, JString,
                                      required = false, default = nil)
  if valid_402657425 != nil:
    section.add "X-Amz-Security-Token", valid_402657425
  var valid_402657426 = header.getOrDefault("X-Amz-Signature")
  valid_402657426 = validateParameter(valid_402657426, JString,
                                      required = false, default = nil)
  if valid_402657426 != nil:
    section.add "X-Amz-Signature", valid_402657426
  var valid_402657427 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657427 = validateParameter(valid_402657427, JString,
                                      required = false, default = nil)
  if valid_402657427 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657427
  var valid_402657428 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657428 = validateParameter(valid_402657428, JString,
                                      required = false, default = nil)
  if valid_402657428 != nil:
    section.add "X-Amz-Algorithm", valid_402657428
  var valid_402657429 = header.getOrDefault("X-Amz-Date")
  valid_402657429 = validateParameter(valid_402657429, JString,
                                      required = false, default = nil)
  if valid_402657429 != nil:
    section.add "X-Amz-Date", valid_402657429
  var valid_402657430 = header.getOrDefault("X-Amz-Credential")
  valid_402657430 = validateParameter(valid_402657430, JString,
                                      required = false, default = nil)
  if valid_402657430 != nil:
    section.add "X-Amz-Credential", valid_402657430
  var valid_402657431 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657431 = validateParameter(valid_402657431, JString,
                                      required = false, default = nil)
  if valid_402657431 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657431
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657432: Call_ListTagsForResource_402657421;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists the tags assigned to a resource.
                                                                                         ## 
  let valid = call_402657432.validator(path, query, header, formData, body, _)
  let scheme = call_402657432.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657432.makeUrl(scheme.get, call_402657432.host, call_402657432.base,
                                   call_402657432.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657432, uri, valid, _)

proc call*(call_402657433: Call_ListTagsForResource_402657421;
           ResourceArn: string): Recallable =
  ## listTagsForResource
  ## Lists the tags assigned to a resource.
  ##   ResourceArn: string (required)
                                           ##              : The Amazon Resource Name (ARN) of the resource that you want a list of tags for.
  var path_402657434 = newJObject()
  add(path_402657434, "ResourceArn", newJString(ResourceArn))
  result = call_402657433.call(path_402657434, nil, nil, nil, nil)

var listTagsForResource* = Call_ListTagsForResource_402657421(
    name: "listTagsForResource", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com", route: "/resources/{ResourceArn}/tags",
    validator: validate_ListTagsForResource_402657422, base: "/",
    makeUrl: url_ListTagsForResource_402657423,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListTemplateAliases_402657451 = ref object of OpenApiRestCall_402656044
proc url_ListTemplateAliases_402657453(protocol: Scheme; host: string;
                                       base: string; route: string;
                                       path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/aliases")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListTemplateAliases_402657452(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists all the aliases of a template.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the template aliases that you're listing.
  ##   
                                                                                                                                     ## TemplateId: JString (required)
                                                                                                                                     ##             
                                                                                                                                     ## : 
                                                                                                                                     ## The 
                                                                                                                                     ## ID 
                                                                                                                                     ## for 
                                                                                                                                     ## the 
                                                                                                                                     ## template.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657454 = path.getOrDefault("AwsAccountId")
  valid_402657454 = validateParameter(valid_402657454, JString, required = true,
                                      default = nil)
  if valid_402657454 != nil:
    section.add "AwsAccountId", valid_402657454
  var valid_402657455 = path.getOrDefault("TemplateId")
  valid_402657455 = validateParameter(valid_402657455, JString, required = true,
                                      default = nil)
  if valid_402657455 != nil:
    section.add "TemplateId", valid_402657455
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JString
                                  ##             : Pagination limit
  ##   max-result: JInt
                                                                   ##             : The maximum number of results to be returned per request.
  ##   
                                                                                                                                             ## NextToken: JString
                                                                                                                                             ##            
                                                                                                                                             ## : 
                                                                                                                                             ## Pagination 
                                                                                                                                             ## token
  ##   
                                                                                                                                                     ## next-token: JString
                                                                                                                                                     ##             
                                                                                                                                                     ## : 
                                                                                                                                                     ## The 
                                                                                                                                                     ## token 
                                                                                                                                                     ## for 
                                                                                                                                                     ## the 
                                                                                                                                                     ## next 
                                                                                                                                                     ## set 
                                                                                                                                                     ## of 
                                                                                                                                                     ## results, 
                                                                                                                                                     ## or 
                                                                                                                                                     ## null 
                                                                                                                                                     ## if 
                                                                                                                                                     ## there 
                                                                                                                                                     ## are 
                                                                                                                                                     ## no 
                                                                                                                                                     ## more 
                                                                                                                                                     ## results.
  section = newJObject()
  var valid_402657456 = query.getOrDefault("MaxResults")
  valid_402657456 = validateParameter(valid_402657456, JString,
                                      required = false, default = nil)
  if valid_402657456 != nil:
    section.add "MaxResults", valid_402657456
  var valid_402657457 = query.getOrDefault("max-result")
  valid_402657457 = validateParameter(valid_402657457, JInt, required = false,
                                      default = nil)
  if valid_402657457 != nil:
    section.add "max-result", valid_402657457
  var valid_402657458 = query.getOrDefault("NextToken")
  valid_402657458 = validateParameter(valid_402657458, JString,
                                      required = false, default = nil)
  if valid_402657458 != nil:
    section.add "NextToken", valid_402657458
  var valid_402657459 = query.getOrDefault("next-token")
  valid_402657459 = validateParameter(valid_402657459, JString,
                                      required = false, default = nil)
  if valid_402657459 != nil:
    section.add "next-token", valid_402657459
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657460 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657460 = validateParameter(valid_402657460, JString,
                                      required = false, default = nil)
  if valid_402657460 != nil:
    section.add "X-Amz-Security-Token", valid_402657460
  var valid_402657461 = header.getOrDefault("X-Amz-Signature")
  valid_402657461 = validateParameter(valid_402657461, JString,
                                      required = false, default = nil)
  if valid_402657461 != nil:
    section.add "X-Amz-Signature", valid_402657461
  var valid_402657462 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657462 = validateParameter(valid_402657462, JString,
                                      required = false, default = nil)
  if valid_402657462 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657462
  var valid_402657463 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657463 = validateParameter(valid_402657463, JString,
                                      required = false, default = nil)
  if valid_402657463 != nil:
    section.add "X-Amz-Algorithm", valid_402657463
  var valid_402657464 = header.getOrDefault("X-Amz-Date")
  valid_402657464 = validateParameter(valid_402657464, JString,
                                      required = false, default = nil)
  if valid_402657464 != nil:
    section.add "X-Amz-Date", valid_402657464
  var valid_402657465 = header.getOrDefault("X-Amz-Credential")
  valid_402657465 = validateParameter(valid_402657465, JString,
                                      required = false, default = nil)
  if valid_402657465 != nil:
    section.add "X-Amz-Credential", valid_402657465
  var valid_402657466 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657466 = validateParameter(valid_402657466, JString,
                                      required = false, default = nil)
  if valid_402657466 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657466
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657467: Call_ListTemplateAliases_402657451;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists all the aliases of a template.
                                                                                         ## 
  let valid = call_402657467.validator(path, query, header, formData, body, _)
  let scheme = call_402657467.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657467.makeUrl(scheme.get, call_402657467.host, call_402657467.base,
                                   call_402657467.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657467, uri, valid, _)

proc call*(call_402657468: Call_ListTemplateAliases_402657451;
           AwsAccountId: string; TemplateId: string; MaxResults: string = "";
           maxResult: int = 0; NextToken: string = ""; nextToken: string = ""): Recallable =
  ## listTemplateAliases
  ## Lists all the aliases of a template.
  ##   AwsAccountId: string (required)
                                         ##               : The ID of the AWS account that contains the template aliases that you're listing.
  ##   
                                                                                                                                             ## MaxResults: string
                                                                                                                                             ##             
                                                                                                                                             ## : 
                                                                                                                                             ## Pagination 
                                                                                                                                             ## limit
  ##   
                                                                                                                                                     ## TemplateId: string (required)
                                                                                                                                                     ##             
                                                                                                                                                     ## : 
                                                                                                                                                     ## The 
                                                                                                                                                     ## ID 
                                                                                                                                                     ## for 
                                                                                                                                                     ## the 
                                                                                                                                                     ## template.
  ##   
                                                                                                                                                                 ## maxResult: int
                                                                                                                                                                 ##            
                                                                                                                                                                 ## : 
                                                                                                                                                                 ## The 
                                                                                                                                                                 ## maximum 
                                                                                                                                                                 ## number 
                                                                                                                                                                 ## of 
                                                                                                                                                                 ## results 
                                                                                                                                                                 ## to 
                                                                                                                                                                 ## be 
                                                                                                                                                                 ## returned 
                                                                                                                                                                 ## per 
                                                                                                                                                                 ## request.
  ##   
                                                                                                                                                                            ## NextToken: string
                                                                                                                                                                            ##            
                                                                                                                                                                            ## : 
                                                                                                                                                                            ## Pagination 
                                                                                                                                                                            ## token
  ##   
                                                                                                                                                                                    ## nextToken: string
                                                                                                                                                                                    ##            
                                                                                                                                                                                    ## : 
                                                                                                                                                                                    ## The 
                                                                                                                                                                                    ## token 
                                                                                                                                                                                    ## for 
                                                                                                                                                                                    ## the 
                                                                                                                                                                                    ## next 
                                                                                                                                                                                    ## set 
                                                                                                                                                                                    ## of 
                                                                                                                                                                                    ## results, 
                                                                                                                                                                                    ## or 
                                                                                                                                                                                    ## null 
                                                                                                                                                                                    ## if 
                                                                                                                                                                                    ## there 
                                                                                                                                                                                    ## are 
                                                                                                                                                                                    ## no 
                                                                                                                                                                                    ## more 
                                                                                                                                                                                    ## results.
  var path_402657469 = newJObject()
  var query_402657470 = newJObject()
  add(path_402657469, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657470, "MaxResults", newJString(MaxResults))
  add(path_402657469, "TemplateId", newJString(TemplateId))
  add(query_402657470, "max-result", newJInt(maxResult))
  add(query_402657470, "NextToken", newJString(NextToken))
  add(query_402657470, "next-token", newJString(nextToken))
  result = call_402657468.call(path_402657469, query_402657470, nil, nil, nil)

var listTemplateAliases* = Call_ListTemplateAliases_402657451(
    name: "listTemplateAliases", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases",
    validator: validate_ListTemplateAliases_402657452, base: "/",
    makeUrl: url_ListTemplateAliases_402657453,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListTemplateVersions_402657471 = ref object of OpenApiRestCall_402656044
proc url_ListTemplateVersions_402657473(protocol: Scheme; host: string;
                                        base: string; route: string;
                                        path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "TemplateId" in path, "`TemplateId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates/"),
                 (kind: VariableSegment, value: "TemplateId"),
                 (kind: ConstantSegment, value: "/versions")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListTemplateVersions_402657472(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists all the versions of the templates in the current Amazon QuickSight account.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the templates that you're listing.
  ##   
                                                                                                                              ## TemplateId: JString (required)
                                                                                                                              ##             
                                                                                                                              ## : 
                                                                                                                              ## The 
                                                                                                                              ## ID 
                                                                                                                              ## for 
                                                                                                                              ## the 
                                                                                                                              ## template.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657474 = path.getOrDefault("AwsAccountId")
  valid_402657474 = validateParameter(valid_402657474, JString, required = true,
                                      default = nil)
  if valid_402657474 != nil:
    section.add "AwsAccountId", valid_402657474
  var valid_402657475 = path.getOrDefault("TemplateId")
  valid_402657475 = validateParameter(valid_402657475, JString, required = true,
                                      default = nil)
  if valid_402657475 != nil:
    section.add "TemplateId", valid_402657475
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to be returned per request.
  ##   
                                                                                                             ## MaxResults: JString
                                                                                                             ##             
                                                                                                             ## : 
                                                                                                             ## Pagination 
                                                                                                             ## limit
  ##   
                                                                                                                     ## NextToken: JString
                                                                                                                     ##            
                                                                                                                     ## : 
                                                                                                                     ## Pagination 
                                                                                                                     ## token
  ##   
                                                                                                                             ## next-token: JString
                                                                                                                             ##             
                                                                                                                             ## : 
                                                                                                                             ## The 
                                                                                                                             ## token 
                                                                                                                             ## for 
                                                                                                                             ## the 
                                                                                                                             ## next 
                                                                                                                             ## set 
                                                                                                                             ## of 
                                                                                                                             ## results, 
                                                                                                                             ## or 
                                                                                                                             ## null 
                                                                                                                             ## if 
                                                                                                                             ## there 
                                                                                                                             ## are 
                                                                                                                             ## no 
                                                                                                                             ## more 
                                                                                                                             ## results.
  section = newJObject()
  var valid_402657476 = query.getOrDefault("max-results")
  valid_402657476 = validateParameter(valid_402657476, JInt, required = false,
                                      default = nil)
  if valid_402657476 != nil:
    section.add "max-results", valid_402657476
  var valid_402657477 = query.getOrDefault("MaxResults")
  valid_402657477 = validateParameter(valid_402657477, JString,
                                      required = false, default = nil)
  if valid_402657477 != nil:
    section.add "MaxResults", valid_402657477
  var valid_402657478 = query.getOrDefault("NextToken")
  valid_402657478 = validateParameter(valid_402657478, JString,
                                      required = false, default = nil)
  if valid_402657478 != nil:
    section.add "NextToken", valid_402657478
  var valid_402657479 = query.getOrDefault("next-token")
  valid_402657479 = validateParameter(valid_402657479, JString,
                                      required = false, default = nil)
  if valid_402657479 != nil:
    section.add "next-token", valid_402657479
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657480 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657480 = validateParameter(valid_402657480, JString,
                                      required = false, default = nil)
  if valid_402657480 != nil:
    section.add "X-Amz-Security-Token", valid_402657480
  var valid_402657481 = header.getOrDefault("X-Amz-Signature")
  valid_402657481 = validateParameter(valid_402657481, JString,
                                      required = false, default = nil)
  if valid_402657481 != nil:
    section.add "X-Amz-Signature", valid_402657481
  var valid_402657482 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657482 = validateParameter(valid_402657482, JString,
                                      required = false, default = nil)
  if valid_402657482 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657482
  var valid_402657483 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657483 = validateParameter(valid_402657483, JString,
                                      required = false, default = nil)
  if valid_402657483 != nil:
    section.add "X-Amz-Algorithm", valid_402657483
  var valid_402657484 = header.getOrDefault("X-Amz-Date")
  valid_402657484 = validateParameter(valid_402657484, JString,
                                      required = false, default = nil)
  if valid_402657484 != nil:
    section.add "X-Amz-Date", valid_402657484
  var valid_402657485 = header.getOrDefault("X-Amz-Credential")
  valid_402657485 = validateParameter(valid_402657485, JString,
                                      required = false, default = nil)
  if valid_402657485 != nil:
    section.add "X-Amz-Credential", valid_402657485
  var valid_402657486 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657486 = validateParameter(valid_402657486, JString,
                                      required = false, default = nil)
  if valid_402657486 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657486
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657487: Call_ListTemplateVersions_402657471;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists all the versions of the templates in the current Amazon QuickSight account.
                                                                                         ## 
  let valid = call_402657487.validator(path, query, header, formData, body, _)
  let scheme = call_402657487.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657487.makeUrl(scheme.get, call_402657487.host, call_402657487.base,
                                   call_402657487.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657487, uri, valid, _)

proc call*(call_402657488: Call_ListTemplateVersions_402657471;
           AwsAccountId: string; TemplateId: string; maxResults: int = 0;
           MaxResults: string = ""; NextToken: string = "";
           nextToken: string = ""): Recallable =
  ## listTemplateVersions
  ## Lists all the versions of the templates in the current Amazon QuickSight account.
  ##   
                                                                                      ## AwsAccountId: string (required)
                                                                                      ##               
                                                                                      ## : 
                                                                                      ## The 
                                                                                      ## ID 
                                                                                      ## of 
                                                                                      ## the 
                                                                                      ## AWS 
                                                                                      ## account 
                                                                                      ## that 
                                                                                      ## contains 
                                                                                      ## the 
                                                                                      ## templates 
                                                                                      ## that 
                                                                                      ## you're 
                                                                                      ## listing.
  ##   
                                                                                                 ## maxResults: int
                                                                                                 ##             
                                                                                                 ## : 
                                                                                                 ## The 
                                                                                                 ## maximum 
                                                                                                 ## number 
                                                                                                 ## of 
                                                                                                 ## results 
                                                                                                 ## to 
                                                                                                 ## be 
                                                                                                 ## returned 
                                                                                                 ## per 
                                                                                                 ## request.
  ##   
                                                                                                            ## MaxResults: string
                                                                                                            ##             
                                                                                                            ## : 
                                                                                                            ## Pagination 
                                                                                                            ## limit
  ##   
                                                                                                                    ## TemplateId: string (required)
                                                                                                                    ##             
                                                                                                                    ## : 
                                                                                                                    ## The 
                                                                                                                    ## ID 
                                                                                                                    ## for 
                                                                                                                    ## the 
                                                                                                                    ## template.
  ##   
                                                                                                                                ## NextToken: string
                                                                                                                                ##            
                                                                                                                                ## : 
                                                                                                                                ## Pagination 
                                                                                                                                ## token
  ##   
                                                                                                                                        ## nextToken: string
                                                                                                                                        ##            
                                                                                                                                        ## : 
                                                                                                                                        ## The 
                                                                                                                                        ## token 
                                                                                                                                        ## for 
                                                                                                                                        ## the 
                                                                                                                                        ## next 
                                                                                                                                        ## set 
                                                                                                                                        ## of 
                                                                                                                                        ## results, 
                                                                                                                                        ## or 
                                                                                                                                        ## null 
                                                                                                                                        ## if 
                                                                                                                                        ## there 
                                                                                                                                        ## are 
                                                                                                                                        ## no 
                                                                                                                                        ## more 
                                                                                                                                        ## results.
  var path_402657489 = newJObject()
  var query_402657490 = newJObject()
  add(path_402657489, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657490, "max-results", newJInt(maxResults))
  add(query_402657490, "MaxResults", newJString(MaxResults))
  add(path_402657489, "TemplateId", newJString(TemplateId))
  add(query_402657490, "NextToken", newJString(NextToken))
  add(query_402657490, "next-token", newJString(nextToken))
  result = call_402657488.call(path_402657489, query_402657490, nil, nil, nil)

var listTemplateVersions* = Call_ListTemplateVersions_402657471(
    name: "listTemplateVersions", meth: HttpMethod.HttpGet,
    host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates/{TemplateId}/versions",
    validator: validate_ListTemplateVersions_402657472, base: "/",
    makeUrl: url_ListTemplateVersions_402657473,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListTemplates_402657491 = ref object of OpenApiRestCall_402656044
proc url_ListTemplates_402657493(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/templates")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListTemplates_402657492(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists all the templates in the current Amazon QuickSight account.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID of the AWS account that contains the templates that you're listing.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657494 = path.getOrDefault("AwsAccountId")
  valid_402657494 = validateParameter(valid_402657494, JString, required = true,
                                      default = nil)
  if valid_402657494 != nil:
    section.add "AwsAccountId", valid_402657494
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JString
                                  ##             : Pagination limit
  ##   max-result: JInt
                                                                   ##             : The maximum number of results to be returned per request.
  ##   
                                                                                                                                             ## NextToken: JString
                                                                                                                                             ##            
                                                                                                                                             ## : 
                                                                                                                                             ## Pagination 
                                                                                                                                             ## token
  ##   
                                                                                                                                                     ## next-token: JString
                                                                                                                                                     ##             
                                                                                                                                                     ## : 
                                                                                                                                                     ## The 
                                                                                                                                                     ## token 
                                                                                                                                                     ## for 
                                                                                                                                                     ## the 
                                                                                                                                                     ## next 
                                                                                                                                                     ## set 
                                                                                                                                                     ## of 
                                                                                                                                                     ## results, 
                                                                                                                                                     ## or 
                                                                                                                                                     ## null 
                                                                                                                                                     ## if 
                                                                                                                                                     ## there 
                                                                                                                                                     ## are 
                                                                                                                                                     ## no 
                                                                                                                                                     ## more 
                                                                                                                                                     ## results.
  section = newJObject()
  var valid_402657495 = query.getOrDefault("MaxResults")
  valid_402657495 = validateParameter(valid_402657495, JString,
                                      required = false, default = nil)
  if valid_402657495 != nil:
    section.add "MaxResults", valid_402657495
  var valid_402657496 = query.getOrDefault("max-result")
  valid_402657496 = validateParameter(valid_402657496, JInt, required = false,
                                      default = nil)
  if valid_402657496 != nil:
    section.add "max-result", valid_402657496
  var valid_402657497 = query.getOrDefault("NextToken")
  valid_402657497 = validateParameter(valid_402657497, JString,
                                      required = false, default = nil)
  if valid_402657497 != nil:
    section.add "NextToken", valid_402657497
  var valid_402657498 = query.getOrDefault("next-token")
  valid_402657498 = validateParameter(valid_402657498, JString,
                                      required = false, default = nil)
  if valid_402657498 != nil:
    section.add "next-token", valid_402657498
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657499 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657499 = validateParameter(valid_402657499, JString,
                                      required = false, default = nil)
  if valid_402657499 != nil:
    section.add "X-Amz-Security-Token", valid_402657499
  var valid_402657500 = header.getOrDefault("X-Amz-Signature")
  valid_402657500 = validateParameter(valid_402657500, JString,
                                      required = false, default = nil)
  if valid_402657500 != nil:
    section.add "X-Amz-Signature", valid_402657500
  var valid_402657501 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657501 = validateParameter(valid_402657501, JString,
                                      required = false, default = nil)
  if valid_402657501 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657501
  var valid_402657502 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657502 = validateParameter(valid_402657502, JString,
                                      required = false, default = nil)
  if valid_402657502 != nil:
    section.add "X-Amz-Algorithm", valid_402657502
  var valid_402657503 = header.getOrDefault("X-Amz-Date")
  valid_402657503 = validateParameter(valid_402657503, JString,
                                      required = false, default = nil)
  if valid_402657503 != nil:
    section.add "X-Amz-Date", valid_402657503
  var valid_402657504 = header.getOrDefault("X-Amz-Credential")
  valid_402657504 = validateParameter(valid_402657504, JString,
                                      required = false, default = nil)
  if valid_402657504 != nil:
    section.add "X-Amz-Credential", valid_402657504
  var valid_402657505 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657505 = validateParameter(valid_402657505, JString,
                                      required = false, default = nil)
  if valid_402657505 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657505
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657506: Call_ListTemplates_402657491; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists all the templates in the current Amazon QuickSight account.
                                                                                         ## 
  let valid = call_402657506.validator(path, query, header, formData, body, _)
  let scheme = call_402657506.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657506.makeUrl(scheme.get, call_402657506.host, call_402657506.base,
                                   call_402657506.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657506, uri, valid, _)

proc call*(call_402657507: Call_ListTemplates_402657491; AwsAccountId: string;
           MaxResults: string = ""; maxResult: int = 0; NextToken: string = "";
           nextToken: string = ""): Recallable =
  ## listTemplates
  ## Lists all the templates in the current Amazon QuickSight account.
  ##   
                                                                      ## AwsAccountId: string (required)
                                                                      ##               
                                                                      ## : 
                                                                      ## The ID of the AWS 
                                                                      ## account 
                                                                      ## that 
                                                                      ## contains 
                                                                      ## the 
                                                                      ## templates 
                                                                      ## that 
                                                                      ## you're 
                                                                      ## listing.
  ##   
                                                                                 ## MaxResults: string
                                                                                 ##             
                                                                                 ## : 
                                                                                 ## Pagination 
                                                                                 ## limit
  ##   
                                                                                         ## maxResult: int
                                                                                         ##            
                                                                                         ## : 
                                                                                         ## The 
                                                                                         ## maximum 
                                                                                         ## number 
                                                                                         ## of 
                                                                                         ## results 
                                                                                         ## to 
                                                                                         ## be 
                                                                                         ## returned 
                                                                                         ## per 
                                                                                         ## request.
  ##   
                                                                                                    ## NextToken: string
                                                                                                    ##            
                                                                                                    ## : 
                                                                                                    ## Pagination 
                                                                                                    ## token
  ##   
                                                                                                            ## nextToken: string
                                                                                                            ##            
                                                                                                            ## : 
                                                                                                            ## The 
                                                                                                            ## token 
                                                                                                            ## for 
                                                                                                            ## the 
                                                                                                            ## next 
                                                                                                            ## set 
                                                                                                            ## of 
                                                                                                            ## results, 
                                                                                                            ## or 
                                                                                                            ## null 
                                                                                                            ## if 
                                                                                                            ## there 
                                                                                                            ## are 
                                                                                                            ## no 
                                                                                                            ## more 
                                                                                                            ## results.
  var path_402657508 = newJObject()
  var query_402657509 = newJObject()
  add(path_402657508, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657509, "MaxResults", newJString(MaxResults))
  add(query_402657509, "max-result", newJInt(maxResult))
  add(query_402657509, "NextToken", newJString(NextToken))
  add(query_402657509, "next-token", newJString(nextToken))
  result = call_402657507.call(path_402657508, query_402657509, nil, nil, nil)

var listTemplates* = Call_ListTemplates_402657491(name: "listTemplates",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/templates",
    validator: validate_ListTemplates_402657492, base: "/",
    makeUrl: url_ListTemplates_402657493, schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListUserGroups_402657510 = ref object of OpenApiRestCall_402656044
proc url_ListUserGroups_402657512(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  assert "UserName" in path, "`UserName` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/users/"),
                 (kind: VariableSegment, value: "UserName"),
                 (kind: ConstantSegment, value: "/groups")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListUserGroups_402657511(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The AWS account ID that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                       ## UserName: JString (required)
                                                                                                                                                                                       ##           
                                                                                                                                                                                       ## : 
                                                                                                                                                                                       ## The 
                                                                                                                                                                                       ## Amazon 
                                                                                                                                                                                       ## QuickSight 
                                                                                                                                                                                       ## user 
                                                                                                                                                                                       ## name 
                                                                                                                                                                                       ## that 
                                                                                                                                                                                       ## you 
                                                                                                                                                                                       ## want 
                                                                                                                                                                                       ## to 
                                                                                                                                                                                       ## list 
                                                                                                                                                                                       ## group 
                                                                                                                                                                                       ## memberships 
                                                                                                                                                                                       ## for.
  ##   
                                                                                                                                                                                              ## Namespace: JString (required)
                                                                                                                                                                                              ##            
                                                                                                                                                                                              ## : 
                                                                                                                                                                                              ## The 
                                                                                                                                                                                              ## namespace. 
                                                                                                                                                                                              ## Currently, 
                                                                                                                                                                                              ## you 
                                                                                                                                                                                              ## should 
                                                                                                                                                                                              ## set 
                                                                                                                                                                                              ## this 
                                                                                                                                                                                              ## to 
                                                                                                                                                                                              ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657513 = path.getOrDefault("AwsAccountId")
  valid_402657513 = validateParameter(valid_402657513, JString, required = true,
                                      default = nil)
  if valid_402657513 != nil:
    section.add "AwsAccountId", valid_402657513
  var valid_402657514 = path.getOrDefault("UserName")
  valid_402657514 = validateParameter(valid_402657514, JString, required = true,
                                      default = nil)
  if valid_402657514 != nil:
    section.add "UserName", valid_402657514
  var valid_402657515 = path.getOrDefault("Namespace")
  valid_402657515 = validateParameter(valid_402657515, JString, required = true,
                                      default = nil)
  if valid_402657515 != nil:
    section.add "Namespace", valid_402657515
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to return from this request.
  ##   
                                                                                                              ## next-token: JString
                                                                                                              ##             
                                                                                                              ## : 
                                                                                                              ## A 
                                                                                                              ## pagination 
                                                                                                              ## token 
                                                                                                              ## that 
                                                                                                              ## can 
                                                                                                              ## be 
                                                                                                              ## used 
                                                                                                              ## in 
                                                                                                              ## a 
                                                                                                              ## subsequent 
                                                                                                              ## request.
  section = newJObject()
  var valid_402657516 = query.getOrDefault("max-results")
  valid_402657516 = validateParameter(valid_402657516, JInt, required = false,
                                      default = nil)
  if valid_402657516 != nil:
    section.add "max-results", valid_402657516
  var valid_402657517 = query.getOrDefault("next-token")
  valid_402657517 = validateParameter(valid_402657517, JString,
                                      required = false, default = nil)
  if valid_402657517 != nil:
    section.add "next-token", valid_402657517
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657518 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657518 = validateParameter(valid_402657518, JString,
                                      required = false, default = nil)
  if valid_402657518 != nil:
    section.add "X-Amz-Security-Token", valid_402657518
  var valid_402657519 = header.getOrDefault("X-Amz-Signature")
  valid_402657519 = validateParameter(valid_402657519, JString,
                                      required = false, default = nil)
  if valid_402657519 != nil:
    section.add "X-Amz-Signature", valid_402657519
  var valid_402657520 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657520 = validateParameter(valid_402657520, JString,
                                      required = false, default = nil)
  if valid_402657520 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657520
  var valid_402657521 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657521 = validateParameter(valid_402657521, JString,
                                      required = false, default = nil)
  if valid_402657521 != nil:
    section.add "X-Amz-Algorithm", valid_402657521
  var valid_402657522 = header.getOrDefault("X-Amz-Date")
  valid_402657522 = validateParameter(valid_402657522, JString,
                                      required = false, default = nil)
  if valid_402657522 != nil:
    section.add "X-Amz-Date", valid_402657522
  var valid_402657523 = header.getOrDefault("X-Amz-Credential")
  valid_402657523 = validateParameter(valid_402657523, JString,
                                      required = false, default = nil)
  if valid_402657523 != nil:
    section.add "X-Amz-Credential", valid_402657523
  var valid_402657524 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657524 = validateParameter(valid_402657524, JString,
                                      required = false, default = nil)
  if valid_402657524 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657524
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657525: Call_ListUserGroups_402657510; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.
                                                                                         ## 
  let valid = call_402657525.validator(path, query, header, formData, body, _)
  let scheme = call_402657525.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657525.makeUrl(scheme.get, call_402657525.host, call_402657525.base,
                                   call_402657525.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657525, uri, valid, _)

proc call*(call_402657526: Call_ListUserGroups_402657510; AwsAccountId: string;
           UserName: string; Namespace: string; maxResults: int = 0;
           nextToken: string = ""): Recallable =
  ## listUserGroups
  ## Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.
  ##   
                                                                                      ## AwsAccountId: string (required)
                                                                                      ##               
                                                                                      ## : 
                                                                                      ## The 
                                                                                      ## AWS 
                                                                                      ## account 
                                                                                      ## ID 
                                                                                      ## that 
                                                                                      ## the 
                                                                                      ## user 
                                                                                      ## is 
                                                                                      ## in. 
                                                                                      ## Currently, 
                                                                                      ## you 
                                                                                      ## use 
                                                                                      ## the 
                                                                                      ## ID 
                                                                                      ## for 
                                                                                      ## the 
                                                                                      ## AWS 
                                                                                      ## account 
                                                                                      ## that 
                                                                                      ## contains 
                                                                                      ## your 
                                                                                      ## Amazon 
                                                                                      ## QuickSight 
                                                                                      ## account.
  ##   
                                                                                                 ## maxResults: int
                                                                                                 ##             
                                                                                                 ## : 
                                                                                                 ## The 
                                                                                                 ## maximum 
                                                                                                 ## number 
                                                                                                 ## of 
                                                                                                 ## results 
                                                                                                 ## to 
                                                                                                 ## return 
                                                                                                 ## from 
                                                                                                 ## this 
                                                                                                 ## request.
  ##   
                                                                                                            ## UserName: string (required)
                                                                                                            ##           
                                                                                                            ## : 
                                                                                                            ## The 
                                                                                                            ## Amazon 
                                                                                                            ## QuickSight 
                                                                                                            ## user 
                                                                                                            ## name 
                                                                                                            ## that 
                                                                                                            ## you 
                                                                                                            ## want 
                                                                                                            ## to 
                                                                                                            ## list 
                                                                                                            ## group 
                                                                                                            ## memberships 
                                                                                                            ## for.
  ##   
                                                                                                                   ## Namespace: string (required)
                                                                                                                   ##            
                                                                                                                   ## : 
                                                                                                                   ## The 
                                                                                                                   ## namespace. 
                                                                                                                   ## Currently, 
                                                                                                                   ## you 
                                                                                                                   ## should 
                                                                                                                   ## set 
                                                                                                                   ## this 
                                                                                                                   ## to 
                                                                                                                   ## <code>default</code>.
  ##   
                                                                                                                                           ## nextToken: string
                                                                                                                                           ##            
                                                                                                                                           ## : 
                                                                                                                                           ## A 
                                                                                                                                           ## pagination 
                                                                                                                                           ## token 
                                                                                                                                           ## that 
                                                                                                                                           ## can 
                                                                                                                                           ## be 
                                                                                                                                           ## used 
                                                                                                                                           ## in 
                                                                                                                                           ## a 
                                                                                                                                           ## subsequent 
                                                                                                                                           ## request.
  var path_402657527 = newJObject()
  var query_402657528 = newJObject()
  add(path_402657527, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657528, "max-results", newJInt(maxResults))
  add(path_402657527, "UserName", newJString(UserName))
  add(path_402657527, "Namespace", newJString(Namespace))
  add(query_402657528, "next-token", newJString(nextToken))
  result = call_402657526.call(path_402657527, query_402657528, nil, nil, nil)

var listUserGroups* = Call_ListUserGroups_402657510(name: "listUserGroups",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups",
    validator: validate_ListUserGroups_402657511, base: "/",
    makeUrl: url_ListUserGroups_402657512, schemes: {Scheme.Https, Scheme.Http})
type
  Call_RegisterUser_402657547 = ref object of OpenApiRestCall_402656044
proc url_RegisterUser_402657549(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/users")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_RegisterUser_402657548(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                               ## Namespace: JString (required)
                                                                                                                                                                                               ##            
                                                                                                                                                                                               ## : 
                                                                                                                                                                                               ## The 
                                                                                                                                                                                               ## namespace. 
                                                                                                                                                                                               ## Currently, 
                                                                                                                                                                                               ## you 
                                                                                                                                                                                               ## should 
                                                                                                                                                                                               ## set 
                                                                                                                                                                                               ## this 
                                                                                                                                                                                               ## to 
                                                                                                                                                                                               ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657550 = path.getOrDefault("AwsAccountId")
  valid_402657550 = validateParameter(valid_402657550, JString, required = true,
                                      default = nil)
  if valid_402657550 != nil:
    section.add "AwsAccountId", valid_402657550
  var valid_402657551 = path.getOrDefault("Namespace")
  valid_402657551 = validateParameter(valid_402657551, JString, required = true,
                                      default = nil)
  if valid_402657551 != nil:
    section.add "Namespace", valid_402657551
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657552 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657552 = validateParameter(valid_402657552, JString,
                                      required = false, default = nil)
  if valid_402657552 != nil:
    section.add "X-Amz-Security-Token", valid_402657552
  var valid_402657553 = header.getOrDefault("X-Amz-Signature")
  valid_402657553 = validateParameter(valid_402657553, JString,
                                      required = false, default = nil)
  if valid_402657553 != nil:
    section.add "X-Amz-Signature", valid_402657553
  var valid_402657554 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657554 = validateParameter(valid_402657554, JString,
                                      required = false, default = nil)
  if valid_402657554 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657554
  var valid_402657555 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657555 = validateParameter(valid_402657555, JString,
                                      required = false, default = nil)
  if valid_402657555 != nil:
    section.add "X-Amz-Algorithm", valid_402657555
  var valid_402657556 = header.getOrDefault("X-Amz-Date")
  valid_402657556 = validateParameter(valid_402657556, JString,
                                      required = false, default = nil)
  if valid_402657556 != nil:
    section.add "X-Amz-Date", valid_402657556
  var valid_402657557 = header.getOrDefault("X-Amz-Credential")
  valid_402657557 = validateParameter(valid_402657557, JString,
                                      required = false, default = nil)
  if valid_402657557 != nil:
    section.add "X-Amz-Credential", valid_402657557
  var valid_402657558 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657558 = validateParameter(valid_402657558, JString,
                                      required = false, default = nil)
  if valid_402657558 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657558
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  ## parameters in `body` object:
  ##   body: JObject (required)
  if `==`(_, ""): assert body != nil, "body argument is necessary"
  if `==`(_, ""):
    section = validateParameter(body, JObject, required = true, default = nil)
  if body != nil:
    result.add "body", body

proc call*(call_402657560: Call_RegisterUser_402657547; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. 
                                                                                         ## 
  let valid = call_402657560.validator(path, query, header, formData, body, _)
  let scheme = call_402657560.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657560.makeUrl(scheme.get, call_402657560.host, call_402657560.base,
                                   call_402657560.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657560, uri, valid, _)

proc call*(call_402657561: Call_RegisterUser_402657547; AwsAccountId: string;
           body: JsonNode; Namespace: string): Recallable =
  ## registerUser
  ## Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. 
  ##   
                                                                                                                                                                  ## AwsAccountId: string (required)
                                                                                                                                                                  ##               
                                                                                                                                                                  ## : 
                                                                                                                                                                  ## The 
                                                                                                                                                                  ## ID 
                                                                                                                                                                  ## for 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## AWS 
                                                                                                                                                                  ## account 
                                                                                                                                                                  ## that 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## user 
                                                                                                                                                                  ## is 
                                                                                                                                                                  ## in. 
                                                                                                                                                                  ## Currently, 
                                                                                                                                                                  ## you 
                                                                                                                                                                  ## use 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## ID 
                                                                                                                                                                  ## for 
                                                                                                                                                                  ## the 
                                                                                                                                                                  ## AWS 
                                                                                                                                                                  ## account 
                                                                                                                                                                  ## that 
                                                                                                                                                                  ## contains 
                                                                                                                                                                  ## your 
                                                                                                                                                                  ## Amazon 
                                                                                                                                                                  ## QuickSight 
                                                                                                                                                                  ## account.
  ##   
                                                                                                                                                                             ## body: JObject (required)
  ##   
                                                                                                                                                                                                        ## Namespace: string (required)
                                                                                                                                                                                                        ##            
                                                                                                                                                                                                        ## : 
                                                                                                                                                                                                        ## The 
                                                                                                                                                                                                        ## namespace. 
                                                                                                                                                                                                        ## Currently, 
                                                                                                                                                                                                        ## you 
                                                                                                                                                                                                        ## should 
                                                                                                                                                                                                        ## set 
                                                                                                                                                                                                        ## this 
                                                                                                                                                                                                        ## to 
                                                                                                                                                                                                        ## <code>default</code>.
  var path_402657562 = newJObject()
  var body_402657563 = newJObject()
  add(path_402657562, "AwsAccountId", newJString(AwsAccountId))
  if body != nil:
    body_402657563 = body
  add(path_402657562, "Namespace", newJString(Namespace))
  result = call_402657561.call(path_402657562, nil, nil, nil, body_402657563)

var registerUser* = Call_RegisterUser_402657547(name: "registerUser",
    meth: HttpMethod.HttpPost, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/users",
    validator: validate_RegisterUser_402657548, base: "/",
    makeUrl: url_RegisterUser_402657549, schemes: {Scheme.Https, Scheme.Http})
type
  Call_ListUsers_402657529 = ref object of OpenApiRestCall_402656044
proc url_ListUsers_402657531(protocol: Scheme; host: string; base: string;
                             route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "Namespace" in path, "`Namespace` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/namespaces/"),
                 (kind: VariableSegment, value: "Namespace"),
                 (kind: ConstantSegment, value: "/users")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_ListUsers_402657530(path: JsonNode; query: JsonNode;
                                  header: JsonNode; formData: JsonNode;
                                  body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns a list of all of the Amazon QuickSight users belonging to this account. 
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   AwsAccountId: JString (required)
                                 ##               : The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
  ##   
                                                                                                                                                                                               ## Namespace: JString (required)
                                                                                                                                                                                               ##            
                                                                                                                                                                                               ## : 
                                                                                                                                                                                               ## The 
                                                                                                                                                                                               ## namespace. 
                                                                                                                                                                                               ## Currently, 
                                                                                                                                                                                               ## you 
                                                                                                                                                                                               ## should 
                                                                                                                                                                                               ## set 
                                                                                                                                                                                               ## this 
                                                                                                                                                                                               ## to 
                                                                                                                                                                                               ## <code>default</code>.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `AwsAccountId` field"
  var valid_402657532 = path.getOrDefault("AwsAccountId")
  valid_402657532 = validateParameter(valid_402657532, JString, required = true,
                                      default = nil)
  if valid_402657532 != nil:
    section.add "AwsAccountId", valid_402657532
  var valid_402657533 = path.getOrDefault("Namespace")
  valid_402657533 = validateParameter(valid_402657533, JString, required = true,
                                      default = nil)
  if valid_402657533 != nil:
    section.add "Namespace", valid_402657533
  result.add "path", section
  ## parameters in `query` object:
  ##   max-results: JInt
                                  ##              : The maximum number of results to return from this request.
  ##   
                                                                                                              ## next-token: JString
                                                                                                              ##             
                                                                                                              ## : 
                                                                                                              ## A 
                                                                                                              ## pagination 
                                                                                                              ## token 
                                                                                                              ## that 
                                                                                                              ## can 
                                                                                                              ## be 
                                                                                                              ## used 
                                                                                                              ## in 
                                                                                                              ## a 
                                                                                                              ## subsequent 
                                                                                                              ## request.
  section = newJObject()
  var valid_402657534 = query.getOrDefault("max-results")
  valid_402657534 = validateParameter(valid_402657534, JInt, required = false,
                                      default = nil)
  if valid_402657534 != nil:
    section.add "max-results", valid_402657534
  var valid_402657535 = query.getOrDefault("next-token")
  valid_402657535 = validateParameter(valid_402657535, JString,
                                      required = false, default = nil)
  if valid_402657535 != nil:
    section.add "next-token", valid_402657535
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657536 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657536 = validateParameter(valid_402657536, JString,
                                      required = false, default = nil)
  if valid_402657536 != nil:
    section.add "X-Amz-Security-Token", valid_402657536
  var valid_402657537 = header.getOrDefault("X-Amz-Signature")
  valid_402657537 = validateParameter(valid_402657537, JString,
                                      required = false, default = nil)
  if valid_402657537 != nil:
    section.add "X-Amz-Signature", valid_402657537
  var valid_402657538 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657538 = validateParameter(valid_402657538, JString,
                                      required = false, default = nil)
  if valid_402657538 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657538
  var valid_402657539 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657539 = validateParameter(valid_402657539, JString,
                                      required = false, default = nil)
  if valid_402657539 != nil:
    section.add "X-Amz-Algorithm", valid_402657539
  var valid_402657540 = header.getOrDefault("X-Amz-Date")
  valid_402657540 = validateParameter(valid_402657540, JString,
                                      required = false, default = nil)
  if valid_402657540 != nil:
    section.add "X-Amz-Date", valid_402657540
  var valid_402657541 = header.getOrDefault("X-Amz-Credential")
  valid_402657541 = validateParameter(valid_402657541, JString,
                                      required = false, default = nil)
  if valid_402657541 != nil:
    section.add "X-Amz-Credential", valid_402657541
  var valid_402657542 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657542 = validateParameter(valid_402657542, JString,
                                      required = false, default = nil)
  if valid_402657542 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657542
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657543: Call_ListUsers_402657529; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns a list of all of the Amazon QuickSight users belonging to this account. 
                                                                                         ## 
  let valid = call_402657543.validator(path, query, header, formData, body, _)
  let scheme = call_402657543.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657543.makeUrl(scheme.get, call_402657543.host, call_402657543.base,
                                   call_402657543.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657543, uri, valid, _)

proc call*(call_402657544: Call_ListUsers_402657529; AwsAccountId: string;
           Namespace: string; maxResults: int = 0; nextToken: string = ""): Recallable =
  ## listUsers
  ## Returns a list of all of the Amazon QuickSight users belonging to this account. 
  ##   
                                                                                     ## AwsAccountId: string (required)
                                                                                     ##               
                                                                                     ## : 
                                                                                     ## The 
                                                                                     ## ID 
                                                                                     ## for 
                                                                                     ## the 
                                                                                     ## AWS 
                                                                                     ## account 
                                                                                     ## that 
                                                                                     ## the 
                                                                                     ## user 
                                                                                     ## is 
                                                                                     ## in. 
                                                                                     ## Currently, 
                                                                                     ## you 
                                                                                     ## use 
                                                                                     ## the 
                                                                                     ## ID 
                                                                                     ## for 
                                                                                     ## the 
                                                                                     ## AWS 
                                                                                     ## account 
                                                                                     ## that 
                                                                                     ## contains 
                                                                                     ## your 
                                                                                     ## Amazon 
                                                                                     ## QuickSight 
                                                                                     ## account.
  ##   
                                                                                                ## maxResults: int
                                                                                                ##             
                                                                                                ## : 
                                                                                                ## The 
                                                                                                ## maximum 
                                                                                                ## number 
                                                                                                ## of 
                                                                                                ## results 
                                                                                                ## to 
                                                                                                ## return 
                                                                                                ## from 
                                                                                                ## this 
                                                                                                ## request.
  ##   
                                                                                                           ## Namespace: string (required)
                                                                                                           ##            
                                                                                                           ## : 
                                                                                                           ## The 
                                                                                                           ## namespace. 
                                                                                                           ## Currently, 
                                                                                                           ## you 
                                                                                                           ## should 
                                                                                                           ## set 
                                                                                                           ## this 
                                                                                                           ## to 
                                                                                                           ## <code>default</code>.
  ##   
                                                                                                                                   ## nextToken: string
                                                                                                                                   ##            
                                                                                                                                   ## : 
                                                                                                                                   ## A 
                                                                                                                                   ## pagination 
                                                                                                                                   ## token 
                                                                                                                                   ## that 
                                                                                                                                   ## can 
                                                                                                                                   ## be 
                                                                                                                                   ## used 
                                                                                                                                   ## in 
                                                                                                                                   ## a 
                                                                                                                                   ## subsequent 
                                                                                                                                   ## request.
  var path_402657545 = newJObject()
  var query_402657546 = newJObject()
  add(path_402657545, "AwsAccountId", newJString(AwsAccountId))
  add(query_402657546, "max-results", newJInt(maxResults))
  add(path_402657545, "Namespace", newJString(Namespace))
  add(query_402657546, "next-token", newJString(nextToken))
  result = call_402657544.call(path_402657545, query_402657546, nil, nil, nil)

var listUsers* = Call_ListUsers_402657529(name: "listUsers",
    meth: HttpMethod.HttpGet, host: "quicksight.amazonaws.com",
    route: "/accounts/{AwsAccountId}/namespaces/{Namespace}/users",
    validator: validate_ListUsers_402657530, base: "/", makeUrl: url_ListUsers_402657531,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_UntagResource_402657564 = ref object of OpenApiRestCall_402656044
proc url_UntagResource_402657566(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "ResourceArn" in path, "`ResourceArn` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/resources/"),
                 (kind: VariableSegment, value: "ResourceArn"),
                 (kind: ConstantSegment, value: "/tags#keys")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UntagResource_402657565(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Removes a tag or tags from a resource.
                ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   ResourceArn: JString (required)
                                 ##              : The Amazon Resource Name (ARN) of the resource that you want to untag.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `ResourceArn` field"
  var valid_402657567 = path.getOrDefault("ResourceArn")
  valid_402657567 = validateParameter(valid_402657567, JString, required = true,
                                      default = nil)
  if valid_402657567 != nil:
    section.add "ResourceArn", valid_402657567
  result.add "path", section
  ## parameters in `query` object:
  ##   keys: JArray (required)
                                  ##       : The keys of the key-value pairs for the resource tag or tags assigned to the resource.
  section = newJObject()
  assert query != nil,
         "query argument is necessary due to required `keys` field"
  var valid_402657568 = query.getOrDefault("keys")
  valid_402657568 = validateParameter(valid_402657568, JArray, required = true,
                                      default = nil)
  if valid_402657568 != nil:
    section.add "keys", valid_402657568
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657569 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657569 = validateParameter(valid_402657569, JString,
                                      required = false, default = nil)
  if valid_402657569 != nil:
    section.add "X-Amz-Security-Token", valid_402657569
  var valid_402657570 = header.getOrDefault("X-Amz-Signature")
  valid_402657570 = validateParameter(valid_402657570, JString,
                                      required = false, default = nil)
  if valid_402657570 != nil:
    section.add "X-Amz-Signature", valid_402657570
  var valid_402657571 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657571 = validateParameter(valid_402657571, JString,
                                      required = false, default = nil)
  if valid_402657571 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657571
  var valid_402657572 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657572 = validateParameter(valid_402657572, JString,
                                      required = false, default = nil)
  if valid_402657572 != nil:
    section.add "X-Amz-Algorithm", valid_402657572
  var valid_402657573 = header.getOrDefault("X-Amz-Date")
  valid_402657573 = validateParameter(valid_402657573, JString,
                                      required = false, default = nil)
  if valid_402657573 != nil:
    section.add "X-Amz-Date", valid_402657573
  var valid_402657574 = header.getOrDefault("X-Amz-Credential")
  valid_402657574 = validateParameter(valid_402657574, JString,
                                      required = false, default = nil)
  if valid_402657574 != nil:
    section.add "X-Amz-Credential", valid_402657574
  var valid_402657575 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657575 = validateParameter(valid_402657575, JString,
                                      required = false, default = nil)
  if valid_402657575 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657575
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657576: Call_UntagResource_402657564; path: JsonNode = nil;
           query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Removes a tag or tags from a resource.
                                                                                         ## 
  let valid = call_402657576.validator(path, query, header, formData, body, _)
  let scheme = call_402657576.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657576.makeUrl(scheme.get, call_402657576.host, call_402657576.base,
                                   call_402657576.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657576, uri, valid, _)

proc call*(call_402657577: Call_UntagResource_402657564; ResourceArn: string;
           keys: JsonNode): Recallable =
  ## untagResource
  ## Removes a tag or tags from a resource.
  ##   ResourceArn: string (required)
                                           ##              : The Amazon Resource Name (ARN) of the resource that you want to untag.
  ##   
                                                                                                                                   ## keys: JArray (required)
                                                                                                                                   ##       
                                                                                                                                   ## : 
                                                                                                                                   ## The 
                                                                                                                                   ## keys 
                                                                                                                                   ## of 
                                                                                                                                   ## the 
                                                                                                                                   ## key-value 
                                                                                                                                   ## pairs 
                                                                                                                                   ## for 
                                                                                                                                   ## the 
                                                                                                                                   ## resource 
                                                                                                                                   ## tag 
                                                                                                                                   ## or 
                                                                                                                                   ## tags 
                                                                                                                                   ## assigned 
                                                                                                                                   ## to 
                                                                                                                                   ## the 
                                                                                                                                   ## resource.
  var path_402657578 = newJObject()
  var query_402657579 = newJObject()
  add(path_402657578, "ResourceArn", newJString(ResourceArn))
  if keys != nil:
    query_402657579.add "keys", keys
  result = call_402657577.call(path_402657578, query_402657579, nil, nil, nil)

var untagResource* = Call_UntagResource_402657564(name: "untagResource",
    meth: HttpMethod.HttpDelete, host: "quicksight.amazonaws.com",
    route: "/resources/{ResourceArn}/tags#keys",
    validator: validate_UntagResource_402657565, base: "/",
    makeUrl: url_UntagResource_402657566, schemes: {Scheme.Https, Scheme.Http})
type
  Call_UpdateDashboardPublishedVersion_402657580 = ref object of OpenApiRestCall_402656044
proc url_UpdateDashboardPublishedVersion_402657582(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  assert path != nil, "path is required to populate template"
  assert "AwsAccountId" in path, "`AwsAccountId` is a required path parameter"
  assert "DashboardId" in path, "`DashboardId` is a required path parameter"
  assert "VersionNumber" in path, "`VersionNumber` is a required path parameter"
  const
    segments = @[(kind: ConstantSegment, value: "/accounts/"),
                 (kind: VariableSegment, value: "AwsAccountId"),
                 (kind: ConstantSegment, value: "/dashboards/"),
                 (kind: VariableSegment, value: "DashboardId"),
                 (kind: ConstantSegment, value: "/versions/"),
                 (kind: VariableSegment, value: "VersionNumber")]
  var hydrated = hydratePath(path, segments)
  if hydrated.isNone:
    raise newException(ValueError, "unable to fully hydrate path")
  if base == "/" and hydrated.get.startsWith "/":
    result.path = hydrated.get
  else:
    result.path = base & hydrated.get

proc validate_UpdateDashboardPublishedVersion_402657581(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Updates the published version of a dashboard.
                                            ## 
  var section: JsonNode
  result = newJObject()
  ## parameters in `path` object:
  ##   VersionNumber: JInt (required)
                                 ##                : The version number of the dashboard.
  ##   
                                                                                         ## AwsAccountId: JString (required)
                                                                                         ##               
                                                                                         ## : 
                                                                                         ## The 
                                                                                         ## ID 
                                                                                         ## of 
                                                                                         ## the 
                                                                                         ## AWS 
                                                                                         ## account 
                                                                                         ## that 
                                                                                         ## contains 
                                                                                         ## the 
                                                                                         ## dashboard 
                                                                                         ## that 
                                                                                         ## you're 
                                                                                         ## updating.
  ##   
                                                                                                     ## DashboardId: JString (required)
                                                                                                     ##              
                                                                                                     ## : 
                                                                                                     ## The 
                                                                                                     ## ID 
                                                                                                     ## for 
                                                                                                     ## the 
                                                                                                     ## dashboard.
  section = newJObject()
  assert path != nil,
         "path argument is necessary due to required `VersionNumber` field"
  var valid_402657583 = path.getOrDefault("VersionNumber")
  valid_402657583 = validateParameter(valid_402657583, JInt, required = true,
                                      default = nil)
  if valid_402657583 != nil:
    section.add "VersionNumber", valid_402657583
  var valid_402657584 = path.getOrDefault("AwsAccountId")
  valid_402657584 = validateParameter(valid_402657584, JString, required = true,
                                      default = nil)
  if valid_402657584 != nil:
    section.add "AwsAccountId", valid_402657584
  var valid_402657585 = path.getOrDefault("DashboardId")
  valid_402657585 = validateParameter(valid_402657585, JString, required = true,
                                      default = nil)
  if valid_402657585 != nil:
    section.add "DashboardId", valid_402657585
  result.add "path", section
  section = newJObject()
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_402657586 = header.getOrDefault("X-Amz-Security-Token")
  valid_402657586 = validateParameter(valid_402657586, JString,
                                      required = false, default = nil)
  if valid_402657586 != nil:
    section.add "X-Amz-Security-Token", valid_402657586
  var valid_402657587 = header.getOrDefault("X-Amz-Signature")
  valid_402657587 = validateParameter(valid_402657587, JString,
                                      required = false, default = nil)
  if valid_402657587 != nil:
    section.add "X-Amz-Signature", valid_402657587
  var valid_402657588 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_402657588 = validateParameter(valid_402657588, JString,
                                      required = false, default = nil)
  if valid_402657588 != nil:
    section.add "X-Amz-Content-Sha256", valid_402657588
  var valid_402657589 = header.getOrDefault("X-Amz-Algorithm")
  valid_402657589 = validateParameter(valid_402657589, JString,
                                      required = false, default = nil)
  if valid_402657589 != nil:
    section.add "X-Amz-Algorithm", valid_402657589
  var valid_402657590 = header.getOrDefault("X-Amz-Date")
  valid_402657590 = validateParameter(valid_402657590, JString,
                                      required = false, default = nil)
  if valid_402657590 != nil:
    section.add "X-Amz-Date", valid_402657590
  var valid_402657591 = header.getOrDefault("X-Amz-Credential")
  valid_402657591 = validateParameter(valid_402657591, JString,
                                      required = false, default = nil)
  if valid_402657591 != nil:
    section.add "X-Amz-Credential", valid_402657591
  var valid_402657592 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_402657592 = validateParameter(valid_402657592, JString,
                                      required = false, default = nil)
  if valid_402657592 != nil:
    section.add "X-Amz-SignedHeaders", valid_402657592
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_402657593: Call_UpdateDashboardPublishedVersion_402657580;
           path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
           formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Updates the published version of a dashboard.
                                                                                         ## 
  let valid = call_402657593.validator(path, query, header, formData, body, _)
  let scheme = call_402657593.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_402657593.makeUrl(scheme.get, call_402657593.host, call_402657593.base,
                                   call_402657593.route,
                                   valid.getOrDefault("path"),
                                   valid.getOrDefault("query"))
  result = atozHook(call_402657593, uri, valid, _)

proc call*(call_402657594: Call_UpdateDashboardPublishedVersion_402657580;
           VersionNumber: int; AwsAccountId: string; DashboardId: string): Recallable =
  ## updateDashboardPublishedVersion
  ## Updates the published version of a dashboard.
  ##   VersionNumber: int (required)
                                                  ##                : The version number of the dashboard.
  ##   
                                                                                                          ## AwsAccountId: string (required)
                                                                                                          ##               
                                                                                                          ## : 
                                                                                                          ## The 
                                                                                                          ## ID 
                                                                                                          ## of 
                                                                                                          ## the 
                                                                                                          ## AWS 
                                                                                                          ## account 
                                                                                                          ## that 
                                                                                                          ## contains 
                                                                                                          ## the 
                                                                                                          ## dashboard 
                                                                                                          ## that 
                                                                                                          ## you're 
                                                                                                          ## updating.
  ##   
                                                                                                                      ## DashboardId: string (required)
                                                                                                                      ##              
                                                                                                                      ## : 
                                                                                                                      ## The 
                                                                                                                      ## ID 
                                                                                                                      ## for 
                                                                                                                      ## the 
                                                                                                                      ## dashboard.
  var path_402657595 = newJObject()
  add(path_402657595, "VersionNumber", newJInt(VersionNumber))
  add(path_402657595, "AwsAccountId", newJString(AwsAccountId))
  add(path_402657595, "DashboardId", newJString(DashboardId))
  result = call_402657594.call(path_402657595, nil, nil, nil, nil)

var updateDashboardPublishedVersion* = Call_UpdateDashboardPublishedVersion_402657580(
    name: "updateDashboardPublishedVersion", meth: HttpMethod.HttpPut,
    host: "quicksight.amazonaws.com", route: "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}",
    validator: validate_UpdateDashboardPublishedVersion_402657581, base: "/",
    makeUrl: url_UpdateDashboardPublishedVersion_402657582,
    schemes: {Scheme.Https, Scheme.Http})
export
  rest

type
  EnvKind = enum
    BakeIntoBinary = "Baking $1 into the binary",
    FetchFromEnv = "Fetch $1 from the environment"
template sloppyConst(via: EnvKind; name: untyped): untyped =
  import
    macros

  const
    name {.strdefine.}: string = case via
    of BakeIntoBinary:
      getEnv(astToStr(name), "")
    of FetchFromEnv:
      ""
  static :
    let msg = block:
      if name == "":
        "Missing $1 in the environment"
      else:
        $via
    warning msg % [astToStr(name)]

sloppyConst FetchFromEnv, AWS_ACCESS_KEY_ID
sloppyConst FetchFromEnv, AWS_SECRET_ACCESS_KEY
sloppyConst BakeIntoBinary, AWS_REGION
sloppyConst FetchFromEnv, AWS_ACCOUNT_ID
type
  XAmz = enum
    SecurityToken = "X-Amz-Security-Token",
    ContentSha256 = "X-Amz-Content-Sha256"
proc atozSign(recall: var Recallable; query: JsonNode;
              algo: SigningAlgo = SHA256) =
  let
    date = makeDateTime()
    access = os.getEnv("AWS_ACCESS_KEY_ID", AWS_ACCESS_KEY_ID)
    secret = os.getEnv("AWS_SECRET_ACCESS_KEY", AWS_SECRET_ACCESS_KEY)
    region = os.getEnv("AWS_REGION", AWS_REGION)
  assert secret != "", "need $AWS_SECRET_ACCESS_KEY in environment"
  assert access != "", "need $AWS_ACCESS_KEY_ID in environment"
  assert region != "", "need $AWS_REGION in environment"
  var
    normal: PathNormal
    url = normalizeUrl(recall.url, query, normalize = normal)
    scheme = parseEnum[Scheme](url.scheme)
  assert scheme in awsServers, "unknown scheme `" & $scheme & "`"
  assert region in awsServers[scheme], "unknown region `" & region & "`"
  url.hostname = awsServers[scheme][region]
  case awsServiceName.toLowerAscii
  of "s3":
    normal = PathNormal.S3
  else:
    normal = PathNormal.Default
  recall.headers["Host"] = url.hostname
  recall.headers["X-Amz-Date"] = date
  recall.headers[$ContentSha256] = hash(recall.body, SHA256)
  let
    scope = credentialScope(region = region, service = awsServiceName,
                            date = date)
    request = canonicalRequest(recall.meth, $url, query, recall.headers,
                               recall.body, normalize = normal, digest = algo)
    sts = stringToSign(request.hash(algo), scope, date = date, digest = algo)
    signature = calculateSignature(secret = secret, date = date,
                                   region = region, service = awsServiceName,
                                   sts, digest = algo)
  var auth = $algo & " "
  auth &= "Credential=" & access / scope & ", "
  auth &= "SignedHeaders=" & recall.headers.signedHeaders & ", "
  auth &= "Signature=" & signature
  recall.headers["Authorization"] = auth
  recall.headers.del "Host"
  recall.url = $url

method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode; body = ""): Recallable {.
    base.} =
  ## the hook is a terrible earworm
  var
    headers = newHttpHeaders(massageHeaders(input.getOrDefault("header")))
    text = body
  if text.len == 0 and "body" in input:
    text = input.getOrDefault("body").getStr
    if not headers.hasKey("content-type"):
      headers["content-type"] = "application/x-amz-json-1.0"
  else:
    headers["content-md5"] = base64.encode text.toMD5
  if not headers.hasKey($SecurityToken):
    let session = getEnv("AWS_SESSION_TOKEN", "")
    if session != "":
      headers[$SecurityToken] = session
  result = newRecallable(call, url, headers, text)
  result.atozSign(input.getOrDefault("query"), SHA256)

when not defined(ssl):
  {.error: "use ssl".}