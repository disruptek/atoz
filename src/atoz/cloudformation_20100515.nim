
import
  json, options, hashes, uri, strutils, tables, rest, os, uri, strutils, httpcore, sigv4

## auto-generated via openapi macro
## title: AWS CloudFormation
## version: 2010-05-15
## termsOfService: https://aws.amazon.com/service-terms/
## license:
##     name: Apache 2.0 License
##     url: http://www.apache.org/licenses/
## 
## <fullname>AWS CloudFormation</fullname> <p>AWS CloudFormation allows you to create and manage AWS infrastructure deployments predictably and repeatedly. You can use AWS CloudFormation to leverage AWS products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly-reliable, highly scalable, cost-effective applications without creating or configuring the underlying AWS infrastructure.</p> <p>With AWS CloudFormation, you declare all of your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. AWS CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about AWS CloudFormation, see the <a href="http://aws.amazon.com/cloudformation/">AWS CloudFormation Product Page</a>.</p> <p>Amazon CloudFormation makes use of other AWS products. If you need additional technical information about a specific AWS product, you can find the product's technical documentation at <a href="https://docs.aws.amazon.com/">docs.aws.amazon.com</a>.</p>
## 
## Amazon Web Services documentation
## https://docs.aws.amazon.com/cloudformation/
type
  Scheme {.pure.} = enum
    Https = "https", Http = "http", Wss = "wss", Ws = "ws"
  ValidatorSignature = proc (query: JsonNode = nil; body: JsonNode = nil;
                          header: JsonNode = nil; path: JsonNode = nil;
                          formData: JsonNode = nil): JsonNode
  OpenApiRestCall = ref object of RestCall
    validator*: ValidatorSignature
    route*: string
    base*: string
    host*: string
    schemes*: set[Scheme]
    url*: proc (protocol: Scheme; host: string; base: string; route: string;
              path: JsonNode; query: JsonNode): Uri

  OpenApiRestCall_612658 = ref object of OpenApiRestCall
proc hash(scheme: Scheme): Hash {.used.} =
  result = hash(ord(scheme))

proc clone[T: OpenApiRestCall_612658](t: T): T {.used.} =
  result = T(name: t.name, meth: t.meth, host: t.host, base: t.base, route: t.route,
           schemes: t.schemes, validator: t.validator, url: t.url)

proc pickScheme(t: OpenApiRestCall_612658): Option[Scheme] {.used.} =
  ## select a supported scheme from a set of candidates
  for scheme in Scheme.low ..
      Scheme.high:
    if scheme notin t.schemes:
      continue
    if scheme in [Scheme.Https, Scheme.Wss]:
      when defined(ssl):
        return some(scheme)
      else:
        continue
    return some(scheme)

proc validateParameter(js: JsonNode; kind: JsonNodeKind; required: bool;
                      default: JsonNode = nil): JsonNode =
  ## ensure an input is of the correct json type and yield
  ## a suitable default value when appropriate
  if js ==
      nil:
    if default != nil:
      return validateParameter(default, kind, required = required)
  result = js
  if result ==
      nil:
    assert not required, $kind & " expected; received nil"
    if required:
      result = newJNull()
  else:
    assert js.kind ==
        kind, $kind & " expected; received " &
        $js.kind

type
  KeyVal {.used.} = tuple[key: string, val: string]
  PathTokenKind = enum
    ConstantSegment, VariableSegment
  PathToken = tuple[kind: PathTokenKind, value: string]
proc queryString(query: JsonNode): string {.used.} =
  var qs: seq[KeyVal]
  if query == nil:
    return ""
  for k, v in query.pairs:
    qs.add (key: k, val: v.getStr)
  result = encodeQuery(qs)

proc hydratePath(input: JsonNode; segments: seq[PathToken]): Option[string] {.used.} =
  ## reconstitute a path with constants and variable values taken from json
  var head: string
  if segments.len == 0:
    return some("")
  head = segments[0].value
  case segments[0].kind
  of ConstantSegment:
    discard
  of VariableSegment:
    if head notin input:
      return
    let js = input[head]
    case js.kind
    of JInt, JFloat, JNull, JBool:
      head = $js
    of JString:
      head = js.getStr
    else:
      return
  var remainder = input.hydratePath(segments[1 ..^ 1])
  if remainder.isNone:
    return
  result = some(head & remainder.get)

const
  awsServers = {Scheme.Http: {"ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com", "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com", "us-west-2": "cloudformation.us-west-2.amazonaws.com", "eu-west-2": "cloudformation.eu-west-2.amazonaws.com", "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com", "eu-central-1": "cloudformation.eu-central-1.amazonaws.com", "us-east-2": "cloudformation.us-east-2.amazonaws.com", "us-east-1": "cloudformation.us-east-1.amazonaws.com", "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn", "ap-south-1": "cloudformation.ap-south-1.amazonaws.com", "eu-north-1": "cloudformation.eu-north-1.amazonaws.com", "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com", "us-west-1": "cloudformation.us-west-1.amazonaws.com", "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com", "eu-west-3": "cloudformation.eu-west-3.amazonaws.com", "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn", "sa-east-1": "cloudformation.sa-east-1.amazonaws.com", "eu-west-1": "cloudformation.eu-west-1.amazonaws.com", "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com", "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com", "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable, Scheme.Https: {
      "ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com",
      "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com",
      "us-west-2": "cloudformation.us-west-2.amazonaws.com",
      "eu-west-2": "cloudformation.eu-west-2.amazonaws.com",
      "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com",
      "eu-central-1": "cloudformation.eu-central-1.amazonaws.com",
      "us-east-2": "cloudformation.us-east-2.amazonaws.com",
      "us-east-1": "cloudformation.us-east-1.amazonaws.com",
      "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn",
      "ap-south-1": "cloudformation.ap-south-1.amazonaws.com",
      "eu-north-1": "cloudformation.eu-north-1.amazonaws.com",
      "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com",
      "us-west-1": "cloudformation.us-west-1.amazonaws.com",
      "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com",
      "eu-west-3": "cloudformation.eu-west-3.amazonaws.com",
      "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn",
      "sa-east-1": "cloudformation.sa-east-1.amazonaws.com",
      "eu-west-1": "cloudformation.eu-west-1.amazonaws.com",
      "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com",
      "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com",
      "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable}.toTable
const
  awsServiceName = "cloudformation"
method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode): Recallable {.base.}
type
  Call_PostCancelUpdateStack_613268 = ref object of OpenApiRestCall_612658
proc url_PostCancelUpdateStack_613270(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCancelUpdateStack_613269(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613271 = query.getOrDefault("Action")
  valid_613271 = validateParameter(valid_613271, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_613271 != nil:
    section.add "Action", valid_613271
  var valid_613272 = query.getOrDefault("Version")
  valid_613272 = validateParameter(valid_613272, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613272 != nil:
    section.add "Version", valid_613272
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613273 = header.getOrDefault("X-Amz-Signature")
  valid_613273 = validateParameter(valid_613273, JString, required = false,
                                 default = nil)
  if valid_613273 != nil:
    section.add "X-Amz-Signature", valid_613273
  var valid_613274 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613274 = validateParameter(valid_613274, JString, required = false,
                                 default = nil)
  if valid_613274 != nil:
    section.add "X-Amz-Content-Sha256", valid_613274
  var valid_613275 = header.getOrDefault("X-Amz-Date")
  valid_613275 = validateParameter(valid_613275, JString, required = false,
                                 default = nil)
  if valid_613275 != nil:
    section.add "X-Amz-Date", valid_613275
  var valid_613276 = header.getOrDefault("X-Amz-Credential")
  valid_613276 = validateParameter(valid_613276, JString, required = false,
                                 default = nil)
  if valid_613276 != nil:
    section.add "X-Amz-Credential", valid_613276
  var valid_613277 = header.getOrDefault("X-Amz-Security-Token")
  valid_613277 = validateParameter(valid_613277, JString, required = false,
                                 default = nil)
  if valid_613277 != nil:
    section.add "X-Amz-Security-Token", valid_613277
  var valid_613278 = header.getOrDefault("X-Amz-Algorithm")
  valid_613278 = validateParameter(valid_613278, JString, required = false,
                                 default = nil)
  if valid_613278 != nil:
    section.add "X-Amz-Algorithm", valid_613278
  var valid_613279 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613279 = validateParameter(valid_613279, JString, required = false,
                                 default = nil)
  if valid_613279 != nil:
    section.add "X-Amz-SignedHeaders", valid_613279
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_613280 = formData.getOrDefault("StackName")
  valid_613280 = validateParameter(valid_613280, JString, required = true,
                                 default = nil)
  if valid_613280 != nil:
    section.add "StackName", valid_613280
  var valid_613281 = formData.getOrDefault("ClientRequestToken")
  valid_613281 = validateParameter(valid_613281, JString, required = false,
                                 default = nil)
  if valid_613281 != nil:
    section.add "ClientRequestToken", valid_613281
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613282: Call_PostCancelUpdateStack_613268; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_613282.validator(path, query, header, formData, body)
  let scheme = call_613282.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613282.url(scheme.get, call_613282.host, call_613282.base,
                         call_613282.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613282, url, valid)

proc call*(call_613283: Call_PostCancelUpdateStack_613268; StackName: string;
          ClientRequestToken: string = ""; Action: string = "CancelUpdateStack";
          Version: string = "2010-05-15"): Recallable =
  ## postCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613284 = newJObject()
  var formData_613285 = newJObject()
  add(formData_613285, "StackName", newJString(StackName))
  add(formData_613285, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613284, "Action", newJString(Action))
  add(query_613284, "Version", newJString(Version))
  result = call_613283.call(nil, query_613284, nil, formData_613285, nil)

var postCancelUpdateStack* = Call_PostCancelUpdateStack_613268(
    name: "postCancelUpdateStack", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_PostCancelUpdateStack_613269, base: "/",
    url: url_PostCancelUpdateStack_613270, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCancelUpdateStack_612996 = ref object of OpenApiRestCall_612658
proc url_GetCancelUpdateStack_612998(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCancelUpdateStack_612997(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_613110 = query.getOrDefault("StackName")
  valid_613110 = validateParameter(valid_613110, JString, required = true,
                                 default = nil)
  if valid_613110 != nil:
    section.add "StackName", valid_613110
  var valid_613124 = query.getOrDefault("Action")
  valid_613124 = validateParameter(valid_613124, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_613124 != nil:
    section.add "Action", valid_613124
  var valid_613125 = query.getOrDefault("ClientRequestToken")
  valid_613125 = validateParameter(valid_613125, JString, required = false,
                                 default = nil)
  if valid_613125 != nil:
    section.add "ClientRequestToken", valid_613125
  var valid_613126 = query.getOrDefault("Version")
  valid_613126 = validateParameter(valid_613126, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613126 != nil:
    section.add "Version", valid_613126
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613127 = header.getOrDefault("X-Amz-Signature")
  valid_613127 = validateParameter(valid_613127, JString, required = false,
                                 default = nil)
  if valid_613127 != nil:
    section.add "X-Amz-Signature", valid_613127
  var valid_613128 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613128 = validateParameter(valid_613128, JString, required = false,
                                 default = nil)
  if valid_613128 != nil:
    section.add "X-Amz-Content-Sha256", valid_613128
  var valid_613129 = header.getOrDefault("X-Amz-Date")
  valid_613129 = validateParameter(valid_613129, JString, required = false,
                                 default = nil)
  if valid_613129 != nil:
    section.add "X-Amz-Date", valid_613129
  var valid_613130 = header.getOrDefault("X-Amz-Credential")
  valid_613130 = validateParameter(valid_613130, JString, required = false,
                                 default = nil)
  if valid_613130 != nil:
    section.add "X-Amz-Credential", valid_613130
  var valid_613131 = header.getOrDefault("X-Amz-Security-Token")
  valid_613131 = validateParameter(valid_613131, JString, required = false,
                                 default = nil)
  if valid_613131 != nil:
    section.add "X-Amz-Security-Token", valid_613131
  var valid_613132 = header.getOrDefault("X-Amz-Algorithm")
  valid_613132 = validateParameter(valid_613132, JString, required = false,
                                 default = nil)
  if valid_613132 != nil:
    section.add "X-Amz-Algorithm", valid_613132
  var valid_613133 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613133 = validateParameter(valid_613133, JString, required = false,
                                 default = nil)
  if valid_613133 != nil:
    section.add "X-Amz-SignedHeaders", valid_613133
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613156: Call_GetCancelUpdateStack_612996; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_613156.validator(path, query, header, formData, body)
  let scheme = call_613156.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613156.url(scheme.get, call_613156.host, call_613156.base,
                         call_613156.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613156, url, valid)

proc call*(call_613227: Call_GetCancelUpdateStack_612996; StackName: string;
          Action: string = "CancelUpdateStack"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  var query_613228 = newJObject()
  add(query_613228, "StackName", newJString(StackName))
  add(query_613228, "Action", newJString(Action))
  add(query_613228, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613228, "Version", newJString(Version))
  result = call_613227.call(nil, query_613228, nil, nil, nil)

var getCancelUpdateStack* = Call_GetCancelUpdateStack_612996(
    name: "getCancelUpdateStack", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_GetCancelUpdateStack_612997, base: "/",
    url: url_GetCancelUpdateStack_612998, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostContinueUpdateRollback_613305 = ref object of OpenApiRestCall_612658
proc url_PostContinueUpdateRollback_613307(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostContinueUpdateRollback_613306(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613308 = query.getOrDefault("Action")
  valid_613308 = validateParameter(valid_613308, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_613308 != nil:
    section.add "Action", valid_613308
  var valid_613309 = query.getOrDefault("Version")
  valid_613309 = validateParameter(valid_613309, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613309 != nil:
    section.add "Version", valid_613309
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613310 = header.getOrDefault("X-Amz-Signature")
  valid_613310 = validateParameter(valid_613310, JString, required = false,
                                 default = nil)
  if valid_613310 != nil:
    section.add "X-Amz-Signature", valid_613310
  var valid_613311 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613311 = validateParameter(valid_613311, JString, required = false,
                                 default = nil)
  if valid_613311 != nil:
    section.add "X-Amz-Content-Sha256", valid_613311
  var valid_613312 = header.getOrDefault("X-Amz-Date")
  valid_613312 = validateParameter(valid_613312, JString, required = false,
                                 default = nil)
  if valid_613312 != nil:
    section.add "X-Amz-Date", valid_613312
  var valid_613313 = header.getOrDefault("X-Amz-Credential")
  valid_613313 = validateParameter(valid_613313, JString, required = false,
                                 default = nil)
  if valid_613313 != nil:
    section.add "X-Amz-Credential", valid_613313
  var valid_613314 = header.getOrDefault("X-Amz-Security-Token")
  valid_613314 = validateParameter(valid_613314, JString, required = false,
                                 default = nil)
  if valid_613314 != nil:
    section.add "X-Amz-Security-Token", valid_613314
  var valid_613315 = header.getOrDefault("X-Amz-Algorithm")
  valid_613315 = validateParameter(valid_613315, JString, required = false,
                                 default = nil)
  if valid_613315 != nil:
    section.add "X-Amz-Algorithm", valid_613315
  var valid_613316 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613316 = validateParameter(valid_613316, JString, required = false,
                                 default = nil)
  if valid_613316 != nil:
    section.add "X-Amz-SignedHeaders", valid_613316
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_613317 = formData.getOrDefault("StackName")
  valid_613317 = validateParameter(valid_613317, JString, required = true,
                                 default = nil)
  if valid_613317 != nil:
    section.add "StackName", valid_613317
  var valid_613318 = formData.getOrDefault("RoleARN")
  valid_613318 = validateParameter(valid_613318, JString, required = false,
                                 default = nil)
  if valid_613318 != nil:
    section.add "RoleARN", valid_613318
  var valid_613319 = formData.getOrDefault("ClientRequestToken")
  valid_613319 = validateParameter(valid_613319, JString, required = false,
                                 default = nil)
  if valid_613319 != nil:
    section.add "ClientRequestToken", valid_613319
  var valid_613320 = formData.getOrDefault("ResourcesToSkip")
  valid_613320 = validateParameter(valid_613320, JArray, required = false,
                                 default = nil)
  if valid_613320 != nil:
    section.add "ResourcesToSkip", valid_613320
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613321: Call_PostContinueUpdateRollback_613305; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_613321.validator(path, query, header, formData, body)
  let scheme = call_613321.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613321.url(scheme.get, call_613321.host, call_613321.base,
                         call_613321.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613321, url, valid)

proc call*(call_613322: Call_PostContinueUpdateRollback_613305; StackName: string;
          RoleARN: string = ""; ClientRequestToken: string = "";
          Action: string = "ContinueUpdateRollback";
          ResourcesToSkip: JsonNode = nil; Version: string = "2010-05-15"): Recallable =
  ## postContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   Version: string (required)
  var query_613323 = newJObject()
  var formData_613324 = newJObject()
  add(formData_613324, "StackName", newJString(StackName))
  add(formData_613324, "RoleARN", newJString(RoleARN))
  add(formData_613324, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613323, "Action", newJString(Action))
  if ResourcesToSkip != nil:
    formData_613324.add "ResourcesToSkip", ResourcesToSkip
  add(query_613323, "Version", newJString(Version))
  result = call_613322.call(nil, query_613323, nil, formData_613324, nil)

var postContinueUpdateRollback* = Call_PostContinueUpdateRollback_613305(
    name: "postContinueUpdateRollback", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_PostContinueUpdateRollback_613306, base: "/",
    url: url_PostContinueUpdateRollback_613307,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetContinueUpdateRollback_613286 = ref object of OpenApiRestCall_612658
proc url_GetContinueUpdateRollback_613288(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetContinueUpdateRollback_613287(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_613289 = query.getOrDefault("ResourcesToSkip")
  valid_613289 = validateParameter(valid_613289, JArray, required = false,
                                 default = nil)
  if valid_613289 != nil:
    section.add "ResourcesToSkip", valid_613289
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_613290 = query.getOrDefault("StackName")
  valid_613290 = validateParameter(valid_613290, JString, required = true,
                                 default = nil)
  if valid_613290 != nil:
    section.add "StackName", valid_613290
  var valid_613291 = query.getOrDefault("Action")
  valid_613291 = validateParameter(valid_613291, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_613291 != nil:
    section.add "Action", valid_613291
  var valid_613292 = query.getOrDefault("ClientRequestToken")
  valid_613292 = validateParameter(valid_613292, JString, required = false,
                                 default = nil)
  if valid_613292 != nil:
    section.add "ClientRequestToken", valid_613292
  var valid_613293 = query.getOrDefault("Version")
  valid_613293 = validateParameter(valid_613293, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613293 != nil:
    section.add "Version", valid_613293
  var valid_613294 = query.getOrDefault("RoleARN")
  valid_613294 = validateParameter(valid_613294, JString, required = false,
                                 default = nil)
  if valid_613294 != nil:
    section.add "RoleARN", valid_613294
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613295 = header.getOrDefault("X-Amz-Signature")
  valid_613295 = validateParameter(valid_613295, JString, required = false,
                                 default = nil)
  if valid_613295 != nil:
    section.add "X-Amz-Signature", valid_613295
  var valid_613296 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613296 = validateParameter(valid_613296, JString, required = false,
                                 default = nil)
  if valid_613296 != nil:
    section.add "X-Amz-Content-Sha256", valid_613296
  var valid_613297 = header.getOrDefault("X-Amz-Date")
  valid_613297 = validateParameter(valid_613297, JString, required = false,
                                 default = nil)
  if valid_613297 != nil:
    section.add "X-Amz-Date", valid_613297
  var valid_613298 = header.getOrDefault("X-Amz-Credential")
  valid_613298 = validateParameter(valid_613298, JString, required = false,
                                 default = nil)
  if valid_613298 != nil:
    section.add "X-Amz-Credential", valid_613298
  var valid_613299 = header.getOrDefault("X-Amz-Security-Token")
  valid_613299 = validateParameter(valid_613299, JString, required = false,
                                 default = nil)
  if valid_613299 != nil:
    section.add "X-Amz-Security-Token", valid_613299
  var valid_613300 = header.getOrDefault("X-Amz-Algorithm")
  valid_613300 = validateParameter(valid_613300, JString, required = false,
                                 default = nil)
  if valid_613300 != nil:
    section.add "X-Amz-Algorithm", valid_613300
  var valid_613301 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613301 = validateParameter(valid_613301, JString, required = false,
                                 default = nil)
  if valid_613301 != nil:
    section.add "X-Amz-SignedHeaders", valid_613301
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613302: Call_GetContinueUpdateRollback_613286; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_613302.validator(path, query, header, formData, body)
  let scheme = call_613302.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613302.url(scheme.get, call_613302.host, call_613302.base,
                         call_613302.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613302, url, valid)

proc call*(call_613303: Call_GetContinueUpdateRollback_613286; StackName: string;
          ResourcesToSkip: JsonNode = nil;
          Action: string = "ContinueUpdateRollback";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## getContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_613304 = newJObject()
  if ResourcesToSkip != nil:
    query_613304.add "ResourcesToSkip", ResourcesToSkip
  add(query_613304, "StackName", newJString(StackName))
  add(query_613304, "Action", newJString(Action))
  add(query_613304, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613304, "Version", newJString(Version))
  add(query_613304, "RoleARN", newJString(RoleARN))
  result = call_613303.call(nil, query_613304, nil, nil, nil)

var getContinueUpdateRollback* = Call_GetContinueUpdateRollback_613286(
    name: "getContinueUpdateRollback", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_GetContinueUpdateRollback_613287, base: "/",
    url: url_GetContinueUpdateRollback_613288,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateChangeSet_613357 = ref object of OpenApiRestCall_612658
proc url_PostCreateChangeSet_613359(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateChangeSet_613358(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613360 = query.getOrDefault("Action")
  valid_613360 = validateParameter(valid_613360, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_613360 != nil:
    section.add "Action", valid_613360
  var valid_613361 = query.getOrDefault("Version")
  valid_613361 = validateParameter(valid_613361, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613361 != nil:
    section.add "Version", valid_613361
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613362 = header.getOrDefault("X-Amz-Signature")
  valid_613362 = validateParameter(valid_613362, JString, required = false,
                                 default = nil)
  if valid_613362 != nil:
    section.add "X-Amz-Signature", valid_613362
  var valid_613363 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613363 = validateParameter(valid_613363, JString, required = false,
                                 default = nil)
  if valid_613363 != nil:
    section.add "X-Amz-Content-Sha256", valid_613363
  var valid_613364 = header.getOrDefault("X-Amz-Date")
  valid_613364 = validateParameter(valid_613364, JString, required = false,
                                 default = nil)
  if valid_613364 != nil:
    section.add "X-Amz-Date", valid_613364
  var valid_613365 = header.getOrDefault("X-Amz-Credential")
  valid_613365 = validateParameter(valid_613365, JString, required = false,
                                 default = nil)
  if valid_613365 != nil:
    section.add "X-Amz-Credential", valid_613365
  var valid_613366 = header.getOrDefault("X-Amz-Security-Token")
  valid_613366 = validateParameter(valid_613366, JString, required = false,
                                 default = nil)
  if valid_613366 != nil:
    section.add "X-Amz-Security-Token", valid_613366
  var valid_613367 = header.getOrDefault("X-Amz-Algorithm")
  valid_613367 = validateParameter(valid_613367, JString, required = false,
                                 default = nil)
  if valid_613367 != nil:
    section.add "X-Amz-Algorithm", valid_613367
  var valid_613368 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613368 = validateParameter(valid_613368, JString, required = false,
                                 default = nil)
  if valid_613368 != nil:
    section.add "X-Amz-SignedHeaders", valid_613368
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_613369 = formData.getOrDefault("StackName")
  valid_613369 = validateParameter(valid_613369, JString, required = true,
                                 default = nil)
  if valid_613369 != nil:
    section.add "StackName", valid_613369
  var valid_613370 = formData.getOrDefault("ChangeSetName")
  valid_613370 = validateParameter(valid_613370, JString, required = true,
                                 default = nil)
  if valid_613370 != nil:
    section.add "ChangeSetName", valid_613370
  var valid_613371 = formData.getOrDefault("Description")
  valid_613371 = validateParameter(valid_613371, JString, required = false,
                                 default = nil)
  if valid_613371 != nil:
    section.add "Description", valid_613371
  var valid_613372 = formData.getOrDefault("UsePreviousTemplate")
  valid_613372 = validateParameter(valid_613372, JBool, required = false, default = nil)
  if valid_613372 != nil:
    section.add "UsePreviousTemplate", valid_613372
  var valid_613373 = formData.getOrDefault("TemplateURL")
  valid_613373 = validateParameter(valid_613373, JString, required = false,
                                 default = nil)
  if valid_613373 != nil:
    section.add "TemplateURL", valid_613373
  var valid_613374 = formData.getOrDefault("TemplateBody")
  valid_613374 = validateParameter(valid_613374, JString, required = false,
                                 default = nil)
  if valid_613374 != nil:
    section.add "TemplateBody", valid_613374
  var valid_613375 = formData.getOrDefault("RoleARN")
  valid_613375 = validateParameter(valid_613375, JString, required = false,
                                 default = nil)
  if valid_613375 != nil:
    section.add "RoleARN", valid_613375
  var valid_613376 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_613376 = validateParameter(valid_613376, JArray, required = false,
                                 default = nil)
  if valid_613376 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_613376
  var valid_613377 = formData.getOrDefault("NotificationARNs")
  valid_613377 = validateParameter(valid_613377, JArray, required = false,
                                 default = nil)
  if valid_613377 != nil:
    section.add "NotificationARNs", valid_613377
  var valid_613378 = formData.getOrDefault("Capabilities")
  valid_613378 = validateParameter(valid_613378, JArray, required = false,
                                 default = nil)
  if valid_613378 != nil:
    section.add "Capabilities", valid_613378
  var valid_613379 = formData.getOrDefault("Tags")
  valid_613379 = validateParameter(valid_613379, JArray, required = false,
                                 default = nil)
  if valid_613379 != nil:
    section.add "Tags", valid_613379
  var valid_613380 = formData.getOrDefault("Parameters")
  valid_613380 = validateParameter(valid_613380, JArray, required = false,
                                 default = nil)
  if valid_613380 != nil:
    section.add "Parameters", valid_613380
  var valid_613381 = formData.getOrDefault("ChangeSetType")
  valid_613381 = validateParameter(valid_613381, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_613381 != nil:
    section.add "ChangeSetType", valid_613381
  var valid_613382 = formData.getOrDefault("ResourceTypes")
  valid_613382 = validateParameter(valid_613382, JArray, required = false,
                                 default = nil)
  if valid_613382 != nil:
    section.add "ResourceTypes", valid_613382
  var valid_613383 = formData.getOrDefault("ClientToken")
  valid_613383 = validateParameter(valid_613383, JString, required = false,
                                 default = nil)
  if valid_613383 != nil:
    section.add "ClientToken", valid_613383
  var valid_613384 = formData.getOrDefault("ResourcesToImport")
  valid_613384 = validateParameter(valid_613384, JArray, required = false,
                                 default = nil)
  if valid_613384 != nil:
    section.add "ResourcesToImport", valid_613384
  var valid_613385 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_613385 = validateParameter(valid_613385, JString, required = false,
                                 default = nil)
  if valid_613385 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_613385
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613386: Call_PostCreateChangeSet_613357; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_613386.validator(path, query, header, formData, body)
  let scheme = call_613386.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613386.url(scheme.get, call_613386.host, call_613386.base,
                         call_613386.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613386, url, valid)

proc call*(call_613387: Call_PostCreateChangeSet_613357; StackName: string;
          ChangeSetName: string; Description: string = "";
          UsePreviousTemplate: bool = false; TemplateURL: string = "";
          TemplateBody: string = ""; RoleARN: string = "";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; Action: string = "CreateChangeSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil; ChangeSetType: string = "CREATE";
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          ClientToken: string = ""; ResourcesToImport: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   Version: string (required)
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_613388 = newJObject()
  var formData_613389 = newJObject()
  add(formData_613389, "StackName", newJString(StackName))
  add(formData_613389, "ChangeSetName", newJString(ChangeSetName))
  add(formData_613389, "Description", newJString(Description))
  add(formData_613389, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(formData_613389, "TemplateURL", newJString(TemplateURL))
  add(formData_613389, "TemplateBody", newJString(TemplateBody))
  add(formData_613389, "RoleARN", newJString(RoleARN))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_613389.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_613389.add "NotificationARNs", NotificationARNs
  add(query_613388, "Action", newJString(Action))
  if Capabilities != nil:
    formData_613389.add "Capabilities", Capabilities
  if Tags != nil:
    formData_613389.add "Tags", Tags
  if Parameters != nil:
    formData_613389.add "Parameters", Parameters
  add(formData_613389, "ChangeSetType", newJString(ChangeSetType))
  if ResourceTypes != nil:
    formData_613389.add "ResourceTypes", ResourceTypes
  add(query_613388, "Version", newJString(Version))
  add(formData_613389, "ClientToken", newJString(ClientToken))
  if ResourcesToImport != nil:
    formData_613389.add "ResourcesToImport", ResourcesToImport
  add(formData_613389, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_613387.call(nil, query_613388, nil, formData_613389, nil)

var postCreateChangeSet* = Call_PostCreateChangeSet_613357(
    name: "postCreateChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_PostCreateChangeSet_613358, base: "/",
    url: url_PostCreateChangeSet_613359, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateChangeSet_613325 = ref object of OpenApiRestCall_612658
proc url_GetCreateChangeSet_613327(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateChangeSet_613326(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  var valid_613328 = query.getOrDefault("ResourceTypes")
  valid_613328 = validateParameter(valid_613328, JArray, required = false,
                                 default = nil)
  if valid_613328 != nil:
    section.add "ResourceTypes", valid_613328
  var valid_613329 = query.getOrDefault("RoleARN")
  valid_613329 = validateParameter(valid_613329, JString, required = false,
                                 default = nil)
  if valid_613329 != nil:
    section.add "RoleARN", valid_613329
  var valid_613330 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_613330 = validateParameter(valid_613330, JString, required = false,
                                 default = nil)
  if valid_613330 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_613330
  var valid_613331 = query.getOrDefault("Parameters")
  valid_613331 = validateParameter(valid_613331, JArray, required = false,
                                 default = nil)
  if valid_613331 != nil:
    section.add "Parameters", valid_613331
  var valid_613332 = query.getOrDefault("Tags")
  valid_613332 = validateParameter(valid_613332, JArray, required = false,
                                 default = nil)
  if valid_613332 != nil:
    section.add "Tags", valid_613332
  var valid_613333 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_613333 = validateParameter(valid_613333, JArray, required = false,
                                 default = nil)
  if valid_613333 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_613333
  var valid_613334 = query.getOrDefault("ChangeSetType")
  valid_613334 = validateParameter(valid_613334, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_613334 != nil:
    section.add "ChangeSetType", valid_613334
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_613335 = query.getOrDefault("StackName")
  valid_613335 = validateParameter(valid_613335, JString, required = true,
                                 default = nil)
  if valid_613335 != nil:
    section.add "StackName", valid_613335
  var valid_613336 = query.getOrDefault("UsePreviousTemplate")
  valid_613336 = validateParameter(valid_613336, JBool, required = false, default = nil)
  if valid_613336 != nil:
    section.add "UsePreviousTemplate", valid_613336
  var valid_613337 = query.getOrDefault("TemplateBody")
  valid_613337 = validateParameter(valid_613337, JString, required = false,
                                 default = nil)
  if valid_613337 != nil:
    section.add "TemplateBody", valid_613337
  var valid_613338 = query.getOrDefault("ResourcesToImport")
  valid_613338 = validateParameter(valid_613338, JArray, required = false,
                                 default = nil)
  if valid_613338 != nil:
    section.add "ResourcesToImport", valid_613338
  var valid_613339 = query.getOrDefault("NotificationARNs")
  valid_613339 = validateParameter(valid_613339, JArray, required = false,
                                 default = nil)
  if valid_613339 != nil:
    section.add "NotificationARNs", valid_613339
  var valid_613340 = query.getOrDefault("Action")
  valid_613340 = validateParameter(valid_613340, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_613340 != nil:
    section.add "Action", valid_613340
  var valid_613341 = query.getOrDefault("Description")
  valid_613341 = validateParameter(valid_613341, JString, required = false,
                                 default = nil)
  if valid_613341 != nil:
    section.add "Description", valid_613341
  var valid_613342 = query.getOrDefault("TemplateURL")
  valid_613342 = validateParameter(valid_613342, JString, required = false,
                                 default = nil)
  if valid_613342 != nil:
    section.add "TemplateURL", valid_613342
  var valid_613343 = query.getOrDefault("ChangeSetName")
  valid_613343 = validateParameter(valid_613343, JString, required = true,
                                 default = nil)
  if valid_613343 != nil:
    section.add "ChangeSetName", valid_613343
  var valid_613344 = query.getOrDefault("Version")
  valid_613344 = validateParameter(valid_613344, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613344 != nil:
    section.add "Version", valid_613344
  var valid_613345 = query.getOrDefault("Capabilities")
  valid_613345 = validateParameter(valid_613345, JArray, required = false,
                                 default = nil)
  if valid_613345 != nil:
    section.add "Capabilities", valid_613345
  var valid_613346 = query.getOrDefault("ClientToken")
  valid_613346 = validateParameter(valid_613346, JString, required = false,
                                 default = nil)
  if valid_613346 != nil:
    section.add "ClientToken", valid_613346
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613347 = header.getOrDefault("X-Amz-Signature")
  valid_613347 = validateParameter(valid_613347, JString, required = false,
                                 default = nil)
  if valid_613347 != nil:
    section.add "X-Amz-Signature", valid_613347
  var valid_613348 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613348 = validateParameter(valid_613348, JString, required = false,
                                 default = nil)
  if valid_613348 != nil:
    section.add "X-Amz-Content-Sha256", valid_613348
  var valid_613349 = header.getOrDefault("X-Amz-Date")
  valid_613349 = validateParameter(valid_613349, JString, required = false,
                                 default = nil)
  if valid_613349 != nil:
    section.add "X-Amz-Date", valid_613349
  var valid_613350 = header.getOrDefault("X-Amz-Credential")
  valid_613350 = validateParameter(valid_613350, JString, required = false,
                                 default = nil)
  if valid_613350 != nil:
    section.add "X-Amz-Credential", valid_613350
  var valid_613351 = header.getOrDefault("X-Amz-Security-Token")
  valid_613351 = validateParameter(valid_613351, JString, required = false,
                                 default = nil)
  if valid_613351 != nil:
    section.add "X-Amz-Security-Token", valid_613351
  var valid_613352 = header.getOrDefault("X-Amz-Algorithm")
  valid_613352 = validateParameter(valid_613352, JString, required = false,
                                 default = nil)
  if valid_613352 != nil:
    section.add "X-Amz-Algorithm", valid_613352
  var valid_613353 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613353 = validateParameter(valid_613353, JString, required = false,
                                 default = nil)
  if valid_613353 != nil:
    section.add "X-Amz-SignedHeaders", valid_613353
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613354: Call_GetCreateChangeSet_613325; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_613354.validator(path, query, header, formData, body)
  let scheme = call_613354.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613354.url(scheme.get, call_613354.host, call_613354.base,
                         call_613354.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613354, url, valid)

proc call*(call_613355: Call_GetCreateChangeSet_613325; StackName: string;
          ChangeSetName: string; ResourceTypes: JsonNode = nil; RoleARN: string = "";
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          ChangeSetType: string = "CREATE"; UsePreviousTemplate: bool = false;
          TemplateBody: string = ""; ResourcesToImport: JsonNode = nil;
          NotificationARNs: JsonNode = nil; Action: string = "CreateChangeSet";
          Description: string = ""; TemplateURL: string = "";
          Version: string = "2010-05-15"; Capabilities: JsonNode = nil;
          ClientToken: string = ""): Recallable =
  ## getCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: string (required)
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  var query_613356 = newJObject()
  if ResourceTypes != nil:
    query_613356.add "ResourceTypes", ResourceTypes
  add(query_613356, "RoleARN", newJString(RoleARN))
  add(query_613356, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_613356.add "Parameters", Parameters
  if Tags != nil:
    query_613356.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_613356.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_613356, "ChangeSetType", newJString(ChangeSetType))
  add(query_613356, "StackName", newJString(StackName))
  add(query_613356, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_613356, "TemplateBody", newJString(TemplateBody))
  if ResourcesToImport != nil:
    query_613356.add "ResourcesToImport", ResourcesToImport
  if NotificationARNs != nil:
    query_613356.add "NotificationARNs", NotificationARNs
  add(query_613356, "Action", newJString(Action))
  add(query_613356, "Description", newJString(Description))
  add(query_613356, "TemplateURL", newJString(TemplateURL))
  add(query_613356, "ChangeSetName", newJString(ChangeSetName))
  add(query_613356, "Version", newJString(Version))
  if Capabilities != nil:
    query_613356.add "Capabilities", Capabilities
  add(query_613356, "ClientToken", newJString(ClientToken))
  result = call_613355.call(nil, query_613356, nil, nil, nil)

var getCreateChangeSet* = Call_GetCreateChangeSet_613325(
    name: "getCreateChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_GetCreateChangeSet_613326, base: "/",
    url: url_GetCreateChangeSet_613327, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStack_613423 = ref object of OpenApiRestCall_612658
proc url_PostCreateStack_613425(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStack_613424(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613426 = query.getOrDefault("Action")
  valid_613426 = validateParameter(valid_613426, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_613426 != nil:
    section.add "Action", valid_613426
  var valid_613427 = query.getOrDefault("Version")
  valid_613427 = validateParameter(valid_613427, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613427 != nil:
    section.add "Version", valid_613427
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613428 = header.getOrDefault("X-Amz-Signature")
  valid_613428 = validateParameter(valid_613428, JString, required = false,
                                 default = nil)
  if valid_613428 != nil:
    section.add "X-Amz-Signature", valid_613428
  var valid_613429 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613429 = validateParameter(valid_613429, JString, required = false,
                                 default = nil)
  if valid_613429 != nil:
    section.add "X-Amz-Content-Sha256", valid_613429
  var valid_613430 = header.getOrDefault("X-Amz-Date")
  valid_613430 = validateParameter(valid_613430, JString, required = false,
                                 default = nil)
  if valid_613430 != nil:
    section.add "X-Amz-Date", valid_613430
  var valid_613431 = header.getOrDefault("X-Amz-Credential")
  valid_613431 = validateParameter(valid_613431, JString, required = false,
                                 default = nil)
  if valid_613431 != nil:
    section.add "X-Amz-Credential", valid_613431
  var valid_613432 = header.getOrDefault("X-Amz-Security-Token")
  valid_613432 = validateParameter(valid_613432, JString, required = false,
                                 default = nil)
  if valid_613432 != nil:
    section.add "X-Amz-Security-Token", valid_613432
  var valid_613433 = header.getOrDefault("X-Amz-Algorithm")
  valid_613433 = validateParameter(valid_613433, JString, required = false,
                                 default = nil)
  if valid_613433 != nil:
    section.add "X-Amz-Algorithm", valid_613433
  var valid_613434 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613434 = validateParameter(valid_613434, JString, required = false,
                                 default = nil)
  if valid_613434 != nil:
    section.add "X-Amz-SignedHeaders", valid_613434
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  var valid_613435 = formData.getOrDefault("StackPolicyBody")
  valid_613435 = validateParameter(valid_613435, JString, required = false,
                                 default = nil)
  if valid_613435 != nil:
    section.add "StackPolicyBody", valid_613435
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_613436 = formData.getOrDefault("StackName")
  valid_613436 = validateParameter(valid_613436, JString, required = true,
                                 default = nil)
  if valid_613436 != nil:
    section.add "StackName", valid_613436
  var valid_613437 = formData.getOrDefault("DisableRollback")
  valid_613437 = validateParameter(valid_613437, JBool, required = false, default = nil)
  if valid_613437 != nil:
    section.add "DisableRollback", valid_613437
  var valid_613438 = formData.getOrDefault("StackPolicyURL")
  valid_613438 = validateParameter(valid_613438, JString, required = false,
                                 default = nil)
  if valid_613438 != nil:
    section.add "StackPolicyURL", valid_613438
  var valid_613439 = formData.getOrDefault("TemplateURL")
  valid_613439 = validateParameter(valid_613439, JString, required = false,
                                 default = nil)
  if valid_613439 != nil:
    section.add "TemplateURL", valid_613439
  var valid_613440 = formData.getOrDefault("EnableTerminationProtection")
  valid_613440 = validateParameter(valid_613440, JBool, required = false, default = nil)
  if valid_613440 != nil:
    section.add "EnableTerminationProtection", valid_613440
  var valid_613441 = formData.getOrDefault("TemplateBody")
  valid_613441 = validateParameter(valid_613441, JString, required = false,
                                 default = nil)
  if valid_613441 != nil:
    section.add "TemplateBody", valid_613441
  var valid_613442 = formData.getOrDefault("RoleARN")
  valid_613442 = validateParameter(valid_613442, JString, required = false,
                                 default = nil)
  if valid_613442 != nil:
    section.add "RoleARN", valid_613442
  var valid_613443 = formData.getOrDefault("OnFailure")
  valid_613443 = validateParameter(valid_613443, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_613443 != nil:
    section.add "OnFailure", valid_613443
  var valid_613444 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_613444 = validateParameter(valid_613444, JArray, required = false,
                                 default = nil)
  if valid_613444 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_613444
  var valid_613445 = formData.getOrDefault("NotificationARNs")
  valid_613445 = validateParameter(valid_613445, JArray, required = false,
                                 default = nil)
  if valid_613445 != nil:
    section.add "NotificationARNs", valid_613445
  var valid_613446 = formData.getOrDefault("ClientRequestToken")
  valid_613446 = validateParameter(valid_613446, JString, required = false,
                                 default = nil)
  if valid_613446 != nil:
    section.add "ClientRequestToken", valid_613446
  var valid_613447 = formData.getOrDefault("Capabilities")
  valid_613447 = validateParameter(valid_613447, JArray, required = false,
                                 default = nil)
  if valid_613447 != nil:
    section.add "Capabilities", valid_613447
  var valid_613448 = formData.getOrDefault("TimeoutInMinutes")
  valid_613448 = validateParameter(valid_613448, JInt, required = false, default = nil)
  if valid_613448 != nil:
    section.add "TimeoutInMinutes", valid_613448
  var valid_613449 = formData.getOrDefault("Parameters")
  valid_613449 = validateParameter(valid_613449, JArray, required = false,
                                 default = nil)
  if valid_613449 != nil:
    section.add "Parameters", valid_613449
  var valid_613450 = formData.getOrDefault("Tags")
  valid_613450 = validateParameter(valid_613450, JArray, required = false,
                                 default = nil)
  if valid_613450 != nil:
    section.add "Tags", valid_613450
  var valid_613451 = formData.getOrDefault("ResourceTypes")
  valid_613451 = validateParameter(valid_613451, JArray, required = false,
                                 default = nil)
  if valid_613451 != nil:
    section.add "ResourceTypes", valid_613451
  var valid_613452 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_613452 = validateParameter(valid_613452, JString, required = false,
                                 default = nil)
  if valid_613452 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_613452
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613453: Call_PostCreateStack_613423; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_613453.validator(path, query, header, formData, body)
  let scheme = call_613453.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613453.url(scheme.get, call_613453.host, call_613453.base,
                         call_613453.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613453, url, valid)

proc call*(call_613454: Call_PostCreateStack_613423; StackName: string;
          StackPolicyBody: string = ""; DisableRollback: bool = false;
          StackPolicyURL: string = ""; TemplateURL: string = "";
          EnableTerminationProtection: bool = false; TemplateBody: string = "";
          RoleARN: string = ""; OnFailure: string = "DO_NOTHING";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; ClientRequestToken: string = "";
          Action: string = "CreateStack"; Capabilities: JsonNode = nil;
          TimeoutInMinutes: int = 0; Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_613455 = newJObject()
  var formData_613456 = newJObject()
  add(formData_613456, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_613456, "StackName", newJString(StackName))
  add(formData_613456, "DisableRollback", newJBool(DisableRollback))
  add(formData_613456, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_613456, "TemplateURL", newJString(TemplateURL))
  add(formData_613456, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(formData_613456, "TemplateBody", newJString(TemplateBody))
  add(formData_613456, "RoleARN", newJString(RoleARN))
  add(formData_613456, "OnFailure", newJString(OnFailure))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_613456.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_613456.add "NotificationARNs", NotificationARNs
  add(formData_613456, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613455, "Action", newJString(Action))
  if Capabilities != nil:
    formData_613456.add "Capabilities", Capabilities
  add(formData_613456, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  if Parameters != nil:
    formData_613456.add "Parameters", Parameters
  if Tags != nil:
    formData_613456.add "Tags", Tags
  if ResourceTypes != nil:
    formData_613456.add "ResourceTypes", ResourceTypes
  add(query_613455, "Version", newJString(Version))
  add(formData_613456, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_613454.call(nil, query_613455, nil, formData_613456, nil)

var postCreateStack* = Call_PostCreateStack_613423(name: "postCreateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_PostCreateStack_613424,
    base: "/", url: url_PostCreateStack_613425, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStack_613390 = ref object of OpenApiRestCall_612658
proc url_GetCreateStack_613392(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStack_613391(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_613393 = query.getOrDefault("ResourceTypes")
  valid_613393 = validateParameter(valid_613393, JArray, required = false,
                                 default = nil)
  if valid_613393 != nil:
    section.add "ResourceTypes", valid_613393
  var valid_613394 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_613394 = validateParameter(valid_613394, JString, required = false,
                                 default = nil)
  if valid_613394 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_613394
  var valid_613395 = query.getOrDefault("Parameters")
  valid_613395 = validateParameter(valid_613395, JArray, required = false,
                                 default = nil)
  if valid_613395 != nil:
    section.add "Parameters", valid_613395
  var valid_613396 = query.getOrDefault("Tags")
  valid_613396 = validateParameter(valid_613396, JArray, required = false,
                                 default = nil)
  if valid_613396 != nil:
    section.add "Tags", valid_613396
  var valid_613397 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_613397 = validateParameter(valid_613397, JArray, required = false,
                                 default = nil)
  if valid_613397 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_613397
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_613398 = query.getOrDefault("StackName")
  valid_613398 = validateParameter(valid_613398, JString, required = true,
                                 default = nil)
  if valid_613398 != nil:
    section.add "StackName", valid_613398
  var valid_613399 = query.getOrDefault("EnableTerminationProtection")
  valid_613399 = validateParameter(valid_613399, JBool, required = false, default = nil)
  if valid_613399 != nil:
    section.add "EnableTerminationProtection", valid_613399
  var valid_613400 = query.getOrDefault("TimeoutInMinutes")
  valid_613400 = validateParameter(valid_613400, JInt, required = false, default = nil)
  if valid_613400 != nil:
    section.add "TimeoutInMinutes", valid_613400
  var valid_613401 = query.getOrDefault("StackPolicyBody")
  valid_613401 = validateParameter(valid_613401, JString, required = false,
                                 default = nil)
  if valid_613401 != nil:
    section.add "StackPolicyBody", valid_613401
  var valid_613402 = query.getOrDefault("TemplateBody")
  valid_613402 = validateParameter(valid_613402, JString, required = false,
                                 default = nil)
  if valid_613402 != nil:
    section.add "TemplateBody", valid_613402
  var valid_613403 = query.getOrDefault("DisableRollback")
  valid_613403 = validateParameter(valid_613403, JBool, required = false, default = nil)
  if valid_613403 != nil:
    section.add "DisableRollback", valid_613403
  var valid_613404 = query.getOrDefault("NotificationARNs")
  valid_613404 = validateParameter(valid_613404, JArray, required = false,
                                 default = nil)
  if valid_613404 != nil:
    section.add "NotificationARNs", valid_613404
  var valid_613405 = query.getOrDefault("OnFailure")
  valid_613405 = validateParameter(valid_613405, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_613405 != nil:
    section.add "OnFailure", valid_613405
  var valid_613406 = query.getOrDefault("StackPolicyURL")
  valid_613406 = validateParameter(valid_613406, JString, required = false,
                                 default = nil)
  if valid_613406 != nil:
    section.add "StackPolicyURL", valid_613406
  var valid_613407 = query.getOrDefault("Action")
  valid_613407 = validateParameter(valid_613407, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_613407 != nil:
    section.add "Action", valid_613407
  var valid_613408 = query.getOrDefault("ClientRequestToken")
  valid_613408 = validateParameter(valid_613408, JString, required = false,
                                 default = nil)
  if valid_613408 != nil:
    section.add "ClientRequestToken", valid_613408
  var valid_613409 = query.getOrDefault("TemplateURL")
  valid_613409 = validateParameter(valid_613409, JString, required = false,
                                 default = nil)
  if valid_613409 != nil:
    section.add "TemplateURL", valid_613409
  var valid_613410 = query.getOrDefault("Version")
  valid_613410 = validateParameter(valid_613410, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613410 != nil:
    section.add "Version", valid_613410
  var valid_613411 = query.getOrDefault("Capabilities")
  valid_613411 = validateParameter(valid_613411, JArray, required = false,
                                 default = nil)
  if valid_613411 != nil:
    section.add "Capabilities", valid_613411
  var valid_613412 = query.getOrDefault("RoleARN")
  valid_613412 = validateParameter(valid_613412, JString, required = false,
                                 default = nil)
  if valid_613412 != nil:
    section.add "RoleARN", valid_613412
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613413 = header.getOrDefault("X-Amz-Signature")
  valid_613413 = validateParameter(valid_613413, JString, required = false,
                                 default = nil)
  if valid_613413 != nil:
    section.add "X-Amz-Signature", valid_613413
  var valid_613414 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613414 = validateParameter(valid_613414, JString, required = false,
                                 default = nil)
  if valid_613414 != nil:
    section.add "X-Amz-Content-Sha256", valid_613414
  var valid_613415 = header.getOrDefault("X-Amz-Date")
  valid_613415 = validateParameter(valid_613415, JString, required = false,
                                 default = nil)
  if valid_613415 != nil:
    section.add "X-Amz-Date", valid_613415
  var valid_613416 = header.getOrDefault("X-Amz-Credential")
  valid_613416 = validateParameter(valid_613416, JString, required = false,
                                 default = nil)
  if valid_613416 != nil:
    section.add "X-Amz-Credential", valid_613416
  var valid_613417 = header.getOrDefault("X-Amz-Security-Token")
  valid_613417 = validateParameter(valid_613417, JString, required = false,
                                 default = nil)
  if valid_613417 != nil:
    section.add "X-Amz-Security-Token", valid_613417
  var valid_613418 = header.getOrDefault("X-Amz-Algorithm")
  valid_613418 = validateParameter(valid_613418, JString, required = false,
                                 default = nil)
  if valid_613418 != nil:
    section.add "X-Amz-Algorithm", valid_613418
  var valid_613419 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613419 = validateParameter(valid_613419, JString, required = false,
                                 default = nil)
  if valid_613419 != nil:
    section.add "X-Amz-SignedHeaders", valid_613419
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613420: Call_GetCreateStack_613390; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_613420.validator(path, query, header, formData, body)
  let scheme = call_613420.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613420.url(scheme.get, call_613420.host, call_613420.base,
                         call_613420.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613420, url, valid)

proc call*(call_613421: Call_GetCreateStack_613390; StackName: string;
          ResourceTypes: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          EnableTerminationProtection: bool = false; TimeoutInMinutes: int = 0;
          StackPolicyBody: string = ""; TemplateBody: string = "";
          DisableRollback: bool = false; NotificationARNs: JsonNode = nil;
          OnFailure: string = "DO_NOTHING"; StackPolicyURL: string = "";
          Action: string = "CreateStack"; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil; RoleARN: string = ""): Recallable =
  ## getCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_613422 = newJObject()
  if ResourceTypes != nil:
    query_613422.add "ResourceTypes", ResourceTypes
  add(query_613422, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_613422.add "Parameters", Parameters
  if Tags != nil:
    query_613422.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_613422.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_613422, "StackName", newJString(StackName))
  add(query_613422, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_613422, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  add(query_613422, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_613422, "TemplateBody", newJString(TemplateBody))
  add(query_613422, "DisableRollback", newJBool(DisableRollback))
  if NotificationARNs != nil:
    query_613422.add "NotificationARNs", NotificationARNs
  add(query_613422, "OnFailure", newJString(OnFailure))
  add(query_613422, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_613422, "Action", newJString(Action))
  add(query_613422, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613422, "TemplateURL", newJString(TemplateURL))
  add(query_613422, "Version", newJString(Version))
  if Capabilities != nil:
    query_613422.add "Capabilities", Capabilities
  add(query_613422, "RoleARN", newJString(RoleARN))
  result = call_613421.call(nil, query_613422, nil, nil, nil)

var getCreateStack* = Call_GetCreateStack_613390(name: "getCreateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_GetCreateStack_613391,
    base: "/", url: url_GetCreateStack_613392, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackInstances_613482 = ref object of OpenApiRestCall_612658
proc url_PostCreateStackInstances_613484(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackInstances_613483(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613485 = query.getOrDefault("Action")
  valid_613485 = validateParameter(valid_613485, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_613485 != nil:
    section.add "Action", valid_613485
  var valid_613486 = query.getOrDefault("Version")
  valid_613486 = validateParameter(valid_613486, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613486 != nil:
    section.add "Version", valid_613486
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613487 = header.getOrDefault("X-Amz-Signature")
  valid_613487 = validateParameter(valid_613487, JString, required = false,
                                 default = nil)
  if valid_613487 != nil:
    section.add "X-Amz-Signature", valid_613487
  var valid_613488 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613488 = validateParameter(valid_613488, JString, required = false,
                                 default = nil)
  if valid_613488 != nil:
    section.add "X-Amz-Content-Sha256", valid_613488
  var valid_613489 = header.getOrDefault("X-Amz-Date")
  valid_613489 = validateParameter(valid_613489, JString, required = false,
                                 default = nil)
  if valid_613489 != nil:
    section.add "X-Amz-Date", valid_613489
  var valid_613490 = header.getOrDefault("X-Amz-Credential")
  valid_613490 = validateParameter(valid_613490, JString, required = false,
                                 default = nil)
  if valid_613490 != nil:
    section.add "X-Amz-Credential", valid_613490
  var valid_613491 = header.getOrDefault("X-Amz-Security-Token")
  valid_613491 = validateParameter(valid_613491, JString, required = false,
                                 default = nil)
  if valid_613491 != nil:
    section.add "X-Amz-Security-Token", valid_613491
  var valid_613492 = header.getOrDefault("X-Amz-Algorithm")
  valid_613492 = validateParameter(valid_613492, JString, required = false,
                                 default = nil)
  if valid_613492 != nil:
    section.add "X-Amz-Algorithm", valid_613492
  var valid_613493 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613493 = validateParameter(valid_613493, JString, required = false,
                                 default = nil)
  if valid_613493 != nil:
    section.add "X-Amz-SignedHeaders", valid_613493
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_613494 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_613494 = validateParameter(valid_613494, JString, required = false,
                                 default = nil)
  if valid_613494 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_613494
  var valid_613495 = formData.getOrDefault("OperationId")
  valid_613495 = validateParameter(valid_613495, JString, required = false,
                                 default = nil)
  if valid_613495 != nil:
    section.add "OperationId", valid_613495
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_613496 = formData.getOrDefault("StackSetName")
  valid_613496 = validateParameter(valid_613496, JString, required = true,
                                 default = nil)
  if valid_613496 != nil:
    section.add "StackSetName", valid_613496
  var valid_613497 = formData.getOrDefault("ParameterOverrides")
  valid_613497 = validateParameter(valid_613497, JArray, required = false,
                                 default = nil)
  if valid_613497 != nil:
    section.add "ParameterOverrides", valid_613497
  var valid_613498 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_613498 = validateParameter(valid_613498, JArray, required = false,
                                 default = nil)
  if valid_613498 != nil:
    section.add "OperationPreferences.RegionOrder", valid_613498
  var valid_613499 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_613499 = validateParameter(valid_613499, JString, required = false,
                                 default = nil)
  if valid_613499 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_613499
  var valid_613500 = formData.getOrDefault("Accounts")
  valid_613500 = validateParameter(valid_613500, JArray, required = true, default = nil)
  if valid_613500 != nil:
    section.add "Accounts", valid_613500
  var valid_613501 = formData.getOrDefault("Regions")
  valid_613501 = validateParameter(valid_613501, JArray, required = true, default = nil)
  if valid_613501 != nil:
    section.add "Regions", valid_613501
  var valid_613502 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_613502 = validateParameter(valid_613502, JString, required = false,
                                 default = nil)
  if valid_613502 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_613502
  var valid_613503 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_613503 = validateParameter(valid_613503, JString, required = false,
                                 default = nil)
  if valid_613503 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_613503
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613504: Call_PostCreateStackInstances_613482; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_613504.validator(path, query, header, formData, body)
  let scheme = call_613504.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613504.url(scheme.get, call_613504.host, call_613504.base,
                         call_613504.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613504, url, valid)

proc call*(call_613505: Call_PostCreateStackInstances_613482; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; ParameterOverrides: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "CreateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_613506 = newJObject()
  var formData_613507 = newJObject()
  add(formData_613507, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_613507, "OperationId", newJString(OperationId))
  add(formData_613507, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    formData_613507.add "ParameterOverrides", ParameterOverrides
  if OperationPreferencesRegionOrder != nil:
    formData_613507.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_613507, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_613507.add "Accounts", Accounts
  if Regions != nil:
    formData_613507.add "Regions", Regions
  add(query_613506, "Action", newJString(Action))
  add(formData_613507, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_613506, "Version", newJString(Version))
  add(formData_613507, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_613505.call(nil, query_613506, nil, formData_613507, nil)

var postCreateStackInstances* = Call_PostCreateStackInstances_613482(
    name: "postCreateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_PostCreateStackInstances_613483, base: "/",
    url: url_PostCreateStackInstances_613484, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackInstances_613457 = ref object of OpenApiRestCall_612658
proc url_GetCreateStackInstances_613459(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackInstances_613458(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_613460 = query.getOrDefault("OperationId")
  valid_613460 = validateParameter(valid_613460, JString, required = false,
                                 default = nil)
  if valid_613460 != nil:
    section.add "OperationId", valid_613460
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_613461 = query.getOrDefault("StackSetName")
  valid_613461 = validateParameter(valid_613461, JString, required = true,
                                 default = nil)
  if valid_613461 != nil:
    section.add "StackSetName", valid_613461
  var valid_613462 = query.getOrDefault("ParameterOverrides")
  valid_613462 = validateParameter(valid_613462, JArray, required = false,
                                 default = nil)
  if valid_613462 != nil:
    section.add "ParameterOverrides", valid_613462
  var valid_613463 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_613463 = validateParameter(valid_613463, JString, required = false,
                                 default = nil)
  if valid_613463 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_613463
  var valid_613464 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_613464 = validateParameter(valid_613464, JString, required = false,
                                 default = nil)
  if valid_613464 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_613464
  var valid_613465 = query.getOrDefault("Action")
  valid_613465 = validateParameter(valid_613465, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_613465 != nil:
    section.add "Action", valid_613465
  var valid_613466 = query.getOrDefault("Regions")
  valid_613466 = validateParameter(valid_613466, JArray, required = true, default = nil)
  if valid_613466 != nil:
    section.add "Regions", valid_613466
  var valid_613467 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_613467 = validateParameter(valid_613467, JArray, required = false,
                                 default = nil)
  if valid_613467 != nil:
    section.add "OperationPreferences.RegionOrder", valid_613467
  var valid_613468 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_613468 = validateParameter(valid_613468, JString, required = false,
                                 default = nil)
  if valid_613468 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_613468
  var valid_613469 = query.getOrDefault("Accounts")
  valid_613469 = validateParameter(valid_613469, JArray, required = true, default = nil)
  if valid_613469 != nil:
    section.add "Accounts", valid_613469
  var valid_613470 = query.getOrDefault("Version")
  valid_613470 = validateParameter(valid_613470, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613470 != nil:
    section.add "Version", valid_613470
  var valid_613471 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_613471 = validateParameter(valid_613471, JString, required = false,
                                 default = nil)
  if valid_613471 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_613471
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613472 = header.getOrDefault("X-Amz-Signature")
  valid_613472 = validateParameter(valid_613472, JString, required = false,
                                 default = nil)
  if valid_613472 != nil:
    section.add "X-Amz-Signature", valid_613472
  var valid_613473 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613473 = validateParameter(valid_613473, JString, required = false,
                                 default = nil)
  if valid_613473 != nil:
    section.add "X-Amz-Content-Sha256", valid_613473
  var valid_613474 = header.getOrDefault("X-Amz-Date")
  valid_613474 = validateParameter(valid_613474, JString, required = false,
                                 default = nil)
  if valid_613474 != nil:
    section.add "X-Amz-Date", valid_613474
  var valid_613475 = header.getOrDefault("X-Amz-Credential")
  valid_613475 = validateParameter(valid_613475, JString, required = false,
                                 default = nil)
  if valid_613475 != nil:
    section.add "X-Amz-Credential", valid_613475
  var valid_613476 = header.getOrDefault("X-Amz-Security-Token")
  valid_613476 = validateParameter(valid_613476, JString, required = false,
                                 default = nil)
  if valid_613476 != nil:
    section.add "X-Amz-Security-Token", valid_613476
  var valid_613477 = header.getOrDefault("X-Amz-Algorithm")
  valid_613477 = validateParameter(valid_613477, JString, required = false,
                                 default = nil)
  if valid_613477 != nil:
    section.add "X-Amz-Algorithm", valid_613477
  var valid_613478 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613478 = validateParameter(valid_613478, JString, required = false,
                                 default = nil)
  if valid_613478 != nil:
    section.add "X-Amz-SignedHeaders", valid_613478
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613479: Call_GetCreateStackInstances_613457; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_613479.validator(path, query, header, formData, body)
  let scheme = call_613479.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613479.url(scheme.get, call_613479.host, call_613479.base,
                         call_613479.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613479, url, valid)

proc call*(call_613480: Call_GetCreateStackInstances_613457; StackSetName: string;
          Regions: JsonNode; Accounts: JsonNode; OperationId: string = "";
          ParameterOverrides: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "CreateStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_613481 = newJObject()
  add(query_613481, "OperationId", newJString(OperationId))
  add(query_613481, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    query_613481.add "ParameterOverrides", ParameterOverrides
  add(query_613481, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_613481, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_613481, "Action", newJString(Action))
  if Regions != nil:
    query_613481.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_613481.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_613481, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_613481.add "Accounts", Accounts
  add(query_613481, "Version", newJString(Version))
  add(query_613481, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_613480.call(nil, query_613481, nil, nil, nil)

var getCreateStackInstances* = Call_GetCreateStackInstances_613457(
    name: "getCreateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_GetCreateStackInstances_613458, base: "/",
    url: url_GetCreateStackInstances_613459, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackSet_613533 = ref object of OpenApiRestCall_612658
proc url_PostCreateStackSet_613535(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackSet_613534(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613536 = query.getOrDefault("Action")
  valid_613536 = validateParameter(valid_613536, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_613536 != nil:
    section.add "Action", valid_613536
  var valid_613537 = query.getOrDefault("Version")
  valid_613537 = validateParameter(valid_613537, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613537 != nil:
    section.add "Version", valid_613537
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613538 = header.getOrDefault("X-Amz-Signature")
  valid_613538 = validateParameter(valid_613538, JString, required = false,
                                 default = nil)
  if valid_613538 != nil:
    section.add "X-Amz-Signature", valid_613538
  var valid_613539 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613539 = validateParameter(valid_613539, JString, required = false,
                                 default = nil)
  if valid_613539 != nil:
    section.add "X-Amz-Content-Sha256", valid_613539
  var valid_613540 = header.getOrDefault("X-Amz-Date")
  valid_613540 = validateParameter(valid_613540, JString, required = false,
                                 default = nil)
  if valid_613540 != nil:
    section.add "X-Amz-Date", valid_613540
  var valid_613541 = header.getOrDefault("X-Amz-Credential")
  valid_613541 = validateParameter(valid_613541, JString, required = false,
                                 default = nil)
  if valid_613541 != nil:
    section.add "X-Amz-Credential", valid_613541
  var valid_613542 = header.getOrDefault("X-Amz-Security-Token")
  valid_613542 = validateParameter(valid_613542, JString, required = false,
                                 default = nil)
  if valid_613542 != nil:
    section.add "X-Amz-Security-Token", valid_613542
  var valid_613543 = header.getOrDefault("X-Amz-Algorithm")
  valid_613543 = validateParameter(valid_613543, JString, required = false,
                                 default = nil)
  if valid_613543 != nil:
    section.add "X-Amz-Algorithm", valid_613543
  var valid_613544 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613544 = validateParameter(valid_613544, JString, required = false,
                                 default = nil)
  if valid_613544 != nil:
    section.add "X-Amz-SignedHeaders", valid_613544
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_613545 = formData.getOrDefault("StackSetName")
  valid_613545 = validateParameter(valid_613545, JString, required = true,
                                 default = nil)
  if valid_613545 != nil:
    section.add "StackSetName", valid_613545
  var valid_613546 = formData.getOrDefault("AdministrationRoleARN")
  valid_613546 = validateParameter(valid_613546, JString, required = false,
                                 default = nil)
  if valid_613546 != nil:
    section.add "AdministrationRoleARN", valid_613546
  var valid_613547 = formData.getOrDefault("Description")
  valid_613547 = validateParameter(valid_613547, JString, required = false,
                                 default = nil)
  if valid_613547 != nil:
    section.add "Description", valid_613547
  var valid_613548 = formData.getOrDefault("TemplateURL")
  valid_613548 = validateParameter(valid_613548, JString, required = false,
                                 default = nil)
  if valid_613548 != nil:
    section.add "TemplateURL", valid_613548
  var valid_613549 = formData.getOrDefault("TemplateBody")
  valid_613549 = validateParameter(valid_613549, JString, required = false,
                                 default = nil)
  if valid_613549 != nil:
    section.add "TemplateBody", valid_613549
  var valid_613550 = formData.getOrDefault("ClientRequestToken")
  valid_613550 = validateParameter(valid_613550, JString, required = false,
                                 default = nil)
  if valid_613550 != nil:
    section.add "ClientRequestToken", valid_613550
  var valid_613551 = formData.getOrDefault("Capabilities")
  valid_613551 = validateParameter(valid_613551, JArray, required = false,
                                 default = nil)
  if valid_613551 != nil:
    section.add "Capabilities", valid_613551
  var valid_613552 = formData.getOrDefault("Tags")
  valid_613552 = validateParameter(valid_613552, JArray, required = false,
                                 default = nil)
  if valid_613552 != nil:
    section.add "Tags", valid_613552
  var valid_613553 = formData.getOrDefault("Parameters")
  valid_613553 = validateParameter(valid_613553, JArray, required = false,
                                 default = nil)
  if valid_613553 != nil:
    section.add "Parameters", valid_613553
  var valid_613554 = formData.getOrDefault("ExecutionRoleName")
  valid_613554 = validateParameter(valid_613554, JString, required = false,
                                 default = nil)
  if valid_613554 != nil:
    section.add "ExecutionRoleName", valid_613554
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613555: Call_PostCreateStackSet_613533; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_613555.validator(path, query, header, formData, body)
  let scheme = call_613555.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613555.url(scheme.get, call_613555.host, call_613555.base,
                         call_613555.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613555, url, valid)

proc call*(call_613556: Call_PostCreateStackSet_613533; StackSetName: string;
          AdministrationRoleARN: string = ""; Description: string = "";
          TemplateURL: string = ""; TemplateBody: string = "";
          ClientRequestToken: string = ""; Action: string = "CreateStackSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil; Version: string = "2010-05-15";
          ExecutionRoleName: string = ""): Recallable =
  ## postCreateStackSet
  ## Creates a stack set.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Version: string (required)
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  var query_613557 = newJObject()
  var formData_613558 = newJObject()
  add(formData_613558, "StackSetName", newJString(StackSetName))
  add(formData_613558, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_613558, "Description", newJString(Description))
  add(formData_613558, "TemplateURL", newJString(TemplateURL))
  add(formData_613558, "TemplateBody", newJString(TemplateBody))
  add(formData_613558, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613557, "Action", newJString(Action))
  if Capabilities != nil:
    formData_613558.add "Capabilities", Capabilities
  if Tags != nil:
    formData_613558.add "Tags", Tags
  if Parameters != nil:
    formData_613558.add "Parameters", Parameters
  add(query_613557, "Version", newJString(Version))
  add(formData_613558, "ExecutionRoleName", newJString(ExecutionRoleName))
  result = call_613556.call(nil, query_613557, nil, formData_613558, nil)

var postCreateStackSet* = Call_PostCreateStackSet_613533(
    name: "postCreateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackSet",
    validator: validate_PostCreateStackSet_613534, base: "/",
    url: url_PostCreateStackSet_613535, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackSet_613508 = ref object of OpenApiRestCall_612658
proc url_GetCreateStackSet_613510(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackSet_613509(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_613511 = query.getOrDefault("StackSetName")
  valid_613511 = validateParameter(valid_613511, JString, required = true,
                                 default = nil)
  if valid_613511 != nil:
    section.add "StackSetName", valid_613511
  var valid_613512 = query.getOrDefault("Parameters")
  valid_613512 = validateParameter(valid_613512, JArray, required = false,
                                 default = nil)
  if valid_613512 != nil:
    section.add "Parameters", valid_613512
  var valid_613513 = query.getOrDefault("Tags")
  valid_613513 = validateParameter(valid_613513, JArray, required = false,
                                 default = nil)
  if valid_613513 != nil:
    section.add "Tags", valid_613513
  var valid_613514 = query.getOrDefault("ExecutionRoleName")
  valid_613514 = validateParameter(valid_613514, JString, required = false,
                                 default = nil)
  if valid_613514 != nil:
    section.add "ExecutionRoleName", valid_613514
  var valid_613515 = query.getOrDefault("TemplateBody")
  valid_613515 = validateParameter(valid_613515, JString, required = false,
                                 default = nil)
  if valid_613515 != nil:
    section.add "TemplateBody", valid_613515
  var valid_613516 = query.getOrDefault("AdministrationRoleARN")
  valid_613516 = validateParameter(valid_613516, JString, required = false,
                                 default = nil)
  if valid_613516 != nil:
    section.add "AdministrationRoleARN", valid_613516
  var valid_613517 = query.getOrDefault("Action")
  valid_613517 = validateParameter(valid_613517, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_613517 != nil:
    section.add "Action", valid_613517
  var valid_613518 = query.getOrDefault("Description")
  valid_613518 = validateParameter(valid_613518, JString, required = false,
                                 default = nil)
  if valid_613518 != nil:
    section.add "Description", valid_613518
  var valid_613519 = query.getOrDefault("ClientRequestToken")
  valid_613519 = validateParameter(valid_613519, JString, required = false,
                                 default = nil)
  if valid_613519 != nil:
    section.add "ClientRequestToken", valid_613519
  var valid_613520 = query.getOrDefault("TemplateURL")
  valid_613520 = validateParameter(valid_613520, JString, required = false,
                                 default = nil)
  if valid_613520 != nil:
    section.add "TemplateURL", valid_613520
  var valid_613521 = query.getOrDefault("Version")
  valid_613521 = validateParameter(valid_613521, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613521 != nil:
    section.add "Version", valid_613521
  var valid_613522 = query.getOrDefault("Capabilities")
  valid_613522 = validateParameter(valid_613522, JArray, required = false,
                                 default = nil)
  if valid_613522 != nil:
    section.add "Capabilities", valid_613522
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613523 = header.getOrDefault("X-Amz-Signature")
  valid_613523 = validateParameter(valid_613523, JString, required = false,
                                 default = nil)
  if valid_613523 != nil:
    section.add "X-Amz-Signature", valid_613523
  var valid_613524 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613524 = validateParameter(valid_613524, JString, required = false,
                                 default = nil)
  if valid_613524 != nil:
    section.add "X-Amz-Content-Sha256", valid_613524
  var valid_613525 = header.getOrDefault("X-Amz-Date")
  valid_613525 = validateParameter(valid_613525, JString, required = false,
                                 default = nil)
  if valid_613525 != nil:
    section.add "X-Amz-Date", valid_613525
  var valid_613526 = header.getOrDefault("X-Amz-Credential")
  valid_613526 = validateParameter(valid_613526, JString, required = false,
                                 default = nil)
  if valid_613526 != nil:
    section.add "X-Amz-Credential", valid_613526
  var valid_613527 = header.getOrDefault("X-Amz-Security-Token")
  valid_613527 = validateParameter(valid_613527, JString, required = false,
                                 default = nil)
  if valid_613527 != nil:
    section.add "X-Amz-Security-Token", valid_613527
  var valid_613528 = header.getOrDefault("X-Amz-Algorithm")
  valid_613528 = validateParameter(valid_613528, JString, required = false,
                                 default = nil)
  if valid_613528 != nil:
    section.add "X-Amz-Algorithm", valid_613528
  var valid_613529 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613529 = validateParameter(valid_613529, JString, required = false,
                                 default = nil)
  if valid_613529 != nil:
    section.add "X-Amz-SignedHeaders", valid_613529
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613530: Call_GetCreateStackSet_613508; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_613530.validator(path, query, header, formData, body)
  let scheme = call_613530.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613530.url(scheme.get, call_613530.host, call_613530.base,
                         call_613530.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613530, url, valid)

proc call*(call_613531: Call_GetCreateStackSet_613508; StackSetName: string;
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ExecutionRoleName: string = ""; TemplateBody: string = "";
          AdministrationRoleARN: string = ""; Action: string = "CreateStackSet";
          Description: string = ""; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil): Recallable =
  ## getCreateStackSet
  ## Creates a stack set.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Action: string (required)
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  var query_613532 = newJObject()
  add(query_613532, "StackSetName", newJString(StackSetName))
  if Parameters != nil:
    query_613532.add "Parameters", Parameters
  if Tags != nil:
    query_613532.add "Tags", Tags
  add(query_613532, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_613532, "TemplateBody", newJString(TemplateBody))
  add(query_613532, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_613532, "Action", newJString(Action))
  add(query_613532, "Description", newJString(Description))
  add(query_613532, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613532, "TemplateURL", newJString(TemplateURL))
  add(query_613532, "Version", newJString(Version))
  if Capabilities != nil:
    query_613532.add "Capabilities", Capabilities
  result = call_613531.call(nil, query_613532, nil, nil, nil)

var getCreateStackSet* = Call_GetCreateStackSet_613508(name: "getCreateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStackSet", validator: validate_GetCreateStackSet_613509,
    base: "/", url: url_GetCreateStackSet_613510,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteChangeSet_613576 = ref object of OpenApiRestCall_612658
proc url_PostDeleteChangeSet_613578(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteChangeSet_613577(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613579 = query.getOrDefault("Action")
  valid_613579 = validateParameter(valid_613579, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_613579 != nil:
    section.add "Action", valid_613579
  var valid_613580 = query.getOrDefault("Version")
  valid_613580 = validateParameter(valid_613580, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613580 != nil:
    section.add "Version", valid_613580
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613581 = header.getOrDefault("X-Amz-Signature")
  valid_613581 = validateParameter(valid_613581, JString, required = false,
                                 default = nil)
  if valid_613581 != nil:
    section.add "X-Amz-Signature", valid_613581
  var valid_613582 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613582 = validateParameter(valid_613582, JString, required = false,
                                 default = nil)
  if valid_613582 != nil:
    section.add "X-Amz-Content-Sha256", valid_613582
  var valid_613583 = header.getOrDefault("X-Amz-Date")
  valid_613583 = validateParameter(valid_613583, JString, required = false,
                                 default = nil)
  if valid_613583 != nil:
    section.add "X-Amz-Date", valid_613583
  var valid_613584 = header.getOrDefault("X-Amz-Credential")
  valid_613584 = validateParameter(valid_613584, JString, required = false,
                                 default = nil)
  if valid_613584 != nil:
    section.add "X-Amz-Credential", valid_613584
  var valid_613585 = header.getOrDefault("X-Amz-Security-Token")
  valid_613585 = validateParameter(valid_613585, JString, required = false,
                                 default = nil)
  if valid_613585 != nil:
    section.add "X-Amz-Security-Token", valid_613585
  var valid_613586 = header.getOrDefault("X-Amz-Algorithm")
  valid_613586 = validateParameter(valid_613586, JString, required = false,
                                 default = nil)
  if valid_613586 != nil:
    section.add "X-Amz-Algorithm", valid_613586
  var valid_613587 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613587 = validateParameter(valid_613587, JString, required = false,
                                 default = nil)
  if valid_613587 != nil:
    section.add "X-Amz-SignedHeaders", valid_613587
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  section = newJObject()
  var valid_613588 = formData.getOrDefault("StackName")
  valid_613588 = validateParameter(valid_613588, JString, required = false,
                                 default = nil)
  if valid_613588 != nil:
    section.add "StackName", valid_613588
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_613589 = formData.getOrDefault("ChangeSetName")
  valid_613589 = validateParameter(valid_613589, JString, required = true,
                                 default = nil)
  if valid_613589 != nil:
    section.add "ChangeSetName", valid_613589
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613590: Call_PostDeleteChangeSet_613576; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_613590.validator(path, query, header, formData, body)
  let scheme = call_613590.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613590.url(scheme.get, call_613590.host, call_613590.base,
                         call_613590.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613590, url, valid)

proc call*(call_613591: Call_PostDeleteChangeSet_613576; ChangeSetName: string;
          StackName: string = ""; Action: string = "DeleteChangeSet";
          Version: string = "2010-05-15"): Recallable =
  ## postDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613592 = newJObject()
  var formData_613593 = newJObject()
  add(formData_613593, "StackName", newJString(StackName))
  add(formData_613593, "ChangeSetName", newJString(ChangeSetName))
  add(query_613592, "Action", newJString(Action))
  add(query_613592, "Version", newJString(Version))
  result = call_613591.call(nil, query_613592, nil, formData_613593, nil)

var postDeleteChangeSet* = Call_PostDeleteChangeSet_613576(
    name: "postDeleteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_PostDeleteChangeSet_613577, base: "/",
    url: url_PostDeleteChangeSet_613578, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteChangeSet_613559 = ref object of OpenApiRestCall_612658
proc url_GetDeleteChangeSet_613561(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteChangeSet_613560(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Action: JString (required)
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Version: JString (required)
  section = newJObject()
  var valid_613562 = query.getOrDefault("StackName")
  valid_613562 = validateParameter(valid_613562, JString, required = false,
                                 default = nil)
  if valid_613562 != nil:
    section.add "StackName", valid_613562
  var valid_613563 = query.getOrDefault("Action")
  valid_613563 = validateParameter(valid_613563, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_613563 != nil:
    section.add "Action", valid_613563
  var valid_613564 = query.getOrDefault("ChangeSetName")
  valid_613564 = validateParameter(valid_613564, JString, required = true,
                                 default = nil)
  if valid_613564 != nil:
    section.add "ChangeSetName", valid_613564
  var valid_613565 = query.getOrDefault("Version")
  valid_613565 = validateParameter(valid_613565, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613565 != nil:
    section.add "Version", valid_613565
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613566 = header.getOrDefault("X-Amz-Signature")
  valid_613566 = validateParameter(valid_613566, JString, required = false,
                                 default = nil)
  if valid_613566 != nil:
    section.add "X-Amz-Signature", valid_613566
  var valid_613567 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613567 = validateParameter(valid_613567, JString, required = false,
                                 default = nil)
  if valid_613567 != nil:
    section.add "X-Amz-Content-Sha256", valid_613567
  var valid_613568 = header.getOrDefault("X-Amz-Date")
  valid_613568 = validateParameter(valid_613568, JString, required = false,
                                 default = nil)
  if valid_613568 != nil:
    section.add "X-Amz-Date", valid_613568
  var valid_613569 = header.getOrDefault("X-Amz-Credential")
  valid_613569 = validateParameter(valid_613569, JString, required = false,
                                 default = nil)
  if valid_613569 != nil:
    section.add "X-Amz-Credential", valid_613569
  var valid_613570 = header.getOrDefault("X-Amz-Security-Token")
  valid_613570 = validateParameter(valid_613570, JString, required = false,
                                 default = nil)
  if valid_613570 != nil:
    section.add "X-Amz-Security-Token", valid_613570
  var valid_613571 = header.getOrDefault("X-Amz-Algorithm")
  valid_613571 = validateParameter(valid_613571, JString, required = false,
                                 default = nil)
  if valid_613571 != nil:
    section.add "X-Amz-Algorithm", valid_613571
  var valid_613572 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613572 = validateParameter(valid_613572, JString, required = false,
                                 default = nil)
  if valid_613572 != nil:
    section.add "X-Amz-SignedHeaders", valid_613572
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613573: Call_GetDeleteChangeSet_613559; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_613573.validator(path, query, header, formData, body)
  let scheme = call_613573.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613573.url(scheme.get, call_613573.host, call_613573.base,
                         call_613573.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613573, url, valid)

proc call*(call_613574: Call_GetDeleteChangeSet_613559; ChangeSetName: string;
          StackName: string = ""; Action: string = "DeleteChangeSet";
          Version: string = "2010-05-15"): Recallable =
  ## getDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Version: string (required)
  var query_613575 = newJObject()
  add(query_613575, "StackName", newJString(StackName))
  add(query_613575, "Action", newJString(Action))
  add(query_613575, "ChangeSetName", newJString(ChangeSetName))
  add(query_613575, "Version", newJString(Version))
  result = call_613574.call(nil, query_613575, nil, nil, nil)

var getDeleteChangeSet* = Call_GetDeleteChangeSet_613559(
    name: "getDeleteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_GetDeleteChangeSet_613560, base: "/",
    url: url_GetDeleteChangeSet_613561, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStack_613613 = ref object of OpenApiRestCall_612658
proc url_PostDeleteStack_613615(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStack_613614(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613616 = query.getOrDefault("Action")
  valid_613616 = validateParameter(valid_613616, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_613616 != nil:
    section.add "Action", valid_613616
  var valid_613617 = query.getOrDefault("Version")
  valid_613617 = validateParameter(valid_613617, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613617 != nil:
    section.add "Version", valid_613617
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613618 = header.getOrDefault("X-Amz-Signature")
  valid_613618 = validateParameter(valid_613618, JString, required = false,
                                 default = nil)
  if valid_613618 != nil:
    section.add "X-Amz-Signature", valid_613618
  var valid_613619 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613619 = validateParameter(valid_613619, JString, required = false,
                                 default = nil)
  if valid_613619 != nil:
    section.add "X-Amz-Content-Sha256", valid_613619
  var valid_613620 = header.getOrDefault("X-Amz-Date")
  valid_613620 = validateParameter(valid_613620, JString, required = false,
                                 default = nil)
  if valid_613620 != nil:
    section.add "X-Amz-Date", valid_613620
  var valid_613621 = header.getOrDefault("X-Amz-Credential")
  valid_613621 = validateParameter(valid_613621, JString, required = false,
                                 default = nil)
  if valid_613621 != nil:
    section.add "X-Amz-Credential", valid_613621
  var valid_613622 = header.getOrDefault("X-Amz-Security-Token")
  valid_613622 = validateParameter(valid_613622, JString, required = false,
                                 default = nil)
  if valid_613622 != nil:
    section.add "X-Amz-Security-Token", valid_613622
  var valid_613623 = header.getOrDefault("X-Amz-Algorithm")
  valid_613623 = validateParameter(valid_613623, JString, required = false,
                                 default = nil)
  if valid_613623 != nil:
    section.add "X-Amz-Algorithm", valid_613623
  var valid_613624 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613624 = validateParameter(valid_613624, JString, required = false,
                                 default = nil)
  if valid_613624 != nil:
    section.add "X-Amz-SignedHeaders", valid_613624
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_613625 = formData.getOrDefault("StackName")
  valid_613625 = validateParameter(valid_613625, JString, required = true,
                                 default = nil)
  if valid_613625 != nil:
    section.add "StackName", valid_613625
  var valid_613626 = formData.getOrDefault("RoleARN")
  valid_613626 = validateParameter(valid_613626, JString, required = false,
                                 default = nil)
  if valid_613626 != nil:
    section.add "RoleARN", valid_613626
  var valid_613627 = formData.getOrDefault("ClientRequestToken")
  valid_613627 = validateParameter(valid_613627, JString, required = false,
                                 default = nil)
  if valid_613627 != nil:
    section.add "ClientRequestToken", valid_613627
  var valid_613628 = formData.getOrDefault("RetainResources")
  valid_613628 = validateParameter(valid_613628, JArray, required = false,
                                 default = nil)
  if valid_613628 != nil:
    section.add "RetainResources", valid_613628
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613629: Call_PostDeleteStack_613613; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_613629.validator(path, query, header, formData, body)
  let scheme = call_613629.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613629.url(scheme.get, call_613629.host, call_613629.base,
                         call_613629.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613629, url, valid)

proc call*(call_613630: Call_PostDeleteStack_613613; StackName: string;
          RoleARN: string = ""; ClientRequestToken: string = "";
          Action: string = "DeleteStack"; Version: string = "2010-05-15";
          RetainResources: JsonNode = nil): Recallable =
  ## postDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  var query_613631 = newJObject()
  var formData_613632 = newJObject()
  add(formData_613632, "StackName", newJString(StackName))
  add(formData_613632, "RoleARN", newJString(RoleARN))
  add(formData_613632, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613631, "Action", newJString(Action))
  add(query_613631, "Version", newJString(Version))
  if RetainResources != nil:
    formData_613632.add "RetainResources", RetainResources
  result = call_613630.call(nil, query_613631, nil, formData_613632, nil)

var postDeleteStack* = Call_PostDeleteStack_613613(name: "postDeleteStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_PostDeleteStack_613614,
    base: "/", url: url_PostDeleteStack_613615, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStack_613594 = ref object of OpenApiRestCall_612658
proc url_GetDeleteStack_613596(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStack_613595(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Version: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_613597 = query.getOrDefault("StackName")
  valid_613597 = validateParameter(valid_613597, JString, required = true,
                                 default = nil)
  if valid_613597 != nil:
    section.add "StackName", valid_613597
  var valid_613598 = query.getOrDefault("RetainResources")
  valid_613598 = validateParameter(valid_613598, JArray, required = false,
                                 default = nil)
  if valid_613598 != nil:
    section.add "RetainResources", valid_613598
  var valid_613599 = query.getOrDefault("Action")
  valid_613599 = validateParameter(valid_613599, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_613599 != nil:
    section.add "Action", valid_613599
  var valid_613600 = query.getOrDefault("ClientRequestToken")
  valid_613600 = validateParameter(valid_613600, JString, required = false,
                                 default = nil)
  if valid_613600 != nil:
    section.add "ClientRequestToken", valid_613600
  var valid_613601 = query.getOrDefault("Version")
  valid_613601 = validateParameter(valid_613601, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613601 != nil:
    section.add "Version", valid_613601
  var valid_613602 = query.getOrDefault("RoleARN")
  valid_613602 = validateParameter(valid_613602, JString, required = false,
                                 default = nil)
  if valid_613602 != nil:
    section.add "RoleARN", valid_613602
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613603 = header.getOrDefault("X-Amz-Signature")
  valid_613603 = validateParameter(valid_613603, JString, required = false,
                                 default = nil)
  if valid_613603 != nil:
    section.add "X-Amz-Signature", valid_613603
  var valid_613604 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613604 = validateParameter(valid_613604, JString, required = false,
                                 default = nil)
  if valid_613604 != nil:
    section.add "X-Amz-Content-Sha256", valid_613604
  var valid_613605 = header.getOrDefault("X-Amz-Date")
  valid_613605 = validateParameter(valid_613605, JString, required = false,
                                 default = nil)
  if valid_613605 != nil:
    section.add "X-Amz-Date", valid_613605
  var valid_613606 = header.getOrDefault("X-Amz-Credential")
  valid_613606 = validateParameter(valid_613606, JString, required = false,
                                 default = nil)
  if valid_613606 != nil:
    section.add "X-Amz-Credential", valid_613606
  var valid_613607 = header.getOrDefault("X-Amz-Security-Token")
  valid_613607 = validateParameter(valid_613607, JString, required = false,
                                 default = nil)
  if valid_613607 != nil:
    section.add "X-Amz-Security-Token", valid_613607
  var valid_613608 = header.getOrDefault("X-Amz-Algorithm")
  valid_613608 = validateParameter(valid_613608, JString, required = false,
                                 default = nil)
  if valid_613608 != nil:
    section.add "X-Amz-Algorithm", valid_613608
  var valid_613609 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613609 = validateParameter(valid_613609, JString, required = false,
                                 default = nil)
  if valid_613609 != nil:
    section.add "X-Amz-SignedHeaders", valid_613609
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613610: Call_GetDeleteStack_613594; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_613610.validator(path, query, header, formData, body)
  let scheme = call_613610.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613610.url(scheme.get, call_613610.host, call_613610.base,
                         call_613610.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613610, url, valid)

proc call*(call_613611: Call_GetDeleteStack_613594; StackName: string;
          RetainResources: JsonNode = nil; Action: string = "DeleteStack";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## getDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_613612 = newJObject()
  add(query_613612, "StackName", newJString(StackName))
  if RetainResources != nil:
    query_613612.add "RetainResources", RetainResources
  add(query_613612, "Action", newJString(Action))
  add(query_613612, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_613612, "Version", newJString(Version))
  add(query_613612, "RoleARN", newJString(RoleARN))
  result = call_613611.call(nil, query_613612, nil, nil, nil)

var getDeleteStack* = Call_GetDeleteStack_613594(name: "getDeleteStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_GetDeleteStack_613595,
    base: "/", url: url_GetDeleteStack_613596, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackInstances_613658 = ref object of OpenApiRestCall_612658
proc url_PostDeleteStackInstances_613660(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackInstances_613659(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613661 = query.getOrDefault("Action")
  valid_613661 = validateParameter(valid_613661, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_613661 != nil:
    section.add "Action", valid_613661
  var valid_613662 = query.getOrDefault("Version")
  valid_613662 = validateParameter(valid_613662, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613662 != nil:
    section.add "Version", valid_613662
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613663 = header.getOrDefault("X-Amz-Signature")
  valid_613663 = validateParameter(valid_613663, JString, required = false,
                                 default = nil)
  if valid_613663 != nil:
    section.add "X-Amz-Signature", valid_613663
  var valid_613664 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613664 = validateParameter(valid_613664, JString, required = false,
                                 default = nil)
  if valid_613664 != nil:
    section.add "X-Amz-Content-Sha256", valid_613664
  var valid_613665 = header.getOrDefault("X-Amz-Date")
  valid_613665 = validateParameter(valid_613665, JString, required = false,
                                 default = nil)
  if valid_613665 != nil:
    section.add "X-Amz-Date", valid_613665
  var valid_613666 = header.getOrDefault("X-Amz-Credential")
  valid_613666 = validateParameter(valid_613666, JString, required = false,
                                 default = nil)
  if valid_613666 != nil:
    section.add "X-Amz-Credential", valid_613666
  var valid_613667 = header.getOrDefault("X-Amz-Security-Token")
  valid_613667 = validateParameter(valid_613667, JString, required = false,
                                 default = nil)
  if valid_613667 != nil:
    section.add "X-Amz-Security-Token", valid_613667
  var valid_613668 = header.getOrDefault("X-Amz-Algorithm")
  valid_613668 = validateParameter(valid_613668, JString, required = false,
                                 default = nil)
  if valid_613668 != nil:
    section.add "X-Amz-Algorithm", valid_613668
  var valid_613669 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613669 = validateParameter(valid_613669, JString, required = false,
                                 default = nil)
  if valid_613669 != nil:
    section.add "X-Amz-SignedHeaders", valid_613669
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_613670 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_613670 = validateParameter(valid_613670, JString, required = false,
                                 default = nil)
  if valid_613670 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_613670
  var valid_613671 = formData.getOrDefault("OperationId")
  valid_613671 = validateParameter(valid_613671, JString, required = false,
                                 default = nil)
  if valid_613671 != nil:
    section.add "OperationId", valid_613671
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_613672 = formData.getOrDefault("StackSetName")
  valid_613672 = validateParameter(valid_613672, JString, required = true,
                                 default = nil)
  if valid_613672 != nil:
    section.add "StackSetName", valid_613672
  var valid_613673 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_613673 = validateParameter(valid_613673, JArray, required = false,
                                 default = nil)
  if valid_613673 != nil:
    section.add "OperationPreferences.RegionOrder", valid_613673
  var valid_613674 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_613674 = validateParameter(valid_613674, JString, required = false,
                                 default = nil)
  if valid_613674 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_613674
  var valid_613675 = formData.getOrDefault("Accounts")
  valid_613675 = validateParameter(valid_613675, JArray, required = true, default = nil)
  if valid_613675 != nil:
    section.add "Accounts", valid_613675
  var valid_613676 = formData.getOrDefault("Regions")
  valid_613676 = validateParameter(valid_613676, JArray, required = true, default = nil)
  if valid_613676 != nil:
    section.add "Regions", valid_613676
  var valid_613677 = formData.getOrDefault("RetainStacks")
  valid_613677 = validateParameter(valid_613677, JBool, required = true, default = nil)
  if valid_613677 != nil:
    section.add "RetainStacks", valid_613677
  var valid_613678 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_613678 = validateParameter(valid_613678, JString, required = false,
                                 default = nil)
  if valid_613678 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_613678
  var valid_613679 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_613679 = validateParameter(valid_613679, JString, required = false,
                                 default = nil)
  if valid_613679 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_613679
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613680: Call_PostDeleteStackInstances_613658; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_613680.validator(path, query, header, formData, body)
  let scheme = call_613680.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613680.url(scheme.get, call_613680.host, call_613680.base,
                         call_613680.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613680, url, valid)

proc call*(call_613681: Call_PostDeleteStackInstances_613658; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode; RetainStacks: bool;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DeleteStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_613682 = newJObject()
  var formData_613683 = newJObject()
  add(formData_613683, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_613683, "OperationId", newJString(OperationId))
  add(formData_613683, "StackSetName", newJString(StackSetName))
  if OperationPreferencesRegionOrder != nil:
    formData_613683.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_613683, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_613683.add "Accounts", Accounts
  if Regions != nil:
    formData_613683.add "Regions", Regions
  add(formData_613683, "RetainStacks", newJBool(RetainStacks))
  add(query_613682, "Action", newJString(Action))
  add(formData_613683, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_613682, "Version", newJString(Version))
  add(formData_613683, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_613681.call(nil, query_613682, nil, formData_613683, nil)

var postDeleteStackInstances* = Call_PostDeleteStackInstances_613658(
    name: "postDeleteStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_PostDeleteStackInstances_613659, base: "/",
    url: url_PostDeleteStackInstances_613660, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackInstances_613633 = ref object of OpenApiRestCall_612658
proc url_GetDeleteStackInstances_613635(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackInstances_613634(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_613636 = query.getOrDefault("OperationId")
  valid_613636 = validateParameter(valid_613636, JString, required = false,
                                 default = nil)
  if valid_613636 != nil:
    section.add "OperationId", valid_613636
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_613637 = query.getOrDefault("StackSetName")
  valid_613637 = validateParameter(valid_613637, JString, required = true,
                                 default = nil)
  if valid_613637 != nil:
    section.add "StackSetName", valid_613637
  var valid_613638 = query.getOrDefault("RetainStacks")
  valid_613638 = validateParameter(valid_613638, JBool, required = true, default = nil)
  if valid_613638 != nil:
    section.add "RetainStacks", valid_613638
  var valid_613639 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_613639 = validateParameter(valid_613639, JString, required = false,
                                 default = nil)
  if valid_613639 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_613639
  var valid_613640 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_613640 = validateParameter(valid_613640, JString, required = false,
                                 default = nil)
  if valid_613640 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_613640
  var valid_613641 = query.getOrDefault("Action")
  valid_613641 = validateParameter(valid_613641, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_613641 != nil:
    section.add "Action", valid_613641
  var valid_613642 = query.getOrDefault("Regions")
  valid_613642 = validateParameter(valid_613642, JArray, required = true, default = nil)
  if valid_613642 != nil:
    section.add "Regions", valid_613642
  var valid_613643 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_613643 = validateParameter(valid_613643, JArray, required = false,
                                 default = nil)
  if valid_613643 != nil:
    section.add "OperationPreferences.RegionOrder", valid_613643
  var valid_613644 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_613644 = validateParameter(valid_613644, JString, required = false,
                                 default = nil)
  if valid_613644 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_613644
  var valid_613645 = query.getOrDefault("Accounts")
  valid_613645 = validateParameter(valid_613645, JArray, required = true, default = nil)
  if valid_613645 != nil:
    section.add "Accounts", valid_613645
  var valid_613646 = query.getOrDefault("Version")
  valid_613646 = validateParameter(valid_613646, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613646 != nil:
    section.add "Version", valid_613646
  var valid_613647 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_613647 = validateParameter(valid_613647, JString, required = false,
                                 default = nil)
  if valid_613647 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_613647
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613648 = header.getOrDefault("X-Amz-Signature")
  valid_613648 = validateParameter(valid_613648, JString, required = false,
                                 default = nil)
  if valid_613648 != nil:
    section.add "X-Amz-Signature", valid_613648
  var valid_613649 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613649 = validateParameter(valid_613649, JString, required = false,
                                 default = nil)
  if valid_613649 != nil:
    section.add "X-Amz-Content-Sha256", valid_613649
  var valid_613650 = header.getOrDefault("X-Amz-Date")
  valid_613650 = validateParameter(valid_613650, JString, required = false,
                                 default = nil)
  if valid_613650 != nil:
    section.add "X-Amz-Date", valid_613650
  var valid_613651 = header.getOrDefault("X-Amz-Credential")
  valid_613651 = validateParameter(valid_613651, JString, required = false,
                                 default = nil)
  if valid_613651 != nil:
    section.add "X-Amz-Credential", valid_613651
  var valid_613652 = header.getOrDefault("X-Amz-Security-Token")
  valid_613652 = validateParameter(valid_613652, JString, required = false,
                                 default = nil)
  if valid_613652 != nil:
    section.add "X-Amz-Security-Token", valid_613652
  var valid_613653 = header.getOrDefault("X-Amz-Algorithm")
  valid_613653 = validateParameter(valid_613653, JString, required = false,
                                 default = nil)
  if valid_613653 != nil:
    section.add "X-Amz-Algorithm", valid_613653
  var valid_613654 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613654 = validateParameter(valid_613654, JString, required = false,
                                 default = nil)
  if valid_613654 != nil:
    section.add "X-Amz-SignedHeaders", valid_613654
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613655: Call_GetDeleteStackInstances_613633; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_613655.validator(path, query, header, formData, body)
  let scheme = call_613655.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613655.url(scheme.get, call_613655.host, call_613655.base,
                         call_613655.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613655, url, valid)

proc call*(call_613656: Call_GetDeleteStackInstances_613633; StackSetName: string;
          RetainStacks: bool; Regions: JsonNode; Accounts: JsonNode;
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DeleteStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_613657 = newJObject()
  add(query_613657, "OperationId", newJString(OperationId))
  add(query_613657, "StackSetName", newJString(StackSetName))
  add(query_613657, "RetainStacks", newJBool(RetainStacks))
  add(query_613657, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_613657, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_613657, "Action", newJString(Action))
  if Regions != nil:
    query_613657.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_613657.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_613657, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_613657.add "Accounts", Accounts
  add(query_613657, "Version", newJString(Version))
  add(query_613657, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_613656.call(nil, query_613657, nil, nil, nil)

var getDeleteStackInstances* = Call_GetDeleteStackInstances_613633(
    name: "getDeleteStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_GetDeleteStackInstances_613634, base: "/",
    url: url_GetDeleteStackInstances_613635, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackSet_613700 = ref object of OpenApiRestCall_612658
proc url_PostDeleteStackSet_613702(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackSet_613701(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613703 = query.getOrDefault("Action")
  valid_613703 = validateParameter(valid_613703, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_613703 != nil:
    section.add "Action", valid_613703
  var valid_613704 = query.getOrDefault("Version")
  valid_613704 = validateParameter(valid_613704, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613704 != nil:
    section.add "Version", valid_613704
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613705 = header.getOrDefault("X-Amz-Signature")
  valid_613705 = validateParameter(valid_613705, JString, required = false,
                                 default = nil)
  if valid_613705 != nil:
    section.add "X-Amz-Signature", valid_613705
  var valid_613706 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613706 = validateParameter(valid_613706, JString, required = false,
                                 default = nil)
  if valid_613706 != nil:
    section.add "X-Amz-Content-Sha256", valid_613706
  var valid_613707 = header.getOrDefault("X-Amz-Date")
  valid_613707 = validateParameter(valid_613707, JString, required = false,
                                 default = nil)
  if valid_613707 != nil:
    section.add "X-Amz-Date", valid_613707
  var valid_613708 = header.getOrDefault("X-Amz-Credential")
  valid_613708 = validateParameter(valid_613708, JString, required = false,
                                 default = nil)
  if valid_613708 != nil:
    section.add "X-Amz-Credential", valid_613708
  var valid_613709 = header.getOrDefault("X-Amz-Security-Token")
  valid_613709 = validateParameter(valid_613709, JString, required = false,
                                 default = nil)
  if valid_613709 != nil:
    section.add "X-Amz-Security-Token", valid_613709
  var valid_613710 = header.getOrDefault("X-Amz-Algorithm")
  valid_613710 = validateParameter(valid_613710, JString, required = false,
                                 default = nil)
  if valid_613710 != nil:
    section.add "X-Amz-Algorithm", valid_613710
  var valid_613711 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613711 = validateParameter(valid_613711, JString, required = false,
                                 default = nil)
  if valid_613711 != nil:
    section.add "X-Amz-SignedHeaders", valid_613711
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_613712 = formData.getOrDefault("StackSetName")
  valid_613712 = validateParameter(valid_613712, JString, required = true,
                                 default = nil)
  if valid_613712 != nil:
    section.add "StackSetName", valid_613712
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613713: Call_PostDeleteStackSet_613700; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_613713.validator(path, query, header, formData, body)
  let scheme = call_613713.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613713.url(scheme.get, call_613713.host, call_613713.base,
                         call_613713.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613713, url, valid)

proc call*(call_613714: Call_PostDeleteStackSet_613700; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613715 = newJObject()
  var formData_613716 = newJObject()
  add(formData_613716, "StackSetName", newJString(StackSetName))
  add(query_613715, "Action", newJString(Action))
  add(query_613715, "Version", newJString(Version))
  result = call_613714.call(nil, query_613715, nil, formData_613716, nil)

var postDeleteStackSet* = Call_PostDeleteStackSet_613700(
    name: "postDeleteStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackSet",
    validator: validate_PostDeleteStackSet_613701, base: "/",
    url: url_PostDeleteStackSet_613702, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackSet_613684 = ref object of OpenApiRestCall_612658
proc url_GetDeleteStackSet_613686(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackSet_613685(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_613687 = query.getOrDefault("StackSetName")
  valid_613687 = validateParameter(valid_613687, JString, required = true,
                                 default = nil)
  if valid_613687 != nil:
    section.add "StackSetName", valid_613687
  var valid_613688 = query.getOrDefault("Action")
  valid_613688 = validateParameter(valid_613688, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_613688 != nil:
    section.add "Action", valid_613688
  var valid_613689 = query.getOrDefault("Version")
  valid_613689 = validateParameter(valid_613689, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613689 != nil:
    section.add "Version", valid_613689
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613690 = header.getOrDefault("X-Amz-Signature")
  valid_613690 = validateParameter(valid_613690, JString, required = false,
                                 default = nil)
  if valid_613690 != nil:
    section.add "X-Amz-Signature", valid_613690
  var valid_613691 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613691 = validateParameter(valid_613691, JString, required = false,
                                 default = nil)
  if valid_613691 != nil:
    section.add "X-Amz-Content-Sha256", valid_613691
  var valid_613692 = header.getOrDefault("X-Amz-Date")
  valid_613692 = validateParameter(valid_613692, JString, required = false,
                                 default = nil)
  if valid_613692 != nil:
    section.add "X-Amz-Date", valid_613692
  var valid_613693 = header.getOrDefault("X-Amz-Credential")
  valid_613693 = validateParameter(valid_613693, JString, required = false,
                                 default = nil)
  if valid_613693 != nil:
    section.add "X-Amz-Credential", valid_613693
  var valid_613694 = header.getOrDefault("X-Amz-Security-Token")
  valid_613694 = validateParameter(valid_613694, JString, required = false,
                                 default = nil)
  if valid_613694 != nil:
    section.add "X-Amz-Security-Token", valid_613694
  var valid_613695 = header.getOrDefault("X-Amz-Algorithm")
  valid_613695 = validateParameter(valid_613695, JString, required = false,
                                 default = nil)
  if valid_613695 != nil:
    section.add "X-Amz-Algorithm", valid_613695
  var valid_613696 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613696 = validateParameter(valid_613696, JString, required = false,
                                 default = nil)
  if valid_613696 != nil:
    section.add "X-Amz-SignedHeaders", valid_613696
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613697: Call_GetDeleteStackSet_613684; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_613697.validator(path, query, header, formData, body)
  let scheme = call_613697.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613697.url(scheme.get, call_613697.host, call_613697.base,
                         call_613697.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613697, url, valid)

proc call*(call_613698: Call_GetDeleteStackSet_613684; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613699 = newJObject()
  add(query_613699, "StackSetName", newJString(StackSetName))
  add(query_613699, "Action", newJString(Action))
  add(query_613699, "Version", newJString(Version))
  result = call_613698.call(nil, query_613699, nil, nil, nil)

var getDeleteStackSet* = Call_GetDeleteStackSet_613684(name: "getDeleteStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStackSet", validator: validate_GetDeleteStackSet_613685,
    base: "/", url: url_GetDeleteStackSet_613686,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeregisterType_613736 = ref object of OpenApiRestCall_612658
proc url_PostDeregisterType_613738(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeregisterType_613737(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613739 = query.getOrDefault("Action")
  valid_613739 = validateParameter(valid_613739, JString, required = true,
                                 default = newJString("DeregisterType"))
  if valid_613739 != nil:
    section.add "Action", valid_613739
  var valid_613740 = query.getOrDefault("Version")
  valid_613740 = validateParameter(valid_613740, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613740 != nil:
    section.add "Version", valid_613740
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613741 = header.getOrDefault("X-Amz-Signature")
  valid_613741 = validateParameter(valid_613741, JString, required = false,
                                 default = nil)
  if valid_613741 != nil:
    section.add "X-Amz-Signature", valid_613741
  var valid_613742 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613742 = validateParameter(valid_613742, JString, required = false,
                                 default = nil)
  if valid_613742 != nil:
    section.add "X-Amz-Content-Sha256", valid_613742
  var valid_613743 = header.getOrDefault("X-Amz-Date")
  valid_613743 = validateParameter(valid_613743, JString, required = false,
                                 default = nil)
  if valid_613743 != nil:
    section.add "X-Amz-Date", valid_613743
  var valid_613744 = header.getOrDefault("X-Amz-Credential")
  valid_613744 = validateParameter(valid_613744, JString, required = false,
                                 default = nil)
  if valid_613744 != nil:
    section.add "X-Amz-Credential", valid_613744
  var valid_613745 = header.getOrDefault("X-Amz-Security-Token")
  valid_613745 = validateParameter(valid_613745, JString, required = false,
                                 default = nil)
  if valid_613745 != nil:
    section.add "X-Amz-Security-Token", valid_613745
  var valid_613746 = header.getOrDefault("X-Amz-Algorithm")
  valid_613746 = validateParameter(valid_613746, JString, required = false,
                                 default = nil)
  if valid_613746 != nil:
    section.add "X-Amz-Algorithm", valid_613746
  var valid_613747 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613747 = validateParameter(valid_613747, JString, required = false,
                                 default = nil)
  if valid_613747 != nil:
    section.add "X-Amz-SignedHeaders", valid_613747
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  section = newJObject()
  var valid_613748 = formData.getOrDefault("Arn")
  valid_613748 = validateParameter(valid_613748, JString, required = false,
                                 default = nil)
  if valid_613748 != nil:
    section.add "Arn", valid_613748
  var valid_613749 = formData.getOrDefault("VersionId")
  valid_613749 = validateParameter(valid_613749, JString, required = false,
                                 default = nil)
  if valid_613749 != nil:
    section.add "VersionId", valid_613749
  var valid_613750 = formData.getOrDefault("TypeName")
  valid_613750 = validateParameter(valid_613750, JString, required = false,
                                 default = nil)
  if valid_613750 != nil:
    section.add "TypeName", valid_613750
  var valid_613751 = formData.getOrDefault("Type")
  valid_613751 = validateParameter(valid_613751, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_613751 != nil:
    section.add "Type", valid_613751
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613752: Call_PostDeregisterType_613736; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  let valid = call_613752.validator(path, query, header, formData, body)
  let scheme = call_613752.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613752.url(scheme.get, call_613752.host, call_613752.base,
                         call_613752.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613752, url, valid)

proc call*(call_613753: Call_PostDeregisterType_613736; Arn: string = "";
          VersionId: string = ""; TypeName: string = ""; Type: string = "RESOURCE";
          Action: string = "DeregisterType"; Version: string = "2010-05-15"): Recallable =
  ## postDeregisterType
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613754 = newJObject()
  var formData_613755 = newJObject()
  add(formData_613755, "Arn", newJString(Arn))
  add(formData_613755, "VersionId", newJString(VersionId))
  add(formData_613755, "TypeName", newJString(TypeName))
  add(formData_613755, "Type", newJString(Type))
  add(query_613754, "Action", newJString(Action))
  add(query_613754, "Version", newJString(Version))
  result = call_613753.call(nil, query_613754, nil, formData_613755, nil)

var postDeregisterType* = Call_PostDeregisterType_613736(
    name: "postDeregisterType", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeregisterType",
    validator: validate_PostDeregisterType_613737, base: "/",
    url: url_PostDeregisterType_613738, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeregisterType_613717 = ref object of OpenApiRestCall_612658
proc url_GetDeregisterType_613719(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeregisterType_613718(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_613720 = query.getOrDefault("TypeName")
  valid_613720 = validateParameter(valid_613720, JString, required = false,
                                 default = nil)
  if valid_613720 != nil:
    section.add "TypeName", valid_613720
  var valid_613721 = query.getOrDefault("Type")
  valid_613721 = validateParameter(valid_613721, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_613721 != nil:
    section.add "Type", valid_613721
  var valid_613722 = query.getOrDefault("VersionId")
  valid_613722 = validateParameter(valid_613722, JString, required = false,
                                 default = nil)
  if valid_613722 != nil:
    section.add "VersionId", valid_613722
  var valid_613723 = query.getOrDefault("Action")
  valid_613723 = validateParameter(valid_613723, JString, required = true,
                                 default = newJString("DeregisterType"))
  if valid_613723 != nil:
    section.add "Action", valid_613723
  var valid_613724 = query.getOrDefault("Version")
  valid_613724 = validateParameter(valid_613724, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613724 != nil:
    section.add "Version", valid_613724
  var valid_613725 = query.getOrDefault("Arn")
  valid_613725 = validateParameter(valid_613725, JString, required = false,
                                 default = nil)
  if valid_613725 != nil:
    section.add "Arn", valid_613725
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613726 = header.getOrDefault("X-Amz-Signature")
  valid_613726 = validateParameter(valid_613726, JString, required = false,
                                 default = nil)
  if valid_613726 != nil:
    section.add "X-Amz-Signature", valid_613726
  var valid_613727 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613727 = validateParameter(valid_613727, JString, required = false,
                                 default = nil)
  if valid_613727 != nil:
    section.add "X-Amz-Content-Sha256", valid_613727
  var valid_613728 = header.getOrDefault("X-Amz-Date")
  valid_613728 = validateParameter(valid_613728, JString, required = false,
                                 default = nil)
  if valid_613728 != nil:
    section.add "X-Amz-Date", valid_613728
  var valid_613729 = header.getOrDefault("X-Amz-Credential")
  valid_613729 = validateParameter(valid_613729, JString, required = false,
                                 default = nil)
  if valid_613729 != nil:
    section.add "X-Amz-Credential", valid_613729
  var valid_613730 = header.getOrDefault("X-Amz-Security-Token")
  valid_613730 = validateParameter(valid_613730, JString, required = false,
                                 default = nil)
  if valid_613730 != nil:
    section.add "X-Amz-Security-Token", valid_613730
  var valid_613731 = header.getOrDefault("X-Amz-Algorithm")
  valid_613731 = validateParameter(valid_613731, JString, required = false,
                                 default = nil)
  if valid_613731 != nil:
    section.add "X-Amz-Algorithm", valid_613731
  var valid_613732 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613732 = validateParameter(valid_613732, JString, required = false,
                                 default = nil)
  if valid_613732 != nil:
    section.add "X-Amz-SignedHeaders", valid_613732
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613733: Call_GetDeregisterType_613717; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  let valid = call_613733.validator(path, query, header, formData, body)
  let scheme = call_613733.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613733.url(scheme.get, call_613733.host, call_613733.base,
                         call_613733.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613733, url, valid)

proc call*(call_613734: Call_GetDeregisterType_613717; TypeName: string = "";
          Type: string = "RESOURCE"; VersionId: string = "";
          Action: string = "DeregisterType"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getDeregisterType
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_613735 = newJObject()
  add(query_613735, "TypeName", newJString(TypeName))
  add(query_613735, "Type", newJString(Type))
  add(query_613735, "VersionId", newJString(VersionId))
  add(query_613735, "Action", newJString(Action))
  add(query_613735, "Version", newJString(Version))
  add(query_613735, "Arn", newJString(Arn))
  result = call_613734.call(nil, query_613735, nil, nil, nil)

var getDeregisterType* = Call_GetDeregisterType_613717(name: "getDeregisterType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeregisterType", validator: validate_GetDeregisterType_613718,
    base: "/", url: url_GetDeregisterType_613719,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAccountLimits_613772 = ref object of OpenApiRestCall_612658
proc url_PostDescribeAccountLimits_613774(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAccountLimits_613773(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613775 = query.getOrDefault("Action")
  valid_613775 = validateParameter(valid_613775, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_613775 != nil:
    section.add "Action", valid_613775
  var valid_613776 = query.getOrDefault("Version")
  valid_613776 = validateParameter(valid_613776, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613776 != nil:
    section.add "Version", valid_613776
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613777 = header.getOrDefault("X-Amz-Signature")
  valid_613777 = validateParameter(valid_613777, JString, required = false,
                                 default = nil)
  if valid_613777 != nil:
    section.add "X-Amz-Signature", valid_613777
  var valid_613778 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613778 = validateParameter(valid_613778, JString, required = false,
                                 default = nil)
  if valid_613778 != nil:
    section.add "X-Amz-Content-Sha256", valid_613778
  var valid_613779 = header.getOrDefault("X-Amz-Date")
  valid_613779 = validateParameter(valid_613779, JString, required = false,
                                 default = nil)
  if valid_613779 != nil:
    section.add "X-Amz-Date", valid_613779
  var valid_613780 = header.getOrDefault("X-Amz-Credential")
  valid_613780 = validateParameter(valid_613780, JString, required = false,
                                 default = nil)
  if valid_613780 != nil:
    section.add "X-Amz-Credential", valid_613780
  var valid_613781 = header.getOrDefault("X-Amz-Security-Token")
  valid_613781 = validateParameter(valid_613781, JString, required = false,
                                 default = nil)
  if valid_613781 != nil:
    section.add "X-Amz-Security-Token", valid_613781
  var valid_613782 = header.getOrDefault("X-Amz-Algorithm")
  valid_613782 = validateParameter(valid_613782, JString, required = false,
                                 default = nil)
  if valid_613782 != nil:
    section.add "X-Amz-Algorithm", valid_613782
  var valid_613783 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613783 = validateParameter(valid_613783, JString, required = false,
                                 default = nil)
  if valid_613783 != nil:
    section.add "X-Amz-SignedHeaders", valid_613783
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  section = newJObject()
  var valid_613784 = formData.getOrDefault("NextToken")
  valid_613784 = validateParameter(valid_613784, JString, required = false,
                                 default = nil)
  if valid_613784 != nil:
    section.add "NextToken", valid_613784
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613785: Call_PostDescribeAccountLimits_613772; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_613785.validator(path, query, header, formData, body)
  let scheme = call_613785.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613785.url(scheme.get, call_613785.host, call_613785.base,
                         call_613785.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613785, url, valid)

proc call*(call_613786: Call_PostDescribeAccountLimits_613772;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613787 = newJObject()
  var formData_613788 = newJObject()
  add(formData_613788, "NextToken", newJString(NextToken))
  add(query_613787, "Action", newJString(Action))
  add(query_613787, "Version", newJString(Version))
  result = call_613786.call(nil, query_613787, nil, formData_613788, nil)

var postDescribeAccountLimits* = Call_PostDescribeAccountLimits_613772(
    name: "postDescribeAccountLimits", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_PostDescribeAccountLimits_613773, base: "/",
    url: url_PostDescribeAccountLimits_613774,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAccountLimits_613756 = ref object of OpenApiRestCall_612658
proc url_GetDescribeAccountLimits_613758(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAccountLimits_613757(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613759 = query.getOrDefault("NextToken")
  valid_613759 = validateParameter(valid_613759, JString, required = false,
                                 default = nil)
  if valid_613759 != nil:
    section.add "NextToken", valid_613759
  var valid_613760 = query.getOrDefault("Action")
  valid_613760 = validateParameter(valid_613760, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_613760 != nil:
    section.add "Action", valid_613760
  var valid_613761 = query.getOrDefault("Version")
  valid_613761 = validateParameter(valid_613761, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613761 != nil:
    section.add "Version", valid_613761
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613762 = header.getOrDefault("X-Amz-Signature")
  valid_613762 = validateParameter(valid_613762, JString, required = false,
                                 default = nil)
  if valid_613762 != nil:
    section.add "X-Amz-Signature", valid_613762
  var valid_613763 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613763 = validateParameter(valid_613763, JString, required = false,
                                 default = nil)
  if valid_613763 != nil:
    section.add "X-Amz-Content-Sha256", valid_613763
  var valid_613764 = header.getOrDefault("X-Amz-Date")
  valid_613764 = validateParameter(valid_613764, JString, required = false,
                                 default = nil)
  if valid_613764 != nil:
    section.add "X-Amz-Date", valid_613764
  var valid_613765 = header.getOrDefault("X-Amz-Credential")
  valid_613765 = validateParameter(valid_613765, JString, required = false,
                                 default = nil)
  if valid_613765 != nil:
    section.add "X-Amz-Credential", valid_613765
  var valid_613766 = header.getOrDefault("X-Amz-Security-Token")
  valid_613766 = validateParameter(valid_613766, JString, required = false,
                                 default = nil)
  if valid_613766 != nil:
    section.add "X-Amz-Security-Token", valid_613766
  var valid_613767 = header.getOrDefault("X-Amz-Algorithm")
  valid_613767 = validateParameter(valid_613767, JString, required = false,
                                 default = nil)
  if valid_613767 != nil:
    section.add "X-Amz-Algorithm", valid_613767
  var valid_613768 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613768 = validateParameter(valid_613768, JString, required = false,
                                 default = nil)
  if valid_613768 != nil:
    section.add "X-Amz-SignedHeaders", valid_613768
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613769: Call_GetDescribeAccountLimits_613756; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_613769.validator(path, query, header, formData, body)
  let scheme = call_613769.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613769.url(scheme.get, call_613769.host, call_613769.base,
                         call_613769.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613769, url, valid)

proc call*(call_613770: Call_GetDescribeAccountLimits_613756;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613771 = newJObject()
  add(query_613771, "NextToken", newJString(NextToken))
  add(query_613771, "Action", newJString(Action))
  add(query_613771, "Version", newJString(Version))
  result = call_613770.call(nil, query_613771, nil, nil, nil)

var getDescribeAccountLimits* = Call_GetDescribeAccountLimits_613756(
    name: "getDescribeAccountLimits", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_GetDescribeAccountLimits_613757, base: "/",
    url: url_GetDescribeAccountLimits_613758, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeChangeSet_613807 = ref object of OpenApiRestCall_612658
proc url_PostDescribeChangeSet_613809(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeChangeSet_613808(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613810 = query.getOrDefault("Action")
  valid_613810 = validateParameter(valid_613810, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_613810 != nil:
    section.add "Action", valid_613810
  var valid_613811 = query.getOrDefault("Version")
  valid_613811 = validateParameter(valid_613811, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613811 != nil:
    section.add "Version", valid_613811
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613812 = header.getOrDefault("X-Amz-Signature")
  valid_613812 = validateParameter(valid_613812, JString, required = false,
                                 default = nil)
  if valid_613812 != nil:
    section.add "X-Amz-Signature", valid_613812
  var valid_613813 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613813 = validateParameter(valid_613813, JString, required = false,
                                 default = nil)
  if valid_613813 != nil:
    section.add "X-Amz-Content-Sha256", valid_613813
  var valid_613814 = header.getOrDefault("X-Amz-Date")
  valid_613814 = validateParameter(valid_613814, JString, required = false,
                                 default = nil)
  if valid_613814 != nil:
    section.add "X-Amz-Date", valid_613814
  var valid_613815 = header.getOrDefault("X-Amz-Credential")
  valid_613815 = validateParameter(valid_613815, JString, required = false,
                                 default = nil)
  if valid_613815 != nil:
    section.add "X-Amz-Credential", valid_613815
  var valid_613816 = header.getOrDefault("X-Amz-Security-Token")
  valid_613816 = validateParameter(valid_613816, JString, required = false,
                                 default = nil)
  if valid_613816 != nil:
    section.add "X-Amz-Security-Token", valid_613816
  var valid_613817 = header.getOrDefault("X-Amz-Algorithm")
  valid_613817 = validateParameter(valid_613817, JString, required = false,
                                 default = nil)
  if valid_613817 != nil:
    section.add "X-Amz-Algorithm", valid_613817
  var valid_613818 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613818 = validateParameter(valid_613818, JString, required = false,
                                 default = nil)
  if valid_613818 != nil:
    section.add "X-Amz-SignedHeaders", valid_613818
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  section = newJObject()
  var valid_613819 = formData.getOrDefault("StackName")
  valid_613819 = validateParameter(valid_613819, JString, required = false,
                                 default = nil)
  if valid_613819 != nil:
    section.add "StackName", valid_613819
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_613820 = formData.getOrDefault("ChangeSetName")
  valid_613820 = validateParameter(valid_613820, JString, required = true,
                                 default = nil)
  if valid_613820 != nil:
    section.add "ChangeSetName", valid_613820
  var valid_613821 = formData.getOrDefault("NextToken")
  valid_613821 = validateParameter(valid_613821, JString, required = false,
                                 default = nil)
  if valid_613821 != nil:
    section.add "NextToken", valid_613821
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613822: Call_PostDescribeChangeSet_613807; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_613822.validator(path, query, header, formData, body)
  let scheme = call_613822.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613822.url(scheme.get, call_613822.host, call_613822.base,
                         call_613822.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613822, url, valid)

proc call*(call_613823: Call_PostDescribeChangeSet_613807; ChangeSetName: string;
          StackName: string = ""; NextToken: string = "";
          Action: string = "DescribeChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613824 = newJObject()
  var formData_613825 = newJObject()
  add(formData_613825, "StackName", newJString(StackName))
  add(formData_613825, "ChangeSetName", newJString(ChangeSetName))
  add(formData_613825, "NextToken", newJString(NextToken))
  add(query_613824, "Action", newJString(Action))
  add(query_613824, "Version", newJString(Version))
  result = call_613823.call(nil, query_613824, nil, formData_613825, nil)

var postDescribeChangeSet* = Call_PostDescribeChangeSet_613807(
    name: "postDescribeChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_PostDescribeChangeSet_613808, base: "/",
    url: url_PostDescribeChangeSet_613809, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeChangeSet_613789 = ref object of OpenApiRestCall_612658
proc url_GetDescribeChangeSet_613791(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeChangeSet_613790(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Action: JString (required)
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   Version: JString (required)
  section = newJObject()
  var valid_613792 = query.getOrDefault("NextToken")
  valid_613792 = validateParameter(valid_613792, JString, required = false,
                                 default = nil)
  if valid_613792 != nil:
    section.add "NextToken", valid_613792
  var valid_613793 = query.getOrDefault("StackName")
  valid_613793 = validateParameter(valid_613793, JString, required = false,
                                 default = nil)
  if valid_613793 != nil:
    section.add "StackName", valid_613793
  var valid_613794 = query.getOrDefault("Action")
  valid_613794 = validateParameter(valid_613794, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_613794 != nil:
    section.add "Action", valid_613794
  var valid_613795 = query.getOrDefault("ChangeSetName")
  valid_613795 = validateParameter(valid_613795, JString, required = true,
                                 default = nil)
  if valid_613795 != nil:
    section.add "ChangeSetName", valid_613795
  var valid_613796 = query.getOrDefault("Version")
  valid_613796 = validateParameter(valid_613796, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613796 != nil:
    section.add "Version", valid_613796
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613797 = header.getOrDefault("X-Amz-Signature")
  valid_613797 = validateParameter(valid_613797, JString, required = false,
                                 default = nil)
  if valid_613797 != nil:
    section.add "X-Amz-Signature", valid_613797
  var valid_613798 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613798 = validateParameter(valid_613798, JString, required = false,
                                 default = nil)
  if valid_613798 != nil:
    section.add "X-Amz-Content-Sha256", valid_613798
  var valid_613799 = header.getOrDefault("X-Amz-Date")
  valid_613799 = validateParameter(valid_613799, JString, required = false,
                                 default = nil)
  if valid_613799 != nil:
    section.add "X-Amz-Date", valid_613799
  var valid_613800 = header.getOrDefault("X-Amz-Credential")
  valid_613800 = validateParameter(valid_613800, JString, required = false,
                                 default = nil)
  if valid_613800 != nil:
    section.add "X-Amz-Credential", valid_613800
  var valid_613801 = header.getOrDefault("X-Amz-Security-Token")
  valid_613801 = validateParameter(valid_613801, JString, required = false,
                                 default = nil)
  if valid_613801 != nil:
    section.add "X-Amz-Security-Token", valid_613801
  var valid_613802 = header.getOrDefault("X-Amz-Algorithm")
  valid_613802 = validateParameter(valid_613802, JString, required = false,
                                 default = nil)
  if valid_613802 != nil:
    section.add "X-Amz-Algorithm", valid_613802
  var valid_613803 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613803 = validateParameter(valid_613803, JString, required = false,
                                 default = nil)
  if valid_613803 != nil:
    section.add "X-Amz-SignedHeaders", valid_613803
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613804: Call_GetDescribeChangeSet_613789; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_613804.validator(path, query, header, formData, body)
  let scheme = call_613804.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613804.url(scheme.get, call_613804.host, call_613804.base,
                         call_613804.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613804, url, valid)

proc call*(call_613805: Call_GetDescribeChangeSet_613789; ChangeSetName: string;
          NextToken: string = ""; StackName: string = "";
          Action: string = "DescribeChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   Version: string (required)
  var query_613806 = newJObject()
  add(query_613806, "NextToken", newJString(NextToken))
  add(query_613806, "StackName", newJString(StackName))
  add(query_613806, "Action", newJString(Action))
  add(query_613806, "ChangeSetName", newJString(ChangeSetName))
  add(query_613806, "Version", newJString(Version))
  result = call_613805.call(nil, query_613806, nil, nil, nil)

var getDescribeChangeSet* = Call_GetDescribeChangeSet_613789(
    name: "getDescribeChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_GetDescribeChangeSet_613790, base: "/",
    url: url_GetDescribeChangeSet_613791, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackDriftDetectionStatus_613842 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackDriftDetectionStatus_613844(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackDriftDetectionStatus_613843(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613845 = query.getOrDefault("Action")
  valid_613845 = validateParameter(valid_613845, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_613845 != nil:
    section.add "Action", valid_613845
  var valid_613846 = query.getOrDefault("Version")
  valid_613846 = validateParameter(valid_613846, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613846 != nil:
    section.add "Version", valid_613846
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613847 = header.getOrDefault("X-Amz-Signature")
  valid_613847 = validateParameter(valid_613847, JString, required = false,
                                 default = nil)
  if valid_613847 != nil:
    section.add "X-Amz-Signature", valid_613847
  var valid_613848 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613848 = validateParameter(valid_613848, JString, required = false,
                                 default = nil)
  if valid_613848 != nil:
    section.add "X-Amz-Content-Sha256", valid_613848
  var valid_613849 = header.getOrDefault("X-Amz-Date")
  valid_613849 = validateParameter(valid_613849, JString, required = false,
                                 default = nil)
  if valid_613849 != nil:
    section.add "X-Amz-Date", valid_613849
  var valid_613850 = header.getOrDefault("X-Amz-Credential")
  valid_613850 = validateParameter(valid_613850, JString, required = false,
                                 default = nil)
  if valid_613850 != nil:
    section.add "X-Amz-Credential", valid_613850
  var valid_613851 = header.getOrDefault("X-Amz-Security-Token")
  valid_613851 = validateParameter(valid_613851, JString, required = false,
                                 default = nil)
  if valid_613851 != nil:
    section.add "X-Amz-Security-Token", valid_613851
  var valid_613852 = header.getOrDefault("X-Amz-Algorithm")
  valid_613852 = validateParameter(valid_613852, JString, required = false,
                                 default = nil)
  if valid_613852 != nil:
    section.add "X-Amz-Algorithm", valid_613852
  var valid_613853 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613853 = validateParameter(valid_613853, JString, required = false,
                                 default = nil)
  if valid_613853 != nil:
    section.add "X-Amz-SignedHeaders", valid_613853
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackDriftDetectionId` field"
  var valid_613854 = formData.getOrDefault("StackDriftDetectionId")
  valid_613854 = validateParameter(valid_613854, JString, required = true,
                                 default = nil)
  if valid_613854 != nil:
    section.add "StackDriftDetectionId", valid_613854
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613855: Call_PostDescribeStackDriftDetectionStatus_613842;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_613855.validator(path, query, header, formData, body)
  let scheme = call_613855.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613855.url(scheme.get, call_613855.host, call_613855.base,
                         call_613855.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613855, url, valid)

proc call*(call_613856: Call_PostDescribeStackDriftDetectionStatus_613842;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613857 = newJObject()
  var formData_613858 = newJObject()
  add(formData_613858, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_613857, "Action", newJString(Action))
  add(query_613857, "Version", newJString(Version))
  result = call_613856.call(nil, query_613857, nil, formData_613858, nil)

var postDescribeStackDriftDetectionStatus* = Call_PostDescribeStackDriftDetectionStatus_613842(
    name: "postDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_PostDescribeStackDriftDetectionStatus_613843, base: "/",
    url: url_PostDescribeStackDriftDetectionStatus_613844,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackDriftDetectionStatus_613826 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackDriftDetectionStatus_613828(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackDriftDetectionStatus_613827(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `StackDriftDetectionId` field"
  var valid_613829 = query.getOrDefault("StackDriftDetectionId")
  valid_613829 = validateParameter(valid_613829, JString, required = true,
                                 default = nil)
  if valid_613829 != nil:
    section.add "StackDriftDetectionId", valid_613829
  var valid_613830 = query.getOrDefault("Action")
  valid_613830 = validateParameter(valid_613830, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_613830 != nil:
    section.add "Action", valid_613830
  var valid_613831 = query.getOrDefault("Version")
  valid_613831 = validateParameter(valid_613831, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613831 != nil:
    section.add "Version", valid_613831
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613832 = header.getOrDefault("X-Amz-Signature")
  valid_613832 = validateParameter(valid_613832, JString, required = false,
                                 default = nil)
  if valid_613832 != nil:
    section.add "X-Amz-Signature", valid_613832
  var valid_613833 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613833 = validateParameter(valid_613833, JString, required = false,
                                 default = nil)
  if valid_613833 != nil:
    section.add "X-Amz-Content-Sha256", valid_613833
  var valid_613834 = header.getOrDefault("X-Amz-Date")
  valid_613834 = validateParameter(valid_613834, JString, required = false,
                                 default = nil)
  if valid_613834 != nil:
    section.add "X-Amz-Date", valid_613834
  var valid_613835 = header.getOrDefault("X-Amz-Credential")
  valid_613835 = validateParameter(valid_613835, JString, required = false,
                                 default = nil)
  if valid_613835 != nil:
    section.add "X-Amz-Credential", valid_613835
  var valid_613836 = header.getOrDefault("X-Amz-Security-Token")
  valid_613836 = validateParameter(valid_613836, JString, required = false,
                                 default = nil)
  if valid_613836 != nil:
    section.add "X-Amz-Security-Token", valid_613836
  var valid_613837 = header.getOrDefault("X-Amz-Algorithm")
  valid_613837 = validateParameter(valid_613837, JString, required = false,
                                 default = nil)
  if valid_613837 != nil:
    section.add "X-Amz-Algorithm", valid_613837
  var valid_613838 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613838 = validateParameter(valid_613838, JString, required = false,
                                 default = nil)
  if valid_613838 != nil:
    section.add "X-Amz-SignedHeaders", valid_613838
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613839: Call_GetDescribeStackDriftDetectionStatus_613826;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_613839.validator(path, query, header, formData, body)
  let scheme = call_613839.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613839.url(scheme.get, call_613839.host, call_613839.base,
                         call_613839.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613839, url, valid)

proc call*(call_613840: Call_GetDescribeStackDriftDetectionStatus_613826;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613841 = newJObject()
  add(query_613841, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_613841, "Action", newJString(Action))
  add(query_613841, "Version", newJString(Version))
  result = call_613840.call(nil, query_613841, nil, nil, nil)

var getDescribeStackDriftDetectionStatus* = Call_GetDescribeStackDriftDetectionStatus_613826(
    name: "getDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_GetDescribeStackDriftDetectionStatus_613827, base: "/",
    url: url_GetDescribeStackDriftDetectionStatus_613828,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackEvents_613876 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackEvents_613878(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackEvents_613877(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613879 = query.getOrDefault("Action")
  valid_613879 = validateParameter(valid_613879, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_613879 != nil:
    section.add "Action", valid_613879
  var valid_613880 = query.getOrDefault("Version")
  valid_613880 = validateParameter(valid_613880, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613880 != nil:
    section.add "Version", valid_613880
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613881 = header.getOrDefault("X-Amz-Signature")
  valid_613881 = validateParameter(valid_613881, JString, required = false,
                                 default = nil)
  if valid_613881 != nil:
    section.add "X-Amz-Signature", valid_613881
  var valid_613882 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613882 = validateParameter(valid_613882, JString, required = false,
                                 default = nil)
  if valid_613882 != nil:
    section.add "X-Amz-Content-Sha256", valid_613882
  var valid_613883 = header.getOrDefault("X-Amz-Date")
  valid_613883 = validateParameter(valid_613883, JString, required = false,
                                 default = nil)
  if valid_613883 != nil:
    section.add "X-Amz-Date", valid_613883
  var valid_613884 = header.getOrDefault("X-Amz-Credential")
  valid_613884 = validateParameter(valid_613884, JString, required = false,
                                 default = nil)
  if valid_613884 != nil:
    section.add "X-Amz-Credential", valid_613884
  var valid_613885 = header.getOrDefault("X-Amz-Security-Token")
  valid_613885 = validateParameter(valid_613885, JString, required = false,
                                 default = nil)
  if valid_613885 != nil:
    section.add "X-Amz-Security-Token", valid_613885
  var valid_613886 = header.getOrDefault("X-Amz-Algorithm")
  valid_613886 = validateParameter(valid_613886, JString, required = false,
                                 default = nil)
  if valid_613886 != nil:
    section.add "X-Amz-Algorithm", valid_613886
  var valid_613887 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613887 = validateParameter(valid_613887, JString, required = false,
                                 default = nil)
  if valid_613887 != nil:
    section.add "X-Amz-SignedHeaders", valid_613887
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  section = newJObject()
  var valid_613888 = formData.getOrDefault("StackName")
  valid_613888 = validateParameter(valid_613888, JString, required = false,
                                 default = nil)
  if valid_613888 != nil:
    section.add "StackName", valid_613888
  var valid_613889 = formData.getOrDefault("NextToken")
  valid_613889 = validateParameter(valid_613889, JString, required = false,
                                 default = nil)
  if valid_613889 != nil:
    section.add "NextToken", valid_613889
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613890: Call_PostDescribeStackEvents_613876; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_613890.validator(path, query, header, formData, body)
  let scheme = call_613890.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613890.url(scheme.get, call_613890.host, call_613890.base,
                         call_613890.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613890, url, valid)

proc call*(call_613891: Call_PostDescribeStackEvents_613876;
          StackName: string = ""; NextToken: string = "";
          Action: string = "DescribeStackEvents"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613892 = newJObject()
  var formData_613893 = newJObject()
  add(formData_613893, "StackName", newJString(StackName))
  add(formData_613893, "NextToken", newJString(NextToken))
  add(query_613892, "Action", newJString(Action))
  add(query_613892, "Version", newJString(Version))
  result = call_613891.call(nil, query_613892, nil, formData_613893, nil)

var postDescribeStackEvents* = Call_PostDescribeStackEvents_613876(
    name: "postDescribeStackEvents", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_PostDescribeStackEvents_613877, base: "/",
    url: url_PostDescribeStackEvents_613878, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackEvents_613859 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackEvents_613861(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackEvents_613860(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613862 = query.getOrDefault("NextToken")
  valid_613862 = validateParameter(valid_613862, JString, required = false,
                                 default = nil)
  if valid_613862 != nil:
    section.add "NextToken", valid_613862
  var valid_613863 = query.getOrDefault("StackName")
  valid_613863 = validateParameter(valid_613863, JString, required = false,
                                 default = nil)
  if valid_613863 != nil:
    section.add "StackName", valid_613863
  var valid_613864 = query.getOrDefault("Action")
  valid_613864 = validateParameter(valid_613864, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_613864 != nil:
    section.add "Action", valid_613864
  var valid_613865 = query.getOrDefault("Version")
  valid_613865 = validateParameter(valid_613865, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613865 != nil:
    section.add "Version", valid_613865
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613866 = header.getOrDefault("X-Amz-Signature")
  valid_613866 = validateParameter(valid_613866, JString, required = false,
                                 default = nil)
  if valid_613866 != nil:
    section.add "X-Amz-Signature", valid_613866
  var valid_613867 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613867 = validateParameter(valid_613867, JString, required = false,
                                 default = nil)
  if valid_613867 != nil:
    section.add "X-Amz-Content-Sha256", valid_613867
  var valid_613868 = header.getOrDefault("X-Amz-Date")
  valid_613868 = validateParameter(valid_613868, JString, required = false,
                                 default = nil)
  if valid_613868 != nil:
    section.add "X-Amz-Date", valid_613868
  var valid_613869 = header.getOrDefault("X-Amz-Credential")
  valid_613869 = validateParameter(valid_613869, JString, required = false,
                                 default = nil)
  if valid_613869 != nil:
    section.add "X-Amz-Credential", valid_613869
  var valid_613870 = header.getOrDefault("X-Amz-Security-Token")
  valid_613870 = validateParameter(valid_613870, JString, required = false,
                                 default = nil)
  if valid_613870 != nil:
    section.add "X-Amz-Security-Token", valid_613870
  var valid_613871 = header.getOrDefault("X-Amz-Algorithm")
  valid_613871 = validateParameter(valid_613871, JString, required = false,
                                 default = nil)
  if valid_613871 != nil:
    section.add "X-Amz-Algorithm", valid_613871
  var valid_613872 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613872 = validateParameter(valid_613872, JString, required = false,
                                 default = nil)
  if valid_613872 != nil:
    section.add "X-Amz-SignedHeaders", valid_613872
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613873: Call_GetDescribeStackEvents_613859; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_613873.validator(path, query, header, formData, body)
  let scheme = call_613873.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613873.url(scheme.get, call_613873.host, call_613873.base,
                         call_613873.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613873, url, valid)

proc call*(call_613874: Call_GetDescribeStackEvents_613859; NextToken: string = "";
          StackName: string = ""; Action: string = "DescribeStackEvents";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613875 = newJObject()
  add(query_613875, "NextToken", newJString(NextToken))
  add(query_613875, "StackName", newJString(StackName))
  add(query_613875, "Action", newJString(Action))
  add(query_613875, "Version", newJString(Version))
  result = call_613874.call(nil, query_613875, nil, nil, nil)

var getDescribeStackEvents* = Call_GetDescribeStackEvents_613859(
    name: "getDescribeStackEvents", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_GetDescribeStackEvents_613860, base: "/",
    url: url_GetDescribeStackEvents_613861, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackInstance_613912 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackInstance_613914(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackInstance_613913(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613915 = query.getOrDefault("Action")
  valid_613915 = validateParameter(valid_613915, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_613915 != nil:
    section.add "Action", valid_613915
  var valid_613916 = query.getOrDefault("Version")
  valid_613916 = validateParameter(valid_613916, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613916 != nil:
    section.add "Version", valid_613916
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613917 = header.getOrDefault("X-Amz-Signature")
  valid_613917 = validateParameter(valid_613917, JString, required = false,
                                 default = nil)
  if valid_613917 != nil:
    section.add "X-Amz-Signature", valid_613917
  var valid_613918 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613918 = validateParameter(valid_613918, JString, required = false,
                                 default = nil)
  if valid_613918 != nil:
    section.add "X-Amz-Content-Sha256", valid_613918
  var valid_613919 = header.getOrDefault("X-Amz-Date")
  valid_613919 = validateParameter(valid_613919, JString, required = false,
                                 default = nil)
  if valid_613919 != nil:
    section.add "X-Amz-Date", valid_613919
  var valid_613920 = header.getOrDefault("X-Amz-Credential")
  valid_613920 = validateParameter(valid_613920, JString, required = false,
                                 default = nil)
  if valid_613920 != nil:
    section.add "X-Amz-Credential", valid_613920
  var valid_613921 = header.getOrDefault("X-Amz-Security-Token")
  valid_613921 = validateParameter(valid_613921, JString, required = false,
                                 default = nil)
  if valid_613921 != nil:
    section.add "X-Amz-Security-Token", valid_613921
  var valid_613922 = header.getOrDefault("X-Amz-Algorithm")
  valid_613922 = validateParameter(valid_613922, JString, required = false,
                                 default = nil)
  if valid_613922 != nil:
    section.add "X-Amz-Algorithm", valid_613922
  var valid_613923 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613923 = validateParameter(valid_613923, JString, required = false,
                                 default = nil)
  if valid_613923 != nil:
    section.add "X-Amz-SignedHeaders", valid_613923
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackInstanceRegion` field"
  var valid_613924 = formData.getOrDefault("StackInstanceRegion")
  valid_613924 = validateParameter(valid_613924, JString, required = true,
                                 default = nil)
  if valid_613924 != nil:
    section.add "StackInstanceRegion", valid_613924
  var valid_613925 = formData.getOrDefault("StackSetName")
  valid_613925 = validateParameter(valid_613925, JString, required = true,
                                 default = nil)
  if valid_613925 != nil:
    section.add "StackSetName", valid_613925
  var valid_613926 = formData.getOrDefault("StackInstanceAccount")
  valid_613926 = validateParameter(valid_613926, JString, required = true,
                                 default = nil)
  if valid_613926 != nil:
    section.add "StackInstanceAccount", valid_613926
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613927: Call_PostDescribeStackInstance_613912; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_613927.validator(path, query, header, formData, body)
  let scheme = call_613927.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613927.url(scheme.get, call_613927.host, call_613927.base,
                         call_613927.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613927, url, valid)

proc call*(call_613928: Call_PostDescribeStackInstance_613912;
          StackInstanceRegion: string; StackSetName: string;
          StackInstanceAccount: string; Action: string = "DescribeStackInstance";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613929 = newJObject()
  var formData_613930 = newJObject()
  add(formData_613930, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_613930, "StackSetName", newJString(StackSetName))
  add(formData_613930, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_613929, "Action", newJString(Action))
  add(query_613929, "Version", newJString(Version))
  result = call_613928.call(nil, query_613929, nil, formData_613930, nil)

var postDescribeStackInstance* = Call_PostDescribeStackInstance_613912(
    name: "postDescribeStackInstance", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_PostDescribeStackInstance_613913, base: "/",
    url: url_PostDescribeStackInstance_613914,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackInstance_613894 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackInstance_613896(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackInstance_613895(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_613897 = query.getOrDefault("StackSetName")
  valid_613897 = validateParameter(valid_613897, JString, required = true,
                                 default = nil)
  if valid_613897 != nil:
    section.add "StackSetName", valid_613897
  var valid_613898 = query.getOrDefault("StackInstanceRegion")
  valid_613898 = validateParameter(valid_613898, JString, required = true,
                                 default = nil)
  if valid_613898 != nil:
    section.add "StackInstanceRegion", valid_613898
  var valid_613899 = query.getOrDefault("StackInstanceAccount")
  valid_613899 = validateParameter(valid_613899, JString, required = true,
                                 default = nil)
  if valid_613899 != nil:
    section.add "StackInstanceAccount", valid_613899
  var valid_613900 = query.getOrDefault("Action")
  valid_613900 = validateParameter(valid_613900, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_613900 != nil:
    section.add "Action", valid_613900
  var valid_613901 = query.getOrDefault("Version")
  valid_613901 = validateParameter(valid_613901, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613901 != nil:
    section.add "Version", valid_613901
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613902 = header.getOrDefault("X-Amz-Signature")
  valid_613902 = validateParameter(valid_613902, JString, required = false,
                                 default = nil)
  if valid_613902 != nil:
    section.add "X-Amz-Signature", valid_613902
  var valid_613903 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613903 = validateParameter(valid_613903, JString, required = false,
                                 default = nil)
  if valid_613903 != nil:
    section.add "X-Amz-Content-Sha256", valid_613903
  var valid_613904 = header.getOrDefault("X-Amz-Date")
  valid_613904 = validateParameter(valid_613904, JString, required = false,
                                 default = nil)
  if valid_613904 != nil:
    section.add "X-Amz-Date", valid_613904
  var valid_613905 = header.getOrDefault("X-Amz-Credential")
  valid_613905 = validateParameter(valid_613905, JString, required = false,
                                 default = nil)
  if valid_613905 != nil:
    section.add "X-Amz-Credential", valid_613905
  var valid_613906 = header.getOrDefault("X-Amz-Security-Token")
  valid_613906 = validateParameter(valid_613906, JString, required = false,
                                 default = nil)
  if valid_613906 != nil:
    section.add "X-Amz-Security-Token", valid_613906
  var valid_613907 = header.getOrDefault("X-Amz-Algorithm")
  valid_613907 = validateParameter(valid_613907, JString, required = false,
                                 default = nil)
  if valid_613907 != nil:
    section.add "X-Amz-Algorithm", valid_613907
  var valid_613908 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613908 = validateParameter(valid_613908, JString, required = false,
                                 default = nil)
  if valid_613908 != nil:
    section.add "X-Amz-SignedHeaders", valid_613908
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613909: Call_GetDescribeStackInstance_613894; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_613909.validator(path, query, header, formData, body)
  let scheme = call_613909.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613909.url(scheme.get, call_613909.host, call_613909.base,
                         call_613909.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613909, url, valid)

proc call*(call_613910: Call_GetDescribeStackInstance_613894; StackSetName: string;
          StackInstanceRegion: string; StackInstanceAccount: string;
          Action: string = "DescribeStackInstance"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613911 = newJObject()
  add(query_613911, "StackSetName", newJString(StackSetName))
  add(query_613911, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_613911, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_613911, "Action", newJString(Action))
  add(query_613911, "Version", newJString(Version))
  result = call_613910.call(nil, query_613911, nil, nil, nil)

var getDescribeStackInstance* = Call_GetDescribeStackInstance_613894(
    name: "getDescribeStackInstance", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_GetDescribeStackInstance_613895, base: "/",
    url: url_GetDescribeStackInstance_613896, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResource_613948 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackResource_613950(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResource_613949(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613951 = query.getOrDefault("Action")
  valid_613951 = validateParameter(valid_613951, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_613951 != nil:
    section.add "Action", valid_613951
  var valid_613952 = query.getOrDefault("Version")
  valid_613952 = validateParameter(valid_613952, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613952 != nil:
    section.add "Version", valid_613952
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613953 = header.getOrDefault("X-Amz-Signature")
  valid_613953 = validateParameter(valid_613953, JString, required = false,
                                 default = nil)
  if valid_613953 != nil:
    section.add "X-Amz-Signature", valid_613953
  var valid_613954 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613954 = validateParameter(valid_613954, JString, required = false,
                                 default = nil)
  if valid_613954 != nil:
    section.add "X-Amz-Content-Sha256", valid_613954
  var valid_613955 = header.getOrDefault("X-Amz-Date")
  valid_613955 = validateParameter(valid_613955, JString, required = false,
                                 default = nil)
  if valid_613955 != nil:
    section.add "X-Amz-Date", valid_613955
  var valid_613956 = header.getOrDefault("X-Amz-Credential")
  valid_613956 = validateParameter(valid_613956, JString, required = false,
                                 default = nil)
  if valid_613956 != nil:
    section.add "X-Amz-Credential", valid_613956
  var valid_613957 = header.getOrDefault("X-Amz-Security-Token")
  valid_613957 = validateParameter(valid_613957, JString, required = false,
                                 default = nil)
  if valid_613957 != nil:
    section.add "X-Amz-Security-Token", valid_613957
  var valid_613958 = header.getOrDefault("X-Amz-Algorithm")
  valid_613958 = validateParameter(valid_613958, JString, required = false,
                                 default = nil)
  if valid_613958 != nil:
    section.add "X-Amz-Algorithm", valid_613958
  var valid_613959 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613959 = validateParameter(valid_613959, JString, required = false,
                                 default = nil)
  if valid_613959 != nil:
    section.add "X-Amz-SignedHeaders", valid_613959
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_613960 = formData.getOrDefault("StackName")
  valid_613960 = validateParameter(valid_613960, JString, required = true,
                                 default = nil)
  if valid_613960 != nil:
    section.add "StackName", valid_613960
  var valid_613961 = formData.getOrDefault("LogicalResourceId")
  valid_613961 = validateParameter(valid_613961, JString, required = true,
                                 default = nil)
  if valid_613961 != nil:
    section.add "LogicalResourceId", valid_613961
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613962: Call_PostDescribeStackResource_613948; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_613962.validator(path, query, header, formData, body)
  let scheme = call_613962.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613962.url(scheme.get, call_613962.host, call_613962.base,
                         call_613962.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613962, url, valid)

proc call*(call_613963: Call_PostDescribeStackResource_613948; StackName: string;
          LogicalResourceId: string; Action: string = "DescribeStackResource";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_613964 = newJObject()
  var formData_613965 = newJObject()
  add(formData_613965, "StackName", newJString(StackName))
  add(query_613964, "Action", newJString(Action))
  add(query_613964, "Version", newJString(Version))
  add(formData_613965, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_613963.call(nil, query_613964, nil, formData_613965, nil)

var postDescribeStackResource* = Call_PostDescribeStackResource_613948(
    name: "postDescribeStackResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_PostDescribeStackResource_613949, base: "/",
    url: url_PostDescribeStackResource_613950,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResource_613931 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackResource_613933(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResource_613932(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_613934 = query.getOrDefault("StackName")
  valid_613934 = validateParameter(valid_613934, JString, required = true,
                                 default = nil)
  if valid_613934 != nil:
    section.add "StackName", valid_613934
  var valid_613935 = query.getOrDefault("Action")
  valid_613935 = validateParameter(valid_613935, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_613935 != nil:
    section.add "Action", valid_613935
  var valid_613936 = query.getOrDefault("Version")
  valid_613936 = validateParameter(valid_613936, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613936 != nil:
    section.add "Version", valid_613936
  var valid_613937 = query.getOrDefault("LogicalResourceId")
  valid_613937 = validateParameter(valid_613937, JString, required = true,
                                 default = nil)
  if valid_613937 != nil:
    section.add "LogicalResourceId", valid_613937
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613938 = header.getOrDefault("X-Amz-Signature")
  valid_613938 = validateParameter(valid_613938, JString, required = false,
                                 default = nil)
  if valid_613938 != nil:
    section.add "X-Amz-Signature", valid_613938
  var valid_613939 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613939 = validateParameter(valid_613939, JString, required = false,
                                 default = nil)
  if valid_613939 != nil:
    section.add "X-Amz-Content-Sha256", valid_613939
  var valid_613940 = header.getOrDefault("X-Amz-Date")
  valid_613940 = validateParameter(valid_613940, JString, required = false,
                                 default = nil)
  if valid_613940 != nil:
    section.add "X-Amz-Date", valid_613940
  var valid_613941 = header.getOrDefault("X-Amz-Credential")
  valid_613941 = validateParameter(valid_613941, JString, required = false,
                                 default = nil)
  if valid_613941 != nil:
    section.add "X-Amz-Credential", valid_613941
  var valid_613942 = header.getOrDefault("X-Amz-Security-Token")
  valid_613942 = validateParameter(valid_613942, JString, required = false,
                                 default = nil)
  if valid_613942 != nil:
    section.add "X-Amz-Security-Token", valid_613942
  var valid_613943 = header.getOrDefault("X-Amz-Algorithm")
  valid_613943 = validateParameter(valid_613943, JString, required = false,
                                 default = nil)
  if valid_613943 != nil:
    section.add "X-Amz-Algorithm", valid_613943
  var valid_613944 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613944 = validateParameter(valid_613944, JString, required = false,
                                 default = nil)
  if valid_613944 != nil:
    section.add "X-Amz-SignedHeaders", valid_613944
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613945: Call_GetDescribeStackResource_613931; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_613945.validator(path, query, header, formData, body)
  let scheme = call_613945.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613945.url(scheme.get, call_613945.host, call_613945.base,
                         call_613945.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613945, url, valid)

proc call*(call_613946: Call_GetDescribeStackResource_613931; StackName: string;
          LogicalResourceId: string; Action: string = "DescribeStackResource";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_613947 = newJObject()
  add(query_613947, "StackName", newJString(StackName))
  add(query_613947, "Action", newJString(Action))
  add(query_613947, "Version", newJString(Version))
  add(query_613947, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_613946.call(nil, query_613947, nil, nil, nil)

var getDescribeStackResource* = Call_GetDescribeStackResource_613931(
    name: "getDescribeStackResource", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_GetDescribeStackResource_613932, base: "/",
    url: url_GetDescribeStackResource_613933, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResourceDrifts_613985 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackResourceDrifts_613987(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResourceDrifts_613986(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613988 = query.getOrDefault("Action")
  valid_613988 = validateParameter(valid_613988, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_613988 != nil:
    section.add "Action", valid_613988
  var valid_613989 = query.getOrDefault("Version")
  valid_613989 = validateParameter(valid_613989, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613989 != nil:
    section.add "Version", valid_613989
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613990 = header.getOrDefault("X-Amz-Signature")
  valid_613990 = validateParameter(valid_613990, JString, required = false,
                                 default = nil)
  if valid_613990 != nil:
    section.add "X-Amz-Signature", valid_613990
  var valid_613991 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613991 = validateParameter(valid_613991, JString, required = false,
                                 default = nil)
  if valid_613991 != nil:
    section.add "X-Amz-Content-Sha256", valid_613991
  var valid_613992 = header.getOrDefault("X-Amz-Date")
  valid_613992 = validateParameter(valid_613992, JString, required = false,
                                 default = nil)
  if valid_613992 != nil:
    section.add "X-Amz-Date", valid_613992
  var valid_613993 = header.getOrDefault("X-Amz-Credential")
  valid_613993 = validateParameter(valid_613993, JString, required = false,
                                 default = nil)
  if valid_613993 != nil:
    section.add "X-Amz-Credential", valid_613993
  var valid_613994 = header.getOrDefault("X-Amz-Security-Token")
  valid_613994 = validateParameter(valid_613994, JString, required = false,
                                 default = nil)
  if valid_613994 != nil:
    section.add "X-Amz-Security-Token", valid_613994
  var valid_613995 = header.getOrDefault("X-Amz-Algorithm")
  valid_613995 = validateParameter(valid_613995, JString, required = false,
                                 default = nil)
  if valid_613995 != nil:
    section.add "X-Amz-Algorithm", valid_613995
  var valid_613996 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613996 = validateParameter(valid_613996, JString, required = false,
                                 default = nil)
  if valid_613996 != nil:
    section.add "X-Amz-SignedHeaders", valid_613996
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_613997 = formData.getOrDefault("StackName")
  valid_613997 = validateParameter(valid_613997, JString, required = true,
                                 default = nil)
  if valid_613997 != nil:
    section.add "StackName", valid_613997
  var valid_613998 = formData.getOrDefault("NextToken")
  valid_613998 = validateParameter(valid_613998, JString, required = false,
                                 default = nil)
  if valid_613998 != nil:
    section.add "NextToken", valid_613998
  var valid_613999 = formData.getOrDefault("MaxResults")
  valid_613999 = validateParameter(valid_613999, JInt, required = false, default = nil)
  if valid_613999 != nil:
    section.add "MaxResults", valid_613999
  var valid_614000 = formData.getOrDefault("StackResourceDriftStatusFilters")
  valid_614000 = validateParameter(valid_614000, JArray, required = false,
                                 default = nil)
  if valid_614000 != nil:
    section.add "StackResourceDriftStatusFilters", valid_614000
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614001: Call_PostDescribeStackResourceDrifts_613985;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_614001.validator(path, query, header, formData, body)
  let scheme = call_614001.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614001.url(scheme.get, call_614001.host, call_614001.base,
                         call_614001.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614001, url, valid)

proc call*(call_614002: Call_PostDescribeStackResourceDrifts_613985;
          StackName: string; NextToken: string = "";
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil): Recallable =
  ## postDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  var query_614003 = newJObject()
  var formData_614004 = newJObject()
  add(formData_614004, "StackName", newJString(StackName))
  add(formData_614004, "NextToken", newJString(NextToken))
  add(query_614003, "Action", newJString(Action))
  add(query_614003, "Version", newJString(Version))
  add(formData_614004, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    formData_614004.add "StackResourceDriftStatusFilters",
                       StackResourceDriftStatusFilters
  result = call_614002.call(nil, query_614003, nil, formData_614004, nil)

var postDescribeStackResourceDrifts* = Call_PostDescribeStackResourceDrifts_613985(
    name: "postDescribeStackResourceDrifts", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_PostDescribeStackResourceDrifts_613986, base: "/",
    url: url_PostDescribeStackResourceDrifts_613987,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResourceDrifts_613966 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackResourceDrifts_613968(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResourceDrifts_613967(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_613969 = query.getOrDefault("MaxResults")
  valid_613969 = validateParameter(valid_613969, JInt, required = false, default = nil)
  if valid_613969 != nil:
    section.add "MaxResults", valid_613969
  var valid_613970 = query.getOrDefault("StackResourceDriftStatusFilters")
  valid_613970 = validateParameter(valid_613970, JArray, required = false,
                                 default = nil)
  if valid_613970 != nil:
    section.add "StackResourceDriftStatusFilters", valid_613970
  var valid_613971 = query.getOrDefault("NextToken")
  valid_613971 = validateParameter(valid_613971, JString, required = false,
                                 default = nil)
  if valid_613971 != nil:
    section.add "NextToken", valid_613971
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_613972 = query.getOrDefault("StackName")
  valid_613972 = validateParameter(valid_613972, JString, required = true,
                                 default = nil)
  if valid_613972 != nil:
    section.add "StackName", valid_613972
  var valid_613973 = query.getOrDefault("Action")
  valid_613973 = validateParameter(valid_613973, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_613973 != nil:
    section.add "Action", valid_613973
  var valid_613974 = query.getOrDefault("Version")
  valid_613974 = validateParameter(valid_613974, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_613974 != nil:
    section.add "Version", valid_613974
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_613975 = header.getOrDefault("X-Amz-Signature")
  valid_613975 = validateParameter(valid_613975, JString, required = false,
                                 default = nil)
  if valid_613975 != nil:
    section.add "X-Amz-Signature", valid_613975
  var valid_613976 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_613976 = validateParameter(valid_613976, JString, required = false,
                                 default = nil)
  if valid_613976 != nil:
    section.add "X-Amz-Content-Sha256", valid_613976
  var valid_613977 = header.getOrDefault("X-Amz-Date")
  valid_613977 = validateParameter(valid_613977, JString, required = false,
                                 default = nil)
  if valid_613977 != nil:
    section.add "X-Amz-Date", valid_613977
  var valid_613978 = header.getOrDefault("X-Amz-Credential")
  valid_613978 = validateParameter(valid_613978, JString, required = false,
                                 default = nil)
  if valid_613978 != nil:
    section.add "X-Amz-Credential", valid_613978
  var valid_613979 = header.getOrDefault("X-Amz-Security-Token")
  valid_613979 = validateParameter(valid_613979, JString, required = false,
                                 default = nil)
  if valid_613979 != nil:
    section.add "X-Amz-Security-Token", valid_613979
  var valid_613980 = header.getOrDefault("X-Amz-Algorithm")
  valid_613980 = validateParameter(valid_613980, JString, required = false,
                                 default = nil)
  if valid_613980 != nil:
    section.add "X-Amz-Algorithm", valid_613980
  var valid_613981 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_613981 = validateParameter(valid_613981, JString, required = false,
                                 default = nil)
  if valid_613981 != nil:
    section.add "X-Amz-SignedHeaders", valid_613981
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_613982: Call_GetDescribeStackResourceDrifts_613966; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_613982.validator(path, query, header, formData, body)
  let scheme = call_613982.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_613982.url(scheme.get, call_613982.host, call_613982.base,
                         call_613982.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_613982, url, valid)

proc call*(call_613983: Call_GetDescribeStackResourceDrifts_613966;
          StackName: string; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil; NextToken: string = "";
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_613984 = newJObject()
  add(query_613984, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    query_613984.add "StackResourceDriftStatusFilters",
                    StackResourceDriftStatusFilters
  add(query_613984, "NextToken", newJString(NextToken))
  add(query_613984, "StackName", newJString(StackName))
  add(query_613984, "Action", newJString(Action))
  add(query_613984, "Version", newJString(Version))
  result = call_613983.call(nil, query_613984, nil, nil, nil)

var getDescribeStackResourceDrifts* = Call_GetDescribeStackResourceDrifts_613966(
    name: "getDescribeStackResourceDrifts", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_GetDescribeStackResourceDrifts_613967, base: "/",
    url: url_GetDescribeStackResourceDrifts_613968,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResources_614023 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackResources_614025(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResources_614024(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614026 = query.getOrDefault("Action")
  valid_614026 = validateParameter(valid_614026, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_614026 != nil:
    section.add "Action", valid_614026
  var valid_614027 = query.getOrDefault("Version")
  valid_614027 = validateParameter(valid_614027, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614027 != nil:
    section.add "Version", valid_614027
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614028 = header.getOrDefault("X-Amz-Signature")
  valid_614028 = validateParameter(valid_614028, JString, required = false,
                                 default = nil)
  if valid_614028 != nil:
    section.add "X-Amz-Signature", valid_614028
  var valid_614029 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614029 = validateParameter(valid_614029, JString, required = false,
                                 default = nil)
  if valid_614029 != nil:
    section.add "X-Amz-Content-Sha256", valid_614029
  var valid_614030 = header.getOrDefault("X-Amz-Date")
  valid_614030 = validateParameter(valid_614030, JString, required = false,
                                 default = nil)
  if valid_614030 != nil:
    section.add "X-Amz-Date", valid_614030
  var valid_614031 = header.getOrDefault("X-Amz-Credential")
  valid_614031 = validateParameter(valid_614031, JString, required = false,
                                 default = nil)
  if valid_614031 != nil:
    section.add "X-Amz-Credential", valid_614031
  var valid_614032 = header.getOrDefault("X-Amz-Security-Token")
  valid_614032 = validateParameter(valid_614032, JString, required = false,
                                 default = nil)
  if valid_614032 != nil:
    section.add "X-Amz-Security-Token", valid_614032
  var valid_614033 = header.getOrDefault("X-Amz-Algorithm")
  valid_614033 = validateParameter(valid_614033, JString, required = false,
                                 default = nil)
  if valid_614033 != nil:
    section.add "X-Amz-Algorithm", valid_614033
  var valid_614034 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614034 = validateParameter(valid_614034, JString, required = false,
                                 default = nil)
  if valid_614034 != nil:
    section.add "X-Amz-SignedHeaders", valid_614034
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_614035 = formData.getOrDefault("StackName")
  valid_614035 = validateParameter(valid_614035, JString, required = false,
                                 default = nil)
  if valid_614035 != nil:
    section.add "StackName", valid_614035
  var valid_614036 = formData.getOrDefault("PhysicalResourceId")
  valid_614036 = validateParameter(valid_614036, JString, required = false,
                                 default = nil)
  if valid_614036 != nil:
    section.add "PhysicalResourceId", valid_614036
  var valid_614037 = formData.getOrDefault("LogicalResourceId")
  valid_614037 = validateParameter(valid_614037, JString, required = false,
                                 default = nil)
  if valid_614037 != nil:
    section.add "LogicalResourceId", valid_614037
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614038: Call_PostDescribeStackResources_614023; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_614038.validator(path, query, header, formData, body)
  let scheme = call_614038.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614038.url(scheme.get, call_614038.host, call_614038.base,
                         call_614038.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614038, url, valid)

proc call*(call_614039: Call_PostDescribeStackResources_614023;
          StackName: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          LogicalResourceId: string = ""): Recallable =
  ## postDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_614040 = newJObject()
  var formData_614041 = newJObject()
  add(formData_614041, "StackName", newJString(StackName))
  add(formData_614041, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_614040, "Action", newJString(Action))
  add(query_614040, "Version", newJString(Version))
  add(formData_614041, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_614039.call(nil, query_614040, nil, formData_614041, nil)

var postDescribeStackResources* = Call_PostDescribeStackResources_614023(
    name: "postDescribeStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_PostDescribeStackResources_614024, base: "/",
    url: url_PostDescribeStackResources_614025,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResources_614005 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackResources_614007(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResources_614006(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_614008 = query.getOrDefault("StackName")
  valid_614008 = validateParameter(valid_614008, JString, required = false,
                                 default = nil)
  if valid_614008 != nil:
    section.add "StackName", valid_614008
  var valid_614009 = query.getOrDefault("PhysicalResourceId")
  valid_614009 = validateParameter(valid_614009, JString, required = false,
                                 default = nil)
  if valid_614009 != nil:
    section.add "PhysicalResourceId", valid_614009
  var valid_614010 = query.getOrDefault("Action")
  valid_614010 = validateParameter(valid_614010, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_614010 != nil:
    section.add "Action", valid_614010
  var valid_614011 = query.getOrDefault("Version")
  valid_614011 = validateParameter(valid_614011, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614011 != nil:
    section.add "Version", valid_614011
  var valid_614012 = query.getOrDefault("LogicalResourceId")
  valid_614012 = validateParameter(valid_614012, JString, required = false,
                                 default = nil)
  if valid_614012 != nil:
    section.add "LogicalResourceId", valid_614012
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614013 = header.getOrDefault("X-Amz-Signature")
  valid_614013 = validateParameter(valid_614013, JString, required = false,
                                 default = nil)
  if valid_614013 != nil:
    section.add "X-Amz-Signature", valid_614013
  var valid_614014 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614014 = validateParameter(valid_614014, JString, required = false,
                                 default = nil)
  if valid_614014 != nil:
    section.add "X-Amz-Content-Sha256", valid_614014
  var valid_614015 = header.getOrDefault("X-Amz-Date")
  valid_614015 = validateParameter(valid_614015, JString, required = false,
                                 default = nil)
  if valid_614015 != nil:
    section.add "X-Amz-Date", valid_614015
  var valid_614016 = header.getOrDefault("X-Amz-Credential")
  valid_614016 = validateParameter(valid_614016, JString, required = false,
                                 default = nil)
  if valid_614016 != nil:
    section.add "X-Amz-Credential", valid_614016
  var valid_614017 = header.getOrDefault("X-Amz-Security-Token")
  valid_614017 = validateParameter(valid_614017, JString, required = false,
                                 default = nil)
  if valid_614017 != nil:
    section.add "X-Amz-Security-Token", valid_614017
  var valid_614018 = header.getOrDefault("X-Amz-Algorithm")
  valid_614018 = validateParameter(valid_614018, JString, required = false,
                                 default = nil)
  if valid_614018 != nil:
    section.add "X-Amz-Algorithm", valid_614018
  var valid_614019 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614019 = validateParameter(valid_614019, JString, required = false,
                                 default = nil)
  if valid_614019 != nil:
    section.add "X-Amz-SignedHeaders", valid_614019
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614020: Call_GetDescribeStackResources_614005; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_614020.validator(path, query, header, formData, body)
  let scheme = call_614020.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614020.url(scheme.get, call_614020.host, call_614020.base,
                         call_614020.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614020, url, valid)

proc call*(call_614021: Call_GetDescribeStackResources_614005;
          StackName: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          LogicalResourceId: string = ""): Recallable =
  ## getDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_614022 = newJObject()
  add(query_614022, "StackName", newJString(StackName))
  add(query_614022, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_614022, "Action", newJString(Action))
  add(query_614022, "Version", newJString(Version))
  add(query_614022, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_614021.call(nil, query_614022, nil, nil, nil)

var getDescribeStackResources* = Call_GetDescribeStackResources_614005(
    name: "getDescribeStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_GetDescribeStackResources_614006, base: "/",
    url: url_GetDescribeStackResources_614007,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSet_614058 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackSet_614060(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSet_614059(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614061 = query.getOrDefault("Action")
  valid_614061 = validateParameter(valid_614061, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_614061 != nil:
    section.add "Action", valid_614061
  var valid_614062 = query.getOrDefault("Version")
  valid_614062 = validateParameter(valid_614062, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614062 != nil:
    section.add "Version", valid_614062
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614063 = header.getOrDefault("X-Amz-Signature")
  valid_614063 = validateParameter(valid_614063, JString, required = false,
                                 default = nil)
  if valid_614063 != nil:
    section.add "X-Amz-Signature", valid_614063
  var valid_614064 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614064 = validateParameter(valid_614064, JString, required = false,
                                 default = nil)
  if valid_614064 != nil:
    section.add "X-Amz-Content-Sha256", valid_614064
  var valid_614065 = header.getOrDefault("X-Amz-Date")
  valid_614065 = validateParameter(valid_614065, JString, required = false,
                                 default = nil)
  if valid_614065 != nil:
    section.add "X-Amz-Date", valid_614065
  var valid_614066 = header.getOrDefault("X-Amz-Credential")
  valid_614066 = validateParameter(valid_614066, JString, required = false,
                                 default = nil)
  if valid_614066 != nil:
    section.add "X-Amz-Credential", valid_614066
  var valid_614067 = header.getOrDefault("X-Amz-Security-Token")
  valid_614067 = validateParameter(valid_614067, JString, required = false,
                                 default = nil)
  if valid_614067 != nil:
    section.add "X-Amz-Security-Token", valid_614067
  var valid_614068 = header.getOrDefault("X-Amz-Algorithm")
  valid_614068 = validateParameter(valid_614068, JString, required = false,
                                 default = nil)
  if valid_614068 != nil:
    section.add "X-Amz-Algorithm", valid_614068
  var valid_614069 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614069 = validateParameter(valid_614069, JString, required = false,
                                 default = nil)
  if valid_614069 != nil:
    section.add "X-Amz-SignedHeaders", valid_614069
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_614070 = formData.getOrDefault("StackSetName")
  valid_614070 = validateParameter(valid_614070, JString, required = true,
                                 default = nil)
  if valid_614070 != nil:
    section.add "StackSetName", valid_614070
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614071: Call_PostDescribeStackSet_614058; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_614071.validator(path, query, header, formData, body)
  let scheme = call_614071.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614071.url(scheme.get, call_614071.host, call_614071.base,
                         call_614071.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614071, url, valid)

proc call*(call_614072: Call_PostDescribeStackSet_614058; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614073 = newJObject()
  var formData_614074 = newJObject()
  add(formData_614074, "StackSetName", newJString(StackSetName))
  add(query_614073, "Action", newJString(Action))
  add(query_614073, "Version", newJString(Version))
  result = call_614072.call(nil, query_614073, nil, formData_614074, nil)

var postDescribeStackSet* = Call_PostDescribeStackSet_614058(
    name: "postDescribeStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_PostDescribeStackSet_614059, base: "/",
    url: url_PostDescribeStackSet_614060, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSet_614042 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackSet_614044(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSet_614043(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_614045 = query.getOrDefault("StackSetName")
  valid_614045 = validateParameter(valid_614045, JString, required = true,
                                 default = nil)
  if valid_614045 != nil:
    section.add "StackSetName", valid_614045
  var valid_614046 = query.getOrDefault("Action")
  valid_614046 = validateParameter(valid_614046, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_614046 != nil:
    section.add "Action", valid_614046
  var valid_614047 = query.getOrDefault("Version")
  valid_614047 = validateParameter(valid_614047, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614047 != nil:
    section.add "Version", valid_614047
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614048 = header.getOrDefault("X-Amz-Signature")
  valid_614048 = validateParameter(valid_614048, JString, required = false,
                                 default = nil)
  if valid_614048 != nil:
    section.add "X-Amz-Signature", valid_614048
  var valid_614049 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614049 = validateParameter(valid_614049, JString, required = false,
                                 default = nil)
  if valid_614049 != nil:
    section.add "X-Amz-Content-Sha256", valid_614049
  var valid_614050 = header.getOrDefault("X-Amz-Date")
  valid_614050 = validateParameter(valid_614050, JString, required = false,
                                 default = nil)
  if valid_614050 != nil:
    section.add "X-Amz-Date", valid_614050
  var valid_614051 = header.getOrDefault("X-Amz-Credential")
  valid_614051 = validateParameter(valid_614051, JString, required = false,
                                 default = nil)
  if valid_614051 != nil:
    section.add "X-Amz-Credential", valid_614051
  var valid_614052 = header.getOrDefault("X-Amz-Security-Token")
  valid_614052 = validateParameter(valid_614052, JString, required = false,
                                 default = nil)
  if valid_614052 != nil:
    section.add "X-Amz-Security-Token", valid_614052
  var valid_614053 = header.getOrDefault("X-Amz-Algorithm")
  valid_614053 = validateParameter(valid_614053, JString, required = false,
                                 default = nil)
  if valid_614053 != nil:
    section.add "X-Amz-Algorithm", valid_614053
  var valid_614054 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614054 = validateParameter(valid_614054, JString, required = false,
                                 default = nil)
  if valid_614054 != nil:
    section.add "X-Amz-SignedHeaders", valid_614054
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614055: Call_GetDescribeStackSet_614042; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_614055.validator(path, query, header, formData, body)
  let scheme = call_614055.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614055.url(scheme.get, call_614055.host, call_614055.base,
                         call_614055.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614055, url, valid)

proc call*(call_614056: Call_GetDescribeStackSet_614042; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614057 = newJObject()
  add(query_614057, "StackSetName", newJString(StackSetName))
  add(query_614057, "Action", newJString(Action))
  add(query_614057, "Version", newJString(Version))
  result = call_614056.call(nil, query_614057, nil, nil, nil)

var getDescribeStackSet* = Call_GetDescribeStackSet_614042(
    name: "getDescribeStackSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_GetDescribeStackSet_614043, base: "/",
    url: url_GetDescribeStackSet_614044, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSetOperation_614092 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStackSetOperation_614094(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSetOperation_614093(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614095 = query.getOrDefault("Action")
  valid_614095 = validateParameter(valid_614095, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_614095 != nil:
    section.add "Action", valid_614095
  var valid_614096 = query.getOrDefault("Version")
  valid_614096 = validateParameter(valid_614096, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614096 != nil:
    section.add "Version", valid_614096
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614097 = header.getOrDefault("X-Amz-Signature")
  valid_614097 = validateParameter(valid_614097, JString, required = false,
                                 default = nil)
  if valid_614097 != nil:
    section.add "X-Amz-Signature", valid_614097
  var valid_614098 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614098 = validateParameter(valid_614098, JString, required = false,
                                 default = nil)
  if valid_614098 != nil:
    section.add "X-Amz-Content-Sha256", valid_614098
  var valid_614099 = header.getOrDefault("X-Amz-Date")
  valid_614099 = validateParameter(valid_614099, JString, required = false,
                                 default = nil)
  if valid_614099 != nil:
    section.add "X-Amz-Date", valid_614099
  var valid_614100 = header.getOrDefault("X-Amz-Credential")
  valid_614100 = validateParameter(valid_614100, JString, required = false,
                                 default = nil)
  if valid_614100 != nil:
    section.add "X-Amz-Credential", valid_614100
  var valid_614101 = header.getOrDefault("X-Amz-Security-Token")
  valid_614101 = validateParameter(valid_614101, JString, required = false,
                                 default = nil)
  if valid_614101 != nil:
    section.add "X-Amz-Security-Token", valid_614101
  var valid_614102 = header.getOrDefault("X-Amz-Algorithm")
  valid_614102 = validateParameter(valid_614102, JString, required = false,
                                 default = nil)
  if valid_614102 != nil:
    section.add "X-Amz-Algorithm", valid_614102
  var valid_614103 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614103 = validateParameter(valid_614103, JString, required = false,
                                 default = nil)
  if valid_614103 != nil:
    section.add "X-Amz-SignedHeaders", valid_614103
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_614104 = formData.getOrDefault("OperationId")
  valid_614104 = validateParameter(valid_614104, JString, required = true,
                                 default = nil)
  if valid_614104 != nil:
    section.add "OperationId", valid_614104
  var valid_614105 = formData.getOrDefault("StackSetName")
  valid_614105 = validateParameter(valid_614105, JString, required = true,
                                 default = nil)
  if valid_614105 != nil:
    section.add "StackSetName", valid_614105
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614106: Call_PostDescribeStackSetOperation_614092; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_614106.validator(path, query, header, formData, body)
  let scheme = call_614106.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614106.url(scheme.get, call_614106.host, call_614106.base,
                         call_614106.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614106, url, valid)

proc call*(call_614107: Call_PostDescribeStackSetOperation_614092;
          OperationId: string; StackSetName: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614108 = newJObject()
  var formData_614109 = newJObject()
  add(formData_614109, "OperationId", newJString(OperationId))
  add(formData_614109, "StackSetName", newJString(StackSetName))
  add(query_614108, "Action", newJString(Action))
  add(query_614108, "Version", newJString(Version))
  result = call_614107.call(nil, query_614108, nil, formData_614109, nil)

var postDescribeStackSetOperation* = Call_PostDescribeStackSetOperation_614092(
    name: "postDescribeStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_PostDescribeStackSetOperation_614093, base: "/",
    url: url_PostDescribeStackSetOperation_614094,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSetOperation_614075 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStackSetOperation_614077(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSetOperation_614076(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_614078 = query.getOrDefault("OperationId")
  valid_614078 = validateParameter(valid_614078, JString, required = true,
                                 default = nil)
  if valid_614078 != nil:
    section.add "OperationId", valid_614078
  var valid_614079 = query.getOrDefault("StackSetName")
  valid_614079 = validateParameter(valid_614079, JString, required = true,
                                 default = nil)
  if valid_614079 != nil:
    section.add "StackSetName", valid_614079
  var valid_614080 = query.getOrDefault("Action")
  valid_614080 = validateParameter(valid_614080, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_614080 != nil:
    section.add "Action", valid_614080
  var valid_614081 = query.getOrDefault("Version")
  valid_614081 = validateParameter(valid_614081, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614081 != nil:
    section.add "Version", valid_614081
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614082 = header.getOrDefault("X-Amz-Signature")
  valid_614082 = validateParameter(valid_614082, JString, required = false,
                                 default = nil)
  if valid_614082 != nil:
    section.add "X-Amz-Signature", valid_614082
  var valid_614083 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614083 = validateParameter(valid_614083, JString, required = false,
                                 default = nil)
  if valid_614083 != nil:
    section.add "X-Amz-Content-Sha256", valid_614083
  var valid_614084 = header.getOrDefault("X-Amz-Date")
  valid_614084 = validateParameter(valid_614084, JString, required = false,
                                 default = nil)
  if valid_614084 != nil:
    section.add "X-Amz-Date", valid_614084
  var valid_614085 = header.getOrDefault("X-Amz-Credential")
  valid_614085 = validateParameter(valid_614085, JString, required = false,
                                 default = nil)
  if valid_614085 != nil:
    section.add "X-Amz-Credential", valid_614085
  var valid_614086 = header.getOrDefault("X-Amz-Security-Token")
  valid_614086 = validateParameter(valid_614086, JString, required = false,
                                 default = nil)
  if valid_614086 != nil:
    section.add "X-Amz-Security-Token", valid_614086
  var valid_614087 = header.getOrDefault("X-Amz-Algorithm")
  valid_614087 = validateParameter(valid_614087, JString, required = false,
                                 default = nil)
  if valid_614087 != nil:
    section.add "X-Amz-Algorithm", valid_614087
  var valid_614088 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614088 = validateParameter(valid_614088, JString, required = false,
                                 default = nil)
  if valid_614088 != nil:
    section.add "X-Amz-SignedHeaders", valid_614088
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614089: Call_GetDescribeStackSetOperation_614075; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_614089.validator(path, query, header, formData, body)
  let scheme = call_614089.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614089.url(scheme.get, call_614089.host, call_614089.base,
                         call_614089.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614089, url, valid)

proc call*(call_614090: Call_GetDescribeStackSetOperation_614075;
          OperationId: string; StackSetName: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614091 = newJObject()
  add(query_614091, "OperationId", newJString(OperationId))
  add(query_614091, "StackSetName", newJString(StackSetName))
  add(query_614091, "Action", newJString(Action))
  add(query_614091, "Version", newJString(Version))
  result = call_614090.call(nil, query_614091, nil, nil, nil)

var getDescribeStackSetOperation* = Call_GetDescribeStackSetOperation_614075(
    name: "getDescribeStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_GetDescribeStackSetOperation_614076, base: "/",
    url: url_GetDescribeStackSetOperation_614077,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStacks_614127 = ref object of OpenApiRestCall_612658
proc url_PostDescribeStacks_614129(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStacks_614128(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614130 = query.getOrDefault("Action")
  valid_614130 = validateParameter(valid_614130, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_614130 != nil:
    section.add "Action", valid_614130
  var valid_614131 = query.getOrDefault("Version")
  valid_614131 = validateParameter(valid_614131, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614131 != nil:
    section.add "Version", valid_614131
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614132 = header.getOrDefault("X-Amz-Signature")
  valid_614132 = validateParameter(valid_614132, JString, required = false,
                                 default = nil)
  if valid_614132 != nil:
    section.add "X-Amz-Signature", valid_614132
  var valid_614133 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614133 = validateParameter(valid_614133, JString, required = false,
                                 default = nil)
  if valid_614133 != nil:
    section.add "X-Amz-Content-Sha256", valid_614133
  var valid_614134 = header.getOrDefault("X-Amz-Date")
  valid_614134 = validateParameter(valid_614134, JString, required = false,
                                 default = nil)
  if valid_614134 != nil:
    section.add "X-Amz-Date", valid_614134
  var valid_614135 = header.getOrDefault("X-Amz-Credential")
  valid_614135 = validateParameter(valid_614135, JString, required = false,
                                 default = nil)
  if valid_614135 != nil:
    section.add "X-Amz-Credential", valid_614135
  var valid_614136 = header.getOrDefault("X-Amz-Security-Token")
  valid_614136 = validateParameter(valid_614136, JString, required = false,
                                 default = nil)
  if valid_614136 != nil:
    section.add "X-Amz-Security-Token", valid_614136
  var valid_614137 = header.getOrDefault("X-Amz-Algorithm")
  valid_614137 = validateParameter(valid_614137, JString, required = false,
                                 default = nil)
  if valid_614137 != nil:
    section.add "X-Amz-Algorithm", valid_614137
  var valid_614138 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614138 = validateParameter(valid_614138, JString, required = false,
                                 default = nil)
  if valid_614138 != nil:
    section.add "X-Amz-SignedHeaders", valid_614138
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  section = newJObject()
  var valid_614139 = formData.getOrDefault("StackName")
  valid_614139 = validateParameter(valid_614139, JString, required = false,
                                 default = nil)
  if valid_614139 != nil:
    section.add "StackName", valid_614139
  var valid_614140 = formData.getOrDefault("NextToken")
  valid_614140 = validateParameter(valid_614140, JString, required = false,
                                 default = nil)
  if valid_614140 != nil:
    section.add "NextToken", valid_614140
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614141: Call_PostDescribeStacks_614127; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_614141.validator(path, query, header, formData, body)
  let scheme = call_614141.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614141.url(scheme.get, call_614141.host, call_614141.base,
                         call_614141.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614141, url, valid)

proc call*(call_614142: Call_PostDescribeStacks_614127; StackName: string = "";
          NextToken: string = ""; Action: string = "DescribeStacks";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614143 = newJObject()
  var formData_614144 = newJObject()
  add(formData_614144, "StackName", newJString(StackName))
  add(formData_614144, "NextToken", newJString(NextToken))
  add(query_614143, "Action", newJString(Action))
  add(query_614143, "Version", newJString(Version))
  result = call_614142.call(nil, query_614143, nil, formData_614144, nil)

var postDescribeStacks* = Call_PostDescribeStacks_614127(
    name: "postDescribeStacks", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStacks",
    validator: validate_PostDescribeStacks_614128, base: "/",
    url: url_PostDescribeStacks_614129, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStacks_614110 = ref object of OpenApiRestCall_612658
proc url_GetDescribeStacks_614112(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStacks_614111(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614113 = query.getOrDefault("NextToken")
  valid_614113 = validateParameter(valid_614113, JString, required = false,
                                 default = nil)
  if valid_614113 != nil:
    section.add "NextToken", valid_614113
  var valid_614114 = query.getOrDefault("StackName")
  valid_614114 = validateParameter(valid_614114, JString, required = false,
                                 default = nil)
  if valid_614114 != nil:
    section.add "StackName", valid_614114
  var valid_614115 = query.getOrDefault("Action")
  valid_614115 = validateParameter(valid_614115, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_614115 != nil:
    section.add "Action", valid_614115
  var valid_614116 = query.getOrDefault("Version")
  valid_614116 = validateParameter(valid_614116, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614116 != nil:
    section.add "Version", valid_614116
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614117 = header.getOrDefault("X-Amz-Signature")
  valid_614117 = validateParameter(valid_614117, JString, required = false,
                                 default = nil)
  if valid_614117 != nil:
    section.add "X-Amz-Signature", valid_614117
  var valid_614118 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614118 = validateParameter(valid_614118, JString, required = false,
                                 default = nil)
  if valid_614118 != nil:
    section.add "X-Amz-Content-Sha256", valid_614118
  var valid_614119 = header.getOrDefault("X-Amz-Date")
  valid_614119 = validateParameter(valid_614119, JString, required = false,
                                 default = nil)
  if valid_614119 != nil:
    section.add "X-Amz-Date", valid_614119
  var valid_614120 = header.getOrDefault("X-Amz-Credential")
  valid_614120 = validateParameter(valid_614120, JString, required = false,
                                 default = nil)
  if valid_614120 != nil:
    section.add "X-Amz-Credential", valid_614120
  var valid_614121 = header.getOrDefault("X-Amz-Security-Token")
  valid_614121 = validateParameter(valid_614121, JString, required = false,
                                 default = nil)
  if valid_614121 != nil:
    section.add "X-Amz-Security-Token", valid_614121
  var valid_614122 = header.getOrDefault("X-Amz-Algorithm")
  valid_614122 = validateParameter(valid_614122, JString, required = false,
                                 default = nil)
  if valid_614122 != nil:
    section.add "X-Amz-Algorithm", valid_614122
  var valid_614123 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614123 = validateParameter(valid_614123, JString, required = false,
                                 default = nil)
  if valid_614123 != nil:
    section.add "X-Amz-SignedHeaders", valid_614123
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614124: Call_GetDescribeStacks_614110; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_614124.validator(path, query, header, formData, body)
  let scheme = call_614124.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614124.url(scheme.get, call_614124.host, call_614124.base,
                         call_614124.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614124, url, valid)

proc call*(call_614125: Call_GetDescribeStacks_614110; NextToken: string = "";
          StackName: string = ""; Action: string = "DescribeStacks";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614126 = newJObject()
  add(query_614126, "NextToken", newJString(NextToken))
  add(query_614126, "StackName", newJString(StackName))
  add(query_614126, "Action", newJString(Action))
  add(query_614126, "Version", newJString(Version))
  result = call_614125.call(nil, query_614126, nil, nil, nil)

var getDescribeStacks* = Call_GetDescribeStacks_614110(name: "getDescribeStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStacks", validator: validate_GetDescribeStacks_614111,
    base: "/", url: url_GetDescribeStacks_614112,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeType_614164 = ref object of OpenApiRestCall_612658
proc url_PostDescribeType_614166(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeType_614165(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614167 = query.getOrDefault("Action")
  valid_614167 = validateParameter(valid_614167, JString, required = true,
                                 default = newJString("DescribeType"))
  if valid_614167 != nil:
    section.add "Action", valid_614167
  var valid_614168 = query.getOrDefault("Version")
  valid_614168 = validateParameter(valid_614168, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614168 != nil:
    section.add "Version", valid_614168
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614169 = header.getOrDefault("X-Amz-Signature")
  valid_614169 = validateParameter(valid_614169, JString, required = false,
                                 default = nil)
  if valid_614169 != nil:
    section.add "X-Amz-Signature", valid_614169
  var valid_614170 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614170 = validateParameter(valid_614170, JString, required = false,
                                 default = nil)
  if valid_614170 != nil:
    section.add "X-Amz-Content-Sha256", valid_614170
  var valid_614171 = header.getOrDefault("X-Amz-Date")
  valid_614171 = validateParameter(valid_614171, JString, required = false,
                                 default = nil)
  if valid_614171 != nil:
    section.add "X-Amz-Date", valid_614171
  var valid_614172 = header.getOrDefault("X-Amz-Credential")
  valid_614172 = validateParameter(valid_614172, JString, required = false,
                                 default = nil)
  if valid_614172 != nil:
    section.add "X-Amz-Credential", valid_614172
  var valid_614173 = header.getOrDefault("X-Amz-Security-Token")
  valid_614173 = validateParameter(valid_614173, JString, required = false,
                                 default = nil)
  if valid_614173 != nil:
    section.add "X-Amz-Security-Token", valid_614173
  var valid_614174 = header.getOrDefault("X-Amz-Algorithm")
  valid_614174 = validateParameter(valid_614174, JString, required = false,
                                 default = nil)
  if valid_614174 != nil:
    section.add "X-Amz-Algorithm", valid_614174
  var valid_614175 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614175 = validateParameter(valid_614175, JString, required = false,
                                 default = nil)
  if valid_614175 != nil:
    section.add "X-Amz-SignedHeaders", valid_614175
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  section = newJObject()
  var valid_614176 = formData.getOrDefault("Arn")
  valid_614176 = validateParameter(valid_614176, JString, required = false,
                                 default = nil)
  if valid_614176 != nil:
    section.add "Arn", valid_614176
  var valid_614177 = formData.getOrDefault("VersionId")
  valid_614177 = validateParameter(valid_614177, JString, required = false,
                                 default = nil)
  if valid_614177 != nil:
    section.add "VersionId", valid_614177
  var valid_614178 = formData.getOrDefault("TypeName")
  valid_614178 = validateParameter(valid_614178, JString, required = false,
                                 default = nil)
  if valid_614178 != nil:
    section.add "TypeName", valid_614178
  var valid_614179 = formData.getOrDefault("Type")
  valid_614179 = validateParameter(valid_614179, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_614179 != nil:
    section.add "Type", valid_614179
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614180: Call_PostDescribeType_614164; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  let valid = call_614180.validator(path, query, header, formData, body)
  let scheme = call_614180.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614180.url(scheme.get, call_614180.host, call_614180.base,
                         call_614180.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614180, url, valid)

proc call*(call_614181: Call_PostDescribeType_614164; Arn: string = "";
          VersionId: string = ""; TypeName: string = ""; Type: string = "RESOURCE";
          Action: string = "DescribeType"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeType
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614182 = newJObject()
  var formData_614183 = newJObject()
  add(formData_614183, "Arn", newJString(Arn))
  add(formData_614183, "VersionId", newJString(VersionId))
  add(formData_614183, "TypeName", newJString(TypeName))
  add(formData_614183, "Type", newJString(Type))
  add(query_614182, "Action", newJString(Action))
  add(query_614182, "Version", newJString(Version))
  result = call_614181.call(nil, query_614182, nil, formData_614183, nil)

var postDescribeType* = Call_PostDescribeType_614164(name: "postDescribeType",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeType", validator: validate_PostDescribeType_614165,
    base: "/", url: url_PostDescribeType_614166,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeType_614145 = ref object of OpenApiRestCall_612658
proc url_GetDescribeType_614147(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeType_614146(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: JString
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_614148 = query.getOrDefault("TypeName")
  valid_614148 = validateParameter(valid_614148, JString, required = false,
                                 default = nil)
  if valid_614148 != nil:
    section.add "TypeName", valid_614148
  var valid_614149 = query.getOrDefault("Type")
  valid_614149 = validateParameter(valid_614149, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_614149 != nil:
    section.add "Type", valid_614149
  var valid_614150 = query.getOrDefault("VersionId")
  valid_614150 = validateParameter(valid_614150, JString, required = false,
                                 default = nil)
  if valid_614150 != nil:
    section.add "VersionId", valid_614150
  var valid_614151 = query.getOrDefault("Action")
  valid_614151 = validateParameter(valid_614151, JString, required = true,
                                 default = newJString("DescribeType"))
  if valid_614151 != nil:
    section.add "Action", valid_614151
  var valid_614152 = query.getOrDefault("Version")
  valid_614152 = validateParameter(valid_614152, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614152 != nil:
    section.add "Version", valid_614152
  var valid_614153 = query.getOrDefault("Arn")
  valid_614153 = validateParameter(valid_614153, JString, required = false,
                                 default = nil)
  if valid_614153 != nil:
    section.add "Arn", valid_614153
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614154 = header.getOrDefault("X-Amz-Signature")
  valid_614154 = validateParameter(valid_614154, JString, required = false,
                                 default = nil)
  if valid_614154 != nil:
    section.add "X-Amz-Signature", valid_614154
  var valid_614155 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614155 = validateParameter(valid_614155, JString, required = false,
                                 default = nil)
  if valid_614155 != nil:
    section.add "X-Amz-Content-Sha256", valid_614155
  var valid_614156 = header.getOrDefault("X-Amz-Date")
  valid_614156 = validateParameter(valid_614156, JString, required = false,
                                 default = nil)
  if valid_614156 != nil:
    section.add "X-Amz-Date", valid_614156
  var valid_614157 = header.getOrDefault("X-Amz-Credential")
  valid_614157 = validateParameter(valid_614157, JString, required = false,
                                 default = nil)
  if valid_614157 != nil:
    section.add "X-Amz-Credential", valid_614157
  var valid_614158 = header.getOrDefault("X-Amz-Security-Token")
  valid_614158 = validateParameter(valid_614158, JString, required = false,
                                 default = nil)
  if valid_614158 != nil:
    section.add "X-Amz-Security-Token", valid_614158
  var valid_614159 = header.getOrDefault("X-Amz-Algorithm")
  valid_614159 = validateParameter(valid_614159, JString, required = false,
                                 default = nil)
  if valid_614159 != nil:
    section.add "X-Amz-Algorithm", valid_614159
  var valid_614160 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614160 = validateParameter(valid_614160, JString, required = false,
                                 default = nil)
  if valid_614160 != nil:
    section.add "X-Amz-SignedHeaders", valid_614160
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614161: Call_GetDescribeType_614145; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  let valid = call_614161.validator(path, query, header, formData, body)
  let scheme = call_614161.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614161.url(scheme.get, call_614161.host, call_614161.base,
                         call_614161.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614161, url, valid)

proc call*(call_614162: Call_GetDescribeType_614145; TypeName: string = "";
          Type: string = "RESOURCE"; VersionId: string = "";
          Action: string = "DescribeType"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getDescribeType
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: string
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_614163 = newJObject()
  add(query_614163, "TypeName", newJString(TypeName))
  add(query_614163, "Type", newJString(Type))
  add(query_614163, "VersionId", newJString(VersionId))
  add(query_614163, "Action", newJString(Action))
  add(query_614163, "Version", newJString(Version))
  add(query_614163, "Arn", newJString(Arn))
  result = call_614162.call(nil, query_614163, nil, nil, nil)

var getDescribeType* = Call_GetDescribeType_614145(name: "getDescribeType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeType", validator: validate_GetDescribeType_614146,
    base: "/", url: url_GetDescribeType_614147, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeTypeRegistration_614200 = ref object of OpenApiRestCall_612658
proc url_PostDescribeTypeRegistration_614202(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeTypeRegistration_614201(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614203 = query.getOrDefault("Action")
  valid_614203 = validateParameter(valid_614203, JString, required = true, default = newJString(
      "DescribeTypeRegistration"))
  if valid_614203 != nil:
    section.add "Action", valid_614203
  var valid_614204 = query.getOrDefault("Version")
  valid_614204 = validateParameter(valid_614204, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614204 != nil:
    section.add "Version", valid_614204
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614205 = header.getOrDefault("X-Amz-Signature")
  valid_614205 = validateParameter(valid_614205, JString, required = false,
                                 default = nil)
  if valid_614205 != nil:
    section.add "X-Amz-Signature", valid_614205
  var valid_614206 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614206 = validateParameter(valid_614206, JString, required = false,
                                 default = nil)
  if valid_614206 != nil:
    section.add "X-Amz-Content-Sha256", valid_614206
  var valid_614207 = header.getOrDefault("X-Amz-Date")
  valid_614207 = validateParameter(valid_614207, JString, required = false,
                                 default = nil)
  if valid_614207 != nil:
    section.add "X-Amz-Date", valid_614207
  var valid_614208 = header.getOrDefault("X-Amz-Credential")
  valid_614208 = validateParameter(valid_614208, JString, required = false,
                                 default = nil)
  if valid_614208 != nil:
    section.add "X-Amz-Credential", valid_614208
  var valid_614209 = header.getOrDefault("X-Amz-Security-Token")
  valid_614209 = validateParameter(valid_614209, JString, required = false,
                                 default = nil)
  if valid_614209 != nil:
    section.add "X-Amz-Security-Token", valid_614209
  var valid_614210 = header.getOrDefault("X-Amz-Algorithm")
  valid_614210 = validateParameter(valid_614210, JString, required = false,
                                 default = nil)
  if valid_614210 != nil:
    section.add "X-Amz-Algorithm", valid_614210
  var valid_614211 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614211 = validateParameter(valid_614211, JString, required = false,
                                 default = nil)
  if valid_614211 != nil:
    section.add "X-Amz-SignedHeaders", valid_614211
  result.add "header", section
  ## parameters in `formData` object:
  ##   RegistrationToken: JString (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `RegistrationToken` field"
  var valid_614212 = formData.getOrDefault("RegistrationToken")
  valid_614212 = validateParameter(valid_614212, JString, required = true,
                                 default = nil)
  if valid_614212 != nil:
    section.add "RegistrationToken", valid_614212
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614213: Call_PostDescribeTypeRegistration_614200; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  let valid = call_614213.validator(path, query, header, formData, body)
  let scheme = call_614213.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614213.url(scheme.get, call_614213.host, call_614213.base,
                         call_614213.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614213, url, valid)

proc call*(call_614214: Call_PostDescribeTypeRegistration_614200;
          RegistrationToken: string; Action: string = "DescribeTypeRegistration";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeTypeRegistration
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ##   RegistrationToken: string (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614215 = newJObject()
  var formData_614216 = newJObject()
  add(formData_614216, "RegistrationToken", newJString(RegistrationToken))
  add(query_614215, "Action", newJString(Action))
  add(query_614215, "Version", newJString(Version))
  result = call_614214.call(nil, query_614215, nil, formData_614216, nil)

var postDescribeTypeRegistration* = Call_PostDescribeTypeRegistration_614200(
    name: "postDescribeTypeRegistration", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeTypeRegistration",
    validator: validate_PostDescribeTypeRegistration_614201, base: "/",
    url: url_PostDescribeTypeRegistration_614202,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeTypeRegistration_614184 = ref object of OpenApiRestCall_612658
proc url_GetDescribeTypeRegistration_614186(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeTypeRegistration_614185(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   RegistrationToken: JString (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `RegistrationToken` field"
  var valid_614187 = query.getOrDefault("RegistrationToken")
  valid_614187 = validateParameter(valid_614187, JString, required = true,
                                 default = nil)
  if valid_614187 != nil:
    section.add "RegistrationToken", valid_614187
  var valid_614188 = query.getOrDefault("Action")
  valid_614188 = validateParameter(valid_614188, JString, required = true, default = newJString(
      "DescribeTypeRegistration"))
  if valid_614188 != nil:
    section.add "Action", valid_614188
  var valid_614189 = query.getOrDefault("Version")
  valid_614189 = validateParameter(valid_614189, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614189 != nil:
    section.add "Version", valid_614189
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614190 = header.getOrDefault("X-Amz-Signature")
  valid_614190 = validateParameter(valid_614190, JString, required = false,
                                 default = nil)
  if valid_614190 != nil:
    section.add "X-Amz-Signature", valid_614190
  var valid_614191 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614191 = validateParameter(valid_614191, JString, required = false,
                                 default = nil)
  if valid_614191 != nil:
    section.add "X-Amz-Content-Sha256", valid_614191
  var valid_614192 = header.getOrDefault("X-Amz-Date")
  valid_614192 = validateParameter(valid_614192, JString, required = false,
                                 default = nil)
  if valid_614192 != nil:
    section.add "X-Amz-Date", valid_614192
  var valid_614193 = header.getOrDefault("X-Amz-Credential")
  valid_614193 = validateParameter(valid_614193, JString, required = false,
                                 default = nil)
  if valid_614193 != nil:
    section.add "X-Amz-Credential", valid_614193
  var valid_614194 = header.getOrDefault("X-Amz-Security-Token")
  valid_614194 = validateParameter(valid_614194, JString, required = false,
                                 default = nil)
  if valid_614194 != nil:
    section.add "X-Amz-Security-Token", valid_614194
  var valid_614195 = header.getOrDefault("X-Amz-Algorithm")
  valid_614195 = validateParameter(valid_614195, JString, required = false,
                                 default = nil)
  if valid_614195 != nil:
    section.add "X-Amz-Algorithm", valid_614195
  var valid_614196 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614196 = validateParameter(valid_614196, JString, required = false,
                                 default = nil)
  if valid_614196 != nil:
    section.add "X-Amz-SignedHeaders", valid_614196
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614197: Call_GetDescribeTypeRegistration_614184; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  let valid = call_614197.validator(path, query, header, formData, body)
  let scheme = call_614197.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614197.url(scheme.get, call_614197.host, call_614197.base,
                         call_614197.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614197, url, valid)

proc call*(call_614198: Call_GetDescribeTypeRegistration_614184;
          RegistrationToken: string; Action: string = "DescribeTypeRegistration";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeTypeRegistration
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ##   RegistrationToken: string (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614199 = newJObject()
  add(query_614199, "RegistrationToken", newJString(RegistrationToken))
  add(query_614199, "Action", newJString(Action))
  add(query_614199, "Version", newJString(Version))
  result = call_614198.call(nil, query_614199, nil, nil, nil)

var getDescribeTypeRegistration* = Call_GetDescribeTypeRegistration_614184(
    name: "getDescribeTypeRegistration", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeTypeRegistration",
    validator: validate_GetDescribeTypeRegistration_614185, base: "/",
    url: url_GetDescribeTypeRegistration_614186,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackDrift_614234 = ref object of OpenApiRestCall_612658
proc url_PostDetectStackDrift_614236(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackDrift_614235(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614237 = query.getOrDefault("Action")
  valid_614237 = validateParameter(valid_614237, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_614237 != nil:
    section.add "Action", valid_614237
  var valid_614238 = query.getOrDefault("Version")
  valid_614238 = validateParameter(valid_614238, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614238 != nil:
    section.add "Version", valid_614238
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614239 = header.getOrDefault("X-Amz-Signature")
  valid_614239 = validateParameter(valid_614239, JString, required = false,
                                 default = nil)
  if valid_614239 != nil:
    section.add "X-Amz-Signature", valid_614239
  var valid_614240 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614240 = validateParameter(valid_614240, JString, required = false,
                                 default = nil)
  if valid_614240 != nil:
    section.add "X-Amz-Content-Sha256", valid_614240
  var valid_614241 = header.getOrDefault("X-Amz-Date")
  valid_614241 = validateParameter(valid_614241, JString, required = false,
                                 default = nil)
  if valid_614241 != nil:
    section.add "X-Amz-Date", valid_614241
  var valid_614242 = header.getOrDefault("X-Amz-Credential")
  valid_614242 = validateParameter(valid_614242, JString, required = false,
                                 default = nil)
  if valid_614242 != nil:
    section.add "X-Amz-Credential", valid_614242
  var valid_614243 = header.getOrDefault("X-Amz-Security-Token")
  valid_614243 = validateParameter(valid_614243, JString, required = false,
                                 default = nil)
  if valid_614243 != nil:
    section.add "X-Amz-Security-Token", valid_614243
  var valid_614244 = header.getOrDefault("X-Amz-Algorithm")
  valid_614244 = validateParameter(valid_614244, JString, required = false,
                                 default = nil)
  if valid_614244 != nil:
    section.add "X-Amz-Algorithm", valid_614244
  var valid_614245 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614245 = validateParameter(valid_614245, JString, required = false,
                                 default = nil)
  if valid_614245 != nil:
    section.add "X-Amz-SignedHeaders", valid_614245
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_614246 = formData.getOrDefault("StackName")
  valid_614246 = validateParameter(valid_614246, JString, required = true,
                                 default = nil)
  if valid_614246 != nil:
    section.add "StackName", valid_614246
  var valid_614247 = formData.getOrDefault("LogicalResourceIds")
  valid_614247 = validateParameter(valid_614247, JArray, required = false,
                                 default = nil)
  if valid_614247 != nil:
    section.add "LogicalResourceIds", valid_614247
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614248: Call_PostDetectStackDrift_614234; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_614248.validator(path, query, header, formData, body)
  let scheme = call_614248.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614248.url(scheme.get, call_614248.host, call_614248.base,
                         call_614248.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614248, url, valid)

proc call*(call_614249: Call_PostDetectStackDrift_614234; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614250 = newJObject()
  var formData_614251 = newJObject()
  add(formData_614251, "StackName", newJString(StackName))
  if LogicalResourceIds != nil:
    formData_614251.add "LogicalResourceIds", LogicalResourceIds
  add(query_614250, "Action", newJString(Action))
  add(query_614250, "Version", newJString(Version))
  result = call_614249.call(nil, query_614250, nil, formData_614251, nil)

var postDetectStackDrift* = Call_PostDetectStackDrift_614234(
    name: "postDetectStackDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_PostDetectStackDrift_614235, base: "/",
    url: url_PostDetectStackDrift_614236, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackDrift_614217 = ref object of OpenApiRestCall_612658
proc url_GetDetectStackDrift_614219(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackDrift_614218(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614220 = query.getOrDefault("LogicalResourceIds")
  valid_614220 = validateParameter(valid_614220, JArray, required = false,
                                 default = nil)
  if valid_614220 != nil:
    section.add "LogicalResourceIds", valid_614220
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_614221 = query.getOrDefault("StackName")
  valid_614221 = validateParameter(valid_614221, JString, required = true,
                                 default = nil)
  if valid_614221 != nil:
    section.add "StackName", valid_614221
  var valid_614222 = query.getOrDefault("Action")
  valid_614222 = validateParameter(valid_614222, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_614222 != nil:
    section.add "Action", valid_614222
  var valid_614223 = query.getOrDefault("Version")
  valid_614223 = validateParameter(valid_614223, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614223 != nil:
    section.add "Version", valid_614223
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614224 = header.getOrDefault("X-Amz-Signature")
  valid_614224 = validateParameter(valid_614224, JString, required = false,
                                 default = nil)
  if valid_614224 != nil:
    section.add "X-Amz-Signature", valid_614224
  var valid_614225 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614225 = validateParameter(valid_614225, JString, required = false,
                                 default = nil)
  if valid_614225 != nil:
    section.add "X-Amz-Content-Sha256", valid_614225
  var valid_614226 = header.getOrDefault("X-Amz-Date")
  valid_614226 = validateParameter(valid_614226, JString, required = false,
                                 default = nil)
  if valid_614226 != nil:
    section.add "X-Amz-Date", valid_614226
  var valid_614227 = header.getOrDefault("X-Amz-Credential")
  valid_614227 = validateParameter(valid_614227, JString, required = false,
                                 default = nil)
  if valid_614227 != nil:
    section.add "X-Amz-Credential", valid_614227
  var valid_614228 = header.getOrDefault("X-Amz-Security-Token")
  valid_614228 = validateParameter(valid_614228, JString, required = false,
                                 default = nil)
  if valid_614228 != nil:
    section.add "X-Amz-Security-Token", valid_614228
  var valid_614229 = header.getOrDefault("X-Amz-Algorithm")
  valid_614229 = validateParameter(valid_614229, JString, required = false,
                                 default = nil)
  if valid_614229 != nil:
    section.add "X-Amz-Algorithm", valid_614229
  var valid_614230 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614230 = validateParameter(valid_614230, JString, required = false,
                                 default = nil)
  if valid_614230 != nil:
    section.add "X-Amz-SignedHeaders", valid_614230
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614231: Call_GetDetectStackDrift_614217; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_614231.validator(path, query, header, formData, body)
  let scheme = call_614231.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614231.url(scheme.get, call_614231.host, call_614231.base,
                         call_614231.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614231, url, valid)

proc call*(call_614232: Call_GetDetectStackDrift_614217; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614233 = newJObject()
  if LogicalResourceIds != nil:
    query_614233.add "LogicalResourceIds", LogicalResourceIds
  add(query_614233, "StackName", newJString(StackName))
  add(query_614233, "Action", newJString(Action))
  add(query_614233, "Version", newJString(Version))
  result = call_614232.call(nil, query_614233, nil, nil, nil)

var getDetectStackDrift* = Call_GetDetectStackDrift_614217(
    name: "getDetectStackDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_GetDetectStackDrift_614218, base: "/",
    url: url_GetDetectStackDrift_614219, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackResourceDrift_614269 = ref object of OpenApiRestCall_612658
proc url_PostDetectStackResourceDrift_614271(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackResourceDrift_614270(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614272 = query.getOrDefault("Action")
  valid_614272 = validateParameter(valid_614272, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_614272 != nil:
    section.add "Action", valid_614272
  var valid_614273 = query.getOrDefault("Version")
  valid_614273 = validateParameter(valid_614273, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614273 != nil:
    section.add "Version", valid_614273
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614274 = header.getOrDefault("X-Amz-Signature")
  valid_614274 = validateParameter(valid_614274, JString, required = false,
                                 default = nil)
  if valid_614274 != nil:
    section.add "X-Amz-Signature", valid_614274
  var valid_614275 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614275 = validateParameter(valid_614275, JString, required = false,
                                 default = nil)
  if valid_614275 != nil:
    section.add "X-Amz-Content-Sha256", valid_614275
  var valid_614276 = header.getOrDefault("X-Amz-Date")
  valid_614276 = validateParameter(valid_614276, JString, required = false,
                                 default = nil)
  if valid_614276 != nil:
    section.add "X-Amz-Date", valid_614276
  var valid_614277 = header.getOrDefault("X-Amz-Credential")
  valid_614277 = validateParameter(valid_614277, JString, required = false,
                                 default = nil)
  if valid_614277 != nil:
    section.add "X-Amz-Credential", valid_614277
  var valid_614278 = header.getOrDefault("X-Amz-Security-Token")
  valid_614278 = validateParameter(valid_614278, JString, required = false,
                                 default = nil)
  if valid_614278 != nil:
    section.add "X-Amz-Security-Token", valid_614278
  var valid_614279 = header.getOrDefault("X-Amz-Algorithm")
  valid_614279 = validateParameter(valid_614279, JString, required = false,
                                 default = nil)
  if valid_614279 != nil:
    section.add "X-Amz-Algorithm", valid_614279
  var valid_614280 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614280 = validateParameter(valid_614280, JString, required = false,
                                 default = nil)
  if valid_614280 != nil:
    section.add "X-Amz-SignedHeaders", valid_614280
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_614281 = formData.getOrDefault("StackName")
  valid_614281 = validateParameter(valid_614281, JString, required = true,
                                 default = nil)
  if valid_614281 != nil:
    section.add "StackName", valid_614281
  var valid_614282 = formData.getOrDefault("LogicalResourceId")
  valid_614282 = validateParameter(valid_614282, JString, required = true,
                                 default = nil)
  if valid_614282 != nil:
    section.add "LogicalResourceId", valid_614282
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614283: Call_PostDetectStackResourceDrift_614269; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_614283.validator(path, query, header, formData, body)
  let scheme = call_614283.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614283.url(scheme.get, call_614283.host, call_614283.base,
                         call_614283.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614283, url, valid)

proc call*(call_614284: Call_PostDetectStackResourceDrift_614269;
          StackName: string; LogicalResourceId: string;
          Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  var query_614285 = newJObject()
  var formData_614286 = newJObject()
  add(formData_614286, "StackName", newJString(StackName))
  add(query_614285, "Action", newJString(Action))
  add(query_614285, "Version", newJString(Version))
  add(formData_614286, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_614284.call(nil, query_614285, nil, formData_614286, nil)

var postDetectStackResourceDrift* = Call_PostDetectStackResourceDrift_614269(
    name: "postDetectStackResourceDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_PostDetectStackResourceDrift_614270, base: "/",
    url: url_PostDetectStackResourceDrift_614271,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackResourceDrift_614252 = ref object of OpenApiRestCall_612658
proc url_GetDetectStackResourceDrift_614254(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackResourceDrift_614253(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_614255 = query.getOrDefault("StackName")
  valid_614255 = validateParameter(valid_614255, JString, required = true,
                                 default = nil)
  if valid_614255 != nil:
    section.add "StackName", valid_614255
  var valid_614256 = query.getOrDefault("Action")
  valid_614256 = validateParameter(valid_614256, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_614256 != nil:
    section.add "Action", valid_614256
  var valid_614257 = query.getOrDefault("Version")
  valid_614257 = validateParameter(valid_614257, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614257 != nil:
    section.add "Version", valid_614257
  var valid_614258 = query.getOrDefault("LogicalResourceId")
  valid_614258 = validateParameter(valid_614258, JString, required = true,
                                 default = nil)
  if valid_614258 != nil:
    section.add "LogicalResourceId", valid_614258
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614259 = header.getOrDefault("X-Amz-Signature")
  valid_614259 = validateParameter(valid_614259, JString, required = false,
                                 default = nil)
  if valid_614259 != nil:
    section.add "X-Amz-Signature", valid_614259
  var valid_614260 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614260 = validateParameter(valid_614260, JString, required = false,
                                 default = nil)
  if valid_614260 != nil:
    section.add "X-Amz-Content-Sha256", valid_614260
  var valid_614261 = header.getOrDefault("X-Amz-Date")
  valid_614261 = validateParameter(valid_614261, JString, required = false,
                                 default = nil)
  if valid_614261 != nil:
    section.add "X-Amz-Date", valid_614261
  var valid_614262 = header.getOrDefault("X-Amz-Credential")
  valid_614262 = validateParameter(valid_614262, JString, required = false,
                                 default = nil)
  if valid_614262 != nil:
    section.add "X-Amz-Credential", valid_614262
  var valid_614263 = header.getOrDefault("X-Amz-Security-Token")
  valid_614263 = validateParameter(valid_614263, JString, required = false,
                                 default = nil)
  if valid_614263 != nil:
    section.add "X-Amz-Security-Token", valid_614263
  var valid_614264 = header.getOrDefault("X-Amz-Algorithm")
  valid_614264 = validateParameter(valid_614264, JString, required = false,
                                 default = nil)
  if valid_614264 != nil:
    section.add "X-Amz-Algorithm", valid_614264
  var valid_614265 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614265 = validateParameter(valid_614265, JString, required = false,
                                 default = nil)
  if valid_614265 != nil:
    section.add "X-Amz-SignedHeaders", valid_614265
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614266: Call_GetDetectStackResourceDrift_614252; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_614266.validator(path, query, header, formData, body)
  let scheme = call_614266.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614266.url(scheme.get, call_614266.host, call_614266.base,
                         call_614266.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614266, url, valid)

proc call*(call_614267: Call_GetDetectStackResourceDrift_614252; StackName: string;
          LogicalResourceId: string; Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  var query_614268 = newJObject()
  add(query_614268, "StackName", newJString(StackName))
  add(query_614268, "Action", newJString(Action))
  add(query_614268, "Version", newJString(Version))
  add(query_614268, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_614267.call(nil, query_614268, nil, nil, nil)

var getDetectStackResourceDrift* = Call_GetDetectStackResourceDrift_614252(
    name: "getDetectStackResourceDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_GetDetectStackResourceDrift_614253, base: "/",
    url: url_GetDetectStackResourceDrift_614254,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackSetDrift_614309 = ref object of OpenApiRestCall_612658
proc url_PostDetectStackSetDrift_614311(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackSetDrift_614310(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614312 = query.getOrDefault("Action")
  valid_614312 = validateParameter(valid_614312, JString, required = true,
                                 default = newJString("DetectStackSetDrift"))
  if valid_614312 != nil:
    section.add "Action", valid_614312
  var valid_614313 = query.getOrDefault("Version")
  valid_614313 = validateParameter(valid_614313, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614313 != nil:
    section.add "Version", valid_614313
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614314 = header.getOrDefault("X-Amz-Signature")
  valid_614314 = validateParameter(valid_614314, JString, required = false,
                                 default = nil)
  if valid_614314 != nil:
    section.add "X-Amz-Signature", valid_614314
  var valid_614315 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614315 = validateParameter(valid_614315, JString, required = false,
                                 default = nil)
  if valid_614315 != nil:
    section.add "X-Amz-Content-Sha256", valid_614315
  var valid_614316 = header.getOrDefault("X-Amz-Date")
  valid_614316 = validateParameter(valid_614316, JString, required = false,
                                 default = nil)
  if valid_614316 != nil:
    section.add "X-Amz-Date", valid_614316
  var valid_614317 = header.getOrDefault("X-Amz-Credential")
  valid_614317 = validateParameter(valid_614317, JString, required = false,
                                 default = nil)
  if valid_614317 != nil:
    section.add "X-Amz-Credential", valid_614317
  var valid_614318 = header.getOrDefault("X-Amz-Security-Token")
  valid_614318 = validateParameter(valid_614318, JString, required = false,
                                 default = nil)
  if valid_614318 != nil:
    section.add "X-Amz-Security-Token", valid_614318
  var valid_614319 = header.getOrDefault("X-Amz-Algorithm")
  valid_614319 = validateParameter(valid_614319, JString, required = false,
                                 default = nil)
  if valid_614319 != nil:
    section.add "X-Amz-Algorithm", valid_614319
  var valid_614320 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614320 = validateParameter(valid_614320, JString, required = false,
                                 default = nil)
  if valid_614320 != nil:
    section.add "X-Amz-SignedHeaders", valid_614320
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: JString (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_614321 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_614321 = validateParameter(valid_614321, JString, required = false,
                                 default = nil)
  if valid_614321 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_614321
  var valid_614322 = formData.getOrDefault("OperationId")
  valid_614322 = validateParameter(valid_614322, JString, required = false,
                                 default = nil)
  if valid_614322 != nil:
    section.add "OperationId", valid_614322
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_614323 = formData.getOrDefault("StackSetName")
  valid_614323 = validateParameter(valid_614323, JString, required = true,
                                 default = nil)
  if valid_614323 != nil:
    section.add "StackSetName", valid_614323
  var valid_614324 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_614324 = validateParameter(valid_614324, JArray, required = false,
                                 default = nil)
  if valid_614324 != nil:
    section.add "OperationPreferences.RegionOrder", valid_614324
  var valid_614325 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_614325 = validateParameter(valid_614325, JString, required = false,
                                 default = nil)
  if valid_614325 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_614325
  var valid_614326 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_614326 = validateParameter(valid_614326, JString, required = false,
                                 default = nil)
  if valid_614326 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_614326
  var valid_614327 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_614327 = validateParameter(valid_614327, JString, required = false,
                                 default = nil)
  if valid_614327 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_614327
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614328: Call_PostDetectStackSetDrift_614309; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  let valid = call_614328.validator(path, query, header, formData, body)
  let scheme = call_614328.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614328.url(scheme.get, call_614328.host, call_614328.base,
                         call_614328.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614328, url, valid)

proc call*(call_614329: Call_PostDetectStackSetDrift_614309; StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DetectStackSetDrift";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postDetectStackSetDrift
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: string (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_614330 = newJObject()
  var formData_614331 = newJObject()
  add(formData_614331, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_614331, "OperationId", newJString(OperationId))
  add(formData_614331, "StackSetName", newJString(StackSetName))
  if OperationPreferencesRegionOrder != nil:
    formData_614331.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_614331, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_614330, "Action", newJString(Action))
  add(formData_614331, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_614330, "Version", newJString(Version))
  add(formData_614331, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_614329.call(nil, query_614330, nil, formData_614331, nil)

var postDetectStackSetDrift* = Call_PostDetectStackSetDrift_614309(
    name: "postDetectStackSetDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackSetDrift",
    validator: validate_PostDetectStackSetDrift_614310, base: "/",
    url: url_PostDetectStackSetDrift_614311, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackSetDrift_614287 = ref object of OpenApiRestCall_612658
proc url_GetDetectStackSetDrift_614289(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackSetDrift_614288(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: JString (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_614290 = query.getOrDefault("OperationId")
  valid_614290 = validateParameter(valid_614290, JString, required = false,
                                 default = nil)
  if valid_614290 != nil:
    section.add "OperationId", valid_614290
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_614291 = query.getOrDefault("StackSetName")
  valid_614291 = validateParameter(valid_614291, JString, required = true,
                                 default = nil)
  if valid_614291 != nil:
    section.add "StackSetName", valid_614291
  var valid_614292 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_614292 = validateParameter(valid_614292, JString, required = false,
                                 default = nil)
  if valid_614292 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_614292
  var valid_614293 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_614293 = validateParameter(valid_614293, JString, required = false,
                                 default = nil)
  if valid_614293 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_614293
  var valid_614294 = query.getOrDefault("Action")
  valid_614294 = validateParameter(valid_614294, JString, required = true,
                                 default = newJString("DetectStackSetDrift"))
  if valid_614294 != nil:
    section.add "Action", valid_614294
  var valid_614295 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_614295 = validateParameter(valid_614295, JArray, required = false,
                                 default = nil)
  if valid_614295 != nil:
    section.add "OperationPreferences.RegionOrder", valid_614295
  var valid_614296 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_614296 = validateParameter(valid_614296, JString, required = false,
                                 default = nil)
  if valid_614296 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_614296
  var valid_614297 = query.getOrDefault("Version")
  valid_614297 = validateParameter(valid_614297, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614297 != nil:
    section.add "Version", valid_614297
  var valid_614298 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_614298 = validateParameter(valid_614298, JString, required = false,
                                 default = nil)
  if valid_614298 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_614298
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614299 = header.getOrDefault("X-Amz-Signature")
  valid_614299 = validateParameter(valid_614299, JString, required = false,
                                 default = nil)
  if valid_614299 != nil:
    section.add "X-Amz-Signature", valid_614299
  var valid_614300 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614300 = validateParameter(valid_614300, JString, required = false,
                                 default = nil)
  if valid_614300 != nil:
    section.add "X-Amz-Content-Sha256", valid_614300
  var valid_614301 = header.getOrDefault("X-Amz-Date")
  valid_614301 = validateParameter(valid_614301, JString, required = false,
                                 default = nil)
  if valid_614301 != nil:
    section.add "X-Amz-Date", valid_614301
  var valid_614302 = header.getOrDefault("X-Amz-Credential")
  valid_614302 = validateParameter(valid_614302, JString, required = false,
                                 default = nil)
  if valid_614302 != nil:
    section.add "X-Amz-Credential", valid_614302
  var valid_614303 = header.getOrDefault("X-Amz-Security-Token")
  valid_614303 = validateParameter(valid_614303, JString, required = false,
                                 default = nil)
  if valid_614303 != nil:
    section.add "X-Amz-Security-Token", valid_614303
  var valid_614304 = header.getOrDefault("X-Amz-Algorithm")
  valid_614304 = validateParameter(valid_614304, JString, required = false,
                                 default = nil)
  if valid_614304 != nil:
    section.add "X-Amz-Algorithm", valid_614304
  var valid_614305 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614305 = validateParameter(valid_614305, JString, required = false,
                                 default = nil)
  if valid_614305 != nil:
    section.add "X-Amz-SignedHeaders", valid_614305
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614306: Call_GetDetectStackSetDrift_614287; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  let valid = call_614306.validator(path, query, header, formData, body)
  let scheme = call_614306.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614306.url(scheme.get, call_614306.host, call_614306.base,
                         call_614306.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614306, url, valid)

proc call*(call_614307: Call_GetDetectStackSetDrift_614287; StackSetName: string;
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DetectStackSetDrift";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getDetectStackSetDrift
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ##   OperationId: string
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: string (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_614308 = newJObject()
  add(query_614308, "OperationId", newJString(OperationId))
  add(query_614308, "StackSetName", newJString(StackSetName))
  add(query_614308, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_614308, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_614308, "Action", newJString(Action))
  if OperationPreferencesRegionOrder != nil:
    query_614308.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_614308, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(query_614308, "Version", newJString(Version))
  add(query_614308, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_614307.call(nil, query_614308, nil, nil, nil)

var getDetectStackSetDrift* = Call_GetDetectStackSetDrift_614287(
    name: "getDetectStackSetDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackSetDrift",
    validator: validate_GetDetectStackSetDrift_614288, base: "/",
    url: url_GetDetectStackSetDrift_614289, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostEstimateTemplateCost_614350 = ref object of OpenApiRestCall_612658
proc url_PostEstimateTemplateCost_614352(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostEstimateTemplateCost_614351(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614353 = query.getOrDefault("Action")
  valid_614353 = validateParameter(valid_614353, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_614353 != nil:
    section.add "Action", valid_614353
  var valid_614354 = query.getOrDefault("Version")
  valid_614354 = validateParameter(valid_614354, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614354 != nil:
    section.add "Version", valid_614354
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614355 = header.getOrDefault("X-Amz-Signature")
  valid_614355 = validateParameter(valid_614355, JString, required = false,
                                 default = nil)
  if valid_614355 != nil:
    section.add "X-Amz-Signature", valid_614355
  var valid_614356 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614356 = validateParameter(valid_614356, JString, required = false,
                                 default = nil)
  if valid_614356 != nil:
    section.add "X-Amz-Content-Sha256", valid_614356
  var valid_614357 = header.getOrDefault("X-Amz-Date")
  valid_614357 = validateParameter(valid_614357, JString, required = false,
                                 default = nil)
  if valid_614357 != nil:
    section.add "X-Amz-Date", valid_614357
  var valid_614358 = header.getOrDefault("X-Amz-Credential")
  valid_614358 = validateParameter(valid_614358, JString, required = false,
                                 default = nil)
  if valid_614358 != nil:
    section.add "X-Amz-Credential", valid_614358
  var valid_614359 = header.getOrDefault("X-Amz-Security-Token")
  valid_614359 = validateParameter(valid_614359, JString, required = false,
                                 default = nil)
  if valid_614359 != nil:
    section.add "X-Amz-Security-Token", valid_614359
  var valid_614360 = header.getOrDefault("X-Amz-Algorithm")
  valid_614360 = validateParameter(valid_614360, JString, required = false,
                                 default = nil)
  if valid_614360 != nil:
    section.add "X-Amz-Algorithm", valid_614360
  var valid_614361 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614361 = validateParameter(valid_614361, JString, required = false,
                                 default = nil)
  if valid_614361 != nil:
    section.add "X-Amz-SignedHeaders", valid_614361
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  section = newJObject()
  var valid_614362 = formData.getOrDefault("TemplateURL")
  valid_614362 = validateParameter(valid_614362, JString, required = false,
                                 default = nil)
  if valid_614362 != nil:
    section.add "TemplateURL", valid_614362
  var valid_614363 = formData.getOrDefault("TemplateBody")
  valid_614363 = validateParameter(valid_614363, JString, required = false,
                                 default = nil)
  if valid_614363 != nil:
    section.add "TemplateBody", valid_614363
  var valid_614364 = formData.getOrDefault("Parameters")
  valid_614364 = validateParameter(valid_614364, JArray, required = false,
                                 default = nil)
  if valid_614364 != nil:
    section.add "Parameters", valid_614364
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614365: Call_PostEstimateTemplateCost_614350; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_614365.validator(path, query, header, formData, body)
  let scheme = call_614365.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614365.url(scheme.get, call_614365.host, call_614365.base,
                         call_614365.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614365, url, valid)

proc call*(call_614366: Call_PostEstimateTemplateCost_614350;
          TemplateURL: string = ""; TemplateBody: string = "";
          Action: string = "EstimateTemplateCost"; Parameters: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## postEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Version: string (required)
  var query_614367 = newJObject()
  var formData_614368 = newJObject()
  add(formData_614368, "TemplateURL", newJString(TemplateURL))
  add(formData_614368, "TemplateBody", newJString(TemplateBody))
  add(query_614367, "Action", newJString(Action))
  if Parameters != nil:
    formData_614368.add "Parameters", Parameters
  add(query_614367, "Version", newJString(Version))
  result = call_614366.call(nil, query_614367, nil, formData_614368, nil)

var postEstimateTemplateCost* = Call_PostEstimateTemplateCost_614350(
    name: "postEstimateTemplateCost", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_PostEstimateTemplateCost_614351, base: "/",
    url: url_PostEstimateTemplateCost_614352, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetEstimateTemplateCost_614332 = ref object of OpenApiRestCall_612658
proc url_GetEstimateTemplateCost_614334(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetEstimateTemplateCost_614333(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_614335 = query.getOrDefault("Parameters")
  valid_614335 = validateParameter(valid_614335, JArray, required = false,
                                 default = nil)
  if valid_614335 != nil:
    section.add "Parameters", valid_614335
  var valid_614336 = query.getOrDefault("TemplateBody")
  valid_614336 = validateParameter(valid_614336, JString, required = false,
                                 default = nil)
  if valid_614336 != nil:
    section.add "TemplateBody", valid_614336
  var valid_614337 = query.getOrDefault("Action")
  valid_614337 = validateParameter(valid_614337, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_614337 != nil:
    section.add "Action", valid_614337
  var valid_614338 = query.getOrDefault("TemplateURL")
  valid_614338 = validateParameter(valid_614338, JString, required = false,
                                 default = nil)
  if valid_614338 != nil:
    section.add "TemplateURL", valid_614338
  var valid_614339 = query.getOrDefault("Version")
  valid_614339 = validateParameter(valid_614339, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614339 != nil:
    section.add "Version", valid_614339
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614340 = header.getOrDefault("X-Amz-Signature")
  valid_614340 = validateParameter(valid_614340, JString, required = false,
                                 default = nil)
  if valid_614340 != nil:
    section.add "X-Amz-Signature", valid_614340
  var valid_614341 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614341 = validateParameter(valid_614341, JString, required = false,
                                 default = nil)
  if valid_614341 != nil:
    section.add "X-Amz-Content-Sha256", valid_614341
  var valid_614342 = header.getOrDefault("X-Amz-Date")
  valid_614342 = validateParameter(valid_614342, JString, required = false,
                                 default = nil)
  if valid_614342 != nil:
    section.add "X-Amz-Date", valid_614342
  var valid_614343 = header.getOrDefault("X-Amz-Credential")
  valid_614343 = validateParameter(valid_614343, JString, required = false,
                                 default = nil)
  if valid_614343 != nil:
    section.add "X-Amz-Credential", valid_614343
  var valid_614344 = header.getOrDefault("X-Amz-Security-Token")
  valid_614344 = validateParameter(valid_614344, JString, required = false,
                                 default = nil)
  if valid_614344 != nil:
    section.add "X-Amz-Security-Token", valid_614344
  var valid_614345 = header.getOrDefault("X-Amz-Algorithm")
  valid_614345 = validateParameter(valid_614345, JString, required = false,
                                 default = nil)
  if valid_614345 != nil:
    section.add "X-Amz-Algorithm", valid_614345
  var valid_614346 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614346 = validateParameter(valid_614346, JString, required = false,
                                 default = nil)
  if valid_614346 != nil:
    section.add "X-Amz-SignedHeaders", valid_614346
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614347: Call_GetEstimateTemplateCost_614332; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_614347.validator(path, query, header, formData, body)
  let scheme = call_614347.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614347.url(scheme.get, call_614347.host, call_614347.base,
                         call_614347.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614347, url, valid)

proc call*(call_614348: Call_GetEstimateTemplateCost_614332;
          Parameters: JsonNode = nil; TemplateBody: string = "";
          Action: string = "EstimateTemplateCost"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_614349 = newJObject()
  if Parameters != nil:
    query_614349.add "Parameters", Parameters
  add(query_614349, "TemplateBody", newJString(TemplateBody))
  add(query_614349, "Action", newJString(Action))
  add(query_614349, "TemplateURL", newJString(TemplateURL))
  add(query_614349, "Version", newJString(Version))
  result = call_614348.call(nil, query_614349, nil, nil, nil)

var getEstimateTemplateCost* = Call_GetEstimateTemplateCost_614332(
    name: "getEstimateTemplateCost", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_GetEstimateTemplateCost_614333, base: "/",
    url: url_GetEstimateTemplateCost_614334, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostExecuteChangeSet_614387 = ref object of OpenApiRestCall_612658
proc url_PostExecuteChangeSet_614389(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostExecuteChangeSet_614388(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614390 = query.getOrDefault("Action")
  valid_614390 = validateParameter(valid_614390, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_614390 != nil:
    section.add "Action", valid_614390
  var valid_614391 = query.getOrDefault("Version")
  valid_614391 = validateParameter(valid_614391, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614391 != nil:
    section.add "Version", valid_614391
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614392 = header.getOrDefault("X-Amz-Signature")
  valid_614392 = validateParameter(valid_614392, JString, required = false,
                                 default = nil)
  if valid_614392 != nil:
    section.add "X-Amz-Signature", valid_614392
  var valid_614393 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614393 = validateParameter(valid_614393, JString, required = false,
                                 default = nil)
  if valid_614393 != nil:
    section.add "X-Amz-Content-Sha256", valid_614393
  var valid_614394 = header.getOrDefault("X-Amz-Date")
  valid_614394 = validateParameter(valid_614394, JString, required = false,
                                 default = nil)
  if valid_614394 != nil:
    section.add "X-Amz-Date", valid_614394
  var valid_614395 = header.getOrDefault("X-Amz-Credential")
  valid_614395 = validateParameter(valid_614395, JString, required = false,
                                 default = nil)
  if valid_614395 != nil:
    section.add "X-Amz-Credential", valid_614395
  var valid_614396 = header.getOrDefault("X-Amz-Security-Token")
  valid_614396 = validateParameter(valid_614396, JString, required = false,
                                 default = nil)
  if valid_614396 != nil:
    section.add "X-Amz-Security-Token", valid_614396
  var valid_614397 = header.getOrDefault("X-Amz-Algorithm")
  valid_614397 = validateParameter(valid_614397, JString, required = false,
                                 default = nil)
  if valid_614397 != nil:
    section.add "X-Amz-Algorithm", valid_614397
  var valid_614398 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614398 = validateParameter(valid_614398, JString, required = false,
                                 default = nil)
  if valid_614398 != nil:
    section.add "X-Amz-SignedHeaders", valid_614398
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  var valid_614399 = formData.getOrDefault("StackName")
  valid_614399 = validateParameter(valid_614399, JString, required = false,
                                 default = nil)
  if valid_614399 != nil:
    section.add "StackName", valid_614399
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_614400 = formData.getOrDefault("ChangeSetName")
  valid_614400 = validateParameter(valid_614400, JString, required = true,
                                 default = nil)
  if valid_614400 != nil:
    section.add "ChangeSetName", valid_614400
  var valid_614401 = formData.getOrDefault("ClientRequestToken")
  valid_614401 = validateParameter(valid_614401, JString, required = false,
                                 default = nil)
  if valid_614401 != nil:
    section.add "ClientRequestToken", valid_614401
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614402: Call_PostExecuteChangeSet_614387; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_614402.validator(path, query, header, formData, body)
  let scheme = call_614402.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614402.url(scheme.get, call_614402.host, call_614402.base,
                         call_614402.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614402, url, valid)

proc call*(call_614403: Call_PostExecuteChangeSet_614387; ChangeSetName: string;
          StackName: string = ""; ClientRequestToken: string = "";
          Action: string = "ExecuteChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## postExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614404 = newJObject()
  var formData_614405 = newJObject()
  add(formData_614405, "StackName", newJString(StackName))
  add(formData_614405, "ChangeSetName", newJString(ChangeSetName))
  add(formData_614405, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_614404, "Action", newJString(Action))
  add(query_614404, "Version", newJString(Version))
  result = call_614403.call(nil, query_614404, nil, formData_614405, nil)

var postExecuteChangeSet* = Call_PostExecuteChangeSet_614387(
    name: "postExecuteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_PostExecuteChangeSet_614388, base: "/",
    url: url_PostExecuteChangeSet_614389, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetExecuteChangeSet_614369 = ref object of OpenApiRestCall_612658
proc url_GetExecuteChangeSet_614371(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetExecuteChangeSet_614370(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Version: JString (required)
  section = newJObject()
  var valid_614372 = query.getOrDefault("StackName")
  valid_614372 = validateParameter(valid_614372, JString, required = false,
                                 default = nil)
  if valid_614372 != nil:
    section.add "StackName", valid_614372
  var valid_614373 = query.getOrDefault("Action")
  valid_614373 = validateParameter(valid_614373, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_614373 != nil:
    section.add "Action", valid_614373
  var valid_614374 = query.getOrDefault("ClientRequestToken")
  valid_614374 = validateParameter(valid_614374, JString, required = false,
                                 default = nil)
  if valid_614374 != nil:
    section.add "ClientRequestToken", valid_614374
  var valid_614375 = query.getOrDefault("ChangeSetName")
  valid_614375 = validateParameter(valid_614375, JString, required = true,
                                 default = nil)
  if valid_614375 != nil:
    section.add "ChangeSetName", valid_614375
  var valid_614376 = query.getOrDefault("Version")
  valid_614376 = validateParameter(valid_614376, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614376 != nil:
    section.add "Version", valid_614376
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614377 = header.getOrDefault("X-Amz-Signature")
  valid_614377 = validateParameter(valid_614377, JString, required = false,
                                 default = nil)
  if valid_614377 != nil:
    section.add "X-Amz-Signature", valid_614377
  var valid_614378 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614378 = validateParameter(valid_614378, JString, required = false,
                                 default = nil)
  if valid_614378 != nil:
    section.add "X-Amz-Content-Sha256", valid_614378
  var valid_614379 = header.getOrDefault("X-Amz-Date")
  valid_614379 = validateParameter(valid_614379, JString, required = false,
                                 default = nil)
  if valid_614379 != nil:
    section.add "X-Amz-Date", valid_614379
  var valid_614380 = header.getOrDefault("X-Amz-Credential")
  valid_614380 = validateParameter(valid_614380, JString, required = false,
                                 default = nil)
  if valid_614380 != nil:
    section.add "X-Amz-Credential", valid_614380
  var valid_614381 = header.getOrDefault("X-Amz-Security-Token")
  valid_614381 = validateParameter(valid_614381, JString, required = false,
                                 default = nil)
  if valid_614381 != nil:
    section.add "X-Amz-Security-Token", valid_614381
  var valid_614382 = header.getOrDefault("X-Amz-Algorithm")
  valid_614382 = validateParameter(valid_614382, JString, required = false,
                                 default = nil)
  if valid_614382 != nil:
    section.add "X-Amz-Algorithm", valid_614382
  var valid_614383 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614383 = validateParameter(valid_614383, JString, required = false,
                                 default = nil)
  if valid_614383 != nil:
    section.add "X-Amz-SignedHeaders", valid_614383
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614384: Call_GetExecuteChangeSet_614369; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_614384.validator(path, query, header, formData, body)
  let scheme = call_614384.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614384.url(scheme.get, call_614384.host, call_614384.base,
                         call_614384.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614384, url, valid)

proc call*(call_614385: Call_GetExecuteChangeSet_614369; ChangeSetName: string;
          StackName: string = ""; Action: string = "ExecuteChangeSet";
          ClientRequestToken: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Version: string (required)
  var query_614386 = newJObject()
  add(query_614386, "StackName", newJString(StackName))
  add(query_614386, "Action", newJString(Action))
  add(query_614386, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_614386, "ChangeSetName", newJString(ChangeSetName))
  add(query_614386, "Version", newJString(Version))
  result = call_614385.call(nil, query_614386, nil, nil, nil)

var getExecuteChangeSet* = Call_GetExecuteChangeSet_614369(
    name: "getExecuteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_GetExecuteChangeSet_614370, base: "/",
    url: url_GetExecuteChangeSet_614371, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetStackPolicy_614422 = ref object of OpenApiRestCall_612658
proc url_PostGetStackPolicy_614424(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetStackPolicy_614423(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614425 = query.getOrDefault("Action")
  valid_614425 = validateParameter(valid_614425, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_614425 != nil:
    section.add "Action", valid_614425
  var valid_614426 = query.getOrDefault("Version")
  valid_614426 = validateParameter(valid_614426, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614426 != nil:
    section.add "Version", valid_614426
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614427 = header.getOrDefault("X-Amz-Signature")
  valid_614427 = validateParameter(valid_614427, JString, required = false,
                                 default = nil)
  if valid_614427 != nil:
    section.add "X-Amz-Signature", valid_614427
  var valid_614428 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614428 = validateParameter(valid_614428, JString, required = false,
                                 default = nil)
  if valid_614428 != nil:
    section.add "X-Amz-Content-Sha256", valid_614428
  var valid_614429 = header.getOrDefault("X-Amz-Date")
  valid_614429 = validateParameter(valid_614429, JString, required = false,
                                 default = nil)
  if valid_614429 != nil:
    section.add "X-Amz-Date", valid_614429
  var valid_614430 = header.getOrDefault("X-Amz-Credential")
  valid_614430 = validateParameter(valid_614430, JString, required = false,
                                 default = nil)
  if valid_614430 != nil:
    section.add "X-Amz-Credential", valid_614430
  var valid_614431 = header.getOrDefault("X-Amz-Security-Token")
  valid_614431 = validateParameter(valid_614431, JString, required = false,
                                 default = nil)
  if valid_614431 != nil:
    section.add "X-Amz-Security-Token", valid_614431
  var valid_614432 = header.getOrDefault("X-Amz-Algorithm")
  valid_614432 = validateParameter(valid_614432, JString, required = false,
                                 default = nil)
  if valid_614432 != nil:
    section.add "X-Amz-Algorithm", valid_614432
  var valid_614433 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614433 = validateParameter(valid_614433, JString, required = false,
                                 default = nil)
  if valid_614433 != nil:
    section.add "X-Amz-SignedHeaders", valid_614433
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_614434 = formData.getOrDefault("StackName")
  valid_614434 = validateParameter(valid_614434, JString, required = true,
                                 default = nil)
  if valid_614434 != nil:
    section.add "StackName", valid_614434
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614435: Call_PostGetStackPolicy_614422; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_614435.validator(path, query, header, formData, body)
  let scheme = call_614435.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614435.url(scheme.get, call_614435.host, call_614435.base,
                         call_614435.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614435, url, valid)

proc call*(call_614436: Call_PostGetStackPolicy_614422; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614437 = newJObject()
  var formData_614438 = newJObject()
  add(formData_614438, "StackName", newJString(StackName))
  add(query_614437, "Action", newJString(Action))
  add(query_614437, "Version", newJString(Version))
  result = call_614436.call(nil, query_614437, nil, formData_614438, nil)

var postGetStackPolicy* = Call_PostGetStackPolicy_614422(
    name: "postGetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetStackPolicy",
    validator: validate_PostGetStackPolicy_614423, base: "/",
    url: url_PostGetStackPolicy_614424, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetStackPolicy_614406 = ref object of OpenApiRestCall_612658
proc url_GetGetStackPolicy_614408(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetStackPolicy_614407(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_614409 = query.getOrDefault("StackName")
  valid_614409 = validateParameter(valid_614409, JString, required = true,
                                 default = nil)
  if valid_614409 != nil:
    section.add "StackName", valid_614409
  var valid_614410 = query.getOrDefault("Action")
  valid_614410 = validateParameter(valid_614410, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_614410 != nil:
    section.add "Action", valid_614410
  var valid_614411 = query.getOrDefault("Version")
  valid_614411 = validateParameter(valid_614411, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614411 != nil:
    section.add "Version", valid_614411
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614412 = header.getOrDefault("X-Amz-Signature")
  valid_614412 = validateParameter(valid_614412, JString, required = false,
                                 default = nil)
  if valid_614412 != nil:
    section.add "X-Amz-Signature", valid_614412
  var valid_614413 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614413 = validateParameter(valid_614413, JString, required = false,
                                 default = nil)
  if valid_614413 != nil:
    section.add "X-Amz-Content-Sha256", valid_614413
  var valid_614414 = header.getOrDefault("X-Amz-Date")
  valid_614414 = validateParameter(valid_614414, JString, required = false,
                                 default = nil)
  if valid_614414 != nil:
    section.add "X-Amz-Date", valid_614414
  var valid_614415 = header.getOrDefault("X-Amz-Credential")
  valid_614415 = validateParameter(valid_614415, JString, required = false,
                                 default = nil)
  if valid_614415 != nil:
    section.add "X-Amz-Credential", valid_614415
  var valid_614416 = header.getOrDefault("X-Amz-Security-Token")
  valid_614416 = validateParameter(valid_614416, JString, required = false,
                                 default = nil)
  if valid_614416 != nil:
    section.add "X-Amz-Security-Token", valid_614416
  var valid_614417 = header.getOrDefault("X-Amz-Algorithm")
  valid_614417 = validateParameter(valid_614417, JString, required = false,
                                 default = nil)
  if valid_614417 != nil:
    section.add "X-Amz-Algorithm", valid_614417
  var valid_614418 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614418 = validateParameter(valid_614418, JString, required = false,
                                 default = nil)
  if valid_614418 != nil:
    section.add "X-Amz-SignedHeaders", valid_614418
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614419: Call_GetGetStackPolicy_614406; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_614419.validator(path, query, header, formData, body)
  let scheme = call_614419.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614419.url(scheme.get, call_614419.host, call_614419.base,
                         call_614419.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614419, url, valid)

proc call*(call_614420: Call_GetGetStackPolicy_614406; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614421 = newJObject()
  add(query_614421, "StackName", newJString(StackName))
  add(query_614421, "Action", newJString(Action))
  add(query_614421, "Version", newJString(Version))
  result = call_614420.call(nil, query_614421, nil, nil, nil)

var getGetStackPolicy* = Call_GetGetStackPolicy_614406(name: "getGetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetStackPolicy", validator: validate_GetGetStackPolicy_614407,
    base: "/", url: url_GetGetStackPolicy_614408,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplate_614457 = ref object of OpenApiRestCall_612658
proc url_PostGetTemplate_614459(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplate_614458(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614460 = query.getOrDefault("Action")
  valid_614460 = validateParameter(valid_614460, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_614460 != nil:
    section.add "Action", valid_614460
  var valid_614461 = query.getOrDefault("Version")
  valid_614461 = validateParameter(valid_614461, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614461 != nil:
    section.add "Version", valid_614461
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614462 = header.getOrDefault("X-Amz-Signature")
  valid_614462 = validateParameter(valid_614462, JString, required = false,
                                 default = nil)
  if valid_614462 != nil:
    section.add "X-Amz-Signature", valid_614462
  var valid_614463 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614463 = validateParameter(valid_614463, JString, required = false,
                                 default = nil)
  if valid_614463 != nil:
    section.add "X-Amz-Content-Sha256", valid_614463
  var valid_614464 = header.getOrDefault("X-Amz-Date")
  valid_614464 = validateParameter(valid_614464, JString, required = false,
                                 default = nil)
  if valid_614464 != nil:
    section.add "X-Amz-Date", valid_614464
  var valid_614465 = header.getOrDefault("X-Amz-Credential")
  valid_614465 = validateParameter(valid_614465, JString, required = false,
                                 default = nil)
  if valid_614465 != nil:
    section.add "X-Amz-Credential", valid_614465
  var valid_614466 = header.getOrDefault("X-Amz-Security-Token")
  valid_614466 = validateParameter(valid_614466, JString, required = false,
                                 default = nil)
  if valid_614466 != nil:
    section.add "X-Amz-Security-Token", valid_614466
  var valid_614467 = header.getOrDefault("X-Amz-Algorithm")
  valid_614467 = validateParameter(valid_614467, JString, required = false,
                                 default = nil)
  if valid_614467 != nil:
    section.add "X-Amz-Algorithm", valid_614467
  var valid_614468 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614468 = validateParameter(valid_614468, JString, required = false,
                                 default = nil)
  if valid_614468 != nil:
    section.add "X-Amz-SignedHeaders", valid_614468
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  section = newJObject()
  var valid_614469 = formData.getOrDefault("StackName")
  valid_614469 = validateParameter(valid_614469, JString, required = false,
                                 default = nil)
  if valid_614469 != nil:
    section.add "StackName", valid_614469
  var valid_614470 = formData.getOrDefault("ChangeSetName")
  valid_614470 = validateParameter(valid_614470, JString, required = false,
                                 default = nil)
  if valid_614470 != nil:
    section.add "ChangeSetName", valid_614470
  var valid_614471 = formData.getOrDefault("TemplateStage")
  valid_614471 = validateParameter(valid_614471, JString, required = false,
                                 default = newJString("Original"))
  if valid_614471 != nil:
    section.add "TemplateStage", valid_614471
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614472: Call_PostGetTemplate_614457; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_614472.validator(path, query, header, formData, body)
  let scheme = call_614472.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614472.url(scheme.get, call_614472.host, call_614472.base,
                         call_614472.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614472, url, valid)

proc call*(call_614473: Call_PostGetTemplate_614457; StackName: string = "";
          ChangeSetName: string = ""; Action: string = "GetTemplate";
          TemplateStage: string = "Original"; Version: string = "2010-05-15"): Recallable =
  ## postGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Action: string (required)
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Version: string (required)
  var query_614474 = newJObject()
  var formData_614475 = newJObject()
  add(formData_614475, "StackName", newJString(StackName))
  add(formData_614475, "ChangeSetName", newJString(ChangeSetName))
  add(query_614474, "Action", newJString(Action))
  add(formData_614475, "TemplateStage", newJString(TemplateStage))
  add(query_614474, "Version", newJString(Version))
  result = call_614473.call(nil, query_614474, nil, formData_614475, nil)

var postGetTemplate* = Call_PostGetTemplate_614457(name: "postGetTemplate",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_PostGetTemplate_614458,
    base: "/", url: url_PostGetTemplate_614459, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplate_614439 = ref object of OpenApiRestCall_612658
proc url_GetGetTemplate_614441(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplate_614440(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: JString (required)
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Version: JString (required)
  section = newJObject()
  var valid_614442 = query.getOrDefault("StackName")
  valid_614442 = validateParameter(valid_614442, JString, required = false,
                                 default = nil)
  if valid_614442 != nil:
    section.add "StackName", valid_614442
  var valid_614443 = query.getOrDefault("TemplateStage")
  valid_614443 = validateParameter(valid_614443, JString, required = false,
                                 default = newJString("Original"))
  if valid_614443 != nil:
    section.add "TemplateStage", valid_614443
  var valid_614444 = query.getOrDefault("Action")
  valid_614444 = validateParameter(valid_614444, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_614444 != nil:
    section.add "Action", valid_614444
  var valid_614445 = query.getOrDefault("ChangeSetName")
  valid_614445 = validateParameter(valid_614445, JString, required = false,
                                 default = nil)
  if valid_614445 != nil:
    section.add "ChangeSetName", valid_614445
  var valid_614446 = query.getOrDefault("Version")
  valid_614446 = validateParameter(valid_614446, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614446 != nil:
    section.add "Version", valid_614446
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614447 = header.getOrDefault("X-Amz-Signature")
  valid_614447 = validateParameter(valid_614447, JString, required = false,
                                 default = nil)
  if valid_614447 != nil:
    section.add "X-Amz-Signature", valid_614447
  var valid_614448 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614448 = validateParameter(valid_614448, JString, required = false,
                                 default = nil)
  if valid_614448 != nil:
    section.add "X-Amz-Content-Sha256", valid_614448
  var valid_614449 = header.getOrDefault("X-Amz-Date")
  valid_614449 = validateParameter(valid_614449, JString, required = false,
                                 default = nil)
  if valid_614449 != nil:
    section.add "X-Amz-Date", valid_614449
  var valid_614450 = header.getOrDefault("X-Amz-Credential")
  valid_614450 = validateParameter(valid_614450, JString, required = false,
                                 default = nil)
  if valid_614450 != nil:
    section.add "X-Amz-Credential", valid_614450
  var valid_614451 = header.getOrDefault("X-Amz-Security-Token")
  valid_614451 = validateParameter(valid_614451, JString, required = false,
                                 default = nil)
  if valid_614451 != nil:
    section.add "X-Amz-Security-Token", valid_614451
  var valid_614452 = header.getOrDefault("X-Amz-Algorithm")
  valid_614452 = validateParameter(valid_614452, JString, required = false,
                                 default = nil)
  if valid_614452 != nil:
    section.add "X-Amz-Algorithm", valid_614452
  var valid_614453 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614453 = validateParameter(valid_614453, JString, required = false,
                                 default = nil)
  if valid_614453 != nil:
    section.add "X-Amz-SignedHeaders", valid_614453
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614454: Call_GetGetTemplate_614439; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_614454.validator(path, query, header, formData, body)
  let scheme = call_614454.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614454.url(scheme.get, call_614454.host, call_614454.base,
                         call_614454.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614454, url, valid)

proc call*(call_614455: Call_GetGetTemplate_614439; StackName: string = "";
          TemplateStage: string = "Original"; Action: string = "GetTemplate";
          ChangeSetName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: string (required)
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Version: string (required)
  var query_614456 = newJObject()
  add(query_614456, "StackName", newJString(StackName))
  add(query_614456, "TemplateStage", newJString(TemplateStage))
  add(query_614456, "Action", newJString(Action))
  add(query_614456, "ChangeSetName", newJString(ChangeSetName))
  add(query_614456, "Version", newJString(Version))
  result = call_614455.call(nil, query_614456, nil, nil, nil)

var getGetTemplate* = Call_GetGetTemplate_614439(name: "getGetTemplate",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_GetGetTemplate_614440,
    base: "/", url: url_GetGetTemplate_614441, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplateSummary_614495 = ref object of OpenApiRestCall_612658
proc url_PostGetTemplateSummary_614497(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplateSummary_614496(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614498 = query.getOrDefault("Action")
  valid_614498 = validateParameter(valid_614498, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_614498 != nil:
    section.add "Action", valid_614498
  var valid_614499 = query.getOrDefault("Version")
  valid_614499 = validateParameter(valid_614499, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614499 != nil:
    section.add "Version", valid_614499
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614500 = header.getOrDefault("X-Amz-Signature")
  valid_614500 = validateParameter(valid_614500, JString, required = false,
                                 default = nil)
  if valid_614500 != nil:
    section.add "X-Amz-Signature", valid_614500
  var valid_614501 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614501 = validateParameter(valid_614501, JString, required = false,
                                 default = nil)
  if valid_614501 != nil:
    section.add "X-Amz-Content-Sha256", valid_614501
  var valid_614502 = header.getOrDefault("X-Amz-Date")
  valid_614502 = validateParameter(valid_614502, JString, required = false,
                                 default = nil)
  if valid_614502 != nil:
    section.add "X-Amz-Date", valid_614502
  var valid_614503 = header.getOrDefault("X-Amz-Credential")
  valid_614503 = validateParameter(valid_614503, JString, required = false,
                                 default = nil)
  if valid_614503 != nil:
    section.add "X-Amz-Credential", valid_614503
  var valid_614504 = header.getOrDefault("X-Amz-Security-Token")
  valid_614504 = validateParameter(valid_614504, JString, required = false,
                                 default = nil)
  if valid_614504 != nil:
    section.add "X-Amz-Security-Token", valid_614504
  var valid_614505 = header.getOrDefault("X-Amz-Algorithm")
  valid_614505 = validateParameter(valid_614505, JString, required = false,
                                 default = nil)
  if valid_614505 != nil:
    section.add "X-Amz-Algorithm", valid_614505
  var valid_614506 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614506 = validateParameter(valid_614506, JString, required = false,
                                 default = nil)
  if valid_614506 != nil:
    section.add "X-Amz-SignedHeaders", valid_614506
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  section = newJObject()
  var valid_614507 = formData.getOrDefault("StackName")
  valid_614507 = validateParameter(valid_614507, JString, required = false,
                                 default = nil)
  if valid_614507 != nil:
    section.add "StackName", valid_614507
  var valid_614508 = formData.getOrDefault("StackSetName")
  valid_614508 = validateParameter(valid_614508, JString, required = false,
                                 default = nil)
  if valid_614508 != nil:
    section.add "StackSetName", valid_614508
  var valid_614509 = formData.getOrDefault("TemplateURL")
  valid_614509 = validateParameter(valid_614509, JString, required = false,
                                 default = nil)
  if valid_614509 != nil:
    section.add "TemplateURL", valid_614509
  var valid_614510 = formData.getOrDefault("TemplateBody")
  valid_614510 = validateParameter(valid_614510, JString, required = false,
                                 default = nil)
  if valid_614510 != nil:
    section.add "TemplateBody", valid_614510
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614511: Call_PostGetTemplateSummary_614495; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_614511.validator(path, query, header, formData, body)
  let scheme = call_614511.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614511.url(scheme.get, call_614511.host, call_614511.base,
                         call_614511.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614511, url, valid)

proc call*(call_614512: Call_PostGetTemplateSummary_614495; StackName: string = "";
          StackSetName: string = ""; TemplateURL: string = "";
          TemplateBody: string = ""; Action: string = "GetTemplateSummary";
          Version: string = "2010-05-15"): Recallable =
  ## postGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614513 = newJObject()
  var formData_614514 = newJObject()
  add(formData_614514, "StackName", newJString(StackName))
  add(formData_614514, "StackSetName", newJString(StackSetName))
  add(formData_614514, "TemplateURL", newJString(TemplateURL))
  add(formData_614514, "TemplateBody", newJString(TemplateBody))
  add(query_614513, "Action", newJString(Action))
  add(query_614513, "Version", newJString(Version))
  result = call_614512.call(nil, query_614513, nil, formData_614514, nil)

var postGetTemplateSummary* = Call_PostGetTemplateSummary_614495(
    name: "postGetTemplateSummary", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_PostGetTemplateSummary_614496, base: "/",
    url: url_PostGetTemplateSummary_614497, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplateSummary_614476 = ref object of OpenApiRestCall_612658
proc url_GetGetTemplateSummary_614478(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplateSummary_614477(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_614479 = query.getOrDefault("StackSetName")
  valid_614479 = validateParameter(valid_614479, JString, required = false,
                                 default = nil)
  if valid_614479 != nil:
    section.add "StackSetName", valid_614479
  var valid_614480 = query.getOrDefault("StackName")
  valid_614480 = validateParameter(valid_614480, JString, required = false,
                                 default = nil)
  if valid_614480 != nil:
    section.add "StackName", valid_614480
  var valid_614481 = query.getOrDefault("TemplateBody")
  valid_614481 = validateParameter(valid_614481, JString, required = false,
                                 default = nil)
  if valid_614481 != nil:
    section.add "TemplateBody", valid_614481
  var valid_614482 = query.getOrDefault("Action")
  valid_614482 = validateParameter(valid_614482, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_614482 != nil:
    section.add "Action", valid_614482
  var valid_614483 = query.getOrDefault("TemplateURL")
  valid_614483 = validateParameter(valid_614483, JString, required = false,
                                 default = nil)
  if valid_614483 != nil:
    section.add "TemplateURL", valid_614483
  var valid_614484 = query.getOrDefault("Version")
  valid_614484 = validateParameter(valid_614484, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614484 != nil:
    section.add "Version", valid_614484
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614485 = header.getOrDefault("X-Amz-Signature")
  valid_614485 = validateParameter(valid_614485, JString, required = false,
                                 default = nil)
  if valid_614485 != nil:
    section.add "X-Amz-Signature", valid_614485
  var valid_614486 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614486 = validateParameter(valid_614486, JString, required = false,
                                 default = nil)
  if valid_614486 != nil:
    section.add "X-Amz-Content-Sha256", valid_614486
  var valid_614487 = header.getOrDefault("X-Amz-Date")
  valid_614487 = validateParameter(valid_614487, JString, required = false,
                                 default = nil)
  if valid_614487 != nil:
    section.add "X-Amz-Date", valid_614487
  var valid_614488 = header.getOrDefault("X-Amz-Credential")
  valid_614488 = validateParameter(valid_614488, JString, required = false,
                                 default = nil)
  if valid_614488 != nil:
    section.add "X-Amz-Credential", valid_614488
  var valid_614489 = header.getOrDefault("X-Amz-Security-Token")
  valid_614489 = validateParameter(valid_614489, JString, required = false,
                                 default = nil)
  if valid_614489 != nil:
    section.add "X-Amz-Security-Token", valid_614489
  var valid_614490 = header.getOrDefault("X-Amz-Algorithm")
  valid_614490 = validateParameter(valid_614490, JString, required = false,
                                 default = nil)
  if valid_614490 != nil:
    section.add "X-Amz-Algorithm", valid_614490
  var valid_614491 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614491 = validateParameter(valid_614491, JString, required = false,
                                 default = nil)
  if valid_614491 != nil:
    section.add "X-Amz-SignedHeaders", valid_614491
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614492: Call_GetGetTemplateSummary_614476; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_614492.validator(path, query, header, formData, body)
  let scheme = call_614492.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614492.url(scheme.get, call_614492.host, call_614492.base,
                         call_614492.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614492, url, valid)

proc call*(call_614493: Call_GetGetTemplateSummary_614476;
          StackSetName: string = ""; StackName: string = ""; TemplateBody: string = "";
          Action: string = "GetTemplateSummary"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  var query_614494 = newJObject()
  add(query_614494, "StackSetName", newJString(StackSetName))
  add(query_614494, "StackName", newJString(StackName))
  add(query_614494, "TemplateBody", newJString(TemplateBody))
  add(query_614494, "Action", newJString(Action))
  add(query_614494, "TemplateURL", newJString(TemplateURL))
  add(query_614494, "Version", newJString(Version))
  result = call_614493.call(nil, query_614494, nil, nil, nil)

var getGetTemplateSummary* = Call_GetGetTemplateSummary_614476(
    name: "getGetTemplateSummary", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_GetGetTemplateSummary_614477, base: "/",
    url: url_GetGetTemplateSummary_614478, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListChangeSets_614532 = ref object of OpenApiRestCall_612658
proc url_PostListChangeSets_614534(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListChangeSets_614533(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614535 = query.getOrDefault("Action")
  valid_614535 = validateParameter(valid_614535, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_614535 != nil:
    section.add "Action", valid_614535
  var valid_614536 = query.getOrDefault("Version")
  valid_614536 = validateParameter(valid_614536, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614536 != nil:
    section.add "Version", valid_614536
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614537 = header.getOrDefault("X-Amz-Signature")
  valid_614537 = validateParameter(valid_614537, JString, required = false,
                                 default = nil)
  if valid_614537 != nil:
    section.add "X-Amz-Signature", valid_614537
  var valid_614538 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614538 = validateParameter(valid_614538, JString, required = false,
                                 default = nil)
  if valid_614538 != nil:
    section.add "X-Amz-Content-Sha256", valid_614538
  var valid_614539 = header.getOrDefault("X-Amz-Date")
  valid_614539 = validateParameter(valid_614539, JString, required = false,
                                 default = nil)
  if valid_614539 != nil:
    section.add "X-Amz-Date", valid_614539
  var valid_614540 = header.getOrDefault("X-Amz-Credential")
  valid_614540 = validateParameter(valid_614540, JString, required = false,
                                 default = nil)
  if valid_614540 != nil:
    section.add "X-Amz-Credential", valid_614540
  var valid_614541 = header.getOrDefault("X-Amz-Security-Token")
  valid_614541 = validateParameter(valid_614541, JString, required = false,
                                 default = nil)
  if valid_614541 != nil:
    section.add "X-Amz-Security-Token", valid_614541
  var valid_614542 = header.getOrDefault("X-Amz-Algorithm")
  valid_614542 = validateParameter(valid_614542, JString, required = false,
                                 default = nil)
  if valid_614542 != nil:
    section.add "X-Amz-Algorithm", valid_614542
  var valid_614543 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614543 = validateParameter(valid_614543, JString, required = false,
                                 default = nil)
  if valid_614543 != nil:
    section.add "X-Amz-SignedHeaders", valid_614543
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_614544 = formData.getOrDefault("StackName")
  valid_614544 = validateParameter(valid_614544, JString, required = true,
                                 default = nil)
  if valid_614544 != nil:
    section.add "StackName", valid_614544
  var valid_614545 = formData.getOrDefault("NextToken")
  valid_614545 = validateParameter(valid_614545, JString, required = false,
                                 default = nil)
  if valid_614545 != nil:
    section.add "NextToken", valid_614545
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614546: Call_PostListChangeSets_614532; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_614546.validator(path, query, header, formData, body)
  let scheme = call_614546.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614546.url(scheme.get, call_614546.host, call_614546.base,
                         call_614546.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614546, url, valid)

proc call*(call_614547: Call_PostListChangeSets_614532; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## postListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614548 = newJObject()
  var formData_614549 = newJObject()
  add(formData_614549, "StackName", newJString(StackName))
  add(formData_614549, "NextToken", newJString(NextToken))
  add(query_614548, "Action", newJString(Action))
  add(query_614548, "Version", newJString(Version))
  result = call_614547.call(nil, query_614548, nil, formData_614549, nil)

var postListChangeSets* = Call_PostListChangeSets_614532(
    name: "postListChangeSets", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListChangeSets",
    validator: validate_PostListChangeSets_614533, base: "/",
    url: url_PostListChangeSets_614534, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListChangeSets_614515 = ref object of OpenApiRestCall_612658
proc url_GetListChangeSets_614517(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListChangeSets_614516(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614518 = query.getOrDefault("NextToken")
  valid_614518 = validateParameter(valid_614518, JString, required = false,
                                 default = nil)
  if valid_614518 != nil:
    section.add "NextToken", valid_614518
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_614519 = query.getOrDefault("StackName")
  valid_614519 = validateParameter(valid_614519, JString, required = true,
                                 default = nil)
  if valid_614519 != nil:
    section.add "StackName", valid_614519
  var valid_614520 = query.getOrDefault("Action")
  valid_614520 = validateParameter(valid_614520, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_614520 != nil:
    section.add "Action", valid_614520
  var valid_614521 = query.getOrDefault("Version")
  valid_614521 = validateParameter(valid_614521, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614521 != nil:
    section.add "Version", valid_614521
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614522 = header.getOrDefault("X-Amz-Signature")
  valid_614522 = validateParameter(valid_614522, JString, required = false,
                                 default = nil)
  if valid_614522 != nil:
    section.add "X-Amz-Signature", valid_614522
  var valid_614523 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614523 = validateParameter(valid_614523, JString, required = false,
                                 default = nil)
  if valid_614523 != nil:
    section.add "X-Amz-Content-Sha256", valid_614523
  var valid_614524 = header.getOrDefault("X-Amz-Date")
  valid_614524 = validateParameter(valid_614524, JString, required = false,
                                 default = nil)
  if valid_614524 != nil:
    section.add "X-Amz-Date", valid_614524
  var valid_614525 = header.getOrDefault("X-Amz-Credential")
  valid_614525 = validateParameter(valid_614525, JString, required = false,
                                 default = nil)
  if valid_614525 != nil:
    section.add "X-Amz-Credential", valid_614525
  var valid_614526 = header.getOrDefault("X-Amz-Security-Token")
  valid_614526 = validateParameter(valid_614526, JString, required = false,
                                 default = nil)
  if valid_614526 != nil:
    section.add "X-Amz-Security-Token", valid_614526
  var valid_614527 = header.getOrDefault("X-Amz-Algorithm")
  valid_614527 = validateParameter(valid_614527, JString, required = false,
                                 default = nil)
  if valid_614527 != nil:
    section.add "X-Amz-Algorithm", valid_614527
  var valid_614528 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614528 = validateParameter(valid_614528, JString, required = false,
                                 default = nil)
  if valid_614528 != nil:
    section.add "X-Amz-SignedHeaders", valid_614528
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614529: Call_GetListChangeSets_614515; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_614529.validator(path, query, header, formData, body)
  let scheme = call_614529.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614529.url(scheme.get, call_614529.host, call_614529.base,
                         call_614529.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614529, url, valid)

proc call*(call_614530: Call_GetListChangeSets_614515; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## getListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614531 = newJObject()
  add(query_614531, "NextToken", newJString(NextToken))
  add(query_614531, "StackName", newJString(StackName))
  add(query_614531, "Action", newJString(Action))
  add(query_614531, "Version", newJString(Version))
  result = call_614530.call(nil, query_614531, nil, nil, nil)

var getListChangeSets* = Call_GetListChangeSets_614515(name: "getListChangeSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListChangeSets", validator: validate_GetListChangeSets_614516,
    base: "/", url: url_GetListChangeSets_614517,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListExports_614566 = ref object of OpenApiRestCall_612658
proc url_PostListExports_614568(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListExports_614567(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614569 = query.getOrDefault("Action")
  valid_614569 = validateParameter(valid_614569, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_614569 != nil:
    section.add "Action", valid_614569
  var valid_614570 = query.getOrDefault("Version")
  valid_614570 = validateParameter(valid_614570, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614570 != nil:
    section.add "Version", valid_614570
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614571 = header.getOrDefault("X-Amz-Signature")
  valid_614571 = validateParameter(valid_614571, JString, required = false,
                                 default = nil)
  if valid_614571 != nil:
    section.add "X-Amz-Signature", valid_614571
  var valid_614572 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614572 = validateParameter(valid_614572, JString, required = false,
                                 default = nil)
  if valid_614572 != nil:
    section.add "X-Amz-Content-Sha256", valid_614572
  var valid_614573 = header.getOrDefault("X-Amz-Date")
  valid_614573 = validateParameter(valid_614573, JString, required = false,
                                 default = nil)
  if valid_614573 != nil:
    section.add "X-Amz-Date", valid_614573
  var valid_614574 = header.getOrDefault("X-Amz-Credential")
  valid_614574 = validateParameter(valid_614574, JString, required = false,
                                 default = nil)
  if valid_614574 != nil:
    section.add "X-Amz-Credential", valid_614574
  var valid_614575 = header.getOrDefault("X-Amz-Security-Token")
  valid_614575 = validateParameter(valid_614575, JString, required = false,
                                 default = nil)
  if valid_614575 != nil:
    section.add "X-Amz-Security-Token", valid_614575
  var valid_614576 = header.getOrDefault("X-Amz-Algorithm")
  valid_614576 = validateParameter(valid_614576, JString, required = false,
                                 default = nil)
  if valid_614576 != nil:
    section.add "X-Amz-Algorithm", valid_614576
  var valid_614577 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614577 = validateParameter(valid_614577, JString, required = false,
                                 default = nil)
  if valid_614577 != nil:
    section.add "X-Amz-SignedHeaders", valid_614577
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  section = newJObject()
  var valid_614578 = formData.getOrDefault("NextToken")
  valid_614578 = validateParameter(valid_614578, JString, required = false,
                                 default = nil)
  if valid_614578 != nil:
    section.add "NextToken", valid_614578
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614579: Call_PostListExports_614566; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_614579.validator(path, query, header, formData, body)
  let scheme = call_614579.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614579.url(scheme.get, call_614579.host, call_614579.base,
                         call_614579.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614579, url, valid)

proc call*(call_614580: Call_PostListExports_614566; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## postListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614581 = newJObject()
  var formData_614582 = newJObject()
  add(formData_614582, "NextToken", newJString(NextToken))
  add(query_614581, "Action", newJString(Action))
  add(query_614581, "Version", newJString(Version))
  result = call_614580.call(nil, query_614581, nil, formData_614582, nil)

var postListExports* = Call_PostListExports_614566(name: "postListExports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_PostListExports_614567,
    base: "/", url: url_PostListExports_614568, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListExports_614550 = ref object of OpenApiRestCall_612658
proc url_GetListExports_614552(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListExports_614551(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614553 = query.getOrDefault("NextToken")
  valid_614553 = validateParameter(valid_614553, JString, required = false,
                                 default = nil)
  if valid_614553 != nil:
    section.add "NextToken", valid_614553
  var valid_614554 = query.getOrDefault("Action")
  valid_614554 = validateParameter(valid_614554, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_614554 != nil:
    section.add "Action", valid_614554
  var valid_614555 = query.getOrDefault("Version")
  valid_614555 = validateParameter(valid_614555, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614555 != nil:
    section.add "Version", valid_614555
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614556 = header.getOrDefault("X-Amz-Signature")
  valid_614556 = validateParameter(valid_614556, JString, required = false,
                                 default = nil)
  if valid_614556 != nil:
    section.add "X-Amz-Signature", valid_614556
  var valid_614557 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614557 = validateParameter(valid_614557, JString, required = false,
                                 default = nil)
  if valid_614557 != nil:
    section.add "X-Amz-Content-Sha256", valid_614557
  var valid_614558 = header.getOrDefault("X-Amz-Date")
  valid_614558 = validateParameter(valid_614558, JString, required = false,
                                 default = nil)
  if valid_614558 != nil:
    section.add "X-Amz-Date", valid_614558
  var valid_614559 = header.getOrDefault("X-Amz-Credential")
  valid_614559 = validateParameter(valid_614559, JString, required = false,
                                 default = nil)
  if valid_614559 != nil:
    section.add "X-Amz-Credential", valid_614559
  var valid_614560 = header.getOrDefault("X-Amz-Security-Token")
  valid_614560 = validateParameter(valid_614560, JString, required = false,
                                 default = nil)
  if valid_614560 != nil:
    section.add "X-Amz-Security-Token", valid_614560
  var valid_614561 = header.getOrDefault("X-Amz-Algorithm")
  valid_614561 = validateParameter(valid_614561, JString, required = false,
                                 default = nil)
  if valid_614561 != nil:
    section.add "X-Amz-Algorithm", valid_614561
  var valid_614562 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614562 = validateParameter(valid_614562, JString, required = false,
                                 default = nil)
  if valid_614562 != nil:
    section.add "X-Amz-SignedHeaders", valid_614562
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614563: Call_GetListExports_614550; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_614563.validator(path, query, header, formData, body)
  let scheme = call_614563.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614563.url(scheme.get, call_614563.host, call_614563.base,
                         call_614563.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614563, url, valid)

proc call*(call_614564: Call_GetListExports_614550; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## getListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614565 = newJObject()
  add(query_614565, "NextToken", newJString(NextToken))
  add(query_614565, "Action", newJString(Action))
  add(query_614565, "Version", newJString(Version))
  result = call_614564.call(nil, query_614565, nil, nil, nil)

var getListExports* = Call_GetListExports_614550(name: "getListExports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_GetListExports_614551,
    base: "/", url: url_GetListExports_614552, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListImports_614600 = ref object of OpenApiRestCall_612658
proc url_PostListImports_614602(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListImports_614601(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614603 = query.getOrDefault("Action")
  valid_614603 = validateParameter(valid_614603, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_614603 != nil:
    section.add "Action", valid_614603
  var valid_614604 = query.getOrDefault("Version")
  valid_614604 = validateParameter(valid_614604, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614604 != nil:
    section.add "Version", valid_614604
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614605 = header.getOrDefault("X-Amz-Signature")
  valid_614605 = validateParameter(valid_614605, JString, required = false,
                                 default = nil)
  if valid_614605 != nil:
    section.add "X-Amz-Signature", valid_614605
  var valid_614606 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614606 = validateParameter(valid_614606, JString, required = false,
                                 default = nil)
  if valid_614606 != nil:
    section.add "X-Amz-Content-Sha256", valid_614606
  var valid_614607 = header.getOrDefault("X-Amz-Date")
  valid_614607 = validateParameter(valid_614607, JString, required = false,
                                 default = nil)
  if valid_614607 != nil:
    section.add "X-Amz-Date", valid_614607
  var valid_614608 = header.getOrDefault("X-Amz-Credential")
  valid_614608 = validateParameter(valid_614608, JString, required = false,
                                 default = nil)
  if valid_614608 != nil:
    section.add "X-Amz-Credential", valid_614608
  var valid_614609 = header.getOrDefault("X-Amz-Security-Token")
  valid_614609 = validateParameter(valid_614609, JString, required = false,
                                 default = nil)
  if valid_614609 != nil:
    section.add "X-Amz-Security-Token", valid_614609
  var valid_614610 = header.getOrDefault("X-Amz-Algorithm")
  valid_614610 = validateParameter(valid_614610, JString, required = false,
                                 default = nil)
  if valid_614610 != nil:
    section.add "X-Amz-Algorithm", valid_614610
  var valid_614611 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614611 = validateParameter(valid_614611, JString, required = false,
                                 default = nil)
  if valid_614611 != nil:
    section.add "X-Amz-SignedHeaders", valid_614611
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  section = newJObject()
  var valid_614612 = formData.getOrDefault("NextToken")
  valid_614612 = validateParameter(valid_614612, JString, required = false,
                                 default = nil)
  if valid_614612 != nil:
    section.add "NextToken", valid_614612
  assert formData != nil,
        "formData argument is necessary due to required `ExportName` field"
  var valid_614613 = formData.getOrDefault("ExportName")
  valid_614613 = validateParameter(valid_614613, JString, required = true,
                                 default = nil)
  if valid_614613 != nil:
    section.add "ExportName", valid_614613
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614614: Call_PostListImports_614600; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_614614.validator(path, query, header, formData, body)
  let scheme = call_614614.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614614.url(scheme.get, call_614614.host, call_614614.base,
                         call_614614.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614614, url, valid)

proc call*(call_614615: Call_PostListImports_614600; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## postListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: string (required)
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: string (required)
  var query_614616 = newJObject()
  var formData_614617 = newJObject()
  add(formData_614617, "NextToken", newJString(NextToken))
  add(query_614616, "Action", newJString(Action))
  add(formData_614617, "ExportName", newJString(ExportName))
  add(query_614616, "Version", newJString(Version))
  result = call_614615.call(nil, query_614616, nil, formData_614617, nil)

var postListImports* = Call_PostListImports_614600(name: "postListImports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_PostListImports_614601,
    base: "/", url: url_PostListImports_614602, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListImports_614583 = ref object of OpenApiRestCall_612658
proc url_GetListImports_614585(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListImports_614584(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614586 = query.getOrDefault("NextToken")
  valid_614586 = validateParameter(valid_614586, JString, required = false,
                                 default = nil)
  if valid_614586 != nil:
    section.add "NextToken", valid_614586
  assert query != nil,
        "query argument is necessary due to required `ExportName` field"
  var valid_614587 = query.getOrDefault("ExportName")
  valid_614587 = validateParameter(valid_614587, JString, required = true,
                                 default = nil)
  if valid_614587 != nil:
    section.add "ExportName", valid_614587
  var valid_614588 = query.getOrDefault("Action")
  valid_614588 = validateParameter(valid_614588, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_614588 != nil:
    section.add "Action", valid_614588
  var valid_614589 = query.getOrDefault("Version")
  valid_614589 = validateParameter(valid_614589, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614589 != nil:
    section.add "Version", valid_614589
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614590 = header.getOrDefault("X-Amz-Signature")
  valid_614590 = validateParameter(valid_614590, JString, required = false,
                                 default = nil)
  if valid_614590 != nil:
    section.add "X-Amz-Signature", valid_614590
  var valid_614591 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614591 = validateParameter(valid_614591, JString, required = false,
                                 default = nil)
  if valid_614591 != nil:
    section.add "X-Amz-Content-Sha256", valid_614591
  var valid_614592 = header.getOrDefault("X-Amz-Date")
  valid_614592 = validateParameter(valid_614592, JString, required = false,
                                 default = nil)
  if valid_614592 != nil:
    section.add "X-Amz-Date", valid_614592
  var valid_614593 = header.getOrDefault("X-Amz-Credential")
  valid_614593 = validateParameter(valid_614593, JString, required = false,
                                 default = nil)
  if valid_614593 != nil:
    section.add "X-Amz-Credential", valid_614593
  var valid_614594 = header.getOrDefault("X-Amz-Security-Token")
  valid_614594 = validateParameter(valid_614594, JString, required = false,
                                 default = nil)
  if valid_614594 != nil:
    section.add "X-Amz-Security-Token", valid_614594
  var valid_614595 = header.getOrDefault("X-Amz-Algorithm")
  valid_614595 = validateParameter(valid_614595, JString, required = false,
                                 default = nil)
  if valid_614595 != nil:
    section.add "X-Amz-Algorithm", valid_614595
  var valid_614596 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614596 = validateParameter(valid_614596, JString, required = false,
                                 default = nil)
  if valid_614596 != nil:
    section.add "X-Amz-SignedHeaders", valid_614596
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614597: Call_GetListImports_614583; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_614597.validator(path, query, header, formData, body)
  let scheme = call_614597.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614597.url(scheme.get, call_614597.host, call_614597.base,
                         call_614597.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614597, url, valid)

proc call*(call_614598: Call_GetListImports_614583; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## getListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614599 = newJObject()
  add(query_614599, "NextToken", newJString(NextToken))
  add(query_614599, "ExportName", newJString(ExportName))
  add(query_614599, "Action", newJString(Action))
  add(query_614599, "Version", newJString(Version))
  result = call_614598.call(nil, query_614599, nil, nil, nil)

var getListImports* = Call_GetListImports_614583(name: "getListImports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_GetListImports_614584,
    base: "/", url: url_GetListImports_614585, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackInstances_614638 = ref object of OpenApiRestCall_612658
proc url_PostListStackInstances_614640(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackInstances_614639(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614641 = query.getOrDefault("Action")
  valid_614641 = validateParameter(valid_614641, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_614641 != nil:
    section.add "Action", valid_614641
  var valid_614642 = query.getOrDefault("Version")
  valid_614642 = validateParameter(valid_614642, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614642 != nil:
    section.add "Version", valid_614642
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614643 = header.getOrDefault("X-Amz-Signature")
  valid_614643 = validateParameter(valid_614643, JString, required = false,
                                 default = nil)
  if valid_614643 != nil:
    section.add "X-Amz-Signature", valid_614643
  var valid_614644 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614644 = validateParameter(valid_614644, JString, required = false,
                                 default = nil)
  if valid_614644 != nil:
    section.add "X-Amz-Content-Sha256", valid_614644
  var valid_614645 = header.getOrDefault("X-Amz-Date")
  valid_614645 = validateParameter(valid_614645, JString, required = false,
                                 default = nil)
  if valid_614645 != nil:
    section.add "X-Amz-Date", valid_614645
  var valid_614646 = header.getOrDefault("X-Amz-Credential")
  valid_614646 = validateParameter(valid_614646, JString, required = false,
                                 default = nil)
  if valid_614646 != nil:
    section.add "X-Amz-Credential", valid_614646
  var valid_614647 = header.getOrDefault("X-Amz-Security-Token")
  valid_614647 = validateParameter(valid_614647, JString, required = false,
                                 default = nil)
  if valid_614647 != nil:
    section.add "X-Amz-Security-Token", valid_614647
  var valid_614648 = header.getOrDefault("X-Amz-Algorithm")
  valid_614648 = validateParameter(valid_614648, JString, required = false,
                                 default = nil)
  if valid_614648 != nil:
    section.add "X-Amz-Algorithm", valid_614648
  var valid_614649 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614649 = validateParameter(valid_614649, JString, required = false,
                                 default = nil)
  if valid_614649 != nil:
    section.add "X-Amz-SignedHeaders", valid_614649
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_614650 = formData.getOrDefault("StackInstanceRegion")
  valid_614650 = validateParameter(valid_614650, JString, required = false,
                                 default = nil)
  if valid_614650 != nil:
    section.add "StackInstanceRegion", valid_614650
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_614651 = formData.getOrDefault("StackSetName")
  valid_614651 = validateParameter(valid_614651, JString, required = true,
                                 default = nil)
  if valid_614651 != nil:
    section.add "StackSetName", valid_614651
  var valid_614652 = formData.getOrDefault("StackInstanceAccount")
  valid_614652 = validateParameter(valid_614652, JString, required = false,
                                 default = nil)
  if valid_614652 != nil:
    section.add "StackInstanceAccount", valid_614652
  var valid_614653 = formData.getOrDefault("NextToken")
  valid_614653 = validateParameter(valid_614653, JString, required = false,
                                 default = nil)
  if valid_614653 != nil:
    section.add "NextToken", valid_614653
  var valid_614654 = formData.getOrDefault("MaxResults")
  valid_614654 = validateParameter(valid_614654, JInt, required = false, default = nil)
  if valid_614654 != nil:
    section.add "MaxResults", valid_614654
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614655: Call_PostListStackInstances_614638; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_614655.validator(path, query, header, formData, body)
  let scheme = call_614655.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614655.url(scheme.get, call_614655.host, call_614655.base,
                         call_614655.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614655, url, valid)

proc call*(call_614656: Call_PostListStackInstances_614638; StackSetName: string;
          StackInstanceRegion: string = ""; StackInstanceAccount: string = "";
          NextToken: string = ""; Action: string = "ListStackInstances";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_614657 = newJObject()
  var formData_614658 = newJObject()
  add(formData_614658, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_614658, "StackSetName", newJString(StackSetName))
  add(formData_614658, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(formData_614658, "NextToken", newJString(NextToken))
  add(query_614657, "Action", newJString(Action))
  add(query_614657, "Version", newJString(Version))
  add(formData_614658, "MaxResults", newJInt(MaxResults))
  result = call_614656.call(nil, query_614657, nil, formData_614658, nil)

var postListStackInstances* = Call_PostListStackInstances_614638(
    name: "postListStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_PostListStackInstances_614639, base: "/",
    url: url_PostListStackInstances_614640, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackInstances_614618 = ref object of OpenApiRestCall_612658
proc url_GetListStackInstances_614620(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackInstances_614619(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_614621 = query.getOrDefault("StackSetName")
  valid_614621 = validateParameter(valid_614621, JString, required = true,
                                 default = nil)
  if valid_614621 != nil:
    section.add "StackSetName", valid_614621
  var valid_614622 = query.getOrDefault("MaxResults")
  valid_614622 = validateParameter(valid_614622, JInt, required = false, default = nil)
  if valid_614622 != nil:
    section.add "MaxResults", valid_614622
  var valid_614623 = query.getOrDefault("StackInstanceRegion")
  valid_614623 = validateParameter(valid_614623, JString, required = false,
                                 default = nil)
  if valid_614623 != nil:
    section.add "StackInstanceRegion", valid_614623
  var valid_614624 = query.getOrDefault("StackInstanceAccount")
  valid_614624 = validateParameter(valid_614624, JString, required = false,
                                 default = nil)
  if valid_614624 != nil:
    section.add "StackInstanceAccount", valid_614624
  var valid_614625 = query.getOrDefault("NextToken")
  valid_614625 = validateParameter(valid_614625, JString, required = false,
                                 default = nil)
  if valid_614625 != nil:
    section.add "NextToken", valid_614625
  var valid_614626 = query.getOrDefault("Action")
  valid_614626 = validateParameter(valid_614626, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_614626 != nil:
    section.add "Action", valid_614626
  var valid_614627 = query.getOrDefault("Version")
  valid_614627 = validateParameter(valid_614627, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614627 != nil:
    section.add "Version", valid_614627
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614628 = header.getOrDefault("X-Amz-Signature")
  valid_614628 = validateParameter(valid_614628, JString, required = false,
                                 default = nil)
  if valid_614628 != nil:
    section.add "X-Amz-Signature", valid_614628
  var valid_614629 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614629 = validateParameter(valid_614629, JString, required = false,
                                 default = nil)
  if valid_614629 != nil:
    section.add "X-Amz-Content-Sha256", valid_614629
  var valid_614630 = header.getOrDefault("X-Amz-Date")
  valid_614630 = validateParameter(valid_614630, JString, required = false,
                                 default = nil)
  if valid_614630 != nil:
    section.add "X-Amz-Date", valid_614630
  var valid_614631 = header.getOrDefault("X-Amz-Credential")
  valid_614631 = validateParameter(valid_614631, JString, required = false,
                                 default = nil)
  if valid_614631 != nil:
    section.add "X-Amz-Credential", valid_614631
  var valid_614632 = header.getOrDefault("X-Amz-Security-Token")
  valid_614632 = validateParameter(valid_614632, JString, required = false,
                                 default = nil)
  if valid_614632 != nil:
    section.add "X-Amz-Security-Token", valid_614632
  var valid_614633 = header.getOrDefault("X-Amz-Algorithm")
  valid_614633 = validateParameter(valid_614633, JString, required = false,
                                 default = nil)
  if valid_614633 != nil:
    section.add "X-Amz-Algorithm", valid_614633
  var valid_614634 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614634 = validateParameter(valid_614634, JString, required = false,
                                 default = nil)
  if valid_614634 != nil:
    section.add "X-Amz-SignedHeaders", valid_614634
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614635: Call_GetListStackInstances_614618; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_614635.validator(path, query, header, formData, body)
  let scheme = call_614635.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614635.url(scheme.get, call_614635.host, call_614635.base,
                         call_614635.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614635, url, valid)

proc call*(call_614636: Call_GetListStackInstances_614618; StackSetName: string;
          MaxResults: int = 0; StackInstanceRegion: string = "";
          StackInstanceAccount: string = ""; NextToken: string = "";
          Action: string = "ListStackInstances"; Version: string = "2010-05-15"): Recallable =
  ## getListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614637 = newJObject()
  add(query_614637, "StackSetName", newJString(StackSetName))
  add(query_614637, "MaxResults", newJInt(MaxResults))
  add(query_614637, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_614637, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_614637, "NextToken", newJString(NextToken))
  add(query_614637, "Action", newJString(Action))
  add(query_614637, "Version", newJString(Version))
  result = call_614636.call(nil, query_614637, nil, nil, nil)

var getListStackInstances* = Call_GetListStackInstances_614618(
    name: "getListStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_GetListStackInstances_614619, base: "/",
    url: url_GetListStackInstances_614620, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackResources_614676 = ref object of OpenApiRestCall_612658
proc url_PostListStackResources_614678(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackResources_614677(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614679 = query.getOrDefault("Action")
  valid_614679 = validateParameter(valid_614679, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_614679 != nil:
    section.add "Action", valid_614679
  var valid_614680 = query.getOrDefault("Version")
  valid_614680 = validateParameter(valid_614680, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614680 != nil:
    section.add "Version", valid_614680
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614681 = header.getOrDefault("X-Amz-Signature")
  valid_614681 = validateParameter(valid_614681, JString, required = false,
                                 default = nil)
  if valid_614681 != nil:
    section.add "X-Amz-Signature", valid_614681
  var valid_614682 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614682 = validateParameter(valid_614682, JString, required = false,
                                 default = nil)
  if valid_614682 != nil:
    section.add "X-Amz-Content-Sha256", valid_614682
  var valid_614683 = header.getOrDefault("X-Amz-Date")
  valid_614683 = validateParameter(valid_614683, JString, required = false,
                                 default = nil)
  if valid_614683 != nil:
    section.add "X-Amz-Date", valid_614683
  var valid_614684 = header.getOrDefault("X-Amz-Credential")
  valid_614684 = validateParameter(valid_614684, JString, required = false,
                                 default = nil)
  if valid_614684 != nil:
    section.add "X-Amz-Credential", valid_614684
  var valid_614685 = header.getOrDefault("X-Amz-Security-Token")
  valid_614685 = validateParameter(valid_614685, JString, required = false,
                                 default = nil)
  if valid_614685 != nil:
    section.add "X-Amz-Security-Token", valid_614685
  var valid_614686 = header.getOrDefault("X-Amz-Algorithm")
  valid_614686 = validateParameter(valid_614686, JString, required = false,
                                 default = nil)
  if valid_614686 != nil:
    section.add "X-Amz-Algorithm", valid_614686
  var valid_614687 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614687 = validateParameter(valid_614687, JString, required = false,
                                 default = nil)
  if valid_614687 != nil:
    section.add "X-Amz-SignedHeaders", valid_614687
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_614688 = formData.getOrDefault("StackName")
  valid_614688 = validateParameter(valid_614688, JString, required = true,
                                 default = nil)
  if valid_614688 != nil:
    section.add "StackName", valid_614688
  var valid_614689 = formData.getOrDefault("NextToken")
  valid_614689 = validateParameter(valid_614689, JString, required = false,
                                 default = nil)
  if valid_614689 != nil:
    section.add "NextToken", valid_614689
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614690: Call_PostListStackResources_614676; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_614690.validator(path, query, header, formData, body)
  let scheme = call_614690.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614690.url(scheme.get, call_614690.host, call_614690.base,
                         call_614690.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614690, url, valid)

proc call*(call_614691: Call_PostListStackResources_614676; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## postListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614692 = newJObject()
  var formData_614693 = newJObject()
  add(formData_614693, "StackName", newJString(StackName))
  add(formData_614693, "NextToken", newJString(NextToken))
  add(query_614692, "Action", newJString(Action))
  add(query_614692, "Version", newJString(Version))
  result = call_614691.call(nil, query_614692, nil, formData_614693, nil)

var postListStackResources* = Call_PostListStackResources_614676(
    name: "postListStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_PostListStackResources_614677, base: "/",
    url: url_PostListStackResources_614678, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackResources_614659 = ref object of OpenApiRestCall_612658
proc url_GetListStackResources_614661(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackResources_614660(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614662 = query.getOrDefault("NextToken")
  valid_614662 = validateParameter(valid_614662, JString, required = false,
                                 default = nil)
  if valid_614662 != nil:
    section.add "NextToken", valid_614662
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_614663 = query.getOrDefault("StackName")
  valid_614663 = validateParameter(valid_614663, JString, required = true,
                                 default = nil)
  if valid_614663 != nil:
    section.add "StackName", valid_614663
  var valid_614664 = query.getOrDefault("Action")
  valid_614664 = validateParameter(valid_614664, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_614664 != nil:
    section.add "Action", valid_614664
  var valid_614665 = query.getOrDefault("Version")
  valid_614665 = validateParameter(valid_614665, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614665 != nil:
    section.add "Version", valid_614665
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614666 = header.getOrDefault("X-Amz-Signature")
  valid_614666 = validateParameter(valid_614666, JString, required = false,
                                 default = nil)
  if valid_614666 != nil:
    section.add "X-Amz-Signature", valid_614666
  var valid_614667 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614667 = validateParameter(valid_614667, JString, required = false,
                                 default = nil)
  if valid_614667 != nil:
    section.add "X-Amz-Content-Sha256", valid_614667
  var valid_614668 = header.getOrDefault("X-Amz-Date")
  valid_614668 = validateParameter(valid_614668, JString, required = false,
                                 default = nil)
  if valid_614668 != nil:
    section.add "X-Amz-Date", valid_614668
  var valid_614669 = header.getOrDefault("X-Amz-Credential")
  valid_614669 = validateParameter(valid_614669, JString, required = false,
                                 default = nil)
  if valid_614669 != nil:
    section.add "X-Amz-Credential", valid_614669
  var valid_614670 = header.getOrDefault("X-Amz-Security-Token")
  valid_614670 = validateParameter(valid_614670, JString, required = false,
                                 default = nil)
  if valid_614670 != nil:
    section.add "X-Amz-Security-Token", valid_614670
  var valid_614671 = header.getOrDefault("X-Amz-Algorithm")
  valid_614671 = validateParameter(valid_614671, JString, required = false,
                                 default = nil)
  if valid_614671 != nil:
    section.add "X-Amz-Algorithm", valid_614671
  var valid_614672 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614672 = validateParameter(valid_614672, JString, required = false,
                                 default = nil)
  if valid_614672 != nil:
    section.add "X-Amz-SignedHeaders", valid_614672
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614673: Call_GetListStackResources_614659; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_614673.validator(path, query, header, formData, body)
  let scheme = call_614673.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614673.url(scheme.get, call_614673.host, call_614673.base,
                         call_614673.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614673, url, valid)

proc call*(call_614674: Call_GetListStackResources_614659; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614675 = newJObject()
  add(query_614675, "NextToken", newJString(NextToken))
  add(query_614675, "StackName", newJString(StackName))
  add(query_614675, "Action", newJString(Action))
  add(query_614675, "Version", newJString(Version))
  result = call_614674.call(nil, query_614675, nil, nil, nil)

var getListStackResources* = Call_GetListStackResources_614659(
    name: "getListStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_GetListStackResources_614660, base: "/",
    url: url_GetListStackResources_614661, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperationResults_614713 = ref object of OpenApiRestCall_612658
proc url_PostListStackSetOperationResults_614715(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperationResults_614714(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614716 = query.getOrDefault("Action")
  valid_614716 = validateParameter(valid_614716, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_614716 != nil:
    section.add "Action", valid_614716
  var valid_614717 = query.getOrDefault("Version")
  valid_614717 = validateParameter(valid_614717, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614717 != nil:
    section.add "Version", valid_614717
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614718 = header.getOrDefault("X-Amz-Signature")
  valid_614718 = validateParameter(valid_614718, JString, required = false,
                                 default = nil)
  if valid_614718 != nil:
    section.add "X-Amz-Signature", valid_614718
  var valid_614719 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614719 = validateParameter(valid_614719, JString, required = false,
                                 default = nil)
  if valid_614719 != nil:
    section.add "X-Amz-Content-Sha256", valid_614719
  var valid_614720 = header.getOrDefault("X-Amz-Date")
  valid_614720 = validateParameter(valid_614720, JString, required = false,
                                 default = nil)
  if valid_614720 != nil:
    section.add "X-Amz-Date", valid_614720
  var valid_614721 = header.getOrDefault("X-Amz-Credential")
  valid_614721 = validateParameter(valid_614721, JString, required = false,
                                 default = nil)
  if valid_614721 != nil:
    section.add "X-Amz-Credential", valid_614721
  var valid_614722 = header.getOrDefault("X-Amz-Security-Token")
  valid_614722 = validateParameter(valid_614722, JString, required = false,
                                 default = nil)
  if valid_614722 != nil:
    section.add "X-Amz-Security-Token", valid_614722
  var valid_614723 = header.getOrDefault("X-Amz-Algorithm")
  valid_614723 = validateParameter(valid_614723, JString, required = false,
                                 default = nil)
  if valid_614723 != nil:
    section.add "X-Amz-Algorithm", valid_614723
  var valid_614724 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614724 = validateParameter(valid_614724, JString, required = false,
                                 default = nil)
  if valid_614724 != nil:
    section.add "X-Amz-SignedHeaders", valid_614724
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_614725 = formData.getOrDefault("OperationId")
  valid_614725 = validateParameter(valid_614725, JString, required = true,
                                 default = nil)
  if valid_614725 != nil:
    section.add "OperationId", valid_614725
  var valid_614726 = formData.getOrDefault("StackSetName")
  valid_614726 = validateParameter(valid_614726, JString, required = true,
                                 default = nil)
  if valid_614726 != nil:
    section.add "StackSetName", valid_614726
  var valid_614727 = formData.getOrDefault("NextToken")
  valid_614727 = validateParameter(valid_614727, JString, required = false,
                                 default = nil)
  if valid_614727 != nil:
    section.add "NextToken", valid_614727
  var valid_614728 = formData.getOrDefault("MaxResults")
  valid_614728 = validateParameter(valid_614728, JInt, required = false, default = nil)
  if valid_614728 != nil:
    section.add "MaxResults", valid_614728
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614729: Call_PostListStackSetOperationResults_614713;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_614729.validator(path, query, header, formData, body)
  let scheme = call_614729.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614729.url(scheme.get, call_614729.host, call_614729.base,
                         call_614729.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614729, url, valid)

proc call*(call_614730: Call_PostListStackSetOperationResults_614713;
          OperationId: string; StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_614731 = newJObject()
  var formData_614732 = newJObject()
  add(formData_614732, "OperationId", newJString(OperationId))
  add(formData_614732, "StackSetName", newJString(StackSetName))
  add(formData_614732, "NextToken", newJString(NextToken))
  add(query_614731, "Action", newJString(Action))
  add(query_614731, "Version", newJString(Version))
  add(formData_614732, "MaxResults", newJInt(MaxResults))
  result = call_614730.call(nil, query_614731, nil, formData_614732, nil)

var postListStackSetOperationResults* = Call_PostListStackSetOperationResults_614713(
    name: "postListStackSetOperationResults", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_PostListStackSetOperationResults_614714, base: "/",
    url: url_PostListStackSetOperationResults_614715,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperationResults_614694 = ref object of OpenApiRestCall_612658
proc url_GetListStackSetOperationResults_614696(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperationResults_614695(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_614697 = query.getOrDefault("OperationId")
  valid_614697 = validateParameter(valid_614697, JString, required = true,
                                 default = nil)
  if valid_614697 != nil:
    section.add "OperationId", valid_614697
  var valid_614698 = query.getOrDefault("StackSetName")
  valid_614698 = validateParameter(valid_614698, JString, required = true,
                                 default = nil)
  if valid_614698 != nil:
    section.add "StackSetName", valid_614698
  var valid_614699 = query.getOrDefault("MaxResults")
  valid_614699 = validateParameter(valid_614699, JInt, required = false, default = nil)
  if valid_614699 != nil:
    section.add "MaxResults", valid_614699
  var valid_614700 = query.getOrDefault("NextToken")
  valid_614700 = validateParameter(valid_614700, JString, required = false,
                                 default = nil)
  if valid_614700 != nil:
    section.add "NextToken", valid_614700
  var valid_614701 = query.getOrDefault("Action")
  valid_614701 = validateParameter(valid_614701, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_614701 != nil:
    section.add "Action", valid_614701
  var valid_614702 = query.getOrDefault("Version")
  valid_614702 = validateParameter(valid_614702, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614702 != nil:
    section.add "Version", valid_614702
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614703 = header.getOrDefault("X-Amz-Signature")
  valid_614703 = validateParameter(valid_614703, JString, required = false,
                                 default = nil)
  if valid_614703 != nil:
    section.add "X-Amz-Signature", valid_614703
  var valid_614704 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614704 = validateParameter(valid_614704, JString, required = false,
                                 default = nil)
  if valid_614704 != nil:
    section.add "X-Amz-Content-Sha256", valid_614704
  var valid_614705 = header.getOrDefault("X-Amz-Date")
  valid_614705 = validateParameter(valid_614705, JString, required = false,
                                 default = nil)
  if valid_614705 != nil:
    section.add "X-Amz-Date", valid_614705
  var valid_614706 = header.getOrDefault("X-Amz-Credential")
  valid_614706 = validateParameter(valid_614706, JString, required = false,
                                 default = nil)
  if valid_614706 != nil:
    section.add "X-Amz-Credential", valid_614706
  var valid_614707 = header.getOrDefault("X-Amz-Security-Token")
  valid_614707 = validateParameter(valid_614707, JString, required = false,
                                 default = nil)
  if valid_614707 != nil:
    section.add "X-Amz-Security-Token", valid_614707
  var valid_614708 = header.getOrDefault("X-Amz-Algorithm")
  valid_614708 = validateParameter(valid_614708, JString, required = false,
                                 default = nil)
  if valid_614708 != nil:
    section.add "X-Amz-Algorithm", valid_614708
  var valid_614709 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614709 = validateParameter(valid_614709, JString, required = false,
                                 default = nil)
  if valid_614709 != nil:
    section.add "X-Amz-SignedHeaders", valid_614709
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614710: Call_GetListStackSetOperationResults_614694;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_614710.validator(path, query, header, formData, body)
  let scheme = call_614710.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614710.url(scheme.get, call_614710.host, call_614710.base,
                         call_614710.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614710, url, valid)

proc call*(call_614711: Call_GetListStackSetOperationResults_614694;
          OperationId: string; StackSetName: string; MaxResults: int = 0;
          NextToken: string = ""; Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614712 = newJObject()
  add(query_614712, "OperationId", newJString(OperationId))
  add(query_614712, "StackSetName", newJString(StackSetName))
  add(query_614712, "MaxResults", newJInt(MaxResults))
  add(query_614712, "NextToken", newJString(NextToken))
  add(query_614712, "Action", newJString(Action))
  add(query_614712, "Version", newJString(Version))
  result = call_614711.call(nil, query_614712, nil, nil, nil)

var getListStackSetOperationResults* = Call_GetListStackSetOperationResults_614694(
    name: "getListStackSetOperationResults", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_GetListStackSetOperationResults_614695, base: "/",
    url: url_GetListStackSetOperationResults_614696,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperations_614751 = ref object of OpenApiRestCall_612658
proc url_PostListStackSetOperations_614753(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperations_614752(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614754 = query.getOrDefault("Action")
  valid_614754 = validateParameter(valid_614754, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_614754 != nil:
    section.add "Action", valid_614754
  var valid_614755 = query.getOrDefault("Version")
  valid_614755 = validateParameter(valid_614755, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614755 != nil:
    section.add "Version", valid_614755
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614756 = header.getOrDefault("X-Amz-Signature")
  valid_614756 = validateParameter(valid_614756, JString, required = false,
                                 default = nil)
  if valid_614756 != nil:
    section.add "X-Amz-Signature", valid_614756
  var valid_614757 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614757 = validateParameter(valid_614757, JString, required = false,
                                 default = nil)
  if valid_614757 != nil:
    section.add "X-Amz-Content-Sha256", valid_614757
  var valid_614758 = header.getOrDefault("X-Amz-Date")
  valid_614758 = validateParameter(valid_614758, JString, required = false,
                                 default = nil)
  if valid_614758 != nil:
    section.add "X-Amz-Date", valid_614758
  var valid_614759 = header.getOrDefault("X-Amz-Credential")
  valid_614759 = validateParameter(valid_614759, JString, required = false,
                                 default = nil)
  if valid_614759 != nil:
    section.add "X-Amz-Credential", valid_614759
  var valid_614760 = header.getOrDefault("X-Amz-Security-Token")
  valid_614760 = validateParameter(valid_614760, JString, required = false,
                                 default = nil)
  if valid_614760 != nil:
    section.add "X-Amz-Security-Token", valid_614760
  var valid_614761 = header.getOrDefault("X-Amz-Algorithm")
  valid_614761 = validateParameter(valid_614761, JString, required = false,
                                 default = nil)
  if valid_614761 != nil:
    section.add "X-Amz-Algorithm", valid_614761
  var valid_614762 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614762 = validateParameter(valid_614762, JString, required = false,
                                 default = nil)
  if valid_614762 != nil:
    section.add "X-Amz-SignedHeaders", valid_614762
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_614763 = formData.getOrDefault("StackSetName")
  valid_614763 = validateParameter(valid_614763, JString, required = true,
                                 default = nil)
  if valid_614763 != nil:
    section.add "StackSetName", valid_614763
  var valid_614764 = formData.getOrDefault("NextToken")
  valid_614764 = validateParameter(valid_614764, JString, required = false,
                                 default = nil)
  if valid_614764 != nil:
    section.add "NextToken", valid_614764
  var valid_614765 = formData.getOrDefault("MaxResults")
  valid_614765 = validateParameter(valid_614765, JInt, required = false, default = nil)
  if valid_614765 != nil:
    section.add "MaxResults", valid_614765
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614766: Call_PostListStackSetOperations_614751; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_614766.validator(path, query, header, formData, body)
  let scheme = call_614766.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614766.url(scheme.get, call_614766.host, call_614766.base,
                         call_614766.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614766, url, valid)

proc call*(call_614767: Call_PostListStackSetOperations_614751;
          StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_614768 = newJObject()
  var formData_614769 = newJObject()
  add(formData_614769, "StackSetName", newJString(StackSetName))
  add(formData_614769, "NextToken", newJString(NextToken))
  add(query_614768, "Action", newJString(Action))
  add(query_614768, "Version", newJString(Version))
  add(formData_614769, "MaxResults", newJInt(MaxResults))
  result = call_614767.call(nil, query_614768, nil, formData_614769, nil)

var postListStackSetOperations* = Call_PostListStackSetOperations_614751(
    name: "postListStackSetOperations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_PostListStackSetOperations_614752, base: "/",
    url: url_PostListStackSetOperations_614753,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperations_614733 = ref object of OpenApiRestCall_612658
proc url_GetListStackSetOperations_614735(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperations_614734(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_614736 = query.getOrDefault("StackSetName")
  valid_614736 = validateParameter(valid_614736, JString, required = true,
                                 default = nil)
  if valid_614736 != nil:
    section.add "StackSetName", valid_614736
  var valid_614737 = query.getOrDefault("MaxResults")
  valid_614737 = validateParameter(valid_614737, JInt, required = false, default = nil)
  if valid_614737 != nil:
    section.add "MaxResults", valid_614737
  var valid_614738 = query.getOrDefault("NextToken")
  valid_614738 = validateParameter(valid_614738, JString, required = false,
                                 default = nil)
  if valid_614738 != nil:
    section.add "NextToken", valid_614738
  var valid_614739 = query.getOrDefault("Action")
  valid_614739 = validateParameter(valid_614739, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_614739 != nil:
    section.add "Action", valid_614739
  var valid_614740 = query.getOrDefault("Version")
  valid_614740 = validateParameter(valid_614740, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614740 != nil:
    section.add "Version", valid_614740
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614741 = header.getOrDefault("X-Amz-Signature")
  valid_614741 = validateParameter(valid_614741, JString, required = false,
                                 default = nil)
  if valid_614741 != nil:
    section.add "X-Amz-Signature", valid_614741
  var valid_614742 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614742 = validateParameter(valid_614742, JString, required = false,
                                 default = nil)
  if valid_614742 != nil:
    section.add "X-Amz-Content-Sha256", valid_614742
  var valid_614743 = header.getOrDefault("X-Amz-Date")
  valid_614743 = validateParameter(valid_614743, JString, required = false,
                                 default = nil)
  if valid_614743 != nil:
    section.add "X-Amz-Date", valid_614743
  var valid_614744 = header.getOrDefault("X-Amz-Credential")
  valid_614744 = validateParameter(valid_614744, JString, required = false,
                                 default = nil)
  if valid_614744 != nil:
    section.add "X-Amz-Credential", valid_614744
  var valid_614745 = header.getOrDefault("X-Amz-Security-Token")
  valid_614745 = validateParameter(valid_614745, JString, required = false,
                                 default = nil)
  if valid_614745 != nil:
    section.add "X-Amz-Security-Token", valid_614745
  var valid_614746 = header.getOrDefault("X-Amz-Algorithm")
  valid_614746 = validateParameter(valid_614746, JString, required = false,
                                 default = nil)
  if valid_614746 != nil:
    section.add "X-Amz-Algorithm", valid_614746
  var valid_614747 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614747 = validateParameter(valid_614747, JString, required = false,
                                 default = nil)
  if valid_614747 != nil:
    section.add "X-Amz-SignedHeaders", valid_614747
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614748: Call_GetListStackSetOperations_614733; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_614748.validator(path, query, header, formData, body)
  let scheme = call_614748.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614748.url(scheme.get, call_614748.host, call_614748.base,
                         call_614748.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614748, url, valid)

proc call*(call_614749: Call_GetListStackSetOperations_614733;
          StackSetName: string; MaxResults: int = 0; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15"): Recallable =
  ## getListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614750 = newJObject()
  add(query_614750, "StackSetName", newJString(StackSetName))
  add(query_614750, "MaxResults", newJInt(MaxResults))
  add(query_614750, "NextToken", newJString(NextToken))
  add(query_614750, "Action", newJString(Action))
  add(query_614750, "Version", newJString(Version))
  result = call_614749.call(nil, query_614750, nil, nil, nil)

var getListStackSetOperations* = Call_GetListStackSetOperations_614733(
    name: "getListStackSetOperations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_GetListStackSetOperations_614734, base: "/",
    url: url_GetListStackSetOperations_614735,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSets_614788 = ref object of OpenApiRestCall_612658
proc url_PostListStackSets_614790(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSets_614789(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614791 = query.getOrDefault("Action")
  valid_614791 = validateParameter(valid_614791, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_614791 != nil:
    section.add "Action", valid_614791
  var valid_614792 = query.getOrDefault("Version")
  valid_614792 = validateParameter(valid_614792, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614792 != nil:
    section.add "Version", valid_614792
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614793 = header.getOrDefault("X-Amz-Signature")
  valid_614793 = validateParameter(valid_614793, JString, required = false,
                                 default = nil)
  if valid_614793 != nil:
    section.add "X-Amz-Signature", valid_614793
  var valid_614794 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614794 = validateParameter(valid_614794, JString, required = false,
                                 default = nil)
  if valid_614794 != nil:
    section.add "X-Amz-Content-Sha256", valid_614794
  var valid_614795 = header.getOrDefault("X-Amz-Date")
  valid_614795 = validateParameter(valid_614795, JString, required = false,
                                 default = nil)
  if valid_614795 != nil:
    section.add "X-Amz-Date", valid_614795
  var valid_614796 = header.getOrDefault("X-Amz-Credential")
  valid_614796 = validateParameter(valid_614796, JString, required = false,
                                 default = nil)
  if valid_614796 != nil:
    section.add "X-Amz-Credential", valid_614796
  var valid_614797 = header.getOrDefault("X-Amz-Security-Token")
  valid_614797 = validateParameter(valid_614797, JString, required = false,
                                 default = nil)
  if valid_614797 != nil:
    section.add "X-Amz-Security-Token", valid_614797
  var valid_614798 = header.getOrDefault("X-Amz-Algorithm")
  valid_614798 = validateParameter(valid_614798, JString, required = false,
                                 default = nil)
  if valid_614798 != nil:
    section.add "X-Amz-Algorithm", valid_614798
  var valid_614799 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614799 = validateParameter(valid_614799, JString, required = false,
                                 default = nil)
  if valid_614799 != nil:
    section.add "X-Amz-SignedHeaders", valid_614799
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_614800 = formData.getOrDefault("NextToken")
  valid_614800 = validateParameter(valid_614800, JString, required = false,
                                 default = nil)
  if valid_614800 != nil:
    section.add "NextToken", valid_614800
  var valid_614801 = formData.getOrDefault("Status")
  valid_614801 = validateParameter(valid_614801, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_614801 != nil:
    section.add "Status", valid_614801
  var valid_614802 = formData.getOrDefault("MaxResults")
  valid_614802 = validateParameter(valid_614802, JInt, required = false, default = nil)
  if valid_614802 != nil:
    section.add "MaxResults", valid_614802
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614803: Call_PostListStackSets_614788; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_614803.validator(path, query, header, formData, body)
  let scheme = call_614803.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614803.url(scheme.get, call_614803.host, call_614803.base,
                         call_614803.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614803, url, valid)

proc call*(call_614804: Call_PostListStackSets_614788; NextToken: string = "";
          Action: string = "ListStackSets"; Status: string = "ACTIVE";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_614805 = newJObject()
  var formData_614806 = newJObject()
  add(formData_614806, "NextToken", newJString(NextToken))
  add(query_614805, "Action", newJString(Action))
  add(formData_614806, "Status", newJString(Status))
  add(query_614805, "Version", newJString(Version))
  add(formData_614806, "MaxResults", newJInt(MaxResults))
  result = call_614804.call(nil, query_614805, nil, formData_614806, nil)

var postListStackSets* = Call_PostListStackSets_614788(name: "postListStackSets",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_PostListStackSets_614789,
    base: "/", url: url_PostListStackSets_614790,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSets_614770 = ref object of OpenApiRestCall_612658
proc url_GetListStackSets_614772(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSets_614771(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614773 = query.getOrDefault("MaxResults")
  valid_614773 = validateParameter(valid_614773, JInt, required = false, default = nil)
  if valid_614773 != nil:
    section.add "MaxResults", valid_614773
  var valid_614774 = query.getOrDefault("Status")
  valid_614774 = validateParameter(valid_614774, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_614774 != nil:
    section.add "Status", valid_614774
  var valid_614775 = query.getOrDefault("NextToken")
  valid_614775 = validateParameter(valid_614775, JString, required = false,
                                 default = nil)
  if valid_614775 != nil:
    section.add "NextToken", valid_614775
  var valid_614776 = query.getOrDefault("Action")
  valid_614776 = validateParameter(valid_614776, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_614776 != nil:
    section.add "Action", valid_614776
  var valid_614777 = query.getOrDefault("Version")
  valid_614777 = validateParameter(valid_614777, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614777 != nil:
    section.add "Version", valid_614777
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614778 = header.getOrDefault("X-Amz-Signature")
  valid_614778 = validateParameter(valid_614778, JString, required = false,
                                 default = nil)
  if valid_614778 != nil:
    section.add "X-Amz-Signature", valid_614778
  var valid_614779 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614779 = validateParameter(valid_614779, JString, required = false,
                                 default = nil)
  if valid_614779 != nil:
    section.add "X-Amz-Content-Sha256", valid_614779
  var valid_614780 = header.getOrDefault("X-Amz-Date")
  valid_614780 = validateParameter(valid_614780, JString, required = false,
                                 default = nil)
  if valid_614780 != nil:
    section.add "X-Amz-Date", valid_614780
  var valid_614781 = header.getOrDefault("X-Amz-Credential")
  valid_614781 = validateParameter(valid_614781, JString, required = false,
                                 default = nil)
  if valid_614781 != nil:
    section.add "X-Amz-Credential", valid_614781
  var valid_614782 = header.getOrDefault("X-Amz-Security-Token")
  valid_614782 = validateParameter(valid_614782, JString, required = false,
                                 default = nil)
  if valid_614782 != nil:
    section.add "X-Amz-Security-Token", valid_614782
  var valid_614783 = header.getOrDefault("X-Amz-Algorithm")
  valid_614783 = validateParameter(valid_614783, JString, required = false,
                                 default = nil)
  if valid_614783 != nil:
    section.add "X-Amz-Algorithm", valid_614783
  var valid_614784 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614784 = validateParameter(valid_614784, JString, required = false,
                                 default = nil)
  if valid_614784 != nil:
    section.add "X-Amz-SignedHeaders", valid_614784
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614785: Call_GetListStackSets_614770; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_614785.validator(path, query, header, formData, body)
  let scheme = call_614785.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614785.url(scheme.get, call_614785.host, call_614785.base,
                         call_614785.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614785, url, valid)

proc call*(call_614786: Call_GetListStackSets_614770; MaxResults: int = 0;
          Status: string = "ACTIVE"; NextToken: string = "";
          Action: string = "ListStackSets"; Version: string = "2010-05-15"): Recallable =
  ## getListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614787 = newJObject()
  add(query_614787, "MaxResults", newJInt(MaxResults))
  add(query_614787, "Status", newJString(Status))
  add(query_614787, "NextToken", newJString(NextToken))
  add(query_614787, "Action", newJString(Action))
  add(query_614787, "Version", newJString(Version))
  result = call_614786.call(nil, query_614787, nil, nil, nil)

var getListStackSets* = Call_GetListStackSets_614770(name: "getListStackSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_GetListStackSets_614771,
    base: "/", url: url_GetListStackSets_614772,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStacks_614824 = ref object of OpenApiRestCall_612658
proc url_PostListStacks_614826(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStacks_614825(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614827 = query.getOrDefault("Action")
  valid_614827 = validateParameter(valid_614827, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_614827 != nil:
    section.add "Action", valid_614827
  var valid_614828 = query.getOrDefault("Version")
  valid_614828 = validateParameter(valid_614828, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614828 != nil:
    section.add "Version", valid_614828
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614829 = header.getOrDefault("X-Amz-Signature")
  valid_614829 = validateParameter(valid_614829, JString, required = false,
                                 default = nil)
  if valid_614829 != nil:
    section.add "X-Amz-Signature", valid_614829
  var valid_614830 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614830 = validateParameter(valid_614830, JString, required = false,
                                 default = nil)
  if valid_614830 != nil:
    section.add "X-Amz-Content-Sha256", valid_614830
  var valid_614831 = header.getOrDefault("X-Amz-Date")
  valid_614831 = validateParameter(valid_614831, JString, required = false,
                                 default = nil)
  if valid_614831 != nil:
    section.add "X-Amz-Date", valid_614831
  var valid_614832 = header.getOrDefault("X-Amz-Credential")
  valid_614832 = validateParameter(valid_614832, JString, required = false,
                                 default = nil)
  if valid_614832 != nil:
    section.add "X-Amz-Credential", valid_614832
  var valid_614833 = header.getOrDefault("X-Amz-Security-Token")
  valid_614833 = validateParameter(valid_614833, JString, required = false,
                                 default = nil)
  if valid_614833 != nil:
    section.add "X-Amz-Security-Token", valid_614833
  var valid_614834 = header.getOrDefault("X-Amz-Algorithm")
  valid_614834 = validateParameter(valid_614834, JString, required = false,
                                 default = nil)
  if valid_614834 != nil:
    section.add "X-Amz-Algorithm", valid_614834
  var valid_614835 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614835 = validateParameter(valid_614835, JString, required = false,
                                 default = nil)
  if valid_614835 != nil:
    section.add "X-Amz-SignedHeaders", valid_614835
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  section = newJObject()
  var valid_614836 = formData.getOrDefault("NextToken")
  valid_614836 = validateParameter(valid_614836, JString, required = false,
                                 default = nil)
  if valid_614836 != nil:
    section.add "NextToken", valid_614836
  var valid_614837 = formData.getOrDefault("StackStatusFilter")
  valid_614837 = validateParameter(valid_614837, JArray, required = false,
                                 default = nil)
  if valid_614837 != nil:
    section.add "StackStatusFilter", valid_614837
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614838: Call_PostListStacks_614824; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_614838.validator(path, query, header, formData, body)
  let scheme = call_614838.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614838.url(scheme.get, call_614838.host, call_614838.base,
                         call_614838.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614838, url, valid)

proc call*(call_614839: Call_PostListStacks_614824; NextToken: string = "";
          StackStatusFilter: JsonNode = nil; Action: string = "ListStacks";
          Version: string = "2010-05-15"): Recallable =
  ## postListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614840 = newJObject()
  var formData_614841 = newJObject()
  add(formData_614841, "NextToken", newJString(NextToken))
  if StackStatusFilter != nil:
    formData_614841.add "StackStatusFilter", StackStatusFilter
  add(query_614840, "Action", newJString(Action))
  add(query_614840, "Version", newJString(Version))
  result = call_614839.call(nil, query_614840, nil, formData_614841, nil)

var postListStacks* = Call_PostListStacks_614824(name: "postListStacks",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_PostListStacks_614825,
    base: "/", url: url_PostListStacks_614826, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStacks_614807 = ref object of OpenApiRestCall_612658
proc url_GetListStacks_614809(protocol: Scheme; host: string; base: string;
                             route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStacks_614808(path: JsonNode; query: JsonNode; header: JsonNode;
                                  formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614810 = query.getOrDefault("NextToken")
  valid_614810 = validateParameter(valid_614810, JString, required = false,
                                 default = nil)
  if valid_614810 != nil:
    section.add "NextToken", valid_614810
  var valid_614811 = query.getOrDefault("StackStatusFilter")
  valid_614811 = validateParameter(valid_614811, JArray, required = false,
                                 default = nil)
  if valid_614811 != nil:
    section.add "StackStatusFilter", valid_614811
  var valid_614812 = query.getOrDefault("Action")
  valid_614812 = validateParameter(valid_614812, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_614812 != nil:
    section.add "Action", valid_614812
  var valid_614813 = query.getOrDefault("Version")
  valid_614813 = validateParameter(valid_614813, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614813 != nil:
    section.add "Version", valid_614813
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614814 = header.getOrDefault("X-Amz-Signature")
  valid_614814 = validateParameter(valid_614814, JString, required = false,
                                 default = nil)
  if valid_614814 != nil:
    section.add "X-Amz-Signature", valid_614814
  var valid_614815 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614815 = validateParameter(valid_614815, JString, required = false,
                                 default = nil)
  if valid_614815 != nil:
    section.add "X-Amz-Content-Sha256", valid_614815
  var valid_614816 = header.getOrDefault("X-Amz-Date")
  valid_614816 = validateParameter(valid_614816, JString, required = false,
                                 default = nil)
  if valid_614816 != nil:
    section.add "X-Amz-Date", valid_614816
  var valid_614817 = header.getOrDefault("X-Amz-Credential")
  valid_614817 = validateParameter(valid_614817, JString, required = false,
                                 default = nil)
  if valid_614817 != nil:
    section.add "X-Amz-Credential", valid_614817
  var valid_614818 = header.getOrDefault("X-Amz-Security-Token")
  valid_614818 = validateParameter(valid_614818, JString, required = false,
                                 default = nil)
  if valid_614818 != nil:
    section.add "X-Amz-Security-Token", valid_614818
  var valid_614819 = header.getOrDefault("X-Amz-Algorithm")
  valid_614819 = validateParameter(valid_614819, JString, required = false,
                                 default = nil)
  if valid_614819 != nil:
    section.add "X-Amz-Algorithm", valid_614819
  var valid_614820 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614820 = validateParameter(valid_614820, JString, required = false,
                                 default = nil)
  if valid_614820 != nil:
    section.add "X-Amz-SignedHeaders", valid_614820
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614821: Call_GetListStacks_614807; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_614821.validator(path, query, header, formData, body)
  let scheme = call_614821.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614821.url(scheme.get, call_614821.host, call_614821.base,
                         call_614821.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614821, url, valid)

proc call*(call_614822: Call_GetListStacks_614807; NextToken: string = "";
          StackStatusFilter: JsonNode = nil; Action: string = "ListStacks";
          Version: string = "2010-05-15"): Recallable =
  ## getListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_614823 = newJObject()
  add(query_614823, "NextToken", newJString(NextToken))
  if StackStatusFilter != nil:
    query_614823.add "StackStatusFilter", StackStatusFilter
  add(query_614823, "Action", newJString(Action))
  add(query_614823, "Version", newJString(Version))
  result = call_614822.call(nil, query_614823, nil, nil, nil)

var getListStacks* = Call_GetListStacks_614807(name: "getListStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_GetListStacks_614808,
    base: "/", url: url_GetListStacks_614809, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypeRegistrations_614863 = ref object of OpenApiRestCall_612658
proc url_PostListTypeRegistrations_614865(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypeRegistrations_614864(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns a list of registration tokens for the specified type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614866 = query.getOrDefault("Action")
  valid_614866 = validateParameter(valid_614866, JString, required = true,
                                 default = newJString("ListTypeRegistrations"))
  if valid_614866 != nil:
    section.add "Action", valid_614866
  var valid_614867 = query.getOrDefault("Version")
  valid_614867 = validateParameter(valid_614867, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614867 != nil:
    section.add "Version", valid_614867
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614868 = header.getOrDefault("X-Amz-Signature")
  valid_614868 = validateParameter(valid_614868, JString, required = false,
                                 default = nil)
  if valid_614868 != nil:
    section.add "X-Amz-Signature", valid_614868
  var valid_614869 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614869 = validateParameter(valid_614869, JString, required = false,
                                 default = nil)
  if valid_614869 != nil:
    section.add "X-Amz-Content-Sha256", valid_614869
  var valid_614870 = header.getOrDefault("X-Amz-Date")
  valid_614870 = validateParameter(valid_614870, JString, required = false,
                                 default = nil)
  if valid_614870 != nil:
    section.add "X-Amz-Date", valid_614870
  var valid_614871 = header.getOrDefault("X-Amz-Credential")
  valid_614871 = validateParameter(valid_614871, JString, required = false,
                                 default = nil)
  if valid_614871 != nil:
    section.add "X-Amz-Credential", valid_614871
  var valid_614872 = header.getOrDefault("X-Amz-Security-Token")
  valid_614872 = validateParameter(valid_614872, JString, required = false,
                                 default = nil)
  if valid_614872 != nil:
    section.add "X-Amz-Security-Token", valid_614872
  var valid_614873 = header.getOrDefault("X-Amz-Algorithm")
  valid_614873 = validateParameter(valid_614873, JString, required = false,
                                 default = nil)
  if valid_614873 != nil:
    section.add "X-Amz-Algorithm", valid_614873
  var valid_614874 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614874 = validateParameter(valid_614874, JString, required = false,
                                 default = nil)
  if valid_614874 != nil:
    section.add "X-Amz-SignedHeaders", valid_614874
  result.add "header", section
  ## parameters in `formData` object:
  ##   RegistrationStatusFilter: JString
  ##                           : The current status of the type registration request.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   TypeArn: JString
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_614875 = formData.getOrDefault("RegistrationStatusFilter")
  valid_614875 = validateParameter(valid_614875, JString, required = false,
                                 default = newJString("COMPLETE"))
  if valid_614875 != nil:
    section.add "RegistrationStatusFilter", valid_614875
  var valid_614876 = formData.getOrDefault("NextToken")
  valid_614876 = validateParameter(valid_614876, JString, required = false,
                                 default = nil)
  if valid_614876 != nil:
    section.add "NextToken", valid_614876
  var valid_614877 = formData.getOrDefault("TypeName")
  valid_614877 = validateParameter(valid_614877, JString, required = false,
                                 default = nil)
  if valid_614877 != nil:
    section.add "TypeName", valid_614877
  var valid_614878 = formData.getOrDefault("TypeArn")
  valid_614878 = validateParameter(valid_614878, JString, required = false,
                                 default = nil)
  if valid_614878 != nil:
    section.add "TypeArn", valid_614878
  var valid_614879 = formData.getOrDefault("Type")
  valid_614879 = validateParameter(valid_614879, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_614879 != nil:
    section.add "Type", valid_614879
  var valid_614880 = formData.getOrDefault("MaxResults")
  valid_614880 = validateParameter(valid_614880, JInt, required = false, default = nil)
  if valid_614880 != nil:
    section.add "MaxResults", valid_614880
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614881: Call_PostListTypeRegistrations_614863; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns a list of registration tokens for the specified type.
  ## 
  let valid = call_614881.validator(path, query, header, formData, body)
  let scheme = call_614881.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614881.url(scheme.get, call_614881.host, call_614881.base,
                         call_614881.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614881, url, valid)

proc call*(call_614882: Call_PostListTypeRegistrations_614863;
          RegistrationStatusFilter: string = "COMPLETE"; NextToken: string = "";
          TypeName: string = ""; TypeArn: string = ""; Type: string = "RESOURCE";
          Action: string = "ListTypeRegistrations"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListTypeRegistrations
  ## Returns a list of registration tokens for the specified type.
  ##   RegistrationStatusFilter: string
  ##                           : The current status of the type registration request.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   TypeArn: string
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_614883 = newJObject()
  var formData_614884 = newJObject()
  add(formData_614884, "RegistrationStatusFilter",
      newJString(RegistrationStatusFilter))
  add(formData_614884, "NextToken", newJString(NextToken))
  add(formData_614884, "TypeName", newJString(TypeName))
  add(formData_614884, "TypeArn", newJString(TypeArn))
  add(formData_614884, "Type", newJString(Type))
  add(query_614883, "Action", newJString(Action))
  add(query_614883, "Version", newJString(Version))
  add(formData_614884, "MaxResults", newJInt(MaxResults))
  result = call_614882.call(nil, query_614883, nil, formData_614884, nil)

var postListTypeRegistrations* = Call_PostListTypeRegistrations_614863(
    name: "postListTypeRegistrations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeRegistrations",
    validator: validate_PostListTypeRegistrations_614864, base: "/",
    url: url_PostListTypeRegistrations_614865,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypeRegistrations_614842 = ref object of OpenApiRestCall_612658
proc url_GetListTypeRegistrations_614844(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypeRegistrations_614843(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns a list of registration tokens for the specified type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   RegistrationStatusFilter: JString
  ##                           : The current status of the type registration request.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   TypeArn: JString
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_614845 = query.getOrDefault("TypeName")
  valid_614845 = validateParameter(valid_614845, JString, required = false,
                                 default = nil)
  if valid_614845 != nil:
    section.add "TypeName", valid_614845
  var valid_614846 = query.getOrDefault("MaxResults")
  valid_614846 = validateParameter(valid_614846, JInt, required = false, default = nil)
  if valid_614846 != nil:
    section.add "MaxResults", valid_614846
  var valid_614847 = query.getOrDefault("Type")
  valid_614847 = validateParameter(valid_614847, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_614847 != nil:
    section.add "Type", valid_614847
  var valid_614848 = query.getOrDefault("RegistrationStatusFilter")
  valid_614848 = validateParameter(valid_614848, JString, required = false,
                                 default = newJString("COMPLETE"))
  if valid_614848 != nil:
    section.add "RegistrationStatusFilter", valid_614848
  var valid_614849 = query.getOrDefault("NextToken")
  valid_614849 = validateParameter(valid_614849, JString, required = false,
                                 default = nil)
  if valid_614849 != nil:
    section.add "NextToken", valid_614849
  var valid_614850 = query.getOrDefault("Action")
  valid_614850 = validateParameter(valid_614850, JString, required = true,
                                 default = newJString("ListTypeRegistrations"))
  if valid_614850 != nil:
    section.add "Action", valid_614850
  var valid_614851 = query.getOrDefault("Version")
  valid_614851 = validateParameter(valid_614851, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614851 != nil:
    section.add "Version", valid_614851
  var valid_614852 = query.getOrDefault("TypeArn")
  valid_614852 = validateParameter(valid_614852, JString, required = false,
                                 default = nil)
  if valid_614852 != nil:
    section.add "TypeArn", valid_614852
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614853 = header.getOrDefault("X-Amz-Signature")
  valid_614853 = validateParameter(valid_614853, JString, required = false,
                                 default = nil)
  if valid_614853 != nil:
    section.add "X-Amz-Signature", valid_614853
  var valid_614854 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614854 = validateParameter(valid_614854, JString, required = false,
                                 default = nil)
  if valid_614854 != nil:
    section.add "X-Amz-Content-Sha256", valid_614854
  var valid_614855 = header.getOrDefault("X-Amz-Date")
  valid_614855 = validateParameter(valid_614855, JString, required = false,
                                 default = nil)
  if valid_614855 != nil:
    section.add "X-Amz-Date", valid_614855
  var valid_614856 = header.getOrDefault("X-Amz-Credential")
  valid_614856 = validateParameter(valid_614856, JString, required = false,
                                 default = nil)
  if valid_614856 != nil:
    section.add "X-Amz-Credential", valid_614856
  var valid_614857 = header.getOrDefault("X-Amz-Security-Token")
  valid_614857 = validateParameter(valid_614857, JString, required = false,
                                 default = nil)
  if valid_614857 != nil:
    section.add "X-Amz-Security-Token", valid_614857
  var valid_614858 = header.getOrDefault("X-Amz-Algorithm")
  valid_614858 = validateParameter(valid_614858, JString, required = false,
                                 default = nil)
  if valid_614858 != nil:
    section.add "X-Amz-Algorithm", valid_614858
  var valid_614859 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614859 = validateParameter(valid_614859, JString, required = false,
                                 default = nil)
  if valid_614859 != nil:
    section.add "X-Amz-SignedHeaders", valid_614859
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614860: Call_GetListTypeRegistrations_614842; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns a list of registration tokens for the specified type.
  ## 
  let valid = call_614860.validator(path, query, header, formData, body)
  let scheme = call_614860.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614860.url(scheme.get, call_614860.host, call_614860.base,
                         call_614860.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614860, url, valid)

proc call*(call_614861: Call_GetListTypeRegistrations_614842;
          TypeName: string = ""; MaxResults: int = 0; Type: string = "RESOURCE";
          RegistrationStatusFilter: string = "COMPLETE"; NextToken: string = "";
          Action: string = "ListTypeRegistrations"; Version: string = "2010-05-15";
          TypeArn: string = ""): Recallable =
  ## getListTypeRegistrations
  ## Returns a list of registration tokens for the specified type.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   RegistrationStatusFilter: string
  ##                           : The current status of the type registration request.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   TypeArn: string
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_614862 = newJObject()
  add(query_614862, "TypeName", newJString(TypeName))
  add(query_614862, "MaxResults", newJInt(MaxResults))
  add(query_614862, "Type", newJString(Type))
  add(query_614862, "RegistrationStatusFilter",
      newJString(RegistrationStatusFilter))
  add(query_614862, "NextToken", newJString(NextToken))
  add(query_614862, "Action", newJString(Action))
  add(query_614862, "Version", newJString(Version))
  add(query_614862, "TypeArn", newJString(TypeArn))
  result = call_614861.call(nil, query_614862, nil, nil, nil)

var getListTypeRegistrations* = Call_GetListTypeRegistrations_614842(
    name: "getListTypeRegistrations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeRegistrations",
    validator: validate_GetListTypeRegistrations_614843, base: "/",
    url: url_GetListTypeRegistrations_614844, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypeVersions_614906 = ref object of OpenApiRestCall_612658
proc url_PostListTypeVersions_614908(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypeVersions_614907(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the versions of a type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614909 = query.getOrDefault("Action")
  valid_614909 = validateParameter(valid_614909, JString, required = true,
                                 default = newJString("ListTypeVersions"))
  if valid_614909 != nil:
    section.add "Action", valid_614909
  var valid_614910 = query.getOrDefault("Version")
  valid_614910 = validateParameter(valid_614910, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614910 != nil:
    section.add "Version", valid_614910
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614911 = header.getOrDefault("X-Amz-Signature")
  valid_614911 = validateParameter(valid_614911, JString, required = false,
                                 default = nil)
  if valid_614911 != nil:
    section.add "X-Amz-Signature", valid_614911
  var valid_614912 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614912 = validateParameter(valid_614912, JString, required = false,
                                 default = nil)
  if valid_614912 != nil:
    section.add "X-Amz-Content-Sha256", valid_614912
  var valid_614913 = header.getOrDefault("X-Amz-Date")
  valid_614913 = validateParameter(valid_614913, JString, required = false,
                                 default = nil)
  if valid_614913 != nil:
    section.add "X-Amz-Date", valid_614913
  var valid_614914 = header.getOrDefault("X-Amz-Credential")
  valid_614914 = validateParameter(valid_614914, JString, required = false,
                                 default = nil)
  if valid_614914 != nil:
    section.add "X-Amz-Credential", valid_614914
  var valid_614915 = header.getOrDefault("X-Amz-Security-Token")
  valid_614915 = validateParameter(valid_614915, JString, required = false,
                                 default = nil)
  if valid_614915 != nil:
    section.add "X-Amz-Security-Token", valid_614915
  var valid_614916 = header.getOrDefault("X-Amz-Algorithm")
  valid_614916 = validateParameter(valid_614916, JString, required = false,
                                 default = nil)
  if valid_614916 != nil:
    section.add "X-Amz-Algorithm", valid_614916
  var valid_614917 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614917 = validateParameter(valid_614917, JString, required = false,
                                 default = nil)
  if valid_614917 != nil:
    section.add "X-Amz-SignedHeaders", valid_614917
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: JString
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   Type: JString
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_614918 = formData.getOrDefault("Arn")
  valid_614918 = validateParameter(valid_614918, JString, required = false,
                                 default = nil)
  if valid_614918 != nil:
    section.add "Arn", valid_614918
  var valid_614919 = formData.getOrDefault("NextToken")
  valid_614919 = validateParameter(valid_614919, JString, required = false,
                                 default = nil)
  if valid_614919 != nil:
    section.add "NextToken", valid_614919
  var valid_614920 = formData.getOrDefault("TypeName")
  valid_614920 = validateParameter(valid_614920, JString, required = false,
                                 default = nil)
  if valid_614920 != nil:
    section.add "TypeName", valid_614920
  var valid_614921 = formData.getOrDefault("DeprecatedStatus")
  valid_614921 = validateParameter(valid_614921, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_614921 != nil:
    section.add "DeprecatedStatus", valid_614921
  var valid_614922 = formData.getOrDefault("Type")
  valid_614922 = validateParameter(valid_614922, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_614922 != nil:
    section.add "Type", valid_614922
  var valid_614923 = formData.getOrDefault("MaxResults")
  valid_614923 = validateParameter(valid_614923, JInt, required = false, default = nil)
  if valid_614923 != nil:
    section.add "MaxResults", valid_614923
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614924: Call_PostListTypeVersions_614906; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about the versions of a type.
  ## 
  let valid = call_614924.validator(path, query, header, formData, body)
  let scheme = call_614924.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614924.url(scheme.get, call_614924.host, call_614924.base,
                         call_614924.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614924, url, valid)

proc call*(call_614925: Call_PostListTypeVersions_614906; Arn: string = "";
          NextToken: string = ""; TypeName: string = "";
          DeprecatedStatus: string = "LIVE"; Type: string = "RESOURCE";
          Action: string = "ListTypeVersions"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListTypeVersions
  ## Returns summary information about the versions of a type.
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: string
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   Type: string
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_614926 = newJObject()
  var formData_614927 = newJObject()
  add(formData_614927, "Arn", newJString(Arn))
  add(formData_614927, "NextToken", newJString(NextToken))
  add(formData_614927, "TypeName", newJString(TypeName))
  add(formData_614927, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(formData_614927, "Type", newJString(Type))
  add(query_614926, "Action", newJString(Action))
  add(query_614926, "Version", newJString(Version))
  add(formData_614927, "MaxResults", newJInt(MaxResults))
  result = call_614925.call(nil, query_614926, nil, formData_614927, nil)

var postListTypeVersions* = Call_PostListTypeVersions_614906(
    name: "postListTypeVersions", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeVersions",
    validator: validate_PostListTypeVersions_614907, base: "/",
    url: url_PostListTypeVersions_614908, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypeVersions_614885 = ref object of OpenApiRestCall_612658
proc url_GetListTypeVersions_614887(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypeVersions_614886(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Returns summary information about the versions of a type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: JString
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_614888 = query.getOrDefault("TypeName")
  valid_614888 = validateParameter(valid_614888, JString, required = false,
                                 default = nil)
  if valid_614888 != nil:
    section.add "TypeName", valid_614888
  var valid_614889 = query.getOrDefault("DeprecatedStatus")
  valid_614889 = validateParameter(valid_614889, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_614889 != nil:
    section.add "DeprecatedStatus", valid_614889
  var valid_614890 = query.getOrDefault("MaxResults")
  valid_614890 = validateParameter(valid_614890, JInt, required = false, default = nil)
  if valid_614890 != nil:
    section.add "MaxResults", valid_614890
  var valid_614891 = query.getOrDefault("Type")
  valid_614891 = validateParameter(valid_614891, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_614891 != nil:
    section.add "Type", valid_614891
  var valid_614892 = query.getOrDefault("NextToken")
  valid_614892 = validateParameter(valid_614892, JString, required = false,
                                 default = nil)
  if valid_614892 != nil:
    section.add "NextToken", valid_614892
  var valid_614893 = query.getOrDefault("Action")
  valid_614893 = validateParameter(valid_614893, JString, required = true,
                                 default = newJString("ListTypeVersions"))
  if valid_614893 != nil:
    section.add "Action", valid_614893
  var valid_614894 = query.getOrDefault("Version")
  valid_614894 = validateParameter(valid_614894, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614894 != nil:
    section.add "Version", valid_614894
  var valid_614895 = query.getOrDefault("Arn")
  valid_614895 = validateParameter(valid_614895, JString, required = false,
                                 default = nil)
  if valid_614895 != nil:
    section.add "Arn", valid_614895
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614896 = header.getOrDefault("X-Amz-Signature")
  valid_614896 = validateParameter(valid_614896, JString, required = false,
                                 default = nil)
  if valid_614896 != nil:
    section.add "X-Amz-Signature", valid_614896
  var valid_614897 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614897 = validateParameter(valid_614897, JString, required = false,
                                 default = nil)
  if valid_614897 != nil:
    section.add "X-Amz-Content-Sha256", valid_614897
  var valid_614898 = header.getOrDefault("X-Amz-Date")
  valid_614898 = validateParameter(valid_614898, JString, required = false,
                                 default = nil)
  if valid_614898 != nil:
    section.add "X-Amz-Date", valid_614898
  var valid_614899 = header.getOrDefault("X-Amz-Credential")
  valid_614899 = validateParameter(valid_614899, JString, required = false,
                                 default = nil)
  if valid_614899 != nil:
    section.add "X-Amz-Credential", valid_614899
  var valid_614900 = header.getOrDefault("X-Amz-Security-Token")
  valid_614900 = validateParameter(valid_614900, JString, required = false,
                                 default = nil)
  if valid_614900 != nil:
    section.add "X-Amz-Security-Token", valid_614900
  var valid_614901 = header.getOrDefault("X-Amz-Algorithm")
  valid_614901 = validateParameter(valid_614901, JString, required = false,
                                 default = nil)
  if valid_614901 != nil:
    section.add "X-Amz-Algorithm", valid_614901
  var valid_614902 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614902 = validateParameter(valid_614902, JString, required = false,
                                 default = nil)
  if valid_614902 != nil:
    section.add "X-Amz-SignedHeaders", valid_614902
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614903: Call_GetListTypeVersions_614885; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about the versions of a type.
  ## 
  let valid = call_614903.validator(path, query, header, formData, body)
  let scheme = call_614903.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614903.url(scheme.get, call_614903.host, call_614903.base,
                         call_614903.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614903, url, valid)

proc call*(call_614904: Call_GetListTypeVersions_614885; TypeName: string = "";
          DeprecatedStatus: string = "LIVE"; MaxResults: int = 0;
          Type: string = "RESOURCE"; NextToken: string = "";
          Action: string = "ListTypeVersions"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getListTypeVersions
  ## Returns summary information about the versions of a type.
  ##   TypeName: string
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: string
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_614905 = newJObject()
  add(query_614905, "TypeName", newJString(TypeName))
  add(query_614905, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_614905, "MaxResults", newJInt(MaxResults))
  add(query_614905, "Type", newJString(Type))
  add(query_614905, "NextToken", newJString(NextToken))
  add(query_614905, "Action", newJString(Action))
  add(query_614905, "Version", newJString(Version))
  add(query_614905, "Arn", newJString(Arn))
  result = call_614904.call(nil, query_614905, nil, nil, nil)

var getListTypeVersions* = Call_GetListTypeVersions_614885(
    name: "getListTypeVersions", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeVersions",
    validator: validate_GetListTypeVersions_614886, base: "/",
    url: url_GetListTypeVersions_614887, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypes_614948 = ref object of OpenApiRestCall_612658
proc url_PostListTypes_614950(protocol: Scheme; host: string; base: string;
                             route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypes_614949(path: JsonNode; query: JsonNode; header: JsonNode;
                                  formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614951 = query.getOrDefault("Action")
  valid_614951 = validateParameter(valid_614951, JString, required = true,
                                 default = newJString("ListTypes"))
  if valid_614951 != nil:
    section.add "Action", valid_614951
  var valid_614952 = query.getOrDefault("Version")
  valid_614952 = validateParameter(valid_614952, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614952 != nil:
    section.add "Version", valid_614952
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614953 = header.getOrDefault("X-Amz-Signature")
  valid_614953 = validateParameter(valid_614953, JString, required = false,
                                 default = nil)
  if valid_614953 != nil:
    section.add "X-Amz-Signature", valid_614953
  var valid_614954 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614954 = validateParameter(valid_614954, JString, required = false,
                                 default = nil)
  if valid_614954 != nil:
    section.add "X-Amz-Content-Sha256", valid_614954
  var valid_614955 = header.getOrDefault("X-Amz-Date")
  valid_614955 = validateParameter(valid_614955, JString, required = false,
                                 default = nil)
  if valid_614955 != nil:
    section.add "X-Amz-Date", valid_614955
  var valid_614956 = header.getOrDefault("X-Amz-Credential")
  valid_614956 = validateParameter(valid_614956, JString, required = false,
                                 default = nil)
  if valid_614956 != nil:
    section.add "X-Amz-Credential", valid_614956
  var valid_614957 = header.getOrDefault("X-Amz-Security-Token")
  valid_614957 = validateParameter(valid_614957, JString, required = false,
                                 default = nil)
  if valid_614957 != nil:
    section.add "X-Amz-Security-Token", valid_614957
  var valid_614958 = header.getOrDefault("X-Amz-Algorithm")
  valid_614958 = validateParameter(valid_614958, JString, required = false,
                                 default = nil)
  if valid_614958 != nil:
    section.add "X-Amz-Algorithm", valid_614958
  var valid_614959 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614959 = validateParameter(valid_614959, JString, required = false,
                                 default = nil)
  if valid_614959 != nil:
    section.add "X-Amz-SignedHeaders", valid_614959
  result.add "header", section
  ## parameters in `formData` object:
  ##   ProvisioningType: JString
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: JString
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_614960 = formData.getOrDefault("ProvisioningType")
  valid_614960 = validateParameter(valid_614960, JString, required = false,
                                 default = newJString("NON_PROVISIONABLE"))
  if valid_614960 != nil:
    section.add "ProvisioningType", valid_614960
  var valid_614961 = formData.getOrDefault("NextToken")
  valid_614961 = validateParameter(valid_614961, JString, required = false,
                                 default = nil)
  if valid_614961 != nil:
    section.add "NextToken", valid_614961
  var valid_614962 = formData.getOrDefault("Visibility")
  valid_614962 = validateParameter(valid_614962, JString, required = false,
                                 default = newJString("PUBLIC"))
  if valid_614962 != nil:
    section.add "Visibility", valid_614962
  var valid_614963 = formData.getOrDefault("DeprecatedStatus")
  valid_614963 = validateParameter(valid_614963, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_614963 != nil:
    section.add "DeprecatedStatus", valid_614963
  var valid_614964 = formData.getOrDefault("MaxResults")
  valid_614964 = validateParameter(valid_614964, JInt, required = false, default = nil)
  if valid_614964 != nil:
    section.add "MaxResults", valid_614964
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614965: Call_PostListTypes_614948; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  let valid = call_614965.validator(path, query, header, formData, body)
  let scheme = call_614965.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614965.url(scheme.get, call_614965.host, call_614965.base,
                         call_614965.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614965, url, valid)

proc call*(call_614966: Call_PostListTypes_614948;
          ProvisioningType: string = "NON_PROVISIONABLE"; NextToken: string = "";
          Visibility: string = "PUBLIC"; DeprecatedStatus: string = "LIVE";
          Action: string = "ListTypes"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListTypes
  ## Returns summary information about types that have been registered with CloudFormation.
  ##   ProvisioningType: string
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: string
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_614967 = newJObject()
  var formData_614968 = newJObject()
  add(formData_614968, "ProvisioningType", newJString(ProvisioningType))
  add(formData_614968, "NextToken", newJString(NextToken))
  add(formData_614968, "Visibility", newJString(Visibility))
  add(formData_614968, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_614967, "Action", newJString(Action))
  add(query_614967, "Version", newJString(Version))
  add(formData_614968, "MaxResults", newJInt(MaxResults))
  result = call_614966.call(nil, query_614967, nil, formData_614968, nil)

var postListTypes* = Call_PostListTypes_614948(name: "postListTypes",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListTypes", validator: validate_PostListTypes_614949,
    base: "/", url: url_PostListTypes_614950, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypes_614928 = ref object of OpenApiRestCall_612658
proc url_GetListTypes_614930(protocol: Scheme; host: string; base: string;
                            route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypes_614929(path: JsonNode; query: JsonNode; header: JsonNode;
                                 formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: JString
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   ProvisioningType: JString
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  section = newJObject()
  var valid_614931 = query.getOrDefault("DeprecatedStatus")
  valid_614931 = validateParameter(valid_614931, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_614931 != nil:
    section.add "DeprecatedStatus", valid_614931
  var valid_614932 = query.getOrDefault("MaxResults")
  valid_614932 = validateParameter(valid_614932, JInt, required = false, default = nil)
  if valid_614932 != nil:
    section.add "MaxResults", valid_614932
  var valid_614933 = query.getOrDefault("NextToken")
  valid_614933 = validateParameter(valid_614933, JString, required = false,
                                 default = nil)
  if valid_614933 != nil:
    section.add "NextToken", valid_614933
  var valid_614934 = query.getOrDefault("Visibility")
  valid_614934 = validateParameter(valid_614934, JString, required = false,
                                 default = newJString("PUBLIC"))
  if valid_614934 != nil:
    section.add "Visibility", valid_614934
  var valid_614935 = query.getOrDefault("Action")
  valid_614935 = validateParameter(valid_614935, JString, required = true,
                                 default = newJString("ListTypes"))
  if valid_614935 != nil:
    section.add "Action", valid_614935
  var valid_614936 = query.getOrDefault("Version")
  valid_614936 = validateParameter(valid_614936, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614936 != nil:
    section.add "Version", valid_614936
  var valid_614937 = query.getOrDefault("ProvisioningType")
  valid_614937 = validateParameter(valid_614937, JString, required = false,
                                 default = newJString("NON_PROVISIONABLE"))
  if valid_614937 != nil:
    section.add "ProvisioningType", valid_614937
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614938 = header.getOrDefault("X-Amz-Signature")
  valid_614938 = validateParameter(valid_614938, JString, required = false,
                                 default = nil)
  if valid_614938 != nil:
    section.add "X-Amz-Signature", valid_614938
  var valid_614939 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614939 = validateParameter(valid_614939, JString, required = false,
                                 default = nil)
  if valid_614939 != nil:
    section.add "X-Amz-Content-Sha256", valid_614939
  var valid_614940 = header.getOrDefault("X-Amz-Date")
  valid_614940 = validateParameter(valid_614940, JString, required = false,
                                 default = nil)
  if valid_614940 != nil:
    section.add "X-Amz-Date", valid_614940
  var valid_614941 = header.getOrDefault("X-Amz-Credential")
  valid_614941 = validateParameter(valid_614941, JString, required = false,
                                 default = nil)
  if valid_614941 != nil:
    section.add "X-Amz-Credential", valid_614941
  var valid_614942 = header.getOrDefault("X-Amz-Security-Token")
  valid_614942 = validateParameter(valid_614942, JString, required = false,
                                 default = nil)
  if valid_614942 != nil:
    section.add "X-Amz-Security-Token", valid_614942
  var valid_614943 = header.getOrDefault("X-Amz-Algorithm")
  valid_614943 = validateParameter(valid_614943, JString, required = false,
                                 default = nil)
  if valid_614943 != nil:
    section.add "X-Amz-Algorithm", valid_614943
  var valid_614944 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614944 = validateParameter(valid_614944, JString, required = false,
                                 default = nil)
  if valid_614944 != nil:
    section.add "X-Amz-SignedHeaders", valid_614944
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614945: Call_GetListTypes_614928; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  let valid = call_614945.validator(path, query, header, formData, body)
  let scheme = call_614945.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614945.url(scheme.get, call_614945.host, call_614945.base,
                         call_614945.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614945, url, valid)

proc call*(call_614946: Call_GetListTypes_614928;
          DeprecatedStatus: string = "LIVE"; MaxResults: int = 0;
          NextToken: string = ""; Visibility: string = "PUBLIC";
          Action: string = "ListTypes"; Version: string = "2010-05-15";
          ProvisioningType: string = "NON_PROVISIONABLE"): Recallable =
  ## getListTypes
  ## Returns summary information about types that have been registered with CloudFormation.
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: string
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   ProvisioningType: string
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  var query_614947 = newJObject()
  add(query_614947, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_614947, "MaxResults", newJInt(MaxResults))
  add(query_614947, "NextToken", newJString(NextToken))
  add(query_614947, "Visibility", newJString(Visibility))
  add(query_614947, "Action", newJString(Action))
  add(query_614947, "Version", newJString(Version))
  add(query_614947, "ProvisioningType", newJString(ProvisioningType))
  result = call_614946.call(nil, query_614947, nil, nil, nil)

var getListTypes* = Call_GetListTypes_614928(name: "getListTypes",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListTypes", validator: validate_GetListTypes_614929, base: "/",
    url: url_GetListTypes_614930, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostRecordHandlerProgress_614991 = ref object of OpenApiRestCall_612658
proc url_PostRecordHandlerProgress_614993(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostRecordHandlerProgress_614992(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_614994 = query.getOrDefault("Action")
  valid_614994 = validateParameter(valid_614994, JString, required = true,
                                 default = newJString("RecordHandlerProgress"))
  if valid_614994 != nil:
    section.add "Action", valid_614994
  var valid_614995 = query.getOrDefault("Version")
  valid_614995 = validateParameter(valid_614995, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614995 != nil:
    section.add "Version", valid_614995
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614996 = header.getOrDefault("X-Amz-Signature")
  valid_614996 = validateParameter(valid_614996, JString, required = false,
                                 default = nil)
  if valid_614996 != nil:
    section.add "X-Amz-Signature", valid_614996
  var valid_614997 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614997 = validateParameter(valid_614997, JString, required = false,
                                 default = nil)
  if valid_614997 != nil:
    section.add "X-Amz-Content-Sha256", valid_614997
  var valid_614998 = header.getOrDefault("X-Amz-Date")
  valid_614998 = validateParameter(valid_614998, JString, required = false,
                                 default = nil)
  if valid_614998 != nil:
    section.add "X-Amz-Date", valid_614998
  var valid_614999 = header.getOrDefault("X-Amz-Credential")
  valid_614999 = validateParameter(valid_614999, JString, required = false,
                                 default = nil)
  if valid_614999 != nil:
    section.add "X-Amz-Credential", valid_614999
  var valid_615000 = header.getOrDefault("X-Amz-Security-Token")
  valid_615000 = validateParameter(valid_615000, JString, required = false,
                                 default = nil)
  if valid_615000 != nil:
    section.add "X-Amz-Security-Token", valid_615000
  var valid_615001 = header.getOrDefault("X-Amz-Algorithm")
  valid_615001 = validateParameter(valid_615001, JString, required = false,
                                 default = nil)
  if valid_615001 != nil:
    section.add "X-Amz-Algorithm", valid_615001
  var valid_615002 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615002 = validateParameter(valid_615002, JString, required = false,
                                 default = nil)
  if valid_615002 != nil:
    section.add "X-Amz-SignedHeaders", valid_615002
  result.add "header", section
  ## parameters in `formData` object:
  ##   ResourceModel: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: JString
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   BearerToken: JString (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: JString (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: JString
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   CurrentOperationStatus: JString
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  section = newJObject()
  var valid_615003 = formData.getOrDefault("ResourceModel")
  valid_615003 = validateParameter(valid_615003, JString, required = false,
                                 default = nil)
  if valid_615003 != nil:
    section.add "ResourceModel", valid_615003
  var valid_615004 = formData.getOrDefault("StatusMessage")
  valid_615004 = validateParameter(valid_615004, JString, required = false,
                                 default = nil)
  if valid_615004 != nil:
    section.add "StatusMessage", valid_615004
  var valid_615005 = formData.getOrDefault("ClientRequestToken")
  valid_615005 = validateParameter(valid_615005, JString, required = false,
                                 default = nil)
  if valid_615005 != nil:
    section.add "ClientRequestToken", valid_615005
  assert formData != nil,
        "formData argument is necessary due to required `BearerToken` field"
  var valid_615006 = formData.getOrDefault("BearerToken")
  valid_615006 = validateParameter(valid_615006, JString, required = true,
                                 default = nil)
  if valid_615006 != nil:
    section.add "BearerToken", valid_615006
  var valid_615007 = formData.getOrDefault("OperationStatus")
  valid_615007 = validateParameter(valid_615007, JString, required = true,
                                 default = newJString("PENDING"))
  if valid_615007 != nil:
    section.add "OperationStatus", valid_615007
  var valid_615008 = formData.getOrDefault("ErrorCode")
  valid_615008 = validateParameter(valid_615008, JString, required = false,
                                 default = newJString("NotUpdatable"))
  if valid_615008 != nil:
    section.add "ErrorCode", valid_615008
  var valid_615009 = formData.getOrDefault("CurrentOperationStatus")
  valid_615009 = validateParameter(valid_615009, JString, required = false,
                                 default = newJString("PENDING"))
  if valid_615009 != nil:
    section.add "CurrentOperationStatus", valid_615009
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615010: Call_PostRecordHandlerProgress_614991; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  let valid = call_615010.validator(path, query, header, formData, body)
  let scheme = call_615010.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615010.url(scheme.get, call_615010.host, call_615010.base,
                         call_615010.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615010, url, valid)

proc call*(call_615011: Call_PostRecordHandlerProgress_614991; BearerToken: string;
          ResourceModel: string = ""; StatusMessage: string = "";
          ClientRequestToken: string = ""; Action: string = "RecordHandlerProgress";
          OperationStatus: string = "PENDING"; Version: string = "2010-05-15";
          ErrorCode: string = "NotUpdatable";
          CurrentOperationStatus: string = "PENDING"): Recallable =
  ## postRecordHandlerProgress
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ##   ResourceModel: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: string
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: string (required)
  ##   BearerToken: string (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: string (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: string (required)
  ##   ErrorCode: string
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   CurrentOperationStatus: string
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  var query_615012 = newJObject()
  var formData_615013 = newJObject()
  add(formData_615013, "ResourceModel", newJString(ResourceModel))
  add(formData_615013, "StatusMessage", newJString(StatusMessage))
  add(formData_615013, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_615012, "Action", newJString(Action))
  add(formData_615013, "BearerToken", newJString(BearerToken))
  add(formData_615013, "OperationStatus", newJString(OperationStatus))
  add(query_615012, "Version", newJString(Version))
  add(formData_615013, "ErrorCode", newJString(ErrorCode))
  add(formData_615013, "CurrentOperationStatus",
      newJString(CurrentOperationStatus))
  result = call_615011.call(nil, query_615012, nil, formData_615013, nil)

var postRecordHandlerProgress* = Call_PostRecordHandlerProgress_614991(
    name: "postRecordHandlerProgress", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=RecordHandlerProgress",
    validator: validate_PostRecordHandlerProgress_614992, base: "/",
    url: url_PostRecordHandlerProgress_614993,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetRecordHandlerProgress_614969 = ref object of OpenApiRestCall_612658
proc url_GetRecordHandlerProgress_614971(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetRecordHandlerProgress_614970(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   CurrentOperationStatus: JString
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ResourceModel: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: JString (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: JString (required)
  ##   BearerToken: JString (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: JString
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: JString
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: JString (required)
  ##   StatusMessage: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  section = newJObject()
  var valid_614972 = query.getOrDefault("CurrentOperationStatus")
  valid_614972 = validateParameter(valid_614972, JString, required = false,
                                 default = newJString("PENDING"))
  if valid_614972 != nil:
    section.add "CurrentOperationStatus", valid_614972
  var valid_614973 = query.getOrDefault("ResourceModel")
  valid_614973 = validateParameter(valid_614973, JString, required = false,
                                 default = nil)
  if valid_614973 != nil:
    section.add "ResourceModel", valid_614973
  var valid_614974 = query.getOrDefault("OperationStatus")
  valid_614974 = validateParameter(valid_614974, JString, required = true,
                                 default = newJString("PENDING"))
  if valid_614974 != nil:
    section.add "OperationStatus", valid_614974
  var valid_614975 = query.getOrDefault("Action")
  valid_614975 = validateParameter(valid_614975, JString, required = true,
                                 default = newJString("RecordHandlerProgress"))
  if valid_614975 != nil:
    section.add "Action", valid_614975
  var valid_614976 = query.getOrDefault("BearerToken")
  valid_614976 = validateParameter(valid_614976, JString, required = true,
                                 default = nil)
  if valid_614976 != nil:
    section.add "BearerToken", valid_614976
  var valid_614977 = query.getOrDefault("ErrorCode")
  valid_614977 = validateParameter(valid_614977, JString, required = false,
                                 default = newJString("NotUpdatable"))
  if valid_614977 != nil:
    section.add "ErrorCode", valid_614977
  var valid_614978 = query.getOrDefault("ClientRequestToken")
  valid_614978 = validateParameter(valid_614978, JString, required = false,
                                 default = nil)
  if valid_614978 != nil:
    section.add "ClientRequestToken", valid_614978
  var valid_614979 = query.getOrDefault("Version")
  valid_614979 = validateParameter(valid_614979, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_614979 != nil:
    section.add "Version", valid_614979
  var valid_614980 = query.getOrDefault("StatusMessage")
  valid_614980 = validateParameter(valid_614980, JString, required = false,
                                 default = nil)
  if valid_614980 != nil:
    section.add "StatusMessage", valid_614980
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_614981 = header.getOrDefault("X-Amz-Signature")
  valid_614981 = validateParameter(valid_614981, JString, required = false,
                                 default = nil)
  if valid_614981 != nil:
    section.add "X-Amz-Signature", valid_614981
  var valid_614982 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_614982 = validateParameter(valid_614982, JString, required = false,
                                 default = nil)
  if valid_614982 != nil:
    section.add "X-Amz-Content-Sha256", valid_614982
  var valid_614983 = header.getOrDefault("X-Amz-Date")
  valid_614983 = validateParameter(valid_614983, JString, required = false,
                                 default = nil)
  if valid_614983 != nil:
    section.add "X-Amz-Date", valid_614983
  var valid_614984 = header.getOrDefault("X-Amz-Credential")
  valid_614984 = validateParameter(valid_614984, JString, required = false,
                                 default = nil)
  if valid_614984 != nil:
    section.add "X-Amz-Credential", valid_614984
  var valid_614985 = header.getOrDefault("X-Amz-Security-Token")
  valid_614985 = validateParameter(valid_614985, JString, required = false,
                                 default = nil)
  if valid_614985 != nil:
    section.add "X-Amz-Security-Token", valid_614985
  var valid_614986 = header.getOrDefault("X-Amz-Algorithm")
  valid_614986 = validateParameter(valid_614986, JString, required = false,
                                 default = nil)
  if valid_614986 != nil:
    section.add "X-Amz-Algorithm", valid_614986
  var valid_614987 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_614987 = validateParameter(valid_614987, JString, required = false,
                                 default = nil)
  if valid_614987 != nil:
    section.add "X-Amz-SignedHeaders", valid_614987
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_614988: Call_GetRecordHandlerProgress_614969; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  let valid = call_614988.validator(path, query, header, formData, body)
  let scheme = call_614988.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_614988.url(scheme.get, call_614988.host, call_614988.base,
                         call_614988.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_614988, url, valid)

proc call*(call_614989: Call_GetRecordHandlerProgress_614969; BearerToken: string;
          CurrentOperationStatus: string = "PENDING"; ResourceModel: string = "";
          OperationStatus: string = "PENDING";
          Action: string = "RecordHandlerProgress";
          ErrorCode: string = "NotUpdatable"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"; StatusMessage: string = ""): Recallable =
  ## getRecordHandlerProgress
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ##   CurrentOperationStatus: string
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ResourceModel: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: string (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: string (required)
  ##   BearerToken: string (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: string
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: string
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: string (required)
  ##   StatusMessage: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  var query_614990 = newJObject()
  add(query_614990, "CurrentOperationStatus", newJString(CurrentOperationStatus))
  add(query_614990, "ResourceModel", newJString(ResourceModel))
  add(query_614990, "OperationStatus", newJString(OperationStatus))
  add(query_614990, "Action", newJString(Action))
  add(query_614990, "BearerToken", newJString(BearerToken))
  add(query_614990, "ErrorCode", newJString(ErrorCode))
  add(query_614990, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_614990, "Version", newJString(Version))
  add(query_614990, "StatusMessage", newJString(StatusMessage))
  result = call_614989.call(nil, query_614990, nil, nil, nil)

var getRecordHandlerProgress* = Call_GetRecordHandlerProgress_614969(
    name: "getRecordHandlerProgress", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=RecordHandlerProgress",
    validator: validate_GetRecordHandlerProgress_614970, base: "/",
    url: url_GetRecordHandlerProgress_614971, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostRegisterType_615036 = ref object of OpenApiRestCall_612658
proc url_PostRegisterType_615038(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostRegisterType_615037(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615039 = query.getOrDefault("Action")
  valid_615039 = validateParameter(valid_615039, JString, required = true,
                                 default = newJString("RegisterType"))
  if valid_615039 != nil:
    section.add "Action", valid_615039
  var valid_615040 = query.getOrDefault("Version")
  valid_615040 = validateParameter(valid_615040, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615040 != nil:
    section.add "Version", valid_615040
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615041 = header.getOrDefault("X-Amz-Signature")
  valid_615041 = validateParameter(valid_615041, JString, required = false,
                                 default = nil)
  if valid_615041 != nil:
    section.add "X-Amz-Signature", valid_615041
  var valid_615042 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615042 = validateParameter(valid_615042, JString, required = false,
                                 default = nil)
  if valid_615042 != nil:
    section.add "X-Amz-Content-Sha256", valid_615042
  var valid_615043 = header.getOrDefault("X-Amz-Date")
  valid_615043 = validateParameter(valid_615043, JString, required = false,
                                 default = nil)
  if valid_615043 != nil:
    section.add "X-Amz-Date", valid_615043
  var valid_615044 = header.getOrDefault("X-Amz-Credential")
  valid_615044 = validateParameter(valid_615044, JString, required = false,
                                 default = nil)
  if valid_615044 != nil:
    section.add "X-Amz-Credential", valid_615044
  var valid_615045 = header.getOrDefault("X-Amz-Security-Token")
  valid_615045 = validateParameter(valid_615045, JString, required = false,
                                 default = nil)
  if valid_615045 != nil:
    section.add "X-Amz-Security-Token", valid_615045
  var valid_615046 = header.getOrDefault("X-Amz-Algorithm")
  valid_615046 = validateParameter(valid_615046, JString, required = false,
                                 default = nil)
  if valid_615046 != nil:
    section.add "X-Amz-Algorithm", valid_615046
  var valid_615047 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615047 = validateParameter(valid_615047, JString, required = false,
                                 default = nil)
  if valid_615047 != nil:
    section.add "X-Amz-SignedHeaders", valid_615047
  result.add "header", section
  ## parameters in `formData` object:
  ##   SchemaHandlerPackage: JString (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  ##   LoggingConfig.LogRoleArn: JString
  ##                           : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   TypeName: JString (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   ExecutionRoleArn: JString
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfig.LogGroupName: JString
  ##                             : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `SchemaHandlerPackage` field"
  var valid_615048 = formData.getOrDefault("SchemaHandlerPackage")
  valid_615048 = validateParameter(valid_615048, JString, required = true,
                                 default = nil)
  if valid_615048 != nil:
    section.add "SchemaHandlerPackage", valid_615048
  var valid_615049 = formData.getOrDefault("LoggingConfig.LogRoleArn")
  valid_615049 = validateParameter(valid_615049, JString, required = false,
                                 default = nil)
  if valid_615049 != nil:
    section.add "LoggingConfig.LogRoleArn", valid_615049
  var valid_615050 = formData.getOrDefault("TypeName")
  valid_615050 = validateParameter(valid_615050, JString, required = true,
                                 default = nil)
  if valid_615050 != nil:
    section.add "TypeName", valid_615050
  var valid_615051 = formData.getOrDefault("ExecutionRoleArn")
  valid_615051 = validateParameter(valid_615051, JString, required = false,
                                 default = nil)
  if valid_615051 != nil:
    section.add "ExecutionRoleArn", valid_615051
  var valid_615052 = formData.getOrDefault("ClientRequestToken")
  valid_615052 = validateParameter(valid_615052, JString, required = false,
                                 default = nil)
  if valid_615052 != nil:
    section.add "ClientRequestToken", valid_615052
  var valid_615053 = formData.getOrDefault("Type")
  valid_615053 = validateParameter(valid_615053, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_615053 != nil:
    section.add "Type", valid_615053
  var valid_615054 = formData.getOrDefault("LoggingConfig.LogGroupName")
  valid_615054 = validateParameter(valid_615054, JString, required = false,
                                 default = nil)
  if valid_615054 != nil:
    section.add "LoggingConfig.LogGroupName", valid_615054
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615055: Call_PostRegisterType_615036; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  let valid = call_615055.validator(path, query, header, formData, body)
  let scheme = call_615055.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615055.url(scheme.get, call_615055.host, call_615055.base,
                         call_615055.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615055, url, valid)

proc call*(call_615056: Call_PostRegisterType_615036; SchemaHandlerPackage: string;
          TypeName: string; LoggingConfigLogRoleArn: string = "";
          ExecutionRoleArn: string = ""; ClientRequestToken: string = "";
          Type: string = "RESOURCE"; LoggingConfigLogGroupName: string = "";
          Action: string = "RegisterType"; Version: string = "2010-05-15"): Recallable =
  ## postRegisterType
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ##   SchemaHandlerPackage: string (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  ##   LoggingConfigLogRoleArn: string
  ##                          : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   TypeName: string (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   ExecutionRoleArn: string
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   ClientRequestToken: string
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfigLogGroupName: string
  ##                            : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615057 = newJObject()
  var formData_615058 = newJObject()
  add(formData_615058, "SchemaHandlerPackage", newJString(SchemaHandlerPackage))
  add(formData_615058, "LoggingConfig.LogRoleArn",
      newJString(LoggingConfigLogRoleArn))
  add(formData_615058, "TypeName", newJString(TypeName))
  add(formData_615058, "ExecutionRoleArn", newJString(ExecutionRoleArn))
  add(formData_615058, "ClientRequestToken", newJString(ClientRequestToken))
  add(formData_615058, "Type", newJString(Type))
  add(formData_615058, "LoggingConfig.LogGroupName",
      newJString(LoggingConfigLogGroupName))
  add(query_615057, "Action", newJString(Action))
  add(query_615057, "Version", newJString(Version))
  result = call_615056.call(nil, query_615057, nil, formData_615058, nil)

var postRegisterType* = Call_PostRegisterType_615036(name: "postRegisterType",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=RegisterType", validator: validate_PostRegisterType_615037,
    base: "/", url: url_PostRegisterType_615038,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetRegisterType_615014 = ref object of OpenApiRestCall_612658
proc url_GetRegisterType_615016(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetRegisterType_615015(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfig.LogRoleArn: JString
  ##                           : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Version: JString (required)
  ##   ExecutionRoleArn: JString
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   LoggingConfig.LogGroupName: JString
  ##                             : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   SchemaHandlerPackage: JString (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `TypeName` field"
  var valid_615017 = query.getOrDefault("TypeName")
  valid_615017 = validateParameter(valid_615017, JString, required = true,
                                 default = nil)
  if valid_615017 != nil:
    section.add "TypeName", valid_615017
  var valid_615018 = query.getOrDefault("Type")
  valid_615018 = validateParameter(valid_615018, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_615018 != nil:
    section.add "Type", valid_615018
  var valid_615019 = query.getOrDefault("LoggingConfig.LogRoleArn")
  valid_615019 = validateParameter(valid_615019, JString, required = false,
                                 default = nil)
  if valid_615019 != nil:
    section.add "LoggingConfig.LogRoleArn", valid_615019
  var valid_615020 = query.getOrDefault("Action")
  valid_615020 = validateParameter(valid_615020, JString, required = true,
                                 default = newJString("RegisterType"))
  if valid_615020 != nil:
    section.add "Action", valid_615020
  var valid_615021 = query.getOrDefault("ClientRequestToken")
  valid_615021 = validateParameter(valid_615021, JString, required = false,
                                 default = nil)
  if valid_615021 != nil:
    section.add "ClientRequestToken", valid_615021
  var valid_615022 = query.getOrDefault("Version")
  valid_615022 = validateParameter(valid_615022, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615022 != nil:
    section.add "Version", valid_615022
  var valid_615023 = query.getOrDefault("ExecutionRoleArn")
  valid_615023 = validateParameter(valid_615023, JString, required = false,
                                 default = nil)
  if valid_615023 != nil:
    section.add "ExecutionRoleArn", valid_615023
  var valid_615024 = query.getOrDefault("LoggingConfig.LogGroupName")
  valid_615024 = validateParameter(valid_615024, JString, required = false,
                                 default = nil)
  if valid_615024 != nil:
    section.add "LoggingConfig.LogGroupName", valid_615024
  var valid_615025 = query.getOrDefault("SchemaHandlerPackage")
  valid_615025 = validateParameter(valid_615025, JString, required = true,
                                 default = nil)
  if valid_615025 != nil:
    section.add "SchemaHandlerPackage", valid_615025
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615026 = header.getOrDefault("X-Amz-Signature")
  valid_615026 = validateParameter(valid_615026, JString, required = false,
                                 default = nil)
  if valid_615026 != nil:
    section.add "X-Amz-Signature", valid_615026
  var valid_615027 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615027 = validateParameter(valid_615027, JString, required = false,
                                 default = nil)
  if valid_615027 != nil:
    section.add "X-Amz-Content-Sha256", valid_615027
  var valid_615028 = header.getOrDefault("X-Amz-Date")
  valid_615028 = validateParameter(valid_615028, JString, required = false,
                                 default = nil)
  if valid_615028 != nil:
    section.add "X-Amz-Date", valid_615028
  var valid_615029 = header.getOrDefault("X-Amz-Credential")
  valid_615029 = validateParameter(valid_615029, JString, required = false,
                                 default = nil)
  if valid_615029 != nil:
    section.add "X-Amz-Credential", valid_615029
  var valid_615030 = header.getOrDefault("X-Amz-Security-Token")
  valid_615030 = validateParameter(valid_615030, JString, required = false,
                                 default = nil)
  if valid_615030 != nil:
    section.add "X-Amz-Security-Token", valid_615030
  var valid_615031 = header.getOrDefault("X-Amz-Algorithm")
  valid_615031 = validateParameter(valid_615031, JString, required = false,
                                 default = nil)
  if valid_615031 != nil:
    section.add "X-Amz-Algorithm", valid_615031
  var valid_615032 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615032 = validateParameter(valid_615032, JString, required = false,
                                 default = nil)
  if valid_615032 != nil:
    section.add "X-Amz-SignedHeaders", valid_615032
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615033: Call_GetRegisterType_615014; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  let valid = call_615033.validator(path, query, header, formData, body)
  let scheme = call_615033.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615033.url(scheme.get, call_615033.host, call_615033.base,
                         call_615033.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615033, url, valid)

proc call*(call_615034: Call_GetRegisterType_615014; TypeName: string;
          SchemaHandlerPackage: string; Type: string = "RESOURCE";
          LoggingConfigLogRoleArn: string = ""; Action: string = "RegisterType";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          ExecutionRoleArn: string = ""; LoggingConfigLogGroupName: string = ""): Recallable =
  ## getRegisterType
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ##   TypeName: string (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfigLogRoleArn: string
  ##                          : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Version: string (required)
  ##   ExecutionRoleArn: string
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   LoggingConfigLogGroupName: string
  ##                            : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   SchemaHandlerPackage: string (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  var query_615035 = newJObject()
  add(query_615035, "TypeName", newJString(TypeName))
  add(query_615035, "Type", newJString(Type))
  add(query_615035, "LoggingConfig.LogRoleArn",
      newJString(LoggingConfigLogRoleArn))
  add(query_615035, "Action", newJString(Action))
  add(query_615035, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_615035, "Version", newJString(Version))
  add(query_615035, "ExecutionRoleArn", newJString(ExecutionRoleArn))
  add(query_615035, "LoggingConfig.LogGroupName",
      newJString(LoggingConfigLogGroupName))
  add(query_615035, "SchemaHandlerPackage", newJString(SchemaHandlerPackage))
  result = call_615034.call(nil, query_615035, nil, nil, nil)

var getRegisterType* = Call_GetRegisterType_615014(name: "getRegisterType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=RegisterType", validator: validate_GetRegisterType_615015,
    base: "/", url: url_GetRegisterType_615016, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetStackPolicy_615077 = ref object of OpenApiRestCall_612658
proc url_PostSetStackPolicy_615079(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetStackPolicy_615078(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615080 = query.getOrDefault("Action")
  valid_615080 = validateParameter(valid_615080, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_615080 != nil:
    section.add "Action", valid_615080
  var valid_615081 = query.getOrDefault("Version")
  valid_615081 = validateParameter(valid_615081, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615081 != nil:
    section.add "Version", valid_615081
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615082 = header.getOrDefault("X-Amz-Signature")
  valid_615082 = validateParameter(valid_615082, JString, required = false,
                                 default = nil)
  if valid_615082 != nil:
    section.add "X-Amz-Signature", valid_615082
  var valid_615083 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615083 = validateParameter(valid_615083, JString, required = false,
                                 default = nil)
  if valid_615083 != nil:
    section.add "X-Amz-Content-Sha256", valid_615083
  var valid_615084 = header.getOrDefault("X-Amz-Date")
  valid_615084 = validateParameter(valid_615084, JString, required = false,
                                 default = nil)
  if valid_615084 != nil:
    section.add "X-Amz-Date", valid_615084
  var valid_615085 = header.getOrDefault("X-Amz-Credential")
  valid_615085 = validateParameter(valid_615085, JString, required = false,
                                 default = nil)
  if valid_615085 != nil:
    section.add "X-Amz-Credential", valid_615085
  var valid_615086 = header.getOrDefault("X-Amz-Security-Token")
  valid_615086 = validateParameter(valid_615086, JString, required = false,
                                 default = nil)
  if valid_615086 != nil:
    section.add "X-Amz-Security-Token", valid_615086
  var valid_615087 = header.getOrDefault("X-Amz-Algorithm")
  valid_615087 = validateParameter(valid_615087, JString, required = false,
                                 default = nil)
  if valid_615087 != nil:
    section.add "X-Amz-Algorithm", valid_615087
  var valid_615088 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615088 = validateParameter(valid_615088, JString, required = false,
                                 default = nil)
  if valid_615088 != nil:
    section.add "X-Amz-SignedHeaders", valid_615088
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  section = newJObject()
  var valid_615089 = formData.getOrDefault("StackPolicyBody")
  valid_615089 = validateParameter(valid_615089, JString, required = false,
                                 default = nil)
  if valid_615089 != nil:
    section.add "StackPolicyBody", valid_615089
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_615090 = formData.getOrDefault("StackName")
  valid_615090 = validateParameter(valid_615090, JString, required = true,
                                 default = nil)
  if valid_615090 != nil:
    section.add "StackName", valid_615090
  var valid_615091 = formData.getOrDefault("StackPolicyURL")
  valid_615091 = validateParameter(valid_615091, JString, required = false,
                                 default = nil)
  if valid_615091 != nil:
    section.add "StackPolicyURL", valid_615091
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615092: Call_PostSetStackPolicy_615077; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_615092.validator(path, query, header, formData, body)
  let scheme = call_615092.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615092.url(scheme.get, call_615092.host, call_615092.base,
                         call_615092.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615092, url, valid)

proc call*(call_615093: Call_PostSetStackPolicy_615077; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615094 = newJObject()
  var formData_615095 = newJObject()
  add(formData_615095, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_615095, "StackName", newJString(StackName))
  add(formData_615095, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_615094, "Action", newJString(Action))
  add(query_615094, "Version", newJString(Version))
  result = call_615093.call(nil, query_615094, nil, formData_615095, nil)

var postSetStackPolicy* = Call_PostSetStackPolicy_615077(
    name: "postSetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetStackPolicy",
    validator: validate_PostSetStackPolicy_615078, base: "/",
    url: url_PostSetStackPolicy_615079, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetStackPolicy_615059 = ref object of OpenApiRestCall_612658
proc url_GetSetStackPolicy_615061(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetStackPolicy_615060(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_615062 = query.getOrDefault("StackName")
  valid_615062 = validateParameter(valid_615062, JString, required = true,
                                 default = nil)
  if valid_615062 != nil:
    section.add "StackName", valid_615062
  var valid_615063 = query.getOrDefault("StackPolicyBody")
  valid_615063 = validateParameter(valid_615063, JString, required = false,
                                 default = nil)
  if valid_615063 != nil:
    section.add "StackPolicyBody", valid_615063
  var valid_615064 = query.getOrDefault("StackPolicyURL")
  valid_615064 = validateParameter(valid_615064, JString, required = false,
                                 default = nil)
  if valid_615064 != nil:
    section.add "StackPolicyURL", valid_615064
  var valid_615065 = query.getOrDefault("Action")
  valid_615065 = validateParameter(valid_615065, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_615065 != nil:
    section.add "Action", valid_615065
  var valid_615066 = query.getOrDefault("Version")
  valid_615066 = validateParameter(valid_615066, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615066 != nil:
    section.add "Version", valid_615066
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615067 = header.getOrDefault("X-Amz-Signature")
  valid_615067 = validateParameter(valid_615067, JString, required = false,
                                 default = nil)
  if valid_615067 != nil:
    section.add "X-Amz-Signature", valid_615067
  var valid_615068 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615068 = validateParameter(valid_615068, JString, required = false,
                                 default = nil)
  if valid_615068 != nil:
    section.add "X-Amz-Content-Sha256", valid_615068
  var valid_615069 = header.getOrDefault("X-Amz-Date")
  valid_615069 = validateParameter(valid_615069, JString, required = false,
                                 default = nil)
  if valid_615069 != nil:
    section.add "X-Amz-Date", valid_615069
  var valid_615070 = header.getOrDefault("X-Amz-Credential")
  valid_615070 = validateParameter(valid_615070, JString, required = false,
                                 default = nil)
  if valid_615070 != nil:
    section.add "X-Amz-Credential", valid_615070
  var valid_615071 = header.getOrDefault("X-Amz-Security-Token")
  valid_615071 = validateParameter(valid_615071, JString, required = false,
                                 default = nil)
  if valid_615071 != nil:
    section.add "X-Amz-Security-Token", valid_615071
  var valid_615072 = header.getOrDefault("X-Amz-Algorithm")
  valid_615072 = validateParameter(valid_615072, JString, required = false,
                                 default = nil)
  if valid_615072 != nil:
    section.add "X-Amz-Algorithm", valid_615072
  var valid_615073 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615073 = validateParameter(valid_615073, JString, required = false,
                                 default = nil)
  if valid_615073 != nil:
    section.add "X-Amz-SignedHeaders", valid_615073
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615074: Call_GetSetStackPolicy_615059; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_615074.validator(path, query, header, formData, body)
  let scheme = call_615074.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615074.url(scheme.get, call_615074.host, call_615074.base,
                         call_615074.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615074, url, valid)

proc call*(call_615075: Call_GetSetStackPolicy_615059; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615076 = newJObject()
  add(query_615076, "StackName", newJString(StackName))
  add(query_615076, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_615076, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_615076, "Action", newJString(Action))
  add(query_615076, "Version", newJString(Version))
  result = call_615075.call(nil, query_615076, nil, nil, nil)

var getSetStackPolicy* = Call_GetSetStackPolicy_615059(name: "getSetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SetStackPolicy", validator: validate_GetSetStackPolicy_615060,
    base: "/", url: url_GetSetStackPolicy_615061,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetTypeDefaultVersion_615115 = ref object of OpenApiRestCall_612658
proc url_PostSetTypeDefaultVersion_615117(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetTypeDefaultVersion_615116(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615118 = query.getOrDefault("Action")
  valid_615118 = validateParameter(valid_615118, JString, required = true,
                                 default = newJString("SetTypeDefaultVersion"))
  if valid_615118 != nil:
    section.add "Action", valid_615118
  var valid_615119 = query.getOrDefault("Version")
  valid_615119 = validateParameter(valid_615119, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615119 != nil:
    section.add "Version", valid_615119
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615120 = header.getOrDefault("X-Amz-Signature")
  valid_615120 = validateParameter(valid_615120, JString, required = false,
                                 default = nil)
  if valid_615120 != nil:
    section.add "X-Amz-Signature", valid_615120
  var valid_615121 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615121 = validateParameter(valid_615121, JString, required = false,
                                 default = nil)
  if valid_615121 != nil:
    section.add "X-Amz-Content-Sha256", valid_615121
  var valid_615122 = header.getOrDefault("X-Amz-Date")
  valid_615122 = validateParameter(valid_615122, JString, required = false,
                                 default = nil)
  if valid_615122 != nil:
    section.add "X-Amz-Date", valid_615122
  var valid_615123 = header.getOrDefault("X-Amz-Credential")
  valid_615123 = validateParameter(valid_615123, JString, required = false,
                                 default = nil)
  if valid_615123 != nil:
    section.add "X-Amz-Credential", valid_615123
  var valid_615124 = header.getOrDefault("X-Amz-Security-Token")
  valid_615124 = validateParameter(valid_615124, JString, required = false,
                                 default = nil)
  if valid_615124 != nil:
    section.add "X-Amz-Security-Token", valid_615124
  var valid_615125 = header.getOrDefault("X-Amz-Algorithm")
  valid_615125 = validateParameter(valid_615125, JString, required = false,
                                 default = nil)
  if valid_615125 != nil:
    section.add "X-Amz-Algorithm", valid_615125
  var valid_615126 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615126 = validateParameter(valid_615126, JString, required = false,
                                 default = nil)
  if valid_615126 != nil:
    section.add "X-Amz-SignedHeaders", valid_615126
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : The kind of type.
  section = newJObject()
  var valid_615127 = formData.getOrDefault("Arn")
  valid_615127 = validateParameter(valid_615127, JString, required = false,
                                 default = nil)
  if valid_615127 != nil:
    section.add "Arn", valid_615127
  var valid_615128 = formData.getOrDefault("VersionId")
  valid_615128 = validateParameter(valid_615128, JString, required = false,
                                 default = nil)
  if valid_615128 != nil:
    section.add "VersionId", valid_615128
  var valid_615129 = formData.getOrDefault("TypeName")
  valid_615129 = validateParameter(valid_615129, JString, required = false,
                                 default = nil)
  if valid_615129 != nil:
    section.add "TypeName", valid_615129
  var valid_615130 = formData.getOrDefault("Type")
  valid_615130 = validateParameter(valid_615130, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_615130 != nil:
    section.add "Type", valid_615130
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615131: Call_PostSetTypeDefaultVersion_615115; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  let valid = call_615131.validator(path, query, header, formData, body)
  let scheme = call_615131.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615131.url(scheme.get, call_615131.host, call_615131.base,
                         call_615131.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615131, url, valid)

proc call*(call_615132: Call_PostSetTypeDefaultVersion_615115; Arn: string = "";
          VersionId: string = ""; TypeName: string = ""; Type: string = "RESOURCE";
          Action: string = "SetTypeDefaultVersion"; Version: string = "2010-05-15"): Recallable =
  ## postSetTypeDefaultVersion
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : The kind of type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615133 = newJObject()
  var formData_615134 = newJObject()
  add(formData_615134, "Arn", newJString(Arn))
  add(formData_615134, "VersionId", newJString(VersionId))
  add(formData_615134, "TypeName", newJString(TypeName))
  add(formData_615134, "Type", newJString(Type))
  add(query_615133, "Action", newJString(Action))
  add(query_615133, "Version", newJString(Version))
  result = call_615132.call(nil, query_615133, nil, formData_615134, nil)

var postSetTypeDefaultVersion* = Call_PostSetTypeDefaultVersion_615115(
    name: "postSetTypeDefaultVersion", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetTypeDefaultVersion",
    validator: validate_PostSetTypeDefaultVersion_615116, base: "/",
    url: url_PostSetTypeDefaultVersion_615117,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetTypeDefaultVersion_615096 = ref object of OpenApiRestCall_612658
proc url_GetSetTypeDefaultVersion_615098(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetTypeDefaultVersion_615097(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : The kind of type.
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_615099 = query.getOrDefault("TypeName")
  valid_615099 = validateParameter(valid_615099, JString, required = false,
                                 default = nil)
  if valid_615099 != nil:
    section.add "TypeName", valid_615099
  var valid_615100 = query.getOrDefault("Type")
  valid_615100 = validateParameter(valid_615100, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_615100 != nil:
    section.add "Type", valid_615100
  var valid_615101 = query.getOrDefault("VersionId")
  valid_615101 = validateParameter(valid_615101, JString, required = false,
                                 default = nil)
  if valid_615101 != nil:
    section.add "VersionId", valid_615101
  var valid_615102 = query.getOrDefault("Action")
  valid_615102 = validateParameter(valid_615102, JString, required = true,
                                 default = newJString("SetTypeDefaultVersion"))
  if valid_615102 != nil:
    section.add "Action", valid_615102
  var valid_615103 = query.getOrDefault("Version")
  valid_615103 = validateParameter(valid_615103, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615103 != nil:
    section.add "Version", valid_615103
  var valid_615104 = query.getOrDefault("Arn")
  valid_615104 = validateParameter(valid_615104, JString, required = false,
                                 default = nil)
  if valid_615104 != nil:
    section.add "Arn", valid_615104
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615105 = header.getOrDefault("X-Amz-Signature")
  valid_615105 = validateParameter(valid_615105, JString, required = false,
                                 default = nil)
  if valid_615105 != nil:
    section.add "X-Amz-Signature", valid_615105
  var valid_615106 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615106 = validateParameter(valid_615106, JString, required = false,
                                 default = nil)
  if valid_615106 != nil:
    section.add "X-Amz-Content-Sha256", valid_615106
  var valid_615107 = header.getOrDefault("X-Amz-Date")
  valid_615107 = validateParameter(valid_615107, JString, required = false,
                                 default = nil)
  if valid_615107 != nil:
    section.add "X-Amz-Date", valid_615107
  var valid_615108 = header.getOrDefault("X-Amz-Credential")
  valid_615108 = validateParameter(valid_615108, JString, required = false,
                                 default = nil)
  if valid_615108 != nil:
    section.add "X-Amz-Credential", valid_615108
  var valid_615109 = header.getOrDefault("X-Amz-Security-Token")
  valid_615109 = validateParameter(valid_615109, JString, required = false,
                                 default = nil)
  if valid_615109 != nil:
    section.add "X-Amz-Security-Token", valid_615109
  var valid_615110 = header.getOrDefault("X-Amz-Algorithm")
  valid_615110 = validateParameter(valid_615110, JString, required = false,
                                 default = nil)
  if valid_615110 != nil:
    section.add "X-Amz-Algorithm", valid_615110
  var valid_615111 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615111 = validateParameter(valid_615111, JString, required = false,
                                 default = nil)
  if valid_615111 != nil:
    section.add "X-Amz-SignedHeaders", valid_615111
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615112: Call_GetSetTypeDefaultVersion_615096; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  let valid = call_615112.validator(path, query, header, formData, body)
  let scheme = call_615112.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615112.url(scheme.get, call_615112.host, call_615112.base,
                         call_615112.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615112, url, valid)

proc call*(call_615113: Call_GetSetTypeDefaultVersion_615096;
          TypeName: string = ""; Type: string = "RESOURCE"; VersionId: string = "";
          Action: string = "SetTypeDefaultVersion"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getSetTypeDefaultVersion
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : The kind of type.
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_615114 = newJObject()
  add(query_615114, "TypeName", newJString(TypeName))
  add(query_615114, "Type", newJString(Type))
  add(query_615114, "VersionId", newJString(VersionId))
  add(query_615114, "Action", newJString(Action))
  add(query_615114, "Version", newJString(Version))
  add(query_615114, "Arn", newJString(Arn))
  result = call_615113.call(nil, query_615114, nil, nil, nil)

var getSetTypeDefaultVersion* = Call_GetSetTypeDefaultVersion_615096(
    name: "getSetTypeDefaultVersion", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetTypeDefaultVersion",
    validator: validate_GetSetTypeDefaultVersion_615097, base: "/",
    url: url_GetSetTypeDefaultVersion_615098, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSignalResource_615154 = ref object of OpenApiRestCall_612658
proc url_PostSignalResource_615156(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSignalResource_615155(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615157 = query.getOrDefault("Action")
  valid_615157 = validateParameter(valid_615157, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_615157 != nil:
    section.add "Action", valid_615157
  var valid_615158 = query.getOrDefault("Version")
  valid_615158 = validateParameter(valid_615158, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615158 != nil:
    section.add "Version", valid_615158
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615159 = header.getOrDefault("X-Amz-Signature")
  valid_615159 = validateParameter(valid_615159, JString, required = false,
                                 default = nil)
  if valid_615159 != nil:
    section.add "X-Amz-Signature", valid_615159
  var valid_615160 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615160 = validateParameter(valid_615160, JString, required = false,
                                 default = nil)
  if valid_615160 != nil:
    section.add "X-Amz-Content-Sha256", valid_615160
  var valid_615161 = header.getOrDefault("X-Amz-Date")
  valid_615161 = validateParameter(valid_615161, JString, required = false,
                                 default = nil)
  if valid_615161 != nil:
    section.add "X-Amz-Date", valid_615161
  var valid_615162 = header.getOrDefault("X-Amz-Credential")
  valid_615162 = validateParameter(valid_615162, JString, required = false,
                                 default = nil)
  if valid_615162 != nil:
    section.add "X-Amz-Credential", valid_615162
  var valid_615163 = header.getOrDefault("X-Amz-Security-Token")
  valid_615163 = validateParameter(valid_615163, JString, required = false,
                                 default = nil)
  if valid_615163 != nil:
    section.add "X-Amz-Security-Token", valid_615163
  var valid_615164 = header.getOrDefault("X-Amz-Algorithm")
  valid_615164 = validateParameter(valid_615164, JString, required = false,
                                 default = nil)
  if valid_615164 != nil:
    section.add "X-Amz-Algorithm", valid_615164
  var valid_615165 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615165 = validateParameter(valid_615165, JString, required = false,
                                 default = nil)
  if valid_615165 != nil:
    section.add "X-Amz-SignedHeaders", valid_615165
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_615166 = formData.getOrDefault("StackName")
  valid_615166 = validateParameter(valid_615166, JString, required = true,
                                 default = nil)
  if valid_615166 != nil:
    section.add "StackName", valid_615166
  var valid_615167 = formData.getOrDefault("UniqueId")
  valid_615167 = validateParameter(valid_615167, JString, required = true,
                                 default = nil)
  if valid_615167 != nil:
    section.add "UniqueId", valid_615167
  var valid_615168 = formData.getOrDefault("Status")
  valid_615168 = validateParameter(valid_615168, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_615168 != nil:
    section.add "Status", valid_615168
  var valid_615169 = formData.getOrDefault("LogicalResourceId")
  valid_615169 = validateParameter(valid_615169, JString, required = true,
                                 default = nil)
  if valid_615169 != nil:
    section.add "LogicalResourceId", valid_615169
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615170: Call_PostSignalResource_615154; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_615170.validator(path, query, header, formData, body)
  let scheme = call_615170.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615170.url(scheme.get, call_615170.host, call_615170.base,
                         call_615170.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615170, url, valid)

proc call*(call_615171: Call_PostSignalResource_615154; StackName: string;
          UniqueId: string; LogicalResourceId: string;
          Action: string = "SignalResource"; Status: string = "SUCCESS";
          Version: string = "2010-05-15"): Recallable =
  ## postSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   Action: string (required)
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  var query_615172 = newJObject()
  var formData_615173 = newJObject()
  add(formData_615173, "StackName", newJString(StackName))
  add(query_615172, "Action", newJString(Action))
  add(formData_615173, "UniqueId", newJString(UniqueId))
  add(formData_615173, "Status", newJString(Status))
  add(query_615172, "Version", newJString(Version))
  add(formData_615173, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_615171.call(nil, query_615172, nil, formData_615173, nil)

var postSignalResource* = Call_PostSignalResource_615154(
    name: "postSignalResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SignalResource",
    validator: validate_PostSignalResource_615155, base: "/",
    url: url_PostSignalResource_615156, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSignalResource_615135 = ref object of OpenApiRestCall_612658
proc url_GetSignalResource_615137(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSignalResource_615136(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  section = newJObject()
  var valid_615138 = query.getOrDefault("Status")
  valid_615138 = validateParameter(valid_615138, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_615138 != nil:
    section.add "Status", valid_615138
  var valid_615139 = query.getOrDefault("StackName")
  valid_615139 = validateParameter(valid_615139, JString, required = true,
                                 default = nil)
  if valid_615139 != nil:
    section.add "StackName", valid_615139
  var valid_615140 = query.getOrDefault("UniqueId")
  valid_615140 = validateParameter(valid_615140, JString, required = true,
                                 default = nil)
  if valid_615140 != nil:
    section.add "UniqueId", valid_615140
  var valid_615141 = query.getOrDefault("Action")
  valid_615141 = validateParameter(valid_615141, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_615141 != nil:
    section.add "Action", valid_615141
  var valid_615142 = query.getOrDefault("Version")
  valid_615142 = validateParameter(valid_615142, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615142 != nil:
    section.add "Version", valid_615142
  var valid_615143 = query.getOrDefault("LogicalResourceId")
  valid_615143 = validateParameter(valid_615143, JString, required = true,
                                 default = nil)
  if valid_615143 != nil:
    section.add "LogicalResourceId", valid_615143
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615144 = header.getOrDefault("X-Amz-Signature")
  valid_615144 = validateParameter(valid_615144, JString, required = false,
                                 default = nil)
  if valid_615144 != nil:
    section.add "X-Amz-Signature", valid_615144
  var valid_615145 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615145 = validateParameter(valid_615145, JString, required = false,
                                 default = nil)
  if valid_615145 != nil:
    section.add "X-Amz-Content-Sha256", valid_615145
  var valid_615146 = header.getOrDefault("X-Amz-Date")
  valid_615146 = validateParameter(valid_615146, JString, required = false,
                                 default = nil)
  if valid_615146 != nil:
    section.add "X-Amz-Date", valid_615146
  var valid_615147 = header.getOrDefault("X-Amz-Credential")
  valid_615147 = validateParameter(valid_615147, JString, required = false,
                                 default = nil)
  if valid_615147 != nil:
    section.add "X-Amz-Credential", valid_615147
  var valid_615148 = header.getOrDefault("X-Amz-Security-Token")
  valid_615148 = validateParameter(valid_615148, JString, required = false,
                                 default = nil)
  if valid_615148 != nil:
    section.add "X-Amz-Security-Token", valid_615148
  var valid_615149 = header.getOrDefault("X-Amz-Algorithm")
  valid_615149 = validateParameter(valid_615149, JString, required = false,
                                 default = nil)
  if valid_615149 != nil:
    section.add "X-Amz-Algorithm", valid_615149
  var valid_615150 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615150 = validateParameter(valid_615150, JString, required = false,
                                 default = nil)
  if valid_615150 != nil:
    section.add "X-Amz-SignedHeaders", valid_615150
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615151: Call_GetSignalResource_615135; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_615151.validator(path, query, header, formData, body)
  let scheme = call_615151.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615151.url(scheme.get, call_615151.host, call_615151.base,
                         call_615151.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615151, url, valid)

proc call*(call_615152: Call_GetSignalResource_615135; StackName: string;
          UniqueId: string; LogicalResourceId: string; Status: string = "SUCCESS";
          Action: string = "SignalResource"; Version: string = "2010-05-15"): Recallable =
  ## getSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  var query_615153 = newJObject()
  add(query_615153, "Status", newJString(Status))
  add(query_615153, "StackName", newJString(StackName))
  add(query_615153, "UniqueId", newJString(UniqueId))
  add(query_615153, "Action", newJString(Action))
  add(query_615153, "Version", newJString(Version))
  add(query_615153, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_615152.call(nil, query_615153, nil, nil, nil)

var getSignalResource* = Call_GetSignalResource_615135(name: "getSignalResource",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SignalResource", validator: validate_GetSignalResource_615136,
    base: "/", url: url_GetSignalResource_615137,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostStopStackSetOperation_615191 = ref object of OpenApiRestCall_612658
proc url_PostStopStackSetOperation_615193(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostStopStackSetOperation_615192(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615194 = query.getOrDefault("Action")
  valid_615194 = validateParameter(valid_615194, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_615194 != nil:
    section.add "Action", valid_615194
  var valid_615195 = query.getOrDefault("Version")
  valid_615195 = validateParameter(valid_615195, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615195 != nil:
    section.add "Version", valid_615195
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615196 = header.getOrDefault("X-Amz-Signature")
  valid_615196 = validateParameter(valid_615196, JString, required = false,
                                 default = nil)
  if valid_615196 != nil:
    section.add "X-Amz-Signature", valid_615196
  var valid_615197 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615197 = validateParameter(valid_615197, JString, required = false,
                                 default = nil)
  if valid_615197 != nil:
    section.add "X-Amz-Content-Sha256", valid_615197
  var valid_615198 = header.getOrDefault("X-Amz-Date")
  valid_615198 = validateParameter(valid_615198, JString, required = false,
                                 default = nil)
  if valid_615198 != nil:
    section.add "X-Amz-Date", valid_615198
  var valid_615199 = header.getOrDefault("X-Amz-Credential")
  valid_615199 = validateParameter(valid_615199, JString, required = false,
                                 default = nil)
  if valid_615199 != nil:
    section.add "X-Amz-Credential", valid_615199
  var valid_615200 = header.getOrDefault("X-Amz-Security-Token")
  valid_615200 = validateParameter(valid_615200, JString, required = false,
                                 default = nil)
  if valid_615200 != nil:
    section.add "X-Amz-Security-Token", valid_615200
  var valid_615201 = header.getOrDefault("X-Amz-Algorithm")
  valid_615201 = validateParameter(valid_615201, JString, required = false,
                                 default = nil)
  if valid_615201 != nil:
    section.add "X-Amz-Algorithm", valid_615201
  var valid_615202 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615202 = validateParameter(valid_615202, JString, required = false,
                                 default = nil)
  if valid_615202 != nil:
    section.add "X-Amz-SignedHeaders", valid_615202
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_615203 = formData.getOrDefault("OperationId")
  valid_615203 = validateParameter(valid_615203, JString, required = true,
                                 default = nil)
  if valid_615203 != nil:
    section.add "OperationId", valid_615203
  var valid_615204 = formData.getOrDefault("StackSetName")
  valid_615204 = validateParameter(valid_615204, JString, required = true,
                                 default = nil)
  if valid_615204 != nil:
    section.add "StackSetName", valid_615204
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615205: Call_PostStopStackSetOperation_615191; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_615205.validator(path, query, header, formData, body)
  let scheme = call_615205.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615205.url(scheme.get, call_615205.host, call_615205.base,
                         call_615205.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615205, url, valid)

proc call*(call_615206: Call_PostStopStackSetOperation_615191; OperationId: string;
          StackSetName: string; Action: string = "StopStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615207 = newJObject()
  var formData_615208 = newJObject()
  add(formData_615208, "OperationId", newJString(OperationId))
  add(formData_615208, "StackSetName", newJString(StackSetName))
  add(query_615207, "Action", newJString(Action))
  add(query_615207, "Version", newJString(Version))
  result = call_615206.call(nil, query_615207, nil, formData_615208, nil)

var postStopStackSetOperation* = Call_PostStopStackSetOperation_615191(
    name: "postStopStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_PostStopStackSetOperation_615192, base: "/",
    url: url_PostStopStackSetOperation_615193,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetStopStackSetOperation_615174 = ref object of OpenApiRestCall_612658
proc url_GetStopStackSetOperation_615176(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetStopStackSetOperation_615175(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_615177 = query.getOrDefault("OperationId")
  valid_615177 = validateParameter(valid_615177, JString, required = true,
                                 default = nil)
  if valid_615177 != nil:
    section.add "OperationId", valid_615177
  var valid_615178 = query.getOrDefault("StackSetName")
  valid_615178 = validateParameter(valid_615178, JString, required = true,
                                 default = nil)
  if valid_615178 != nil:
    section.add "StackSetName", valid_615178
  var valid_615179 = query.getOrDefault("Action")
  valid_615179 = validateParameter(valid_615179, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_615179 != nil:
    section.add "Action", valid_615179
  var valid_615180 = query.getOrDefault("Version")
  valid_615180 = validateParameter(valid_615180, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615180 != nil:
    section.add "Version", valid_615180
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615181 = header.getOrDefault("X-Amz-Signature")
  valid_615181 = validateParameter(valid_615181, JString, required = false,
                                 default = nil)
  if valid_615181 != nil:
    section.add "X-Amz-Signature", valid_615181
  var valid_615182 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615182 = validateParameter(valid_615182, JString, required = false,
                                 default = nil)
  if valid_615182 != nil:
    section.add "X-Amz-Content-Sha256", valid_615182
  var valid_615183 = header.getOrDefault("X-Amz-Date")
  valid_615183 = validateParameter(valid_615183, JString, required = false,
                                 default = nil)
  if valid_615183 != nil:
    section.add "X-Amz-Date", valid_615183
  var valid_615184 = header.getOrDefault("X-Amz-Credential")
  valid_615184 = validateParameter(valid_615184, JString, required = false,
                                 default = nil)
  if valid_615184 != nil:
    section.add "X-Amz-Credential", valid_615184
  var valid_615185 = header.getOrDefault("X-Amz-Security-Token")
  valid_615185 = validateParameter(valid_615185, JString, required = false,
                                 default = nil)
  if valid_615185 != nil:
    section.add "X-Amz-Security-Token", valid_615185
  var valid_615186 = header.getOrDefault("X-Amz-Algorithm")
  valid_615186 = validateParameter(valid_615186, JString, required = false,
                                 default = nil)
  if valid_615186 != nil:
    section.add "X-Amz-Algorithm", valid_615186
  var valid_615187 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615187 = validateParameter(valid_615187, JString, required = false,
                                 default = nil)
  if valid_615187 != nil:
    section.add "X-Amz-SignedHeaders", valid_615187
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615188: Call_GetStopStackSetOperation_615174; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_615188.validator(path, query, header, formData, body)
  let scheme = call_615188.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615188.url(scheme.get, call_615188.host, call_615188.base,
                         call_615188.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615188, url, valid)

proc call*(call_615189: Call_GetStopStackSetOperation_615174; OperationId: string;
          StackSetName: string; Action: string = "StopStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615190 = newJObject()
  add(query_615190, "OperationId", newJString(OperationId))
  add(query_615190, "StackSetName", newJString(StackSetName))
  add(query_615190, "Action", newJString(Action))
  add(query_615190, "Version", newJString(Version))
  result = call_615189.call(nil, query_615190, nil, nil, nil)

var getStopStackSetOperation* = Call_GetStopStackSetOperation_615174(
    name: "getStopStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_GetStopStackSetOperation_615175, base: "/",
    url: url_GetStopStackSetOperation_615176, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStack_615241 = ref object of OpenApiRestCall_612658
proc url_PostUpdateStack_615243(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStack_615242(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615244 = query.getOrDefault("Action")
  valid_615244 = validateParameter(valid_615244, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_615244 != nil:
    section.add "Action", valid_615244
  var valid_615245 = query.getOrDefault("Version")
  valid_615245 = validateParameter(valid_615245, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615245 != nil:
    section.add "Version", valid_615245
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615246 = header.getOrDefault("X-Amz-Signature")
  valid_615246 = validateParameter(valid_615246, JString, required = false,
                                 default = nil)
  if valid_615246 != nil:
    section.add "X-Amz-Signature", valid_615246
  var valid_615247 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615247 = validateParameter(valid_615247, JString, required = false,
                                 default = nil)
  if valid_615247 != nil:
    section.add "X-Amz-Content-Sha256", valid_615247
  var valid_615248 = header.getOrDefault("X-Amz-Date")
  valid_615248 = validateParameter(valid_615248, JString, required = false,
                                 default = nil)
  if valid_615248 != nil:
    section.add "X-Amz-Date", valid_615248
  var valid_615249 = header.getOrDefault("X-Amz-Credential")
  valid_615249 = validateParameter(valid_615249, JString, required = false,
                                 default = nil)
  if valid_615249 != nil:
    section.add "X-Amz-Credential", valid_615249
  var valid_615250 = header.getOrDefault("X-Amz-Security-Token")
  valid_615250 = validateParameter(valid_615250, JString, required = false,
                                 default = nil)
  if valid_615250 != nil:
    section.add "X-Amz-Security-Token", valid_615250
  var valid_615251 = header.getOrDefault("X-Amz-Algorithm")
  valid_615251 = validateParameter(valid_615251, JString, required = false,
                                 default = nil)
  if valid_615251 != nil:
    section.add "X-Amz-Algorithm", valid_615251
  var valid_615252 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615252 = validateParameter(valid_615252, JString, required = false,
                                 default = nil)
  if valid_615252 != nil:
    section.add "X-Amz-SignedHeaders", valid_615252
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  var valid_615253 = formData.getOrDefault("StackPolicyDuringUpdateURL")
  valid_615253 = validateParameter(valid_615253, JString, required = false,
                                 default = nil)
  if valid_615253 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_615253
  var valid_615254 = formData.getOrDefault("StackPolicyBody")
  valid_615254 = validateParameter(valid_615254, JString, required = false,
                                 default = nil)
  if valid_615254 != nil:
    section.add "StackPolicyBody", valid_615254
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_615255 = formData.getOrDefault("StackName")
  valid_615255 = validateParameter(valid_615255, JString, required = true,
                                 default = nil)
  if valid_615255 != nil:
    section.add "StackName", valid_615255
  var valid_615256 = formData.getOrDefault("UsePreviousTemplate")
  valid_615256 = validateParameter(valid_615256, JBool, required = false, default = nil)
  if valid_615256 != nil:
    section.add "UsePreviousTemplate", valid_615256
  var valid_615257 = formData.getOrDefault("StackPolicyURL")
  valid_615257 = validateParameter(valid_615257, JString, required = false,
                                 default = nil)
  if valid_615257 != nil:
    section.add "StackPolicyURL", valid_615257
  var valid_615258 = formData.getOrDefault("TemplateURL")
  valid_615258 = validateParameter(valid_615258, JString, required = false,
                                 default = nil)
  if valid_615258 != nil:
    section.add "TemplateURL", valid_615258
  var valid_615259 = formData.getOrDefault("TemplateBody")
  valid_615259 = validateParameter(valid_615259, JString, required = false,
                                 default = nil)
  if valid_615259 != nil:
    section.add "TemplateBody", valid_615259
  var valid_615260 = formData.getOrDefault("RoleARN")
  valid_615260 = validateParameter(valid_615260, JString, required = false,
                                 default = nil)
  if valid_615260 != nil:
    section.add "RoleARN", valid_615260
  var valid_615261 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_615261 = validateParameter(valid_615261, JArray, required = false,
                                 default = nil)
  if valid_615261 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_615261
  var valid_615262 = formData.getOrDefault("NotificationARNs")
  valid_615262 = validateParameter(valid_615262, JArray, required = false,
                                 default = nil)
  if valid_615262 != nil:
    section.add "NotificationARNs", valid_615262
  var valid_615263 = formData.getOrDefault("ClientRequestToken")
  valid_615263 = validateParameter(valid_615263, JString, required = false,
                                 default = nil)
  if valid_615263 != nil:
    section.add "ClientRequestToken", valid_615263
  var valid_615264 = formData.getOrDefault("Capabilities")
  valid_615264 = validateParameter(valid_615264, JArray, required = false,
                                 default = nil)
  if valid_615264 != nil:
    section.add "Capabilities", valid_615264
  var valid_615265 = formData.getOrDefault("Tags")
  valid_615265 = validateParameter(valid_615265, JArray, required = false,
                                 default = nil)
  if valid_615265 != nil:
    section.add "Tags", valid_615265
  var valid_615266 = formData.getOrDefault("Parameters")
  valid_615266 = validateParameter(valid_615266, JArray, required = false,
                                 default = nil)
  if valid_615266 != nil:
    section.add "Parameters", valid_615266
  var valid_615267 = formData.getOrDefault("ResourceTypes")
  valid_615267 = validateParameter(valid_615267, JArray, required = false,
                                 default = nil)
  if valid_615267 != nil:
    section.add "ResourceTypes", valid_615267
  var valid_615268 = formData.getOrDefault("StackPolicyDuringUpdateBody")
  valid_615268 = validateParameter(valid_615268, JString, required = false,
                                 default = nil)
  if valid_615268 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_615268
  var valid_615269 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_615269 = validateParameter(valid_615269, JString, required = false,
                                 default = nil)
  if valid_615269 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_615269
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615270: Call_PostUpdateStack_615241; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_615270.validator(path, query, header, formData, body)
  let scheme = call_615270.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615270.url(scheme.get, call_615270.host, call_615270.base,
                         call_615270.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615270, url, valid)

proc call*(call_615271: Call_PostUpdateStack_615241; StackName: string;
          StackPolicyDuringUpdateURL: string = ""; StackPolicyBody: string = "";
          UsePreviousTemplate: bool = false; StackPolicyURL: string = "";
          TemplateURL: string = ""; TemplateBody: string = ""; RoleARN: string = "";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; ClientRequestToken: string = "";
          Action: string = "UpdateStack"; Capabilities: JsonNode = nil;
          Tags: JsonNode = nil; Parameters: JsonNode = nil;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          StackPolicyDuringUpdateBody: string = "";
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_615272 = newJObject()
  var formData_615273 = newJObject()
  add(formData_615273, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(formData_615273, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_615273, "StackName", newJString(StackName))
  add(formData_615273, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(formData_615273, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_615273, "TemplateURL", newJString(TemplateURL))
  add(formData_615273, "TemplateBody", newJString(TemplateBody))
  add(formData_615273, "RoleARN", newJString(RoleARN))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_615273.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_615273.add "NotificationARNs", NotificationARNs
  add(formData_615273, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_615272, "Action", newJString(Action))
  if Capabilities != nil:
    formData_615273.add "Capabilities", Capabilities
  if Tags != nil:
    formData_615273.add "Tags", Tags
  if Parameters != nil:
    formData_615273.add "Parameters", Parameters
  if ResourceTypes != nil:
    formData_615273.add "ResourceTypes", ResourceTypes
  add(query_615272, "Version", newJString(Version))
  add(formData_615273, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(formData_615273, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_615271.call(nil, query_615272, nil, formData_615273, nil)

var postUpdateStack* = Call_PostUpdateStack_615241(name: "postUpdateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_PostUpdateStack_615242,
    base: "/", url: url_PostUpdateStack_615243, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStack_615209 = ref object of OpenApiRestCall_612658
proc url_GetUpdateStack_615211(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStack_615210(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   Action: JString (required)
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_615212 = query.getOrDefault("ResourceTypes")
  valid_615212 = validateParameter(valid_615212, JArray, required = false,
                                 default = nil)
  if valid_615212 != nil:
    section.add "ResourceTypes", valid_615212
  var valid_615213 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_615213 = validateParameter(valid_615213, JString, required = false,
                                 default = nil)
  if valid_615213 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_615213
  var valid_615214 = query.getOrDefault("Parameters")
  valid_615214 = validateParameter(valid_615214, JArray, required = false,
                                 default = nil)
  if valid_615214 != nil:
    section.add "Parameters", valid_615214
  var valid_615215 = query.getOrDefault("Tags")
  valid_615215 = validateParameter(valid_615215, JArray, required = false,
                                 default = nil)
  if valid_615215 != nil:
    section.add "Tags", valid_615215
  var valid_615216 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_615216 = validateParameter(valid_615216, JArray, required = false,
                                 default = nil)
  if valid_615216 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_615216
  var valid_615217 = query.getOrDefault("StackPolicyDuringUpdateURL")
  valid_615217 = validateParameter(valid_615217, JString, required = false,
                                 default = nil)
  if valid_615217 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_615217
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_615218 = query.getOrDefault("StackName")
  valid_615218 = validateParameter(valid_615218, JString, required = true,
                                 default = nil)
  if valid_615218 != nil:
    section.add "StackName", valid_615218
  var valid_615219 = query.getOrDefault("UsePreviousTemplate")
  valid_615219 = validateParameter(valid_615219, JBool, required = false, default = nil)
  if valid_615219 != nil:
    section.add "UsePreviousTemplate", valid_615219
  var valid_615220 = query.getOrDefault("StackPolicyBody")
  valid_615220 = validateParameter(valid_615220, JString, required = false,
                                 default = nil)
  if valid_615220 != nil:
    section.add "StackPolicyBody", valid_615220
  var valid_615221 = query.getOrDefault("TemplateBody")
  valid_615221 = validateParameter(valid_615221, JString, required = false,
                                 default = nil)
  if valid_615221 != nil:
    section.add "TemplateBody", valid_615221
  var valid_615222 = query.getOrDefault("NotificationARNs")
  valid_615222 = validateParameter(valid_615222, JArray, required = false,
                                 default = nil)
  if valid_615222 != nil:
    section.add "NotificationARNs", valid_615222
  var valid_615223 = query.getOrDefault("StackPolicyURL")
  valid_615223 = validateParameter(valid_615223, JString, required = false,
                                 default = nil)
  if valid_615223 != nil:
    section.add "StackPolicyURL", valid_615223
  var valid_615224 = query.getOrDefault("Action")
  valid_615224 = validateParameter(valid_615224, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_615224 != nil:
    section.add "Action", valid_615224
  var valid_615225 = query.getOrDefault("StackPolicyDuringUpdateBody")
  valid_615225 = validateParameter(valid_615225, JString, required = false,
                                 default = nil)
  if valid_615225 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_615225
  var valid_615226 = query.getOrDefault("ClientRequestToken")
  valid_615226 = validateParameter(valid_615226, JString, required = false,
                                 default = nil)
  if valid_615226 != nil:
    section.add "ClientRequestToken", valid_615226
  var valid_615227 = query.getOrDefault("TemplateURL")
  valid_615227 = validateParameter(valid_615227, JString, required = false,
                                 default = nil)
  if valid_615227 != nil:
    section.add "TemplateURL", valid_615227
  var valid_615228 = query.getOrDefault("Version")
  valid_615228 = validateParameter(valid_615228, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615228 != nil:
    section.add "Version", valid_615228
  var valid_615229 = query.getOrDefault("Capabilities")
  valid_615229 = validateParameter(valid_615229, JArray, required = false,
                                 default = nil)
  if valid_615229 != nil:
    section.add "Capabilities", valid_615229
  var valid_615230 = query.getOrDefault("RoleARN")
  valid_615230 = validateParameter(valid_615230, JString, required = false,
                                 default = nil)
  if valid_615230 != nil:
    section.add "RoleARN", valid_615230
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615231 = header.getOrDefault("X-Amz-Signature")
  valid_615231 = validateParameter(valid_615231, JString, required = false,
                                 default = nil)
  if valid_615231 != nil:
    section.add "X-Amz-Signature", valid_615231
  var valid_615232 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615232 = validateParameter(valid_615232, JString, required = false,
                                 default = nil)
  if valid_615232 != nil:
    section.add "X-Amz-Content-Sha256", valid_615232
  var valid_615233 = header.getOrDefault("X-Amz-Date")
  valid_615233 = validateParameter(valid_615233, JString, required = false,
                                 default = nil)
  if valid_615233 != nil:
    section.add "X-Amz-Date", valid_615233
  var valid_615234 = header.getOrDefault("X-Amz-Credential")
  valid_615234 = validateParameter(valid_615234, JString, required = false,
                                 default = nil)
  if valid_615234 != nil:
    section.add "X-Amz-Credential", valid_615234
  var valid_615235 = header.getOrDefault("X-Amz-Security-Token")
  valid_615235 = validateParameter(valid_615235, JString, required = false,
                                 default = nil)
  if valid_615235 != nil:
    section.add "X-Amz-Security-Token", valid_615235
  var valid_615236 = header.getOrDefault("X-Amz-Algorithm")
  valid_615236 = validateParameter(valid_615236, JString, required = false,
                                 default = nil)
  if valid_615236 != nil:
    section.add "X-Amz-Algorithm", valid_615236
  var valid_615237 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615237 = validateParameter(valid_615237, JString, required = false,
                                 default = nil)
  if valid_615237 != nil:
    section.add "X-Amz-SignedHeaders", valid_615237
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615238: Call_GetUpdateStack_615209; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_615238.validator(path, query, header, formData, body)
  let scheme = call_615238.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615238.url(scheme.get, call_615238.host, call_615238.base,
                         call_615238.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615238, url, valid)

proc call*(call_615239: Call_GetUpdateStack_615209; StackName: string;
          ResourceTypes: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          StackPolicyDuringUpdateURL: string = "";
          UsePreviousTemplate: bool = false; StackPolicyBody: string = "";
          TemplateBody: string = ""; NotificationARNs: JsonNode = nil;
          StackPolicyURL: string = ""; Action: string = "UpdateStack";
          StackPolicyDuringUpdateBody: string = ""; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil; RoleARN: string = ""): Recallable =
  ## getUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   Action: string (required)
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_615240 = newJObject()
  if ResourceTypes != nil:
    query_615240.add "ResourceTypes", ResourceTypes
  add(query_615240, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_615240.add "Parameters", Parameters
  if Tags != nil:
    query_615240.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_615240.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_615240, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(query_615240, "StackName", newJString(StackName))
  add(query_615240, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_615240, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_615240, "TemplateBody", newJString(TemplateBody))
  if NotificationARNs != nil:
    query_615240.add "NotificationARNs", NotificationARNs
  add(query_615240, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_615240, "Action", newJString(Action))
  add(query_615240, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(query_615240, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_615240, "TemplateURL", newJString(TemplateURL))
  add(query_615240, "Version", newJString(Version))
  if Capabilities != nil:
    query_615240.add "Capabilities", Capabilities
  add(query_615240, "RoleARN", newJString(RoleARN))
  result = call_615239.call(nil, query_615240, nil, nil, nil)

var getUpdateStack* = Call_GetUpdateStack_615209(name: "getUpdateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_GetUpdateStack_615210,
    base: "/", url: url_GetUpdateStack_615211, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackInstances_615299 = ref object of OpenApiRestCall_612658
proc url_PostUpdateStackInstances_615301(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackInstances_615300(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615302 = query.getOrDefault("Action")
  valid_615302 = validateParameter(valid_615302, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_615302 != nil:
    section.add "Action", valid_615302
  var valid_615303 = query.getOrDefault("Version")
  valid_615303 = validateParameter(valid_615303, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615303 != nil:
    section.add "Version", valid_615303
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615304 = header.getOrDefault("X-Amz-Signature")
  valid_615304 = validateParameter(valid_615304, JString, required = false,
                                 default = nil)
  if valid_615304 != nil:
    section.add "X-Amz-Signature", valid_615304
  var valid_615305 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615305 = validateParameter(valid_615305, JString, required = false,
                                 default = nil)
  if valid_615305 != nil:
    section.add "X-Amz-Content-Sha256", valid_615305
  var valid_615306 = header.getOrDefault("X-Amz-Date")
  valid_615306 = validateParameter(valid_615306, JString, required = false,
                                 default = nil)
  if valid_615306 != nil:
    section.add "X-Amz-Date", valid_615306
  var valid_615307 = header.getOrDefault("X-Amz-Credential")
  valid_615307 = validateParameter(valid_615307, JString, required = false,
                                 default = nil)
  if valid_615307 != nil:
    section.add "X-Amz-Credential", valid_615307
  var valid_615308 = header.getOrDefault("X-Amz-Security-Token")
  valid_615308 = validateParameter(valid_615308, JString, required = false,
                                 default = nil)
  if valid_615308 != nil:
    section.add "X-Amz-Security-Token", valid_615308
  var valid_615309 = header.getOrDefault("X-Amz-Algorithm")
  valid_615309 = validateParameter(valid_615309, JString, required = false,
                                 default = nil)
  if valid_615309 != nil:
    section.add "X-Amz-Algorithm", valid_615309
  var valid_615310 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615310 = validateParameter(valid_615310, JString, required = false,
                                 default = nil)
  if valid_615310 != nil:
    section.add "X-Amz-SignedHeaders", valid_615310
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_615311 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_615311 = validateParameter(valid_615311, JString, required = false,
                                 default = nil)
  if valid_615311 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_615311
  var valid_615312 = formData.getOrDefault("OperationId")
  valid_615312 = validateParameter(valid_615312, JString, required = false,
                                 default = nil)
  if valid_615312 != nil:
    section.add "OperationId", valid_615312
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_615313 = formData.getOrDefault("StackSetName")
  valid_615313 = validateParameter(valid_615313, JString, required = true,
                                 default = nil)
  if valid_615313 != nil:
    section.add "StackSetName", valid_615313
  var valid_615314 = formData.getOrDefault("ParameterOverrides")
  valid_615314 = validateParameter(valid_615314, JArray, required = false,
                                 default = nil)
  if valid_615314 != nil:
    section.add "ParameterOverrides", valid_615314
  var valid_615315 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_615315 = validateParameter(valid_615315, JArray, required = false,
                                 default = nil)
  if valid_615315 != nil:
    section.add "OperationPreferences.RegionOrder", valid_615315
  var valid_615316 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_615316 = validateParameter(valid_615316, JString, required = false,
                                 default = nil)
  if valid_615316 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_615316
  var valid_615317 = formData.getOrDefault("Accounts")
  valid_615317 = validateParameter(valid_615317, JArray, required = true, default = nil)
  if valid_615317 != nil:
    section.add "Accounts", valid_615317
  var valid_615318 = formData.getOrDefault("Regions")
  valid_615318 = validateParameter(valid_615318, JArray, required = true, default = nil)
  if valid_615318 != nil:
    section.add "Regions", valid_615318
  var valid_615319 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_615319 = validateParameter(valid_615319, JString, required = false,
                                 default = nil)
  if valid_615319 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_615319
  var valid_615320 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_615320 = validateParameter(valid_615320, JString, required = false,
                                 default = nil)
  if valid_615320 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_615320
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615321: Call_PostUpdateStackInstances_615299; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_615321.validator(path, query, header, formData, body)
  let scheme = call_615321.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615321.url(scheme.get, call_615321.host, call_615321.base,
                         call_615321.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615321, url, valid)

proc call*(call_615322: Call_PostUpdateStackInstances_615299; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; ParameterOverrides: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "UpdateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_615323 = newJObject()
  var formData_615324 = newJObject()
  add(formData_615324, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_615324, "OperationId", newJString(OperationId))
  add(formData_615324, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    formData_615324.add "ParameterOverrides", ParameterOverrides
  if OperationPreferencesRegionOrder != nil:
    formData_615324.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_615324, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_615324.add "Accounts", Accounts
  if Regions != nil:
    formData_615324.add "Regions", Regions
  add(query_615323, "Action", newJString(Action))
  add(formData_615324, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_615323, "Version", newJString(Version))
  add(formData_615324, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_615322.call(nil, query_615323, nil, formData_615324, nil)

var postUpdateStackInstances* = Call_PostUpdateStackInstances_615299(
    name: "postUpdateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_PostUpdateStackInstances_615300, base: "/",
    url: url_PostUpdateStackInstances_615301, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackInstances_615274 = ref object of OpenApiRestCall_612658
proc url_GetUpdateStackInstances_615276(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackInstances_615275(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_615277 = query.getOrDefault("OperationId")
  valid_615277 = validateParameter(valid_615277, JString, required = false,
                                 default = nil)
  if valid_615277 != nil:
    section.add "OperationId", valid_615277
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_615278 = query.getOrDefault("StackSetName")
  valid_615278 = validateParameter(valid_615278, JString, required = true,
                                 default = nil)
  if valid_615278 != nil:
    section.add "StackSetName", valid_615278
  var valid_615279 = query.getOrDefault("ParameterOverrides")
  valid_615279 = validateParameter(valid_615279, JArray, required = false,
                                 default = nil)
  if valid_615279 != nil:
    section.add "ParameterOverrides", valid_615279
  var valid_615280 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_615280 = validateParameter(valid_615280, JString, required = false,
                                 default = nil)
  if valid_615280 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_615280
  var valid_615281 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_615281 = validateParameter(valid_615281, JString, required = false,
                                 default = nil)
  if valid_615281 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_615281
  var valid_615282 = query.getOrDefault("Action")
  valid_615282 = validateParameter(valid_615282, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_615282 != nil:
    section.add "Action", valid_615282
  var valid_615283 = query.getOrDefault("Regions")
  valid_615283 = validateParameter(valid_615283, JArray, required = true, default = nil)
  if valid_615283 != nil:
    section.add "Regions", valid_615283
  var valid_615284 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_615284 = validateParameter(valid_615284, JArray, required = false,
                                 default = nil)
  if valid_615284 != nil:
    section.add "OperationPreferences.RegionOrder", valid_615284
  var valid_615285 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_615285 = validateParameter(valid_615285, JString, required = false,
                                 default = nil)
  if valid_615285 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_615285
  var valid_615286 = query.getOrDefault("Accounts")
  valid_615286 = validateParameter(valid_615286, JArray, required = true, default = nil)
  if valid_615286 != nil:
    section.add "Accounts", valid_615286
  var valid_615287 = query.getOrDefault("Version")
  valid_615287 = validateParameter(valid_615287, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615287 != nil:
    section.add "Version", valid_615287
  var valid_615288 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_615288 = validateParameter(valid_615288, JString, required = false,
                                 default = nil)
  if valid_615288 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_615288
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615289 = header.getOrDefault("X-Amz-Signature")
  valid_615289 = validateParameter(valid_615289, JString, required = false,
                                 default = nil)
  if valid_615289 != nil:
    section.add "X-Amz-Signature", valid_615289
  var valid_615290 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615290 = validateParameter(valid_615290, JString, required = false,
                                 default = nil)
  if valid_615290 != nil:
    section.add "X-Amz-Content-Sha256", valid_615290
  var valid_615291 = header.getOrDefault("X-Amz-Date")
  valid_615291 = validateParameter(valid_615291, JString, required = false,
                                 default = nil)
  if valid_615291 != nil:
    section.add "X-Amz-Date", valid_615291
  var valid_615292 = header.getOrDefault("X-Amz-Credential")
  valid_615292 = validateParameter(valid_615292, JString, required = false,
                                 default = nil)
  if valid_615292 != nil:
    section.add "X-Amz-Credential", valid_615292
  var valid_615293 = header.getOrDefault("X-Amz-Security-Token")
  valid_615293 = validateParameter(valid_615293, JString, required = false,
                                 default = nil)
  if valid_615293 != nil:
    section.add "X-Amz-Security-Token", valid_615293
  var valid_615294 = header.getOrDefault("X-Amz-Algorithm")
  valid_615294 = validateParameter(valid_615294, JString, required = false,
                                 default = nil)
  if valid_615294 != nil:
    section.add "X-Amz-Algorithm", valid_615294
  var valid_615295 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615295 = validateParameter(valid_615295, JString, required = false,
                                 default = nil)
  if valid_615295 != nil:
    section.add "X-Amz-SignedHeaders", valid_615295
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615296: Call_GetUpdateStackInstances_615274; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_615296.validator(path, query, header, formData, body)
  let scheme = call_615296.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615296.url(scheme.get, call_615296.host, call_615296.base,
                         call_615296.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615296, url, valid)

proc call*(call_615297: Call_GetUpdateStackInstances_615274; StackSetName: string;
          Regions: JsonNode; Accounts: JsonNode; OperationId: string = "";
          ParameterOverrides: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "UpdateStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_615298 = newJObject()
  add(query_615298, "OperationId", newJString(OperationId))
  add(query_615298, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    query_615298.add "ParameterOverrides", ParameterOverrides
  add(query_615298, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_615298, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_615298, "Action", newJString(Action))
  if Regions != nil:
    query_615298.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_615298.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_615298, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_615298.add "Accounts", Accounts
  add(query_615298, "Version", newJString(Version))
  add(query_615298, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_615297.call(nil, query_615298, nil, nil, nil)

var getUpdateStackInstances* = Call_GetUpdateStackInstances_615274(
    name: "getUpdateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_GetUpdateStackInstances_615275, base: "/",
    url: url_GetUpdateStackInstances_615276, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackSet_615358 = ref object of OpenApiRestCall_612658
proc url_PostUpdateStackSet_615360(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackSet_615359(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615361 = query.getOrDefault("Action")
  valid_615361 = validateParameter(valid_615361, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_615361 != nil:
    section.add "Action", valid_615361
  var valid_615362 = query.getOrDefault("Version")
  valid_615362 = validateParameter(valid_615362, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615362 != nil:
    section.add "Version", valid_615362
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615363 = header.getOrDefault("X-Amz-Signature")
  valid_615363 = validateParameter(valid_615363, JString, required = false,
                                 default = nil)
  if valid_615363 != nil:
    section.add "X-Amz-Signature", valid_615363
  var valid_615364 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615364 = validateParameter(valid_615364, JString, required = false,
                                 default = nil)
  if valid_615364 != nil:
    section.add "X-Amz-Content-Sha256", valid_615364
  var valid_615365 = header.getOrDefault("X-Amz-Date")
  valid_615365 = validateParameter(valid_615365, JString, required = false,
                                 default = nil)
  if valid_615365 != nil:
    section.add "X-Amz-Date", valid_615365
  var valid_615366 = header.getOrDefault("X-Amz-Credential")
  valid_615366 = validateParameter(valid_615366, JString, required = false,
                                 default = nil)
  if valid_615366 != nil:
    section.add "X-Amz-Credential", valid_615366
  var valid_615367 = header.getOrDefault("X-Amz-Security-Token")
  valid_615367 = validateParameter(valid_615367, JString, required = false,
                                 default = nil)
  if valid_615367 != nil:
    section.add "X-Amz-Security-Token", valid_615367
  var valid_615368 = header.getOrDefault("X-Amz-Algorithm")
  valid_615368 = validateParameter(valid_615368, JString, required = false,
                                 default = nil)
  if valid_615368 != nil:
    section.add "X-Amz-Algorithm", valid_615368
  var valid_615369 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615369 = validateParameter(valid_615369, JString, required = false,
                                 default = nil)
  if valid_615369 != nil:
    section.add "X-Amz-SignedHeaders", valid_615369
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_615370 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_615370 = validateParameter(valid_615370, JString, required = false,
                                 default = nil)
  if valid_615370 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_615370
  var valid_615371 = formData.getOrDefault("OperationId")
  valid_615371 = validateParameter(valid_615371, JString, required = false,
                                 default = nil)
  if valid_615371 != nil:
    section.add "OperationId", valid_615371
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_615372 = formData.getOrDefault("StackSetName")
  valid_615372 = validateParameter(valid_615372, JString, required = true,
                                 default = nil)
  if valid_615372 != nil:
    section.add "StackSetName", valid_615372
  var valid_615373 = formData.getOrDefault("AdministrationRoleARN")
  valid_615373 = validateParameter(valid_615373, JString, required = false,
                                 default = nil)
  if valid_615373 != nil:
    section.add "AdministrationRoleARN", valid_615373
  var valid_615374 = formData.getOrDefault("Description")
  valid_615374 = validateParameter(valid_615374, JString, required = false,
                                 default = nil)
  if valid_615374 != nil:
    section.add "Description", valid_615374
  var valid_615375 = formData.getOrDefault("UsePreviousTemplate")
  valid_615375 = validateParameter(valid_615375, JBool, required = false, default = nil)
  if valid_615375 != nil:
    section.add "UsePreviousTemplate", valid_615375
  var valid_615376 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_615376 = validateParameter(valid_615376, JArray, required = false,
                                 default = nil)
  if valid_615376 != nil:
    section.add "OperationPreferences.RegionOrder", valid_615376
  var valid_615377 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_615377 = validateParameter(valid_615377, JString, required = false,
                                 default = nil)
  if valid_615377 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_615377
  var valid_615378 = formData.getOrDefault("Accounts")
  valid_615378 = validateParameter(valid_615378, JArray, required = false,
                                 default = nil)
  if valid_615378 != nil:
    section.add "Accounts", valid_615378
  var valid_615379 = formData.getOrDefault("TemplateURL")
  valid_615379 = validateParameter(valid_615379, JString, required = false,
                                 default = nil)
  if valid_615379 != nil:
    section.add "TemplateURL", valid_615379
  var valid_615380 = formData.getOrDefault("Regions")
  valid_615380 = validateParameter(valid_615380, JArray, required = false,
                                 default = nil)
  if valid_615380 != nil:
    section.add "Regions", valid_615380
  var valid_615381 = formData.getOrDefault("TemplateBody")
  valid_615381 = validateParameter(valid_615381, JString, required = false,
                                 default = nil)
  if valid_615381 != nil:
    section.add "TemplateBody", valid_615381
  var valid_615382 = formData.getOrDefault("Capabilities")
  valid_615382 = validateParameter(valid_615382, JArray, required = false,
                                 default = nil)
  if valid_615382 != nil:
    section.add "Capabilities", valid_615382
  var valid_615383 = formData.getOrDefault("Tags")
  valid_615383 = validateParameter(valid_615383, JArray, required = false,
                                 default = nil)
  if valid_615383 != nil:
    section.add "Tags", valid_615383
  var valid_615384 = formData.getOrDefault("Parameters")
  valid_615384 = validateParameter(valid_615384, JArray, required = false,
                                 default = nil)
  if valid_615384 != nil:
    section.add "Parameters", valid_615384
  var valid_615385 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_615385 = validateParameter(valid_615385, JString, required = false,
                                 default = nil)
  if valid_615385 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_615385
  var valid_615386 = formData.getOrDefault("ExecutionRoleName")
  valid_615386 = validateParameter(valid_615386, JString, required = false,
                                 default = nil)
  if valid_615386 != nil:
    section.add "ExecutionRoleName", valid_615386
  var valid_615387 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_615387 = validateParameter(valid_615387, JString, required = false,
                                 default = nil)
  if valid_615387 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_615387
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615388: Call_PostUpdateStackSet_615358; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_615388.validator(path, query, header, formData, body)
  let scheme = call_615388.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615388.url(scheme.get, call_615388.host, call_615388.base,
                         call_615388.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615388, url, valid)

proc call*(call_615389: Call_PostUpdateStackSet_615358; StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; AdministrationRoleARN: string = "";
          Description: string = ""; UsePreviousTemplate: bool = false;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Accounts: JsonNode = nil; TemplateURL: string = ""; Regions: JsonNode = nil;
          TemplateBody: string = ""; Action: string = "UpdateStackSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15"; ExecutionRoleName: string = "";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_615390 = newJObject()
  var formData_615391 = newJObject()
  add(formData_615391, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_615391, "OperationId", newJString(OperationId))
  add(formData_615391, "StackSetName", newJString(StackSetName))
  add(formData_615391, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_615391, "Description", newJString(Description))
  add(formData_615391, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if OperationPreferencesRegionOrder != nil:
    formData_615391.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_615391, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_615391.add "Accounts", Accounts
  add(formData_615391, "TemplateURL", newJString(TemplateURL))
  if Regions != nil:
    formData_615391.add "Regions", Regions
  add(formData_615391, "TemplateBody", newJString(TemplateBody))
  add(query_615390, "Action", newJString(Action))
  if Capabilities != nil:
    formData_615391.add "Capabilities", Capabilities
  if Tags != nil:
    formData_615391.add "Tags", Tags
  if Parameters != nil:
    formData_615391.add "Parameters", Parameters
  add(formData_615391, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_615390, "Version", newJString(Version))
  add(formData_615391, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(formData_615391, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_615389.call(nil, query_615390, nil, formData_615391, nil)

var postUpdateStackSet* = Call_PostUpdateStackSet_615358(
    name: "postUpdateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackSet",
    validator: validate_PostUpdateStackSet_615359, base: "/",
    url: url_PostUpdateStackSet_615360, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackSet_615325 = ref object of OpenApiRestCall_612658
proc url_GetUpdateStackSet_615327(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackSet_615326(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_615328 = query.getOrDefault("OperationId")
  valid_615328 = validateParameter(valid_615328, JString, required = false,
                                 default = nil)
  if valid_615328 != nil:
    section.add "OperationId", valid_615328
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_615329 = query.getOrDefault("StackSetName")
  valid_615329 = validateParameter(valid_615329, JString, required = true,
                                 default = nil)
  if valid_615329 != nil:
    section.add "StackSetName", valid_615329
  var valid_615330 = query.getOrDefault("Parameters")
  valid_615330 = validateParameter(valid_615330, JArray, required = false,
                                 default = nil)
  if valid_615330 != nil:
    section.add "Parameters", valid_615330
  var valid_615331 = query.getOrDefault("Tags")
  valid_615331 = validateParameter(valid_615331, JArray, required = false,
                                 default = nil)
  if valid_615331 != nil:
    section.add "Tags", valid_615331
  var valid_615332 = query.getOrDefault("ExecutionRoleName")
  valid_615332 = validateParameter(valid_615332, JString, required = false,
                                 default = nil)
  if valid_615332 != nil:
    section.add "ExecutionRoleName", valid_615332
  var valid_615333 = query.getOrDefault("UsePreviousTemplate")
  valid_615333 = validateParameter(valid_615333, JBool, required = false, default = nil)
  if valid_615333 != nil:
    section.add "UsePreviousTemplate", valid_615333
  var valid_615334 = query.getOrDefault("TemplateBody")
  valid_615334 = validateParameter(valid_615334, JString, required = false,
                                 default = nil)
  if valid_615334 != nil:
    section.add "TemplateBody", valid_615334
  var valid_615335 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_615335 = validateParameter(valid_615335, JString, required = false,
                                 default = nil)
  if valid_615335 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_615335
  var valid_615336 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_615336 = validateParameter(valid_615336, JString, required = false,
                                 default = nil)
  if valid_615336 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_615336
  var valid_615337 = query.getOrDefault("AdministrationRoleARN")
  valid_615337 = validateParameter(valid_615337, JString, required = false,
                                 default = nil)
  if valid_615337 != nil:
    section.add "AdministrationRoleARN", valid_615337
  var valid_615338 = query.getOrDefault("Action")
  valid_615338 = validateParameter(valid_615338, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_615338 != nil:
    section.add "Action", valid_615338
  var valid_615339 = query.getOrDefault("Description")
  valid_615339 = validateParameter(valid_615339, JString, required = false,
                                 default = nil)
  if valid_615339 != nil:
    section.add "Description", valid_615339
  var valid_615340 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_615340 = validateParameter(valid_615340, JArray, required = false,
                                 default = nil)
  if valid_615340 != nil:
    section.add "OperationPreferences.RegionOrder", valid_615340
  var valid_615341 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_615341 = validateParameter(valid_615341, JString, required = false,
                                 default = nil)
  if valid_615341 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_615341
  var valid_615342 = query.getOrDefault("Regions")
  valid_615342 = validateParameter(valid_615342, JArray, required = false,
                                 default = nil)
  if valid_615342 != nil:
    section.add "Regions", valid_615342
  var valid_615343 = query.getOrDefault("TemplateURL")
  valid_615343 = validateParameter(valid_615343, JString, required = false,
                                 default = nil)
  if valid_615343 != nil:
    section.add "TemplateURL", valid_615343
  var valid_615344 = query.getOrDefault("Accounts")
  valid_615344 = validateParameter(valid_615344, JArray, required = false,
                                 default = nil)
  if valid_615344 != nil:
    section.add "Accounts", valid_615344
  var valid_615345 = query.getOrDefault("Version")
  valid_615345 = validateParameter(valid_615345, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615345 != nil:
    section.add "Version", valid_615345
  var valid_615346 = query.getOrDefault("Capabilities")
  valid_615346 = validateParameter(valid_615346, JArray, required = false,
                                 default = nil)
  if valid_615346 != nil:
    section.add "Capabilities", valid_615346
  var valid_615347 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_615347 = validateParameter(valid_615347, JString, required = false,
                                 default = nil)
  if valid_615347 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_615347
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615348 = header.getOrDefault("X-Amz-Signature")
  valid_615348 = validateParameter(valid_615348, JString, required = false,
                                 default = nil)
  if valid_615348 != nil:
    section.add "X-Amz-Signature", valid_615348
  var valid_615349 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615349 = validateParameter(valid_615349, JString, required = false,
                                 default = nil)
  if valid_615349 != nil:
    section.add "X-Amz-Content-Sha256", valid_615349
  var valid_615350 = header.getOrDefault("X-Amz-Date")
  valid_615350 = validateParameter(valid_615350, JString, required = false,
                                 default = nil)
  if valid_615350 != nil:
    section.add "X-Amz-Date", valid_615350
  var valid_615351 = header.getOrDefault("X-Amz-Credential")
  valid_615351 = validateParameter(valid_615351, JString, required = false,
                                 default = nil)
  if valid_615351 != nil:
    section.add "X-Amz-Credential", valid_615351
  var valid_615352 = header.getOrDefault("X-Amz-Security-Token")
  valid_615352 = validateParameter(valid_615352, JString, required = false,
                                 default = nil)
  if valid_615352 != nil:
    section.add "X-Amz-Security-Token", valid_615352
  var valid_615353 = header.getOrDefault("X-Amz-Algorithm")
  valid_615353 = validateParameter(valid_615353, JString, required = false,
                                 default = nil)
  if valid_615353 != nil:
    section.add "X-Amz-Algorithm", valid_615353
  var valid_615354 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615354 = validateParameter(valid_615354, JString, required = false,
                                 default = nil)
  if valid_615354 != nil:
    section.add "X-Amz-SignedHeaders", valid_615354
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615355: Call_GetUpdateStackSet_615325; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_615355.validator(path, query, header, formData, body)
  let scheme = call_615355.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615355.url(scheme.get, call_615355.host, call_615355.base,
                         call_615355.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615355, url, valid)

proc call*(call_615356: Call_GetUpdateStackSet_615325; StackSetName: string;
          OperationId: string = ""; Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ExecutionRoleName: string = ""; UsePreviousTemplate: bool = false;
          TemplateBody: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          AdministrationRoleARN: string = ""; Action: string = "UpdateStackSet";
          Description: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Regions: JsonNode = nil; TemplateURL: string = ""; Accounts: JsonNode = nil;
          Version: string = "2010-05-15"; Capabilities: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Action: string (required)
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_615357 = newJObject()
  add(query_615357, "OperationId", newJString(OperationId))
  add(query_615357, "StackSetName", newJString(StackSetName))
  if Parameters != nil:
    query_615357.add "Parameters", Parameters
  if Tags != nil:
    query_615357.add "Tags", Tags
  add(query_615357, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_615357, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_615357, "TemplateBody", newJString(TemplateBody))
  add(query_615357, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_615357, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_615357, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_615357, "Action", newJString(Action))
  add(query_615357, "Description", newJString(Description))
  if OperationPreferencesRegionOrder != nil:
    query_615357.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_615357, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Regions != nil:
    query_615357.add "Regions", Regions
  add(query_615357, "TemplateURL", newJString(TemplateURL))
  if Accounts != nil:
    query_615357.add "Accounts", Accounts
  add(query_615357, "Version", newJString(Version))
  if Capabilities != nil:
    query_615357.add "Capabilities", Capabilities
  add(query_615357, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_615356.call(nil, query_615357, nil, nil, nil)

var getUpdateStackSet* = Call_GetUpdateStackSet_615325(name: "getUpdateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStackSet", validator: validate_GetUpdateStackSet_615326,
    base: "/", url: url_GetUpdateStackSet_615327,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateTerminationProtection_615409 = ref object of OpenApiRestCall_612658
proc url_PostUpdateTerminationProtection_615411(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateTerminationProtection_615410(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615412 = query.getOrDefault("Action")
  valid_615412 = validateParameter(valid_615412, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_615412 != nil:
    section.add "Action", valid_615412
  var valid_615413 = query.getOrDefault("Version")
  valid_615413 = validateParameter(valid_615413, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615413 != nil:
    section.add "Version", valid_615413
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615414 = header.getOrDefault("X-Amz-Signature")
  valid_615414 = validateParameter(valid_615414, JString, required = false,
                                 default = nil)
  if valid_615414 != nil:
    section.add "X-Amz-Signature", valid_615414
  var valid_615415 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615415 = validateParameter(valid_615415, JString, required = false,
                                 default = nil)
  if valid_615415 != nil:
    section.add "X-Amz-Content-Sha256", valid_615415
  var valid_615416 = header.getOrDefault("X-Amz-Date")
  valid_615416 = validateParameter(valid_615416, JString, required = false,
                                 default = nil)
  if valid_615416 != nil:
    section.add "X-Amz-Date", valid_615416
  var valid_615417 = header.getOrDefault("X-Amz-Credential")
  valid_615417 = validateParameter(valid_615417, JString, required = false,
                                 default = nil)
  if valid_615417 != nil:
    section.add "X-Amz-Credential", valid_615417
  var valid_615418 = header.getOrDefault("X-Amz-Security-Token")
  valid_615418 = validateParameter(valid_615418, JString, required = false,
                                 default = nil)
  if valid_615418 != nil:
    section.add "X-Amz-Security-Token", valid_615418
  var valid_615419 = header.getOrDefault("X-Amz-Algorithm")
  valid_615419 = validateParameter(valid_615419, JString, required = false,
                                 default = nil)
  if valid_615419 != nil:
    section.add "X-Amz-Algorithm", valid_615419
  var valid_615420 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615420 = validateParameter(valid_615420, JString, required = false,
                                 default = nil)
  if valid_615420 != nil:
    section.add "X-Amz-SignedHeaders", valid_615420
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_615421 = formData.getOrDefault("StackName")
  valid_615421 = validateParameter(valid_615421, JString, required = true,
                                 default = nil)
  if valid_615421 != nil:
    section.add "StackName", valid_615421
  var valid_615422 = formData.getOrDefault("EnableTerminationProtection")
  valid_615422 = validateParameter(valid_615422, JBool, required = true, default = nil)
  if valid_615422 != nil:
    section.add "EnableTerminationProtection", valid_615422
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615423: Call_PostUpdateTerminationProtection_615409;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_615423.validator(path, query, header, formData, body)
  let scheme = call_615423.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615423.url(scheme.get, call_615423.host, call_615423.base,
                         call_615423.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615423, url, valid)

proc call*(call_615424: Call_PostUpdateTerminationProtection_615409;
          StackName: string; EnableTerminationProtection: bool;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## postUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615425 = newJObject()
  var formData_615426 = newJObject()
  add(formData_615426, "StackName", newJString(StackName))
  add(formData_615426, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_615425, "Action", newJString(Action))
  add(query_615425, "Version", newJString(Version))
  result = call_615424.call(nil, query_615425, nil, formData_615426, nil)

var postUpdateTerminationProtection* = Call_PostUpdateTerminationProtection_615409(
    name: "postUpdateTerminationProtection", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_PostUpdateTerminationProtection_615410, base: "/",
    url: url_PostUpdateTerminationProtection_615411,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateTerminationProtection_615392 = ref object of OpenApiRestCall_612658
proc url_GetUpdateTerminationProtection_615394(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateTerminationProtection_615393(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_615395 = query.getOrDefault("StackName")
  valid_615395 = validateParameter(valid_615395, JString, required = true,
                                 default = nil)
  if valid_615395 != nil:
    section.add "StackName", valid_615395
  var valid_615396 = query.getOrDefault("EnableTerminationProtection")
  valid_615396 = validateParameter(valid_615396, JBool, required = true, default = nil)
  if valid_615396 != nil:
    section.add "EnableTerminationProtection", valid_615396
  var valid_615397 = query.getOrDefault("Action")
  valid_615397 = validateParameter(valid_615397, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_615397 != nil:
    section.add "Action", valid_615397
  var valid_615398 = query.getOrDefault("Version")
  valid_615398 = validateParameter(valid_615398, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615398 != nil:
    section.add "Version", valid_615398
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615399 = header.getOrDefault("X-Amz-Signature")
  valid_615399 = validateParameter(valid_615399, JString, required = false,
                                 default = nil)
  if valid_615399 != nil:
    section.add "X-Amz-Signature", valid_615399
  var valid_615400 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615400 = validateParameter(valid_615400, JString, required = false,
                                 default = nil)
  if valid_615400 != nil:
    section.add "X-Amz-Content-Sha256", valid_615400
  var valid_615401 = header.getOrDefault("X-Amz-Date")
  valid_615401 = validateParameter(valid_615401, JString, required = false,
                                 default = nil)
  if valid_615401 != nil:
    section.add "X-Amz-Date", valid_615401
  var valid_615402 = header.getOrDefault("X-Amz-Credential")
  valid_615402 = validateParameter(valid_615402, JString, required = false,
                                 default = nil)
  if valid_615402 != nil:
    section.add "X-Amz-Credential", valid_615402
  var valid_615403 = header.getOrDefault("X-Amz-Security-Token")
  valid_615403 = validateParameter(valid_615403, JString, required = false,
                                 default = nil)
  if valid_615403 != nil:
    section.add "X-Amz-Security-Token", valid_615403
  var valid_615404 = header.getOrDefault("X-Amz-Algorithm")
  valid_615404 = validateParameter(valid_615404, JString, required = false,
                                 default = nil)
  if valid_615404 != nil:
    section.add "X-Amz-Algorithm", valid_615404
  var valid_615405 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615405 = validateParameter(valid_615405, JString, required = false,
                                 default = nil)
  if valid_615405 != nil:
    section.add "X-Amz-SignedHeaders", valid_615405
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615406: Call_GetUpdateTerminationProtection_615392; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_615406.validator(path, query, header, formData, body)
  let scheme = call_615406.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615406.url(scheme.get, call_615406.host, call_615406.base,
                         call_615406.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615406, url, valid)

proc call*(call_615407: Call_GetUpdateTerminationProtection_615392;
          StackName: string; EnableTerminationProtection: bool;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615408 = newJObject()
  add(query_615408, "StackName", newJString(StackName))
  add(query_615408, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_615408, "Action", newJString(Action))
  add(query_615408, "Version", newJString(Version))
  result = call_615407.call(nil, query_615408, nil, nil, nil)

var getUpdateTerminationProtection* = Call_GetUpdateTerminationProtection_615392(
    name: "getUpdateTerminationProtection", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_GetUpdateTerminationProtection_615393, base: "/",
    url: url_GetUpdateTerminationProtection_615394,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostValidateTemplate_615444 = ref object of OpenApiRestCall_612658
proc url_PostValidateTemplate_615446(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostValidateTemplate_615445(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_615447 = query.getOrDefault("Action")
  valid_615447 = validateParameter(valid_615447, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_615447 != nil:
    section.add "Action", valid_615447
  var valid_615448 = query.getOrDefault("Version")
  valid_615448 = validateParameter(valid_615448, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615448 != nil:
    section.add "Version", valid_615448
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615449 = header.getOrDefault("X-Amz-Signature")
  valid_615449 = validateParameter(valid_615449, JString, required = false,
                                 default = nil)
  if valid_615449 != nil:
    section.add "X-Amz-Signature", valid_615449
  var valid_615450 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615450 = validateParameter(valid_615450, JString, required = false,
                                 default = nil)
  if valid_615450 != nil:
    section.add "X-Amz-Content-Sha256", valid_615450
  var valid_615451 = header.getOrDefault("X-Amz-Date")
  valid_615451 = validateParameter(valid_615451, JString, required = false,
                                 default = nil)
  if valid_615451 != nil:
    section.add "X-Amz-Date", valid_615451
  var valid_615452 = header.getOrDefault("X-Amz-Credential")
  valid_615452 = validateParameter(valid_615452, JString, required = false,
                                 default = nil)
  if valid_615452 != nil:
    section.add "X-Amz-Credential", valid_615452
  var valid_615453 = header.getOrDefault("X-Amz-Security-Token")
  valid_615453 = validateParameter(valid_615453, JString, required = false,
                                 default = nil)
  if valid_615453 != nil:
    section.add "X-Amz-Security-Token", valid_615453
  var valid_615454 = header.getOrDefault("X-Amz-Algorithm")
  valid_615454 = validateParameter(valid_615454, JString, required = false,
                                 default = nil)
  if valid_615454 != nil:
    section.add "X-Amz-Algorithm", valid_615454
  var valid_615455 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615455 = validateParameter(valid_615455, JString, required = false,
                                 default = nil)
  if valid_615455 != nil:
    section.add "X-Amz-SignedHeaders", valid_615455
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  section = newJObject()
  var valid_615456 = formData.getOrDefault("TemplateURL")
  valid_615456 = validateParameter(valid_615456, JString, required = false,
                                 default = nil)
  if valid_615456 != nil:
    section.add "TemplateURL", valid_615456
  var valid_615457 = formData.getOrDefault("TemplateBody")
  valid_615457 = validateParameter(valid_615457, JString, required = false,
                                 default = nil)
  if valid_615457 != nil:
    section.add "TemplateBody", valid_615457
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615458: Call_PostValidateTemplate_615444; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_615458.validator(path, query, header, formData, body)
  let scheme = call_615458.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615458.url(scheme.get, call_615458.host, call_615458.base,
                         call_615458.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615458, url, valid)

proc call*(call_615459: Call_PostValidateTemplate_615444; TemplateURL: string = "";
          TemplateBody: string = ""; Action: string = "ValidateTemplate";
          Version: string = "2010-05-15"): Recallable =
  ## postValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_615460 = newJObject()
  var formData_615461 = newJObject()
  add(formData_615461, "TemplateURL", newJString(TemplateURL))
  add(formData_615461, "TemplateBody", newJString(TemplateBody))
  add(query_615460, "Action", newJString(Action))
  add(query_615460, "Version", newJString(Version))
  result = call_615459.call(nil, query_615460, nil, formData_615461, nil)

var postValidateTemplate* = Call_PostValidateTemplate_615444(
    name: "postValidateTemplate", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_PostValidateTemplate_615445, base: "/",
    url: url_PostValidateTemplate_615446, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetValidateTemplate_615427 = ref object of OpenApiRestCall_612658
proc url_GetValidateTemplate_615429(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetValidateTemplate_615428(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_615430 = query.getOrDefault("TemplateBody")
  valid_615430 = validateParameter(valid_615430, JString, required = false,
                                 default = nil)
  if valid_615430 != nil:
    section.add "TemplateBody", valid_615430
  var valid_615431 = query.getOrDefault("Action")
  valid_615431 = validateParameter(valid_615431, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_615431 != nil:
    section.add "Action", valid_615431
  var valid_615432 = query.getOrDefault("TemplateURL")
  valid_615432 = validateParameter(valid_615432, JString, required = false,
                                 default = nil)
  if valid_615432 != nil:
    section.add "TemplateURL", valid_615432
  var valid_615433 = query.getOrDefault("Version")
  valid_615433 = validateParameter(valid_615433, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_615433 != nil:
    section.add "Version", valid_615433
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_615434 = header.getOrDefault("X-Amz-Signature")
  valid_615434 = validateParameter(valid_615434, JString, required = false,
                                 default = nil)
  if valid_615434 != nil:
    section.add "X-Amz-Signature", valid_615434
  var valid_615435 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_615435 = validateParameter(valid_615435, JString, required = false,
                                 default = nil)
  if valid_615435 != nil:
    section.add "X-Amz-Content-Sha256", valid_615435
  var valid_615436 = header.getOrDefault("X-Amz-Date")
  valid_615436 = validateParameter(valid_615436, JString, required = false,
                                 default = nil)
  if valid_615436 != nil:
    section.add "X-Amz-Date", valid_615436
  var valid_615437 = header.getOrDefault("X-Amz-Credential")
  valid_615437 = validateParameter(valid_615437, JString, required = false,
                                 default = nil)
  if valid_615437 != nil:
    section.add "X-Amz-Credential", valid_615437
  var valid_615438 = header.getOrDefault("X-Amz-Security-Token")
  valid_615438 = validateParameter(valid_615438, JString, required = false,
                                 default = nil)
  if valid_615438 != nil:
    section.add "X-Amz-Security-Token", valid_615438
  var valid_615439 = header.getOrDefault("X-Amz-Algorithm")
  valid_615439 = validateParameter(valid_615439, JString, required = false,
                                 default = nil)
  if valid_615439 != nil:
    section.add "X-Amz-Algorithm", valid_615439
  var valid_615440 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_615440 = validateParameter(valid_615440, JString, required = false,
                                 default = nil)
  if valid_615440 != nil:
    section.add "X-Amz-SignedHeaders", valid_615440
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_615441: Call_GetValidateTemplate_615427; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_615441.validator(path, query, header, formData, body)
  let scheme = call_615441.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_615441.url(scheme.get, call_615441.host, call_615441.base,
                         call_615441.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_615441, url, valid)

proc call*(call_615442: Call_GetValidateTemplate_615427; TemplateBody: string = "";
          Action: string = "ValidateTemplate"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_615443 = newJObject()
  add(query_615443, "TemplateBody", newJString(TemplateBody))
  add(query_615443, "Action", newJString(Action))
  add(query_615443, "TemplateURL", newJString(TemplateURL))
  add(query_615443, "Version", newJString(Version))
  result = call_615442.call(nil, query_615443, nil, nil, nil)

var getValidateTemplate* = Call_GetValidateTemplate_615427(
    name: "getValidateTemplate", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_GetValidateTemplate_615428, base: "/",
    url: url_GetValidateTemplate_615429, schemes: {Scheme.Https, Scheme.Http})
export
  rest

type
  EnvKind = enum
    BakeIntoBinary = "Baking $1 into the binary",
    FetchFromEnv = "Fetch $1 from the environment"
template sloppyConst(via: EnvKind; name: untyped): untyped =
  import
    macros

  const
    name {.strdefine.}: string = case via
    of BakeIntoBinary:
      getEnv(astToStr(name), "")
    of FetchFromEnv:
      ""
  static :
    let msg = block:
      if name == "":
        "Missing $1 in the environment"
      else:
        $via
    warning msg % [astToStr(name)]

sloppyConst FetchFromEnv, AWS_ACCESS_KEY_ID
sloppyConst FetchFromEnv, AWS_SECRET_ACCESS_KEY
sloppyConst BakeIntoBinary, AWS_REGION
sloppyConst FetchFromEnv, AWS_ACCOUNT_ID
proc atozSign(recall: var Recallable; query: JsonNode; algo: SigningAlgo = SHA256) =
  let
    date = makeDateTime()
    access = os.getEnv("AWS_ACCESS_KEY_ID", AWS_ACCESS_KEY_ID)
    secret = os.getEnv("AWS_SECRET_ACCESS_KEY", AWS_SECRET_ACCESS_KEY)
    region = os.getEnv("AWS_REGION", AWS_REGION)
  assert secret != "", "need $AWS_SECRET_ACCESS_KEY in environment"
  assert access != "", "need $AWS_ACCESS_KEY_ID in environment"
  assert region != "", "need $AWS_REGION in environment"
  var
    normal: PathNormal
    url = normalizeUrl(recall.url, query, normalize = normal)
    scheme = parseEnum[Scheme](url.scheme)
  assert scheme in awsServers, "unknown scheme `" & $scheme & "`"
  assert region in awsServers[scheme], "unknown region `" & region & "`"
  url.hostname = awsServers[scheme][region]
  case awsServiceName.toLowerAscii
  of "s3":
    normal = PathNormal.S3
  else:
    normal = PathNormal.Default
  recall.headers["Host"] = url.hostname
  recall.headers["X-Amz-Date"] = date
  let
    algo = SHA256
    scope = credentialScope(region = region, service = awsServiceName, date = date)
    request = canonicalRequest(recall.meth, $url, query, recall.headers, recall.body,
                             normalize = normal, digest = algo)
    sts = stringToSign(request.hash(algo), scope, date = date, digest = algo)
    signature = calculateSignature(secret = secret, date = date, region = region,
                                 service = awsServiceName, sts, digest = algo)
  var auth = $algo & " "
  auth &= "Credential=" & access / scope & ", "
  auth &= "SignedHeaders=" & recall.headers.signedHeaders & ", "
  auth &= "Signature=" & signature
  recall.headers["Authorization"] = auth
  recall.headers.del "Host"
  recall.url = $url

method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode): Recallable {.base.} =
  ## the hook is a terrible earworm
  var headers = newHttpHeaders(massageHeaders(input.getOrDefault("header")))
  let
    body = input.getOrDefault("body")
    text = if body == nil:
      "" elif body.kind == JString:
      body.getStr else:
      $body
  if body != nil and body.kind != JString:
    if not headers.hasKey("content-type"):
      headers["content-type"] = "application/x-amz-json-1.0"
  const
    XAmzSecurityToken = "X-Amz-Security-Token"
  if not headers.hasKey(XAmzSecurityToken):
    let session = getEnv("AWS_SESSION_TOKEN", "")
    if session != "":
      headers[XAmzSecurityToken] = session
  result = newRecallable(call, url, headers, text)
  result.atozSign(input.getOrDefault("query"), SHA256)
