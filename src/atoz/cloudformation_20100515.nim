
import
  json, options, hashes, uri, strutils, tables, rest, os, uri, strutils, md5, base64,
  httpcore, sigv4

## auto-generated via openapi macro
## title: AWS CloudFormation
## version: 2010-05-15
## termsOfService: https://aws.amazon.com/service-terms/
## license:
##     name: Apache 2.0 License
##     url: http://www.apache.org/licenses/
## 
## <fullname>AWS CloudFormation</fullname> <p>AWS CloudFormation allows you to create and manage AWS infrastructure deployments predictably and repeatedly. You can use AWS CloudFormation to leverage AWS products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly-reliable, highly scalable, cost-effective applications without creating or configuring the underlying AWS infrastructure.</p> <p>With AWS CloudFormation, you declare all of your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. AWS CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about AWS CloudFormation, see the <a href="http://aws.amazon.com/cloudformation/">AWS CloudFormation Product Page</a>.</p> <p>Amazon CloudFormation makes use of other AWS products. If you need additional technical information about a specific AWS product, you can find the product's technical documentation at <a href="https://docs.aws.amazon.com/">docs.aws.amazon.com</a>.</p>
## 
## Amazon Web Services documentation
## https://docs.aws.amazon.com/cloudformation/
type
  Scheme {.pure.} = enum
    Https = "https", Http = "http", Wss = "wss", Ws = "ws"
  ValidatorSignature = proc (path: JsonNode = nil; query: JsonNode = nil;
                          header: JsonNode = nil; formData: JsonNode = nil;
                          body: JsonNode = nil; _: string = ""): JsonNode
  OpenApiRestCall = ref object of RestCall
    validator*: ValidatorSignature
    route*: string
    base*: string
    host*: string
    schemes*: set[Scheme]
    makeUrl*: proc (protocol: Scheme; host: string; base: string; route: string;
                  path: JsonNode; query: JsonNode): Uri

  OpenApiRestCall_21625435 = ref object of OpenApiRestCall
proc hash(scheme: Scheme): Hash {.used.} =
  result = hash(ord(scheme))

proc clone[T: OpenApiRestCall_21625435](t: T): T {.used.} =
  result = T(name: t.name, meth: t.meth, host: t.host, base: t.base, route: t.route,
           schemes: t.schemes, validator: t.validator, url: t.url)

proc pickScheme(t: OpenApiRestCall_21625435): Option[Scheme] {.used.} =
  ## select a supported scheme from a set of candidates
  for scheme in Scheme.low .. Scheme.high:
    if scheme notin t.schemes:
      continue
    if scheme in [Scheme.Https, Scheme.Wss]:
      when defined(ssl):
        return some(scheme)
      else:
        continue
    return some(scheme)

proc validateParameter(js: JsonNode; kind: JsonNodeKind; required: bool;
                      default: JsonNode = nil): JsonNode =
  ## ensure an input is of the correct json type and yield
  ## a suitable default value when appropriate
  if js == nil:
    if required:
      if default != nil:
        return validateParameter(default, kind, required = required)
  result = js
  if result == nil:
    assert not required, $kind & " expected; received nil"
    if required:
      result = newJNull()
  else:
    assert js.kind == kind, $kind & " expected; received " & $js.kind

type
  KeyVal {.used.} = tuple[key: string, val: string]
  PathTokenKind = enum
    ConstantSegment, VariableSegment
  PathToken = tuple[kind: PathTokenKind, value: string]
proc queryString(query: JsonNode): string {.used.} =
  var qs: seq[KeyVal]
  if query == nil:
    return ""
  for k, v in query.pairs:
    qs.add (key: k, val: v.getStr)
  result = encodeQuery(qs)

proc hydratePath(input: JsonNode; segments: seq[PathToken]): Option[string] {.used.} =
  ## reconstitute a path with constants and variable values taken from json
  var head: string
  if segments.len == 0:
    return some("")
  head = segments[0].value
  case segments[0].kind
  of ConstantSegment:
    discard
  of VariableSegment:
    if head notin input:
      return
    let js = input[head]
    case js.kind
    of JInt, JFloat, JNull, JBool:
      head = $js
    of JString:
      head = js.getStr
    else:
      return
  var remainder = input.hydratePath(segments[1 ..^ 1])
  if remainder.isNone:
    return
  result = some(head & remainder.get)

const
  awsServers = {Scheme.Http: {"ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com", "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com", "us-west-2": "cloudformation.us-west-2.amazonaws.com", "eu-west-2": "cloudformation.eu-west-2.amazonaws.com", "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com", "eu-central-1": "cloudformation.eu-central-1.amazonaws.com", "us-east-2": "cloudformation.us-east-2.amazonaws.com", "us-east-1": "cloudformation.us-east-1.amazonaws.com", "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn", "ap-south-1": "cloudformation.ap-south-1.amazonaws.com", "eu-north-1": "cloudformation.eu-north-1.amazonaws.com", "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com", "us-west-1": "cloudformation.us-west-1.amazonaws.com", "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com", "eu-west-3": "cloudformation.eu-west-3.amazonaws.com", "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn", "sa-east-1": "cloudformation.sa-east-1.amazonaws.com", "eu-west-1": "cloudformation.eu-west-1.amazonaws.com", "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com", "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com", "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable, Scheme.Https: {
      "ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com",
      "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com",
      "us-west-2": "cloudformation.us-west-2.amazonaws.com",
      "eu-west-2": "cloudformation.eu-west-2.amazonaws.com",
      "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com",
      "eu-central-1": "cloudformation.eu-central-1.amazonaws.com",
      "us-east-2": "cloudformation.us-east-2.amazonaws.com",
      "us-east-1": "cloudformation.us-east-1.amazonaws.com",
      "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn",
      "ap-south-1": "cloudformation.ap-south-1.amazonaws.com",
      "eu-north-1": "cloudformation.eu-north-1.amazonaws.com",
      "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com",
      "us-west-1": "cloudformation.us-west-1.amazonaws.com",
      "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com",
      "eu-west-3": "cloudformation.eu-west-3.amazonaws.com",
      "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn",
      "sa-east-1": "cloudformation.sa-east-1.amazonaws.com",
      "eu-west-1": "cloudformation.eu-west-1.amazonaws.com",
      "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com",
      "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com",
      "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable}.toTable
const
  awsServiceName = "cloudformation"
method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode; body: string = ""): Recallable {.
    base.}
type
  Call_PostCancelUpdateStack_21626036 = ref object of OpenApiRestCall_21625435
proc url_PostCancelUpdateStack_21626038(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCancelUpdateStack_21626037(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626039 = query.getOrDefault("Action")
  valid_21626039 = validateParameter(valid_21626039, JString, required = true,
                                   default = newJString("CancelUpdateStack"))
  if valid_21626039 != nil:
    section.add "Action", valid_21626039
  var valid_21626040 = query.getOrDefault("Version")
  valid_21626040 = validateParameter(valid_21626040, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626040 != nil:
    section.add "Version", valid_21626040
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626041 = header.getOrDefault("X-Amz-Date")
  valid_21626041 = validateParameter(valid_21626041, JString, required = false,
                                   default = nil)
  if valid_21626041 != nil:
    section.add "X-Amz-Date", valid_21626041
  var valid_21626042 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626042 = validateParameter(valid_21626042, JString, required = false,
                                   default = nil)
  if valid_21626042 != nil:
    section.add "X-Amz-Security-Token", valid_21626042
  var valid_21626043 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626043 = validateParameter(valid_21626043, JString, required = false,
                                   default = nil)
  if valid_21626043 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626043
  var valid_21626044 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626044 = validateParameter(valid_21626044, JString, required = false,
                                   default = nil)
  if valid_21626044 != nil:
    section.add "X-Amz-Algorithm", valid_21626044
  var valid_21626045 = header.getOrDefault("X-Amz-Signature")
  valid_21626045 = validateParameter(valid_21626045, JString, required = false,
                                   default = nil)
  if valid_21626045 != nil:
    section.add "X-Amz-Signature", valid_21626045
  var valid_21626046 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626046 = validateParameter(valid_21626046, JString, required = false,
                                   default = nil)
  if valid_21626046 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626046
  var valid_21626047 = header.getOrDefault("X-Amz-Credential")
  valid_21626047 = validateParameter(valid_21626047, JString, required = false,
                                   default = nil)
  if valid_21626047 != nil:
    section.add "X-Amz-Credential", valid_21626047
  result.add "header", section
  ## parameters in `formData` object:
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  section = newJObject()
  var valid_21626048 = formData.getOrDefault("ClientRequestToken")
  valid_21626048 = validateParameter(valid_21626048, JString, required = false,
                                   default = nil)
  if valid_21626048 != nil:
    section.add "ClientRequestToken", valid_21626048
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21626049 = formData.getOrDefault("StackName")
  valid_21626049 = validateParameter(valid_21626049, JString, required = true,
                                   default = nil)
  if valid_21626049 != nil:
    section.add "StackName", valid_21626049
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626050: Call_PostCancelUpdateStack_21626036;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_21626050.validator(path, query, header, formData, body, _)
  let scheme = call_21626050.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626050.makeUrl(scheme.get, call_21626050.host, call_21626050.base,
                               call_21626050.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626050, uri, valid, _)

proc call*(call_21626051: Call_PostCancelUpdateStack_21626036; StackName: string;
          ClientRequestToken: string = ""; Action: string = "CancelUpdateStack";
          Version: string = "2010-05-15"): Recallable =
  ## postCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Version: string (required)
  var query_21626052 = newJObject()
  var formData_21626053 = newJObject()
  add(formData_21626053, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21626052, "Action", newJString(Action))
  add(formData_21626053, "StackName", newJString(StackName))
  add(query_21626052, "Version", newJString(Version))
  result = call_21626051.call(nil, query_21626052, nil, formData_21626053, nil)

var postCancelUpdateStack* = Call_PostCancelUpdateStack_21626036(
    name: "postCancelUpdateStack", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_PostCancelUpdateStack_21626037, base: "/",
    makeUrl: url_PostCancelUpdateStack_21626038,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCancelUpdateStack_21625779 = ref object of OpenApiRestCall_21625435
proc url_GetCancelUpdateStack_21625781(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCancelUpdateStack_21625780(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  section = newJObject()
  var valid_21625896 = query.getOrDefault("Action")
  valid_21625896 = validateParameter(valid_21625896, JString, required = true,
                                   default = newJString("CancelUpdateStack"))
  if valid_21625896 != nil:
    section.add "Action", valid_21625896
  var valid_21625897 = query.getOrDefault("ClientRequestToken")
  valid_21625897 = validateParameter(valid_21625897, JString, required = false,
                                   default = nil)
  if valid_21625897 != nil:
    section.add "ClientRequestToken", valid_21625897
  var valid_21625898 = query.getOrDefault("Version")
  valid_21625898 = validateParameter(valid_21625898, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21625898 != nil:
    section.add "Version", valid_21625898
  var valid_21625899 = query.getOrDefault("StackName")
  valid_21625899 = validateParameter(valid_21625899, JString, required = true,
                                   default = nil)
  if valid_21625899 != nil:
    section.add "StackName", valid_21625899
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21625900 = header.getOrDefault("X-Amz-Date")
  valid_21625900 = validateParameter(valid_21625900, JString, required = false,
                                   default = nil)
  if valid_21625900 != nil:
    section.add "X-Amz-Date", valid_21625900
  var valid_21625901 = header.getOrDefault("X-Amz-Security-Token")
  valid_21625901 = validateParameter(valid_21625901, JString, required = false,
                                   default = nil)
  if valid_21625901 != nil:
    section.add "X-Amz-Security-Token", valid_21625901
  var valid_21625902 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21625902 = validateParameter(valid_21625902, JString, required = false,
                                   default = nil)
  if valid_21625902 != nil:
    section.add "X-Amz-Content-Sha256", valid_21625902
  var valid_21625903 = header.getOrDefault("X-Amz-Algorithm")
  valid_21625903 = validateParameter(valid_21625903, JString, required = false,
                                   default = nil)
  if valid_21625903 != nil:
    section.add "X-Amz-Algorithm", valid_21625903
  var valid_21625904 = header.getOrDefault("X-Amz-Signature")
  valid_21625904 = validateParameter(valid_21625904, JString, required = false,
                                   default = nil)
  if valid_21625904 != nil:
    section.add "X-Amz-Signature", valid_21625904
  var valid_21625905 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21625905 = validateParameter(valid_21625905, JString, required = false,
                                   default = nil)
  if valid_21625905 != nil:
    section.add "X-Amz-SignedHeaders", valid_21625905
  var valid_21625906 = header.getOrDefault("X-Amz-Credential")
  valid_21625906 = validateParameter(valid_21625906, JString, required = false,
                                   default = nil)
  if valid_21625906 != nil:
    section.add "X-Amz-Credential", valid_21625906
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21625931: Call_GetCancelUpdateStack_21625779; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_21625931.validator(path, query, header, formData, body, _)
  let scheme = call_21625931.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21625931.makeUrl(scheme.get, call_21625931.host, call_21625931.base,
                               call_21625931.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21625931, uri, valid, _)

proc call*(call_21625994: Call_GetCancelUpdateStack_21625779; StackName: string;
          Action: string = "CancelUpdateStack"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  var query_21625996 = newJObject()
  add(query_21625996, "Action", newJString(Action))
  add(query_21625996, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21625996, "Version", newJString(Version))
  add(query_21625996, "StackName", newJString(StackName))
  result = call_21625994.call(nil, query_21625996, nil, nil, nil)

var getCancelUpdateStack* = Call_GetCancelUpdateStack_21625779(
    name: "getCancelUpdateStack", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_GetCancelUpdateStack_21625780, base: "/",
    makeUrl: url_GetCancelUpdateStack_21625781,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostContinueUpdateRollback_21626073 = ref object of OpenApiRestCall_21625435
proc url_PostContinueUpdateRollback_21626075(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostContinueUpdateRollback_21626074(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626076 = query.getOrDefault("Action")
  valid_21626076 = validateParameter(valid_21626076, JString, required = true, default = newJString(
      "ContinueUpdateRollback"))
  if valid_21626076 != nil:
    section.add "Action", valid_21626076
  var valid_21626077 = query.getOrDefault("Version")
  valid_21626077 = validateParameter(valid_21626077, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626077 != nil:
    section.add "Version", valid_21626077
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626078 = header.getOrDefault("X-Amz-Date")
  valid_21626078 = validateParameter(valid_21626078, JString, required = false,
                                   default = nil)
  if valid_21626078 != nil:
    section.add "X-Amz-Date", valid_21626078
  var valid_21626079 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626079 = validateParameter(valid_21626079, JString, required = false,
                                   default = nil)
  if valid_21626079 != nil:
    section.add "X-Amz-Security-Token", valid_21626079
  var valid_21626080 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626080 = validateParameter(valid_21626080, JString, required = false,
                                   default = nil)
  if valid_21626080 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626080
  var valid_21626081 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626081 = validateParameter(valid_21626081, JString, required = false,
                                   default = nil)
  if valid_21626081 != nil:
    section.add "X-Amz-Algorithm", valid_21626081
  var valid_21626082 = header.getOrDefault("X-Amz-Signature")
  valid_21626082 = validateParameter(valid_21626082, JString, required = false,
                                   default = nil)
  if valid_21626082 != nil:
    section.add "X-Amz-Signature", valid_21626082
  var valid_21626083 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626083 = validateParameter(valid_21626083, JString, required = false,
                                   default = nil)
  if valid_21626083 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626083
  var valid_21626084 = header.getOrDefault("X-Amz-Credential")
  valid_21626084 = validateParameter(valid_21626084, JString, required = false,
                                   default = nil)
  if valid_21626084 != nil:
    section.add "X-Amz-Credential", valid_21626084
  result.add "header", section
  ## parameters in `formData` object:
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_21626085 = formData.getOrDefault("ResourcesToSkip")
  valid_21626085 = validateParameter(valid_21626085, JArray, required = false,
                                   default = nil)
  if valid_21626085 != nil:
    section.add "ResourcesToSkip", valid_21626085
  var valid_21626086 = formData.getOrDefault("ClientRequestToken")
  valid_21626086 = validateParameter(valid_21626086, JString, required = false,
                                   default = nil)
  if valid_21626086 != nil:
    section.add "ClientRequestToken", valid_21626086
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21626087 = formData.getOrDefault("StackName")
  valid_21626087 = validateParameter(valid_21626087, JString, required = true,
                                   default = nil)
  if valid_21626087 != nil:
    section.add "StackName", valid_21626087
  var valid_21626088 = formData.getOrDefault("RoleARN")
  valid_21626088 = validateParameter(valid_21626088, JString, required = false,
                                   default = nil)
  if valid_21626088 != nil:
    section.add "RoleARN", valid_21626088
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626089: Call_PostContinueUpdateRollback_21626073;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_21626089.validator(path, query, header, formData, body, _)
  let scheme = call_21626089.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626089.makeUrl(scheme.get, call_21626089.host, call_21626089.base,
                               call_21626089.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626089, uri, valid, _)

proc call*(call_21626090: Call_PostContinueUpdateRollback_21626073;
          StackName: string; ResourcesToSkip: JsonNode = nil;
          ClientRequestToken: string = "";
          Action: string = "ContinueUpdateRollback"; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## postContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_21626091 = newJObject()
  var formData_21626092 = newJObject()
  if ResourcesToSkip != nil:
    formData_21626092.add "ResourcesToSkip", ResourcesToSkip
  add(formData_21626092, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21626091, "Action", newJString(Action))
  add(formData_21626092, "StackName", newJString(StackName))
  add(query_21626091, "Version", newJString(Version))
  add(formData_21626092, "RoleARN", newJString(RoleARN))
  result = call_21626090.call(nil, query_21626091, nil, formData_21626092, nil)

var postContinueUpdateRollback* = Call_PostContinueUpdateRollback_21626073(
    name: "postContinueUpdateRollback", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_PostContinueUpdateRollback_21626074, base: "/",
    makeUrl: url_PostContinueUpdateRollback_21626075,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetContinueUpdateRollback_21626054 = ref object of OpenApiRestCall_21625435
proc url_GetContinueUpdateRollback_21626056(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetContinueUpdateRollback_21626055(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  section = newJObject()
  var valid_21626057 = query.getOrDefault("Action")
  valid_21626057 = validateParameter(valid_21626057, JString, required = true, default = newJString(
      "ContinueUpdateRollback"))
  if valid_21626057 != nil:
    section.add "Action", valid_21626057
  var valid_21626058 = query.getOrDefault("ResourcesToSkip")
  valid_21626058 = validateParameter(valid_21626058, JArray, required = false,
                                   default = nil)
  if valid_21626058 != nil:
    section.add "ResourcesToSkip", valid_21626058
  var valid_21626059 = query.getOrDefault("RoleARN")
  valid_21626059 = validateParameter(valid_21626059, JString, required = false,
                                   default = nil)
  if valid_21626059 != nil:
    section.add "RoleARN", valid_21626059
  var valid_21626060 = query.getOrDefault("ClientRequestToken")
  valid_21626060 = validateParameter(valid_21626060, JString, required = false,
                                   default = nil)
  if valid_21626060 != nil:
    section.add "ClientRequestToken", valid_21626060
  var valid_21626061 = query.getOrDefault("Version")
  valid_21626061 = validateParameter(valid_21626061, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626061 != nil:
    section.add "Version", valid_21626061
  var valid_21626062 = query.getOrDefault("StackName")
  valid_21626062 = validateParameter(valid_21626062, JString, required = true,
                                   default = nil)
  if valid_21626062 != nil:
    section.add "StackName", valid_21626062
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626063 = header.getOrDefault("X-Amz-Date")
  valid_21626063 = validateParameter(valid_21626063, JString, required = false,
                                   default = nil)
  if valid_21626063 != nil:
    section.add "X-Amz-Date", valid_21626063
  var valid_21626064 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626064 = validateParameter(valid_21626064, JString, required = false,
                                   default = nil)
  if valid_21626064 != nil:
    section.add "X-Amz-Security-Token", valid_21626064
  var valid_21626065 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626065 = validateParameter(valid_21626065, JString, required = false,
                                   default = nil)
  if valid_21626065 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626065
  var valid_21626066 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626066 = validateParameter(valid_21626066, JString, required = false,
                                   default = nil)
  if valid_21626066 != nil:
    section.add "X-Amz-Algorithm", valid_21626066
  var valid_21626067 = header.getOrDefault("X-Amz-Signature")
  valid_21626067 = validateParameter(valid_21626067, JString, required = false,
                                   default = nil)
  if valid_21626067 != nil:
    section.add "X-Amz-Signature", valid_21626067
  var valid_21626068 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626068 = validateParameter(valid_21626068, JString, required = false,
                                   default = nil)
  if valid_21626068 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626068
  var valid_21626069 = header.getOrDefault("X-Amz-Credential")
  valid_21626069 = validateParameter(valid_21626069, JString, required = false,
                                   default = nil)
  if valid_21626069 != nil:
    section.add "X-Amz-Credential", valid_21626069
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626070: Call_GetContinueUpdateRollback_21626054;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_21626070.validator(path, query, header, formData, body, _)
  let scheme = call_21626070.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626070.makeUrl(scheme.get, call_21626070.host, call_21626070.base,
                               call_21626070.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626070, uri, valid, _)

proc call*(call_21626071: Call_GetContinueUpdateRollback_21626054;
          StackName: string; Action: string = "ContinueUpdateRollback";
          ResourcesToSkip: JsonNode = nil; RoleARN: string = "";
          ClientRequestToken: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   Action: string (required)
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  var query_21626072 = newJObject()
  add(query_21626072, "Action", newJString(Action))
  if ResourcesToSkip != nil:
    query_21626072.add "ResourcesToSkip", ResourcesToSkip
  add(query_21626072, "RoleARN", newJString(RoleARN))
  add(query_21626072, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21626072, "Version", newJString(Version))
  add(query_21626072, "StackName", newJString(StackName))
  result = call_21626071.call(nil, query_21626072, nil, nil, nil)

var getContinueUpdateRollback* = Call_GetContinueUpdateRollback_21626054(
    name: "getContinueUpdateRollback", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_GetContinueUpdateRollback_21626055, base: "/",
    makeUrl: url_GetContinueUpdateRollback_21626056,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateChangeSet_21626125 = ref object of OpenApiRestCall_21625435
proc url_PostCreateChangeSet_21626127(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateChangeSet_21626126(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626128 = query.getOrDefault("Action")
  valid_21626128 = validateParameter(valid_21626128, JString, required = true,
                                   default = newJString("CreateChangeSet"))
  if valid_21626128 != nil:
    section.add "Action", valid_21626128
  var valid_21626129 = query.getOrDefault("Version")
  valid_21626129 = validateParameter(valid_21626129, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626129 != nil:
    section.add "Version", valid_21626129
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626130 = header.getOrDefault("X-Amz-Date")
  valid_21626130 = validateParameter(valid_21626130, JString, required = false,
                                   default = nil)
  if valid_21626130 != nil:
    section.add "X-Amz-Date", valid_21626130
  var valid_21626131 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626131 = validateParameter(valid_21626131, JString, required = false,
                                   default = nil)
  if valid_21626131 != nil:
    section.add "X-Amz-Security-Token", valid_21626131
  var valid_21626132 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626132 = validateParameter(valid_21626132, JString, required = false,
                                   default = nil)
  if valid_21626132 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626132
  var valid_21626133 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626133 = validateParameter(valid_21626133, JString, required = false,
                                   default = nil)
  if valid_21626133 != nil:
    section.add "X-Amz-Algorithm", valid_21626133
  var valid_21626134 = header.getOrDefault("X-Amz-Signature")
  valid_21626134 = validateParameter(valid_21626134, JString, required = false,
                                   default = nil)
  if valid_21626134 != nil:
    section.add "X-Amz-Signature", valid_21626134
  var valid_21626135 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626135 = validateParameter(valid_21626135, JString, required = false,
                                   default = nil)
  if valid_21626135 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626135
  var valid_21626136 = header.getOrDefault("X-Amz-Credential")
  valid_21626136 = validateParameter(valid_21626136, JString, required = false,
                                   default = nil)
  if valid_21626136 != nil:
    section.add "X-Amz-Credential", valid_21626136
  result.add "header", section
  ## parameters in `formData` object:
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_21626137 = formData.getOrDefault("ChangeSetType")
  valid_21626137 = validateParameter(valid_21626137, JString, required = false,
                                   default = newJString("CREATE"))
  if valid_21626137 != nil:
    section.add "ChangeSetType", valid_21626137
  var valid_21626138 = formData.getOrDefault("ClientToken")
  valid_21626138 = validateParameter(valid_21626138, JString, required = false,
                                   default = nil)
  if valid_21626138 != nil:
    section.add "ClientToken", valid_21626138
  var valid_21626139 = formData.getOrDefault("ResourceTypes")
  valid_21626139 = validateParameter(valid_21626139, JArray, required = false,
                                   default = nil)
  if valid_21626139 != nil:
    section.add "ResourceTypes", valid_21626139
  var valid_21626140 = formData.getOrDefault("TemplateURL")
  valid_21626140 = validateParameter(valid_21626140, JString, required = false,
                                   default = nil)
  if valid_21626140 != nil:
    section.add "TemplateURL", valid_21626140
  var valid_21626141 = formData.getOrDefault("Capabilities")
  valid_21626141 = validateParameter(valid_21626141, JArray, required = false,
                                   default = nil)
  if valid_21626141 != nil:
    section.add "Capabilities", valid_21626141
  var valid_21626142 = formData.getOrDefault(
      "RollbackConfiguration.MonitoringTimeInMinutes")
  valid_21626142 = validateParameter(valid_21626142, JString, required = false,
                                   default = nil)
  if valid_21626142 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_21626142
  var valid_21626143 = formData.getOrDefault("Tags")
  valid_21626143 = validateParameter(valid_21626143, JArray, required = false,
                                   default = nil)
  if valid_21626143 != nil:
    section.add "Tags", valid_21626143
  var valid_21626144 = formData.getOrDefault("UsePreviousTemplate")
  valid_21626144 = validateParameter(valid_21626144, JBool, required = false,
                                   default = nil)
  if valid_21626144 != nil:
    section.add "UsePreviousTemplate", valid_21626144
  var valid_21626145 = formData.getOrDefault("ResourcesToImport")
  valid_21626145 = validateParameter(valid_21626145, JArray, required = false,
                                   default = nil)
  if valid_21626145 != nil:
    section.add "ResourcesToImport", valid_21626145
  var valid_21626146 = formData.getOrDefault("Parameters")
  valid_21626146 = validateParameter(valid_21626146, JArray, required = false,
                                   default = nil)
  if valid_21626146 != nil:
    section.add "Parameters", valid_21626146
  var valid_21626147 = formData.getOrDefault("NotificationARNs")
  valid_21626147 = validateParameter(valid_21626147, JArray, required = false,
                                   default = nil)
  if valid_21626147 != nil:
    section.add "NotificationARNs", valid_21626147
  var valid_21626148 = formData.getOrDefault(
      "RollbackConfiguration.RollbackTriggers")
  valid_21626148 = validateParameter(valid_21626148, JArray, required = false,
                                   default = nil)
  if valid_21626148 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_21626148
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_21626149 = formData.getOrDefault("ChangeSetName")
  valid_21626149 = validateParameter(valid_21626149, JString, required = true,
                                   default = nil)
  if valid_21626149 != nil:
    section.add "ChangeSetName", valid_21626149
  var valid_21626150 = formData.getOrDefault("StackName")
  valid_21626150 = validateParameter(valid_21626150, JString, required = true,
                                   default = nil)
  if valid_21626150 != nil:
    section.add "StackName", valid_21626150
  var valid_21626151 = formData.getOrDefault("TemplateBody")
  valid_21626151 = validateParameter(valid_21626151, JString, required = false,
                                   default = nil)
  if valid_21626151 != nil:
    section.add "TemplateBody", valid_21626151
  var valid_21626152 = formData.getOrDefault("Description")
  valid_21626152 = validateParameter(valid_21626152, JString, required = false,
                                   default = nil)
  if valid_21626152 != nil:
    section.add "Description", valid_21626152
  var valid_21626153 = formData.getOrDefault("RoleARN")
  valid_21626153 = validateParameter(valid_21626153, JString, required = false,
                                   default = nil)
  if valid_21626153 != nil:
    section.add "RoleARN", valid_21626153
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626154: Call_PostCreateChangeSet_21626125; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_21626154.validator(path, query, header, formData, body, _)
  let scheme = call_21626154.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626154.makeUrl(scheme.get, call_21626154.host, call_21626154.base,
                               call_21626154.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626154, uri, valid, _)

proc call*(call_21626155: Call_PostCreateChangeSet_21626125; ChangeSetName: string;
          StackName: string; ChangeSetType: string = "CREATE";
          ClientToken: string = ""; ResourceTypes: JsonNode = nil;
          TemplateURL: string = ""; Capabilities: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Tags: JsonNode = nil; UsePreviousTemplate: bool = false;
          ResourcesToImport: JsonNode = nil; Parameters: JsonNode = nil;
          Action: string = "CreateChangeSet"; NotificationARNs: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          TemplateBody: string = ""; Version: string = "2010-05-15";
          Description: string = ""; RoleARN: string = ""): Recallable =
  ## postCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Action: string (required)
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_21626156 = newJObject()
  var formData_21626157 = newJObject()
  add(formData_21626157, "ChangeSetType", newJString(ChangeSetType))
  add(formData_21626157, "ClientToken", newJString(ClientToken))
  if ResourceTypes != nil:
    formData_21626157.add "ResourceTypes", ResourceTypes
  add(formData_21626157, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_21626157.add "Capabilities", Capabilities
  add(formData_21626157, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Tags != nil:
    formData_21626157.add "Tags", Tags
  add(formData_21626157, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if ResourcesToImport != nil:
    formData_21626157.add "ResourcesToImport", ResourcesToImport
  if Parameters != nil:
    formData_21626157.add "Parameters", Parameters
  add(query_21626156, "Action", newJString(Action))
  if NotificationARNs != nil:
    formData_21626157.add "NotificationARNs", NotificationARNs
  if RollbackConfigurationRollbackTriggers != nil:
    formData_21626157.add "RollbackConfiguration.RollbackTriggers",
                         RollbackConfigurationRollbackTriggers
  add(formData_21626157, "ChangeSetName", newJString(ChangeSetName))
  add(formData_21626157, "StackName", newJString(StackName))
  add(formData_21626157, "TemplateBody", newJString(TemplateBody))
  add(query_21626156, "Version", newJString(Version))
  add(formData_21626157, "Description", newJString(Description))
  add(formData_21626157, "RoleARN", newJString(RoleARN))
  result = call_21626155.call(nil, query_21626156, nil, formData_21626157, nil)

var postCreateChangeSet* = Call_PostCreateChangeSet_21626125(
    name: "postCreateChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_PostCreateChangeSet_21626126, base: "/",
    makeUrl: url_PostCreateChangeSet_21626127,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateChangeSet_21626093 = ref object of OpenApiRestCall_21625435
proc url_GetCreateChangeSet_21626095(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateChangeSet_21626094(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: JString (required)
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  section = newJObject()
  var valid_21626096 = query.getOrDefault("TemplateURL")
  valid_21626096 = validateParameter(valid_21626096, JString, required = false,
                                   default = nil)
  if valid_21626096 != nil:
    section.add "TemplateURL", valid_21626096
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_21626097 = query.getOrDefault("ChangeSetName")
  valid_21626097 = validateParameter(valid_21626097, JString, required = true,
                                   default = nil)
  if valid_21626097 != nil:
    section.add "ChangeSetName", valid_21626097
  var valid_21626098 = query.getOrDefault("TemplateBody")
  valid_21626098 = validateParameter(valid_21626098, JString, required = false,
                                   default = nil)
  if valid_21626098 != nil:
    section.add "TemplateBody", valid_21626098
  var valid_21626099 = query.getOrDefault("ClientToken")
  valid_21626099 = validateParameter(valid_21626099, JString, required = false,
                                   default = nil)
  if valid_21626099 != nil:
    section.add "ClientToken", valid_21626099
  var valid_21626100 = query.getOrDefault("Description")
  valid_21626100 = validateParameter(valid_21626100, JString, required = false,
                                   default = nil)
  if valid_21626100 != nil:
    section.add "Description", valid_21626100
  var valid_21626101 = query.getOrDefault("Tags")
  valid_21626101 = validateParameter(valid_21626101, JArray, required = false,
                                   default = nil)
  if valid_21626101 != nil:
    section.add "Tags", valid_21626101
  var valid_21626102 = query.getOrDefault("Capabilities")
  valid_21626102 = validateParameter(valid_21626102, JArray, required = false,
                                   default = nil)
  if valid_21626102 != nil:
    section.add "Capabilities", valid_21626102
  var valid_21626103 = query.getOrDefault("Parameters")
  valid_21626103 = validateParameter(valid_21626103, JArray, required = false,
                                   default = nil)
  if valid_21626103 != nil:
    section.add "Parameters", valid_21626103
  var valid_21626104 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_21626104 = validateParameter(valid_21626104, JString, required = false,
                                   default = nil)
  if valid_21626104 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_21626104
  var valid_21626105 = query.getOrDefault("ChangeSetType")
  valid_21626105 = validateParameter(valid_21626105, JString, required = false,
                                   default = newJString("CREATE"))
  if valid_21626105 != nil:
    section.add "ChangeSetType", valid_21626105
  var valid_21626106 = query.getOrDefault("ResourcesToImport")
  valid_21626106 = validateParameter(valid_21626106, JArray, required = false,
                                   default = nil)
  if valid_21626106 != nil:
    section.add "ResourcesToImport", valid_21626106
  var valid_21626107 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_21626107 = validateParameter(valid_21626107, JArray, required = false,
                                   default = nil)
  if valid_21626107 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_21626107
  var valid_21626108 = query.getOrDefault("RoleARN")
  valid_21626108 = validateParameter(valid_21626108, JString, required = false,
                                   default = nil)
  if valid_21626108 != nil:
    section.add "RoleARN", valid_21626108
  var valid_21626109 = query.getOrDefault("NotificationARNs")
  valid_21626109 = validateParameter(valid_21626109, JArray, required = false,
                                   default = nil)
  if valid_21626109 != nil:
    section.add "NotificationARNs", valid_21626109
  var valid_21626110 = query.getOrDefault("Action")
  valid_21626110 = validateParameter(valid_21626110, JString, required = true,
                                   default = newJString("CreateChangeSet"))
  if valid_21626110 != nil:
    section.add "Action", valid_21626110
  var valid_21626111 = query.getOrDefault("UsePreviousTemplate")
  valid_21626111 = validateParameter(valid_21626111, JBool, required = false,
                                   default = nil)
  if valid_21626111 != nil:
    section.add "UsePreviousTemplate", valid_21626111
  var valid_21626112 = query.getOrDefault("ResourceTypes")
  valid_21626112 = validateParameter(valid_21626112, JArray, required = false,
                                   default = nil)
  if valid_21626112 != nil:
    section.add "ResourceTypes", valid_21626112
  var valid_21626113 = query.getOrDefault("Version")
  valid_21626113 = validateParameter(valid_21626113, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626113 != nil:
    section.add "Version", valid_21626113
  var valid_21626114 = query.getOrDefault("StackName")
  valid_21626114 = validateParameter(valid_21626114, JString, required = true,
                                   default = nil)
  if valid_21626114 != nil:
    section.add "StackName", valid_21626114
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626115 = header.getOrDefault("X-Amz-Date")
  valid_21626115 = validateParameter(valid_21626115, JString, required = false,
                                   default = nil)
  if valid_21626115 != nil:
    section.add "X-Amz-Date", valid_21626115
  var valid_21626116 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626116 = validateParameter(valid_21626116, JString, required = false,
                                   default = nil)
  if valid_21626116 != nil:
    section.add "X-Amz-Security-Token", valid_21626116
  var valid_21626117 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626117 = validateParameter(valid_21626117, JString, required = false,
                                   default = nil)
  if valid_21626117 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626117
  var valid_21626118 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626118 = validateParameter(valid_21626118, JString, required = false,
                                   default = nil)
  if valid_21626118 != nil:
    section.add "X-Amz-Algorithm", valid_21626118
  var valid_21626119 = header.getOrDefault("X-Amz-Signature")
  valid_21626119 = validateParameter(valid_21626119, JString, required = false,
                                   default = nil)
  if valid_21626119 != nil:
    section.add "X-Amz-Signature", valid_21626119
  var valid_21626120 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626120 = validateParameter(valid_21626120, JString, required = false,
                                   default = nil)
  if valid_21626120 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626120
  var valid_21626121 = header.getOrDefault("X-Amz-Credential")
  valid_21626121 = validateParameter(valid_21626121, JString, required = false,
                                   default = nil)
  if valid_21626121 != nil:
    section.add "X-Amz-Credential", valid_21626121
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626122: Call_GetCreateChangeSet_21626093; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_21626122.validator(path, query, header, formData, body, _)
  let scheme = call_21626122.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626122.makeUrl(scheme.get, call_21626122.host, call_21626122.base,
                               call_21626122.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626122, uri, valid, _)

proc call*(call_21626123: Call_GetCreateChangeSet_21626093; ChangeSetName: string;
          StackName: string; TemplateURL: string = ""; TemplateBody: string = "";
          ClientToken: string = ""; Description: string = ""; Tags: JsonNode = nil;
          Capabilities: JsonNode = nil; Parameters: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          ChangeSetType: string = "CREATE"; ResourcesToImport: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          RoleARN: string = ""; NotificationARNs: JsonNode = nil;
          Action: string = "CreateChangeSet"; UsePreviousTemplate: bool = false;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15"): Recallable =
  ## getCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: string (required)
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  var query_21626124 = newJObject()
  add(query_21626124, "TemplateURL", newJString(TemplateURL))
  add(query_21626124, "ChangeSetName", newJString(ChangeSetName))
  add(query_21626124, "TemplateBody", newJString(TemplateBody))
  add(query_21626124, "ClientToken", newJString(ClientToken))
  add(query_21626124, "Description", newJString(Description))
  if Tags != nil:
    query_21626124.add "Tags", Tags
  if Capabilities != nil:
    query_21626124.add "Capabilities", Capabilities
  if Parameters != nil:
    query_21626124.add "Parameters", Parameters
  add(query_21626124, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  add(query_21626124, "ChangeSetType", newJString(ChangeSetType))
  if ResourcesToImport != nil:
    query_21626124.add "ResourcesToImport", ResourcesToImport
  if RollbackConfigurationRollbackTriggers != nil:
    query_21626124.add "RollbackConfiguration.RollbackTriggers",
                      RollbackConfigurationRollbackTriggers
  add(query_21626124, "RoleARN", newJString(RoleARN))
  if NotificationARNs != nil:
    query_21626124.add "NotificationARNs", NotificationARNs
  add(query_21626124, "Action", newJString(Action))
  add(query_21626124, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if ResourceTypes != nil:
    query_21626124.add "ResourceTypes", ResourceTypes
  add(query_21626124, "Version", newJString(Version))
  add(query_21626124, "StackName", newJString(StackName))
  result = call_21626123.call(nil, query_21626124, nil, nil, nil)

var getCreateChangeSet* = Call_GetCreateChangeSet_21626093(
    name: "getCreateChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_GetCreateChangeSet_21626094, base: "/",
    makeUrl: url_GetCreateChangeSet_21626095, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStack_21626191 = ref object of OpenApiRestCall_21625435
proc url_PostCreateStack_21626193(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStack_21626192(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626194 = query.getOrDefault("Action")
  valid_21626194 = validateParameter(valid_21626194, JString, required = true,
                                   default = newJString("CreateStack"))
  if valid_21626194 != nil:
    section.add "Action", valid_21626194
  var valid_21626195 = query.getOrDefault("Version")
  valid_21626195 = validateParameter(valid_21626195, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626195 != nil:
    section.add "Version", valid_21626195
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626196 = header.getOrDefault("X-Amz-Date")
  valid_21626196 = validateParameter(valid_21626196, JString, required = false,
                                   default = nil)
  if valid_21626196 != nil:
    section.add "X-Amz-Date", valid_21626196
  var valid_21626197 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626197 = validateParameter(valid_21626197, JString, required = false,
                                   default = nil)
  if valid_21626197 != nil:
    section.add "X-Amz-Security-Token", valid_21626197
  var valid_21626198 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626198 = validateParameter(valid_21626198, JString, required = false,
                                   default = nil)
  if valid_21626198 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626198
  var valid_21626199 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626199 = validateParameter(valid_21626199, JString, required = false,
                                   default = nil)
  if valid_21626199 != nil:
    section.add "X-Amz-Algorithm", valid_21626199
  var valid_21626200 = header.getOrDefault("X-Amz-Signature")
  valid_21626200 = validateParameter(valid_21626200, JString, required = false,
                                   default = nil)
  if valid_21626200 != nil:
    section.add "X-Amz-Signature", valid_21626200
  var valid_21626201 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626201 = validateParameter(valid_21626201, JString, required = false,
                                   default = nil)
  if valid_21626201 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626201
  var valid_21626202 = header.getOrDefault("X-Amz-Credential")
  valid_21626202 = validateParameter(valid_21626202, JString, required = false,
                                   default = nil)
  if valid_21626202 != nil:
    section.add "X-Amz-Credential", valid_21626202
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  section = newJObject()
  var valid_21626203 = formData.getOrDefault("StackPolicyURL")
  valid_21626203 = validateParameter(valid_21626203, JString, required = false,
                                   default = nil)
  if valid_21626203 != nil:
    section.add "StackPolicyURL", valid_21626203
  var valid_21626204 = formData.getOrDefault("RoleARN")
  valid_21626204 = validateParameter(valid_21626204, JString, required = false,
                                   default = nil)
  if valid_21626204 != nil:
    section.add "RoleARN", valid_21626204
  var valid_21626205 = formData.getOrDefault("ResourceTypes")
  valid_21626205 = validateParameter(valid_21626205, JArray, required = false,
                                   default = nil)
  if valid_21626205 != nil:
    section.add "ResourceTypes", valid_21626205
  var valid_21626206 = formData.getOrDefault("EnableTerminationProtection")
  valid_21626206 = validateParameter(valid_21626206, JBool, required = false,
                                   default = nil)
  if valid_21626206 != nil:
    section.add "EnableTerminationProtection", valid_21626206
  var valid_21626207 = formData.getOrDefault("TemplateURL")
  valid_21626207 = validateParameter(valid_21626207, JString, required = false,
                                   default = nil)
  if valid_21626207 != nil:
    section.add "TemplateURL", valid_21626207
  var valid_21626208 = formData.getOrDefault("Capabilities")
  valid_21626208 = validateParameter(valid_21626208, JArray, required = false,
                                   default = nil)
  if valid_21626208 != nil:
    section.add "Capabilities", valid_21626208
  var valid_21626209 = formData.getOrDefault(
      "RollbackConfiguration.MonitoringTimeInMinutes")
  valid_21626209 = validateParameter(valid_21626209, JString, required = false,
                                   default = nil)
  if valid_21626209 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_21626209
  var valid_21626210 = formData.getOrDefault("Tags")
  valid_21626210 = validateParameter(valid_21626210, JArray, required = false,
                                   default = nil)
  if valid_21626210 != nil:
    section.add "Tags", valid_21626210
  var valid_21626211 = formData.getOrDefault("DisableRollback")
  valid_21626211 = validateParameter(valid_21626211, JBool, required = false,
                                   default = nil)
  if valid_21626211 != nil:
    section.add "DisableRollback", valid_21626211
  var valid_21626212 = formData.getOrDefault("ClientRequestToken")
  valid_21626212 = validateParameter(valid_21626212, JString, required = false,
                                   default = nil)
  if valid_21626212 != nil:
    section.add "ClientRequestToken", valid_21626212
  var valid_21626213 = formData.getOrDefault("Parameters")
  valid_21626213 = validateParameter(valid_21626213, JArray, required = false,
                                   default = nil)
  if valid_21626213 != nil:
    section.add "Parameters", valid_21626213
  var valid_21626214 = formData.getOrDefault("NotificationARNs")
  valid_21626214 = validateParameter(valid_21626214, JArray, required = false,
                                   default = nil)
  if valid_21626214 != nil:
    section.add "NotificationARNs", valid_21626214
  var valid_21626215 = formData.getOrDefault(
      "RollbackConfiguration.RollbackTriggers")
  valid_21626215 = validateParameter(valid_21626215, JArray, required = false,
                                   default = nil)
  if valid_21626215 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_21626215
  var valid_21626216 = formData.getOrDefault("OnFailure")
  valid_21626216 = validateParameter(valid_21626216, JString, required = false,
                                   default = newJString("DO_NOTHING"))
  if valid_21626216 != nil:
    section.add "OnFailure", valid_21626216
  var valid_21626217 = formData.getOrDefault("TimeoutInMinutes")
  valid_21626217 = validateParameter(valid_21626217, JInt, required = false,
                                   default = nil)
  if valid_21626217 != nil:
    section.add "TimeoutInMinutes", valid_21626217
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21626218 = formData.getOrDefault("StackName")
  valid_21626218 = validateParameter(valid_21626218, JString, required = true,
                                   default = nil)
  if valid_21626218 != nil:
    section.add "StackName", valid_21626218
  var valid_21626219 = formData.getOrDefault("TemplateBody")
  valid_21626219 = validateParameter(valid_21626219, JString, required = false,
                                   default = nil)
  if valid_21626219 != nil:
    section.add "TemplateBody", valid_21626219
  var valid_21626220 = formData.getOrDefault("StackPolicyBody")
  valid_21626220 = validateParameter(valid_21626220, JString, required = false,
                                   default = nil)
  if valid_21626220 != nil:
    section.add "StackPolicyBody", valid_21626220
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626221: Call_PostCreateStack_21626191; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_21626221.validator(path, query, header, formData, body, _)
  let scheme = call_21626221.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626221.makeUrl(scheme.get, call_21626221.host, call_21626221.base,
                               call_21626221.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626221, uri, valid, _)

proc call*(call_21626222: Call_PostCreateStack_21626191; StackName: string;
          StackPolicyURL: string = ""; RoleARN: string = "";
          ResourceTypes: JsonNode = nil; EnableTerminationProtection: bool = false;
          TemplateURL: string = ""; Capabilities: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Tags: JsonNode = nil; DisableRollback: bool = false;
          ClientRequestToken: string = ""; Parameters: JsonNode = nil;
          Action: string = "CreateStack"; NotificationARNs: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          OnFailure: string = "DO_NOTHING"; TimeoutInMinutes: int = 0;
          TemplateBody: string = ""; Version: string = "2010-05-15";
          StackPolicyBody: string = ""): Recallable =
  ## postCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Action: string (required)
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: string (required)
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  var query_21626223 = newJObject()
  var formData_21626224 = newJObject()
  add(formData_21626224, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_21626224, "RoleARN", newJString(RoleARN))
  if ResourceTypes != nil:
    formData_21626224.add "ResourceTypes", ResourceTypes
  add(formData_21626224, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(formData_21626224, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_21626224.add "Capabilities", Capabilities
  add(formData_21626224, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Tags != nil:
    formData_21626224.add "Tags", Tags
  add(formData_21626224, "DisableRollback", newJBool(DisableRollback))
  add(formData_21626224, "ClientRequestToken", newJString(ClientRequestToken))
  if Parameters != nil:
    formData_21626224.add "Parameters", Parameters
  add(query_21626223, "Action", newJString(Action))
  if NotificationARNs != nil:
    formData_21626224.add "NotificationARNs", NotificationARNs
  if RollbackConfigurationRollbackTriggers != nil:
    formData_21626224.add "RollbackConfiguration.RollbackTriggers",
                         RollbackConfigurationRollbackTriggers
  add(formData_21626224, "OnFailure", newJString(OnFailure))
  add(formData_21626224, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  add(formData_21626224, "StackName", newJString(StackName))
  add(formData_21626224, "TemplateBody", newJString(TemplateBody))
  add(query_21626223, "Version", newJString(Version))
  add(formData_21626224, "StackPolicyBody", newJString(StackPolicyBody))
  result = call_21626222.call(nil, query_21626223, nil, formData_21626224, nil)

var postCreateStack* = Call_PostCreateStack_21626191(name: "postCreateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_PostCreateStack_21626192,
    base: "/", makeUrl: url_PostCreateStack_21626193,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStack_21626158 = ref object of OpenApiRestCall_21625435
proc url_GetCreateStack_21626160(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStack_21626159(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: JString (required)
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  section = newJObject()
  var valid_21626161 = query.getOrDefault("StackPolicyBody")
  valid_21626161 = validateParameter(valid_21626161, JString, required = false,
                                   default = nil)
  if valid_21626161 != nil:
    section.add "StackPolicyBody", valid_21626161
  var valid_21626162 = query.getOrDefault("TemplateURL")
  valid_21626162 = validateParameter(valid_21626162, JString, required = false,
                                   default = nil)
  if valid_21626162 != nil:
    section.add "TemplateURL", valid_21626162
  var valid_21626163 = query.getOrDefault("StackPolicyURL")
  valid_21626163 = validateParameter(valid_21626163, JString, required = false,
                                   default = nil)
  if valid_21626163 != nil:
    section.add "StackPolicyURL", valid_21626163
  var valid_21626164 = query.getOrDefault("TemplateBody")
  valid_21626164 = validateParameter(valid_21626164, JString, required = false,
                                   default = nil)
  if valid_21626164 != nil:
    section.add "TemplateBody", valid_21626164
  var valid_21626165 = query.getOrDefault("DisableRollback")
  valid_21626165 = validateParameter(valid_21626165, JBool, required = false,
                                   default = nil)
  if valid_21626165 != nil:
    section.add "DisableRollback", valid_21626165
  var valid_21626166 = query.getOrDefault("Tags")
  valid_21626166 = validateParameter(valid_21626166, JArray, required = false,
                                   default = nil)
  if valid_21626166 != nil:
    section.add "Tags", valid_21626166
  var valid_21626167 = query.getOrDefault("Capabilities")
  valid_21626167 = validateParameter(valid_21626167, JArray, required = false,
                                   default = nil)
  if valid_21626167 != nil:
    section.add "Capabilities", valid_21626167
  var valid_21626168 = query.getOrDefault("Parameters")
  valid_21626168 = validateParameter(valid_21626168, JArray, required = false,
                                   default = nil)
  if valid_21626168 != nil:
    section.add "Parameters", valid_21626168
  var valid_21626169 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_21626169 = validateParameter(valid_21626169, JString, required = false,
                                   default = nil)
  if valid_21626169 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_21626169
  var valid_21626170 = query.getOrDefault("Action")
  valid_21626170 = validateParameter(valid_21626170, JString, required = true,
                                   default = newJString("CreateStack"))
  if valid_21626170 != nil:
    section.add "Action", valid_21626170
  var valid_21626171 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_21626171 = validateParameter(valid_21626171, JArray, required = false,
                                   default = nil)
  if valid_21626171 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_21626171
  var valid_21626172 = query.getOrDefault("NotificationARNs")
  valid_21626172 = validateParameter(valid_21626172, JArray, required = false,
                                   default = nil)
  if valid_21626172 != nil:
    section.add "NotificationARNs", valid_21626172
  var valid_21626173 = query.getOrDefault("RoleARN")
  valid_21626173 = validateParameter(valid_21626173, JString, required = false,
                                   default = nil)
  if valid_21626173 != nil:
    section.add "RoleARN", valid_21626173
  var valid_21626174 = query.getOrDefault("ClientRequestToken")
  valid_21626174 = validateParameter(valid_21626174, JString, required = false,
                                   default = nil)
  if valid_21626174 != nil:
    section.add "ClientRequestToken", valid_21626174
  var valid_21626175 = query.getOrDefault("EnableTerminationProtection")
  valid_21626175 = validateParameter(valid_21626175, JBool, required = false,
                                   default = nil)
  if valid_21626175 != nil:
    section.add "EnableTerminationProtection", valid_21626175
  var valid_21626176 = query.getOrDefault("OnFailure")
  valid_21626176 = validateParameter(valid_21626176, JString, required = false,
                                   default = newJString("DO_NOTHING"))
  if valid_21626176 != nil:
    section.add "OnFailure", valid_21626176
  var valid_21626177 = query.getOrDefault("TimeoutInMinutes")
  valid_21626177 = validateParameter(valid_21626177, JInt, required = false,
                                   default = nil)
  if valid_21626177 != nil:
    section.add "TimeoutInMinutes", valid_21626177
  var valid_21626178 = query.getOrDefault("ResourceTypes")
  valid_21626178 = validateParameter(valid_21626178, JArray, required = false,
                                   default = nil)
  if valid_21626178 != nil:
    section.add "ResourceTypes", valid_21626178
  var valid_21626179 = query.getOrDefault("Version")
  valid_21626179 = validateParameter(valid_21626179, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626179 != nil:
    section.add "Version", valid_21626179
  var valid_21626180 = query.getOrDefault("StackName")
  valid_21626180 = validateParameter(valid_21626180, JString, required = true,
                                   default = nil)
  if valid_21626180 != nil:
    section.add "StackName", valid_21626180
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626181 = header.getOrDefault("X-Amz-Date")
  valid_21626181 = validateParameter(valid_21626181, JString, required = false,
                                   default = nil)
  if valid_21626181 != nil:
    section.add "X-Amz-Date", valid_21626181
  var valid_21626182 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626182 = validateParameter(valid_21626182, JString, required = false,
                                   default = nil)
  if valid_21626182 != nil:
    section.add "X-Amz-Security-Token", valid_21626182
  var valid_21626183 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626183 = validateParameter(valid_21626183, JString, required = false,
                                   default = nil)
  if valid_21626183 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626183
  var valid_21626184 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626184 = validateParameter(valid_21626184, JString, required = false,
                                   default = nil)
  if valid_21626184 != nil:
    section.add "X-Amz-Algorithm", valid_21626184
  var valid_21626185 = header.getOrDefault("X-Amz-Signature")
  valid_21626185 = validateParameter(valid_21626185, JString, required = false,
                                   default = nil)
  if valid_21626185 != nil:
    section.add "X-Amz-Signature", valid_21626185
  var valid_21626186 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626186 = validateParameter(valid_21626186, JString, required = false,
                                   default = nil)
  if valid_21626186 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626186
  var valid_21626187 = header.getOrDefault("X-Amz-Credential")
  valid_21626187 = validateParameter(valid_21626187, JString, required = false,
                                   default = nil)
  if valid_21626187 != nil:
    section.add "X-Amz-Credential", valid_21626187
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626188: Call_GetCreateStack_21626158; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_21626188.validator(path, query, header, formData, body, _)
  let scheme = call_21626188.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626188.makeUrl(scheme.get, call_21626188.host, call_21626188.base,
                               call_21626188.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626188, uri, valid, _)

proc call*(call_21626189: Call_GetCreateStack_21626158; StackName: string;
          StackPolicyBody: string = ""; TemplateURL: string = "";
          StackPolicyURL: string = ""; TemplateBody: string = "";
          DisableRollback: bool = false; Tags: JsonNode = nil;
          Capabilities: JsonNode = nil; Parameters: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Action: string = "CreateStack";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; RoleARN: string = "";
          ClientRequestToken: string = "";
          EnableTerminationProtection: bool = false;
          OnFailure: string = "DO_NOTHING"; TimeoutInMinutes: int = 0;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15"): Recallable =
  ## getCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: string (required)
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  var query_21626190 = newJObject()
  add(query_21626190, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_21626190, "TemplateURL", newJString(TemplateURL))
  add(query_21626190, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_21626190, "TemplateBody", newJString(TemplateBody))
  add(query_21626190, "DisableRollback", newJBool(DisableRollback))
  if Tags != nil:
    query_21626190.add "Tags", Tags
  if Capabilities != nil:
    query_21626190.add "Capabilities", Capabilities
  if Parameters != nil:
    query_21626190.add "Parameters", Parameters
  add(query_21626190, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  add(query_21626190, "Action", newJString(Action))
  if RollbackConfigurationRollbackTriggers != nil:
    query_21626190.add "RollbackConfiguration.RollbackTriggers",
                      RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    query_21626190.add "NotificationARNs", NotificationARNs
  add(query_21626190, "RoleARN", newJString(RoleARN))
  add(query_21626190, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21626190, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_21626190, "OnFailure", newJString(OnFailure))
  add(query_21626190, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  if ResourceTypes != nil:
    query_21626190.add "ResourceTypes", ResourceTypes
  add(query_21626190, "Version", newJString(Version))
  add(query_21626190, "StackName", newJString(StackName))
  result = call_21626189.call(nil, query_21626190, nil, nil, nil)

var getCreateStack* = Call_GetCreateStack_21626158(name: "getCreateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_GetCreateStack_21626159,
    base: "/", makeUrl: url_GetCreateStack_21626160,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackInstances_21626252 = ref object of OpenApiRestCall_21625435
proc url_PostCreateStackInstances_21626254(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackInstances_21626253(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626255 = query.getOrDefault("Action")
  valid_21626255 = validateParameter(valid_21626255, JString, required = true,
                                   default = newJString("CreateStackInstances"))
  if valid_21626255 != nil:
    section.add "Action", valid_21626255
  var valid_21626256 = query.getOrDefault("Version")
  valid_21626256 = validateParameter(valid_21626256, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626256 != nil:
    section.add "Version", valid_21626256
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626257 = header.getOrDefault("X-Amz-Date")
  valid_21626257 = validateParameter(valid_21626257, JString, required = false,
                                   default = nil)
  if valid_21626257 != nil:
    section.add "X-Amz-Date", valid_21626257
  var valid_21626258 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626258 = validateParameter(valid_21626258, JString, required = false,
                                   default = nil)
  if valid_21626258 != nil:
    section.add "X-Amz-Security-Token", valid_21626258
  var valid_21626259 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626259 = validateParameter(valid_21626259, JString, required = false,
                                   default = nil)
  if valid_21626259 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626259
  var valid_21626260 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626260 = validateParameter(valid_21626260, JString, required = false,
                                   default = nil)
  if valid_21626260 != nil:
    section.add "X-Amz-Algorithm", valid_21626260
  var valid_21626261 = header.getOrDefault("X-Amz-Signature")
  valid_21626261 = validateParameter(valid_21626261, JString, required = false,
                                   default = nil)
  if valid_21626261 != nil:
    section.add "X-Amz-Signature", valid_21626261
  var valid_21626262 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626262 = validateParameter(valid_21626262, JString, required = false,
                                   default = nil)
  if valid_21626262 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626262
  var valid_21626263 = header.getOrDefault("X-Amz-Credential")
  valid_21626263 = validateParameter(valid_21626263, JString, required = false,
                                   default = nil)
  if valid_21626263 != nil:
    section.add "X-Amz-Credential", valid_21626263
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  section = newJObject()
  var valid_21626264 = formData.getOrDefault(
      "OperationPreferences.FailureTolerancePercentage")
  valid_21626264 = validateParameter(valid_21626264, JString, required = false,
                                   default = nil)
  if valid_21626264 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21626264
  var valid_21626265 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentCount")
  valid_21626265 = validateParameter(valid_21626265, JString, required = false,
                                   default = nil)
  if valid_21626265 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21626265
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21626266 = formData.getOrDefault("StackSetName")
  valid_21626266 = validateParameter(valid_21626266, JString, required = true,
                                   default = nil)
  if valid_21626266 != nil:
    section.add "StackSetName", valid_21626266
  var valid_21626267 = formData.getOrDefault("Accounts")
  valid_21626267 = validateParameter(valid_21626267, JArray, required = false,
                                   default = nil)
  if valid_21626267 != nil:
    section.add "Accounts", valid_21626267
  var valid_21626268 = formData.getOrDefault("Regions")
  valid_21626268 = validateParameter(valid_21626268, JArray, required = true,
                                   default = nil)
  if valid_21626268 != nil:
    section.add "Regions", valid_21626268
  var valid_21626269 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_21626269 = validateParameter(valid_21626269, JArray, required = false,
                                   default = nil)
  if valid_21626269 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21626269
  var valid_21626270 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentPercentage")
  valid_21626270 = validateParameter(valid_21626270, JString, required = false,
                                   default = nil)
  if valid_21626270 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21626270
  var valid_21626271 = formData.getOrDefault("DeploymentTargets.Accounts")
  valid_21626271 = validateParameter(valid_21626271, JArray, required = false,
                                   default = nil)
  if valid_21626271 != nil:
    section.add "DeploymentTargets.Accounts", valid_21626271
  var valid_21626272 = formData.getOrDefault(
      "OperationPreferences.FailureToleranceCount")
  valid_21626272 = validateParameter(valid_21626272, JString, required = false,
                                   default = nil)
  if valid_21626272 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21626272
  var valid_21626273 = formData.getOrDefault(
      "DeploymentTargets.OrganizationalUnitIds")
  valid_21626273 = validateParameter(valid_21626273, JArray, required = false,
                                   default = nil)
  if valid_21626273 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21626273
  var valid_21626274 = formData.getOrDefault("OperationId")
  valid_21626274 = validateParameter(valid_21626274, JString, required = false,
                                   default = nil)
  if valid_21626274 != nil:
    section.add "OperationId", valid_21626274
  var valid_21626275 = formData.getOrDefault("ParameterOverrides")
  valid_21626275 = validateParameter(valid_21626275, JArray, required = false,
                                   default = nil)
  if valid_21626275 != nil:
    section.add "ParameterOverrides", valid_21626275
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626276: Call_PostCreateStackInstances_21626252;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
  ## 
  let valid = call_21626276.validator(path, query, header, formData, body, _)
  let scheme = call_21626276.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626276.makeUrl(scheme.get, call_21626276.host, call_21626276.base,
                               call_21626276.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626276, uri, valid, _)

proc call*(call_21626277: Call_PostCreateStackInstances_21626252;
          StackSetName: string; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Accounts: JsonNode = nil; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "CreateStackInstances";
          DeploymentTargetsAccounts: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil;
          OperationId: string = ""; Version: string = "2010-05-15";
          ParameterOverrides: JsonNode = nil): Recallable =
  ## postCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Version: string (required)
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  var query_21626278 = newJObject()
  var formData_21626279 = newJObject()
  add(formData_21626279, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_21626279, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_21626279, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    formData_21626279.add "Accounts", Accounts
  if Regions != nil:
    formData_21626279.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    formData_21626279.add "OperationPreferences.RegionOrder",
                         OperationPreferencesRegionOrder
  add(formData_21626279, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21626278, "Action", newJString(Action))
  if DeploymentTargetsAccounts != nil:
    formData_21626279.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  add(formData_21626279, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if DeploymentTargetsOrganizationalUnitIds != nil:
    formData_21626279.add "DeploymentTargets.OrganizationalUnitIds",
                         DeploymentTargetsOrganizationalUnitIds
  add(formData_21626279, "OperationId", newJString(OperationId))
  add(query_21626278, "Version", newJString(Version))
  if ParameterOverrides != nil:
    formData_21626279.add "ParameterOverrides", ParameterOverrides
  result = call_21626277.call(nil, query_21626278, nil, formData_21626279, nil)

var postCreateStackInstances* = Call_PostCreateStackInstances_21626252(
    name: "postCreateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_PostCreateStackInstances_21626253, base: "/",
    makeUrl: url_PostCreateStackInstances_21626254,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackInstances_21626225 = ref object of OpenApiRestCall_21625435
proc url_GetCreateStackInstances_21626227(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackInstances_21626226(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  section = newJObject()
  var valid_21626228 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_21626228 = validateParameter(valid_21626228, JString, required = false,
                                   default = nil)
  if valid_21626228 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21626228
  var valid_21626229 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_21626229 = validateParameter(valid_21626229, JString, required = false,
                                   default = nil)
  if valid_21626229 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21626229
  var valid_21626230 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_21626230 = validateParameter(valid_21626230, JArray, required = false,
                                   default = nil)
  if valid_21626230 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21626230
  var valid_21626231 = query.getOrDefault("Action")
  valid_21626231 = validateParameter(valid_21626231, JString, required = true,
                                   default = newJString("CreateStackInstances"))
  if valid_21626231 != nil:
    section.add "Action", valid_21626231
  var valid_21626232 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_21626232 = validateParameter(valid_21626232, JString, required = false,
                                   default = nil)
  if valid_21626232 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21626232
  var valid_21626233 = query.getOrDefault("ParameterOverrides")
  valid_21626233 = validateParameter(valid_21626233, JArray, required = false,
                                   default = nil)
  if valid_21626233 != nil:
    section.add "ParameterOverrides", valid_21626233
  var valid_21626234 = query.getOrDefault("StackSetName")
  valid_21626234 = validateParameter(valid_21626234, JString, required = true,
                                   default = nil)
  if valid_21626234 != nil:
    section.add "StackSetName", valid_21626234
  var valid_21626235 = query.getOrDefault("Accounts")
  valid_21626235 = validateParameter(valid_21626235, JArray, required = false,
                                   default = nil)
  if valid_21626235 != nil:
    section.add "Accounts", valid_21626235
  var valid_21626236 = query.getOrDefault("Regions")
  valid_21626236 = validateParameter(valid_21626236, JArray, required = true,
                                   default = nil)
  if valid_21626236 != nil:
    section.add "Regions", valid_21626236
  var valid_21626237 = query.getOrDefault("OperationId")
  valid_21626237 = validateParameter(valid_21626237, JString, required = false,
                                   default = nil)
  if valid_21626237 != nil:
    section.add "OperationId", valid_21626237
  var valid_21626238 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_21626238 = validateParameter(valid_21626238, JString, required = false,
                                   default = nil)
  if valid_21626238 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21626238
  var valid_21626239 = query.getOrDefault("Version")
  valid_21626239 = validateParameter(valid_21626239, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626239 != nil:
    section.add "Version", valid_21626239
  var valid_21626240 = query.getOrDefault("DeploymentTargets.Accounts")
  valid_21626240 = validateParameter(valid_21626240, JArray, required = false,
                                   default = nil)
  if valid_21626240 != nil:
    section.add "DeploymentTargets.Accounts", valid_21626240
  var valid_21626241 = query.getOrDefault("DeploymentTargets.OrganizationalUnitIds")
  valid_21626241 = validateParameter(valid_21626241, JArray, required = false,
                                   default = nil)
  if valid_21626241 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21626241
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626242 = header.getOrDefault("X-Amz-Date")
  valid_21626242 = validateParameter(valid_21626242, JString, required = false,
                                   default = nil)
  if valid_21626242 != nil:
    section.add "X-Amz-Date", valid_21626242
  var valid_21626243 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626243 = validateParameter(valid_21626243, JString, required = false,
                                   default = nil)
  if valid_21626243 != nil:
    section.add "X-Amz-Security-Token", valid_21626243
  var valid_21626244 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626244 = validateParameter(valid_21626244, JString, required = false,
                                   default = nil)
  if valid_21626244 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626244
  var valid_21626245 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626245 = validateParameter(valid_21626245, JString, required = false,
                                   default = nil)
  if valid_21626245 != nil:
    section.add "X-Amz-Algorithm", valid_21626245
  var valid_21626246 = header.getOrDefault("X-Amz-Signature")
  valid_21626246 = validateParameter(valid_21626246, JString, required = false,
                                   default = nil)
  if valid_21626246 != nil:
    section.add "X-Amz-Signature", valid_21626246
  var valid_21626247 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626247 = validateParameter(valid_21626247, JString, required = false,
                                   default = nil)
  if valid_21626247 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626247
  var valid_21626248 = header.getOrDefault("X-Amz-Credential")
  valid_21626248 = validateParameter(valid_21626248, JString, required = false,
                                   default = nil)
  if valid_21626248 != nil:
    section.add "X-Amz-Credential", valid_21626248
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626249: Call_GetCreateStackInstances_21626225;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
  ## 
  let valid = call_21626249.validator(path, query, header, formData, body, _)
  let scheme = call_21626249.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626249.makeUrl(scheme.get, call_21626249.host, call_21626249.base,
                               call_21626249.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626249, uri, valid, _)

proc call*(call_21626250: Call_GetCreateStackInstances_21626225;
          StackSetName: string; Regions: JsonNode;
          OperationPreferencesFailureToleranceCount: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          Action: string = "CreateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          ParameterOverrides: JsonNode = nil; Accounts: JsonNode = nil;
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"; DeploymentTargetsAccounts: JsonNode = nil;
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil): Recallable =
  ## getCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  var query_21626251 = newJObject()
  add(query_21626251, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_21626251, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if OperationPreferencesRegionOrder != nil:
    query_21626251.add "OperationPreferences.RegionOrder",
                      OperationPreferencesRegionOrder
  add(query_21626251, "Action", newJString(Action))
  add(query_21626251, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  if ParameterOverrides != nil:
    query_21626251.add "ParameterOverrides", ParameterOverrides
  add(query_21626251, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    query_21626251.add "Accounts", Accounts
  if Regions != nil:
    query_21626251.add "Regions", Regions
  add(query_21626251, "OperationId", newJString(OperationId))
  add(query_21626251, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_21626251, "Version", newJString(Version))
  if DeploymentTargetsAccounts != nil:
    query_21626251.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  if DeploymentTargetsOrganizationalUnitIds != nil:
    query_21626251.add "DeploymentTargets.OrganizationalUnitIds",
                      DeploymentTargetsOrganizationalUnitIds
  result = call_21626250.call(nil, query_21626251, nil, nil, nil)

var getCreateStackInstances* = Call_GetCreateStackInstances_21626225(
    name: "getCreateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_GetCreateStackInstances_21626226, base: "/",
    makeUrl: url_GetCreateStackInstances_21626227,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackSet_21626308 = ref object of OpenApiRestCall_21625435
proc url_PostCreateStackSet_21626310(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackSet_21626309(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626311 = query.getOrDefault("Action")
  valid_21626311 = validateParameter(valid_21626311, JString, required = true,
                                   default = newJString("CreateStackSet"))
  if valid_21626311 != nil:
    section.add "Action", valid_21626311
  var valid_21626312 = query.getOrDefault("Version")
  valid_21626312 = validateParameter(valid_21626312, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626312 != nil:
    section.add "Version", valid_21626312
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626313 = header.getOrDefault("X-Amz-Date")
  valid_21626313 = validateParameter(valid_21626313, JString, required = false,
                                   default = nil)
  if valid_21626313 != nil:
    section.add "X-Amz-Date", valid_21626313
  var valid_21626314 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626314 = validateParameter(valid_21626314, JString, required = false,
                                   default = nil)
  if valid_21626314 != nil:
    section.add "X-Amz-Security-Token", valid_21626314
  var valid_21626315 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626315 = validateParameter(valid_21626315, JString, required = false,
                                   default = nil)
  if valid_21626315 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626315
  var valid_21626316 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626316 = validateParameter(valid_21626316, JString, required = false,
                                   default = nil)
  if valid_21626316 != nil:
    section.add "X-Amz-Algorithm", valid_21626316
  var valid_21626317 = header.getOrDefault("X-Amz-Signature")
  valid_21626317 = validateParameter(valid_21626317, JString, required = false,
                                   default = nil)
  if valid_21626317 != nil:
    section.add "X-Amz-Signature", valid_21626317
  var valid_21626318 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626318 = validateParameter(valid_21626318, JString, required = false,
                                   default = nil)
  if valid_21626318 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626318
  var valid_21626319 = header.getOrDefault("X-Amz-Credential")
  valid_21626319 = validateParameter(valid_21626319, JString, required = false,
                                   default = nil)
  if valid_21626319 != nil:
    section.add "X-Amz-Credential", valid_21626319
  result.add "header", section
  ## parameters in `formData` object:
  ##   AutoDeployment.RetainStacksOnAccountRemoval: JString
  ##                                              : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  ##   AutoDeployment.Enabled: JString
  ##                         : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   PermissionModel: JString
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. By default, <code>SELF-MANAGED</code> is specified.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  section = newJObject()
  var valid_21626320 = formData.getOrDefault(
      "AutoDeployment.RetainStacksOnAccountRemoval")
  valid_21626320 = validateParameter(valid_21626320, JString, required = false,
                                   default = nil)
  if valid_21626320 != nil:
    section.add "AutoDeployment.RetainStacksOnAccountRemoval", valid_21626320
  var valid_21626321 = formData.getOrDefault("AutoDeployment.Enabled")
  valid_21626321 = validateParameter(valid_21626321, JString, required = false,
                                   default = nil)
  if valid_21626321 != nil:
    section.add "AutoDeployment.Enabled", valid_21626321
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21626322 = formData.getOrDefault("StackSetName")
  valid_21626322 = validateParameter(valid_21626322, JString, required = true,
                                   default = nil)
  if valid_21626322 != nil:
    section.add "StackSetName", valid_21626322
  var valid_21626323 = formData.getOrDefault("ExecutionRoleName")
  valid_21626323 = validateParameter(valid_21626323, JString, required = false,
                                   default = nil)
  if valid_21626323 != nil:
    section.add "ExecutionRoleName", valid_21626323
  var valid_21626324 = formData.getOrDefault("TemplateURL")
  valid_21626324 = validateParameter(valid_21626324, JString, required = false,
                                   default = nil)
  if valid_21626324 != nil:
    section.add "TemplateURL", valid_21626324
  var valid_21626325 = formData.getOrDefault("Capabilities")
  valid_21626325 = validateParameter(valid_21626325, JArray, required = false,
                                   default = nil)
  if valid_21626325 != nil:
    section.add "Capabilities", valid_21626325
  var valid_21626326 = formData.getOrDefault("Tags")
  valid_21626326 = validateParameter(valid_21626326, JArray, required = false,
                                   default = nil)
  if valid_21626326 != nil:
    section.add "Tags", valid_21626326
  var valid_21626327 = formData.getOrDefault("ClientRequestToken")
  valid_21626327 = validateParameter(valid_21626327, JString, required = false,
                                   default = nil)
  if valid_21626327 != nil:
    section.add "ClientRequestToken", valid_21626327
  var valid_21626328 = formData.getOrDefault("PermissionModel")
  valid_21626328 = validateParameter(valid_21626328, JString, required = false,
                                   default = newJString("SERVICE_MANAGED"))
  if valid_21626328 != nil:
    section.add "PermissionModel", valid_21626328
  var valid_21626329 = formData.getOrDefault("Parameters")
  valid_21626329 = validateParameter(valid_21626329, JArray, required = false,
                                   default = nil)
  if valid_21626329 != nil:
    section.add "Parameters", valid_21626329
  var valid_21626330 = formData.getOrDefault("AdministrationRoleARN")
  valid_21626330 = validateParameter(valid_21626330, JString, required = false,
                                   default = nil)
  if valid_21626330 != nil:
    section.add "AdministrationRoleARN", valid_21626330
  var valid_21626331 = formData.getOrDefault("TemplateBody")
  valid_21626331 = validateParameter(valid_21626331, JString, required = false,
                                   default = nil)
  if valid_21626331 != nil:
    section.add "TemplateBody", valid_21626331
  var valid_21626332 = formData.getOrDefault("Description")
  valid_21626332 = validateParameter(valid_21626332, JString, required = false,
                                   default = nil)
  if valid_21626332 != nil:
    section.add "Description", valid_21626332
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626333: Call_PostCreateStackSet_21626308; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_21626333.validator(path, query, header, formData, body, _)
  let scheme = call_21626333.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626333.makeUrl(scheme.get, call_21626333.host, call_21626333.base,
                               call_21626333.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626333, uri, valid, _)

proc call*(call_21626334: Call_PostCreateStackSet_21626308; StackSetName: string;
          AutoDeploymentRetainStacksOnAccountRemoval: string = "";
          AutoDeploymentEnabled: string = ""; ExecutionRoleName: string = "";
          TemplateURL: string = ""; Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          ClientRequestToken: string = "";
          PermissionModel: string = "SERVICE_MANAGED"; Parameters: JsonNode = nil;
          Action: string = "CreateStackSet"; AdministrationRoleARN: string = "";
          TemplateBody: string = ""; Version: string = "2010-05-15";
          Description: string = ""): Recallable =
  ## postCreateStackSet
  ## Creates a stack set.
  ##   AutoDeploymentRetainStacksOnAccountRemoval: string
  ##                                             : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  ##   AutoDeploymentEnabled: string
  ##                        : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   PermissionModel: string
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. By default, <code>SELF-MANAGED</code> is specified.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Action: string (required)
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: string (required)
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  var query_21626335 = newJObject()
  var formData_21626336 = newJObject()
  add(formData_21626336, "AutoDeployment.RetainStacksOnAccountRemoval",
      newJString(AutoDeploymentRetainStacksOnAccountRemoval))
  add(formData_21626336, "AutoDeployment.Enabled",
      newJString(AutoDeploymentEnabled))
  add(formData_21626336, "StackSetName", newJString(StackSetName))
  add(formData_21626336, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(formData_21626336, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_21626336.add "Capabilities", Capabilities
  if Tags != nil:
    formData_21626336.add "Tags", Tags
  add(formData_21626336, "ClientRequestToken", newJString(ClientRequestToken))
  add(formData_21626336, "PermissionModel", newJString(PermissionModel))
  if Parameters != nil:
    formData_21626336.add "Parameters", Parameters
  add(query_21626335, "Action", newJString(Action))
  add(formData_21626336, "AdministrationRoleARN",
      newJString(AdministrationRoleARN))
  add(formData_21626336, "TemplateBody", newJString(TemplateBody))
  add(query_21626335, "Version", newJString(Version))
  add(formData_21626336, "Description", newJString(Description))
  result = call_21626334.call(nil, query_21626335, nil, formData_21626336, nil)

var postCreateStackSet* = Call_PostCreateStackSet_21626308(
    name: "postCreateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackSet",
    validator: validate_PostCreateStackSet_21626309, base: "/",
    makeUrl: url_PostCreateStackSet_21626310, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackSet_21626280 = ref object of OpenApiRestCall_21625435
proc url_GetCreateStackSet_21626282(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackSet_21626281(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   PermissionModel: JString
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. By default, <code>SELF-MANAGED</code> is specified.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AutoDeployment.Enabled: JString
  ##                         : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   Version: JString (required)
  ##   AutoDeployment.RetainStacksOnAccountRemoval: JString
  ##                                              : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  section = newJObject()
  var valid_21626283 = query.getOrDefault("TemplateURL")
  valid_21626283 = validateParameter(valid_21626283, JString, required = false,
                                   default = nil)
  if valid_21626283 != nil:
    section.add "TemplateURL", valid_21626283
  var valid_21626284 = query.getOrDefault("TemplateBody")
  valid_21626284 = validateParameter(valid_21626284, JString, required = false,
                                   default = nil)
  if valid_21626284 != nil:
    section.add "TemplateBody", valid_21626284
  var valid_21626285 = query.getOrDefault("Description")
  valid_21626285 = validateParameter(valid_21626285, JString, required = false,
                                   default = nil)
  if valid_21626285 != nil:
    section.add "Description", valid_21626285
  var valid_21626286 = query.getOrDefault("AdministrationRoleARN")
  valid_21626286 = validateParameter(valid_21626286, JString, required = false,
                                   default = nil)
  if valid_21626286 != nil:
    section.add "AdministrationRoleARN", valid_21626286
  var valid_21626287 = query.getOrDefault("Tags")
  valid_21626287 = validateParameter(valid_21626287, JArray, required = false,
                                   default = nil)
  if valid_21626287 != nil:
    section.add "Tags", valid_21626287
  var valid_21626288 = query.getOrDefault("PermissionModel")
  valid_21626288 = validateParameter(valid_21626288, JString, required = false,
                                   default = newJString("SERVICE_MANAGED"))
  if valid_21626288 != nil:
    section.add "PermissionModel", valid_21626288
  var valid_21626289 = query.getOrDefault("Capabilities")
  valid_21626289 = validateParameter(valid_21626289, JArray, required = false,
                                   default = nil)
  if valid_21626289 != nil:
    section.add "Capabilities", valid_21626289
  var valid_21626290 = query.getOrDefault("Parameters")
  valid_21626290 = validateParameter(valid_21626290, JArray, required = false,
                                   default = nil)
  if valid_21626290 != nil:
    section.add "Parameters", valid_21626290
  var valid_21626291 = query.getOrDefault("Action")
  valid_21626291 = validateParameter(valid_21626291, JString, required = true,
                                   default = newJString("CreateStackSet"))
  if valid_21626291 != nil:
    section.add "Action", valid_21626291
  var valid_21626292 = query.getOrDefault("ClientRequestToken")
  valid_21626292 = validateParameter(valid_21626292, JString, required = false,
                                   default = nil)
  if valid_21626292 != nil:
    section.add "ClientRequestToken", valid_21626292
  var valid_21626293 = query.getOrDefault("StackSetName")
  valid_21626293 = validateParameter(valid_21626293, JString, required = true,
                                   default = nil)
  if valid_21626293 != nil:
    section.add "StackSetName", valid_21626293
  var valid_21626294 = query.getOrDefault("AutoDeployment.Enabled")
  valid_21626294 = validateParameter(valid_21626294, JString, required = false,
                                   default = nil)
  if valid_21626294 != nil:
    section.add "AutoDeployment.Enabled", valid_21626294
  var valid_21626295 = query.getOrDefault("ExecutionRoleName")
  valid_21626295 = validateParameter(valid_21626295, JString, required = false,
                                   default = nil)
  if valid_21626295 != nil:
    section.add "ExecutionRoleName", valid_21626295
  var valid_21626296 = query.getOrDefault("Version")
  valid_21626296 = validateParameter(valid_21626296, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626296 != nil:
    section.add "Version", valid_21626296
  var valid_21626297 = query.getOrDefault("AutoDeployment.RetainStacksOnAccountRemoval")
  valid_21626297 = validateParameter(valid_21626297, JString, required = false,
                                   default = nil)
  if valid_21626297 != nil:
    section.add "AutoDeployment.RetainStacksOnAccountRemoval", valid_21626297
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626298 = header.getOrDefault("X-Amz-Date")
  valid_21626298 = validateParameter(valid_21626298, JString, required = false,
                                   default = nil)
  if valid_21626298 != nil:
    section.add "X-Amz-Date", valid_21626298
  var valid_21626299 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626299 = validateParameter(valid_21626299, JString, required = false,
                                   default = nil)
  if valid_21626299 != nil:
    section.add "X-Amz-Security-Token", valid_21626299
  var valid_21626300 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626300 = validateParameter(valid_21626300, JString, required = false,
                                   default = nil)
  if valid_21626300 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626300
  var valid_21626301 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626301 = validateParameter(valid_21626301, JString, required = false,
                                   default = nil)
  if valid_21626301 != nil:
    section.add "X-Amz-Algorithm", valid_21626301
  var valid_21626302 = header.getOrDefault("X-Amz-Signature")
  valid_21626302 = validateParameter(valid_21626302, JString, required = false,
                                   default = nil)
  if valid_21626302 != nil:
    section.add "X-Amz-Signature", valid_21626302
  var valid_21626303 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626303 = validateParameter(valid_21626303, JString, required = false,
                                   default = nil)
  if valid_21626303 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626303
  var valid_21626304 = header.getOrDefault("X-Amz-Credential")
  valid_21626304 = validateParameter(valid_21626304, JString, required = false,
                                   default = nil)
  if valid_21626304 != nil:
    section.add "X-Amz-Credential", valid_21626304
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626305: Call_GetCreateStackSet_21626280; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_21626305.validator(path, query, header, formData, body, _)
  let scheme = call_21626305.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626305.makeUrl(scheme.get, call_21626305.host, call_21626305.base,
                               call_21626305.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626305, uri, valid, _)

proc call*(call_21626306: Call_GetCreateStackSet_21626280; StackSetName: string;
          TemplateURL: string = ""; TemplateBody: string = ""; Description: string = "";
          AdministrationRoleARN: string = ""; Tags: JsonNode = nil;
          PermissionModel: string = "SERVICE_MANAGED"; Capabilities: JsonNode = nil;
          Parameters: JsonNode = nil; Action: string = "CreateStackSet";
          ClientRequestToken: string = ""; AutoDeploymentEnabled: string = "";
          ExecutionRoleName: string = ""; Version: string = "2010-05-15";
          AutoDeploymentRetainStacksOnAccountRemoval: string = ""): Recallable =
  ## getCreateStackSet
  ## Creates a stack set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   PermissionModel: string
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. By default, <code>SELF-MANAGED</code> is specified.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AutoDeploymentEnabled: string
  ##                        : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   Version: string (required)
  ##   AutoDeploymentRetainStacksOnAccountRemoval: string
  ##                                             : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  var query_21626307 = newJObject()
  add(query_21626307, "TemplateURL", newJString(TemplateURL))
  add(query_21626307, "TemplateBody", newJString(TemplateBody))
  add(query_21626307, "Description", newJString(Description))
  add(query_21626307, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  if Tags != nil:
    query_21626307.add "Tags", Tags
  add(query_21626307, "PermissionModel", newJString(PermissionModel))
  if Capabilities != nil:
    query_21626307.add "Capabilities", Capabilities
  if Parameters != nil:
    query_21626307.add "Parameters", Parameters
  add(query_21626307, "Action", newJString(Action))
  add(query_21626307, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21626307, "StackSetName", newJString(StackSetName))
  add(query_21626307, "AutoDeployment.Enabled", newJString(AutoDeploymentEnabled))
  add(query_21626307, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_21626307, "Version", newJString(Version))
  add(query_21626307, "AutoDeployment.RetainStacksOnAccountRemoval",
      newJString(AutoDeploymentRetainStacksOnAccountRemoval))
  result = call_21626306.call(nil, query_21626307, nil, nil, nil)

var getCreateStackSet* = Call_GetCreateStackSet_21626280(name: "getCreateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStackSet", validator: validate_GetCreateStackSet_21626281,
    base: "/", makeUrl: url_GetCreateStackSet_21626282,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteChangeSet_21626354 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteChangeSet_21626356(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteChangeSet_21626355(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626357 = query.getOrDefault("Action")
  valid_21626357 = validateParameter(valid_21626357, JString, required = true,
                                   default = newJString("DeleteChangeSet"))
  if valid_21626357 != nil:
    section.add "Action", valid_21626357
  var valid_21626358 = query.getOrDefault("Version")
  valid_21626358 = validateParameter(valid_21626358, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626358 != nil:
    section.add "Version", valid_21626358
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626359 = header.getOrDefault("X-Amz-Date")
  valid_21626359 = validateParameter(valid_21626359, JString, required = false,
                                   default = nil)
  if valid_21626359 != nil:
    section.add "X-Amz-Date", valid_21626359
  var valid_21626360 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626360 = validateParameter(valid_21626360, JString, required = false,
                                   default = nil)
  if valid_21626360 != nil:
    section.add "X-Amz-Security-Token", valid_21626360
  var valid_21626361 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626361 = validateParameter(valid_21626361, JString, required = false,
                                   default = nil)
  if valid_21626361 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626361
  var valid_21626362 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626362 = validateParameter(valid_21626362, JString, required = false,
                                   default = nil)
  if valid_21626362 != nil:
    section.add "X-Amz-Algorithm", valid_21626362
  var valid_21626363 = header.getOrDefault("X-Amz-Signature")
  valid_21626363 = validateParameter(valid_21626363, JString, required = false,
                                   default = nil)
  if valid_21626363 != nil:
    section.add "X-Amz-Signature", valid_21626363
  var valid_21626364 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626364 = validateParameter(valid_21626364, JString, required = false,
                                   default = nil)
  if valid_21626364 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626364
  var valid_21626365 = header.getOrDefault("X-Amz-Credential")
  valid_21626365 = validateParameter(valid_21626365, JString, required = false,
                                   default = nil)
  if valid_21626365 != nil:
    section.add "X-Amz-Credential", valid_21626365
  result.add "header", section
  ## parameters in `formData` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_21626366 = formData.getOrDefault("ChangeSetName")
  valid_21626366 = validateParameter(valid_21626366, JString, required = true,
                                   default = nil)
  if valid_21626366 != nil:
    section.add "ChangeSetName", valid_21626366
  var valid_21626367 = formData.getOrDefault("StackName")
  valid_21626367 = validateParameter(valid_21626367, JString, required = false,
                                   default = nil)
  if valid_21626367 != nil:
    section.add "StackName", valid_21626367
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626368: Call_PostDeleteChangeSet_21626354; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_21626368.validator(path, query, header, formData, body, _)
  let scheme = call_21626368.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626368.makeUrl(scheme.get, call_21626368.host, call_21626368.base,
                               call_21626368.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626368, uri, valid, _)

proc call*(call_21626369: Call_PostDeleteChangeSet_21626354; ChangeSetName: string;
          Action: string = "DeleteChangeSet"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Version: string (required)
  var query_21626370 = newJObject()
  var formData_21626371 = newJObject()
  add(query_21626370, "Action", newJString(Action))
  add(formData_21626371, "ChangeSetName", newJString(ChangeSetName))
  add(formData_21626371, "StackName", newJString(StackName))
  add(query_21626370, "Version", newJString(Version))
  result = call_21626369.call(nil, query_21626370, nil, formData_21626371, nil)

var postDeleteChangeSet* = Call_PostDeleteChangeSet_21626354(
    name: "postDeleteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_PostDeleteChangeSet_21626355, base: "/",
    makeUrl: url_PostDeleteChangeSet_21626356,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteChangeSet_21626337 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteChangeSet_21626339(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteChangeSet_21626338(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_21626340 = query.getOrDefault("ChangeSetName")
  valid_21626340 = validateParameter(valid_21626340, JString, required = true,
                                   default = nil)
  if valid_21626340 != nil:
    section.add "ChangeSetName", valid_21626340
  var valid_21626341 = query.getOrDefault("Action")
  valid_21626341 = validateParameter(valid_21626341, JString, required = true,
                                   default = newJString("DeleteChangeSet"))
  if valid_21626341 != nil:
    section.add "Action", valid_21626341
  var valid_21626342 = query.getOrDefault("Version")
  valid_21626342 = validateParameter(valid_21626342, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626342 != nil:
    section.add "Version", valid_21626342
  var valid_21626343 = query.getOrDefault("StackName")
  valid_21626343 = validateParameter(valid_21626343, JString, required = false,
                                   default = nil)
  if valid_21626343 != nil:
    section.add "StackName", valid_21626343
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626344 = header.getOrDefault("X-Amz-Date")
  valid_21626344 = validateParameter(valid_21626344, JString, required = false,
                                   default = nil)
  if valid_21626344 != nil:
    section.add "X-Amz-Date", valid_21626344
  var valid_21626345 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626345 = validateParameter(valid_21626345, JString, required = false,
                                   default = nil)
  if valid_21626345 != nil:
    section.add "X-Amz-Security-Token", valid_21626345
  var valid_21626346 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626346 = validateParameter(valid_21626346, JString, required = false,
                                   default = nil)
  if valid_21626346 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626346
  var valid_21626347 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626347 = validateParameter(valid_21626347, JString, required = false,
                                   default = nil)
  if valid_21626347 != nil:
    section.add "X-Amz-Algorithm", valid_21626347
  var valid_21626348 = header.getOrDefault("X-Amz-Signature")
  valid_21626348 = validateParameter(valid_21626348, JString, required = false,
                                   default = nil)
  if valid_21626348 != nil:
    section.add "X-Amz-Signature", valid_21626348
  var valid_21626349 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626349 = validateParameter(valid_21626349, JString, required = false,
                                   default = nil)
  if valid_21626349 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626349
  var valid_21626350 = header.getOrDefault("X-Amz-Credential")
  valid_21626350 = validateParameter(valid_21626350, JString, required = false,
                                   default = nil)
  if valid_21626350 != nil:
    section.add "X-Amz-Credential", valid_21626350
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626351: Call_GetDeleteChangeSet_21626337; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_21626351.validator(path, query, header, formData, body, _)
  let scheme = call_21626351.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626351.makeUrl(scheme.get, call_21626351.host, call_21626351.base,
                               call_21626351.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626351, uri, valid, _)

proc call*(call_21626352: Call_GetDeleteChangeSet_21626337; ChangeSetName: string;
          Action: string = "DeleteChangeSet"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  var query_21626353 = newJObject()
  add(query_21626353, "ChangeSetName", newJString(ChangeSetName))
  add(query_21626353, "Action", newJString(Action))
  add(query_21626353, "Version", newJString(Version))
  add(query_21626353, "StackName", newJString(StackName))
  result = call_21626352.call(nil, query_21626353, nil, nil, nil)

var getDeleteChangeSet* = Call_GetDeleteChangeSet_21626337(
    name: "getDeleteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_GetDeleteChangeSet_21626338, base: "/",
    makeUrl: url_GetDeleteChangeSet_21626339, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStack_21626391 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteStack_21626393(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStack_21626392(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626394 = query.getOrDefault("Action")
  valid_21626394 = validateParameter(valid_21626394, JString, required = true,
                                   default = newJString("DeleteStack"))
  if valid_21626394 != nil:
    section.add "Action", valid_21626394
  var valid_21626395 = query.getOrDefault("Version")
  valid_21626395 = validateParameter(valid_21626395, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626395 != nil:
    section.add "Version", valid_21626395
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626396 = header.getOrDefault("X-Amz-Date")
  valid_21626396 = validateParameter(valid_21626396, JString, required = false,
                                   default = nil)
  if valid_21626396 != nil:
    section.add "X-Amz-Date", valid_21626396
  var valid_21626397 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626397 = validateParameter(valid_21626397, JString, required = false,
                                   default = nil)
  if valid_21626397 != nil:
    section.add "X-Amz-Security-Token", valid_21626397
  var valid_21626398 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626398 = validateParameter(valid_21626398, JString, required = false,
                                   default = nil)
  if valid_21626398 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626398
  var valid_21626399 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626399 = validateParameter(valid_21626399, JString, required = false,
                                   default = nil)
  if valid_21626399 != nil:
    section.add "X-Amz-Algorithm", valid_21626399
  var valid_21626400 = header.getOrDefault("X-Amz-Signature")
  valid_21626400 = validateParameter(valid_21626400, JString, required = false,
                                   default = nil)
  if valid_21626400 != nil:
    section.add "X-Amz-Signature", valid_21626400
  var valid_21626401 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626401 = validateParameter(valid_21626401, JString, required = false,
                                   default = nil)
  if valid_21626401 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626401
  var valid_21626402 = header.getOrDefault("X-Amz-Credential")
  valid_21626402 = validateParameter(valid_21626402, JString, required = false,
                                   default = nil)
  if valid_21626402 != nil:
    section.add "X-Amz-Credential", valid_21626402
  result.add "header", section
  ## parameters in `formData` object:
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_21626403 = formData.getOrDefault("ClientRequestToken")
  valid_21626403 = validateParameter(valid_21626403, JString, required = false,
                                   default = nil)
  if valid_21626403 != nil:
    section.add "ClientRequestToken", valid_21626403
  var valid_21626404 = formData.getOrDefault("RetainResources")
  valid_21626404 = validateParameter(valid_21626404, JArray, required = false,
                                   default = nil)
  if valid_21626404 != nil:
    section.add "RetainResources", valid_21626404
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21626405 = formData.getOrDefault("StackName")
  valid_21626405 = validateParameter(valid_21626405, JString, required = true,
                                   default = nil)
  if valid_21626405 != nil:
    section.add "StackName", valid_21626405
  var valid_21626406 = formData.getOrDefault("RoleARN")
  valid_21626406 = validateParameter(valid_21626406, JString, required = false,
                                   default = nil)
  if valid_21626406 != nil:
    section.add "RoleARN", valid_21626406
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626407: Call_PostDeleteStack_21626391; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_21626407.validator(path, query, header, formData, body, _)
  let scheme = call_21626407.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626407.makeUrl(scheme.get, call_21626407.host, call_21626407.base,
                               call_21626407.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626407, uri, valid, _)

proc call*(call_21626408: Call_PostDeleteStack_21626391; StackName: string;
          ClientRequestToken: string = ""; RetainResources: JsonNode = nil;
          Action: string = "DeleteStack"; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## postDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_21626409 = newJObject()
  var formData_21626410 = newJObject()
  add(formData_21626410, "ClientRequestToken", newJString(ClientRequestToken))
  if RetainResources != nil:
    formData_21626410.add "RetainResources", RetainResources
  add(query_21626409, "Action", newJString(Action))
  add(formData_21626410, "StackName", newJString(StackName))
  add(query_21626409, "Version", newJString(Version))
  add(formData_21626410, "RoleARN", newJString(RoleARN))
  result = call_21626408.call(nil, query_21626409, nil, formData_21626410, nil)

var postDeleteStack* = Call_PostDeleteStack_21626391(name: "postDeleteStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_PostDeleteStack_21626392,
    base: "/", makeUrl: url_PostDeleteStack_21626393,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStack_21626372 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteStack_21626374(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStack_21626373(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  section = newJObject()
  var valid_21626375 = query.getOrDefault("Action")
  valid_21626375 = validateParameter(valid_21626375, JString, required = true,
                                   default = newJString("DeleteStack"))
  if valid_21626375 != nil:
    section.add "Action", valid_21626375
  var valid_21626376 = query.getOrDefault("RoleARN")
  valid_21626376 = validateParameter(valid_21626376, JString, required = false,
                                   default = nil)
  if valid_21626376 != nil:
    section.add "RoleARN", valid_21626376
  var valid_21626377 = query.getOrDefault("ClientRequestToken")
  valid_21626377 = validateParameter(valid_21626377, JString, required = false,
                                   default = nil)
  if valid_21626377 != nil:
    section.add "ClientRequestToken", valid_21626377
  var valid_21626378 = query.getOrDefault("RetainResources")
  valid_21626378 = validateParameter(valid_21626378, JArray, required = false,
                                   default = nil)
  if valid_21626378 != nil:
    section.add "RetainResources", valid_21626378
  var valid_21626379 = query.getOrDefault("Version")
  valid_21626379 = validateParameter(valid_21626379, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626379 != nil:
    section.add "Version", valid_21626379
  var valid_21626380 = query.getOrDefault("StackName")
  valid_21626380 = validateParameter(valid_21626380, JString, required = true,
                                   default = nil)
  if valid_21626380 != nil:
    section.add "StackName", valid_21626380
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626381 = header.getOrDefault("X-Amz-Date")
  valid_21626381 = validateParameter(valid_21626381, JString, required = false,
                                   default = nil)
  if valid_21626381 != nil:
    section.add "X-Amz-Date", valid_21626381
  var valid_21626382 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626382 = validateParameter(valid_21626382, JString, required = false,
                                   default = nil)
  if valid_21626382 != nil:
    section.add "X-Amz-Security-Token", valid_21626382
  var valid_21626383 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626383 = validateParameter(valid_21626383, JString, required = false,
                                   default = nil)
  if valid_21626383 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626383
  var valid_21626384 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626384 = validateParameter(valid_21626384, JString, required = false,
                                   default = nil)
  if valid_21626384 != nil:
    section.add "X-Amz-Algorithm", valid_21626384
  var valid_21626385 = header.getOrDefault("X-Amz-Signature")
  valid_21626385 = validateParameter(valid_21626385, JString, required = false,
                                   default = nil)
  if valid_21626385 != nil:
    section.add "X-Amz-Signature", valid_21626385
  var valid_21626386 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626386 = validateParameter(valid_21626386, JString, required = false,
                                   default = nil)
  if valid_21626386 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626386
  var valid_21626387 = header.getOrDefault("X-Amz-Credential")
  valid_21626387 = validateParameter(valid_21626387, JString, required = false,
                                   default = nil)
  if valid_21626387 != nil:
    section.add "X-Amz-Credential", valid_21626387
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626388: Call_GetDeleteStack_21626372; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_21626388.validator(path, query, header, formData, body, _)
  let scheme = call_21626388.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626388.makeUrl(scheme.get, call_21626388.host, call_21626388.base,
                               call_21626388.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626388, uri, valid, _)

proc call*(call_21626389: Call_GetDeleteStack_21626372; StackName: string;
          Action: string = "DeleteStack"; RoleARN: string = "";
          ClientRequestToken: string = ""; RetainResources: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## getDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   Action: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  var query_21626390 = newJObject()
  add(query_21626390, "Action", newJString(Action))
  add(query_21626390, "RoleARN", newJString(RoleARN))
  add(query_21626390, "ClientRequestToken", newJString(ClientRequestToken))
  if RetainResources != nil:
    query_21626390.add "RetainResources", RetainResources
  add(query_21626390, "Version", newJString(Version))
  add(query_21626390, "StackName", newJString(StackName))
  result = call_21626389.call(nil, query_21626390, nil, nil, nil)

var getDeleteStack* = Call_GetDeleteStack_21626372(name: "getDeleteStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_GetDeleteStack_21626373,
    base: "/", makeUrl: url_GetDeleteStack_21626374,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackInstances_21626438 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteStackInstances_21626440(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackInstances_21626439(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626441 = query.getOrDefault("Action")
  valid_21626441 = validateParameter(valid_21626441, JString, required = true,
                                   default = newJString("DeleteStackInstances"))
  if valid_21626441 != nil:
    section.add "Action", valid_21626441
  var valid_21626442 = query.getOrDefault("Version")
  valid_21626442 = validateParameter(valid_21626442, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626442 != nil:
    section.add "Version", valid_21626442
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626443 = header.getOrDefault("X-Amz-Date")
  valid_21626443 = validateParameter(valid_21626443, JString, required = false,
                                   default = nil)
  if valid_21626443 != nil:
    section.add "X-Amz-Date", valid_21626443
  var valid_21626444 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626444 = validateParameter(valid_21626444, JString, required = false,
                                   default = nil)
  if valid_21626444 != nil:
    section.add "X-Amz-Security-Token", valid_21626444
  var valid_21626445 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626445 = validateParameter(valid_21626445, JString, required = false,
                                   default = nil)
  if valid_21626445 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626445
  var valid_21626446 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626446 = validateParameter(valid_21626446, JString, required = false,
                                   default = nil)
  if valid_21626446 != nil:
    section.add "X-Amz-Algorithm", valid_21626446
  var valid_21626447 = header.getOrDefault("X-Amz-Signature")
  valid_21626447 = validateParameter(valid_21626447, JString, required = false,
                                   default = nil)
  if valid_21626447 != nil:
    section.add "X-Amz-Signature", valid_21626447
  var valid_21626448 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626448 = validateParameter(valid_21626448, JString, required = false,
                                   default = nil)
  if valid_21626448 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626448
  var valid_21626449 = header.getOrDefault("X-Amz-Credential")
  valid_21626449 = validateParameter(valid_21626449, JString, required = false,
                                   default = nil)
  if valid_21626449 != nil:
    section.add "X-Amz-Credential", valid_21626449
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of the AWS accounts that you want to delete stack instances for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  section = newJObject()
  var valid_21626450 = formData.getOrDefault(
      "OperationPreferences.FailureTolerancePercentage")
  valid_21626450 = validateParameter(valid_21626450, JString, required = false,
                                   default = nil)
  if valid_21626450 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21626450
  var valid_21626451 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentCount")
  valid_21626451 = validateParameter(valid_21626451, JString, required = false,
                                   default = nil)
  if valid_21626451 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21626451
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21626452 = formData.getOrDefault("StackSetName")
  valid_21626452 = validateParameter(valid_21626452, JString, required = true,
                                   default = nil)
  if valid_21626452 != nil:
    section.add "StackSetName", valid_21626452
  var valid_21626453 = formData.getOrDefault("Accounts")
  valid_21626453 = validateParameter(valid_21626453, JArray, required = false,
                                   default = nil)
  if valid_21626453 != nil:
    section.add "Accounts", valid_21626453
  var valid_21626454 = formData.getOrDefault("Regions")
  valid_21626454 = validateParameter(valid_21626454, JArray, required = true,
                                   default = nil)
  if valid_21626454 != nil:
    section.add "Regions", valid_21626454
  var valid_21626455 = formData.getOrDefault("RetainStacks")
  valid_21626455 = validateParameter(valid_21626455, JBool, required = true,
                                   default = nil)
  if valid_21626455 != nil:
    section.add "RetainStacks", valid_21626455
  var valid_21626456 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_21626456 = validateParameter(valid_21626456, JArray, required = false,
                                   default = nil)
  if valid_21626456 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21626456
  var valid_21626457 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentPercentage")
  valid_21626457 = validateParameter(valid_21626457, JString, required = false,
                                   default = nil)
  if valid_21626457 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21626457
  var valid_21626458 = formData.getOrDefault("DeploymentTargets.Accounts")
  valid_21626458 = validateParameter(valid_21626458, JArray, required = false,
                                   default = nil)
  if valid_21626458 != nil:
    section.add "DeploymentTargets.Accounts", valid_21626458
  var valid_21626459 = formData.getOrDefault(
      "OperationPreferences.FailureToleranceCount")
  valid_21626459 = validateParameter(valid_21626459, JString, required = false,
                                   default = nil)
  if valid_21626459 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21626459
  var valid_21626460 = formData.getOrDefault(
      "DeploymentTargets.OrganizationalUnitIds")
  valid_21626460 = validateParameter(valid_21626460, JArray, required = false,
                                   default = nil)
  if valid_21626460 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21626460
  var valid_21626461 = formData.getOrDefault("OperationId")
  valid_21626461 = validateParameter(valid_21626461, JString, required = false,
                                   default = nil)
  if valid_21626461 != nil:
    section.add "OperationId", valid_21626461
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626462: Call_PostDeleteStackInstances_21626438;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_21626462.validator(path, query, header, formData, body, _)
  let scheme = call_21626462.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626462.makeUrl(scheme.get, call_21626462.host, call_21626462.base,
                               call_21626462.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626462, uri, valid, _)

proc call*(call_21626463: Call_PostDeleteStackInstances_21626438;
          StackSetName: string; Regions: JsonNode; RetainStacks: bool;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Accounts: JsonNode = nil; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "DeleteStackInstances";
          DeploymentTargetsAccounts: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil;
          OperationId: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of the AWS accounts that you want to delete stack instances for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Version: string (required)
  var query_21626464 = newJObject()
  var formData_21626465 = newJObject()
  add(formData_21626465, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_21626465, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_21626465, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    formData_21626465.add "Accounts", Accounts
  if Regions != nil:
    formData_21626465.add "Regions", Regions
  add(formData_21626465, "RetainStacks", newJBool(RetainStacks))
  if OperationPreferencesRegionOrder != nil:
    formData_21626465.add "OperationPreferences.RegionOrder",
                         OperationPreferencesRegionOrder
  add(formData_21626465, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21626464, "Action", newJString(Action))
  if DeploymentTargetsAccounts != nil:
    formData_21626465.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  add(formData_21626465, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if DeploymentTargetsOrganizationalUnitIds != nil:
    formData_21626465.add "DeploymentTargets.OrganizationalUnitIds",
                         DeploymentTargetsOrganizationalUnitIds
  add(formData_21626465, "OperationId", newJString(OperationId))
  add(query_21626464, "Version", newJString(Version))
  result = call_21626463.call(nil, query_21626464, nil, formData_21626465, nil)

var postDeleteStackInstances* = Call_PostDeleteStackInstances_21626438(
    name: "postDeleteStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_PostDeleteStackInstances_21626439, base: "/",
    makeUrl: url_PostDeleteStackInstances_21626440,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackInstances_21626411 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteStackInstances_21626413(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackInstances_21626412(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of the AWS accounts that you want to delete stack instances for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  section = newJObject()
  var valid_21626414 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_21626414 = validateParameter(valid_21626414, JString, required = false,
                                   default = nil)
  if valid_21626414 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21626414
  var valid_21626415 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_21626415 = validateParameter(valid_21626415, JString, required = false,
                                   default = nil)
  if valid_21626415 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21626415
  var valid_21626416 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_21626416 = validateParameter(valid_21626416, JArray, required = false,
                                   default = nil)
  if valid_21626416 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21626416
  var valid_21626417 = query.getOrDefault("Action")
  valid_21626417 = validateParameter(valid_21626417, JString, required = true,
                                   default = newJString("DeleteStackInstances"))
  if valid_21626417 != nil:
    section.add "Action", valid_21626417
  var valid_21626418 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_21626418 = validateParameter(valid_21626418, JString, required = false,
                                   default = nil)
  if valid_21626418 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21626418
  var valid_21626419 = query.getOrDefault("StackSetName")
  valid_21626419 = validateParameter(valid_21626419, JString, required = true,
                                   default = nil)
  if valid_21626419 != nil:
    section.add "StackSetName", valid_21626419
  var valid_21626420 = query.getOrDefault("RetainStacks")
  valid_21626420 = validateParameter(valid_21626420, JBool, required = true,
                                   default = nil)
  if valid_21626420 != nil:
    section.add "RetainStacks", valid_21626420
  var valid_21626421 = query.getOrDefault("Accounts")
  valid_21626421 = validateParameter(valid_21626421, JArray, required = false,
                                   default = nil)
  if valid_21626421 != nil:
    section.add "Accounts", valid_21626421
  var valid_21626422 = query.getOrDefault("Regions")
  valid_21626422 = validateParameter(valid_21626422, JArray, required = true,
                                   default = nil)
  if valid_21626422 != nil:
    section.add "Regions", valid_21626422
  var valid_21626423 = query.getOrDefault("OperationId")
  valid_21626423 = validateParameter(valid_21626423, JString, required = false,
                                   default = nil)
  if valid_21626423 != nil:
    section.add "OperationId", valid_21626423
  var valid_21626424 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_21626424 = validateParameter(valid_21626424, JString, required = false,
                                   default = nil)
  if valid_21626424 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21626424
  var valid_21626425 = query.getOrDefault("Version")
  valid_21626425 = validateParameter(valid_21626425, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626425 != nil:
    section.add "Version", valid_21626425
  var valid_21626426 = query.getOrDefault("DeploymentTargets.Accounts")
  valid_21626426 = validateParameter(valid_21626426, JArray, required = false,
                                   default = nil)
  if valid_21626426 != nil:
    section.add "DeploymentTargets.Accounts", valid_21626426
  var valid_21626427 = query.getOrDefault("DeploymentTargets.OrganizationalUnitIds")
  valid_21626427 = validateParameter(valid_21626427, JArray, required = false,
                                   default = nil)
  if valid_21626427 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21626427
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626428 = header.getOrDefault("X-Amz-Date")
  valid_21626428 = validateParameter(valid_21626428, JString, required = false,
                                   default = nil)
  if valid_21626428 != nil:
    section.add "X-Amz-Date", valid_21626428
  var valid_21626429 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626429 = validateParameter(valid_21626429, JString, required = false,
                                   default = nil)
  if valid_21626429 != nil:
    section.add "X-Amz-Security-Token", valid_21626429
  var valid_21626430 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626430 = validateParameter(valid_21626430, JString, required = false,
                                   default = nil)
  if valid_21626430 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626430
  var valid_21626431 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626431 = validateParameter(valid_21626431, JString, required = false,
                                   default = nil)
  if valid_21626431 != nil:
    section.add "X-Amz-Algorithm", valid_21626431
  var valid_21626432 = header.getOrDefault("X-Amz-Signature")
  valid_21626432 = validateParameter(valid_21626432, JString, required = false,
                                   default = nil)
  if valid_21626432 != nil:
    section.add "X-Amz-Signature", valid_21626432
  var valid_21626433 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626433 = validateParameter(valid_21626433, JString, required = false,
                                   default = nil)
  if valid_21626433 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626433
  var valid_21626434 = header.getOrDefault("X-Amz-Credential")
  valid_21626434 = validateParameter(valid_21626434, JString, required = false,
                                   default = nil)
  if valid_21626434 != nil:
    section.add "X-Amz-Credential", valid_21626434
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626435: Call_GetDeleteStackInstances_21626411;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_21626435.validator(path, query, header, formData, body, _)
  let scheme = call_21626435.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626435.makeUrl(scheme.get, call_21626435.host, call_21626435.base,
                               call_21626435.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626435, uri, valid, _)

proc call*(call_21626436: Call_GetDeleteStackInstances_21626411;
          StackSetName: string; RetainStacks: bool; Regions: JsonNode;
          OperationPreferencesFailureToleranceCount: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          Action: string = "DeleteStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Accounts: JsonNode = nil; OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"; DeploymentTargetsAccounts: JsonNode = nil;
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil): Recallable =
  ## getDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of the AWS accounts that you want to delete stack instances for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  var query_21626437 = newJObject()
  add(query_21626437, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_21626437, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if OperationPreferencesRegionOrder != nil:
    query_21626437.add "OperationPreferences.RegionOrder",
                      OperationPreferencesRegionOrder
  add(query_21626437, "Action", newJString(Action))
  add(query_21626437, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21626437, "StackSetName", newJString(StackSetName))
  add(query_21626437, "RetainStacks", newJBool(RetainStacks))
  if Accounts != nil:
    query_21626437.add "Accounts", Accounts
  if Regions != nil:
    query_21626437.add "Regions", Regions
  add(query_21626437, "OperationId", newJString(OperationId))
  add(query_21626437, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_21626437, "Version", newJString(Version))
  if DeploymentTargetsAccounts != nil:
    query_21626437.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  if DeploymentTargetsOrganizationalUnitIds != nil:
    query_21626437.add "DeploymentTargets.OrganizationalUnitIds",
                      DeploymentTargetsOrganizationalUnitIds
  result = call_21626436.call(nil, query_21626437, nil, nil, nil)

var getDeleteStackInstances* = Call_GetDeleteStackInstances_21626411(
    name: "getDeleteStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_GetDeleteStackInstances_21626412, base: "/",
    makeUrl: url_GetDeleteStackInstances_21626413,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackSet_21626482 = ref object of OpenApiRestCall_21625435
proc url_PostDeleteStackSet_21626484(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackSet_21626483(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626485 = query.getOrDefault("Action")
  valid_21626485 = validateParameter(valid_21626485, JString, required = true,
                                   default = newJString("DeleteStackSet"))
  if valid_21626485 != nil:
    section.add "Action", valid_21626485
  var valid_21626486 = query.getOrDefault("Version")
  valid_21626486 = validateParameter(valid_21626486, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626486 != nil:
    section.add "Version", valid_21626486
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626487 = header.getOrDefault("X-Amz-Date")
  valid_21626487 = validateParameter(valid_21626487, JString, required = false,
                                   default = nil)
  if valid_21626487 != nil:
    section.add "X-Amz-Date", valid_21626487
  var valid_21626488 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626488 = validateParameter(valid_21626488, JString, required = false,
                                   default = nil)
  if valid_21626488 != nil:
    section.add "X-Amz-Security-Token", valid_21626488
  var valid_21626489 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626489 = validateParameter(valid_21626489, JString, required = false,
                                   default = nil)
  if valid_21626489 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626489
  var valid_21626490 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626490 = validateParameter(valid_21626490, JString, required = false,
                                   default = nil)
  if valid_21626490 != nil:
    section.add "X-Amz-Algorithm", valid_21626490
  var valid_21626491 = header.getOrDefault("X-Amz-Signature")
  valid_21626491 = validateParameter(valid_21626491, JString, required = false,
                                   default = nil)
  if valid_21626491 != nil:
    section.add "X-Amz-Signature", valid_21626491
  var valid_21626492 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626492 = validateParameter(valid_21626492, JString, required = false,
                                   default = nil)
  if valid_21626492 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626492
  var valid_21626493 = header.getOrDefault("X-Amz-Credential")
  valid_21626493 = validateParameter(valid_21626493, JString, required = false,
                                   default = nil)
  if valid_21626493 != nil:
    section.add "X-Amz-Credential", valid_21626493
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21626494 = formData.getOrDefault("StackSetName")
  valid_21626494 = validateParameter(valid_21626494, JString, required = true,
                                   default = nil)
  if valid_21626494 != nil:
    section.add "StackSetName", valid_21626494
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626495: Call_PostDeleteStackSet_21626482; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_21626495.validator(path, query, header, formData, body, _)
  let scheme = call_21626495.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626495.makeUrl(scheme.get, call_21626495.host, call_21626495.base,
                               call_21626495.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626495, uri, valid, _)

proc call*(call_21626496: Call_PostDeleteStackSet_21626482; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626497 = newJObject()
  var formData_21626498 = newJObject()
  add(formData_21626498, "StackSetName", newJString(StackSetName))
  add(query_21626497, "Action", newJString(Action))
  add(query_21626497, "Version", newJString(Version))
  result = call_21626496.call(nil, query_21626497, nil, formData_21626498, nil)

var postDeleteStackSet* = Call_PostDeleteStackSet_21626482(
    name: "postDeleteStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackSet",
    validator: validate_PostDeleteStackSet_21626483, base: "/",
    makeUrl: url_PostDeleteStackSet_21626484, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackSet_21626466 = ref object of OpenApiRestCall_21625435
proc url_GetDeleteStackSet_21626468(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackSet_21626467(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626469 = query.getOrDefault("Action")
  valid_21626469 = validateParameter(valid_21626469, JString, required = true,
                                   default = newJString("DeleteStackSet"))
  if valid_21626469 != nil:
    section.add "Action", valid_21626469
  var valid_21626470 = query.getOrDefault("StackSetName")
  valid_21626470 = validateParameter(valid_21626470, JString, required = true,
                                   default = nil)
  if valid_21626470 != nil:
    section.add "StackSetName", valid_21626470
  var valid_21626471 = query.getOrDefault("Version")
  valid_21626471 = validateParameter(valid_21626471, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626471 != nil:
    section.add "Version", valid_21626471
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626472 = header.getOrDefault("X-Amz-Date")
  valid_21626472 = validateParameter(valid_21626472, JString, required = false,
                                   default = nil)
  if valid_21626472 != nil:
    section.add "X-Amz-Date", valid_21626472
  var valid_21626473 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626473 = validateParameter(valid_21626473, JString, required = false,
                                   default = nil)
  if valid_21626473 != nil:
    section.add "X-Amz-Security-Token", valid_21626473
  var valid_21626474 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626474 = validateParameter(valid_21626474, JString, required = false,
                                   default = nil)
  if valid_21626474 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626474
  var valid_21626475 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626475 = validateParameter(valid_21626475, JString, required = false,
                                   default = nil)
  if valid_21626475 != nil:
    section.add "X-Amz-Algorithm", valid_21626475
  var valid_21626476 = header.getOrDefault("X-Amz-Signature")
  valid_21626476 = validateParameter(valid_21626476, JString, required = false,
                                   default = nil)
  if valid_21626476 != nil:
    section.add "X-Amz-Signature", valid_21626476
  var valid_21626477 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626477 = validateParameter(valid_21626477, JString, required = false,
                                   default = nil)
  if valid_21626477 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626477
  var valid_21626478 = header.getOrDefault("X-Amz-Credential")
  valid_21626478 = validateParameter(valid_21626478, JString, required = false,
                                   default = nil)
  if valid_21626478 != nil:
    section.add "X-Amz-Credential", valid_21626478
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626479: Call_GetDeleteStackSet_21626466; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_21626479.validator(path, query, header, formData, body, _)
  let scheme = call_21626479.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626479.makeUrl(scheme.get, call_21626479.host, call_21626479.base,
                               call_21626479.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626479, uri, valid, _)

proc call*(call_21626480: Call_GetDeleteStackSet_21626466; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Version: string (required)
  var query_21626481 = newJObject()
  add(query_21626481, "Action", newJString(Action))
  add(query_21626481, "StackSetName", newJString(StackSetName))
  add(query_21626481, "Version", newJString(Version))
  result = call_21626480.call(nil, query_21626481, nil, nil, nil)

var getDeleteStackSet* = Call_GetDeleteStackSet_21626466(name: "getDeleteStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStackSet", validator: validate_GetDeleteStackSet_21626467,
    base: "/", makeUrl: url_GetDeleteStackSet_21626468,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeregisterType_21626518 = ref object of OpenApiRestCall_21625435
proc url_PostDeregisterType_21626520(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeregisterType_21626519(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626521 = query.getOrDefault("Action")
  valid_21626521 = validateParameter(valid_21626521, JString, required = true,
                                   default = newJString("DeregisterType"))
  if valid_21626521 != nil:
    section.add "Action", valid_21626521
  var valid_21626522 = query.getOrDefault("Version")
  valid_21626522 = validateParameter(valid_21626522, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626522 != nil:
    section.add "Version", valid_21626522
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626523 = header.getOrDefault("X-Amz-Date")
  valid_21626523 = validateParameter(valid_21626523, JString, required = false,
                                   default = nil)
  if valid_21626523 != nil:
    section.add "X-Amz-Date", valid_21626523
  var valid_21626524 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626524 = validateParameter(valid_21626524, JString, required = false,
                                   default = nil)
  if valid_21626524 != nil:
    section.add "X-Amz-Security-Token", valid_21626524
  var valid_21626525 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626525 = validateParameter(valid_21626525, JString, required = false,
                                   default = nil)
  if valid_21626525 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626525
  var valid_21626526 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626526 = validateParameter(valid_21626526, JString, required = false,
                                   default = nil)
  if valid_21626526 != nil:
    section.add "X-Amz-Algorithm", valid_21626526
  var valid_21626527 = header.getOrDefault("X-Amz-Signature")
  valid_21626527 = validateParameter(valid_21626527, JString, required = false,
                                   default = nil)
  if valid_21626527 != nil:
    section.add "X-Amz-Signature", valid_21626527
  var valid_21626528 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626528 = validateParameter(valid_21626528, JString, required = false,
                                   default = nil)
  if valid_21626528 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626528
  var valid_21626529 = header.getOrDefault("X-Amz-Credential")
  valid_21626529 = validateParameter(valid_21626529, JString, required = false,
                                   default = nil)
  if valid_21626529 != nil:
    section.add "X-Amz-Credential", valid_21626529
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  section = newJObject()
  var valid_21626530 = formData.getOrDefault("Arn")
  valid_21626530 = validateParameter(valid_21626530, JString, required = false,
                                   default = nil)
  if valid_21626530 != nil:
    section.add "Arn", valid_21626530
  var valid_21626531 = formData.getOrDefault("Type")
  valid_21626531 = validateParameter(valid_21626531, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21626531 != nil:
    section.add "Type", valid_21626531
  var valid_21626532 = formData.getOrDefault("TypeName")
  valid_21626532 = validateParameter(valid_21626532, JString, required = false,
                                   default = nil)
  if valid_21626532 != nil:
    section.add "TypeName", valid_21626532
  var valid_21626533 = formData.getOrDefault("VersionId")
  valid_21626533 = validateParameter(valid_21626533, JString, required = false,
                                   default = nil)
  if valid_21626533 != nil:
    section.add "VersionId", valid_21626533
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626534: Call_PostDeregisterType_21626518; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  let valid = call_21626534.validator(path, query, header, formData, body, _)
  let scheme = call_21626534.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626534.makeUrl(scheme.get, call_21626534.host, call_21626534.base,
                               call_21626534.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626534, uri, valid, _)

proc call*(call_21626535: Call_PostDeregisterType_21626518; Arn: string = "";
          Type: string = "RESOURCE"; Action: string = "DeregisterType";
          TypeName: string = ""; Version: string = "2010-05-15"; VersionId: string = ""): Recallable =
  ## postDeregisterType
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  var query_21626536 = newJObject()
  var formData_21626537 = newJObject()
  add(formData_21626537, "Arn", newJString(Arn))
  add(formData_21626537, "Type", newJString(Type))
  add(query_21626536, "Action", newJString(Action))
  add(formData_21626537, "TypeName", newJString(TypeName))
  add(query_21626536, "Version", newJString(Version))
  add(formData_21626537, "VersionId", newJString(VersionId))
  result = call_21626535.call(nil, query_21626536, nil, formData_21626537, nil)

var postDeregisterType* = Call_PostDeregisterType_21626518(
    name: "postDeregisterType", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeregisterType",
    validator: validate_PostDeregisterType_21626519, base: "/",
    makeUrl: url_PostDeregisterType_21626520, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeregisterType_21626499 = ref object of OpenApiRestCall_21625435
proc url_GetDeregisterType_21626501(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeregisterType_21626500(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626502 = query.getOrDefault("TypeName")
  valid_21626502 = validateParameter(valid_21626502, JString, required = false,
                                   default = nil)
  if valid_21626502 != nil:
    section.add "TypeName", valid_21626502
  var valid_21626503 = query.getOrDefault("VersionId")
  valid_21626503 = validateParameter(valid_21626503, JString, required = false,
                                   default = nil)
  if valid_21626503 != nil:
    section.add "VersionId", valid_21626503
  var valid_21626504 = query.getOrDefault("Type")
  valid_21626504 = validateParameter(valid_21626504, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21626504 != nil:
    section.add "Type", valid_21626504
  var valid_21626505 = query.getOrDefault("Action")
  valid_21626505 = validateParameter(valid_21626505, JString, required = true,
                                   default = newJString("DeregisterType"))
  if valid_21626505 != nil:
    section.add "Action", valid_21626505
  var valid_21626506 = query.getOrDefault("Arn")
  valid_21626506 = validateParameter(valid_21626506, JString, required = false,
                                   default = nil)
  if valid_21626506 != nil:
    section.add "Arn", valid_21626506
  var valid_21626507 = query.getOrDefault("Version")
  valid_21626507 = validateParameter(valid_21626507, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626507 != nil:
    section.add "Version", valid_21626507
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626508 = header.getOrDefault("X-Amz-Date")
  valid_21626508 = validateParameter(valid_21626508, JString, required = false,
                                   default = nil)
  if valid_21626508 != nil:
    section.add "X-Amz-Date", valid_21626508
  var valid_21626509 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626509 = validateParameter(valid_21626509, JString, required = false,
                                   default = nil)
  if valid_21626509 != nil:
    section.add "X-Amz-Security-Token", valid_21626509
  var valid_21626510 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626510 = validateParameter(valid_21626510, JString, required = false,
                                   default = nil)
  if valid_21626510 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626510
  var valid_21626511 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626511 = validateParameter(valid_21626511, JString, required = false,
                                   default = nil)
  if valid_21626511 != nil:
    section.add "X-Amz-Algorithm", valid_21626511
  var valid_21626512 = header.getOrDefault("X-Amz-Signature")
  valid_21626512 = validateParameter(valid_21626512, JString, required = false,
                                   default = nil)
  if valid_21626512 != nil:
    section.add "X-Amz-Signature", valid_21626512
  var valid_21626513 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626513 = validateParameter(valid_21626513, JString, required = false,
                                   default = nil)
  if valid_21626513 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626513
  var valid_21626514 = header.getOrDefault("X-Amz-Credential")
  valid_21626514 = validateParameter(valid_21626514, JString, required = false,
                                   default = nil)
  if valid_21626514 != nil:
    section.add "X-Amz-Credential", valid_21626514
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626515: Call_GetDeregisterType_21626499; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  let valid = call_21626515.validator(path, query, header, formData, body, _)
  let scheme = call_21626515.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626515.makeUrl(scheme.get, call_21626515.host, call_21626515.base,
                               call_21626515.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626515, uri, valid, _)

proc call*(call_21626516: Call_GetDeregisterType_21626499; TypeName: string = "";
          VersionId: string = ""; Type: string = "RESOURCE";
          Action: string = "DeregisterType"; Arn: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getDeregisterType
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  var query_21626517 = newJObject()
  add(query_21626517, "TypeName", newJString(TypeName))
  add(query_21626517, "VersionId", newJString(VersionId))
  add(query_21626517, "Type", newJString(Type))
  add(query_21626517, "Action", newJString(Action))
  add(query_21626517, "Arn", newJString(Arn))
  add(query_21626517, "Version", newJString(Version))
  result = call_21626516.call(nil, query_21626517, nil, nil, nil)

var getDeregisterType* = Call_GetDeregisterType_21626499(name: "getDeregisterType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeregisterType", validator: validate_GetDeregisterType_21626500,
    base: "/", makeUrl: url_GetDeregisterType_21626501,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAccountLimits_21626554 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeAccountLimits_21626556(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAccountLimits_21626555(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626557 = query.getOrDefault("Action")
  valid_21626557 = validateParameter(valid_21626557, JString, required = true, default = newJString(
      "DescribeAccountLimits"))
  if valid_21626557 != nil:
    section.add "Action", valid_21626557
  var valid_21626558 = query.getOrDefault("Version")
  valid_21626558 = validateParameter(valid_21626558, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626558 != nil:
    section.add "Version", valid_21626558
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626559 = header.getOrDefault("X-Amz-Date")
  valid_21626559 = validateParameter(valid_21626559, JString, required = false,
                                   default = nil)
  if valid_21626559 != nil:
    section.add "X-Amz-Date", valid_21626559
  var valid_21626560 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626560 = validateParameter(valid_21626560, JString, required = false,
                                   default = nil)
  if valid_21626560 != nil:
    section.add "X-Amz-Security-Token", valid_21626560
  var valid_21626561 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626561 = validateParameter(valid_21626561, JString, required = false,
                                   default = nil)
  if valid_21626561 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626561
  var valid_21626562 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626562 = validateParameter(valid_21626562, JString, required = false,
                                   default = nil)
  if valid_21626562 != nil:
    section.add "X-Amz-Algorithm", valid_21626562
  var valid_21626563 = header.getOrDefault("X-Amz-Signature")
  valid_21626563 = validateParameter(valid_21626563, JString, required = false,
                                   default = nil)
  if valid_21626563 != nil:
    section.add "X-Amz-Signature", valid_21626563
  var valid_21626564 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626564 = validateParameter(valid_21626564, JString, required = false,
                                   default = nil)
  if valid_21626564 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626564
  var valid_21626565 = header.getOrDefault("X-Amz-Credential")
  valid_21626565 = validateParameter(valid_21626565, JString, required = false,
                                   default = nil)
  if valid_21626565 != nil:
    section.add "X-Amz-Credential", valid_21626565
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  section = newJObject()
  var valid_21626566 = formData.getOrDefault("NextToken")
  valid_21626566 = validateParameter(valid_21626566, JString, required = false,
                                   default = nil)
  if valid_21626566 != nil:
    section.add "NextToken", valid_21626566
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626567: Call_PostDescribeAccountLimits_21626554;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_21626567.validator(path, query, header, formData, body, _)
  let scheme = call_21626567.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626567.makeUrl(scheme.get, call_21626567.host, call_21626567.base,
                               call_21626567.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626567, uri, valid, _)

proc call*(call_21626568: Call_PostDescribeAccountLimits_21626554;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626569 = newJObject()
  var formData_21626570 = newJObject()
  add(formData_21626570, "NextToken", newJString(NextToken))
  add(query_21626569, "Action", newJString(Action))
  add(query_21626569, "Version", newJString(Version))
  result = call_21626568.call(nil, query_21626569, nil, formData_21626570, nil)

var postDescribeAccountLimits* = Call_PostDescribeAccountLimits_21626554(
    name: "postDescribeAccountLimits", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_PostDescribeAccountLimits_21626555, base: "/",
    makeUrl: url_PostDescribeAccountLimits_21626556,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAccountLimits_21626538 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeAccountLimits_21626540(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAccountLimits_21626539(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626541 = query.getOrDefault("NextToken")
  valid_21626541 = validateParameter(valid_21626541, JString, required = false,
                                   default = nil)
  if valid_21626541 != nil:
    section.add "NextToken", valid_21626541
  var valid_21626542 = query.getOrDefault("Action")
  valid_21626542 = validateParameter(valid_21626542, JString, required = true, default = newJString(
      "DescribeAccountLimits"))
  if valid_21626542 != nil:
    section.add "Action", valid_21626542
  var valid_21626543 = query.getOrDefault("Version")
  valid_21626543 = validateParameter(valid_21626543, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626543 != nil:
    section.add "Version", valid_21626543
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626544 = header.getOrDefault("X-Amz-Date")
  valid_21626544 = validateParameter(valid_21626544, JString, required = false,
                                   default = nil)
  if valid_21626544 != nil:
    section.add "X-Amz-Date", valid_21626544
  var valid_21626545 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626545 = validateParameter(valid_21626545, JString, required = false,
                                   default = nil)
  if valid_21626545 != nil:
    section.add "X-Amz-Security-Token", valid_21626545
  var valid_21626546 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626546 = validateParameter(valid_21626546, JString, required = false,
                                   default = nil)
  if valid_21626546 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626546
  var valid_21626547 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626547 = validateParameter(valid_21626547, JString, required = false,
                                   default = nil)
  if valid_21626547 != nil:
    section.add "X-Amz-Algorithm", valid_21626547
  var valid_21626548 = header.getOrDefault("X-Amz-Signature")
  valid_21626548 = validateParameter(valid_21626548, JString, required = false,
                                   default = nil)
  if valid_21626548 != nil:
    section.add "X-Amz-Signature", valid_21626548
  var valid_21626549 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626549 = validateParameter(valid_21626549, JString, required = false,
                                   default = nil)
  if valid_21626549 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626549
  var valid_21626550 = header.getOrDefault("X-Amz-Credential")
  valid_21626550 = validateParameter(valid_21626550, JString, required = false,
                                   default = nil)
  if valid_21626550 != nil:
    section.add "X-Amz-Credential", valid_21626550
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626551: Call_GetDescribeAccountLimits_21626538;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_21626551.validator(path, query, header, formData, body, _)
  let scheme = call_21626551.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626551.makeUrl(scheme.get, call_21626551.host, call_21626551.base,
                               call_21626551.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626551, uri, valid, _)

proc call*(call_21626552: Call_GetDescribeAccountLimits_21626538;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626553 = newJObject()
  add(query_21626553, "NextToken", newJString(NextToken))
  add(query_21626553, "Action", newJString(Action))
  add(query_21626553, "Version", newJString(Version))
  result = call_21626552.call(nil, query_21626553, nil, nil, nil)

var getDescribeAccountLimits* = Call_GetDescribeAccountLimits_21626538(
    name: "getDescribeAccountLimits", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_GetDescribeAccountLimits_21626539, base: "/",
    makeUrl: url_GetDescribeAccountLimits_21626540,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeChangeSet_21626589 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeChangeSet_21626591(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeChangeSet_21626590(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626592 = query.getOrDefault("Action")
  valid_21626592 = validateParameter(valid_21626592, JString, required = true,
                                   default = newJString("DescribeChangeSet"))
  if valid_21626592 != nil:
    section.add "Action", valid_21626592
  var valid_21626593 = query.getOrDefault("Version")
  valid_21626593 = validateParameter(valid_21626593, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626593 != nil:
    section.add "Version", valid_21626593
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626594 = header.getOrDefault("X-Amz-Date")
  valid_21626594 = validateParameter(valid_21626594, JString, required = false,
                                   default = nil)
  if valid_21626594 != nil:
    section.add "X-Amz-Date", valid_21626594
  var valid_21626595 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626595 = validateParameter(valid_21626595, JString, required = false,
                                   default = nil)
  if valid_21626595 != nil:
    section.add "X-Amz-Security-Token", valid_21626595
  var valid_21626596 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626596 = validateParameter(valid_21626596, JString, required = false,
                                   default = nil)
  if valid_21626596 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626596
  var valid_21626597 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626597 = validateParameter(valid_21626597, JString, required = false,
                                   default = nil)
  if valid_21626597 != nil:
    section.add "X-Amz-Algorithm", valid_21626597
  var valid_21626598 = header.getOrDefault("X-Amz-Signature")
  valid_21626598 = validateParameter(valid_21626598, JString, required = false,
                                   default = nil)
  if valid_21626598 != nil:
    section.add "X-Amz-Signature", valid_21626598
  var valid_21626599 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626599 = validateParameter(valid_21626599, JString, required = false,
                                   default = nil)
  if valid_21626599 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626599
  var valid_21626600 = header.getOrDefault("X-Amz-Credential")
  valid_21626600 = validateParameter(valid_21626600, JString, required = false,
                                   default = nil)
  if valid_21626600 != nil:
    section.add "X-Amz-Credential", valid_21626600
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  section = newJObject()
  var valid_21626601 = formData.getOrDefault("NextToken")
  valid_21626601 = validateParameter(valid_21626601, JString, required = false,
                                   default = nil)
  if valid_21626601 != nil:
    section.add "NextToken", valid_21626601
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_21626602 = formData.getOrDefault("ChangeSetName")
  valid_21626602 = validateParameter(valid_21626602, JString, required = true,
                                   default = nil)
  if valid_21626602 != nil:
    section.add "ChangeSetName", valid_21626602
  var valid_21626603 = formData.getOrDefault("StackName")
  valid_21626603 = validateParameter(valid_21626603, JString, required = false,
                                   default = nil)
  if valid_21626603 != nil:
    section.add "StackName", valid_21626603
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626604: Call_PostDescribeChangeSet_21626589;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_21626604.validator(path, query, header, formData, body, _)
  let scheme = call_21626604.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626604.makeUrl(scheme.get, call_21626604.host, call_21626604.base,
                               call_21626604.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626604, uri, valid, _)

proc call*(call_21626605: Call_PostDescribeChangeSet_21626589;
          ChangeSetName: string; NextToken: string = "";
          Action: string = "DescribeChangeSet"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Version: string (required)
  var query_21626606 = newJObject()
  var formData_21626607 = newJObject()
  add(formData_21626607, "NextToken", newJString(NextToken))
  add(query_21626606, "Action", newJString(Action))
  add(formData_21626607, "ChangeSetName", newJString(ChangeSetName))
  add(formData_21626607, "StackName", newJString(StackName))
  add(query_21626606, "Version", newJString(Version))
  result = call_21626605.call(nil, query_21626606, nil, formData_21626607, nil)

var postDescribeChangeSet* = Call_PostDescribeChangeSet_21626589(
    name: "postDescribeChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_PostDescribeChangeSet_21626590, base: "/",
    makeUrl: url_PostDescribeChangeSet_21626591,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeChangeSet_21626571 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeChangeSet_21626573(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeChangeSet_21626572(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_21626574 = query.getOrDefault("ChangeSetName")
  valid_21626574 = validateParameter(valid_21626574, JString, required = true,
                                   default = nil)
  if valid_21626574 != nil:
    section.add "ChangeSetName", valid_21626574
  var valid_21626575 = query.getOrDefault("NextToken")
  valid_21626575 = validateParameter(valid_21626575, JString, required = false,
                                   default = nil)
  if valid_21626575 != nil:
    section.add "NextToken", valid_21626575
  var valid_21626576 = query.getOrDefault("Action")
  valid_21626576 = validateParameter(valid_21626576, JString, required = true,
                                   default = newJString("DescribeChangeSet"))
  if valid_21626576 != nil:
    section.add "Action", valid_21626576
  var valid_21626577 = query.getOrDefault("Version")
  valid_21626577 = validateParameter(valid_21626577, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626577 != nil:
    section.add "Version", valid_21626577
  var valid_21626578 = query.getOrDefault("StackName")
  valid_21626578 = validateParameter(valid_21626578, JString, required = false,
                                   default = nil)
  if valid_21626578 != nil:
    section.add "StackName", valid_21626578
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626579 = header.getOrDefault("X-Amz-Date")
  valid_21626579 = validateParameter(valid_21626579, JString, required = false,
                                   default = nil)
  if valid_21626579 != nil:
    section.add "X-Amz-Date", valid_21626579
  var valid_21626580 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626580 = validateParameter(valid_21626580, JString, required = false,
                                   default = nil)
  if valid_21626580 != nil:
    section.add "X-Amz-Security-Token", valid_21626580
  var valid_21626581 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626581 = validateParameter(valid_21626581, JString, required = false,
                                   default = nil)
  if valid_21626581 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626581
  var valid_21626582 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626582 = validateParameter(valid_21626582, JString, required = false,
                                   default = nil)
  if valid_21626582 != nil:
    section.add "X-Amz-Algorithm", valid_21626582
  var valid_21626583 = header.getOrDefault("X-Amz-Signature")
  valid_21626583 = validateParameter(valid_21626583, JString, required = false,
                                   default = nil)
  if valid_21626583 != nil:
    section.add "X-Amz-Signature", valid_21626583
  var valid_21626584 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626584 = validateParameter(valid_21626584, JString, required = false,
                                   default = nil)
  if valid_21626584 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626584
  var valid_21626585 = header.getOrDefault("X-Amz-Credential")
  valid_21626585 = validateParameter(valid_21626585, JString, required = false,
                                   default = nil)
  if valid_21626585 != nil:
    section.add "X-Amz-Credential", valid_21626585
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626586: Call_GetDescribeChangeSet_21626571; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_21626586.validator(path, query, header, formData, body, _)
  let scheme = call_21626586.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626586.makeUrl(scheme.get, call_21626586.host, call_21626586.base,
                               call_21626586.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626586, uri, valid, _)

proc call*(call_21626587: Call_GetDescribeChangeSet_21626571;
          ChangeSetName: string; NextToken: string = "";
          Action: string = "DescribeChangeSet"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  var query_21626588 = newJObject()
  add(query_21626588, "ChangeSetName", newJString(ChangeSetName))
  add(query_21626588, "NextToken", newJString(NextToken))
  add(query_21626588, "Action", newJString(Action))
  add(query_21626588, "Version", newJString(Version))
  add(query_21626588, "StackName", newJString(StackName))
  result = call_21626587.call(nil, query_21626588, nil, nil, nil)

var getDescribeChangeSet* = Call_GetDescribeChangeSet_21626571(
    name: "getDescribeChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_GetDescribeChangeSet_21626572, base: "/",
    makeUrl: url_GetDescribeChangeSet_21626573,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackDriftDetectionStatus_21626624 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackDriftDetectionStatus_21626626(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackDriftDetectionStatus_21626625(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626627 = query.getOrDefault("Action")
  valid_21626627 = validateParameter(valid_21626627, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_21626627 != nil:
    section.add "Action", valid_21626627
  var valid_21626628 = query.getOrDefault("Version")
  valid_21626628 = validateParameter(valid_21626628, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626628 != nil:
    section.add "Version", valid_21626628
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626629 = header.getOrDefault("X-Amz-Date")
  valid_21626629 = validateParameter(valid_21626629, JString, required = false,
                                   default = nil)
  if valid_21626629 != nil:
    section.add "X-Amz-Date", valid_21626629
  var valid_21626630 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626630 = validateParameter(valid_21626630, JString, required = false,
                                   default = nil)
  if valid_21626630 != nil:
    section.add "X-Amz-Security-Token", valid_21626630
  var valid_21626631 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626631 = validateParameter(valid_21626631, JString, required = false,
                                   default = nil)
  if valid_21626631 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626631
  var valid_21626632 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626632 = validateParameter(valid_21626632, JString, required = false,
                                   default = nil)
  if valid_21626632 != nil:
    section.add "X-Amz-Algorithm", valid_21626632
  var valid_21626633 = header.getOrDefault("X-Amz-Signature")
  valid_21626633 = validateParameter(valid_21626633, JString, required = false,
                                   default = nil)
  if valid_21626633 != nil:
    section.add "X-Amz-Signature", valid_21626633
  var valid_21626634 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626634 = validateParameter(valid_21626634, JString, required = false,
                                   default = nil)
  if valid_21626634 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626634
  var valid_21626635 = header.getOrDefault("X-Amz-Credential")
  valid_21626635 = validateParameter(valid_21626635, JString, required = false,
                                   default = nil)
  if valid_21626635 != nil:
    section.add "X-Amz-Credential", valid_21626635
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackDriftDetectionId` field"
  var valid_21626636 = formData.getOrDefault("StackDriftDetectionId")
  valid_21626636 = validateParameter(valid_21626636, JString, required = true,
                                   default = nil)
  if valid_21626636 != nil:
    section.add "StackDriftDetectionId", valid_21626636
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626637: Call_PostDescribeStackDriftDetectionStatus_21626624;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_21626637.validator(path, query, header, formData, body, _)
  let scheme = call_21626637.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626637.makeUrl(scheme.get, call_21626637.host, call_21626637.base,
                               call_21626637.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626637, uri, valid, _)

proc call*(call_21626638: Call_PostDescribeStackDriftDetectionStatus_21626624;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   Action: string (required)
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Version: string (required)
  var query_21626639 = newJObject()
  var formData_21626640 = newJObject()
  add(query_21626639, "Action", newJString(Action))
  add(formData_21626640, "StackDriftDetectionId",
      newJString(StackDriftDetectionId))
  add(query_21626639, "Version", newJString(Version))
  result = call_21626638.call(nil, query_21626639, nil, formData_21626640, nil)

var postDescribeStackDriftDetectionStatus* = Call_PostDescribeStackDriftDetectionStatus_21626624(
    name: "postDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_PostDescribeStackDriftDetectionStatus_21626625, base: "/",
    makeUrl: url_PostDescribeStackDriftDetectionStatus_21626626,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackDriftDetectionStatus_21626608 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackDriftDetectionStatus_21626610(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackDriftDetectionStatus_21626609(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `StackDriftDetectionId` field"
  var valid_21626611 = query.getOrDefault("StackDriftDetectionId")
  valid_21626611 = validateParameter(valid_21626611, JString, required = true,
                                   default = nil)
  if valid_21626611 != nil:
    section.add "StackDriftDetectionId", valid_21626611
  var valid_21626612 = query.getOrDefault("Action")
  valid_21626612 = validateParameter(valid_21626612, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_21626612 != nil:
    section.add "Action", valid_21626612
  var valid_21626613 = query.getOrDefault("Version")
  valid_21626613 = validateParameter(valid_21626613, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626613 != nil:
    section.add "Version", valid_21626613
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626614 = header.getOrDefault("X-Amz-Date")
  valid_21626614 = validateParameter(valid_21626614, JString, required = false,
                                   default = nil)
  if valid_21626614 != nil:
    section.add "X-Amz-Date", valid_21626614
  var valid_21626615 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626615 = validateParameter(valid_21626615, JString, required = false,
                                   default = nil)
  if valid_21626615 != nil:
    section.add "X-Amz-Security-Token", valid_21626615
  var valid_21626616 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626616 = validateParameter(valid_21626616, JString, required = false,
                                   default = nil)
  if valid_21626616 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626616
  var valid_21626617 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626617 = validateParameter(valid_21626617, JString, required = false,
                                   default = nil)
  if valid_21626617 != nil:
    section.add "X-Amz-Algorithm", valid_21626617
  var valid_21626618 = header.getOrDefault("X-Amz-Signature")
  valid_21626618 = validateParameter(valid_21626618, JString, required = false,
                                   default = nil)
  if valid_21626618 != nil:
    section.add "X-Amz-Signature", valid_21626618
  var valid_21626619 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626619 = validateParameter(valid_21626619, JString, required = false,
                                   default = nil)
  if valid_21626619 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626619
  var valid_21626620 = header.getOrDefault("X-Amz-Credential")
  valid_21626620 = validateParameter(valid_21626620, JString, required = false,
                                   default = nil)
  if valid_21626620 != nil:
    section.add "X-Amz-Credential", valid_21626620
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626621: Call_GetDescribeStackDriftDetectionStatus_21626608;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_21626621.validator(path, query, header, formData, body, _)
  let scheme = call_21626621.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626621.makeUrl(scheme.get, call_21626621.host, call_21626621.base,
                               call_21626621.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626621, uri, valid, _)

proc call*(call_21626622: Call_GetDescribeStackDriftDetectionStatus_21626608;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626623 = newJObject()
  add(query_21626623, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_21626623, "Action", newJString(Action))
  add(query_21626623, "Version", newJString(Version))
  result = call_21626622.call(nil, query_21626623, nil, nil, nil)

var getDescribeStackDriftDetectionStatus* = Call_GetDescribeStackDriftDetectionStatus_21626608(
    name: "getDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_GetDescribeStackDriftDetectionStatus_21626609, base: "/",
    makeUrl: url_GetDescribeStackDriftDetectionStatus_21626610,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackEvents_21626658 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackEvents_21626660(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackEvents_21626659(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626661 = query.getOrDefault("Action")
  valid_21626661 = validateParameter(valid_21626661, JString, required = true,
                                   default = newJString("DescribeStackEvents"))
  if valid_21626661 != nil:
    section.add "Action", valid_21626661
  var valid_21626662 = query.getOrDefault("Version")
  valid_21626662 = validateParameter(valid_21626662, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626662 != nil:
    section.add "Version", valid_21626662
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626663 = header.getOrDefault("X-Amz-Date")
  valid_21626663 = validateParameter(valid_21626663, JString, required = false,
                                   default = nil)
  if valid_21626663 != nil:
    section.add "X-Amz-Date", valid_21626663
  var valid_21626664 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626664 = validateParameter(valid_21626664, JString, required = false,
                                   default = nil)
  if valid_21626664 != nil:
    section.add "X-Amz-Security-Token", valid_21626664
  var valid_21626665 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626665 = validateParameter(valid_21626665, JString, required = false,
                                   default = nil)
  if valid_21626665 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626665
  var valid_21626666 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626666 = validateParameter(valid_21626666, JString, required = false,
                                   default = nil)
  if valid_21626666 != nil:
    section.add "X-Amz-Algorithm", valid_21626666
  var valid_21626667 = header.getOrDefault("X-Amz-Signature")
  valid_21626667 = validateParameter(valid_21626667, JString, required = false,
                                   default = nil)
  if valid_21626667 != nil:
    section.add "X-Amz-Signature", valid_21626667
  var valid_21626668 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626668 = validateParameter(valid_21626668, JString, required = false,
                                   default = nil)
  if valid_21626668 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626668
  var valid_21626669 = header.getOrDefault("X-Amz-Credential")
  valid_21626669 = validateParameter(valid_21626669, JString, required = false,
                                   default = nil)
  if valid_21626669 != nil:
    section.add "X-Amz-Credential", valid_21626669
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21626670 = formData.getOrDefault("NextToken")
  valid_21626670 = validateParameter(valid_21626670, JString, required = false,
                                   default = nil)
  if valid_21626670 != nil:
    section.add "NextToken", valid_21626670
  var valid_21626671 = formData.getOrDefault("StackName")
  valid_21626671 = validateParameter(valid_21626671, JString, required = false,
                                   default = nil)
  if valid_21626671 != nil:
    section.add "StackName", valid_21626671
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626672: Call_PostDescribeStackEvents_21626658;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_21626672.validator(path, query, header, formData, body, _)
  let scheme = call_21626672.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626672.makeUrl(scheme.get, call_21626672.host, call_21626672.base,
                               call_21626672.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626672, uri, valid, _)

proc call*(call_21626673: Call_PostDescribeStackEvents_21626658;
          NextToken: string = ""; Action: string = "DescribeStackEvents";
          StackName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_21626674 = newJObject()
  var formData_21626675 = newJObject()
  add(formData_21626675, "NextToken", newJString(NextToken))
  add(query_21626674, "Action", newJString(Action))
  add(formData_21626675, "StackName", newJString(StackName))
  add(query_21626674, "Version", newJString(Version))
  result = call_21626673.call(nil, query_21626674, nil, formData_21626675, nil)

var postDescribeStackEvents* = Call_PostDescribeStackEvents_21626658(
    name: "postDescribeStackEvents", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_PostDescribeStackEvents_21626659, base: "/",
    makeUrl: url_PostDescribeStackEvents_21626660,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackEvents_21626641 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackEvents_21626643(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackEvents_21626642(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21626644 = query.getOrDefault("NextToken")
  valid_21626644 = validateParameter(valid_21626644, JString, required = false,
                                   default = nil)
  if valid_21626644 != nil:
    section.add "NextToken", valid_21626644
  var valid_21626645 = query.getOrDefault("Action")
  valid_21626645 = validateParameter(valid_21626645, JString, required = true,
                                   default = newJString("DescribeStackEvents"))
  if valid_21626645 != nil:
    section.add "Action", valid_21626645
  var valid_21626646 = query.getOrDefault("Version")
  valid_21626646 = validateParameter(valid_21626646, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626646 != nil:
    section.add "Version", valid_21626646
  var valid_21626647 = query.getOrDefault("StackName")
  valid_21626647 = validateParameter(valid_21626647, JString, required = false,
                                   default = nil)
  if valid_21626647 != nil:
    section.add "StackName", valid_21626647
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626648 = header.getOrDefault("X-Amz-Date")
  valid_21626648 = validateParameter(valid_21626648, JString, required = false,
                                   default = nil)
  if valid_21626648 != nil:
    section.add "X-Amz-Date", valid_21626648
  var valid_21626649 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626649 = validateParameter(valid_21626649, JString, required = false,
                                   default = nil)
  if valid_21626649 != nil:
    section.add "X-Amz-Security-Token", valid_21626649
  var valid_21626650 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626650 = validateParameter(valid_21626650, JString, required = false,
                                   default = nil)
  if valid_21626650 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626650
  var valid_21626651 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626651 = validateParameter(valid_21626651, JString, required = false,
                                   default = nil)
  if valid_21626651 != nil:
    section.add "X-Amz-Algorithm", valid_21626651
  var valid_21626652 = header.getOrDefault("X-Amz-Signature")
  valid_21626652 = validateParameter(valid_21626652, JString, required = false,
                                   default = nil)
  if valid_21626652 != nil:
    section.add "X-Amz-Signature", valid_21626652
  var valid_21626653 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626653 = validateParameter(valid_21626653, JString, required = false,
                                   default = nil)
  if valid_21626653 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626653
  var valid_21626654 = header.getOrDefault("X-Amz-Credential")
  valid_21626654 = validateParameter(valid_21626654, JString, required = false,
                                   default = nil)
  if valid_21626654 != nil:
    section.add "X-Amz-Credential", valid_21626654
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626655: Call_GetDescribeStackEvents_21626641;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_21626655.validator(path, query, header, formData, body, _)
  let scheme = call_21626655.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626655.makeUrl(scheme.get, call_21626655.host, call_21626655.base,
                               call_21626655.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626655, uri, valid, _)

proc call*(call_21626656: Call_GetDescribeStackEvents_21626641;
          NextToken: string = ""; Action: string = "DescribeStackEvents";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_21626657 = newJObject()
  add(query_21626657, "NextToken", newJString(NextToken))
  add(query_21626657, "Action", newJString(Action))
  add(query_21626657, "Version", newJString(Version))
  add(query_21626657, "StackName", newJString(StackName))
  result = call_21626656.call(nil, query_21626657, nil, nil, nil)

var getDescribeStackEvents* = Call_GetDescribeStackEvents_21626641(
    name: "getDescribeStackEvents", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_GetDescribeStackEvents_21626642, base: "/",
    makeUrl: url_GetDescribeStackEvents_21626643,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackInstance_21626694 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackInstance_21626696(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackInstance_21626695(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626697 = query.getOrDefault("Action")
  valid_21626697 = validateParameter(valid_21626697, JString, required = true, default = newJString(
      "DescribeStackInstance"))
  if valid_21626697 != nil:
    section.add "Action", valid_21626697
  var valid_21626698 = query.getOrDefault("Version")
  valid_21626698 = validateParameter(valid_21626698, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626698 != nil:
    section.add "Version", valid_21626698
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626699 = header.getOrDefault("X-Amz-Date")
  valid_21626699 = validateParameter(valid_21626699, JString, required = false,
                                   default = nil)
  if valid_21626699 != nil:
    section.add "X-Amz-Date", valid_21626699
  var valid_21626700 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626700 = validateParameter(valid_21626700, JString, required = false,
                                   default = nil)
  if valid_21626700 != nil:
    section.add "X-Amz-Security-Token", valid_21626700
  var valid_21626701 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626701 = validateParameter(valid_21626701, JString, required = false,
                                   default = nil)
  if valid_21626701 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626701
  var valid_21626702 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626702 = validateParameter(valid_21626702, JString, required = false,
                                   default = nil)
  if valid_21626702 != nil:
    section.add "X-Amz-Algorithm", valid_21626702
  var valid_21626703 = header.getOrDefault("X-Amz-Signature")
  valid_21626703 = validateParameter(valid_21626703, JString, required = false,
                                   default = nil)
  if valid_21626703 != nil:
    section.add "X-Amz-Signature", valid_21626703
  var valid_21626704 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626704 = validateParameter(valid_21626704, JString, required = false,
                                   default = nil)
  if valid_21626704 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626704
  var valid_21626705 = header.getOrDefault("X-Amz-Credential")
  valid_21626705 = validateParameter(valid_21626705, JString, required = false,
                                   default = nil)
  if valid_21626705 != nil:
    section.add "X-Amz-Credential", valid_21626705
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21626706 = formData.getOrDefault("StackSetName")
  valid_21626706 = validateParameter(valid_21626706, JString, required = true,
                                   default = nil)
  if valid_21626706 != nil:
    section.add "StackSetName", valid_21626706
  var valid_21626707 = formData.getOrDefault("StackInstanceRegion")
  valid_21626707 = validateParameter(valid_21626707, JString, required = true,
                                   default = nil)
  if valid_21626707 != nil:
    section.add "StackInstanceRegion", valid_21626707
  var valid_21626708 = formData.getOrDefault("StackInstanceAccount")
  valid_21626708 = validateParameter(valid_21626708, JString, required = true,
                                   default = nil)
  if valid_21626708 != nil:
    section.add "StackInstanceAccount", valid_21626708
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626709: Call_PostDescribeStackInstance_21626694;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_21626709.validator(path, query, header, formData, body, _)
  let scheme = call_21626709.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626709.makeUrl(scheme.get, call_21626709.host, call_21626709.base,
                               call_21626709.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626709, uri, valid, _)

proc call*(call_21626710: Call_PostDescribeStackInstance_21626694;
          StackSetName: string; StackInstanceRegion: string;
          StackInstanceAccount: string; Action: string = "DescribeStackInstance";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   Action: string (required)
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Version: string (required)
  var query_21626711 = newJObject()
  var formData_21626712 = newJObject()
  add(formData_21626712, "StackSetName", newJString(StackSetName))
  add(query_21626711, "Action", newJString(Action))
  add(formData_21626712, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_21626712, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_21626711, "Version", newJString(Version))
  result = call_21626710.call(nil, query_21626711, nil, formData_21626712, nil)

var postDescribeStackInstance* = Call_PostDescribeStackInstance_21626694(
    name: "postDescribeStackInstance", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_PostDescribeStackInstance_21626695, base: "/",
    makeUrl: url_PostDescribeStackInstance_21626696,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackInstance_21626676 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackInstance_21626678(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackInstance_21626677(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   Action: JString (required)
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `StackInstanceRegion` field"
  var valid_21626679 = query.getOrDefault("StackInstanceRegion")
  valid_21626679 = validateParameter(valid_21626679, JString, required = true,
                                   default = nil)
  if valid_21626679 != nil:
    section.add "StackInstanceRegion", valid_21626679
  var valid_21626680 = query.getOrDefault("Action")
  valid_21626680 = validateParameter(valid_21626680, JString, required = true, default = newJString(
      "DescribeStackInstance"))
  if valid_21626680 != nil:
    section.add "Action", valid_21626680
  var valid_21626681 = query.getOrDefault("StackInstanceAccount")
  valid_21626681 = validateParameter(valid_21626681, JString, required = true,
                                   default = nil)
  if valid_21626681 != nil:
    section.add "StackInstanceAccount", valid_21626681
  var valid_21626682 = query.getOrDefault("StackSetName")
  valid_21626682 = validateParameter(valid_21626682, JString, required = true,
                                   default = nil)
  if valid_21626682 != nil:
    section.add "StackSetName", valid_21626682
  var valid_21626683 = query.getOrDefault("Version")
  valid_21626683 = validateParameter(valid_21626683, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626683 != nil:
    section.add "Version", valid_21626683
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626684 = header.getOrDefault("X-Amz-Date")
  valid_21626684 = validateParameter(valid_21626684, JString, required = false,
                                   default = nil)
  if valid_21626684 != nil:
    section.add "X-Amz-Date", valid_21626684
  var valid_21626685 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626685 = validateParameter(valid_21626685, JString, required = false,
                                   default = nil)
  if valid_21626685 != nil:
    section.add "X-Amz-Security-Token", valid_21626685
  var valid_21626686 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626686 = validateParameter(valid_21626686, JString, required = false,
                                   default = nil)
  if valid_21626686 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626686
  var valid_21626687 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626687 = validateParameter(valid_21626687, JString, required = false,
                                   default = nil)
  if valid_21626687 != nil:
    section.add "X-Amz-Algorithm", valid_21626687
  var valid_21626688 = header.getOrDefault("X-Amz-Signature")
  valid_21626688 = validateParameter(valid_21626688, JString, required = false,
                                   default = nil)
  if valid_21626688 != nil:
    section.add "X-Amz-Signature", valid_21626688
  var valid_21626689 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626689 = validateParameter(valid_21626689, JString, required = false,
                                   default = nil)
  if valid_21626689 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626689
  var valid_21626690 = header.getOrDefault("X-Amz-Credential")
  valid_21626690 = validateParameter(valid_21626690, JString, required = false,
                                   default = nil)
  if valid_21626690 != nil:
    section.add "X-Amz-Credential", valid_21626690
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626691: Call_GetDescribeStackInstance_21626676;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_21626691.validator(path, query, header, formData, body, _)
  let scheme = call_21626691.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626691.makeUrl(scheme.get, call_21626691.host, call_21626691.base,
                               call_21626691.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626691, uri, valid, _)

proc call*(call_21626692: Call_GetDescribeStackInstance_21626676;
          StackInstanceRegion: string; StackInstanceAccount: string;
          StackSetName: string; Action: string = "DescribeStackInstance";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   Action: string (required)
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   Version: string (required)
  var query_21626693 = newJObject()
  add(query_21626693, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_21626693, "Action", newJString(Action))
  add(query_21626693, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_21626693, "StackSetName", newJString(StackSetName))
  add(query_21626693, "Version", newJString(Version))
  result = call_21626692.call(nil, query_21626693, nil, nil, nil)

var getDescribeStackInstance* = Call_GetDescribeStackInstance_21626676(
    name: "getDescribeStackInstance", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_GetDescribeStackInstance_21626677, base: "/",
    makeUrl: url_GetDescribeStackInstance_21626678,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResource_21626730 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackResource_21626732(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResource_21626731(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626733 = query.getOrDefault("Action")
  valid_21626733 = validateParameter(valid_21626733, JString, required = true, default = newJString(
      "DescribeStackResource"))
  if valid_21626733 != nil:
    section.add "Action", valid_21626733
  var valid_21626734 = query.getOrDefault("Version")
  valid_21626734 = validateParameter(valid_21626734, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626734 != nil:
    section.add "Version", valid_21626734
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626735 = header.getOrDefault("X-Amz-Date")
  valid_21626735 = validateParameter(valid_21626735, JString, required = false,
                                   default = nil)
  if valid_21626735 != nil:
    section.add "X-Amz-Date", valid_21626735
  var valid_21626736 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626736 = validateParameter(valid_21626736, JString, required = false,
                                   default = nil)
  if valid_21626736 != nil:
    section.add "X-Amz-Security-Token", valid_21626736
  var valid_21626737 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626737 = validateParameter(valid_21626737, JString, required = false,
                                   default = nil)
  if valid_21626737 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626737
  var valid_21626738 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626738 = validateParameter(valid_21626738, JString, required = false,
                                   default = nil)
  if valid_21626738 != nil:
    section.add "X-Amz-Algorithm", valid_21626738
  var valid_21626739 = header.getOrDefault("X-Amz-Signature")
  valid_21626739 = validateParameter(valid_21626739, JString, required = false,
                                   default = nil)
  if valid_21626739 != nil:
    section.add "X-Amz-Signature", valid_21626739
  var valid_21626740 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626740 = validateParameter(valid_21626740, JString, required = false,
                                   default = nil)
  if valid_21626740 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626740
  var valid_21626741 = header.getOrDefault("X-Amz-Credential")
  valid_21626741 = validateParameter(valid_21626741, JString, required = false,
                                   default = nil)
  if valid_21626741 != nil:
    section.add "X-Amz-Credential", valid_21626741
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `LogicalResourceId` field"
  var valid_21626742 = formData.getOrDefault("LogicalResourceId")
  valid_21626742 = validateParameter(valid_21626742, JString, required = true,
                                   default = nil)
  if valid_21626742 != nil:
    section.add "LogicalResourceId", valid_21626742
  var valid_21626743 = formData.getOrDefault("StackName")
  valid_21626743 = validateParameter(valid_21626743, JString, required = true,
                                   default = nil)
  if valid_21626743 != nil:
    section.add "StackName", valid_21626743
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626744: Call_PostDescribeStackResource_21626730;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_21626744.validator(path, query, header, formData, body, _)
  let scheme = call_21626744.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626744.makeUrl(scheme.get, call_21626744.host, call_21626744.base,
                               call_21626744.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626744, uri, valid, _)

proc call*(call_21626745: Call_PostDescribeStackResource_21626730;
          LogicalResourceId: string; StackName: string;
          Action: string = "DescribeStackResource"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_21626746 = newJObject()
  var formData_21626747 = newJObject()
  add(formData_21626747, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_21626746, "Action", newJString(Action))
  add(formData_21626747, "StackName", newJString(StackName))
  add(query_21626746, "Version", newJString(Version))
  result = call_21626745.call(nil, query_21626746, nil, formData_21626747, nil)

var postDescribeStackResource* = Call_PostDescribeStackResource_21626730(
    name: "postDescribeStackResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_PostDescribeStackResource_21626731, base: "/",
    makeUrl: url_PostDescribeStackResource_21626732,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResource_21626713 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackResource_21626715(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResource_21626714(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `LogicalResourceId` field"
  var valid_21626716 = query.getOrDefault("LogicalResourceId")
  valid_21626716 = validateParameter(valid_21626716, JString, required = true,
                                   default = nil)
  if valid_21626716 != nil:
    section.add "LogicalResourceId", valid_21626716
  var valid_21626717 = query.getOrDefault("Action")
  valid_21626717 = validateParameter(valid_21626717, JString, required = true, default = newJString(
      "DescribeStackResource"))
  if valid_21626717 != nil:
    section.add "Action", valid_21626717
  var valid_21626718 = query.getOrDefault("Version")
  valid_21626718 = validateParameter(valid_21626718, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626718 != nil:
    section.add "Version", valid_21626718
  var valid_21626719 = query.getOrDefault("StackName")
  valid_21626719 = validateParameter(valid_21626719, JString, required = true,
                                   default = nil)
  if valid_21626719 != nil:
    section.add "StackName", valid_21626719
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626720 = header.getOrDefault("X-Amz-Date")
  valid_21626720 = validateParameter(valid_21626720, JString, required = false,
                                   default = nil)
  if valid_21626720 != nil:
    section.add "X-Amz-Date", valid_21626720
  var valid_21626721 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626721 = validateParameter(valid_21626721, JString, required = false,
                                   default = nil)
  if valid_21626721 != nil:
    section.add "X-Amz-Security-Token", valid_21626721
  var valid_21626722 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626722 = validateParameter(valid_21626722, JString, required = false,
                                   default = nil)
  if valid_21626722 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626722
  var valid_21626723 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626723 = validateParameter(valid_21626723, JString, required = false,
                                   default = nil)
  if valid_21626723 != nil:
    section.add "X-Amz-Algorithm", valid_21626723
  var valid_21626724 = header.getOrDefault("X-Amz-Signature")
  valid_21626724 = validateParameter(valid_21626724, JString, required = false,
                                   default = nil)
  if valid_21626724 != nil:
    section.add "X-Amz-Signature", valid_21626724
  var valid_21626725 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626725 = validateParameter(valid_21626725, JString, required = false,
                                   default = nil)
  if valid_21626725 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626725
  var valid_21626726 = header.getOrDefault("X-Amz-Credential")
  valid_21626726 = validateParameter(valid_21626726, JString, required = false,
                                   default = nil)
  if valid_21626726 != nil:
    section.add "X-Amz-Credential", valid_21626726
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626727: Call_GetDescribeStackResource_21626713;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_21626727.validator(path, query, header, formData, body, _)
  let scheme = call_21626727.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626727.makeUrl(scheme.get, call_21626727.host, call_21626727.base,
                               call_21626727.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626727, uri, valid, _)

proc call*(call_21626728: Call_GetDescribeStackResource_21626713;
          LogicalResourceId: string; StackName: string;
          Action: string = "DescribeStackResource"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_21626729 = newJObject()
  add(query_21626729, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_21626729, "Action", newJString(Action))
  add(query_21626729, "Version", newJString(Version))
  add(query_21626729, "StackName", newJString(StackName))
  result = call_21626728.call(nil, query_21626729, nil, nil, nil)

var getDescribeStackResource* = Call_GetDescribeStackResource_21626713(
    name: "getDescribeStackResource", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_GetDescribeStackResource_21626714, base: "/",
    makeUrl: url_GetDescribeStackResource_21626715,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResourceDrifts_21626767 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackResourceDrifts_21626769(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResourceDrifts_21626768(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626770 = query.getOrDefault("Action")
  valid_21626770 = validateParameter(valid_21626770, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_21626770 != nil:
    section.add "Action", valid_21626770
  var valid_21626771 = query.getOrDefault("Version")
  valid_21626771 = validateParameter(valid_21626771, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626771 != nil:
    section.add "Version", valid_21626771
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626772 = header.getOrDefault("X-Amz-Date")
  valid_21626772 = validateParameter(valid_21626772, JString, required = false,
                                   default = nil)
  if valid_21626772 != nil:
    section.add "X-Amz-Date", valid_21626772
  var valid_21626773 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626773 = validateParameter(valid_21626773, JString, required = false,
                                   default = nil)
  if valid_21626773 != nil:
    section.add "X-Amz-Security-Token", valid_21626773
  var valid_21626774 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626774 = validateParameter(valid_21626774, JString, required = false,
                                   default = nil)
  if valid_21626774 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626774
  var valid_21626775 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626775 = validateParameter(valid_21626775, JString, required = false,
                                   default = nil)
  if valid_21626775 != nil:
    section.add "X-Amz-Algorithm", valid_21626775
  var valid_21626776 = header.getOrDefault("X-Amz-Signature")
  valid_21626776 = validateParameter(valid_21626776, JString, required = false,
                                   default = nil)
  if valid_21626776 != nil:
    section.add "X-Amz-Signature", valid_21626776
  var valid_21626777 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626777 = validateParameter(valid_21626777, JString, required = false,
                                   default = nil)
  if valid_21626777 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626777
  var valid_21626778 = header.getOrDefault("X-Amz-Credential")
  valid_21626778 = validateParameter(valid_21626778, JString, required = false,
                                   default = nil)
  if valid_21626778 != nil:
    section.add "X-Amz-Credential", valid_21626778
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  section = newJObject()
  var valid_21626779 = formData.getOrDefault("NextToken")
  valid_21626779 = validateParameter(valid_21626779, JString, required = false,
                                   default = nil)
  if valid_21626779 != nil:
    section.add "NextToken", valid_21626779
  var valid_21626780 = formData.getOrDefault("MaxResults")
  valid_21626780 = validateParameter(valid_21626780, JInt, required = false,
                                   default = nil)
  if valid_21626780 != nil:
    section.add "MaxResults", valid_21626780
  var valid_21626781 = formData.getOrDefault("StackResourceDriftStatusFilters")
  valid_21626781 = validateParameter(valid_21626781, JArray, required = false,
                                   default = nil)
  if valid_21626781 != nil:
    section.add "StackResourceDriftStatusFilters", valid_21626781
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21626782 = formData.getOrDefault("StackName")
  valid_21626782 = validateParameter(valid_21626782, JString, required = true,
                                   default = nil)
  if valid_21626782 != nil:
    section.add "StackName", valid_21626782
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626783: Call_PostDescribeStackResourceDrifts_21626767;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_21626783.validator(path, query, header, formData, body, _)
  let scheme = call_21626783.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626783.makeUrl(scheme.get, call_21626783.host, call_21626783.base,
                               call_21626783.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626783, uri, valid, _)

proc call*(call_21626784: Call_PostDescribeStackResourceDrifts_21626767;
          StackName: string; NextToken: string = ""; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil;
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   Version: string (required)
  var query_21626785 = newJObject()
  var formData_21626786 = newJObject()
  add(formData_21626786, "NextToken", newJString(NextToken))
  add(formData_21626786, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    formData_21626786.add "StackResourceDriftStatusFilters",
                         StackResourceDriftStatusFilters
  add(query_21626785, "Action", newJString(Action))
  add(formData_21626786, "StackName", newJString(StackName))
  add(query_21626785, "Version", newJString(Version))
  result = call_21626784.call(nil, query_21626785, nil, formData_21626786, nil)

var postDescribeStackResourceDrifts* = Call_PostDescribeStackResourceDrifts_21626767(
    name: "postDescribeStackResourceDrifts", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_PostDescribeStackResourceDrifts_21626768, base: "/",
    makeUrl: url_PostDescribeStackResourceDrifts_21626769,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResourceDrifts_21626748 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackResourceDrifts_21626750(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResourceDrifts_21626749(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  section = newJObject()
  var valid_21626751 = query.getOrDefault("StackResourceDriftStatusFilters")
  valid_21626751 = validateParameter(valid_21626751, JArray, required = false,
                                   default = nil)
  if valid_21626751 != nil:
    section.add "StackResourceDriftStatusFilters", valid_21626751
  var valid_21626752 = query.getOrDefault("NextToken")
  valid_21626752 = validateParameter(valid_21626752, JString, required = false,
                                   default = nil)
  if valid_21626752 != nil:
    section.add "NextToken", valid_21626752
  var valid_21626753 = query.getOrDefault("Action")
  valid_21626753 = validateParameter(valid_21626753, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_21626753 != nil:
    section.add "Action", valid_21626753
  var valid_21626754 = query.getOrDefault("Version")
  valid_21626754 = validateParameter(valid_21626754, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626754 != nil:
    section.add "Version", valid_21626754
  var valid_21626755 = query.getOrDefault("MaxResults")
  valid_21626755 = validateParameter(valid_21626755, JInt, required = false,
                                   default = nil)
  if valid_21626755 != nil:
    section.add "MaxResults", valid_21626755
  var valid_21626756 = query.getOrDefault("StackName")
  valid_21626756 = validateParameter(valid_21626756, JString, required = true,
                                   default = nil)
  if valid_21626756 != nil:
    section.add "StackName", valid_21626756
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626757 = header.getOrDefault("X-Amz-Date")
  valid_21626757 = validateParameter(valid_21626757, JString, required = false,
                                   default = nil)
  if valid_21626757 != nil:
    section.add "X-Amz-Date", valid_21626757
  var valid_21626758 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626758 = validateParameter(valid_21626758, JString, required = false,
                                   default = nil)
  if valid_21626758 != nil:
    section.add "X-Amz-Security-Token", valid_21626758
  var valid_21626759 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626759 = validateParameter(valid_21626759, JString, required = false,
                                   default = nil)
  if valid_21626759 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626759
  var valid_21626760 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626760 = validateParameter(valid_21626760, JString, required = false,
                                   default = nil)
  if valid_21626760 != nil:
    section.add "X-Amz-Algorithm", valid_21626760
  var valid_21626761 = header.getOrDefault("X-Amz-Signature")
  valid_21626761 = validateParameter(valid_21626761, JString, required = false,
                                   default = nil)
  if valid_21626761 != nil:
    section.add "X-Amz-Signature", valid_21626761
  var valid_21626762 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626762 = validateParameter(valid_21626762, JString, required = false,
                                   default = nil)
  if valid_21626762 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626762
  var valid_21626763 = header.getOrDefault("X-Amz-Credential")
  valid_21626763 = validateParameter(valid_21626763, JString, required = false,
                                   default = nil)
  if valid_21626763 != nil:
    section.add "X-Amz-Credential", valid_21626763
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626764: Call_GetDescribeStackResourceDrifts_21626748;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_21626764.validator(path, query, header, formData, body, _)
  let scheme = call_21626764.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626764.makeUrl(scheme.get, call_21626764.host, call_21626764.base,
                               call_21626764.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626764, uri, valid, _)

proc call*(call_21626765: Call_GetDescribeStackResourceDrifts_21626748;
          StackName: string; StackResourceDriftStatusFilters: JsonNode = nil;
          NextToken: string = ""; Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  var query_21626766 = newJObject()
  if StackResourceDriftStatusFilters != nil:
    query_21626766.add "StackResourceDriftStatusFilters",
                      StackResourceDriftStatusFilters
  add(query_21626766, "NextToken", newJString(NextToken))
  add(query_21626766, "Action", newJString(Action))
  add(query_21626766, "Version", newJString(Version))
  add(query_21626766, "MaxResults", newJInt(MaxResults))
  add(query_21626766, "StackName", newJString(StackName))
  result = call_21626765.call(nil, query_21626766, nil, nil, nil)

var getDescribeStackResourceDrifts* = Call_GetDescribeStackResourceDrifts_21626748(
    name: "getDescribeStackResourceDrifts", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_GetDescribeStackResourceDrifts_21626749, base: "/",
    makeUrl: url_GetDescribeStackResourceDrifts_21626750,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResources_21626805 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackResources_21626807(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResources_21626806(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626808 = query.getOrDefault("Action")
  valid_21626808 = validateParameter(valid_21626808, JString, required = true, default = newJString(
      "DescribeStackResources"))
  if valid_21626808 != nil:
    section.add "Action", valid_21626808
  var valid_21626809 = query.getOrDefault("Version")
  valid_21626809 = validateParameter(valid_21626809, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626809 != nil:
    section.add "Version", valid_21626809
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626810 = header.getOrDefault("X-Amz-Date")
  valid_21626810 = validateParameter(valid_21626810, JString, required = false,
                                   default = nil)
  if valid_21626810 != nil:
    section.add "X-Amz-Date", valid_21626810
  var valid_21626811 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626811 = validateParameter(valid_21626811, JString, required = false,
                                   default = nil)
  if valid_21626811 != nil:
    section.add "X-Amz-Security-Token", valid_21626811
  var valid_21626812 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626812 = validateParameter(valid_21626812, JString, required = false,
                                   default = nil)
  if valid_21626812 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626812
  var valid_21626813 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626813 = validateParameter(valid_21626813, JString, required = false,
                                   default = nil)
  if valid_21626813 != nil:
    section.add "X-Amz-Algorithm", valid_21626813
  var valid_21626814 = header.getOrDefault("X-Amz-Signature")
  valid_21626814 = validateParameter(valid_21626814, JString, required = false,
                                   default = nil)
  if valid_21626814 != nil:
    section.add "X-Amz-Signature", valid_21626814
  var valid_21626815 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626815 = validateParameter(valid_21626815, JString, required = false,
                                   default = nil)
  if valid_21626815 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626815
  var valid_21626816 = header.getOrDefault("X-Amz-Credential")
  valid_21626816 = validateParameter(valid_21626816, JString, required = false,
                                   default = nil)
  if valid_21626816 != nil:
    section.add "X-Amz-Credential", valid_21626816
  result.add "header", section
  ## parameters in `formData` object:
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  section = newJObject()
  var valid_21626817 = formData.getOrDefault("PhysicalResourceId")
  valid_21626817 = validateParameter(valid_21626817, JString, required = false,
                                   default = nil)
  if valid_21626817 != nil:
    section.add "PhysicalResourceId", valid_21626817
  var valid_21626818 = formData.getOrDefault("LogicalResourceId")
  valid_21626818 = validateParameter(valid_21626818, JString, required = false,
                                   default = nil)
  if valid_21626818 != nil:
    section.add "LogicalResourceId", valid_21626818
  var valid_21626819 = formData.getOrDefault("StackName")
  valid_21626819 = validateParameter(valid_21626819, JString, required = false,
                                   default = nil)
  if valid_21626819 != nil:
    section.add "StackName", valid_21626819
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626820: Call_PostDescribeStackResources_21626805;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_21626820.validator(path, query, header, formData, body, _)
  let scheme = call_21626820.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626820.makeUrl(scheme.get, call_21626820.host, call_21626820.base,
                               call_21626820.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626820, uri, valid, _)

proc call*(call_21626821: Call_PostDescribeStackResources_21626805;
          PhysicalResourceId: string = ""; LogicalResourceId: string = "";
          Action: string = "DescribeStackResources"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   Version: string (required)
  var query_21626822 = newJObject()
  var formData_21626823 = newJObject()
  add(formData_21626823, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(formData_21626823, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_21626822, "Action", newJString(Action))
  add(formData_21626823, "StackName", newJString(StackName))
  add(query_21626822, "Version", newJString(Version))
  result = call_21626821.call(nil, query_21626822, nil, formData_21626823, nil)

var postDescribeStackResources* = Call_PostDescribeStackResources_21626805(
    name: "postDescribeStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_PostDescribeStackResources_21626806, base: "/",
    makeUrl: url_PostDescribeStackResources_21626807,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResources_21626787 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackResources_21626789(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResources_21626788(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  section = newJObject()
  var valid_21626790 = query.getOrDefault("LogicalResourceId")
  valid_21626790 = validateParameter(valid_21626790, JString, required = false,
                                   default = nil)
  if valid_21626790 != nil:
    section.add "LogicalResourceId", valid_21626790
  var valid_21626791 = query.getOrDefault("PhysicalResourceId")
  valid_21626791 = validateParameter(valid_21626791, JString, required = false,
                                   default = nil)
  if valid_21626791 != nil:
    section.add "PhysicalResourceId", valid_21626791
  var valid_21626792 = query.getOrDefault("Action")
  valid_21626792 = validateParameter(valid_21626792, JString, required = true, default = newJString(
      "DescribeStackResources"))
  if valid_21626792 != nil:
    section.add "Action", valid_21626792
  var valid_21626793 = query.getOrDefault("Version")
  valid_21626793 = validateParameter(valid_21626793, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626793 != nil:
    section.add "Version", valid_21626793
  var valid_21626794 = query.getOrDefault("StackName")
  valid_21626794 = validateParameter(valid_21626794, JString, required = false,
                                   default = nil)
  if valid_21626794 != nil:
    section.add "StackName", valid_21626794
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626795 = header.getOrDefault("X-Amz-Date")
  valid_21626795 = validateParameter(valid_21626795, JString, required = false,
                                   default = nil)
  if valid_21626795 != nil:
    section.add "X-Amz-Date", valid_21626795
  var valid_21626796 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626796 = validateParameter(valid_21626796, JString, required = false,
                                   default = nil)
  if valid_21626796 != nil:
    section.add "X-Amz-Security-Token", valid_21626796
  var valid_21626797 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626797 = validateParameter(valid_21626797, JString, required = false,
                                   default = nil)
  if valid_21626797 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626797
  var valid_21626798 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626798 = validateParameter(valid_21626798, JString, required = false,
                                   default = nil)
  if valid_21626798 != nil:
    section.add "X-Amz-Algorithm", valid_21626798
  var valid_21626799 = header.getOrDefault("X-Amz-Signature")
  valid_21626799 = validateParameter(valid_21626799, JString, required = false,
                                   default = nil)
  if valid_21626799 != nil:
    section.add "X-Amz-Signature", valid_21626799
  var valid_21626800 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626800 = validateParameter(valid_21626800, JString, required = false,
                                   default = nil)
  if valid_21626800 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626800
  var valid_21626801 = header.getOrDefault("X-Amz-Credential")
  valid_21626801 = validateParameter(valid_21626801, JString, required = false,
                                   default = nil)
  if valid_21626801 != nil:
    section.add "X-Amz-Credential", valid_21626801
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626802: Call_GetDescribeStackResources_21626787;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_21626802.validator(path, query, header, formData, body, _)
  let scheme = call_21626802.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626802.makeUrl(scheme.get, call_21626802.host, call_21626802.base,
                               call_21626802.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626802, uri, valid, _)

proc call*(call_21626803: Call_GetDescribeStackResources_21626787;
          LogicalResourceId: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  var query_21626804 = newJObject()
  add(query_21626804, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_21626804, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_21626804, "Action", newJString(Action))
  add(query_21626804, "Version", newJString(Version))
  add(query_21626804, "StackName", newJString(StackName))
  result = call_21626803.call(nil, query_21626804, nil, nil, nil)

var getDescribeStackResources* = Call_GetDescribeStackResources_21626787(
    name: "getDescribeStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_GetDescribeStackResources_21626788, base: "/",
    makeUrl: url_GetDescribeStackResources_21626789,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSet_21626840 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackSet_21626842(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSet_21626841(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626843 = query.getOrDefault("Action")
  valid_21626843 = validateParameter(valid_21626843, JString, required = true,
                                   default = newJString("DescribeStackSet"))
  if valid_21626843 != nil:
    section.add "Action", valid_21626843
  var valid_21626844 = query.getOrDefault("Version")
  valid_21626844 = validateParameter(valid_21626844, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626844 != nil:
    section.add "Version", valid_21626844
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626845 = header.getOrDefault("X-Amz-Date")
  valid_21626845 = validateParameter(valid_21626845, JString, required = false,
                                   default = nil)
  if valid_21626845 != nil:
    section.add "X-Amz-Date", valid_21626845
  var valid_21626846 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626846 = validateParameter(valid_21626846, JString, required = false,
                                   default = nil)
  if valid_21626846 != nil:
    section.add "X-Amz-Security-Token", valid_21626846
  var valid_21626847 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626847 = validateParameter(valid_21626847, JString, required = false,
                                   default = nil)
  if valid_21626847 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626847
  var valid_21626848 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626848 = validateParameter(valid_21626848, JString, required = false,
                                   default = nil)
  if valid_21626848 != nil:
    section.add "X-Amz-Algorithm", valid_21626848
  var valid_21626849 = header.getOrDefault("X-Amz-Signature")
  valid_21626849 = validateParameter(valid_21626849, JString, required = false,
                                   default = nil)
  if valid_21626849 != nil:
    section.add "X-Amz-Signature", valid_21626849
  var valid_21626850 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626850 = validateParameter(valid_21626850, JString, required = false,
                                   default = nil)
  if valid_21626850 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626850
  var valid_21626851 = header.getOrDefault("X-Amz-Credential")
  valid_21626851 = validateParameter(valid_21626851, JString, required = false,
                                   default = nil)
  if valid_21626851 != nil:
    section.add "X-Amz-Credential", valid_21626851
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21626852 = formData.getOrDefault("StackSetName")
  valid_21626852 = validateParameter(valid_21626852, JString, required = true,
                                   default = nil)
  if valid_21626852 != nil:
    section.add "StackSetName", valid_21626852
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626853: Call_PostDescribeStackSet_21626840; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_21626853.validator(path, query, header, formData, body, _)
  let scheme = call_21626853.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626853.makeUrl(scheme.get, call_21626853.host, call_21626853.base,
                               call_21626853.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626853, uri, valid, _)

proc call*(call_21626854: Call_PostDescribeStackSet_21626840; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626855 = newJObject()
  var formData_21626856 = newJObject()
  add(formData_21626856, "StackSetName", newJString(StackSetName))
  add(query_21626855, "Action", newJString(Action))
  add(query_21626855, "Version", newJString(Version))
  result = call_21626854.call(nil, query_21626855, nil, formData_21626856, nil)

var postDescribeStackSet* = Call_PostDescribeStackSet_21626840(
    name: "postDescribeStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_PostDescribeStackSet_21626841, base: "/",
    makeUrl: url_PostDescribeStackSet_21626842,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSet_21626824 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackSet_21626826(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSet_21626825(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626827 = query.getOrDefault("Action")
  valid_21626827 = validateParameter(valid_21626827, JString, required = true,
                                   default = newJString("DescribeStackSet"))
  if valid_21626827 != nil:
    section.add "Action", valid_21626827
  var valid_21626828 = query.getOrDefault("StackSetName")
  valid_21626828 = validateParameter(valid_21626828, JString, required = true,
                                   default = nil)
  if valid_21626828 != nil:
    section.add "StackSetName", valid_21626828
  var valid_21626829 = query.getOrDefault("Version")
  valid_21626829 = validateParameter(valid_21626829, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626829 != nil:
    section.add "Version", valid_21626829
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626830 = header.getOrDefault("X-Amz-Date")
  valid_21626830 = validateParameter(valid_21626830, JString, required = false,
                                   default = nil)
  if valid_21626830 != nil:
    section.add "X-Amz-Date", valid_21626830
  var valid_21626831 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626831 = validateParameter(valid_21626831, JString, required = false,
                                   default = nil)
  if valid_21626831 != nil:
    section.add "X-Amz-Security-Token", valid_21626831
  var valid_21626832 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626832 = validateParameter(valid_21626832, JString, required = false,
                                   default = nil)
  if valid_21626832 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626832
  var valid_21626833 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626833 = validateParameter(valid_21626833, JString, required = false,
                                   default = nil)
  if valid_21626833 != nil:
    section.add "X-Amz-Algorithm", valid_21626833
  var valid_21626834 = header.getOrDefault("X-Amz-Signature")
  valid_21626834 = validateParameter(valid_21626834, JString, required = false,
                                   default = nil)
  if valid_21626834 != nil:
    section.add "X-Amz-Signature", valid_21626834
  var valid_21626835 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626835 = validateParameter(valid_21626835, JString, required = false,
                                   default = nil)
  if valid_21626835 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626835
  var valid_21626836 = header.getOrDefault("X-Amz-Credential")
  valid_21626836 = validateParameter(valid_21626836, JString, required = false,
                                   default = nil)
  if valid_21626836 != nil:
    section.add "X-Amz-Credential", valid_21626836
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626837: Call_GetDescribeStackSet_21626824; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_21626837.validator(path, query, header, formData, body, _)
  let scheme = call_21626837.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626837.makeUrl(scheme.get, call_21626837.host, call_21626837.base,
                               call_21626837.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626837, uri, valid, _)

proc call*(call_21626838: Call_GetDescribeStackSet_21626824; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Version: string (required)
  var query_21626839 = newJObject()
  add(query_21626839, "Action", newJString(Action))
  add(query_21626839, "StackSetName", newJString(StackSetName))
  add(query_21626839, "Version", newJString(Version))
  result = call_21626838.call(nil, query_21626839, nil, nil, nil)

var getDescribeStackSet* = Call_GetDescribeStackSet_21626824(
    name: "getDescribeStackSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_GetDescribeStackSet_21626825, base: "/",
    makeUrl: url_GetDescribeStackSet_21626826,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSetOperation_21626874 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStackSetOperation_21626876(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSetOperation_21626875(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626877 = query.getOrDefault("Action")
  valid_21626877 = validateParameter(valid_21626877, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_21626877 != nil:
    section.add "Action", valid_21626877
  var valid_21626878 = query.getOrDefault("Version")
  valid_21626878 = validateParameter(valid_21626878, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626878 != nil:
    section.add "Version", valid_21626878
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626879 = header.getOrDefault("X-Amz-Date")
  valid_21626879 = validateParameter(valid_21626879, JString, required = false,
                                   default = nil)
  if valid_21626879 != nil:
    section.add "X-Amz-Date", valid_21626879
  var valid_21626880 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626880 = validateParameter(valid_21626880, JString, required = false,
                                   default = nil)
  if valid_21626880 != nil:
    section.add "X-Amz-Security-Token", valid_21626880
  var valid_21626881 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626881 = validateParameter(valid_21626881, JString, required = false,
                                   default = nil)
  if valid_21626881 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626881
  var valid_21626882 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626882 = validateParameter(valid_21626882, JString, required = false,
                                   default = nil)
  if valid_21626882 != nil:
    section.add "X-Amz-Algorithm", valid_21626882
  var valid_21626883 = header.getOrDefault("X-Amz-Signature")
  valid_21626883 = validateParameter(valid_21626883, JString, required = false,
                                   default = nil)
  if valid_21626883 != nil:
    section.add "X-Amz-Signature", valid_21626883
  var valid_21626884 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626884 = validateParameter(valid_21626884, JString, required = false,
                                   default = nil)
  if valid_21626884 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626884
  var valid_21626885 = header.getOrDefault("X-Amz-Credential")
  valid_21626885 = validateParameter(valid_21626885, JString, required = false,
                                   default = nil)
  if valid_21626885 != nil:
    section.add "X-Amz-Credential", valid_21626885
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21626886 = formData.getOrDefault("StackSetName")
  valid_21626886 = validateParameter(valid_21626886, JString, required = true,
                                   default = nil)
  if valid_21626886 != nil:
    section.add "StackSetName", valid_21626886
  var valid_21626887 = formData.getOrDefault("OperationId")
  valid_21626887 = validateParameter(valid_21626887, JString, required = true,
                                   default = nil)
  if valid_21626887 != nil:
    section.add "OperationId", valid_21626887
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626888: Call_PostDescribeStackSetOperation_21626874;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_21626888.validator(path, query, header, formData, body, _)
  let scheme = call_21626888.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626888.makeUrl(scheme.get, call_21626888.host, call_21626888.base,
                               call_21626888.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626888, uri, valid, _)

proc call*(call_21626889: Call_PostDescribeStackSetOperation_21626874;
          StackSetName: string; OperationId: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   Version: string (required)
  var query_21626890 = newJObject()
  var formData_21626891 = newJObject()
  add(formData_21626891, "StackSetName", newJString(StackSetName))
  add(query_21626890, "Action", newJString(Action))
  add(formData_21626891, "OperationId", newJString(OperationId))
  add(query_21626890, "Version", newJString(Version))
  result = call_21626889.call(nil, query_21626890, nil, formData_21626891, nil)

var postDescribeStackSetOperation* = Call_PostDescribeStackSetOperation_21626874(
    name: "postDescribeStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_PostDescribeStackSetOperation_21626875, base: "/",
    makeUrl: url_PostDescribeStackSetOperation_21626876,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSetOperation_21626857 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStackSetOperation_21626859(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSetOperation_21626858(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626860 = query.getOrDefault("Action")
  valid_21626860 = validateParameter(valid_21626860, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_21626860 != nil:
    section.add "Action", valid_21626860
  var valid_21626861 = query.getOrDefault("StackSetName")
  valid_21626861 = validateParameter(valid_21626861, JString, required = true,
                                   default = nil)
  if valid_21626861 != nil:
    section.add "StackSetName", valid_21626861
  var valid_21626862 = query.getOrDefault("OperationId")
  valid_21626862 = validateParameter(valid_21626862, JString, required = true,
                                   default = nil)
  if valid_21626862 != nil:
    section.add "OperationId", valid_21626862
  var valid_21626863 = query.getOrDefault("Version")
  valid_21626863 = validateParameter(valid_21626863, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626863 != nil:
    section.add "Version", valid_21626863
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626864 = header.getOrDefault("X-Amz-Date")
  valid_21626864 = validateParameter(valid_21626864, JString, required = false,
                                   default = nil)
  if valid_21626864 != nil:
    section.add "X-Amz-Date", valid_21626864
  var valid_21626865 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626865 = validateParameter(valid_21626865, JString, required = false,
                                   default = nil)
  if valid_21626865 != nil:
    section.add "X-Amz-Security-Token", valid_21626865
  var valid_21626866 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626866 = validateParameter(valid_21626866, JString, required = false,
                                   default = nil)
  if valid_21626866 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626866
  var valid_21626867 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626867 = validateParameter(valid_21626867, JString, required = false,
                                   default = nil)
  if valid_21626867 != nil:
    section.add "X-Amz-Algorithm", valid_21626867
  var valid_21626868 = header.getOrDefault("X-Amz-Signature")
  valid_21626868 = validateParameter(valid_21626868, JString, required = false,
                                   default = nil)
  if valid_21626868 != nil:
    section.add "X-Amz-Signature", valid_21626868
  var valid_21626869 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626869 = validateParameter(valid_21626869, JString, required = false,
                                   default = nil)
  if valid_21626869 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626869
  var valid_21626870 = header.getOrDefault("X-Amz-Credential")
  valid_21626870 = validateParameter(valid_21626870, JString, required = false,
                                   default = nil)
  if valid_21626870 != nil:
    section.add "X-Amz-Credential", valid_21626870
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626871: Call_GetDescribeStackSetOperation_21626857;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_21626871.validator(path, query, header, formData, body, _)
  let scheme = call_21626871.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626871.makeUrl(scheme.get, call_21626871.host, call_21626871.base,
                               call_21626871.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626871, uri, valid, _)

proc call*(call_21626872: Call_GetDescribeStackSetOperation_21626857;
          StackSetName: string; OperationId: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   Version: string (required)
  var query_21626873 = newJObject()
  add(query_21626873, "Action", newJString(Action))
  add(query_21626873, "StackSetName", newJString(StackSetName))
  add(query_21626873, "OperationId", newJString(OperationId))
  add(query_21626873, "Version", newJString(Version))
  result = call_21626872.call(nil, query_21626873, nil, nil, nil)

var getDescribeStackSetOperation* = Call_GetDescribeStackSetOperation_21626857(
    name: "getDescribeStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_GetDescribeStackSetOperation_21626858, base: "/",
    makeUrl: url_GetDescribeStackSetOperation_21626859,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStacks_21626909 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeStacks_21626911(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStacks_21626910(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626912 = query.getOrDefault("Action")
  valid_21626912 = validateParameter(valid_21626912, JString, required = true,
                                   default = newJString("DescribeStacks"))
  if valid_21626912 != nil:
    section.add "Action", valid_21626912
  var valid_21626913 = query.getOrDefault("Version")
  valid_21626913 = validateParameter(valid_21626913, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626913 != nil:
    section.add "Version", valid_21626913
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626914 = header.getOrDefault("X-Amz-Date")
  valid_21626914 = validateParameter(valid_21626914, JString, required = false,
                                   default = nil)
  if valid_21626914 != nil:
    section.add "X-Amz-Date", valid_21626914
  var valid_21626915 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626915 = validateParameter(valid_21626915, JString, required = false,
                                   default = nil)
  if valid_21626915 != nil:
    section.add "X-Amz-Security-Token", valid_21626915
  var valid_21626916 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626916 = validateParameter(valid_21626916, JString, required = false,
                                   default = nil)
  if valid_21626916 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626916
  var valid_21626917 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626917 = validateParameter(valid_21626917, JString, required = false,
                                   default = nil)
  if valid_21626917 != nil:
    section.add "X-Amz-Algorithm", valid_21626917
  var valid_21626918 = header.getOrDefault("X-Amz-Signature")
  valid_21626918 = validateParameter(valid_21626918, JString, required = false,
                                   default = nil)
  if valid_21626918 != nil:
    section.add "X-Amz-Signature", valid_21626918
  var valid_21626919 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626919 = validateParameter(valid_21626919, JString, required = false,
                                   default = nil)
  if valid_21626919 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626919
  var valid_21626920 = header.getOrDefault("X-Amz-Credential")
  valid_21626920 = validateParameter(valid_21626920, JString, required = false,
                                   default = nil)
  if valid_21626920 != nil:
    section.add "X-Amz-Credential", valid_21626920
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21626921 = formData.getOrDefault("NextToken")
  valid_21626921 = validateParameter(valid_21626921, JString, required = false,
                                   default = nil)
  if valid_21626921 != nil:
    section.add "NextToken", valid_21626921
  var valid_21626922 = formData.getOrDefault("StackName")
  valid_21626922 = validateParameter(valid_21626922, JString, required = false,
                                   default = nil)
  if valid_21626922 != nil:
    section.add "StackName", valid_21626922
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626923: Call_PostDescribeStacks_21626909; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_21626923.validator(path, query, header, formData, body, _)
  let scheme = call_21626923.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626923.makeUrl(scheme.get, call_21626923.host, call_21626923.base,
                               call_21626923.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626923, uri, valid, _)

proc call*(call_21626924: Call_PostDescribeStacks_21626909; NextToken: string = "";
          Action: string = "DescribeStacks"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_21626925 = newJObject()
  var formData_21626926 = newJObject()
  add(formData_21626926, "NextToken", newJString(NextToken))
  add(query_21626925, "Action", newJString(Action))
  add(formData_21626926, "StackName", newJString(StackName))
  add(query_21626925, "Version", newJString(Version))
  result = call_21626924.call(nil, query_21626925, nil, formData_21626926, nil)

var postDescribeStacks* = Call_PostDescribeStacks_21626909(
    name: "postDescribeStacks", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStacks",
    validator: validate_PostDescribeStacks_21626910, base: "/",
    makeUrl: url_PostDescribeStacks_21626911, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStacks_21626892 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeStacks_21626894(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStacks_21626893(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21626895 = query.getOrDefault("NextToken")
  valid_21626895 = validateParameter(valid_21626895, JString, required = false,
                                   default = nil)
  if valid_21626895 != nil:
    section.add "NextToken", valid_21626895
  var valid_21626896 = query.getOrDefault("Action")
  valid_21626896 = validateParameter(valid_21626896, JString, required = true,
                                   default = newJString("DescribeStacks"))
  if valid_21626896 != nil:
    section.add "Action", valid_21626896
  var valid_21626897 = query.getOrDefault("Version")
  valid_21626897 = validateParameter(valid_21626897, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626897 != nil:
    section.add "Version", valid_21626897
  var valid_21626898 = query.getOrDefault("StackName")
  valid_21626898 = validateParameter(valid_21626898, JString, required = false,
                                   default = nil)
  if valid_21626898 != nil:
    section.add "StackName", valid_21626898
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626899 = header.getOrDefault("X-Amz-Date")
  valid_21626899 = validateParameter(valid_21626899, JString, required = false,
                                   default = nil)
  if valid_21626899 != nil:
    section.add "X-Amz-Date", valid_21626899
  var valid_21626900 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626900 = validateParameter(valid_21626900, JString, required = false,
                                   default = nil)
  if valid_21626900 != nil:
    section.add "X-Amz-Security-Token", valid_21626900
  var valid_21626901 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626901 = validateParameter(valid_21626901, JString, required = false,
                                   default = nil)
  if valid_21626901 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626901
  var valid_21626902 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626902 = validateParameter(valid_21626902, JString, required = false,
                                   default = nil)
  if valid_21626902 != nil:
    section.add "X-Amz-Algorithm", valid_21626902
  var valid_21626903 = header.getOrDefault("X-Amz-Signature")
  valid_21626903 = validateParameter(valid_21626903, JString, required = false,
                                   default = nil)
  if valid_21626903 != nil:
    section.add "X-Amz-Signature", valid_21626903
  var valid_21626904 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626904 = validateParameter(valid_21626904, JString, required = false,
                                   default = nil)
  if valid_21626904 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626904
  var valid_21626905 = header.getOrDefault("X-Amz-Credential")
  valid_21626905 = validateParameter(valid_21626905, JString, required = false,
                                   default = nil)
  if valid_21626905 != nil:
    section.add "X-Amz-Credential", valid_21626905
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626906: Call_GetDescribeStacks_21626892; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_21626906.validator(path, query, header, formData, body, _)
  let scheme = call_21626906.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626906.makeUrl(scheme.get, call_21626906.host, call_21626906.base,
                               call_21626906.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626906, uri, valid, _)

proc call*(call_21626907: Call_GetDescribeStacks_21626892; NextToken: string = "";
          Action: string = "DescribeStacks"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_21626908 = newJObject()
  add(query_21626908, "NextToken", newJString(NextToken))
  add(query_21626908, "Action", newJString(Action))
  add(query_21626908, "Version", newJString(Version))
  add(query_21626908, "StackName", newJString(StackName))
  result = call_21626907.call(nil, query_21626908, nil, nil, nil)

var getDescribeStacks* = Call_GetDescribeStacks_21626892(name: "getDescribeStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStacks", validator: validate_GetDescribeStacks_21626893,
    base: "/", makeUrl: url_GetDescribeStacks_21626894,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeType_21626946 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeType_21626948(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeType_21626947(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626949 = query.getOrDefault("Action")
  valid_21626949 = validateParameter(valid_21626949, JString, required = true,
                                   default = newJString("DescribeType"))
  if valid_21626949 != nil:
    section.add "Action", valid_21626949
  var valid_21626950 = query.getOrDefault("Version")
  valid_21626950 = validateParameter(valid_21626950, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626950 != nil:
    section.add "Version", valid_21626950
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626951 = header.getOrDefault("X-Amz-Date")
  valid_21626951 = validateParameter(valid_21626951, JString, required = false,
                                   default = nil)
  if valid_21626951 != nil:
    section.add "X-Amz-Date", valid_21626951
  var valid_21626952 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626952 = validateParameter(valid_21626952, JString, required = false,
                                   default = nil)
  if valid_21626952 != nil:
    section.add "X-Amz-Security-Token", valid_21626952
  var valid_21626953 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626953 = validateParameter(valid_21626953, JString, required = false,
                                   default = nil)
  if valid_21626953 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626953
  var valid_21626954 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626954 = validateParameter(valid_21626954, JString, required = false,
                                   default = nil)
  if valid_21626954 != nil:
    section.add "X-Amz-Algorithm", valid_21626954
  var valid_21626955 = header.getOrDefault("X-Amz-Signature")
  valid_21626955 = validateParameter(valid_21626955, JString, required = false,
                                   default = nil)
  if valid_21626955 != nil:
    section.add "X-Amz-Signature", valid_21626955
  var valid_21626956 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626956 = validateParameter(valid_21626956, JString, required = false,
                                   default = nil)
  if valid_21626956 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626956
  var valid_21626957 = header.getOrDefault("X-Amz-Credential")
  valid_21626957 = validateParameter(valid_21626957, JString, required = false,
                                   default = nil)
  if valid_21626957 != nil:
    section.add "X-Amz-Credential", valid_21626957
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  section = newJObject()
  var valid_21626958 = formData.getOrDefault("Arn")
  valid_21626958 = validateParameter(valid_21626958, JString, required = false,
                                   default = nil)
  if valid_21626958 != nil:
    section.add "Arn", valid_21626958
  var valid_21626959 = formData.getOrDefault("Type")
  valid_21626959 = validateParameter(valid_21626959, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21626959 != nil:
    section.add "Type", valid_21626959
  var valid_21626960 = formData.getOrDefault("TypeName")
  valid_21626960 = validateParameter(valid_21626960, JString, required = false,
                                   default = nil)
  if valid_21626960 != nil:
    section.add "TypeName", valid_21626960
  var valid_21626961 = formData.getOrDefault("VersionId")
  valid_21626961 = validateParameter(valid_21626961, JString, required = false,
                                   default = nil)
  if valid_21626961 != nil:
    section.add "VersionId", valid_21626961
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626962: Call_PostDescribeType_21626946; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  let valid = call_21626962.validator(path, query, header, formData, body, _)
  let scheme = call_21626962.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626962.makeUrl(scheme.get, call_21626962.host, call_21626962.base,
                               call_21626962.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626962, uri, valid, _)

proc call*(call_21626963: Call_PostDescribeType_21626946; Arn: string = "";
          Type: string = "RESOURCE"; Action: string = "DescribeType";
          TypeName: string = ""; Version: string = "2010-05-15"; VersionId: string = ""): Recallable =
  ## postDescribeType
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  ##   VersionId: string
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  var query_21626964 = newJObject()
  var formData_21626965 = newJObject()
  add(formData_21626965, "Arn", newJString(Arn))
  add(formData_21626965, "Type", newJString(Type))
  add(query_21626964, "Action", newJString(Action))
  add(formData_21626965, "TypeName", newJString(TypeName))
  add(query_21626964, "Version", newJString(Version))
  add(formData_21626965, "VersionId", newJString(VersionId))
  result = call_21626963.call(nil, query_21626964, nil, formData_21626965, nil)

var postDescribeType* = Call_PostDescribeType_21626946(name: "postDescribeType",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeType", validator: validate_PostDescribeType_21626947,
    base: "/", makeUrl: url_PostDescribeType_21626948,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeType_21626927 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeType_21626929(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeType_21626928(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Type: JString
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626930 = query.getOrDefault("TypeName")
  valid_21626930 = validateParameter(valid_21626930, JString, required = false,
                                   default = nil)
  if valid_21626930 != nil:
    section.add "TypeName", valid_21626930
  var valid_21626931 = query.getOrDefault("VersionId")
  valid_21626931 = validateParameter(valid_21626931, JString, required = false,
                                   default = nil)
  if valid_21626931 != nil:
    section.add "VersionId", valid_21626931
  var valid_21626932 = query.getOrDefault("Type")
  valid_21626932 = validateParameter(valid_21626932, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21626932 != nil:
    section.add "Type", valid_21626932
  var valid_21626933 = query.getOrDefault("Action")
  valid_21626933 = validateParameter(valid_21626933, JString, required = true,
                                   default = newJString("DescribeType"))
  if valid_21626933 != nil:
    section.add "Action", valid_21626933
  var valid_21626934 = query.getOrDefault("Arn")
  valid_21626934 = validateParameter(valid_21626934, JString, required = false,
                                   default = nil)
  if valid_21626934 != nil:
    section.add "Arn", valid_21626934
  var valid_21626935 = query.getOrDefault("Version")
  valid_21626935 = validateParameter(valid_21626935, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626935 != nil:
    section.add "Version", valid_21626935
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626936 = header.getOrDefault("X-Amz-Date")
  valid_21626936 = validateParameter(valid_21626936, JString, required = false,
                                   default = nil)
  if valid_21626936 != nil:
    section.add "X-Amz-Date", valid_21626936
  var valid_21626937 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626937 = validateParameter(valid_21626937, JString, required = false,
                                   default = nil)
  if valid_21626937 != nil:
    section.add "X-Amz-Security-Token", valid_21626937
  var valid_21626938 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626938 = validateParameter(valid_21626938, JString, required = false,
                                   default = nil)
  if valid_21626938 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626938
  var valid_21626939 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626939 = validateParameter(valid_21626939, JString, required = false,
                                   default = nil)
  if valid_21626939 != nil:
    section.add "X-Amz-Algorithm", valid_21626939
  var valid_21626940 = header.getOrDefault("X-Amz-Signature")
  valid_21626940 = validateParameter(valid_21626940, JString, required = false,
                                   default = nil)
  if valid_21626940 != nil:
    section.add "X-Amz-Signature", valid_21626940
  var valid_21626941 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626941 = validateParameter(valid_21626941, JString, required = false,
                                   default = nil)
  if valid_21626941 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626941
  var valid_21626942 = header.getOrDefault("X-Amz-Credential")
  valid_21626942 = validateParameter(valid_21626942, JString, required = false,
                                   default = nil)
  if valid_21626942 != nil:
    section.add "X-Amz-Credential", valid_21626942
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626943: Call_GetDescribeType_21626927; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  let valid = call_21626943.validator(path, query, header, formData, body, _)
  let scheme = call_21626943.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626943.makeUrl(scheme.get, call_21626943.host, call_21626943.base,
                               call_21626943.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626943, uri, valid, _)

proc call*(call_21626944: Call_GetDescribeType_21626927; TypeName: string = "";
          VersionId: string = ""; Type: string = "RESOURCE";
          Action: string = "DescribeType"; Arn: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeType
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Type: string
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  var query_21626945 = newJObject()
  add(query_21626945, "TypeName", newJString(TypeName))
  add(query_21626945, "VersionId", newJString(VersionId))
  add(query_21626945, "Type", newJString(Type))
  add(query_21626945, "Action", newJString(Action))
  add(query_21626945, "Arn", newJString(Arn))
  add(query_21626945, "Version", newJString(Version))
  result = call_21626944.call(nil, query_21626945, nil, nil, nil)

var getDescribeType* = Call_GetDescribeType_21626927(name: "getDescribeType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeType", validator: validate_GetDescribeType_21626928,
    base: "/", makeUrl: url_GetDescribeType_21626929,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeTypeRegistration_21626982 = ref object of OpenApiRestCall_21625435
proc url_PostDescribeTypeRegistration_21626984(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeTypeRegistration_21626983(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21626985 = query.getOrDefault("Action")
  valid_21626985 = validateParameter(valid_21626985, JString, required = true, default = newJString(
      "DescribeTypeRegistration"))
  if valid_21626985 != nil:
    section.add "Action", valid_21626985
  var valid_21626986 = query.getOrDefault("Version")
  valid_21626986 = validateParameter(valid_21626986, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626986 != nil:
    section.add "Version", valid_21626986
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626987 = header.getOrDefault("X-Amz-Date")
  valid_21626987 = validateParameter(valid_21626987, JString, required = false,
                                   default = nil)
  if valid_21626987 != nil:
    section.add "X-Amz-Date", valid_21626987
  var valid_21626988 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626988 = validateParameter(valid_21626988, JString, required = false,
                                   default = nil)
  if valid_21626988 != nil:
    section.add "X-Amz-Security-Token", valid_21626988
  var valid_21626989 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626989 = validateParameter(valid_21626989, JString, required = false,
                                   default = nil)
  if valid_21626989 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626989
  var valid_21626990 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626990 = validateParameter(valid_21626990, JString, required = false,
                                   default = nil)
  if valid_21626990 != nil:
    section.add "X-Amz-Algorithm", valid_21626990
  var valid_21626991 = header.getOrDefault("X-Amz-Signature")
  valid_21626991 = validateParameter(valid_21626991, JString, required = false,
                                   default = nil)
  if valid_21626991 != nil:
    section.add "X-Amz-Signature", valid_21626991
  var valid_21626992 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626992 = validateParameter(valid_21626992, JString, required = false,
                                   default = nil)
  if valid_21626992 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626992
  var valid_21626993 = header.getOrDefault("X-Amz-Credential")
  valid_21626993 = validateParameter(valid_21626993, JString, required = false,
                                   default = nil)
  if valid_21626993 != nil:
    section.add "X-Amz-Credential", valid_21626993
  result.add "header", section
  ## parameters in `formData` object:
  ##   RegistrationToken: JString (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `RegistrationToken` field"
  var valid_21626994 = formData.getOrDefault("RegistrationToken")
  valid_21626994 = validateParameter(valid_21626994, JString, required = true,
                                   default = nil)
  if valid_21626994 != nil:
    section.add "RegistrationToken", valid_21626994
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626995: Call_PostDescribeTypeRegistration_21626982;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  let valid = call_21626995.validator(path, query, header, formData, body, _)
  let scheme = call_21626995.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626995.makeUrl(scheme.get, call_21626995.host, call_21626995.base,
                               call_21626995.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626995, uri, valid, _)

proc call*(call_21626996: Call_PostDescribeTypeRegistration_21626982;
          RegistrationToken: string; Action: string = "DescribeTypeRegistration";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeTypeRegistration
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ##   Action: string (required)
  ##   RegistrationToken: string (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Version: string (required)
  var query_21626997 = newJObject()
  var formData_21626998 = newJObject()
  add(query_21626997, "Action", newJString(Action))
  add(formData_21626998, "RegistrationToken", newJString(RegistrationToken))
  add(query_21626997, "Version", newJString(Version))
  result = call_21626996.call(nil, query_21626997, nil, formData_21626998, nil)

var postDescribeTypeRegistration* = Call_PostDescribeTypeRegistration_21626982(
    name: "postDescribeTypeRegistration", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeTypeRegistration",
    validator: validate_PostDescribeTypeRegistration_21626983, base: "/",
    makeUrl: url_PostDescribeTypeRegistration_21626984,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeTypeRegistration_21626966 = ref object of OpenApiRestCall_21625435
proc url_GetDescribeTypeRegistration_21626968(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeTypeRegistration_21626967(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   RegistrationToken: JString (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `RegistrationToken` field"
  var valid_21626969 = query.getOrDefault("RegistrationToken")
  valid_21626969 = validateParameter(valid_21626969, JString, required = true,
                                   default = nil)
  if valid_21626969 != nil:
    section.add "RegistrationToken", valid_21626969
  var valid_21626970 = query.getOrDefault("Action")
  valid_21626970 = validateParameter(valid_21626970, JString, required = true, default = newJString(
      "DescribeTypeRegistration"))
  if valid_21626970 != nil:
    section.add "Action", valid_21626970
  var valid_21626971 = query.getOrDefault("Version")
  valid_21626971 = validateParameter(valid_21626971, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21626971 != nil:
    section.add "Version", valid_21626971
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21626972 = header.getOrDefault("X-Amz-Date")
  valid_21626972 = validateParameter(valid_21626972, JString, required = false,
                                   default = nil)
  if valid_21626972 != nil:
    section.add "X-Amz-Date", valid_21626972
  var valid_21626973 = header.getOrDefault("X-Amz-Security-Token")
  valid_21626973 = validateParameter(valid_21626973, JString, required = false,
                                   default = nil)
  if valid_21626973 != nil:
    section.add "X-Amz-Security-Token", valid_21626973
  var valid_21626974 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21626974 = validateParameter(valid_21626974, JString, required = false,
                                   default = nil)
  if valid_21626974 != nil:
    section.add "X-Amz-Content-Sha256", valid_21626974
  var valid_21626975 = header.getOrDefault("X-Amz-Algorithm")
  valid_21626975 = validateParameter(valid_21626975, JString, required = false,
                                   default = nil)
  if valid_21626975 != nil:
    section.add "X-Amz-Algorithm", valid_21626975
  var valid_21626976 = header.getOrDefault("X-Amz-Signature")
  valid_21626976 = validateParameter(valid_21626976, JString, required = false,
                                   default = nil)
  if valid_21626976 != nil:
    section.add "X-Amz-Signature", valid_21626976
  var valid_21626977 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21626977 = validateParameter(valid_21626977, JString, required = false,
                                   default = nil)
  if valid_21626977 != nil:
    section.add "X-Amz-SignedHeaders", valid_21626977
  var valid_21626978 = header.getOrDefault("X-Amz-Credential")
  valid_21626978 = validateParameter(valid_21626978, JString, required = false,
                                   default = nil)
  if valid_21626978 != nil:
    section.add "X-Amz-Credential", valid_21626978
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21626979: Call_GetDescribeTypeRegistration_21626966;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  let valid = call_21626979.validator(path, query, header, formData, body, _)
  let scheme = call_21626979.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21626979.makeUrl(scheme.get, call_21626979.host, call_21626979.base,
                               call_21626979.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21626979, uri, valid, _)

proc call*(call_21626980: Call_GetDescribeTypeRegistration_21626966;
          RegistrationToken: string; Action: string = "DescribeTypeRegistration";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeTypeRegistration
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ##   RegistrationToken: string (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21626981 = newJObject()
  add(query_21626981, "RegistrationToken", newJString(RegistrationToken))
  add(query_21626981, "Action", newJString(Action))
  add(query_21626981, "Version", newJString(Version))
  result = call_21626980.call(nil, query_21626981, nil, nil, nil)

var getDescribeTypeRegistration* = Call_GetDescribeTypeRegistration_21626966(
    name: "getDescribeTypeRegistration", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeTypeRegistration",
    validator: validate_GetDescribeTypeRegistration_21626967, base: "/",
    makeUrl: url_GetDescribeTypeRegistration_21626968,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackDrift_21627016 = ref object of OpenApiRestCall_21625435
proc url_PostDetectStackDrift_21627018(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackDrift_21627017(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627019 = query.getOrDefault("Action")
  valid_21627019 = validateParameter(valid_21627019, JString, required = true,
                                   default = newJString("DetectStackDrift"))
  if valid_21627019 != nil:
    section.add "Action", valid_21627019
  var valid_21627020 = query.getOrDefault("Version")
  valid_21627020 = validateParameter(valid_21627020, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627020 != nil:
    section.add "Version", valid_21627020
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627021 = header.getOrDefault("X-Amz-Date")
  valid_21627021 = validateParameter(valid_21627021, JString, required = false,
                                   default = nil)
  if valid_21627021 != nil:
    section.add "X-Amz-Date", valid_21627021
  var valid_21627022 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627022 = validateParameter(valid_21627022, JString, required = false,
                                   default = nil)
  if valid_21627022 != nil:
    section.add "X-Amz-Security-Token", valid_21627022
  var valid_21627023 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627023 = validateParameter(valid_21627023, JString, required = false,
                                   default = nil)
  if valid_21627023 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627023
  var valid_21627024 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627024 = validateParameter(valid_21627024, JString, required = false,
                                   default = nil)
  if valid_21627024 != nil:
    section.add "X-Amz-Algorithm", valid_21627024
  var valid_21627025 = header.getOrDefault("X-Amz-Signature")
  valid_21627025 = validateParameter(valid_21627025, JString, required = false,
                                   default = nil)
  if valid_21627025 != nil:
    section.add "X-Amz-Signature", valid_21627025
  var valid_21627026 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627026 = validateParameter(valid_21627026, JString, required = false,
                                   default = nil)
  if valid_21627026 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627026
  var valid_21627027 = header.getOrDefault("X-Amz-Credential")
  valid_21627027 = validateParameter(valid_21627027, JString, required = false,
                                   default = nil)
  if valid_21627027 != nil:
    section.add "X-Amz-Credential", valid_21627027
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  section = newJObject()
  var valid_21627028 = formData.getOrDefault("LogicalResourceIds")
  valid_21627028 = validateParameter(valid_21627028, JArray, required = false,
                                   default = nil)
  if valid_21627028 != nil:
    section.add "LogicalResourceIds", valid_21627028
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21627029 = formData.getOrDefault("StackName")
  valid_21627029 = validateParameter(valid_21627029, JString, required = true,
                                   default = nil)
  if valid_21627029 != nil:
    section.add "StackName", valid_21627029
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627030: Call_PostDetectStackDrift_21627016; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_21627030.validator(path, query, header, formData, body, _)
  let scheme = call_21627030.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627030.makeUrl(scheme.get, call_21627030.host, call_21627030.base,
                               call_21627030.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627030, uri, valid, _)

proc call*(call_21627031: Call_PostDetectStackDrift_21627016; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Version: string (required)
  var query_21627032 = newJObject()
  var formData_21627033 = newJObject()
  if LogicalResourceIds != nil:
    formData_21627033.add "LogicalResourceIds", LogicalResourceIds
  add(query_21627032, "Action", newJString(Action))
  add(formData_21627033, "StackName", newJString(StackName))
  add(query_21627032, "Version", newJString(Version))
  result = call_21627031.call(nil, query_21627032, nil, formData_21627033, nil)

var postDetectStackDrift* = Call_PostDetectStackDrift_21627016(
    name: "postDetectStackDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_PostDetectStackDrift_21627017, base: "/",
    makeUrl: url_PostDetectStackDrift_21627018,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackDrift_21626999 = ref object of OpenApiRestCall_21625435
proc url_GetDetectStackDrift_21627001(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackDrift_21627000(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  section = newJObject()
  var valid_21627002 = query.getOrDefault("LogicalResourceIds")
  valid_21627002 = validateParameter(valid_21627002, JArray, required = false,
                                   default = nil)
  if valid_21627002 != nil:
    section.add "LogicalResourceIds", valid_21627002
  var valid_21627003 = query.getOrDefault("Action")
  valid_21627003 = validateParameter(valid_21627003, JString, required = true,
                                   default = newJString("DetectStackDrift"))
  if valid_21627003 != nil:
    section.add "Action", valid_21627003
  var valid_21627004 = query.getOrDefault("Version")
  valid_21627004 = validateParameter(valid_21627004, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627004 != nil:
    section.add "Version", valid_21627004
  var valid_21627005 = query.getOrDefault("StackName")
  valid_21627005 = validateParameter(valid_21627005, JString, required = true,
                                   default = nil)
  if valid_21627005 != nil:
    section.add "StackName", valid_21627005
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627006 = header.getOrDefault("X-Amz-Date")
  valid_21627006 = validateParameter(valid_21627006, JString, required = false,
                                   default = nil)
  if valid_21627006 != nil:
    section.add "X-Amz-Date", valid_21627006
  var valid_21627007 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627007 = validateParameter(valid_21627007, JString, required = false,
                                   default = nil)
  if valid_21627007 != nil:
    section.add "X-Amz-Security-Token", valid_21627007
  var valid_21627008 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627008 = validateParameter(valid_21627008, JString, required = false,
                                   default = nil)
  if valid_21627008 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627008
  var valid_21627009 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627009 = validateParameter(valid_21627009, JString, required = false,
                                   default = nil)
  if valid_21627009 != nil:
    section.add "X-Amz-Algorithm", valid_21627009
  var valid_21627010 = header.getOrDefault("X-Amz-Signature")
  valid_21627010 = validateParameter(valid_21627010, JString, required = false,
                                   default = nil)
  if valid_21627010 != nil:
    section.add "X-Amz-Signature", valid_21627010
  var valid_21627011 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627011 = validateParameter(valid_21627011, JString, required = false,
                                   default = nil)
  if valid_21627011 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627011
  var valid_21627012 = header.getOrDefault("X-Amz-Credential")
  valid_21627012 = validateParameter(valid_21627012, JString, required = false,
                                   default = nil)
  if valid_21627012 != nil:
    section.add "X-Amz-Credential", valid_21627012
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627013: Call_GetDetectStackDrift_21626999; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_21627013.validator(path, query, header, formData, body, _)
  let scheme = call_21627013.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627013.makeUrl(scheme.get, call_21627013.host, call_21627013.base,
                               call_21627013.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627013, uri, valid, _)

proc call*(call_21627014: Call_GetDetectStackDrift_21626999; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  var query_21627015 = newJObject()
  if LogicalResourceIds != nil:
    query_21627015.add "LogicalResourceIds", LogicalResourceIds
  add(query_21627015, "Action", newJString(Action))
  add(query_21627015, "Version", newJString(Version))
  add(query_21627015, "StackName", newJString(StackName))
  result = call_21627014.call(nil, query_21627015, nil, nil, nil)

var getDetectStackDrift* = Call_GetDetectStackDrift_21626999(
    name: "getDetectStackDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_GetDetectStackDrift_21627000, base: "/",
    makeUrl: url_GetDetectStackDrift_21627001,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackResourceDrift_21627051 = ref object of OpenApiRestCall_21625435
proc url_PostDetectStackResourceDrift_21627053(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackResourceDrift_21627052(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627054 = query.getOrDefault("Action")
  valid_21627054 = validateParameter(valid_21627054, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_21627054 != nil:
    section.add "Action", valid_21627054
  var valid_21627055 = query.getOrDefault("Version")
  valid_21627055 = validateParameter(valid_21627055, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627055 != nil:
    section.add "Version", valid_21627055
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627056 = header.getOrDefault("X-Amz-Date")
  valid_21627056 = validateParameter(valid_21627056, JString, required = false,
                                   default = nil)
  if valid_21627056 != nil:
    section.add "X-Amz-Date", valid_21627056
  var valid_21627057 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627057 = validateParameter(valid_21627057, JString, required = false,
                                   default = nil)
  if valid_21627057 != nil:
    section.add "X-Amz-Security-Token", valid_21627057
  var valid_21627058 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627058 = validateParameter(valid_21627058, JString, required = false,
                                   default = nil)
  if valid_21627058 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627058
  var valid_21627059 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627059 = validateParameter(valid_21627059, JString, required = false,
                                   default = nil)
  if valid_21627059 != nil:
    section.add "X-Amz-Algorithm", valid_21627059
  var valid_21627060 = header.getOrDefault("X-Amz-Signature")
  valid_21627060 = validateParameter(valid_21627060, JString, required = false,
                                   default = nil)
  if valid_21627060 != nil:
    section.add "X-Amz-Signature", valid_21627060
  var valid_21627061 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627061 = validateParameter(valid_21627061, JString, required = false,
                                   default = nil)
  if valid_21627061 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627061
  var valid_21627062 = header.getOrDefault("X-Amz-Credential")
  valid_21627062 = validateParameter(valid_21627062, JString, required = false,
                                   default = nil)
  if valid_21627062 != nil:
    section.add "X-Amz-Credential", valid_21627062
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `LogicalResourceId` field"
  var valid_21627063 = formData.getOrDefault("LogicalResourceId")
  valid_21627063 = validateParameter(valid_21627063, JString, required = true,
                                   default = nil)
  if valid_21627063 != nil:
    section.add "LogicalResourceId", valid_21627063
  var valid_21627064 = formData.getOrDefault("StackName")
  valid_21627064 = validateParameter(valid_21627064, JString, required = true,
                                   default = nil)
  if valid_21627064 != nil:
    section.add "StackName", valid_21627064
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627065: Call_PostDetectStackResourceDrift_21627051;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_21627065.validator(path, query, header, formData, body, _)
  let scheme = call_21627065.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627065.makeUrl(scheme.get, call_21627065.host, call_21627065.base,
                               call_21627065.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627065, uri, valid, _)

proc call*(call_21627066: Call_PostDetectStackResourceDrift_21627051;
          LogicalResourceId: string; StackName: string;
          Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Version: string (required)
  var query_21627067 = newJObject()
  var formData_21627068 = newJObject()
  add(formData_21627068, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_21627067, "Action", newJString(Action))
  add(formData_21627068, "StackName", newJString(StackName))
  add(query_21627067, "Version", newJString(Version))
  result = call_21627066.call(nil, query_21627067, nil, formData_21627068, nil)

var postDetectStackResourceDrift* = Call_PostDetectStackResourceDrift_21627051(
    name: "postDetectStackResourceDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_PostDetectStackResourceDrift_21627052, base: "/",
    makeUrl: url_PostDetectStackResourceDrift_21627053,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackResourceDrift_21627034 = ref object of OpenApiRestCall_21625435
proc url_GetDetectStackResourceDrift_21627036(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackResourceDrift_21627035(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `LogicalResourceId` field"
  var valid_21627037 = query.getOrDefault("LogicalResourceId")
  valid_21627037 = validateParameter(valid_21627037, JString, required = true,
                                   default = nil)
  if valid_21627037 != nil:
    section.add "LogicalResourceId", valid_21627037
  var valid_21627038 = query.getOrDefault("Action")
  valid_21627038 = validateParameter(valid_21627038, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_21627038 != nil:
    section.add "Action", valid_21627038
  var valid_21627039 = query.getOrDefault("Version")
  valid_21627039 = validateParameter(valid_21627039, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627039 != nil:
    section.add "Version", valid_21627039
  var valid_21627040 = query.getOrDefault("StackName")
  valid_21627040 = validateParameter(valid_21627040, JString, required = true,
                                   default = nil)
  if valid_21627040 != nil:
    section.add "StackName", valid_21627040
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627041 = header.getOrDefault("X-Amz-Date")
  valid_21627041 = validateParameter(valid_21627041, JString, required = false,
                                   default = nil)
  if valid_21627041 != nil:
    section.add "X-Amz-Date", valid_21627041
  var valid_21627042 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627042 = validateParameter(valid_21627042, JString, required = false,
                                   default = nil)
  if valid_21627042 != nil:
    section.add "X-Amz-Security-Token", valid_21627042
  var valid_21627043 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627043 = validateParameter(valid_21627043, JString, required = false,
                                   default = nil)
  if valid_21627043 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627043
  var valid_21627044 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627044 = validateParameter(valid_21627044, JString, required = false,
                                   default = nil)
  if valid_21627044 != nil:
    section.add "X-Amz-Algorithm", valid_21627044
  var valid_21627045 = header.getOrDefault("X-Amz-Signature")
  valid_21627045 = validateParameter(valid_21627045, JString, required = false,
                                   default = nil)
  if valid_21627045 != nil:
    section.add "X-Amz-Signature", valid_21627045
  var valid_21627046 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627046 = validateParameter(valid_21627046, JString, required = false,
                                   default = nil)
  if valid_21627046 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627046
  var valid_21627047 = header.getOrDefault("X-Amz-Credential")
  valid_21627047 = validateParameter(valid_21627047, JString, required = false,
                                   default = nil)
  if valid_21627047 != nil:
    section.add "X-Amz-Credential", valid_21627047
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627048: Call_GetDetectStackResourceDrift_21627034;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_21627048.validator(path, query, header, formData, body, _)
  let scheme = call_21627048.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627048.makeUrl(scheme.get, call_21627048.host, call_21627048.base,
                               call_21627048.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627048, uri, valid, _)

proc call*(call_21627049: Call_GetDetectStackResourceDrift_21627034;
          LogicalResourceId: string; StackName: string;
          Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  var query_21627050 = newJObject()
  add(query_21627050, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_21627050, "Action", newJString(Action))
  add(query_21627050, "Version", newJString(Version))
  add(query_21627050, "StackName", newJString(StackName))
  result = call_21627049.call(nil, query_21627050, nil, nil, nil)

var getDetectStackResourceDrift* = Call_GetDetectStackResourceDrift_21627034(
    name: "getDetectStackResourceDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_GetDetectStackResourceDrift_21627035, base: "/",
    makeUrl: url_GetDetectStackResourceDrift_21627036,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackSetDrift_21627091 = ref object of OpenApiRestCall_21625435
proc url_PostDetectStackSetDrift_21627093(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackSetDrift_21627092(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627094 = query.getOrDefault("Action")
  valid_21627094 = validateParameter(valid_21627094, JString, required = true,
                                   default = newJString("DetectStackSetDrift"))
  if valid_21627094 != nil:
    section.add "Action", valid_21627094
  var valid_21627095 = query.getOrDefault("Version")
  valid_21627095 = validateParameter(valid_21627095, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627095 != nil:
    section.add "Version", valid_21627095
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627096 = header.getOrDefault("X-Amz-Date")
  valid_21627096 = validateParameter(valid_21627096, JString, required = false,
                                   default = nil)
  if valid_21627096 != nil:
    section.add "X-Amz-Date", valid_21627096
  var valid_21627097 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627097 = validateParameter(valid_21627097, JString, required = false,
                                   default = nil)
  if valid_21627097 != nil:
    section.add "X-Amz-Security-Token", valid_21627097
  var valid_21627098 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627098 = validateParameter(valid_21627098, JString, required = false,
                                   default = nil)
  if valid_21627098 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627098
  var valid_21627099 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627099 = validateParameter(valid_21627099, JString, required = false,
                                   default = nil)
  if valid_21627099 != nil:
    section.add "X-Amz-Algorithm", valid_21627099
  var valid_21627100 = header.getOrDefault("X-Amz-Signature")
  valid_21627100 = validateParameter(valid_21627100, JString, required = false,
                                   default = nil)
  if valid_21627100 != nil:
    section.add "X-Amz-Signature", valid_21627100
  var valid_21627101 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627101 = validateParameter(valid_21627101, JString, required = false,
                                   default = nil)
  if valid_21627101 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627101
  var valid_21627102 = header.getOrDefault("X-Amz-Credential")
  valid_21627102 = validateParameter(valid_21627102, JString, required = false,
                                   default = nil)
  if valid_21627102 != nil:
    section.add "X-Amz-Credential", valid_21627102
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: JString
  ##              :  <i>The ID of the stack set operation.</i> 
  section = newJObject()
  var valid_21627103 = formData.getOrDefault(
      "OperationPreferences.FailureTolerancePercentage")
  valid_21627103 = validateParameter(valid_21627103, JString, required = false,
                                   default = nil)
  if valid_21627103 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21627103
  var valid_21627104 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentCount")
  valid_21627104 = validateParameter(valid_21627104, JString, required = false,
                                   default = nil)
  if valid_21627104 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21627104
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21627105 = formData.getOrDefault("StackSetName")
  valid_21627105 = validateParameter(valid_21627105, JString, required = true,
                                   default = nil)
  if valid_21627105 != nil:
    section.add "StackSetName", valid_21627105
  var valid_21627106 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_21627106 = validateParameter(valid_21627106, JArray, required = false,
                                   default = nil)
  if valid_21627106 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21627106
  var valid_21627107 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentPercentage")
  valid_21627107 = validateParameter(valid_21627107, JString, required = false,
                                   default = nil)
  if valid_21627107 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21627107
  var valid_21627108 = formData.getOrDefault(
      "OperationPreferences.FailureToleranceCount")
  valid_21627108 = validateParameter(valid_21627108, JString, required = false,
                                   default = nil)
  if valid_21627108 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21627108
  var valid_21627109 = formData.getOrDefault("OperationId")
  valid_21627109 = validateParameter(valid_21627109, JString, required = false,
                                   default = nil)
  if valid_21627109 != nil:
    section.add "OperationId", valid_21627109
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627110: Call_PostDetectStackSetDrift_21627091;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  let valid = call_21627110.validator(path, query, header, formData, body, _)
  let scheme = call_21627110.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627110.makeUrl(scheme.get, call_21627110.host, call_21627110.base,
                               call_21627110.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627110, uri, valid, _)

proc call*(call_21627111: Call_PostDetectStackSetDrift_21627091;
          StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "DetectStackSetDrift";
          OperationPreferencesFailureToleranceCount: string = "";
          OperationId: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postDetectStackSetDrift
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: string
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   Version: string (required)
  var query_21627112 = newJObject()
  var formData_21627113 = newJObject()
  add(formData_21627113, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_21627113, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_21627113, "StackSetName", newJString(StackSetName))
  if OperationPreferencesRegionOrder != nil:
    formData_21627113.add "OperationPreferences.RegionOrder",
                         OperationPreferencesRegionOrder
  add(formData_21627113, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21627112, "Action", newJString(Action))
  add(formData_21627113, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(formData_21627113, "OperationId", newJString(OperationId))
  add(query_21627112, "Version", newJString(Version))
  result = call_21627111.call(nil, query_21627112, nil, formData_21627113, nil)

var postDetectStackSetDrift* = Call_PostDetectStackSetDrift_21627091(
    name: "postDetectStackSetDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackSetDrift",
    validator: validate_PostDetectStackSetDrift_21627092, base: "/",
    makeUrl: url_PostDetectStackSetDrift_21627093,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackSetDrift_21627069 = ref object of OpenApiRestCall_21625435
proc url_GetDetectStackSetDrift_21627071(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackSetDrift_21627070(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationId: JString
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627072 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_21627072 = validateParameter(valid_21627072, JString, required = false,
                                   default = nil)
  if valid_21627072 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21627072
  var valid_21627073 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_21627073 = validateParameter(valid_21627073, JString, required = false,
                                   default = nil)
  if valid_21627073 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21627073
  var valid_21627074 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_21627074 = validateParameter(valid_21627074, JArray, required = false,
                                   default = nil)
  if valid_21627074 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21627074
  var valid_21627075 = query.getOrDefault("Action")
  valid_21627075 = validateParameter(valid_21627075, JString, required = true,
                                   default = newJString("DetectStackSetDrift"))
  if valid_21627075 != nil:
    section.add "Action", valid_21627075
  var valid_21627076 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_21627076 = validateParameter(valid_21627076, JString, required = false,
                                   default = nil)
  if valid_21627076 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21627076
  var valid_21627077 = query.getOrDefault("StackSetName")
  valid_21627077 = validateParameter(valid_21627077, JString, required = true,
                                   default = nil)
  if valid_21627077 != nil:
    section.add "StackSetName", valid_21627077
  var valid_21627078 = query.getOrDefault("OperationId")
  valid_21627078 = validateParameter(valid_21627078, JString, required = false,
                                   default = nil)
  if valid_21627078 != nil:
    section.add "OperationId", valid_21627078
  var valid_21627079 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_21627079 = validateParameter(valid_21627079, JString, required = false,
                                   default = nil)
  if valid_21627079 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21627079
  var valid_21627080 = query.getOrDefault("Version")
  valid_21627080 = validateParameter(valid_21627080, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627080 != nil:
    section.add "Version", valid_21627080
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627081 = header.getOrDefault("X-Amz-Date")
  valid_21627081 = validateParameter(valid_21627081, JString, required = false,
                                   default = nil)
  if valid_21627081 != nil:
    section.add "X-Amz-Date", valid_21627081
  var valid_21627082 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627082 = validateParameter(valid_21627082, JString, required = false,
                                   default = nil)
  if valid_21627082 != nil:
    section.add "X-Amz-Security-Token", valid_21627082
  var valid_21627083 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627083 = validateParameter(valid_21627083, JString, required = false,
                                   default = nil)
  if valid_21627083 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627083
  var valid_21627084 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627084 = validateParameter(valid_21627084, JString, required = false,
                                   default = nil)
  if valid_21627084 != nil:
    section.add "X-Amz-Algorithm", valid_21627084
  var valid_21627085 = header.getOrDefault("X-Amz-Signature")
  valid_21627085 = validateParameter(valid_21627085, JString, required = false,
                                   default = nil)
  if valid_21627085 != nil:
    section.add "X-Amz-Signature", valid_21627085
  var valid_21627086 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627086 = validateParameter(valid_21627086, JString, required = false,
                                   default = nil)
  if valid_21627086 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627086
  var valid_21627087 = header.getOrDefault("X-Amz-Credential")
  valid_21627087 = validateParameter(valid_21627087, JString, required = false,
                                   default = nil)
  if valid_21627087 != nil:
    section.add "X-Amz-Credential", valid_21627087
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627088: Call_GetDetectStackSetDrift_21627069;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  let valid = call_21627088.validator(path, query, header, formData, body, _)
  let scheme = call_21627088.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627088.makeUrl(scheme.get, call_21627088.host, call_21627088.base,
                               call_21627088.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627088, uri, valid, _)

proc call*(call_21627089: Call_GetDetectStackSetDrift_21627069;
          StackSetName: string;
          OperationPreferencesFailureToleranceCount: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          Action: string = "DetectStackSetDrift";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackSetDrift
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationId: string
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  var query_21627090 = newJObject()
  add(query_21627090, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_21627090, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if OperationPreferencesRegionOrder != nil:
    query_21627090.add "OperationPreferences.RegionOrder",
                      OperationPreferencesRegionOrder
  add(query_21627090, "Action", newJString(Action))
  add(query_21627090, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21627090, "StackSetName", newJString(StackSetName))
  add(query_21627090, "OperationId", newJString(OperationId))
  add(query_21627090, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_21627090, "Version", newJString(Version))
  result = call_21627089.call(nil, query_21627090, nil, nil, nil)

var getDetectStackSetDrift* = Call_GetDetectStackSetDrift_21627069(
    name: "getDetectStackSetDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackSetDrift",
    validator: validate_GetDetectStackSetDrift_21627070, base: "/",
    makeUrl: url_GetDetectStackSetDrift_21627071,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostEstimateTemplateCost_21627132 = ref object of OpenApiRestCall_21625435
proc url_PostEstimateTemplateCost_21627134(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostEstimateTemplateCost_21627133(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627135 = query.getOrDefault("Action")
  valid_21627135 = validateParameter(valid_21627135, JString, required = true,
                                   default = newJString("EstimateTemplateCost"))
  if valid_21627135 != nil:
    section.add "Action", valid_21627135
  var valid_21627136 = query.getOrDefault("Version")
  valid_21627136 = validateParameter(valid_21627136, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627136 != nil:
    section.add "Version", valid_21627136
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627137 = header.getOrDefault("X-Amz-Date")
  valid_21627137 = validateParameter(valid_21627137, JString, required = false,
                                   default = nil)
  if valid_21627137 != nil:
    section.add "X-Amz-Date", valid_21627137
  var valid_21627138 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627138 = validateParameter(valid_21627138, JString, required = false,
                                   default = nil)
  if valid_21627138 != nil:
    section.add "X-Amz-Security-Token", valid_21627138
  var valid_21627139 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627139 = validateParameter(valid_21627139, JString, required = false,
                                   default = nil)
  if valid_21627139 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627139
  var valid_21627140 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627140 = validateParameter(valid_21627140, JString, required = false,
                                   default = nil)
  if valid_21627140 != nil:
    section.add "X-Amz-Algorithm", valid_21627140
  var valid_21627141 = header.getOrDefault("X-Amz-Signature")
  valid_21627141 = validateParameter(valid_21627141, JString, required = false,
                                   default = nil)
  if valid_21627141 != nil:
    section.add "X-Amz-Signature", valid_21627141
  var valid_21627142 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627142 = validateParameter(valid_21627142, JString, required = false,
                                   default = nil)
  if valid_21627142 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627142
  var valid_21627143 = header.getOrDefault("X-Amz-Credential")
  valid_21627143 = validateParameter(valid_21627143, JString, required = false,
                                   default = nil)
  if valid_21627143 != nil:
    section.add "X-Amz-Credential", valid_21627143
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  section = newJObject()
  var valid_21627144 = formData.getOrDefault("TemplateURL")
  valid_21627144 = validateParameter(valid_21627144, JString, required = false,
                                   default = nil)
  if valid_21627144 != nil:
    section.add "TemplateURL", valid_21627144
  var valid_21627145 = formData.getOrDefault("Parameters")
  valid_21627145 = validateParameter(valid_21627145, JArray, required = false,
                                   default = nil)
  if valid_21627145 != nil:
    section.add "Parameters", valid_21627145
  var valid_21627146 = formData.getOrDefault("TemplateBody")
  valid_21627146 = validateParameter(valid_21627146, JString, required = false,
                                   default = nil)
  if valid_21627146 != nil:
    section.add "TemplateBody", valid_21627146
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627147: Call_PostEstimateTemplateCost_21627132;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_21627147.validator(path, query, header, formData, body, _)
  let scheme = call_21627147.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627147.makeUrl(scheme.get, call_21627147.host, call_21627147.base,
                               call_21627147.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627147, uri, valid, _)

proc call*(call_21627148: Call_PostEstimateTemplateCost_21627132;
          TemplateURL: string = ""; Parameters: JsonNode = nil;
          Action: string = "EstimateTemplateCost"; TemplateBody: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Action: string (required)
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_21627149 = newJObject()
  var formData_21627150 = newJObject()
  add(formData_21627150, "TemplateURL", newJString(TemplateURL))
  if Parameters != nil:
    formData_21627150.add "Parameters", Parameters
  add(query_21627149, "Action", newJString(Action))
  add(formData_21627150, "TemplateBody", newJString(TemplateBody))
  add(query_21627149, "Version", newJString(Version))
  result = call_21627148.call(nil, query_21627149, nil, formData_21627150, nil)

var postEstimateTemplateCost* = Call_PostEstimateTemplateCost_21627132(
    name: "postEstimateTemplateCost", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_PostEstimateTemplateCost_21627133, base: "/",
    makeUrl: url_PostEstimateTemplateCost_21627134,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetEstimateTemplateCost_21627114 = ref object of OpenApiRestCall_21625435
proc url_GetEstimateTemplateCost_21627116(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetEstimateTemplateCost_21627115(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627117 = query.getOrDefault("TemplateURL")
  valid_21627117 = validateParameter(valid_21627117, JString, required = false,
                                   default = nil)
  if valid_21627117 != nil:
    section.add "TemplateURL", valid_21627117
  var valid_21627118 = query.getOrDefault("TemplateBody")
  valid_21627118 = validateParameter(valid_21627118, JString, required = false,
                                   default = nil)
  if valid_21627118 != nil:
    section.add "TemplateBody", valid_21627118
  var valid_21627119 = query.getOrDefault("Parameters")
  valid_21627119 = validateParameter(valid_21627119, JArray, required = false,
                                   default = nil)
  if valid_21627119 != nil:
    section.add "Parameters", valid_21627119
  var valid_21627120 = query.getOrDefault("Action")
  valid_21627120 = validateParameter(valid_21627120, JString, required = true,
                                   default = newJString("EstimateTemplateCost"))
  if valid_21627120 != nil:
    section.add "Action", valid_21627120
  var valid_21627121 = query.getOrDefault("Version")
  valid_21627121 = validateParameter(valid_21627121, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627121 != nil:
    section.add "Version", valid_21627121
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627122 = header.getOrDefault("X-Amz-Date")
  valid_21627122 = validateParameter(valid_21627122, JString, required = false,
                                   default = nil)
  if valid_21627122 != nil:
    section.add "X-Amz-Date", valid_21627122
  var valid_21627123 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627123 = validateParameter(valid_21627123, JString, required = false,
                                   default = nil)
  if valid_21627123 != nil:
    section.add "X-Amz-Security-Token", valid_21627123
  var valid_21627124 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627124 = validateParameter(valid_21627124, JString, required = false,
                                   default = nil)
  if valid_21627124 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627124
  var valid_21627125 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627125 = validateParameter(valid_21627125, JString, required = false,
                                   default = nil)
  if valid_21627125 != nil:
    section.add "X-Amz-Algorithm", valid_21627125
  var valid_21627126 = header.getOrDefault("X-Amz-Signature")
  valid_21627126 = validateParameter(valid_21627126, JString, required = false,
                                   default = nil)
  if valid_21627126 != nil:
    section.add "X-Amz-Signature", valid_21627126
  var valid_21627127 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627127 = validateParameter(valid_21627127, JString, required = false,
                                   default = nil)
  if valid_21627127 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627127
  var valid_21627128 = header.getOrDefault("X-Amz-Credential")
  valid_21627128 = validateParameter(valid_21627128, JString, required = false,
                                   default = nil)
  if valid_21627128 != nil:
    section.add "X-Amz-Credential", valid_21627128
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627129: Call_GetEstimateTemplateCost_21627114;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_21627129.validator(path, query, header, formData, body, _)
  let scheme = call_21627129.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627129.makeUrl(scheme.get, call_21627129.host, call_21627129.base,
                               call_21627129.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627129, uri, valid, _)

proc call*(call_21627130: Call_GetEstimateTemplateCost_21627114;
          TemplateURL: string = ""; TemplateBody: string = "";
          Parameters: JsonNode = nil; Action: string = "EstimateTemplateCost";
          Version: string = "2010-05-15"): Recallable =
  ## getEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627131 = newJObject()
  add(query_21627131, "TemplateURL", newJString(TemplateURL))
  add(query_21627131, "TemplateBody", newJString(TemplateBody))
  if Parameters != nil:
    query_21627131.add "Parameters", Parameters
  add(query_21627131, "Action", newJString(Action))
  add(query_21627131, "Version", newJString(Version))
  result = call_21627130.call(nil, query_21627131, nil, nil, nil)

var getEstimateTemplateCost* = Call_GetEstimateTemplateCost_21627114(
    name: "getEstimateTemplateCost", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_GetEstimateTemplateCost_21627115, base: "/",
    makeUrl: url_GetEstimateTemplateCost_21627116,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostExecuteChangeSet_21627169 = ref object of OpenApiRestCall_21625435
proc url_PostExecuteChangeSet_21627171(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostExecuteChangeSet_21627170(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627172 = query.getOrDefault("Action")
  valid_21627172 = validateParameter(valid_21627172, JString, required = true,
                                   default = newJString("ExecuteChangeSet"))
  if valid_21627172 != nil:
    section.add "Action", valid_21627172
  var valid_21627173 = query.getOrDefault("Version")
  valid_21627173 = validateParameter(valid_21627173, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627173 != nil:
    section.add "Version", valid_21627173
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627174 = header.getOrDefault("X-Amz-Date")
  valid_21627174 = validateParameter(valid_21627174, JString, required = false,
                                   default = nil)
  if valid_21627174 != nil:
    section.add "X-Amz-Date", valid_21627174
  var valid_21627175 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627175 = validateParameter(valid_21627175, JString, required = false,
                                   default = nil)
  if valid_21627175 != nil:
    section.add "X-Amz-Security-Token", valid_21627175
  var valid_21627176 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627176 = validateParameter(valid_21627176, JString, required = false,
                                   default = nil)
  if valid_21627176 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627176
  var valid_21627177 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627177 = validateParameter(valid_21627177, JString, required = false,
                                   default = nil)
  if valid_21627177 != nil:
    section.add "X-Amz-Algorithm", valid_21627177
  var valid_21627178 = header.getOrDefault("X-Amz-Signature")
  valid_21627178 = validateParameter(valid_21627178, JString, required = false,
                                   default = nil)
  if valid_21627178 != nil:
    section.add "X-Amz-Signature", valid_21627178
  var valid_21627179 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627179 = validateParameter(valid_21627179, JString, required = false,
                                   default = nil)
  if valid_21627179 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627179
  var valid_21627180 = header.getOrDefault("X-Amz-Credential")
  valid_21627180 = validateParameter(valid_21627180, JString, required = false,
                                   default = nil)
  if valid_21627180 != nil:
    section.add "X-Amz-Credential", valid_21627180
  result.add "header", section
  ## parameters in `formData` object:
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  section = newJObject()
  var valid_21627181 = formData.getOrDefault("ClientRequestToken")
  valid_21627181 = validateParameter(valid_21627181, JString, required = false,
                                   default = nil)
  if valid_21627181 != nil:
    section.add "ClientRequestToken", valid_21627181
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_21627182 = formData.getOrDefault("ChangeSetName")
  valid_21627182 = validateParameter(valid_21627182, JString, required = true,
                                   default = nil)
  if valid_21627182 != nil:
    section.add "ChangeSetName", valid_21627182
  var valid_21627183 = formData.getOrDefault("StackName")
  valid_21627183 = validateParameter(valid_21627183, JString, required = false,
                                   default = nil)
  if valid_21627183 != nil:
    section.add "StackName", valid_21627183
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627184: Call_PostExecuteChangeSet_21627169; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_21627184.validator(path, query, header, formData, body, _)
  let scheme = call_21627184.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627184.makeUrl(scheme.get, call_21627184.host, call_21627184.base,
                               call_21627184.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627184, uri, valid, _)

proc call*(call_21627185: Call_PostExecuteChangeSet_21627169;
          ChangeSetName: string; ClientRequestToken: string = "";
          Action: string = "ExecuteChangeSet"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Version: string (required)
  var query_21627186 = newJObject()
  var formData_21627187 = newJObject()
  add(formData_21627187, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21627186, "Action", newJString(Action))
  add(formData_21627187, "ChangeSetName", newJString(ChangeSetName))
  add(formData_21627187, "StackName", newJString(StackName))
  add(query_21627186, "Version", newJString(Version))
  result = call_21627185.call(nil, query_21627186, nil, formData_21627187, nil)

var postExecuteChangeSet* = Call_PostExecuteChangeSet_21627169(
    name: "postExecuteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_PostExecuteChangeSet_21627170, base: "/",
    makeUrl: url_PostExecuteChangeSet_21627171,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetExecuteChangeSet_21627151 = ref object of OpenApiRestCall_21625435
proc url_GetExecuteChangeSet_21627153(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetExecuteChangeSet_21627152(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_21627154 = query.getOrDefault("ChangeSetName")
  valid_21627154 = validateParameter(valid_21627154, JString, required = true,
                                   default = nil)
  if valid_21627154 != nil:
    section.add "ChangeSetName", valid_21627154
  var valid_21627155 = query.getOrDefault("Action")
  valid_21627155 = validateParameter(valid_21627155, JString, required = true,
                                   default = newJString("ExecuteChangeSet"))
  if valid_21627155 != nil:
    section.add "Action", valid_21627155
  var valid_21627156 = query.getOrDefault("ClientRequestToken")
  valid_21627156 = validateParameter(valid_21627156, JString, required = false,
                                   default = nil)
  if valid_21627156 != nil:
    section.add "ClientRequestToken", valid_21627156
  var valid_21627157 = query.getOrDefault("Version")
  valid_21627157 = validateParameter(valid_21627157, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627157 != nil:
    section.add "Version", valid_21627157
  var valid_21627158 = query.getOrDefault("StackName")
  valid_21627158 = validateParameter(valid_21627158, JString, required = false,
                                   default = nil)
  if valid_21627158 != nil:
    section.add "StackName", valid_21627158
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627159 = header.getOrDefault("X-Amz-Date")
  valid_21627159 = validateParameter(valid_21627159, JString, required = false,
                                   default = nil)
  if valid_21627159 != nil:
    section.add "X-Amz-Date", valid_21627159
  var valid_21627160 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627160 = validateParameter(valid_21627160, JString, required = false,
                                   default = nil)
  if valid_21627160 != nil:
    section.add "X-Amz-Security-Token", valid_21627160
  var valid_21627161 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627161 = validateParameter(valid_21627161, JString, required = false,
                                   default = nil)
  if valid_21627161 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627161
  var valid_21627162 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627162 = validateParameter(valid_21627162, JString, required = false,
                                   default = nil)
  if valid_21627162 != nil:
    section.add "X-Amz-Algorithm", valid_21627162
  var valid_21627163 = header.getOrDefault("X-Amz-Signature")
  valid_21627163 = validateParameter(valid_21627163, JString, required = false,
                                   default = nil)
  if valid_21627163 != nil:
    section.add "X-Amz-Signature", valid_21627163
  var valid_21627164 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627164 = validateParameter(valid_21627164, JString, required = false,
                                   default = nil)
  if valid_21627164 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627164
  var valid_21627165 = header.getOrDefault("X-Amz-Credential")
  valid_21627165 = validateParameter(valid_21627165, JString, required = false,
                                   default = nil)
  if valid_21627165 != nil:
    section.add "X-Amz-Credential", valid_21627165
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627166: Call_GetExecuteChangeSet_21627151; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_21627166.validator(path, query, header, formData, body, _)
  let scheme = call_21627166.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627166.makeUrl(scheme.get, call_21627166.host, call_21627166.base,
                               call_21627166.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627166, uri, valid, _)

proc call*(call_21627167: Call_GetExecuteChangeSet_21627151; ChangeSetName: string;
          Action: string = "ExecuteChangeSet"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  var query_21627168 = newJObject()
  add(query_21627168, "ChangeSetName", newJString(ChangeSetName))
  add(query_21627168, "Action", newJString(Action))
  add(query_21627168, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21627168, "Version", newJString(Version))
  add(query_21627168, "StackName", newJString(StackName))
  result = call_21627167.call(nil, query_21627168, nil, nil, nil)

var getExecuteChangeSet* = Call_GetExecuteChangeSet_21627151(
    name: "getExecuteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_GetExecuteChangeSet_21627152, base: "/",
    makeUrl: url_GetExecuteChangeSet_21627153,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetStackPolicy_21627204 = ref object of OpenApiRestCall_21625435
proc url_PostGetStackPolicy_21627206(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetStackPolicy_21627205(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627207 = query.getOrDefault("Action")
  valid_21627207 = validateParameter(valid_21627207, JString, required = true,
                                   default = newJString("GetStackPolicy"))
  if valid_21627207 != nil:
    section.add "Action", valid_21627207
  var valid_21627208 = query.getOrDefault("Version")
  valid_21627208 = validateParameter(valid_21627208, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627208 != nil:
    section.add "Version", valid_21627208
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627209 = header.getOrDefault("X-Amz-Date")
  valid_21627209 = validateParameter(valid_21627209, JString, required = false,
                                   default = nil)
  if valid_21627209 != nil:
    section.add "X-Amz-Date", valid_21627209
  var valid_21627210 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627210 = validateParameter(valid_21627210, JString, required = false,
                                   default = nil)
  if valid_21627210 != nil:
    section.add "X-Amz-Security-Token", valid_21627210
  var valid_21627211 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627211 = validateParameter(valid_21627211, JString, required = false,
                                   default = nil)
  if valid_21627211 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627211
  var valid_21627212 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627212 = validateParameter(valid_21627212, JString, required = false,
                                   default = nil)
  if valid_21627212 != nil:
    section.add "X-Amz-Algorithm", valid_21627212
  var valid_21627213 = header.getOrDefault("X-Amz-Signature")
  valid_21627213 = validateParameter(valid_21627213, JString, required = false,
                                   default = nil)
  if valid_21627213 != nil:
    section.add "X-Amz-Signature", valid_21627213
  var valid_21627214 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627214 = validateParameter(valid_21627214, JString, required = false,
                                   default = nil)
  if valid_21627214 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627214
  var valid_21627215 = header.getOrDefault("X-Amz-Credential")
  valid_21627215 = validateParameter(valid_21627215, JString, required = false,
                                   default = nil)
  if valid_21627215 != nil:
    section.add "X-Amz-Credential", valid_21627215
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21627216 = formData.getOrDefault("StackName")
  valid_21627216 = validateParameter(valid_21627216, JString, required = true,
                                   default = nil)
  if valid_21627216 != nil:
    section.add "StackName", valid_21627216
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627217: Call_PostGetStackPolicy_21627204; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_21627217.validator(path, query, header, formData, body, _)
  let scheme = call_21627217.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627217.makeUrl(scheme.get, call_21627217.host, call_21627217.base,
                               call_21627217.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627217, uri, valid, _)

proc call*(call_21627218: Call_PostGetStackPolicy_21627204; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Version: string (required)
  var query_21627219 = newJObject()
  var formData_21627220 = newJObject()
  add(query_21627219, "Action", newJString(Action))
  add(formData_21627220, "StackName", newJString(StackName))
  add(query_21627219, "Version", newJString(Version))
  result = call_21627218.call(nil, query_21627219, nil, formData_21627220, nil)

var postGetStackPolicy* = Call_PostGetStackPolicy_21627204(
    name: "postGetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetStackPolicy",
    validator: validate_PostGetStackPolicy_21627205, base: "/",
    makeUrl: url_PostGetStackPolicy_21627206, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetStackPolicy_21627188 = ref object of OpenApiRestCall_21625435
proc url_GetGetStackPolicy_21627190(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetStackPolicy_21627189(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  section = newJObject()
  var valid_21627191 = query.getOrDefault("Action")
  valid_21627191 = validateParameter(valid_21627191, JString, required = true,
                                   default = newJString("GetStackPolicy"))
  if valid_21627191 != nil:
    section.add "Action", valid_21627191
  var valid_21627192 = query.getOrDefault("Version")
  valid_21627192 = validateParameter(valid_21627192, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627192 != nil:
    section.add "Version", valid_21627192
  var valid_21627193 = query.getOrDefault("StackName")
  valid_21627193 = validateParameter(valid_21627193, JString, required = true,
                                   default = nil)
  if valid_21627193 != nil:
    section.add "StackName", valid_21627193
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627194 = header.getOrDefault("X-Amz-Date")
  valid_21627194 = validateParameter(valid_21627194, JString, required = false,
                                   default = nil)
  if valid_21627194 != nil:
    section.add "X-Amz-Date", valid_21627194
  var valid_21627195 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627195 = validateParameter(valid_21627195, JString, required = false,
                                   default = nil)
  if valid_21627195 != nil:
    section.add "X-Amz-Security-Token", valid_21627195
  var valid_21627196 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627196 = validateParameter(valid_21627196, JString, required = false,
                                   default = nil)
  if valid_21627196 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627196
  var valid_21627197 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627197 = validateParameter(valid_21627197, JString, required = false,
                                   default = nil)
  if valid_21627197 != nil:
    section.add "X-Amz-Algorithm", valid_21627197
  var valid_21627198 = header.getOrDefault("X-Amz-Signature")
  valid_21627198 = validateParameter(valid_21627198, JString, required = false,
                                   default = nil)
  if valid_21627198 != nil:
    section.add "X-Amz-Signature", valid_21627198
  var valid_21627199 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627199 = validateParameter(valid_21627199, JString, required = false,
                                   default = nil)
  if valid_21627199 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627199
  var valid_21627200 = header.getOrDefault("X-Amz-Credential")
  valid_21627200 = validateParameter(valid_21627200, JString, required = false,
                                   default = nil)
  if valid_21627200 != nil:
    section.add "X-Amz-Credential", valid_21627200
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627201: Call_GetGetStackPolicy_21627188; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_21627201.validator(path, query, header, formData, body, _)
  let scheme = call_21627201.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627201.makeUrl(scheme.get, call_21627201.host, call_21627201.base,
                               call_21627201.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627201, uri, valid, _)

proc call*(call_21627202: Call_GetGetStackPolicy_21627188; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  var query_21627203 = newJObject()
  add(query_21627203, "Action", newJString(Action))
  add(query_21627203, "Version", newJString(Version))
  add(query_21627203, "StackName", newJString(StackName))
  result = call_21627202.call(nil, query_21627203, nil, nil, nil)

var getGetStackPolicy* = Call_GetGetStackPolicy_21627188(name: "getGetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetStackPolicy", validator: validate_GetGetStackPolicy_21627189,
    base: "/", makeUrl: url_GetGetStackPolicy_21627190,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplate_21627239 = ref object of OpenApiRestCall_21625435
proc url_PostGetTemplate_21627241(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplate_21627240(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627242 = query.getOrDefault("Action")
  valid_21627242 = validateParameter(valid_21627242, JString, required = true,
                                   default = newJString("GetTemplate"))
  if valid_21627242 != nil:
    section.add "Action", valid_21627242
  var valid_21627243 = query.getOrDefault("Version")
  valid_21627243 = validateParameter(valid_21627243, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627243 != nil:
    section.add "Version", valid_21627243
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627244 = header.getOrDefault("X-Amz-Date")
  valid_21627244 = validateParameter(valid_21627244, JString, required = false,
                                   default = nil)
  if valid_21627244 != nil:
    section.add "X-Amz-Date", valid_21627244
  var valid_21627245 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627245 = validateParameter(valid_21627245, JString, required = false,
                                   default = nil)
  if valid_21627245 != nil:
    section.add "X-Amz-Security-Token", valid_21627245
  var valid_21627246 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627246 = validateParameter(valid_21627246, JString, required = false,
                                   default = nil)
  if valid_21627246 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627246
  var valid_21627247 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627247 = validateParameter(valid_21627247, JString, required = false,
                                   default = nil)
  if valid_21627247 != nil:
    section.add "X-Amz-Algorithm", valid_21627247
  var valid_21627248 = header.getOrDefault("X-Amz-Signature")
  valid_21627248 = validateParameter(valid_21627248, JString, required = false,
                                   default = nil)
  if valid_21627248 != nil:
    section.add "X-Amz-Signature", valid_21627248
  var valid_21627249 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627249 = validateParameter(valid_21627249, JString, required = false,
                                   default = nil)
  if valid_21627249 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627249
  var valid_21627250 = header.getOrDefault("X-Amz-Credential")
  valid_21627250 = validateParameter(valid_21627250, JString, required = false,
                                   default = nil)
  if valid_21627250 != nil:
    section.add "X-Amz-Credential", valid_21627250
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21627251 = formData.getOrDefault("TemplateStage")
  valid_21627251 = validateParameter(valid_21627251, JString, required = false,
                                   default = newJString("Original"))
  if valid_21627251 != nil:
    section.add "TemplateStage", valid_21627251
  var valid_21627252 = formData.getOrDefault("ChangeSetName")
  valid_21627252 = validateParameter(valid_21627252, JString, required = false,
                                   default = nil)
  if valid_21627252 != nil:
    section.add "ChangeSetName", valid_21627252
  var valid_21627253 = formData.getOrDefault("StackName")
  valid_21627253 = validateParameter(valid_21627253, JString, required = false,
                                   default = nil)
  if valid_21627253 != nil:
    section.add "StackName", valid_21627253
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627254: Call_PostGetTemplate_21627239; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_21627254.validator(path, query, header, formData, body, _)
  let scheme = call_21627254.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627254.makeUrl(scheme.get, call_21627254.host, call_21627254.base,
                               call_21627254.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627254, uri, valid, _)

proc call*(call_21627255: Call_PostGetTemplate_21627239;
          TemplateStage: string = "Original"; Action: string = "GetTemplate";
          ChangeSetName: string = ""; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: string (required)
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_21627256 = newJObject()
  var formData_21627257 = newJObject()
  add(formData_21627257, "TemplateStage", newJString(TemplateStage))
  add(query_21627256, "Action", newJString(Action))
  add(formData_21627257, "ChangeSetName", newJString(ChangeSetName))
  add(formData_21627257, "StackName", newJString(StackName))
  add(query_21627256, "Version", newJString(Version))
  result = call_21627255.call(nil, query_21627256, nil, formData_21627257, nil)

var postGetTemplate* = Call_PostGetTemplate_21627239(name: "postGetTemplate",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_PostGetTemplate_21627240,
    base: "/", makeUrl: url_PostGetTemplate_21627241,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplate_21627221 = ref object of OpenApiRestCall_21625435
proc url_GetGetTemplate_21627223(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplate_21627222(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Action: JString (required)
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21627224 = query.getOrDefault("ChangeSetName")
  valid_21627224 = validateParameter(valid_21627224, JString, required = false,
                                   default = nil)
  if valid_21627224 != nil:
    section.add "ChangeSetName", valid_21627224
  var valid_21627225 = query.getOrDefault("Action")
  valid_21627225 = validateParameter(valid_21627225, JString, required = true,
                                   default = newJString("GetTemplate"))
  if valid_21627225 != nil:
    section.add "Action", valid_21627225
  var valid_21627226 = query.getOrDefault("TemplateStage")
  valid_21627226 = validateParameter(valid_21627226, JString, required = false,
                                   default = newJString("Original"))
  if valid_21627226 != nil:
    section.add "TemplateStage", valid_21627226
  var valid_21627227 = query.getOrDefault("Version")
  valid_21627227 = validateParameter(valid_21627227, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627227 != nil:
    section.add "Version", valid_21627227
  var valid_21627228 = query.getOrDefault("StackName")
  valid_21627228 = validateParameter(valid_21627228, JString, required = false,
                                   default = nil)
  if valid_21627228 != nil:
    section.add "StackName", valid_21627228
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627229 = header.getOrDefault("X-Amz-Date")
  valid_21627229 = validateParameter(valid_21627229, JString, required = false,
                                   default = nil)
  if valid_21627229 != nil:
    section.add "X-Amz-Date", valid_21627229
  var valid_21627230 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627230 = validateParameter(valid_21627230, JString, required = false,
                                   default = nil)
  if valid_21627230 != nil:
    section.add "X-Amz-Security-Token", valid_21627230
  var valid_21627231 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627231 = validateParameter(valid_21627231, JString, required = false,
                                   default = nil)
  if valid_21627231 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627231
  var valid_21627232 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627232 = validateParameter(valid_21627232, JString, required = false,
                                   default = nil)
  if valid_21627232 != nil:
    section.add "X-Amz-Algorithm", valid_21627232
  var valid_21627233 = header.getOrDefault("X-Amz-Signature")
  valid_21627233 = validateParameter(valid_21627233, JString, required = false,
                                   default = nil)
  if valid_21627233 != nil:
    section.add "X-Amz-Signature", valid_21627233
  var valid_21627234 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627234 = validateParameter(valid_21627234, JString, required = false,
                                   default = nil)
  if valid_21627234 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627234
  var valid_21627235 = header.getOrDefault("X-Amz-Credential")
  valid_21627235 = validateParameter(valid_21627235, JString, required = false,
                                   default = nil)
  if valid_21627235 != nil:
    section.add "X-Amz-Credential", valid_21627235
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627236: Call_GetGetTemplate_21627221; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_21627236.validator(path, query, header, formData, body, _)
  let scheme = call_21627236.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627236.makeUrl(scheme.get, call_21627236.host, call_21627236.base,
                               call_21627236.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627236, uri, valid, _)

proc call*(call_21627237: Call_GetGetTemplate_21627221; ChangeSetName: string = "";
          Action: string = "GetTemplate"; TemplateStage: string = "Original";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Action: string (required)
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_21627238 = newJObject()
  add(query_21627238, "ChangeSetName", newJString(ChangeSetName))
  add(query_21627238, "Action", newJString(Action))
  add(query_21627238, "TemplateStage", newJString(TemplateStage))
  add(query_21627238, "Version", newJString(Version))
  add(query_21627238, "StackName", newJString(StackName))
  result = call_21627237.call(nil, query_21627238, nil, nil, nil)

var getGetTemplate* = Call_GetGetTemplate_21627221(name: "getGetTemplate",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_GetGetTemplate_21627222,
    base: "/", makeUrl: url_GetGetTemplate_21627223,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplateSummary_21627277 = ref object of OpenApiRestCall_21625435
proc url_PostGetTemplateSummary_21627279(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplateSummary_21627278(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627280 = query.getOrDefault("Action")
  valid_21627280 = validateParameter(valid_21627280, JString, required = true,
                                   default = newJString("GetTemplateSummary"))
  if valid_21627280 != nil:
    section.add "Action", valid_21627280
  var valid_21627281 = query.getOrDefault("Version")
  valid_21627281 = validateParameter(valid_21627281, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627281 != nil:
    section.add "Version", valid_21627281
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627282 = header.getOrDefault("X-Amz-Date")
  valid_21627282 = validateParameter(valid_21627282, JString, required = false,
                                   default = nil)
  if valid_21627282 != nil:
    section.add "X-Amz-Date", valid_21627282
  var valid_21627283 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627283 = validateParameter(valid_21627283, JString, required = false,
                                   default = nil)
  if valid_21627283 != nil:
    section.add "X-Amz-Security-Token", valid_21627283
  var valid_21627284 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627284 = validateParameter(valid_21627284, JString, required = false,
                                   default = nil)
  if valid_21627284 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627284
  var valid_21627285 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627285 = validateParameter(valid_21627285, JString, required = false,
                                   default = nil)
  if valid_21627285 != nil:
    section.add "X-Amz-Algorithm", valid_21627285
  var valid_21627286 = header.getOrDefault("X-Amz-Signature")
  valid_21627286 = validateParameter(valid_21627286, JString, required = false,
                                   default = nil)
  if valid_21627286 != nil:
    section.add "X-Amz-Signature", valid_21627286
  var valid_21627287 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627287 = validateParameter(valid_21627287, JString, required = false,
                                   default = nil)
  if valid_21627287 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627287
  var valid_21627288 = header.getOrDefault("X-Amz-Credential")
  valid_21627288 = validateParameter(valid_21627288, JString, required = false,
                                   default = nil)
  if valid_21627288 != nil:
    section.add "X-Amz-Credential", valid_21627288
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  section = newJObject()
  var valid_21627289 = formData.getOrDefault("StackSetName")
  valid_21627289 = validateParameter(valid_21627289, JString, required = false,
                                   default = nil)
  if valid_21627289 != nil:
    section.add "StackSetName", valid_21627289
  var valid_21627290 = formData.getOrDefault("TemplateURL")
  valid_21627290 = validateParameter(valid_21627290, JString, required = false,
                                   default = nil)
  if valid_21627290 != nil:
    section.add "TemplateURL", valid_21627290
  var valid_21627291 = formData.getOrDefault("StackName")
  valid_21627291 = validateParameter(valid_21627291, JString, required = false,
                                   default = nil)
  if valid_21627291 != nil:
    section.add "StackName", valid_21627291
  var valid_21627292 = formData.getOrDefault("TemplateBody")
  valid_21627292 = validateParameter(valid_21627292, JString, required = false,
                                   default = nil)
  if valid_21627292 != nil:
    section.add "TemplateBody", valid_21627292
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627293: Call_PostGetTemplateSummary_21627277;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_21627293.validator(path, query, header, formData, body, _)
  let scheme = call_21627293.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627293.makeUrl(scheme.get, call_21627293.host, call_21627293.base,
                               call_21627293.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627293, uri, valid, _)

proc call*(call_21627294: Call_PostGetTemplateSummary_21627277;
          StackSetName: string = ""; TemplateURL: string = "";
          Action: string = "GetTemplateSummary"; StackName: string = "";
          TemplateBody: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  var query_21627295 = newJObject()
  var formData_21627296 = newJObject()
  add(formData_21627296, "StackSetName", newJString(StackSetName))
  add(formData_21627296, "TemplateURL", newJString(TemplateURL))
  add(query_21627295, "Action", newJString(Action))
  add(formData_21627296, "StackName", newJString(StackName))
  add(formData_21627296, "TemplateBody", newJString(TemplateBody))
  add(query_21627295, "Version", newJString(Version))
  result = call_21627294.call(nil, query_21627295, nil, formData_21627296, nil)

var postGetTemplateSummary* = Call_PostGetTemplateSummary_21627277(
    name: "postGetTemplateSummary", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_PostGetTemplateSummary_21627278, base: "/",
    makeUrl: url_PostGetTemplateSummary_21627279,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplateSummary_21627258 = ref object of OpenApiRestCall_21625435
proc url_GetGetTemplateSummary_21627260(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplateSummary_21627259(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: JString (required)
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  section = newJObject()
  var valid_21627261 = query.getOrDefault("TemplateURL")
  valid_21627261 = validateParameter(valid_21627261, JString, required = false,
                                   default = nil)
  if valid_21627261 != nil:
    section.add "TemplateURL", valid_21627261
  var valid_21627262 = query.getOrDefault("TemplateBody")
  valid_21627262 = validateParameter(valid_21627262, JString, required = false,
                                   default = nil)
  if valid_21627262 != nil:
    section.add "TemplateBody", valid_21627262
  var valid_21627263 = query.getOrDefault("Action")
  valid_21627263 = validateParameter(valid_21627263, JString, required = true,
                                   default = newJString("GetTemplateSummary"))
  if valid_21627263 != nil:
    section.add "Action", valid_21627263
  var valid_21627264 = query.getOrDefault("StackSetName")
  valid_21627264 = validateParameter(valid_21627264, JString, required = false,
                                   default = nil)
  if valid_21627264 != nil:
    section.add "StackSetName", valid_21627264
  var valid_21627265 = query.getOrDefault("Version")
  valid_21627265 = validateParameter(valid_21627265, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627265 != nil:
    section.add "Version", valid_21627265
  var valid_21627266 = query.getOrDefault("StackName")
  valid_21627266 = validateParameter(valid_21627266, JString, required = false,
                                   default = nil)
  if valid_21627266 != nil:
    section.add "StackName", valid_21627266
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627267 = header.getOrDefault("X-Amz-Date")
  valid_21627267 = validateParameter(valid_21627267, JString, required = false,
                                   default = nil)
  if valid_21627267 != nil:
    section.add "X-Amz-Date", valid_21627267
  var valid_21627268 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627268 = validateParameter(valid_21627268, JString, required = false,
                                   default = nil)
  if valid_21627268 != nil:
    section.add "X-Amz-Security-Token", valid_21627268
  var valid_21627269 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627269 = validateParameter(valid_21627269, JString, required = false,
                                   default = nil)
  if valid_21627269 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627269
  var valid_21627270 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627270 = validateParameter(valid_21627270, JString, required = false,
                                   default = nil)
  if valid_21627270 != nil:
    section.add "X-Amz-Algorithm", valid_21627270
  var valid_21627271 = header.getOrDefault("X-Amz-Signature")
  valid_21627271 = validateParameter(valid_21627271, JString, required = false,
                                   default = nil)
  if valid_21627271 != nil:
    section.add "X-Amz-Signature", valid_21627271
  var valid_21627272 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627272 = validateParameter(valid_21627272, JString, required = false,
                                   default = nil)
  if valid_21627272 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627272
  var valid_21627273 = header.getOrDefault("X-Amz-Credential")
  valid_21627273 = validateParameter(valid_21627273, JString, required = false,
                                   default = nil)
  if valid_21627273 != nil:
    section.add "X-Amz-Credential", valid_21627273
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627274: Call_GetGetTemplateSummary_21627258;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_21627274.validator(path, query, header, formData, body, _)
  let scheme = call_21627274.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627274.makeUrl(scheme.get, call_21627274.host, call_21627274.base,
                               call_21627274.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627274, uri, valid, _)

proc call*(call_21627275: Call_GetGetTemplateSummary_21627258;
          TemplateURL: string = ""; TemplateBody: string = "";
          Action: string = "GetTemplateSummary"; StackSetName: string = "";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  var query_21627276 = newJObject()
  add(query_21627276, "TemplateURL", newJString(TemplateURL))
  add(query_21627276, "TemplateBody", newJString(TemplateBody))
  add(query_21627276, "Action", newJString(Action))
  add(query_21627276, "StackSetName", newJString(StackSetName))
  add(query_21627276, "Version", newJString(Version))
  add(query_21627276, "StackName", newJString(StackName))
  result = call_21627275.call(nil, query_21627276, nil, nil, nil)

var getGetTemplateSummary* = Call_GetGetTemplateSummary_21627258(
    name: "getGetTemplateSummary", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_GetGetTemplateSummary_21627259, base: "/",
    makeUrl: url_GetGetTemplateSummary_21627260,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListChangeSets_21627314 = ref object of OpenApiRestCall_21625435
proc url_PostListChangeSets_21627316(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListChangeSets_21627315(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627317 = query.getOrDefault("Action")
  valid_21627317 = validateParameter(valid_21627317, JString, required = true,
                                   default = newJString("ListChangeSets"))
  if valid_21627317 != nil:
    section.add "Action", valid_21627317
  var valid_21627318 = query.getOrDefault("Version")
  valid_21627318 = validateParameter(valid_21627318, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627318 != nil:
    section.add "Version", valid_21627318
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627319 = header.getOrDefault("X-Amz-Date")
  valid_21627319 = validateParameter(valid_21627319, JString, required = false,
                                   default = nil)
  if valid_21627319 != nil:
    section.add "X-Amz-Date", valid_21627319
  var valid_21627320 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627320 = validateParameter(valid_21627320, JString, required = false,
                                   default = nil)
  if valid_21627320 != nil:
    section.add "X-Amz-Security-Token", valid_21627320
  var valid_21627321 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627321 = validateParameter(valid_21627321, JString, required = false,
                                   default = nil)
  if valid_21627321 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627321
  var valid_21627322 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627322 = validateParameter(valid_21627322, JString, required = false,
                                   default = nil)
  if valid_21627322 != nil:
    section.add "X-Amz-Algorithm", valid_21627322
  var valid_21627323 = header.getOrDefault("X-Amz-Signature")
  valid_21627323 = validateParameter(valid_21627323, JString, required = false,
                                   default = nil)
  if valid_21627323 != nil:
    section.add "X-Amz-Signature", valid_21627323
  var valid_21627324 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627324 = validateParameter(valid_21627324, JString, required = false,
                                   default = nil)
  if valid_21627324 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627324
  var valid_21627325 = header.getOrDefault("X-Amz-Credential")
  valid_21627325 = validateParameter(valid_21627325, JString, required = false,
                                   default = nil)
  if valid_21627325 != nil:
    section.add "X-Amz-Credential", valid_21627325
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  section = newJObject()
  var valid_21627326 = formData.getOrDefault("NextToken")
  valid_21627326 = validateParameter(valid_21627326, JString, required = false,
                                   default = nil)
  if valid_21627326 != nil:
    section.add "NextToken", valid_21627326
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21627327 = formData.getOrDefault("StackName")
  valid_21627327 = validateParameter(valid_21627327, JString, required = true,
                                   default = nil)
  if valid_21627327 != nil:
    section.add "StackName", valid_21627327
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627328: Call_PostListChangeSets_21627314; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_21627328.validator(path, query, header, formData, body, _)
  let scheme = call_21627328.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627328.makeUrl(scheme.get, call_21627328.host, call_21627328.base,
                               call_21627328.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627328, uri, valid, _)

proc call*(call_21627329: Call_PostListChangeSets_21627314; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## postListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Version: string (required)
  var query_21627330 = newJObject()
  var formData_21627331 = newJObject()
  add(formData_21627331, "NextToken", newJString(NextToken))
  add(query_21627330, "Action", newJString(Action))
  add(formData_21627331, "StackName", newJString(StackName))
  add(query_21627330, "Version", newJString(Version))
  result = call_21627329.call(nil, query_21627330, nil, formData_21627331, nil)

var postListChangeSets* = Call_PostListChangeSets_21627314(
    name: "postListChangeSets", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListChangeSets",
    validator: validate_PostListChangeSets_21627315, base: "/",
    makeUrl: url_PostListChangeSets_21627316, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListChangeSets_21627297 = ref object of OpenApiRestCall_21625435
proc url_GetListChangeSets_21627299(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListChangeSets_21627298(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  section = newJObject()
  var valid_21627300 = query.getOrDefault("NextToken")
  valid_21627300 = validateParameter(valid_21627300, JString, required = false,
                                   default = nil)
  if valid_21627300 != nil:
    section.add "NextToken", valid_21627300
  var valid_21627301 = query.getOrDefault("Action")
  valid_21627301 = validateParameter(valid_21627301, JString, required = true,
                                   default = newJString("ListChangeSets"))
  if valid_21627301 != nil:
    section.add "Action", valid_21627301
  var valid_21627302 = query.getOrDefault("Version")
  valid_21627302 = validateParameter(valid_21627302, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627302 != nil:
    section.add "Version", valid_21627302
  var valid_21627303 = query.getOrDefault("StackName")
  valid_21627303 = validateParameter(valid_21627303, JString, required = true,
                                   default = nil)
  if valid_21627303 != nil:
    section.add "StackName", valid_21627303
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627304 = header.getOrDefault("X-Amz-Date")
  valid_21627304 = validateParameter(valid_21627304, JString, required = false,
                                   default = nil)
  if valid_21627304 != nil:
    section.add "X-Amz-Date", valid_21627304
  var valid_21627305 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627305 = validateParameter(valid_21627305, JString, required = false,
                                   default = nil)
  if valid_21627305 != nil:
    section.add "X-Amz-Security-Token", valid_21627305
  var valid_21627306 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627306 = validateParameter(valid_21627306, JString, required = false,
                                   default = nil)
  if valid_21627306 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627306
  var valid_21627307 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627307 = validateParameter(valid_21627307, JString, required = false,
                                   default = nil)
  if valid_21627307 != nil:
    section.add "X-Amz-Algorithm", valid_21627307
  var valid_21627308 = header.getOrDefault("X-Amz-Signature")
  valid_21627308 = validateParameter(valid_21627308, JString, required = false,
                                   default = nil)
  if valid_21627308 != nil:
    section.add "X-Amz-Signature", valid_21627308
  var valid_21627309 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627309 = validateParameter(valid_21627309, JString, required = false,
                                   default = nil)
  if valid_21627309 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627309
  var valid_21627310 = header.getOrDefault("X-Amz-Credential")
  valid_21627310 = validateParameter(valid_21627310, JString, required = false,
                                   default = nil)
  if valid_21627310 != nil:
    section.add "X-Amz-Credential", valid_21627310
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627311: Call_GetListChangeSets_21627297; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_21627311.validator(path, query, header, formData, body, _)
  let scheme = call_21627311.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627311.makeUrl(scheme.get, call_21627311.host, call_21627311.base,
                               call_21627311.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627311, uri, valid, _)

proc call*(call_21627312: Call_GetListChangeSets_21627297; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## getListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  var query_21627313 = newJObject()
  add(query_21627313, "NextToken", newJString(NextToken))
  add(query_21627313, "Action", newJString(Action))
  add(query_21627313, "Version", newJString(Version))
  add(query_21627313, "StackName", newJString(StackName))
  result = call_21627312.call(nil, query_21627313, nil, nil, nil)

var getListChangeSets* = Call_GetListChangeSets_21627297(name: "getListChangeSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListChangeSets", validator: validate_GetListChangeSets_21627298,
    base: "/", makeUrl: url_GetListChangeSets_21627299,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListExports_21627348 = ref object of OpenApiRestCall_21625435
proc url_PostListExports_21627350(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListExports_21627349(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627351 = query.getOrDefault("Action")
  valid_21627351 = validateParameter(valid_21627351, JString, required = true,
                                   default = newJString("ListExports"))
  if valid_21627351 != nil:
    section.add "Action", valid_21627351
  var valid_21627352 = query.getOrDefault("Version")
  valid_21627352 = validateParameter(valid_21627352, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627352 != nil:
    section.add "Version", valid_21627352
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627353 = header.getOrDefault("X-Amz-Date")
  valid_21627353 = validateParameter(valid_21627353, JString, required = false,
                                   default = nil)
  if valid_21627353 != nil:
    section.add "X-Amz-Date", valid_21627353
  var valid_21627354 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627354 = validateParameter(valid_21627354, JString, required = false,
                                   default = nil)
  if valid_21627354 != nil:
    section.add "X-Amz-Security-Token", valid_21627354
  var valid_21627355 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627355 = validateParameter(valid_21627355, JString, required = false,
                                   default = nil)
  if valid_21627355 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627355
  var valid_21627356 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627356 = validateParameter(valid_21627356, JString, required = false,
                                   default = nil)
  if valid_21627356 != nil:
    section.add "X-Amz-Algorithm", valid_21627356
  var valid_21627357 = header.getOrDefault("X-Amz-Signature")
  valid_21627357 = validateParameter(valid_21627357, JString, required = false,
                                   default = nil)
  if valid_21627357 != nil:
    section.add "X-Amz-Signature", valid_21627357
  var valid_21627358 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627358 = validateParameter(valid_21627358, JString, required = false,
                                   default = nil)
  if valid_21627358 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627358
  var valid_21627359 = header.getOrDefault("X-Amz-Credential")
  valid_21627359 = validateParameter(valid_21627359, JString, required = false,
                                   default = nil)
  if valid_21627359 != nil:
    section.add "X-Amz-Credential", valid_21627359
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  section = newJObject()
  var valid_21627360 = formData.getOrDefault("NextToken")
  valid_21627360 = validateParameter(valid_21627360, JString, required = false,
                                   default = nil)
  if valid_21627360 != nil:
    section.add "NextToken", valid_21627360
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627361: Call_PostListExports_21627348; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_21627361.validator(path, query, header, formData, body, _)
  let scheme = call_21627361.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627361.makeUrl(scheme.get, call_21627361.host, call_21627361.base,
                               call_21627361.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627361, uri, valid, _)

proc call*(call_21627362: Call_PostListExports_21627348; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## postListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627363 = newJObject()
  var formData_21627364 = newJObject()
  add(formData_21627364, "NextToken", newJString(NextToken))
  add(query_21627363, "Action", newJString(Action))
  add(query_21627363, "Version", newJString(Version))
  result = call_21627362.call(nil, query_21627363, nil, formData_21627364, nil)

var postListExports* = Call_PostListExports_21627348(name: "postListExports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_PostListExports_21627349,
    base: "/", makeUrl: url_PostListExports_21627350,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListExports_21627332 = ref object of OpenApiRestCall_21625435
proc url_GetListExports_21627334(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListExports_21627333(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627335 = query.getOrDefault("NextToken")
  valid_21627335 = validateParameter(valid_21627335, JString, required = false,
                                   default = nil)
  if valid_21627335 != nil:
    section.add "NextToken", valid_21627335
  var valid_21627336 = query.getOrDefault("Action")
  valid_21627336 = validateParameter(valid_21627336, JString, required = true,
                                   default = newJString("ListExports"))
  if valid_21627336 != nil:
    section.add "Action", valid_21627336
  var valid_21627337 = query.getOrDefault("Version")
  valid_21627337 = validateParameter(valid_21627337, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627337 != nil:
    section.add "Version", valid_21627337
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627338 = header.getOrDefault("X-Amz-Date")
  valid_21627338 = validateParameter(valid_21627338, JString, required = false,
                                   default = nil)
  if valid_21627338 != nil:
    section.add "X-Amz-Date", valid_21627338
  var valid_21627339 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627339 = validateParameter(valid_21627339, JString, required = false,
                                   default = nil)
  if valid_21627339 != nil:
    section.add "X-Amz-Security-Token", valid_21627339
  var valid_21627340 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627340 = validateParameter(valid_21627340, JString, required = false,
                                   default = nil)
  if valid_21627340 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627340
  var valid_21627341 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627341 = validateParameter(valid_21627341, JString, required = false,
                                   default = nil)
  if valid_21627341 != nil:
    section.add "X-Amz-Algorithm", valid_21627341
  var valid_21627342 = header.getOrDefault("X-Amz-Signature")
  valid_21627342 = validateParameter(valid_21627342, JString, required = false,
                                   default = nil)
  if valid_21627342 != nil:
    section.add "X-Amz-Signature", valid_21627342
  var valid_21627343 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627343 = validateParameter(valid_21627343, JString, required = false,
                                   default = nil)
  if valid_21627343 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627343
  var valid_21627344 = header.getOrDefault("X-Amz-Credential")
  valid_21627344 = validateParameter(valid_21627344, JString, required = false,
                                   default = nil)
  if valid_21627344 != nil:
    section.add "X-Amz-Credential", valid_21627344
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627345: Call_GetListExports_21627332; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_21627345.validator(path, query, header, formData, body, _)
  let scheme = call_21627345.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627345.makeUrl(scheme.get, call_21627345.host, call_21627345.base,
                               call_21627345.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627345, uri, valid, _)

proc call*(call_21627346: Call_GetListExports_21627332; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## getListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627347 = newJObject()
  add(query_21627347, "NextToken", newJString(NextToken))
  add(query_21627347, "Action", newJString(Action))
  add(query_21627347, "Version", newJString(Version))
  result = call_21627346.call(nil, query_21627347, nil, nil, nil)

var getListExports* = Call_GetListExports_21627332(name: "getListExports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_GetListExports_21627333,
    base: "/", makeUrl: url_GetListExports_21627334,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListImports_21627382 = ref object of OpenApiRestCall_21625435
proc url_PostListImports_21627384(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListImports_21627383(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627385 = query.getOrDefault("Action")
  valid_21627385 = validateParameter(valid_21627385, JString, required = true,
                                   default = newJString("ListImports"))
  if valid_21627385 != nil:
    section.add "Action", valid_21627385
  var valid_21627386 = query.getOrDefault("Version")
  valid_21627386 = validateParameter(valid_21627386, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627386 != nil:
    section.add "Version", valid_21627386
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627387 = header.getOrDefault("X-Amz-Date")
  valid_21627387 = validateParameter(valid_21627387, JString, required = false,
                                   default = nil)
  if valid_21627387 != nil:
    section.add "X-Amz-Date", valid_21627387
  var valid_21627388 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627388 = validateParameter(valid_21627388, JString, required = false,
                                   default = nil)
  if valid_21627388 != nil:
    section.add "X-Amz-Security-Token", valid_21627388
  var valid_21627389 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627389 = validateParameter(valid_21627389, JString, required = false,
                                   default = nil)
  if valid_21627389 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627389
  var valid_21627390 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627390 = validateParameter(valid_21627390, JString, required = false,
                                   default = nil)
  if valid_21627390 != nil:
    section.add "X-Amz-Algorithm", valid_21627390
  var valid_21627391 = header.getOrDefault("X-Amz-Signature")
  valid_21627391 = validateParameter(valid_21627391, JString, required = false,
                                   default = nil)
  if valid_21627391 != nil:
    section.add "X-Amz-Signature", valid_21627391
  var valid_21627392 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627392 = validateParameter(valid_21627392, JString, required = false,
                                   default = nil)
  if valid_21627392 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627392
  var valid_21627393 = header.getOrDefault("X-Amz-Credential")
  valid_21627393 = validateParameter(valid_21627393, JString, required = false,
                                   default = nil)
  if valid_21627393 != nil:
    section.add "X-Amz-Credential", valid_21627393
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  section = newJObject()
  var valid_21627394 = formData.getOrDefault("NextToken")
  valid_21627394 = validateParameter(valid_21627394, JString, required = false,
                                   default = nil)
  if valid_21627394 != nil:
    section.add "NextToken", valid_21627394
  assert formData != nil,
        "formData argument is necessary due to required `ExportName` field"
  var valid_21627395 = formData.getOrDefault("ExportName")
  valid_21627395 = validateParameter(valid_21627395, JString, required = true,
                                   default = nil)
  if valid_21627395 != nil:
    section.add "ExportName", valid_21627395
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627396: Call_PostListImports_21627382; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_21627396.validator(path, query, header, formData, body, _)
  let scheme = call_21627396.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627396.makeUrl(scheme.get, call_21627396.host, call_21627396.base,
                               call_21627396.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627396, uri, valid, _)

proc call*(call_21627397: Call_PostListImports_21627382; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## postListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: string (required)
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: string (required)
  var query_21627398 = newJObject()
  var formData_21627399 = newJObject()
  add(formData_21627399, "NextToken", newJString(NextToken))
  add(query_21627398, "Action", newJString(Action))
  add(formData_21627399, "ExportName", newJString(ExportName))
  add(query_21627398, "Version", newJString(Version))
  result = call_21627397.call(nil, query_21627398, nil, formData_21627399, nil)

var postListImports* = Call_PostListImports_21627382(name: "postListImports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_PostListImports_21627383,
    base: "/", makeUrl: url_PostListImports_21627384,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListImports_21627365 = ref object of OpenApiRestCall_21625435
proc url_GetListImports_21627367(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListImports_21627366(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: JString (required)
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627368 = query.getOrDefault("NextToken")
  valid_21627368 = validateParameter(valid_21627368, JString, required = false,
                                   default = nil)
  if valid_21627368 != nil:
    section.add "NextToken", valid_21627368
  var valid_21627369 = query.getOrDefault("Action")
  valid_21627369 = validateParameter(valid_21627369, JString, required = true,
                                   default = newJString("ListImports"))
  if valid_21627369 != nil:
    section.add "Action", valid_21627369
  var valid_21627370 = query.getOrDefault("ExportName")
  valid_21627370 = validateParameter(valid_21627370, JString, required = true,
                                   default = nil)
  if valid_21627370 != nil:
    section.add "ExportName", valid_21627370
  var valid_21627371 = query.getOrDefault("Version")
  valid_21627371 = validateParameter(valid_21627371, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627371 != nil:
    section.add "Version", valid_21627371
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627372 = header.getOrDefault("X-Amz-Date")
  valid_21627372 = validateParameter(valid_21627372, JString, required = false,
                                   default = nil)
  if valid_21627372 != nil:
    section.add "X-Amz-Date", valid_21627372
  var valid_21627373 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627373 = validateParameter(valid_21627373, JString, required = false,
                                   default = nil)
  if valid_21627373 != nil:
    section.add "X-Amz-Security-Token", valid_21627373
  var valid_21627374 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627374 = validateParameter(valid_21627374, JString, required = false,
                                   default = nil)
  if valid_21627374 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627374
  var valid_21627375 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627375 = validateParameter(valid_21627375, JString, required = false,
                                   default = nil)
  if valid_21627375 != nil:
    section.add "X-Amz-Algorithm", valid_21627375
  var valid_21627376 = header.getOrDefault("X-Amz-Signature")
  valid_21627376 = validateParameter(valid_21627376, JString, required = false,
                                   default = nil)
  if valid_21627376 != nil:
    section.add "X-Amz-Signature", valid_21627376
  var valid_21627377 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627377 = validateParameter(valid_21627377, JString, required = false,
                                   default = nil)
  if valid_21627377 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627377
  var valid_21627378 = header.getOrDefault("X-Amz-Credential")
  valid_21627378 = validateParameter(valid_21627378, JString, required = false,
                                   default = nil)
  if valid_21627378 != nil:
    section.add "X-Amz-Credential", valid_21627378
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627379: Call_GetListImports_21627365; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_21627379.validator(path, query, header, formData, body, _)
  let scheme = call_21627379.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627379.makeUrl(scheme.get, call_21627379.host, call_21627379.base,
                               call_21627379.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627379, uri, valid, _)

proc call*(call_21627380: Call_GetListImports_21627365; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## getListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: string (required)
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: string (required)
  var query_21627381 = newJObject()
  add(query_21627381, "NextToken", newJString(NextToken))
  add(query_21627381, "Action", newJString(Action))
  add(query_21627381, "ExportName", newJString(ExportName))
  add(query_21627381, "Version", newJString(Version))
  result = call_21627380.call(nil, query_21627381, nil, nil, nil)

var getListImports* = Call_GetListImports_21627365(name: "getListImports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_GetListImports_21627366,
    base: "/", makeUrl: url_GetListImports_21627367,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackInstances_21627420 = ref object of OpenApiRestCall_21625435
proc url_PostListStackInstances_21627422(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackInstances_21627421(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627423 = query.getOrDefault("Action")
  valid_21627423 = validateParameter(valid_21627423, JString, required = true,
                                   default = newJString("ListStackInstances"))
  if valid_21627423 != nil:
    section.add "Action", valid_21627423
  var valid_21627424 = query.getOrDefault("Version")
  valid_21627424 = validateParameter(valid_21627424, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627424 != nil:
    section.add "Version", valid_21627424
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627425 = header.getOrDefault("X-Amz-Date")
  valid_21627425 = validateParameter(valid_21627425, JString, required = false,
                                   default = nil)
  if valid_21627425 != nil:
    section.add "X-Amz-Date", valid_21627425
  var valid_21627426 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627426 = validateParameter(valid_21627426, JString, required = false,
                                   default = nil)
  if valid_21627426 != nil:
    section.add "X-Amz-Security-Token", valid_21627426
  var valid_21627427 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627427 = validateParameter(valid_21627427, JString, required = false,
                                   default = nil)
  if valid_21627427 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627427
  var valid_21627428 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627428 = validateParameter(valid_21627428, JString, required = false,
                                   default = nil)
  if valid_21627428 != nil:
    section.add "X-Amz-Algorithm", valid_21627428
  var valid_21627429 = header.getOrDefault("X-Amz-Signature")
  valid_21627429 = validateParameter(valid_21627429, JString, required = false,
                                   default = nil)
  if valid_21627429 != nil:
    section.add "X-Amz-Signature", valid_21627429
  var valid_21627430 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627430 = validateParameter(valid_21627430, JString, required = false,
                                   default = nil)
  if valid_21627430 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627430
  var valid_21627431 = header.getOrDefault("X-Amz-Credential")
  valid_21627431 = validateParameter(valid_21627431, JString, required = false,
                                   default = nil)
  if valid_21627431 != nil:
    section.add "X-Amz-Credential", valid_21627431
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  section = newJObject()
  var valid_21627432 = formData.getOrDefault("NextToken")
  valid_21627432 = validateParameter(valid_21627432, JString, required = false,
                                   default = nil)
  if valid_21627432 != nil:
    section.add "NextToken", valid_21627432
  var valid_21627433 = formData.getOrDefault("MaxResults")
  valid_21627433 = validateParameter(valid_21627433, JInt, required = false,
                                   default = nil)
  if valid_21627433 != nil:
    section.add "MaxResults", valid_21627433
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21627434 = formData.getOrDefault("StackSetName")
  valid_21627434 = validateParameter(valid_21627434, JString, required = true,
                                   default = nil)
  if valid_21627434 != nil:
    section.add "StackSetName", valid_21627434
  var valid_21627435 = formData.getOrDefault("StackInstanceRegion")
  valid_21627435 = validateParameter(valid_21627435, JString, required = false,
                                   default = nil)
  if valid_21627435 != nil:
    section.add "StackInstanceRegion", valid_21627435
  var valid_21627436 = formData.getOrDefault("StackInstanceAccount")
  valid_21627436 = validateParameter(valid_21627436, JString, required = false,
                                   default = nil)
  if valid_21627436 != nil:
    section.add "StackInstanceAccount", valid_21627436
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627437: Call_PostListStackInstances_21627420;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_21627437.validator(path, query, header, formData, body, _)
  let scheme = call_21627437.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627437.makeUrl(scheme.get, call_21627437.host, call_21627437.base,
                               call_21627437.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627437, uri, valid, _)

proc call*(call_21627438: Call_PostListStackInstances_21627420;
          StackSetName: string; NextToken: string = ""; MaxResults: int = 0;
          Action: string = "ListStackInstances"; StackInstanceRegion: string = "";
          StackInstanceAccount: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   Action: string (required)
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   Version: string (required)
  var query_21627439 = newJObject()
  var formData_21627440 = newJObject()
  add(formData_21627440, "NextToken", newJString(NextToken))
  add(formData_21627440, "MaxResults", newJInt(MaxResults))
  add(formData_21627440, "StackSetName", newJString(StackSetName))
  add(query_21627439, "Action", newJString(Action))
  add(formData_21627440, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_21627440, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_21627439, "Version", newJString(Version))
  result = call_21627438.call(nil, query_21627439, nil, formData_21627440, nil)

var postListStackInstances* = Call_PostListStackInstances_21627420(
    name: "postListStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_PostListStackInstances_21627421, base: "/",
    makeUrl: url_PostListStackInstances_21627422,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackInstances_21627400 = ref object of OpenApiRestCall_21625435
proc url_GetListStackInstances_21627402(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackInstances_21627401(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_21627403 = query.getOrDefault("StackInstanceRegion")
  valid_21627403 = validateParameter(valid_21627403, JString, required = false,
                                   default = nil)
  if valid_21627403 != nil:
    section.add "StackInstanceRegion", valid_21627403
  var valid_21627404 = query.getOrDefault("NextToken")
  valid_21627404 = validateParameter(valid_21627404, JString, required = false,
                                   default = nil)
  if valid_21627404 != nil:
    section.add "NextToken", valid_21627404
  var valid_21627405 = query.getOrDefault("Action")
  valid_21627405 = validateParameter(valid_21627405, JString, required = true,
                                   default = newJString("ListStackInstances"))
  if valid_21627405 != nil:
    section.add "Action", valid_21627405
  var valid_21627406 = query.getOrDefault("StackInstanceAccount")
  valid_21627406 = validateParameter(valid_21627406, JString, required = false,
                                   default = nil)
  if valid_21627406 != nil:
    section.add "StackInstanceAccount", valid_21627406
  var valid_21627407 = query.getOrDefault("StackSetName")
  valid_21627407 = validateParameter(valid_21627407, JString, required = true,
                                   default = nil)
  if valid_21627407 != nil:
    section.add "StackSetName", valid_21627407
  var valid_21627408 = query.getOrDefault("Version")
  valid_21627408 = validateParameter(valid_21627408, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627408 != nil:
    section.add "Version", valid_21627408
  var valid_21627409 = query.getOrDefault("MaxResults")
  valid_21627409 = validateParameter(valid_21627409, JInt, required = false,
                                   default = nil)
  if valid_21627409 != nil:
    section.add "MaxResults", valid_21627409
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627410 = header.getOrDefault("X-Amz-Date")
  valid_21627410 = validateParameter(valid_21627410, JString, required = false,
                                   default = nil)
  if valid_21627410 != nil:
    section.add "X-Amz-Date", valid_21627410
  var valid_21627411 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627411 = validateParameter(valid_21627411, JString, required = false,
                                   default = nil)
  if valid_21627411 != nil:
    section.add "X-Amz-Security-Token", valid_21627411
  var valid_21627412 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627412 = validateParameter(valid_21627412, JString, required = false,
                                   default = nil)
  if valid_21627412 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627412
  var valid_21627413 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627413 = validateParameter(valid_21627413, JString, required = false,
                                   default = nil)
  if valid_21627413 != nil:
    section.add "X-Amz-Algorithm", valid_21627413
  var valid_21627414 = header.getOrDefault("X-Amz-Signature")
  valid_21627414 = validateParameter(valid_21627414, JString, required = false,
                                   default = nil)
  if valid_21627414 != nil:
    section.add "X-Amz-Signature", valid_21627414
  var valid_21627415 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627415 = validateParameter(valid_21627415, JString, required = false,
                                   default = nil)
  if valid_21627415 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627415
  var valid_21627416 = header.getOrDefault("X-Amz-Credential")
  valid_21627416 = validateParameter(valid_21627416, JString, required = false,
                                   default = nil)
  if valid_21627416 != nil:
    section.add "X-Amz-Credential", valid_21627416
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627417: Call_GetListStackInstances_21627400;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_21627417.validator(path, query, header, formData, body, _)
  let scheme = call_21627417.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627417.makeUrl(scheme.get, call_21627417.host, call_21627417.base,
                               call_21627417.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627417, uri, valid, _)

proc call*(call_21627418: Call_GetListStackInstances_21627400;
          StackSetName: string; StackInstanceRegion: string = "";
          NextToken: string = ""; Action: string = "ListStackInstances";
          StackInstanceAccount: string = ""; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## getListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_21627419 = newJObject()
  add(query_21627419, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_21627419, "NextToken", newJString(NextToken))
  add(query_21627419, "Action", newJString(Action))
  add(query_21627419, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_21627419, "StackSetName", newJString(StackSetName))
  add(query_21627419, "Version", newJString(Version))
  add(query_21627419, "MaxResults", newJInt(MaxResults))
  result = call_21627418.call(nil, query_21627419, nil, nil, nil)

var getListStackInstances* = Call_GetListStackInstances_21627400(
    name: "getListStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_GetListStackInstances_21627401, base: "/",
    makeUrl: url_GetListStackInstances_21627402,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackResources_21627458 = ref object of OpenApiRestCall_21625435
proc url_PostListStackResources_21627460(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackResources_21627459(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627461 = query.getOrDefault("Action")
  valid_21627461 = validateParameter(valid_21627461, JString, required = true,
                                   default = newJString("ListStackResources"))
  if valid_21627461 != nil:
    section.add "Action", valid_21627461
  var valid_21627462 = query.getOrDefault("Version")
  valid_21627462 = validateParameter(valid_21627462, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627462 != nil:
    section.add "Version", valid_21627462
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627463 = header.getOrDefault("X-Amz-Date")
  valid_21627463 = validateParameter(valid_21627463, JString, required = false,
                                   default = nil)
  if valid_21627463 != nil:
    section.add "X-Amz-Date", valid_21627463
  var valid_21627464 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627464 = validateParameter(valid_21627464, JString, required = false,
                                   default = nil)
  if valid_21627464 != nil:
    section.add "X-Amz-Security-Token", valid_21627464
  var valid_21627465 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627465 = validateParameter(valid_21627465, JString, required = false,
                                   default = nil)
  if valid_21627465 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627465
  var valid_21627466 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627466 = validateParameter(valid_21627466, JString, required = false,
                                   default = nil)
  if valid_21627466 != nil:
    section.add "X-Amz-Algorithm", valid_21627466
  var valid_21627467 = header.getOrDefault("X-Amz-Signature")
  valid_21627467 = validateParameter(valid_21627467, JString, required = false,
                                   default = nil)
  if valid_21627467 != nil:
    section.add "X-Amz-Signature", valid_21627467
  var valid_21627468 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627468 = validateParameter(valid_21627468, JString, required = false,
                                   default = nil)
  if valid_21627468 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627468
  var valid_21627469 = header.getOrDefault("X-Amz-Credential")
  valid_21627469 = validateParameter(valid_21627469, JString, required = false,
                                   default = nil)
  if valid_21627469 != nil:
    section.add "X-Amz-Credential", valid_21627469
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21627470 = formData.getOrDefault("NextToken")
  valid_21627470 = validateParameter(valid_21627470, JString, required = false,
                                   default = nil)
  if valid_21627470 != nil:
    section.add "NextToken", valid_21627470
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21627471 = formData.getOrDefault("StackName")
  valid_21627471 = validateParameter(valid_21627471, JString, required = true,
                                   default = nil)
  if valid_21627471 != nil:
    section.add "StackName", valid_21627471
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627472: Call_PostListStackResources_21627458;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_21627472.validator(path, query, header, formData, body, _)
  let scheme = call_21627472.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627472.makeUrl(scheme.get, call_21627472.host, call_21627472.base,
                               call_21627472.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627472, uri, valid, _)

proc call*(call_21627473: Call_PostListStackResources_21627458; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## postListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_21627474 = newJObject()
  var formData_21627475 = newJObject()
  add(formData_21627475, "NextToken", newJString(NextToken))
  add(query_21627474, "Action", newJString(Action))
  add(formData_21627475, "StackName", newJString(StackName))
  add(query_21627474, "Version", newJString(Version))
  result = call_21627473.call(nil, query_21627474, nil, formData_21627475, nil)

var postListStackResources* = Call_PostListStackResources_21627458(
    name: "postListStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_PostListStackResources_21627459, base: "/",
    makeUrl: url_PostListStackResources_21627460,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackResources_21627441 = ref object of OpenApiRestCall_21625435
proc url_GetListStackResources_21627443(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackResources_21627442(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_21627444 = query.getOrDefault("NextToken")
  valid_21627444 = validateParameter(valid_21627444, JString, required = false,
                                   default = nil)
  if valid_21627444 != nil:
    section.add "NextToken", valid_21627444
  var valid_21627445 = query.getOrDefault("Action")
  valid_21627445 = validateParameter(valid_21627445, JString, required = true,
                                   default = newJString("ListStackResources"))
  if valid_21627445 != nil:
    section.add "Action", valid_21627445
  var valid_21627446 = query.getOrDefault("Version")
  valid_21627446 = validateParameter(valid_21627446, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627446 != nil:
    section.add "Version", valid_21627446
  var valid_21627447 = query.getOrDefault("StackName")
  valid_21627447 = validateParameter(valid_21627447, JString, required = true,
                                   default = nil)
  if valid_21627447 != nil:
    section.add "StackName", valid_21627447
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627448 = header.getOrDefault("X-Amz-Date")
  valid_21627448 = validateParameter(valid_21627448, JString, required = false,
                                   default = nil)
  if valid_21627448 != nil:
    section.add "X-Amz-Date", valid_21627448
  var valid_21627449 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627449 = validateParameter(valid_21627449, JString, required = false,
                                   default = nil)
  if valid_21627449 != nil:
    section.add "X-Amz-Security-Token", valid_21627449
  var valid_21627450 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627450 = validateParameter(valid_21627450, JString, required = false,
                                   default = nil)
  if valid_21627450 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627450
  var valid_21627451 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627451 = validateParameter(valid_21627451, JString, required = false,
                                   default = nil)
  if valid_21627451 != nil:
    section.add "X-Amz-Algorithm", valid_21627451
  var valid_21627452 = header.getOrDefault("X-Amz-Signature")
  valid_21627452 = validateParameter(valid_21627452, JString, required = false,
                                   default = nil)
  if valid_21627452 != nil:
    section.add "X-Amz-Signature", valid_21627452
  var valid_21627453 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627453 = validateParameter(valid_21627453, JString, required = false,
                                   default = nil)
  if valid_21627453 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627453
  var valid_21627454 = header.getOrDefault("X-Amz-Credential")
  valid_21627454 = validateParameter(valid_21627454, JString, required = false,
                                   default = nil)
  if valid_21627454 != nil:
    section.add "X-Amz-Credential", valid_21627454
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627455: Call_GetListStackResources_21627441;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_21627455.validator(path, query, header, formData, body, _)
  let scheme = call_21627455.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627455.makeUrl(scheme.get, call_21627455.host, call_21627455.base,
                               call_21627455.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627455, uri, valid, _)

proc call*(call_21627456: Call_GetListStackResources_21627441; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_21627457 = newJObject()
  add(query_21627457, "NextToken", newJString(NextToken))
  add(query_21627457, "Action", newJString(Action))
  add(query_21627457, "Version", newJString(Version))
  add(query_21627457, "StackName", newJString(StackName))
  result = call_21627456.call(nil, query_21627457, nil, nil, nil)

var getListStackResources* = Call_GetListStackResources_21627441(
    name: "getListStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_GetListStackResources_21627442, base: "/",
    makeUrl: url_GetListStackResources_21627443,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperationResults_21627495 = ref object of OpenApiRestCall_21625435
proc url_PostListStackSetOperationResults_21627497(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperationResults_21627496(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627498 = query.getOrDefault("Action")
  valid_21627498 = validateParameter(valid_21627498, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_21627498 != nil:
    section.add "Action", valid_21627498
  var valid_21627499 = query.getOrDefault("Version")
  valid_21627499 = validateParameter(valid_21627499, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627499 != nil:
    section.add "Version", valid_21627499
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627500 = header.getOrDefault("X-Amz-Date")
  valid_21627500 = validateParameter(valid_21627500, JString, required = false,
                                   default = nil)
  if valid_21627500 != nil:
    section.add "X-Amz-Date", valid_21627500
  var valid_21627501 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627501 = validateParameter(valid_21627501, JString, required = false,
                                   default = nil)
  if valid_21627501 != nil:
    section.add "X-Amz-Security-Token", valid_21627501
  var valid_21627502 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627502 = validateParameter(valid_21627502, JString, required = false,
                                   default = nil)
  if valid_21627502 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627502
  var valid_21627503 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627503 = validateParameter(valid_21627503, JString, required = false,
                                   default = nil)
  if valid_21627503 != nil:
    section.add "X-Amz-Algorithm", valid_21627503
  var valid_21627504 = header.getOrDefault("X-Amz-Signature")
  valid_21627504 = validateParameter(valid_21627504, JString, required = false,
                                   default = nil)
  if valid_21627504 != nil:
    section.add "X-Amz-Signature", valid_21627504
  var valid_21627505 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627505 = validateParameter(valid_21627505, JString, required = false,
                                   default = nil)
  if valid_21627505 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627505
  var valid_21627506 = header.getOrDefault("X-Amz-Credential")
  valid_21627506 = validateParameter(valid_21627506, JString, required = false,
                                   default = nil)
  if valid_21627506 != nil:
    section.add "X-Amz-Credential", valid_21627506
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  section = newJObject()
  var valid_21627507 = formData.getOrDefault("NextToken")
  valid_21627507 = validateParameter(valid_21627507, JString, required = false,
                                   default = nil)
  if valid_21627507 != nil:
    section.add "NextToken", valid_21627507
  var valid_21627508 = formData.getOrDefault("MaxResults")
  valid_21627508 = validateParameter(valid_21627508, JInt, required = false,
                                   default = nil)
  if valid_21627508 != nil:
    section.add "MaxResults", valid_21627508
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21627509 = formData.getOrDefault("StackSetName")
  valid_21627509 = validateParameter(valid_21627509, JString, required = true,
                                   default = nil)
  if valid_21627509 != nil:
    section.add "StackSetName", valid_21627509
  var valid_21627510 = formData.getOrDefault("OperationId")
  valid_21627510 = validateParameter(valid_21627510, JString, required = true,
                                   default = nil)
  if valid_21627510 != nil:
    section.add "OperationId", valid_21627510
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627511: Call_PostListStackSetOperationResults_21627495;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_21627511.validator(path, query, header, formData, body, _)
  let scheme = call_21627511.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627511.makeUrl(scheme.get, call_21627511.host, call_21627511.base,
                               call_21627511.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627511, uri, valid, _)

proc call*(call_21627512: Call_PostListStackSetOperationResults_21627495;
          StackSetName: string; OperationId: string; NextToken: string = "";
          MaxResults: int = 0; Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"): Recallable =
  ## postListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   Action: string (required)
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   Version: string (required)
  var query_21627513 = newJObject()
  var formData_21627514 = newJObject()
  add(formData_21627514, "NextToken", newJString(NextToken))
  add(formData_21627514, "MaxResults", newJInt(MaxResults))
  add(formData_21627514, "StackSetName", newJString(StackSetName))
  add(query_21627513, "Action", newJString(Action))
  add(formData_21627514, "OperationId", newJString(OperationId))
  add(query_21627513, "Version", newJString(Version))
  result = call_21627512.call(nil, query_21627513, nil, formData_21627514, nil)

var postListStackSetOperationResults* = Call_PostListStackSetOperationResults_21627495(
    name: "postListStackSetOperationResults", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_PostListStackSetOperationResults_21627496, base: "/",
    makeUrl: url_PostListStackSetOperationResults_21627497,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperationResults_21627476 = ref object of OpenApiRestCall_21625435
proc url_GetListStackSetOperationResults_21627478(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperationResults_21627477(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_21627479 = query.getOrDefault("NextToken")
  valid_21627479 = validateParameter(valid_21627479, JString, required = false,
                                   default = nil)
  if valid_21627479 != nil:
    section.add "NextToken", valid_21627479
  var valid_21627480 = query.getOrDefault("Action")
  valid_21627480 = validateParameter(valid_21627480, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_21627480 != nil:
    section.add "Action", valid_21627480
  var valid_21627481 = query.getOrDefault("StackSetName")
  valid_21627481 = validateParameter(valid_21627481, JString, required = true,
                                   default = nil)
  if valid_21627481 != nil:
    section.add "StackSetName", valid_21627481
  var valid_21627482 = query.getOrDefault("OperationId")
  valid_21627482 = validateParameter(valid_21627482, JString, required = true,
                                   default = nil)
  if valid_21627482 != nil:
    section.add "OperationId", valid_21627482
  var valid_21627483 = query.getOrDefault("Version")
  valid_21627483 = validateParameter(valid_21627483, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627483 != nil:
    section.add "Version", valid_21627483
  var valid_21627484 = query.getOrDefault("MaxResults")
  valid_21627484 = validateParameter(valid_21627484, JInt, required = false,
                                   default = nil)
  if valid_21627484 != nil:
    section.add "MaxResults", valid_21627484
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627485 = header.getOrDefault("X-Amz-Date")
  valid_21627485 = validateParameter(valid_21627485, JString, required = false,
                                   default = nil)
  if valid_21627485 != nil:
    section.add "X-Amz-Date", valid_21627485
  var valid_21627486 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627486 = validateParameter(valid_21627486, JString, required = false,
                                   default = nil)
  if valid_21627486 != nil:
    section.add "X-Amz-Security-Token", valid_21627486
  var valid_21627487 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627487 = validateParameter(valid_21627487, JString, required = false,
                                   default = nil)
  if valid_21627487 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627487
  var valid_21627488 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627488 = validateParameter(valid_21627488, JString, required = false,
                                   default = nil)
  if valid_21627488 != nil:
    section.add "X-Amz-Algorithm", valid_21627488
  var valid_21627489 = header.getOrDefault("X-Amz-Signature")
  valid_21627489 = validateParameter(valid_21627489, JString, required = false,
                                   default = nil)
  if valid_21627489 != nil:
    section.add "X-Amz-Signature", valid_21627489
  var valid_21627490 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627490 = validateParameter(valid_21627490, JString, required = false,
                                   default = nil)
  if valid_21627490 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627490
  var valid_21627491 = header.getOrDefault("X-Amz-Credential")
  valid_21627491 = validateParameter(valid_21627491, JString, required = false,
                                   default = nil)
  if valid_21627491 != nil:
    section.add "X-Amz-Credential", valid_21627491
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627492: Call_GetListStackSetOperationResults_21627476;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_21627492.validator(path, query, header, formData, body, _)
  let scheme = call_21627492.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627492.makeUrl(scheme.get, call_21627492.host, call_21627492.base,
                               call_21627492.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627492, uri, valid, _)

proc call*(call_21627493: Call_GetListStackSetOperationResults_21627476;
          StackSetName: string; OperationId: string; NextToken: string = "";
          Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_21627494 = newJObject()
  add(query_21627494, "NextToken", newJString(NextToken))
  add(query_21627494, "Action", newJString(Action))
  add(query_21627494, "StackSetName", newJString(StackSetName))
  add(query_21627494, "OperationId", newJString(OperationId))
  add(query_21627494, "Version", newJString(Version))
  add(query_21627494, "MaxResults", newJInt(MaxResults))
  result = call_21627493.call(nil, query_21627494, nil, nil, nil)

var getListStackSetOperationResults* = Call_GetListStackSetOperationResults_21627476(
    name: "getListStackSetOperationResults", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_GetListStackSetOperationResults_21627477, base: "/",
    makeUrl: url_GetListStackSetOperationResults_21627478,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperations_21627533 = ref object of OpenApiRestCall_21625435
proc url_PostListStackSetOperations_21627535(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperations_21627534(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627536 = query.getOrDefault("Action")
  valid_21627536 = validateParameter(valid_21627536, JString, required = true, default = newJString(
      "ListStackSetOperations"))
  if valid_21627536 != nil:
    section.add "Action", valid_21627536
  var valid_21627537 = query.getOrDefault("Version")
  valid_21627537 = validateParameter(valid_21627537, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627537 != nil:
    section.add "Version", valid_21627537
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627538 = header.getOrDefault("X-Amz-Date")
  valid_21627538 = validateParameter(valid_21627538, JString, required = false,
                                   default = nil)
  if valid_21627538 != nil:
    section.add "X-Amz-Date", valid_21627538
  var valid_21627539 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627539 = validateParameter(valid_21627539, JString, required = false,
                                   default = nil)
  if valid_21627539 != nil:
    section.add "X-Amz-Security-Token", valid_21627539
  var valid_21627540 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627540 = validateParameter(valid_21627540, JString, required = false,
                                   default = nil)
  if valid_21627540 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627540
  var valid_21627541 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627541 = validateParameter(valid_21627541, JString, required = false,
                                   default = nil)
  if valid_21627541 != nil:
    section.add "X-Amz-Algorithm", valid_21627541
  var valid_21627542 = header.getOrDefault("X-Amz-Signature")
  valid_21627542 = validateParameter(valid_21627542, JString, required = false,
                                   default = nil)
  if valid_21627542 != nil:
    section.add "X-Amz-Signature", valid_21627542
  var valid_21627543 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627543 = validateParameter(valid_21627543, JString, required = false,
                                   default = nil)
  if valid_21627543 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627543
  var valid_21627544 = header.getOrDefault("X-Amz-Credential")
  valid_21627544 = validateParameter(valid_21627544, JString, required = false,
                                   default = nil)
  if valid_21627544 != nil:
    section.add "X-Amz-Credential", valid_21627544
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  section = newJObject()
  var valid_21627545 = formData.getOrDefault("NextToken")
  valid_21627545 = validateParameter(valid_21627545, JString, required = false,
                                   default = nil)
  if valid_21627545 != nil:
    section.add "NextToken", valid_21627545
  var valid_21627546 = formData.getOrDefault("MaxResults")
  valid_21627546 = validateParameter(valid_21627546, JInt, required = false,
                                   default = nil)
  if valid_21627546 != nil:
    section.add "MaxResults", valid_21627546
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21627547 = formData.getOrDefault("StackSetName")
  valid_21627547 = validateParameter(valid_21627547, JString, required = true,
                                   default = nil)
  if valid_21627547 != nil:
    section.add "StackSetName", valid_21627547
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627548: Call_PostListStackSetOperations_21627533;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_21627548.validator(path, query, header, formData, body, _)
  let scheme = call_21627548.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627548.makeUrl(scheme.get, call_21627548.host, call_21627548.base,
                               call_21627548.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627548, uri, valid, _)

proc call*(call_21627549: Call_PostListStackSetOperations_21627533;
          StackSetName: string; NextToken: string = ""; MaxResults: int = 0;
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15"): Recallable =
  ## postListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627550 = newJObject()
  var formData_21627551 = newJObject()
  add(formData_21627551, "NextToken", newJString(NextToken))
  add(formData_21627551, "MaxResults", newJInt(MaxResults))
  add(formData_21627551, "StackSetName", newJString(StackSetName))
  add(query_21627550, "Action", newJString(Action))
  add(query_21627550, "Version", newJString(Version))
  result = call_21627549.call(nil, query_21627550, nil, formData_21627551, nil)

var postListStackSetOperations* = Call_PostListStackSetOperations_21627533(
    name: "postListStackSetOperations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_PostListStackSetOperations_21627534, base: "/",
    makeUrl: url_PostListStackSetOperations_21627535,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperations_21627515 = ref object of OpenApiRestCall_21625435
proc url_GetListStackSetOperations_21627517(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperations_21627516(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_21627518 = query.getOrDefault("NextToken")
  valid_21627518 = validateParameter(valid_21627518, JString, required = false,
                                   default = nil)
  if valid_21627518 != nil:
    section.add "NextToken", valid_21627518
  var valid_21627519 = query.getOrDefault("Action")
  valid_21627519 = validateParameter(valid_21627519, JString, required = true, default = newJString(
      "ListStackSetOperations"))
  if valid_21627519 != nil:
    section.add "Action", valid_21627519
  var valid_21627520 = query.getOrDefault("StackSetName")
  valid_21627520 = validateParameter(valid_21627520, JString, required = true,
                                   default = nil)
  if valid_21627520 != nil:
    section.add "StackSetName", valid_21627520
  var valid_21627521 = query.getOrDefault("Version")
  valid_21627521 = validateParameter(valid_21627521, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627521 != nil:
    section.add "Version", valid_21627521
  var valid_21627522 = query.getOrDefault("MaxResults")
  valid_21627522 = validateParameter(valid_21627522, JInt, required = false,
                                   default = nil)
  if valid_21627522 != nil:
    section.add "MaxResults", valid_21627522
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627523 = header.getOrDefault("X-Amz-Date")
  valid_21627523 = validateParameter(valid_21627523, JString, required = false,
                                   default = nil)
  if valid_21627523 != nil:
    section.add "X-Amz-Date", valid_21627523
  var valid_21627524 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627524 = validateParameter(valid_21627524, JString, required = false,
                                   default = nil)
  if valid_21627524 != nil:
    section.add "X-Amz-Security-Token", valid_21627524
  var valid_21627525 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627525 = validateParameter(valid_21627525, JString, required = false,
                                   default = nil)
  if valid_21627525 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627525
  var valid_21627526 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627526 = validateParameter(valid_21627526, JString, required = false,
                                   default = nil)
  if valid_21627526 != nil:
    section.add "X-Amz-Algorithm", valid_21627526
  var valid_21627527 = header.getOrDefault("X-Amz-Signature")
  valid_21627527 = validateParameter(valid_21627527, JString, required = false,
                                   default = nil)
  if valid_21627527 != nil:
    section.add "X-Amz-Signature", valid_21627527
  var valid_21627528 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627528 = validateParameter(valid_21627528, JString, required = false,
                                   default = nil)
  if valid_21627528 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627528
  var valid_21627529 = header.getOrDefault("X-Amz-Credential")
  valid_21627529 = validateParameter(valid_21627529, JString, required = false,
                                   default = nil)
  if valid_21627529 != nil:
    section.add "X-Amz-Credential", valid_21627529
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627530: Call_GetListStackSetOperations_21627515;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_21627530.validator(path, query, header, formData, body, _)
  let scheme = call_21627530.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627530.makeUrl(scheme.get, call_21627530.host, call_21627530.base,
                               call_21627530.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627530, uri, valid, _)

proc call*(call_21627531: Call_GetListStackSetOperations_21627515;
          StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## getListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_21627532 = newJObject()
  add(query_21627532, "NextToken", newJString(NextToken))
  add(query_21627532, "Action", newJString(Action))
  add(query_21627532, "StackSetName", newJString(StackSetName))
  add(query_21627532, "Version", newJString(Version))
  add(query_21627532, "MaxResults", newJInt(MaxResults))
  result = call_21627531.call(nil, query_21627532, nil, nil, nil)

var getListStackSetOperations* = Call_GetListStackSetOperations_21627515(
    name: "getListStackSetOperations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_GetListStackSetOperations_21627516, base: "/",
    makeUrl: url_GetListStackSetOperations_21627517,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSets_21627570 = ref object of OpenApiRestCall_21625435
proc url_PostListStackSets_21627572(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSets_21627571(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627573 = query.getOrDefault("Action")
  valid_21627573 = validateParameter(valid_21627573, JString, required = true,
                                   default = newJString("ListStackSets"))
  if valid_21627573 != nil:
    section.add "Action", valid_21627573
  var valid_21627574 = query.getOrDefault("Version")
  valid_21627574 = validateParameter(valid_21627574, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627574 != nil:
    section.add "Version", valid_21627574
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627575 = header.getOrDefault("X-Amz-Date")
  valid_21627575 = validateParameter(valid_21627575, JString, required = false,
                                   default = nil)
  if valid_21627575 != nil:
    section.add "X-Amz-Date", valid_21627575
  var valid_21627576 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627576 = validateParameter(valid_21627576, JString, required = false,
                                   default = nil)
  if valid_21627576 != nil:
    section.add "X-Amz-Security-Token", valid_21627576
  var valid_21627577 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627577 = validateParameter(valid_21627577, JString, required = false,
                                   default = nil)
  if valid_21627577 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627577
  var valid_21627578 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627578 = validateParameter(valid_21627578, JString, required = false,
                                   default = nil)
  if valid_21627578 != nil:
    section.add "X-Amz-Algorithm", valid_21627578
  var valid_21627579 = header.getOrDefault("X-Amz-Signature")
  valid_21627579 = validateParameter(valid_21627579, JString, required = false,
                                   default = nil)
  if valid_21627579 != nil:
    section.add "X-Amz-Signature", valid_21627579
  var valid_21627580 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627580 = validateParameter(valid_21627580, JString, required = false,
                                   default = nil)
  if valid_21627580 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627580
  var valid_21627581 = header.getOrDefault("X-Amz-Credential")
  valid_21627581 = validateParameter(valid_21627581, JString, required = false,
                                   default = nil)
  if valid_21627581 != nil:
    section.add "X-Amz-Credential", valid_21627581
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  section = newJObject()
  var valid_21627582 = formData.getOrDefault("NextToken")
  valid_21627582 = validateParameter(valid_21627582, JString, required = false,
                                   default = nil)
  if valid_21627582 != nil:
    section.add "NextToken", valid_21627582
  var valid_21627583 = formData.getOrDefault("MaxResults")
  valid_21627583 = validateParameter(valid_21627583, JInt, required = false,
                                   default = nil)
  if valid_21627583 != nil:
    section.add "MaxResults", valid_21627583
  var valid_21627584 = formData.getOrDefault("Status")
  valid_21627584 = validateParameter(valid_21627584, JString, required = false,
                                   default = newJString("ACTIVE"))
  if valid_21627584 != nil:
    section.add "Status", valid_21627584
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627585: Call_PostListStackSets_21627570; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_21627585.validator(path, query, header, formData, body, _)
  let scheme = call_21627585.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627585.makeUrl(scheme.get, call_21627585.host, call_21627585.base,
                               call_21627585.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627585, uri, valid, _)

proc call*(call_21627586: Call_PostListStackSets_21627570; NextToken: string = "";
          MaxResults: int = 0; Status: string = "ACTIVE";
          Action: string = "ListStackSets"; Version: string = "2010-05-15"): Recallable =
  ## postListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21627587 = newJObject()
  var formData_21627588 = newJObject()
  add(formData_21627588, "NextToken", newJString(NextToken))
  add(formData_21627588, "MaxResults", newJInt(MaxResults))
  add(formData_21627588, "Status", newJString(Status))
  add(query_21627587, "Action", newJString(Action))
  add(query_21627587, "Version", newJString(Version))
  result = call_21627586.call(nil, query_21627587, nil, formData_21627588, nil)

var postListStackSets* = Call_PostListStackSets_21627570(name: "postListStackSets",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_PostListStackSets_21627571,
    base: "/", makeUrl: url_PostListStackSets_21627572,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSets_21627552 = ref object of OpenApiRestCall_21625435
proc url_GetListStackSets_21627554(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSets_21627553(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_21627555 = query.getOrDefault("Status")
  valid_21627555 = validateParameter(valid_21627555, JString, required = false,
                                   default = newJString("ACTIVE"))
  if valid_21627555 != nil:
    section.add "Status", valid_21627555
  var valid_21627556 = query.getOrDefault("NextToken")
  valid_21627556 = validateParameter(valid_21627556, JString, required = false,
                                   default = nil)
  if valid_21627556 != nil:
    section.add "NextToken", valid_21627556
  var valid_21627557 = query.getOrDefault("Action")
  valid_21627557 = validateParameter(valid_21627557, JString, required = true,
                                   default = newJString("ListStackSets"))
  if valid_21627557 != nil:
    section.add "Action", valid_21627557
  var valid_21627558 = query.getOrDefault("Version")
  valid_21627558 = validateParameter(valid_21627558, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627558 != nil:
    section.add "Version", valid_21627558
  var valid_21627559 = query.getOrDefault("MaxResults")
  valid_21627559 = validateParameter(valid_21627559, JInt, required = false,
                                   default = nil)
  if valid_21627559 != nil:
    section.add "MaxResults", valid_21627559
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627560 = header.getOrDefault("X-Amz-Date")
  valid_21627560 = validateParameter(valid_21627560, JString, required = false,
                                   default = nil)
  if valid_21627560 != nil:
    section.add "X-Amz-Date", valid_21627560
  var valid_21627561 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627561 = validateParameter(valid_21627561, JString, required = false,
                                   default = nil)
  if valid_21627561 != nil:
    section.add "X-Amz-Security-Token", valid_21627561
  var valid_21627562 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627562 = validateParameter(valid_21627562, JString, required = false,
                                   default = nil)
  if valid_21627562 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627562
  var valid_21627563 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627563 = validateParameter(valid_21627563, JString, required = false,
                                   default = nil)
  if valid_21627563 != nil:
    section.add "X-Amz-Algorithm", valid_21627563
  var valid_21627564 = header.getOrDefault("X-Amz-Signature")
  valid_21627564 = validateParameter(valid_21627564, JString, required = false,
                                   default = nil)
  if valid_21627564 != nil:
    section.add "X-Amz-Signature", valid_21627564
  var valid_21627565 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627565 = validateParameter(valid_21627565, JString, required = false,
                                   default = nil)
  if valid_21627565 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627565
  var valid_21627566 = header.getOrDefault("X-Amz-Credential")
  valid_21627566 = validateParameter(valid_21627566, JString, required = false,
                                   default = nil)
  if valid_21627566 != nil:
    section.add "X-Amz-Credential", valid_21627566
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627567: Call_GetListStackSets_21627552; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_21627567.validator(path, query, header, formData, body, _)
  let scheme = call_21627567.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627567.makeUrl(scheme.get, call_21627567.host, call_21627567.base,
                               call_21627567.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627567, uri, valid, _)

proc call*(call_21627568: Call_GetListStackSets_21627552;
          Status: string = "ACTIVE"; NextToken: string = "";
          Action: string = "ListStackSets"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## getListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_21627569 = newJObject()
  add(query_21627569, "Status", newJString(Status))
  add(query_21627569, "NextToken", newJString(NextToken))
  add(query_21627569, "Action", newJString(Action))
  add(query_21627569, "Version", newJString(Version))
  add(query_21627569, "MaxResults", newJInt(MaxResults))
  result = call_21627568.call(nil, query_21627569, nil, nil, nil)

var getListStackSets* = Call_GetListStackSets_21627552(name: "getListStackSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_GetListStackSets_21627553,
    base: "/", makeUrl: url_GetListStackSets_21627554,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStacks_21627606 = ref object of OpenApiRestCall_21625435
proc url_PostListStacks_21627608(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStacks_21627607(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627609 = query.getOrDefault("Action")
  valid_21627609 = validateParameter(valid_21627609, JString, required = true,
                                   default = newJString("ListStacks"))
  if valid_21627609 != nil:
    section.add "Action", valid_21627609
  var valid_21627610 = query.getOrDefault("Version")
  valid_21627610 = validateParameter(valid_21627610, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627610 != nil:
    section.add "Version", valid_21627610
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627611 = header.getOrDefault("X-Amz-Date")
  valid_21627611 = validateParameter(valid_21627611, JString, required = false,
                                   default = nil)
  if valid_21627611 != nil:
    section.add "X-Amz-Date", valid_21627611
  var valid_21627612 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627612 = validateParameter(valid_21627612, JString, required = false,
                                   default = nil)
  if valid_21627612 != nil:
    section.add "X-Amz-Security-Token", valid_21627612
  var valid_21627613 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627613 = validateParameter(valid_21627613, JString, required = false,
                                   default = nil)
  if valid_21627613 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627613
  var valid_21627614 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627614 = validateParameter(valid_21627614, JString, required = false,
                                   default = nil)
  if valid_21627614 != nil:
    section.add "X-Amz-Algorithm", valid_21627614
  var valid_21627615 = header.getOrDefault("X-Amz-Signature")
  valid_21627615 = validateParameter(valid_21627615, JString, required = false,
                                   default = nil)
  if valid_21627615 != nil:
    section.add "X-Amz-Signature", valid_21627615
  var valid_21627616 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627616 = validateParameter(valid_21627616, JString, required = false,
                                   default = nil)
  if valid_21627616 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627616
  var valid_21627617 = header.getOrDefault("X-Amz-Credential")
  valid_21627617 = validateParameter(valid_21627617, JString, required = false,
                                   default = nil)
  if valid_21627617 != nil:
    section.add "X-Amz-Credential", valid_21627617
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  section = newJObject()
  var valid_21627618 = formData.getOrDefault("NextToken")
  valid_21627618 = validateParameter(valid_21627618, JString, required = false,
                                   default = nil)
  if valid_21627618 != nil:
    section.add "NextToken", valid_21627618
  var valid_21627619 = formData.getOrDefault("StackStatusFilter")
  valid_21627619 = validateParameter(valid_21627619, JArray, required = false,
                                   default = nil)
  if valid_21627619 != nil:
    section.add "StackStatusFilter", valid_21627619
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627620: Call_PostListStacks_21627606; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_21627620.validator(path, query, header, formData, body, _)
  let scheme = call_21627620.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627620.makeUrl(scheme.get, call_21627620.host, call_21627620.base,
                               call_21627620.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627620, uri, valid, _)

proc call*(call_21627621: Call_PostListStacks_21627606; NextToken: string = "";
          Action: string = "ListStacks"; Version: string = "2010-05-15";
          StackStatusFilter: JsonNode = nil): Recallable =
  ## postListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  var query_21627622 = newJObject()
  var formData_21627623 = newJObject()
  add(formData_21627623, "NextToken", newJString(NextToken))
  add(query_21627622, "Action", newJString(Action))
  add(query_21627622, "Version", newJString(Version))
  if StackStatusFilter != nil:
    formData_21627623.add "StackStatusFilter", StackStatusFilter
  result = call_21627621.call(nil, query_21627622, nil, formData_21627623, nil)

var postListStacks* = Call_PostListStacks_21627606(name: "postListStacks",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_PostListStacks_21627607,
    base: "/", makeUrl: url_PostListStacks_21627608,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStacks_21627589 = ref object of OpenApiRestCall_21625435
proc url_GetListStacks_21627591(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStacks_21627590(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode; _: string = ""): JsonNode {.nosinks.} =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: JString (required)
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627592 = query.getOrDefault("NextToken")
  valid_21627592 = validateParameter(valid_21627592, JString, required = false,
                                   default = nil)
  if valid_21627592 != nil:
    section.add "NextToken", valid_21627592
  var valid_21627593 = query.getOrDefault("Action")
  valid_21627593 = validateParameter(valid_21627593, JString, required = true,
                                   default = newJString("ListStacks"))
  if valid_21627593 != nil:
    section.add "Action", valid_21627593
  var valid_21627594 = query.getOrDefault("StackStatusFilter")
  valid_21627594 = validateParameter(valid_21627594, JArray, required = false,
                                   default = nil)
  if valid_21627594 != nil:
    section.add "StackStatusFilter", valid_21627594
  var valid_21627595 = query.getOrDefault("Version")
  valid_21627595 = validateParameter(valid_21627595, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627595 != nil:
    section.add "Version", valid_21627595
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627596 = header.getOrDefault("X-Amz-Date")
  valid_21627596 = validateParameter(valid_21627596, JString, required = false,
                                   default = nil)
  if valid_21627596 != nil:
    section.add "X-Amz-Date", valid_21627596
  var valid_21627597 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627597 = validateParameter(valid_21627597, JString, required = false,
                                   default = nil)
  if valid_21627597 != nil:
    section.add "X-Amz-Security-Token", valid_21627597
  var valid_21627598 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627598 = validateParameter(valid_21627598, JString, required = false,
                                   default = nil)
  if valid_21627598 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627598
  var valid_21627599 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627599 = validateParameter(valid_21627599, JString, required = false,
                                   default = nil)
  if valid_21627599 != nil:
    section.add "X-Amz-Algorithm", valid_21627599
  var valid_21627600 = header.getOrDefault("X-Amz-Signature")
  valid_21627600 = validateParameter(valid_21627600, JString, required = false,
                                   default = nil)
  if valid_21627600 != nil:
    section.add "X-Amz-Signature", valid_21627600
  var valid_21627601 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627601 = validateParameter(valid_21627601, JString, required = false,
                                   default = nil)
  if valid_21627601 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627601
  var valid_21627602 = header.getOrDefault("X-Amz-Credential")
  valid_21627602 = validateParameter(valid_21627602, JString, required = false,
                                   default = nil)
  if valid_21627602 != nil:
    section.add "X-Amz-Credential", valid_21627602
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627603: Call_GetListStacks_21627589; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_21627603.validator(path, query, header, formData, body, _)
  let scheme = call_21627603.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627603.makeUrl(scheme.get, call_21627603.host, call_21627603.base,
                               call_21627603.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627603, uri, valid, _)

proc call*(call_21627604: Call_GetListStacks_21627589; NextToken: string = "";
          Action: string = "ListStacks"; StackStatusFilter: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## getListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Version: string (required)
  var query_21627605 = newJObject()
  add(query_21627605, "NextToken", newJString(NextToken))
  add(query_21627605, "Action", newJString(Action))
  if StackStatusFilter != nil:
    query_21627605.add "StackStatusFilter", StackStatusFilter
  add(query_21627605, "Version", newJString(Version))
  result = call_21627604.call(nil, query_21627605, nil, nil, nil)

var getListStacks* = Call_GetListStacks_21627589(name: "getListStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_GetListStacks_21627590,
    base: "/", makeUrl: url_GetListStacks_21627591,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypeRegistrations_21627645 = ref object of OpenApiRestCall_21625435
proc url_PostListTypeRegistrations_21627647(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypeRegistrations_21627646(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns a list of registration tokens for the specified type(s).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627648 = query.getOrDefault("Action")
  valid_21627648 = validateParameter(valid_21627648, JString, required = true, default = newJString(
      "ListTypeRegistrations"))
  if valid_21627648 != nil:
    section.add "Action", valid_21627648
  var valid_21627649 = query.getOrDefault("Version")
  valid_21627649 = validateParameter(valid_21627649, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627649 != nil:
    section.add "Version", valid_21627649
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627650 = header.getOrDefault("X-Amz-Date")
  valid_21627650 = validateParameter(valid_21627650, JString, required = false,
                                   default = nil)
  if valid_21627650 != nil:
    section.add "X-Amz-Date", valid_21627650
  var valid_21627651 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627651 = validateParameter(valid_21627651, JString, required = false,
                                   default = nil)
  if valid_21627651 != nil:
    section.add "X-Amz-Security-Token", valid_21627651
  var valid_21627652 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627652 = validateParameter(valid_21627652, JString, required = false,
                                   default = nil)
  if valid_21627652 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627652
  var valid_21627653 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627653 = validateParameter(valid_21627653, JString, required = false,
                                   default = nil)
  if valid_21627653 != nil:
    section.add "X-Amz-Algorithm", valid_21627653
  var valid_21627654 = header.getOrDefault("X-Amz-Signature")
  valid_21627654 = validateParameter(valid_21627654, JString, required = false,
                                   default = nil)
  if valid_21627654 != nil:
    section.add "X-Amz-Signature", valid_21627654
  var valid_21627655 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627655 = validateParameter(valid_21627655, JString, required = false,
                                   default = nil)
  if valid_21627655 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627655
  var valid_21627656 = header.getOrDefault("X-Amz-Credential")
  valid_21627656 = validateParameter(valid_21627656, JString, required = false,
                                   default = nil)
  if valid_21627656 != nil:
    section.add "X-Amz-Credential", valid_21627656
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   TypeArn: JString
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   RegistrationStatusFilter: JString
  ##                           : <p>The current status of the type registration request.</p> <p>The default is <code>IN_PROGRESS</code>.</p>
  section = newJObject()
  var valid_21627657 = formData.getOrDefault("NextToken")
  valid_21627657 = validateParameter(valid_21627657, JString, required = false,
                                   default = nil)
  if valid_21627657 != nil:
    section.add "NextToken", valid_21627657
  var valid_21627658 = formData.getOrDefault("MaxResults")
  valid_21627658 = validateParameter(valid_21627658, JInt, required = false,
                                   default = nil)
  if valid_21627658 != nil:
    section.add "MaxResults", valid_21627658
  var valid_21627659 = formData.getOrDefault("Type")
  valid_21627659 = validateParameter(valid_21627659, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627659 != nil:
    section.add "Type", valid_21627659
  var valid_21627660 = formData.getOrDefault("TypeArn")
  valid_21627660 = validateParameter(valid_21627660, JString, required = false,
                                   default = nil)
  if valid_21627660 != nil:
    section.add "TypeArn", valid_21627660
  var valid_21627661 = formData.getOrDefault("TypeName")
  valid_21627661 = validateParameter(valid_21627661, JString, required = false,
                                   default = nil)
  if valid_21627661 != nil:
    section.add "TypeName", valid_21627661
  var valid_21627662 = formData.getOrDefault("RegistrationStatusFilter")
  valid_21627662 = validateParameter(valid_21627662, JString, required = false,
                                   default = newJString("COMPLETE"))
  if valid_21627662 != nil:
    section.add "RegistrationStatusFilter", valid_21627662
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627663: Call_PostListTypeRegistrations_21627645;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns a list of registration tokens for the specified type(s).
  ## 
  let valid = call_21627663.validator(path, query, header, formData, body, _)
  let scheme = call_21627663.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627663.makeUrl(scheme.get, call_21627663.host, call_21627663.base,
                               call_21627663.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627663, uri, valid, _)

proc call*(call_21627664: Call_PostListTypeRegistrations_21627645;
          NextToken: string = ""; MaxResults: int = 0; Type: string = "RESOURCE";
          TypeArn: string = ""; Action: string = "ListTypeRegistrations";
          TypeName: string = ""; RegistrationStatusFilter: string = "COMPLETE";
          Version: string = "2010-05-15"): Recallable =
  ## postListTypeRegistrations
  ## Returns a list of registration tokens for the specified type(s).
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   TypeArn: string
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   RegistrationStatusFilter: string
  ##                           : <p>The current status of the type registration request.</p> <p>The default is <code>IN_PROGRESS</code>.</p>
  ##   Version: string (required)
  var query_21627665 = newJObject()
  var formData_21627666 = newJObject()
  add(formData_21627666, "NextToken", newJString(NextToken))
  add(formData_21627666, "MaxResults", newJInt(MaxResults))
  add(formData_21627666, "Type", newJString(Type))
  add(formData_21627666, "TypeArn", newJString(TypeArn))
  add(query_21627665, "Action", newJString(Action))
  add(formData_21627666, "TypeName", newJString(TypeName))
  add(formData_21627666, "RegistrationStatusFilter",
      newJString(RegistrationStatusFilter))
  add(query_21627665, "Version", newJString(Version))
  result = call_21627664.call(nil, query_21627665, nil, formData_21627666, nil)

var postListTypeRegistrations* = Call_PostListTypeRegistrations_21627645(
    name: "postListTypeRegistrations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeRegistrations",
    validator: validate_PostListTypeRegistrations_21627646, base: "/",
    makeUrl: url_PostListTypeRegistrations_21627647,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypeRegistrations_21627624 = ref object of OpenApiRestCall_21625435
proc url_GetListTypeRegistrations_21627626(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypeRegistrations_21627625(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns a list of registration tokens for the specified type(s).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   RegistrationStatusFilter: JString
  ##                           : <p>The current status of the type registration request.</p> <p>The default is <code>IN_PROGRESS</code>.</p>
  ##   Action: JString (required)
  ##   TypeArn: JString
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_21627627 = query.getOrDefault("TypeName")
  valid_21627627 = validateParameter(valid_21627627, JString, required = false,
                                   default = nil)
  if valid_21627627 != nil:
    section.add "TypeName", valid_21627627
  var valid_21627628 = query.getOrDefault("NextToken")
  valid_21627628 = validateParameter(valid_21627628, JString, required = false,
                                   default = nil)
  if valid_21627628 != nil:
    section.add "NextToken", valid_21627628
  var valid_21627629 = query.getOrDefault("Type")
  valid_21627629 = validateParameter(valid_21627629, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627629 != nil:
    section.add "Type", valid_21627629
  var valid_21627630 = query.getOrDefault("RegistrationStatusFilter")
  valid_21627630 = validateParameter(valid_21627630, JString, required = false,
                                   default = newJString("COMPLETE"))
  if valid_21627630 != nil:
    section.add "RegistrationStatusFilter", valid_21627630
  var valid_21627631 = query.getOrDefault("Action")
  valid_21627631 = validateParameter(valid_21627631, JString, required = true, default = newJString(
      "ListTypeRegistrations"))
  if valid_21627631 != nil:
    section.add "Action", valid_21627631
  var valid_21627632 = query.getOrDefault("TypeArn")
  valid_21627632 = validateParameter(valid_21627632, JString, required = false,
                                   default = nil)
  if valid_21627632 != nil:
    section.add "TypeArn", valid_21627632
  var valid_21627633 = query.getOrDefault("Version")
  valid_21627633 = validateParameter(valid_21627633, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627633 != nil:
    section.add "Version", valid_21627633
  var valid_21627634 = query.getOrDefault("MaxResults")
  valid_21627634 = validateParameter(valid_21627634, JInt, required = false,
                                   default = nil)
  if valid_21627634 != nil:
    section.add "MaxResults", valid_21627634
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627635 = header.getOrDefault("X-Amz-Date")
  valid_21627635 = validateParameter(valid_21627635, JString, required = false,
                                   default = nil)
  if valid_21627635 != nil:
    section.add "X-Amz-Date", valid_21627635
  var valid_21627636 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627636 = validateParameter(valid_21627636, JString, required = false,
                                   default = nil)
  if valid_21627636 != nil:
    section.add "X-Amz-Security-Token", valid_21627636
  var valid_21627637 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627637 = validateParameter(valid_21627637, JString, required = false,
                                   default = nil)
  if valid_21627637 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627637
  var valid_21627638 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627638 = validateParameter(valid_21627638, JString, required = false,
                                   default = nil)
  if valid_21627638 != nil:
    section.add "X-Amz-Algorithm", valid_21627638
  var valid_21627639 = header.getOrDefault("X-Amz-Signature")
  valid_21627639 = validateParameter(valid_21627639, JString, required = false,
                                   default = nil)
  if valid_21627639 != nil:
    section.add "X-Amz-Signature", valid_21627639
  var valid_21627640 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627640 = validateParameter(valid_21627640, JString, required = false,
                                   default = nil)
  if valid_21627640 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627640
  var valid_21627641 = header.getOrDefault("X-Amz-Credential")
  valid_21627641 = validateParameter(valid_21627641, JString, required = false,
                                   default = nil)
  if valid_21627641 != nil:
    section.add "X-Amz-Credential", valid_21627641
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627642: Call_GetListTypeRegistrations_21627624;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns a list of registration tokens for the specified type(s).
  ## 
  let valid = call_21627642.validator(path, query, header, formData, body, _)
  let scheme = call_21627642.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627642.makeUrl(scheme.get, call_21627642.host, call_21627642.base,
                               call_21627642.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627642, uri, valid, _)

proc call*(call_21627643: Call_GetListTypeRegistrations_21627624;
          TypeName: string = ""; NextToken: string = ""; Type: string = "RESOURCE";
          RegistrationStatusFilter: string = "COMPLETE";
          Action: string = "ListTypeRegistrations"; TypeArn: string = "";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getListTypeRegistrations
  ## Returns a list of registration tokens for the specified type(s).
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   RegistrationStatusFilter: string
  ##                           : <p>The current status of the type registration request.</p> <p>The default is <code>IN_PROGRESS</code>.</p>
  ##   Action: string (required)
  ##   TypeArn: string
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_21627644 = newJObject()
  add(query_21627644, "TypeName", newJString(TypeName))
  add(query_21627644, "NextToken", newJString(NextToken))
  add(query_21627644, "Type", newJString(Type))
  add(query_21627644, "RegistrationStatusFilter",
      newJString(RegistrationStatusFilter))
  add(query_21627644, "Action", newJString(Action))
  add(query_21627644, "TypeArn", newJString(TypeArn))
  add(query_21627644, "Version", newJString(Version))
  add(query_21627644, "MaxResults", newJInt(MaxResults))
  result = call_21627643.call(nil, query_21627644, nil, nil, nil)

var getListTypeRegistrations* = Call_GetListTypeRegistrations_21627624(
    name: "getListTypeRegistrations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeRegistrations",
    validator: validate_GetListTypeRegistrations_21627625, base: "/",
    makeUrl: url_GetListTypeRegistrations_21627626,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypeVersions_21627688 = ref object of OpenApiRestCall_21625435
proc url_PostListTypeVersions_21627690(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypeVersions_21627689(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about the versions of a type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627691 = query.getOrDefault("Action")
  valid_21627691 = validateParameter(valid_21627691, JString, required = true,
                                   default = newJString("ListTypeVersions"))
  if valid_21627691 != nil:
    section.add "Action", valid_21627691
  var valid_21627692 = query.getOrDefault("Version")
  valid_21627692 = validateParameter(valid_21627692, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627692 != nil:
    section.add "Version", valid_21627692
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627693 = header.getOrDefault("X-Amz-Date")
  valid_21627693 = validateParameter(valid_21627693, JString, required = false,
                                   default = nil)
  if valid_21627693 != nil:
    section.add "X-Amz-Date", valid_21627693
  var valid_21627694 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627694 = validateParameter(valid_21627694, JString, required = false,
                                   default = nil)
  if valid_21627694 != nil:
    section.add "X-Amz-Security-Token", valid_21627694
  var valid_21627695 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627695 = validateParameter(valid_21627695, JString, required = false,
                                   default = nil)
  if valid_21627695 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627695
  var valid_21627696 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627696 = validateParameter(valid_21627696, JString, required = false,
                                   default = nil)
  if valid_21627696 != nil:
    section.add "X-Amz-Algorithm", valid_21627696
  var valid_21627697 = header.getOrDefault("X-Amz-Signature")
  valid_21627697 = validateParameter(valid_21627697, JString, required = false,
                                   default = nil)
  if valid_21627697 != nil:
    section.add "X-Amz-Signature", valid_21627697
  var valid_21627698 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627698 = validateParameter(valid_21627698, JString, required = false,
                                   default = nil)
  if valid_21627698 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627698
  var valid_21627699 = header.getOrDefault("X-Amz-Credential")
  valid_21627699 = validateParameter(valid_21627699, JString, required = false,
                                   default = nil)
  if valid_21627699 != nil:
    section.add "X-Amz-Credential", valid_21627699
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul> <p>The default is <code>LIVE</code>.</p>
  ##   TypeName: JString
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  section = newJObject()
  var valid_21627700 = formData.getOrDefault("NextToken")
  valid_21627700 = validateParameter(valid_21627700, JString, required = false,
                                   default = nil)
  if valid_21627700 != nil:
    section.add "NextToken", valid_21627700
  var valid_21627701 = formData.getOrDefault("MaxResults")
  valid_21627701 = validateParameter(valid_21627701, JInt, required = false,
                                   default = nil)
  if valid_21627701 != nil:
    section.add "MaxResults", valid_21627701
  var valid_21627702 = formData.getOrDefault("Arn")
  valid_21627702 = validateParameter(valid_21627702, JString, required = false,
                                   default = nil)
  if valid_21627702 != nil:
    section.add "Arn", valid_21627702
  var valid_21627703 = formData.getOrDefault("Type")
  valid_21627703 = validateParameter(valid_21627703, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627703 != nil:
    section.add "Type", valid_21627703
  var valid_21627704 = formData.getOrDefault("DeprecatedStatus")
  valid_21627704 = validateParameter(valid_21627704, JString, required = false,
                                   default = newJString("LIVE"))
  if valid_21627704 != nil:
    section.add "DeprecatedStatus", valid_21627704
  var valid_21627705 = formData.getOrDefault("TypeName")
  valid_21627705 = validateParameter(valid_21627705, JString, required = false,
                                   default = nil)
  if valid_21627705 != nil:
    section.add "TypeName", valid_21627705
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627706: Call_PostListTypeVersions_21627688; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about the versions of a type.
  ## 
  let valid = call_21627706.validator(path, query, header, formData, body, _)
  let scheme = call_21627706.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627706.makeUrl(scheme.get, call_21627706.host, call_21627706.base,
                               call_21627706.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627706, uri, valid, _)

proc call*(call_21627707: Call_PostListTypeVersions_21627688;
          NextToken: string = ""; MaxResults: int = 0; Arn: string = "";
          Type: string = "RESOURCE"; Action: string = "ListTypeVersions";
          DeprecatedStatus: string = "LIVE"; TypeName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postListTypeVersions
  ## Returns summary information about the versions of a type.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul> <p>The default is <code>LIVE</code>.</p>
  ##   TypeName: string
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  var query_21627708 = newJObject()
  var formData_21627709 = newJObject()
  add(formData_21627709, "NextToken", newJString(NextToken))
  add(formData_21627709, "MaxResults", newJInt(MaxResults))
  add(formData_21627709, "Arn", newJString(Arn))
  add(formData_21627709, "Type", newJString(Type))
  add(query_21627708, "Action", newJString(Action))
  add(formData_21627709, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(formData_21627709, "TypeName", newJString(TypeName))
  add(query_21627708, "Version", newJString(Version))
  result = call_21627707.call(nil, query_21627708, nil, formData_21627709, nil)

var postListTypeVersions* = Call_PostListTypeVersions_21627688(
    name: "postListTypeVersions", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeVersions",
    validator: validate_PostListTypeVersions_21627689, base: "/",
    makeUrl: url_PostListTypeVersions_21627690,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypeVersions_21627667 = ref object of OpenApiRestCall_21625435
proc url_GetListTypeVersions_21627669(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypeVersions_21627668(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Returns summary information about the versions of a type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul> <p>The default is <code>LIVE</code>.</p>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Type: JString
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_21627670 = query.getOrDefault("TypeName")
  valid_21627670 = validateParameter(valid_21627670, JString, required = false,
                                   default = nil)
  if valid_21627670 != nil:
    section.add "TypeName", valid_21627670
  var valid_21627671 = query.getOrDefault("DeprecatedStatus")
  valid_21627671 = validateParameter(valid_21627671, JString, required = false,
                                   default = newJString("LIVE"))
  if valid_21627671 != nil:
    section.add "DeprecatedStatus", valid_21627671
  var valid_21627672 = query.getOrDefault("NextToken")
  valid_21627672 = validateParameter(valid_21627672, JString, required = false,
                                   default = nil)
  if valid_21627672 != nil:
    section.add "NextToken", valid_21627672
  var valid_21627673 = query.getOrDefault("Type")
  valid_21627673 = validateParameter(valid_21627673, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627673 != nil:
    section.add "Type", valid_21627673
  var valid_21627674 = query.getOrDefault("Action")
  valid_21627674 = validateParameter(valid_21627674, JString, required = true,
                                   default = newJString("ListTypeVersions"))
  if valid_21627674 != nil:
    section.add "Action", valid_21627674
  var valid_21627675 = query.getOrDefault("Arn")
  valid_21627675 = validateParameter(valid_21627675, JString, required = false,
                                   default = nil)
  if valid_21627675 != nil:
    section.add "Arn", valid_21627675
  var valid_21627676 = query.getOrDefault("Version")
  valid_21627676 = validateParameter(valid_21627676, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627676 != nil:
    section.add "Version", valid_21627676
  var valid_21627677 = query.getOrDefault("MaxResults")
  valid_21627677 = validateParameter(valid_21627677, JInt, required = false,
                                   default = nil)
  if valid_21627677 != nil:
    section.add "MaxResults", valid_21627677
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627678 = header.getOrDefault("X-Amz-Date")
  valid_21627678 = validateParameter(valid_21627678, JString, required = false,
                                   default = nil)
  if valid_21627678 != nil:
    section.add "X-Amz-Date", valid_21627678
  var valid_21627679 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627679 = validateParameter(valid_21627679, JString, required = false,
                                   default = nil)
  if valid_21627679 != nil:
    section.add "X-Amz-Security-Token", valid_21627679
  var valid_21627680 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627680 = validateParameter(valid_21627680, JString, required = false,
                                   default = nil)
  if valid_21627680 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627680
  var valid_21627681 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627681 = validateParameter(valid_21627681, JString, required = false,
                                   default = nil)
  if valid_21627681 != nil:
    section.add "X-Amz-Algorithm", valid_21627681
  var valid_21627682 = header.getOrDefault("X-Amz-Signature")
  valid_21627682 = validateParameter(valid_21627682, JString, required = false,
                                   default = nil)
  if valid_21627682 != nil:
    section.add "X-Amz-Signature", valid_21627682
  var valid_21627683 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627683 = validateParameter(valid_21627683, JString, required = false,
                                   default = nil)
  if valid_21627683 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627683
  var valid_21627684 = header.getOrDefault("X-Amz-Credential")
  valid_21627684 = validateParameter(valid_21627684, JString, required = false,
                                   default = nil)
  if valid_21627684 != nil:
    section.add "X-Amz-Credential", valid_21627684
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627685: Call_GetListTypeVersions_21627667; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about the versions of a type.
  ## 
  let valid = call_21627685.validator(path, query, header, formData, body, _)
  let scheme = call_21627685.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627685.makeUrl(scheme.get, call_21627685.host, call_21627685.base,
                               call_21627685.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627685, uri, valid, _)

proc call*(call_21627686: Call_GetListTypeVersions_21627667; TypeName: string = "";
          DeprecatedStatus: string = "LIVE"; NextToken: string = "";
          Type: string = "RESOURCE"; Action: string = "ListTypeVersions";
          Arn: string = ""; Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getListTypeVersions
  ## Returns summary information about the versions of a type.
  ##   TypeName: string
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul> <p>The default is <code>LIVE</code>.</p>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Type: string
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_21627687 = newJObject()
  add(query_21627687, "TypeName", newJString(TypeName))
  add(query_21627687, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_21627687, "NextToken", newJString(NextToken))
  add(query_21627687, "Type", newJString(Type))
  add(query_21627687, "Action", newJString(Action))
  add(query_21627687, "Arn", newJString(Arn))
  add(query_21627687, "Version", newJString(Version))
  add(query_21627687, "MaxResults", newJInt(MaxResults))
  result = call_21627686.call(nil, query_21627687, nil, nil, nil)

var getListTypeVersions* = Call_GetListTypeVersions_21627667(
    name: "getListTypeVersions", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeVersions",
    validator: validate_GetListTypeVersions_21627668, base: "/",
    makeUrl: url_GetListTypeVersions_21627669,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypes_21627730 = ref object of OpenApiRestCall_21625435
proc url_PostListTypes_21627732(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypes_21627731(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode; _: string = ""): JsonNode {.nosinks.} =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627733 = query.getOrDefault("Action")
  valid_21627733 = validateParameter(valid_21627733, JString, required = true,
                                   default = newJString("ListTypes"))
  if valid_21627733 != nil:
    section.add "Action", valid_21627733
  var valid_21627734 = query.getOrDefault("Version")
  valid_21627734 = validateParameter(valid_21627734, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627734 != nil:
    section.add "Version", valid_21627734
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627735 = header.getOrDefault("X-Amz-Date")
  valid_21627735 = validateParameter(valid_21627735, JString, required = false,
                                   default = nil)
  if valid_21627735 != nil:
    section.add "X-Amz-Date", valid_21627735
  var valid_21627736 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627736 = validateParameter(valid_21627736, JString, required = false,
                                   default = nil)
  if valid_21627736 != nil:
    section.add "X-Amz-Security-Token", valid_21627736
  var valid_21627737 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627737 = validateParameter(valid_21627737, JString, required = false,
                                   default = nil)
  if valid_21627737 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627737
  var valid_21627738 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627738 = validateParameter(valid_21627738, JString, required = false,
                                   default = nil)
  if valid_21627738 != nil:
    section.add "X-Amz-Algorithm", valid_21627738
  var valid_21627739 = header.getOrDefault("X-Amz-Signature")
  valid_21627739 = validateParameter(valid_21627739, JString, required = false,
                                   default = nil)
  if valid_21627739 != nil:
    section.add "X-Amz-Signature", valid_21627739
  var valid_21627740 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627740 = validateParameter(valid_21627740, JString, required = false,
                                   default = nil)
  if valid_21627740 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627740
  var valid_21627741 = header.getOrDefault("X-Amz-Credential")
  valid_21627741 = validateParameter(valid_21627741, JString, required = false,
                                   default = nil)
  if valid_21627741 != nil:
    section.add "X-Amz-Credential", valid_21627741
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Visibility: JString
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul> <p>The default is <code>PRIVATE</code>.</p>
  ##   ProvisioningType: JString
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  section = newJObject()
  var valid_21627742 = formData.getOrDefault("NextToken")
  valid_21627742 = validateParameter(valid_21627742, JString, required = false,
                                   default = nil)
  if valid_21627742 != nil:
    section.add "NextToken", valid_21627742
  var valid_21627743 = formData.getOrDefault("MaxResults")
  valid_21627743 = validateParameter(valid_21627743, JInt, required = false,
                                   default = nil)
  if valid_21627743 != nil:
    section.add "MaxResults", valid_21627743
  var valid_21627744 = formData.getOrDefault("Visibility")
  valid_21627744 = validateParameter(valid_21627744, JString, required = false,
                                   default = newJString("PUBLIC"))
  if valid_21627744 != nil:
    section.add "Visibility", valid_21627744
  var valid_21627745 = formData.getOrDefault("ProvisioningType")
  valid_21627745 = validateParameter(valid_21627745, JString, required = false,
                                   default = newJString("NON_PROVISIONABLE"))
  if valid_21627745 != nil:
    section.add "ProvisioningType", valid_21627745
  var valid_21627746 = formData.getOrDefault("DeprecatedStatus")
  valid_21627746 = validateParameter(valid_21627746, JString, required = false,
                                   default = newJString("LIVE"))
  if valid_21627746 != nil:
    section.add "DeprecatedStatus", valid_21627746
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627747: Call_PostListTypes_21627730; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  let valid = call_21627747.validator(path, query, header, formData, body, _)
  let scheme = call_21627747.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627747.makeUrl(scheme.get, call_21627747.host, call_21627747.base,
                               call_21627747.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627747, uri, valid, _)

proc call*(call_21627748: Call_PostListTypes_21627730; NextToken: string = "";
          MaxResults: int = 0; Visibility: string = "PUBLIC";
          Action: string = "ListTypes";
          ProvisioningType: string = "NON_PROVISIONABLE";
          DeprecatedStatus: string = "LIVE"; Version: string = "2010-05-15"): Recallable =
  ## postListTypes
  ## Returns summary information about types that have been registered with CloudFormation.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Visibility: string
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul> <p>The default is <code>PRIVATE</code>.</p>
  ##   Action: string (required)
  ##   ProvisioningType: string
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   Version: string (required)
  var query_21627749 = newJObject()
  var formData_21627750 = newJObject()
  add(formData_21627750, "NextToken", newJString(NextToken))
  add(formData_21627750, "MaxResults", newJInt(MaxResults))
  add(formData_21627750, "Visibility", newJString(Visibility))
  add(query_21627749, "Action", newJString(Action))
  add(formData_21627750, "ProvisioningType", newJString(ProvisioningType))
  add(formData_21627750, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_21627749, "Version", newJString(Version))
  result = call_21627748.call(nil, query_21627749, nil, formData_21627750, nil)

var postListTypes* = Call_PostListTypes_21627730(name: "postListTypes",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListTypes", validator: validate_PostListTypes_21627731,
    base: "/", makeUrl: url_PostListTypes_21627732,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypes_21627710 = ref object of OpenApiRestCall_21625435
proc url_GetListTypes_21627712(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypes_21627711(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode; _: string = ""): JsonNode {.nosinks.} =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ProvisioningType: JString
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   Visibility: JString
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul> <p>The default is <code>PRIVATE</code>.</p>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_21627713 = query.getOrDefault("ProvisioningType")
  valid_21627713 = validateParameter(valid_21627713, JString, required = false,
                                   default = newJString("NON_PROVISIONABLE"))
  if valid_21627713 != nil:
    section.add "ProvisioningType", valid_21627713
  var valid_21627714 = query.getOrDefault("Visibility")
  valid_21627714 = validateParameter(valid_21627714, JString, required = false,
                                   default = newJString("PUBLIC"))
  if valid_21627714 != nil:
    section.add "Visibility", valid_21627714
  var valid_21627715 = query.getOrDefault("DeprecatedStatus")
  valid_21627715 = validateParameter(valid_21627715, JString, required = false,
                                   default = newJString("LIVE"))
  if valid_21627715 != nil:
    section.add "DeprecatedStatus", valid_21627715
  var valid_21627716 = query.getOrDefault("NextToken")
  valid_21627716 = validateParameter(valid_21627716, JString, required = false,
                                   default = nil)
  if valid_21627716 != nil:
    section.add "NextToken", valid_21627716
  var valid_21627717 = query.getOrDefault("Action")
  valid_21627717 = validateParameter(valid_21627717, JString, required = true,
                                   default = newJString("ListTypes"))
  if valid_21627717 != nil:
    section.add "Action", valid_21627717
  var valid_21627718 = query.getOrDefault("Version")
  valid_21627718 = validateParameter(valid_21627718, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627718 != nil:
    section.add "Version", valid_21627718
  var valid_21627719 = query.getOrDefault("MaxResults")
  valid_21627719 = validateParameter(valid_21627719, JInt, required = false,
                                   default = nil)
  if valid_21627719 != nil:
    section.add "MaxResults", valid_21627719
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627720 = header.getOrDefault("X-Amz-Date")
  valid_21627720 = validateParameter(valid_21627720, JString, required = false,
                                   default = nil)
  if valid_21627720 != nil:
    section.add "X-Amz-Date", valid_21627720
  var valid_21627721 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627721 = validateParameter(valid_21627721, JString, required = false,
                                   default = nil)
  if valid_21627721 != nil:
    section.add "X-Amz-Security-Token", valid_21627721
  var valid_21627722 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627722 = validateParameter(valid_21627722, JString, required = false,
                                   default = nil)
  if valid_21627722 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627722
  var valid_21627723 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627723 = validateParameter(valid_21627723, JString, required = false,
                                   default = nil)
  if valid_21627723 != nil:
    section.add "X-Amz-Algorithm", valid_21627723
  var valid_21627724 = header.getOrDefault("X-Amz-Signature")
  valid_21627724 = validateParameter(valid_21627724, JString, required = false,
                                   default = nil)
  if valid_21627724 != nil:
    section.add "X-Amz-Signature", valid_21627724
  var valid_21627725 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627725 = validateParameter(valid_21627725, JString, required = false,
                                   default = nil)
  if valid_21627725 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627725
  var valid_21627726 = header.getOrDefault("X-Amz-Credential")
  valid_21627726 = validateParameter(valid_21627726, JString, required = false,
                                   default = nil)
  if valid_21627726 != nil:
    section.add "X-Amz-Credential", valid_21627726
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627727: Call_GetListTypes_21627710; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  let valid = call_21627727.validator(path, query, header, formData, body, _)
  let scheme = call_21627727.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627727.makeUrl(scheme.get, call_21627727.host, call_21627727.base,
                               call_21627727.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627727, uri, valid, _)

proc call*(call_21627728: Call_GetListTypes_21627710;
          ProvisioningType: string = "NON_PROVISIONABLE";
          Visibility: string = "PUBLIC"; DeprecatedStatus: string = "LIVE";
          NextToken: string = ""; Action: string = "ListTypes";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getListTypes
  ## Returns summary information about types that have been registered with CloudFormation.
  ##   ProvisioningType: string
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   Visibility: string
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul> <p>The default is <code>PRIVATE</code>.</p>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_21627729 = newJObject()
  add(query_21627729, "ProvisioningType", newJString(ProvisioningType))
  add(query_21627729, "Visibility", newJString(Visibility))
  add(query_21627729, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_21627729, "NextToken", newJString(NextToken))
  add(query_21627729, "Action", newJString(Action))
  add(query_21627729, "Version", newJString(Version))
  add(query_21627729, "MaxResults", newJInt(MaxResults))
  result = call_21627728.call(nil, query_21627729, nil, nil, nil)

var getListTypes* = Call_GetListTypes_21627710(name: "getListTypes",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListTypes", validator: validate_GetListTypes_21627711,
    base: "/", makeUrl: url_GetListTypes_21627712,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostRecordHandlerProgress_21627773 = ref object of OpenApiRestCall_21625435
proc url_PostRecordHandlerProgress_21627775(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostRecordHandlerProgress_21627774(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627776 = query.getOrDefault("Action")
  valid_21627776 = validateParameter(valid_21627776, JString, required = true, default = newJString(
      "RecordHandlerProgress"))
  if valid_21627776 != nil:
    section.add "Action", valid_21627776
  var valid_21627777 = query.getOrDefault("Version")
  valid_21627777 = validateParameter(valid_21627777, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627777 != nil:
    section.add "Version", valid_21627777
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627778 = header.getOrDefault("X-Amz-Date")
  valid_21627778 = validateParameter(valid_21627778, JString, required = false,
                                   default = nil)
  if valid_21627778 != nil:
    section.add "X-Amz-Date", valid_21627778
  var valid_21627779 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627779 = validateParameter(valid_21627779, JString, required = false,
                                   default = nil)
  if valid_21627779 != nil:
    section.add "X-Amz-Security-Token", valid_21627779
  var valid_21627780 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627780 = validateParameter(valid_21627780, JString, required = false,
                                   default = nil)
  if valid_21627780 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627780
  var valid_21627781 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627781 = validateParameter(valid_21627781, JString, required = false,
                                   default = nil)
  if valid_21627781 != nil:
    section.add "X-Amz-Algorithm", valid_21627781
  var valid_21627782 = header.getOrDefault("X-Amz-Signature")
  valid_21627782 = validateParameter(valid_21627782, JString, required = false,
                                   default = nil)
  if valid_21627782 != nil:
    section.add "X-Amz-Signature", valid_21627782
  var valid_21627783 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627783 = validateParameter(valid_21627783, JString, required = false,
                                   default = nil)
  if valid_21627783 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627783
  var valid_21627784 = header.getOrDefault("X-Amz-Credential")
  valid_21627784 = validateParameter(valid_21627784, JString, required = false,
                                   default = nil)
  if valid_21627784 != nil:
    section.add "X-Amz-Credential", valid_21627784
  result.add "header", section
  ## parameters in `formData` object:
  ##   CurrentOperationStatus: JString
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: JString
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: JString (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ResourceModel: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   BearerToken: JString (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: JString
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  section = newJObject()
  var valid_21627785 = formData.getOrDefault("CurrentOperationStatus")
  valid_21627785 = validateParameter(valid_21627785, JString, required = false,
                                   default = newJString("PENDING"))
  if valid_21627785 != nil:
    section.add "CurrentOperationStatus", valid_21627785
  var valid_21627786 = formData.getOrDefault("StatusMessage")
  valid_21627786 = validateParameter(valid_21627786, JString, required = false,
                                   default = nil)
  if valid_21627786 != nil:
    section.add "StatusMessage", valid_21627786
  var valid_21627787 = formData.getOrDefault("ClientRequestToken")
  valid_21627787 = validateParameter(valid_21627787, JString, required = false,
                                   default = nil)
  if valid_21627787 != nil:
    section.add "ClientRequestToken", valid_21627787
  var valid_21627788 = formData.getOrDefault("OperationStatus")
  valid_21627788 = validateParameter(valid_21627788, JString, required = true,
                                   default = newJString("PENDING"))
  if valid_21627788 != nil:
    section.add "OperationStatus", valid_21627788
  var valid_21627789 = formData.getOrDefault("ResourceModel")
  valid_21627789 = validateParameter(valid_21627789, JString, required = false,
                                   default = nil)
  if valid_21627789 != nil:
    section.add "ResourceModel", valid_21627789
  var valid_21627790 = formData.getOrDefault("BearerToken")
  valid_21627790 = validateParameter(valid_21627790, JString, required = true,
                                   default = nil)
  if valid_21627790 != nil:
    section.add "BearerToken", valid_21627790
  var valid_21627791 = formData.getOrDefault("ErrorCode")
  valid_21627791 = validateParameter(valid_21627791, JString, required = false,
                                   default = newJString("NotUpdatable"))
  if valid_21627791 != nil:
    section.add "ErrorCode", valid_21627791
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627792: Call_PostRecordHandlerProgress_21627773;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  let valid = call_21627792.validator(path, query, header, formData, body, _)
  let scheme = call_21627792.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627792.makeUrl(scheme.get, call_21627792.host, call_21627792.base,
                               call_21627792.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627792, uri, valid, _)

proc call*(call_21627793: Call_PostRecordHandlerProgress_21627773;
          BearerToken: string; CurrentOperationStatus: string = "PENDING";
          StatusMessage: string = ""; ClientRequestToken: string = "";
          OperationStatus: string = "PENDING";
          Action: string = "RecordHandlerProgress"; ResourceModel: string = "";
          ErrorCode: string = "NotUpdatable"; Version: string = "2010-05-15"): Recallable =
  ## postRecordHandlerProgress
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ##   CurrentOperationStatus: string
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: string
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: string (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: string (required)
  ##   ResourceModel: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   BearerToken: string (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: string
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: string (required)
  var query_21627794 = newJObject()
  var formData_21627795 = newJObject()
  add(formData_21627795, "CurrentOperationStatus",
      newJString(CurrentOperationStatus))
  add(formData_21627795, "StatusMessage", newJString(StatusMessage))
  add(formData_21627795, "ClientRequestToken", newJString(ClientRequestToken))
  add(formData_21627795, "OperationStatus", newJString(OperationStatus))
  add(query_21627794, "Action", newJString(Action))
  add(formData_21627795, "ResourceModel", newJString(ResourceModel))
  add(formData_21627795, "BearerToken", newJString(BearerToken))
  add(formData_21627795, "ErrorCode", newJString(ErrorCode))
  add(query_21627794, "Version", newJString(Version))
  result = call_21627793.call(nil, query_21627794, nil, formData_21627795, nil)

var postRecordHandlerProgress* = Call_PostRecordHandlerProgress_21627773(
    name: "postRecordHandlerProgress", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=RecordHandlerProgress",
    validator: validate_PostRecordHandlerProgress_21627774, base: "/",
    makeUrl: url_PostRecordHandlerProgress_21627775,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetRecordHandlerProgress_21627751 = ref object of OpenApiRestCall_21625435
proc url_GetRecordHandlerProgress_21627753(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetRecordHandlerProgress_21627752(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   CurrentOperationStatus: JString
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: JString
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   BearerToken: JString (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ResourceModel: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: JString (required)
  ##   OperationStatus: JString (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  section = newJObject()
  var valid_21627754 = query.getOrDefault("CurrentOperationStatus")
  valid_21627754 = validateParameter(valid_21627754, JString, required = false,
                                   default = newJString("PENDING"))
  if valid_21627754 != nil:
    section.add "CurrentOperationStatus", valid_21627754
  var valid_21627755 = query.getOrDefault("ErrorCode")
  valid_21627755 = validateParameter(valid_21627755, JString, required = false,
                                   default = newJString("NotUpdatable"))
  if valid_21627755 != nil:
    section.add "ErrorCode", valid_21627755
  assert query != nil,
        "query argument is necessary due to required `BearerToken` field"
  var valid_21627756 = query.getOrDefault("BearerToken")
  valid_21627756 = validateParameter(valid_21627756, JString, required = true,
                                   default = nil)
  if valid_21627756 != nil:
    section.add "BearerToken", valid_21627756
  var valid_21627757 = query.getOrDefault("Action")
  valid_21627757 = validateParameter(valid_21627757, JString, required = true, default = newJString(
      "RecordHandlerProgress"))
  if valid_21627757 != nil:
    section.add "Action", valid_21627757
  var valid_21627758 = query.getOrDefault("ClientRequestToken")
  valid_21627758 = validateParameter(valid_21627758, JString, required = false,
                                   default = nil)
  if valid_21627758 != nil:
    section.add "ClientRequestToken", valid_21627758
  var valid_21627759 = query.getOrDefault("StatusMessage")
  valid_21627759 = validateParameter(valid_21627759, JString, required = false,
                                   default = nil)
  if valid_21627759 != nil:
    section.add "StatusMessage", valid_21627759
  var valid_21627760 = query.getOrDefault("ResourceModel")
  valid_21627760 = validateParameter(valid_21627760, JString, required = false,
                                   default = nil)
  if valid_21627760 != nil:
    section.add "ResourceModel", valid_21627760
  var valid_21627761 = query.getOrDefault("Version")
  valid_21627761 = validateParameter(valid_21627761, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627761 != nil:
    section.add "Version", valid_21627761
  var valid_21627762 = query.getOrDefault("OperationStatus")
  valid_21627762 = validateParameter(valid_21627762, JString, required = true,
                                   default = newJString("PENDING"))
  if valid_21627762 != nil:
    section.add "OperationStatus", valid_21627762
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627763 = header.getOrDefault("X-Amz-Date")
  valid_21627763 = validateParameter(valid_21627763, JString, required = false,
                                   default = nil)
  if valid_21627763 != nil:
    section.add "X-Amz-Date", valid_21627763
  var valid_21627764 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627764 = validateParameter(valid_21627764, JString, required = false,
                                   default = nil)
  if valid_21627764 != nil:
    section.add "X-Amz-Security-Token", valid_21627764
  var valid_21627765 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627765 = validateParameter(valid_21627765, JString, required = false,
                                   default = nil)
  if valid_21627765 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627765
  var valid_21627766 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627766 = validateParameter(valid_21627766, JString, required = false,
                                   default = nil)
  if valid_21627766 != nil:
    section.add "X-Amz-Algorithm", valid_21627766
  var valid_21627767 = header.getOrDefault("X-Amz-Signature")
  valid_21627767 = validateParameter(valid_21627767, JString, required = false,
                                   default = nil)
  if valid_21627767 != nil:
    section.add "X-Amz-Signature", valid_21627767
  var valid_21627768 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627768 = validateParameter(valid_21627768, JString, required = false,
                                   default = nil)
  if valid_21627768 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627768
  var valid_21627769 = header.getOrDefault("X-Amz-Credential")
  valid_21627769 = validateParameter(valid_21627769, JString, required = false,
                                   default = nil)
  if valid_21627769 != nil:
    section.add "X-Amz-Credential", valid_21627769
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627770: Call_GetRecordHandlerProgress_21627751;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  let valid = call_21627770.validator(path, query, header, formData, body, _)
  let scheme = call_21627770.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627770.makeUrl(scheme.get, call_21627770.host, call_21627770.base,
                               call_21627770.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627770, uri, valid, _)

proc call*(call_21627771: Call_GetRecordHandlerProgress_21627751;
          BearerToken: string; CurrentOperationStatus: string = "PENDING";
          ErrorCode: string = "NotUpdatable";
          Action: string = "RecordHandlerProgress"; ClientRequestToken: string = "";
          StatusMessage: string = ""; ResourceModel: string = "";
          Version: string = "2010-05-15"; OperationStatus: string = "PENDING"): Recallable =
  ## getRecordHandlerProgress
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ##   CurrentOperationStatus: string
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: string
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   BearerToken: string (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ResourceModel: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: string (required)
  ##   OperationStatus: string (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  var query_21627772 = newJObject()
  add(query_21627772, "CurrentOperationStatus", newJString(CurrentOperationStatus))
  add(query_21627772, "ErrorCode", newJString(ErrorCode))
  add(query_21627772, "BearerToken", newJString(BearerToken))
  add(query_21627772, "Action", newJString(Action))
  add(query_21627772, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21627772, "StatusMessage", newJString(StatusMessage))
  add(query_21627772, "ResourceModel", newJString(ResourceModel))
  add(query_21627772, "Version", newJString(Version))
  add(query_21627772, "OperationStatus", newJString(OperationStatus))
  result = call_21627771.call(nil, query_21627772, nil, nil, nil)

var getRecordHandlerProgress* = Call_GetRecordHandlerProgress_21627751(
    name: "getRecordHandlerProgress", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=RecordHandlerProgress",
    validator: validate_GetRecordHandlerProgress_21627752, base: "/",
    makeUrl: url_GetRecordHandlerProgress_21627753,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostRegisterType_21627818 = ref object of OpenApiRestCall_21625435
proc url_PostRegisterType_21627820(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostRegisterType_21627819(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627821 = query.getOrDefault("Action")
  valid_21627821 = validateParameter(valid_21627821, JString, required = true,
                                   default = newJString("RegisterType"))
  if valid_21627821 != nil:
    section.add "Action", valid_21627821
  var valid_21627822 = query.getOrDefault("Version")
  valid_21627822 = validateParameter(valid_21627822, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627822 != nil:
    section.add "Version", valid_21627822
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627823 = header.getOrDefault("X-Amz-Date")
  valid_21627823 = validateParameter(valid_21627823, JString, required = false,
                                   default = nil)
  if valid_21627823 != nil:
    section.add "X-Amz-Date", valid_21627823
  var valid_21627824 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627824 = validateParameter(valid_21627824, JString, required = false,
                                   default = nil)
  if valid_21627824 != nil:
    section.add "X-Amz-Security-Token", valid_21627824
  var valid_21627825 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627825 = validateParameter(valid_21627825, JString, required = false,
                                   default = nil)
  if valid_21627825 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627825
  var valid_21627826 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627826 = validateParameter(valid_21627826, JString, required = false,
                                   default = nil)
  if valid_21627826 != nil:
    section.add "X-Amz-Algorithm", valid_21627826
  var valid_21627827 = header.getOrDefault("X-Amz-Signature")
  valid_21627827 = validateParameter(valid_21627827, JString, required = false,
                                   default = nil)
  if valid_21627827 != nil:
    section.add "X-Amz-Signature", valid_21627827
  var valid_21627828 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627828 = validateParameter(valid_21627828, JString, required = false,
                                   default = nil)
  if valid_21627828 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627828
  var valid_21627829 = header.getOrDefault("X-Amz-Credential")
  valid_21627829 = validateParameter(valid_21627829, JString, required = false,
                                   default = nil)
  if valid_21627829 != nil:
    section.add "X-Amz-Credential", valid_21627829
  result.add "header", section
  ## parameters in `formData` object:
  ##   ClientRequestToken: JString
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfig.LogGroupName: JString
  ##                             : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   LoggingConfig.LogRoleArn: JString
  ##                           : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   TypeName: JString (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   ExecutionRoleArn: JString
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   SchemaHandlerPackage: JString (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p> <note> <p>As part of registering a resource provider type, CloudFormation must be able to access the S3 bucket which contains the schema handler package for that resource provider. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register-permissions">IAM Permissions for Registering a Resource Provider</a> in the <i>AWS CloudFormation User Guide</i>.</p> </note>
  section = newJObject()
  var valid_21627830 = formData.getOrDefault("ClientRequestToken")
  valid_21627830 = validateParameter(valid_21627830, JString, required = false,
                                   default = nil)
  if valid_21627830 != nil:
    section.add "ClientRequestToken", valid_21627830
  var valid_21627831 = formData.getOrDefault("Type")
  valid_21627831 = validateParameter(valid_21627831, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627831 != nil:
    section.add "Type", valid_21627831
  var valid_21627832 = formData.getOrDefault("LoggingConfig.LogGroupName")
  valid_21627832 = validateParameter(valid_21627832, JString, required = false,
                                   default = nil)
  if valid_21627832 != nil:
    section.add "LoggingConfig.LogGroupName", valid_21627832
  var valid_21627833 = formData.getOrDefault("LoggingConfig.LogRoleArn")
  valid_21627833 = validateParameter(valid_21627833, JString, required = false,
                                   default = nil)
  if valid_21627833 != nil:
    section.add "LoggingConfig.LogRoleArn", valid_21627833
  assert formData != nil,
        "formData argument is necessary due to required `TypeName` field"
  var valid_21627834 = formData.getOrDefault("TypeName")
  valid_21627834 = validateParameter(valid_21627834, JString, required = true,
                                   default = nil)
  if valid_21627834 != nil:
    section.add "TypeName", valid_21627834
  var valid_21627835 = formData.getOrDefault("ExecutionRoleArn")
  valid_21627835 = validateParameter(valid_21627835, JString, required = false,
                                   default = nil)
  if valid_21627835 != nil:
    section.add "ExecutionRoleArn", valid_21627835
  var valid_21627836 = formData.getOrDefault("SchemaHandlerPackage")
  valid_21627836 = validateParameter(valid_21627836, JString, required = true,
                                   default = nil)
  if valid_21627836 != nil:
    section.add "SchemaHandlerPackage", valid_21627836
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627837: Call_PostRegisterType_21627818; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  let valid = call_21627837.validator(path, query, header, formData, body, _)
  let scheme = call_21627837.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627837.makeUrl(scheme.get, call_21627837.host, call_21627837.base,
                               call_21627837.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627837, uri, valid, _)

proc call*(call_21627838: Call_PostRegisterType_21627818; TypeName: string;
          SchemaHandlerPackage: string; ClientRequestToken: string = "";
          Type: string = "RESOURCE"; LoggingConfigLogGroupName: string = "";
          Action: string = "RegisterType"; LoggingConfigLogRoleArn: string = "";
          ExecutionRoleArn: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postRegisterType
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfigLogGroupName: string
  ##                            : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   Action: string (required)
  ##   LoggingConfigLogRoleArn: string
  ##                          : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   TypeName: string (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   ExecutionRoleArn: string
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   Version: string (required)
  ##   SchemaHandlerPackage: string (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p> <note> <p>As part of registering a resource provider type, CloudFormation must be able to access the S3 bucket which contains the schema handler package for that resource provider. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register-permissions">IAM Permissions for Registering a Resource Provider</a> in the <i>AWS CloudFormation User Guide</i>.</p> </note>
  var query_21627839 = newJObject()
  var formData_21627840 = newJObject()
  add(formData_21627840, "ClientRequestToken", newJString(ClientRequestToken))
  add(formData_21627840, "Type", newJString(Type))
  add(formData_21627840, "LoggingConfig.LogGroupName",
      newJString(LoggingConfigLogGroupName))
  add(query_21627839, "Action", newJString(Action))
  add(formData_21627840, "LoggingConfig.LogRoleArn",
      newJString(LoggingConfigLogRoleArn))
  add(formData_21627840, "TypeName", newJString(TypeName))
  add(formData_21627840, "ExecutionRoleArn", newJString(ExecutionRoleArn))
  add(query_21627839, "Version", newJString(Version))
  add(formData_21627840, "SchemaHandlerPackage", newJString(SchemaHandlerPackage))
  result = call_21627838.call(nil, query_21627839, nil, formData_21627840, nil)

var postRegisterType* = Call_PostRegisterType_21627818(name: "postRegisterType",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=RegisterType", validator: validate_PostRegisterType_21627819,
    base: "/", makeUrl: url_PostRegisterType_21627820,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetRegisterType_21627796 = ref object of OpenApiRestCall_21625435
proc url_GetRegisterType_21627798(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetRegisterType_21627797(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ExecutionRoleArn: JString
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   TypeName: JString (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfig.LogRoleArn: JString
  ##                           : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   LoggingConfig.LogGroupName: JString
  ##                             : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   SchemaHandlerPackage: JString (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p> <note> <p>As part of registering a resource provider type, CloudFormation must be able to access the S3 bucket which contains the schema handler package for that resource provider. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register-permissions">IAM Permissions for Registering a Resource Provider</a> in the <i>AWS CloudFormation User Guide</i>.</p> </note>
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627799 = query.getOrDefault("ExecutionRoleArn")
  valid_21627799 = validateParameter(valid_21627799, JString, required = false,
                                   default = nil)
  if valid_21627799 != nil:
    section.add "ExecutionRoleArn", valid_21627799
  assert query != nil,
        "query argument is necessary due to required `TypeName` field"
  var valid_21627800 = query.getOrDefault("TypeName")
  valid_21627800 = validateParameter(valid_21627800, JString, required = true,
                                   default = nil)
  if valid_21627800 != nil:
    section.add "TypeName", valid_21627800
  var valid_21627801 = query.getOrDefault("Type")
  valid_21627801 = validateParameter(valid_21627801, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627801 != nil:
    section.add "Type", valid_21627801
  var valid_21627802 = query.getOrDefault("LoggingConfig.LogRoleArn")
  valid_21627802 = validateParameter(valid_21627802, JString, required = false,
                                   default = nil)
  if valid_21627802 != nil:
    section.add "LoggingConfig.LogRoleArn", valid_21627802
  var valid_21627803 = query.getOrDefault("Action")
  valid_21627803 = validateParameter(valid_21627803, JString, required = true,
                                   default = newJString("RegisterType"))
  if valid_21627803 != nil:
    section.add "Action", valid_21627803
  var valid_21627804 = query.getOrDefault("ClientRequestToken")
  valid_21627804 = validateParameter(valid_21627804, JString, required = false,
                                   default = nil)
  if valid_21627804 != nil:
    section.add "ClientRequestToken", valid_21627804
  var valid_21627805 = query.getOrDefault("LoggingConfig.LogGroupName")
  valid_21627805 = validateParameter(valid_21627805, JString, required = false,
                                   default = nil)
  if valid_21627805 != nil:
    section.add "LoggingConfig.LogGroupName", valid_21627805
  var valid_21627806 = query.getOrDefault("SchemaHandlerPackage")
  valid_21627806 = validateParameter(valid_21627806, JString, required = true,
                                   default = nil)
  if valid_21627806 != nil:
    section.add "SchemaHandlerPackage", valid_21627806
  var valid_21627807 = query.getOrDefault("Version")
  valid_21627807 = validateParameter(valid_21627807, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627807 != nil:
    section.add "Version", valid_21627807
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627808 = header.getOrDefault("X-Amz-Date")
  valid_21627808 = validateParameter(valid_21627808, JString, required = false,
                                   default = nil)
  if valid_21627808 != nil:
    section.add "X-Amz-Date", valid_21627808
  var valid_21627809 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627809 = validateParameter(valid_21627809, JString, required = false,
                                   default = nil)
  if valid_21627809 != nil:
    section.add "X-Amz-Security-Token", valid_21627809
  var valid_21627810 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627810 = validateParameter(valid_21627810, JString, required = false,
                                   default = nil)
  if valid_21627810 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627810
  var valid_21627811 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627811 = validateParameter(valid_21627811, JString, required = false,
                                   default = nil)
  if valid_21627811 != nil:
    section.add "X-Amz-Algorithm", valid_21627811
  var valid_21627812 = header.getOrDefault("X-Amz-Signature")
  valid_21627812 = validateParameter(valid_21627812, JString, required = false,
                                   default = nil)
  if valid_21627812 != nil:
    section.add "X-Amz-Signature", valid_21627812
  var valid_21627813 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627813 = validateParameter(valid_21627813, JString, required = false,
                                   default = nil)
  if valid_21627813 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627813
  var valid_21627814 = header.getOrDefault("X-Amz-Credential")
  valid_21627814 = validateParameter(valid_21627814, JString, required = false,
                                   default = nil)
  if valid_21627814 != nil:
    section.add "X-Amz-Credential", valid_21627814
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627815: Call_GetRegisterType_21627796; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  let valid = call_21627815.validator(path, query, header, formData, body, _)
  let scheme = call_21627815.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627815.makeUrl(scheme.get, call_21627815.host, call_21627815.base,
                               call_21627815.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627815, uri, valid, _)

proc call*(call_21627816: Call_GetRegisterType_21627796; TypeName: string;
          SchemaHandlerPackage: string; ExecutionRoleArn: string = "";
          Type: string = "RESOURCE"; LoggingConfigLogRoleArn: string = "";
          Action: string = "RegisterType"; ClientRequestToken: string = "";
          LoggingConfigLogGroupName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getRegisterType
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ##   ExecutionRoleArn: string
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   TypeName: string (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfigLogRoleArn: string
  ##                          : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   LoggingConfigLogGroupName: string
  ##                            : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   SchemaHandlerPackage: string (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p> <note> <p>As part of registering a resource provider type, CloudFormation must be able to access the S3 bucket which contains the schema handler package for that resource provider. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register-permissions">IAM Permissions for Registering a Resource Provider</a> in the <i>AWS CloudFormation User Guide</i>.</p> </note>
  ##   Version: string (required)
  var query_21627817 = newJObject()
  add(query_21627817, "ExecutionRoleArn", newJString(ExecutionRoleArn))
  add(query_21627817, "TypeName", newJString(TypeName))
  add(query_21627817, "Type", newJString(Type))
  add(query_21627817, "LoggingConfig.LogRoleArn",
      newJString(LoggingConfigLogRoleArn))
  add(query_21627817, "Action", newJString(Action))
  add(query_21627817, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21627817, "LoggingConfig.LogGroupName",
      newJString(LoggingConfigLogGroupName))
  add(query_21627817, "SchemaHandlerPackage", newJString(SchemaHandlerPackage))
  add(query_21627817, "Version", newJString(Version))
  result = call_21627816.call(nil, query_21627817, nil, nil, nil)

var getRegisterType* = Call_GetRegisterType_21627796(name: "getRegisterType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=RegisterType", validator: validate_GetRegisterType_21627797,
    base: "/", makeUrl: url_GetRegisterType_21627798,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetStackPolicy_21627859 = ref object of OpenApiRestCall_21625435
proc url_PostSetStackPolicy_21627861(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetStackPolicy_21627860(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627862 = query.getOrDefault("Action")
  valid_21627862 = validateParameter(valid_21627862, JString, required = true,
                                   default = newJString("SetStackPolicy"))
  if valid_21627862 != nil:
    section.add "Action", valid_21627862
  var valid_21627863 = query.getOrDefault("Version")
  valid_21627863 = validateParameter(valid_21627863, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627863 != nil:
    section.add "Version", valid_21627863
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627864 = header.getOrDefault("X-Amz-Date")
  valid_21627864 = validateParameter(valid_21627864, JString, required = false,
                                   default = nil)
  if valid_21627864 != nil:
    section.add "X-Amz-Date", valid_21627864
  var valid_21627865 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627865 = validateParameter(valid_21627865, JString, required = false,
                                   default = nil)
  if valid_21627865 != nil:
    section.add "X-Amz-Security-Token", valid_21627865
  var valid_21627866 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627866 = validateParameter(valid_21627866, JString, required = false,
                                   default = nil)
  if valid_21627866 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627866
  var valid_21627867 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627867 = validateParameter(valid_21627867, JString, required = false,
                                   default = nil)
  if valid_21627867 != nil:
    section.add "X-Amz-Algorithm", valid_21627867
  var valid_21627868 = header.getOrDefault("X-Amz-Signature")
  valid_21627868 = validateParameter(valid_21627868, JString, required = false,
                                   default = nil)
  if valid_21627868 != nil:
    section.add "X-Amz-Signature", valid_21627868
  var valid_21627869 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627869 = validateParameter(valid_21627869, JString, required = false,
                                   default = nil)
  if valid_21627869 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627869
  var valid_21627870 = header.getOrDefault("X-Amz-Credential")
  valid_21627870 = validateParameter(valid_21627870, JString, required = false,
                                   default = nil)
  if valid_21627870 != nil:
    section.add "X-Amz-Credential", valid_21627870
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  section = newJObject()
  var valid_21627871 = formData.getOrDefault("StackPolicyURL")
  valid_21627871 = validateParameter(valid_21627871, JString, required = false,
                                   default = nil)
  if valid_21627871 != nil:
    section.add "StackPolicyURL", valid_21627871
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21627872 = formData.getOrDefault("StackName")
  valid_21627872 = validateParameter(valid_21627872, JString, required = true,
                                   default = nil)
  if valid_21627872 != nil:
    section.add "StackName", valid_21627872
  var valid_21627873 = formData.getOrDefault("StackPolicyBody")
  valid_21627873 = validateParameter(valid_21627873, JString, required = false,
                                   default = nil)
  if valid_21627873 != nil:
    section.add "StackPolicyBody", valid_21627873
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627874: Call_PostSetStackPolicy_21627859; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_21627874.validator(path, query, header, formData, body, _)
  let scheme = call_21627874.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627874.makeUrl(scheme.get, call_21627874.host, call_21627874.base,
                               call_21627874.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627874, uri, valid, _)

proc call*(call_21627875: Call_PostSetStackPolicy_21627859; StackName: string;
          StackPolicyURL: string = ""; Action: string = "SetStackPolicy";
          Version: string = "2010-05-15"; StackPolicyBody: string = ""): Recallable =
  ## postSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   Version: string (required)
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  var query_21627876 = newJObject()
  var formData_21627877 = newJObject()
  add(formData_21627877, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_21627876, "Action", newJString(Action))
  add(formData_21627877, "StackName", newJString(StackName))
  add(query_21627876, "Version", newJString(Version))
  add(formData_21627877, "StackPolicyBody", newJString(StackPolicyBody))
  result = call_21627875.call(nil, query_21627876, nil, formData_21627877, nil)

var postSetStackPolicy* = Call_PostSetStackPolicy_21627859(
    name: "postSetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetStackPolicy",
    validator: validate_PostSetStackPolicy_21627860, base: "/",
    makeUrl: url_PostSetStackPolicy_21627861, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetStackPolicy_21627841 = ref object of OpenApiRestCall_21625435
proc url_GetSetStackPolicy_21627843(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetStackPolicy_21627842(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  section = newJObject()
  var valid_21627844 = query.getOrDefault("StackPolicyBody")
  valid_21627844 = validateParameter(valid_21627844, JString, required = false,
                                   default = nil)
  if valid_21627844 != nil:
    section.add "StackPolicyBody", valid_21627844
  var valid_21627845 = query.getOrDefault("StackPolicyURL")
  valid_21627845 = validateParameter(valid_21627845, JString, required = false,
                                   default = nil)
  if valid_21627845 != nil:
    section.add "StackPolicyURL", valid_21627845
  var valid_21627846 = query.getOrDefault("Action")
  valid_21627846 = validateParameter(valid_21627846, JString, required = true,
                                   default = newJString("SetStackPolicy"))
  if valid_21627846 != nil:
    section.add "Action", valid_21627846
  var valid_21627847 = query.getOrDefault("Version")
  valid_21627847 = validateParameter(valid_21627847, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627847 != nil:
    section.add "Version", valid_21627847
  var valid_21627848 = query.getOrDefault("StackName")
  valid_21627848 = validateParameter(valid_21627848, JString, required = true,
                                   default = nil)
  if valid_21627848 != nil:
    section.add "StackName", valid_21627848
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627849 = header.getOrDefault("X-Amz-Date")
  valid_21627849 = validateParameter(valid_21627849, JString, required = false,
                                   default = nil)
  if valid_21627849 != nil:
    section.add "X-Amz-Date", valid_21627849
  var valid_21627850 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627850 = validateParameter(valid_21627850, JString, required = false,
                                   default = nil)
  if valid_21627850 != nil:
    section.add "X-Amz-Security-Token", valid_21627850
  var valid_21627851 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627851 = validateParameter(valid_21627851, JString, required = false,
                                   default = nil)
  if valid_21627851 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627851
  var valid_21627852 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627852 = validateParameter(valid_21627852, JString, required = false,
                                   default = nil)
  if valid_21627852 != nil:
    section.add "X-Amz-Algorithm", valid_21627852
  var valid_21627853 = header.getOrDefault("X-Amz-Signature")
  valid_21627853 = validateParameter(valid_21627853, JString, required = false,
                                   default = nil)
  if valid_21627853 != nil:
    section.add "X-Amz-Signature", valid_21627853
  var valid_21627854 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627854 = validateParameter(valid_21627854, JString, required = false,
                                   default = nil)
  if valid_21627854 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627854
  var valid_21627855 = header.getOrDefault("X-Amz-Credential")
  valid_21627855 = validateParameter(valid_21627855, JString, required = false,
                                   default = nil)
  if valid_21627855 != nil:
    section.add "X-Amz-Credential", valid_21627855
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627856: Call_GetSetStackPolicy_21627841; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_21627856.validator(path, query, header, formData, body, _)
  let scheme = call_21627856.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627856.makeUrl(scheme.get, call_21627856.host, call_21627856.base,
                               call_21627856.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627856, uri, valid, _)

proc call*(call_21627857: Call_GetSetStackPolicy_21627841; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  var query_21627858 = newJObject()
  add(query_21627858, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_21627858, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_21627858, "Action", newJString(Action))
  add(query_21627858, "Version", newJString(Version))
  add(query_21627858, "StackName", newJString(StackName))
  result = call_21627857.call(nil, query_21627858, nil, nil, nil)

var getSetStackPolicy* = Call_GetSetStackPolicy_21627841(name: "getSetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SetStackPolicy", validator: validate_GetSetStackPolicy_21627842,
    base: "/", makeUrl: url_GetSetStackPolicy_21627843,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetTypeDefaultVersion_21627897 = ref object of OpenApiRestCall_21625435
proc url_PostSetTypeDefaultVersion_21627899(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetTypeDefaultVersion_21627898(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627900 = query.getOrDefault("Action")
  valid_21627900 = validateParameter(valid_21627900, JString, required = true, default = newJString(
      "SetTypeDefaultVersion"))
  if valid_21627900 != nil:
    section.add "Action", valid_21627900
  var valid_21627901 = query.getOrDefault("Version")
  valid_21627901 = validateParameter(valid_21627901, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627901 != nil:
    section.add "Version", valid_21627901
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627902 = header.getOrDefault("X-Amz-Date")
  valid_21627902 = validateParameter(valid_21627902, JString, required = false,
                                   default = nil)
  if valid_21627902 != nil:
    section.add "X-Amz-Date", valid_21627902
  var valid_21627903 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627903 = validateParameter(valid_21627903, JString, required = false,
                                   default = nil)
  if valid_21627903 != nil:
    section.add "X-Amz-Security-Token", valid_21627903
  var valid_21627904 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627904 = validateParameter(valid_21627904, JString, required = false,
                                   default = nil)
  if valid_21627904 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627904
  var valid_21627905 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627905 = validateParameter(valid_21627905, JString, required = false,
                                   default = nil)
  if valid_21627905 != nil:
    section.add "X-Amz-Algorithm", valid_21627905
  var valid_21627906 = header.getOrDefault("X-Amz-Signature")
  valid_21627906 = validateParameter(valid_21627906, JString, required = false,
                                   default = nil)
  if valid_21627906 != nil:
    section.add "X-Amz-Signature", valid_21627906
  var valid_21627907 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627907 = validateParameter(valid_21627907, JString, required = false,
                                   default = nil)
  if valid_21627907 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627907
  var valid_21627908 = header.getOrDefault("X-Amz-Credential")
  valid_21627908 = validateParameter(valid_21627908, JString, required = false,
                                   default = nil)
  if valid_21627908 != nil:
    section.add "X-Amz-Credential", valid_21627908
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  section = newJObject()
  var valid_21627909 = formData.getOrDefault("Arn")
  valid_21627909 = validateParameter(valid_21627909, JString, required = false,
                                   default = nil)
  if valid_21627909 != nil:
    section.add "Arn", valid_21627909
  var valid_21627910 = formData.getOrDefault("Type")
  valid_21627910 = validateParameter(valid_21627910, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627910 != nil:
    section.add "Type", valid_21627910
  var valid_21627911 = formData.getOrDefault("TypeName")
  valid_21627911 = validateParameter(valid_21627911, JString, required = false,
                                   default = nil)
  if valid_21627911 != nil:
    section.add "TypeName", valid_21627911
  var valid_21627912 = formData.getOrDefault("VersionId")
  valid_21627912 = validateParameter(valid_21627912, JString, required = false,
                                   default = nil)
  if valid_21627912 != nil:
    section.add "VersionId", valid_21627912
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627913: Call_PostSetTypeDefaultVersion_21627897;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  let valid = call_21627913.validator(path, query, header, formData, body, _)
  let scheme = call_21627913.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627913.makeUrl(scheme.get, call_21627913.host, call_21627913.base,
                               call_21627913.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627913, uri, valid, _)

proc call*(call_21627914: Call_PostSetTypeDefaultVersion_21627897;
          Arn: string = ""; Type: string = "RESOURCE";
          Action: string = "SetTypeDefaultVersion"; TypeName: string = "";
          Version: string = "2010-05-15"; VersionId: string = ""): Recallable =
  ## postSetTypeDefaultVersion
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  var query_21627915 = newJObject()
  var formData_21627916 = newJObject()
  add(formData_21627916, "Arn", newJString(Arn))
  add(formData_21627916, "Type", newJString(Type))
  add(query_21627915, "Action", newJString(Action))
  add(formData_21627916, "TypeName", newJString(TypeName))
  add(query_21627915, "Version", newJString(Version))
  add(formData_21627916, "VersionId", newJString(VersionId))
  result = call_21627914.call(nil, query_21627915, nil, formData_21627916, nil)

var postSetTypeDefaultVersion* = Call_PostSetTypeDefaultVersion_21627897(
    name: "postSetTypeDefaultVersion", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetTypeDefaultVersion",
    validator: validate_PostSetTypeDefaultVersion_21627898, base: "/",
    makeUrl: url_PostSetTypeDefaultVersion_21627899,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetTypeDefaultVersion_21627878 = ref object of OpenApiRestCall_21625435
proc url_GetSetTypeDefaultVersion_21627880(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetTypeDefaultVersion_21627879(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627881 = query.getOrDefault("TypeName")
  valid_21627881 = validateParameter(valid_21627881, JString, required = false,
                                   default = nil)
  if valid_21627881 != nil:
    section.add "TypeName", valid_21627881
  var valid_21627882 = query.getOrDefault("VersionId")
  valid_21627882 = validateParameter(valid_21627882, JString, required = false,
                                   default = nil)
  if valid_21627882 != nil:
    section.add "VersionId", valid_21627882
  var valid_21627883 = query.getOrDefault("Type")
  valid_21627883 = validateParameter(valid_21627883, JString, required = false,
                                   default = newJString("RESOURCE"))
  if valid_21627883 != nil:
    section.add "Type", valid_21627883
  var valid_21627884 = query.getOrDefault("Action")
  valid_21627884 = validateParameter(valid_21627884, JString, required = true, default = newJString(
      "SetTypeDefaultVersion"))
  if valid_21627884 != nil:
    section.add "Action", valid_21627884
  var valid_21627885 = query.getOrDefault("Arn")
  valid_21627885 = validateParameter(valid_21627885, JString, required = false,
                                   default = nil)
  if valid_21627885 != nil:
    section.add "Arn", valid_21627885
  var valid_21627886 = query.getOrDefault("Version")
  valid_21627886 = validateParameter(valid_21627886, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627886 != nil:
    section.add "Version", valid_21627886
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627887 = header.getOrDefault("X-Amz-Date")
  valid_21627887 = validateParameter(valid_21627887, JString, required = false,
                                   default = nil)
  if valid_21627887 != nil:
    section.add "X-Amz-Date", valid_21627887
  var valid_21627888 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627888 = validateParameter(valid_21627888, JString, required = false,
                                   default = nil)
  if valid_21627888 != nil:
    section.add "X-Amz-Security-Token", valid_21627888
  var valid_21627889 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627889 = validateParameter(valid_21627889, JString, required = false,
                                   default = nil)
  if valid_21627889 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627889
  var valid_21627890 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627890 = validateParameter(valid_21627890, JString, required = false,
                                   default = nil)
  if valid_21627890 != nil:
    section.add "X-Amz-Algorithm", valid_21627890
  var valid_21627891 = header.getOrDefault("X-Amz-Signature")
  valid_21627891 = validateParameter(valid_21627891, JString, required = false,
                                   default = nil)
  if valid_21627891 != nil:
    section.add "X-Amz-Signature", valid_21627891
  var valid_21627892 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627892 = validateParameter(valid_21627892, JString, required = false,
                                   default = nil)
  if valid_21627892 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627892
  var valid_21627893 = header.getOrDefault("X-Amz-Credential")
  valid_21627893 = validateParameter(valid_21627893, JString, required = false,
                                   default = nil)
  if valid_21627893 != nil:
    section.add "X-Amz-Credential", valid_21627893
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627894: Call_GetSetTypeDefaultVersion_21627878;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  let valid = call_21627894.validator(path, query, header, formData, body, _)
  let scheme = call_21627894.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627894.makeUrl(scheme.get, call_21627894.host, call_21627894.base,
                               call_21627894.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627894, uri, valid, _)

proc call*(call_21627895: Call_GetSetTypeDefaultVersion_21627878;
          TypeName: string = ""; VersionId: string = ""; Type: string = "RESOURCE";
          Action: string = "SetTypeDefaultVersion"; Arn: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getSetTypeDefaultVersion
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Action: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
  ##   Version: string (required)
  var query_21627896 = newJObject()
  add(query_21627896, "TypeName", newJString(TypeName))
  add(query_21627896, "VersionId", newJString(VersionId))
  add(query_21627896, "Type", newJString(Type))
  add(query_21627896, "Action", newJString(Action))
  add(query_21627896, "Arn", newJString(Arn))
  add(query_21627896, "Version", newJString(Version))
  result = call_21627895.call(nil, query_21627896, nil, nil, nil)

var getSetTypeDefaultVersion* = Call_GetSetTypeDefaultVersion_21627878(
    name: "getSetTypeDefaultVersion", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetTypeDefaultVersion",
    validator: validate_GetSetTypeDefaultVersion_21627879, base: "/",
    makeUrl: url_GetSetTypeDefaultVersion_21627880,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSignalResource_21627936 = ref object of OpenApiRestCall_21625435
proc url_PostSignalResource_21627938(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSignalResource_21627937(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627939 = query.getOrDefault("Action")
  valid_21627939 = validateParameter(valid_21627939, JString, required = true,
                                   default = newJString("SignalResource"))
  if valid_21627939 != nil:
    section.add "Action", valid_21627939
  var valid_21627940 = query.getOrDefault("Version")
  valid_21627940 = validateParameter(valid_21627940, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627940 != nil:
    section.add "Version", valid_21627940
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627941 = header.getOrDefault("X-Amz-Date")
  valid_21627941 = validateParameter(valid_21627941, JString, required = false,
                                   default = nil)
  if valid_21627941 != nil:
    section.add "X-Amz-Date", valid_21627941
  var valid_21627942 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627942 = validateParameter(valid_21627942, JString, required = false,
                                   default = nil)
  if valid_21627942 != nil:
    section.add "X-Amz-Security-Token", valid_21627942
  var valid_21627943 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627943 = validateParameter(valid_21627943, JString, required = false,
                                   default = nil)
  if valid_21627943 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627943
  var valid_21627944 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627944 = validateParameter(valid_21627944, JString, required = false,
                                   default = nil)
  if valid_21627944 != nil:
    section.add "X-Amz-Algorithm", valid_21627944
  var valid_21627945 = header.getOrDefault("X-Amz-Signature")
  valid_21627945 = validateParameter(valid_21627945, JString, required = false,
                                   default = nil)
  if valid_21627945 != nil:
    section.add "X-Amz-Signature", valid_21627945
  var valid_21627946 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627946 = validateParameter(valid_21627946, JString, required = false,
                                   default = nil)
  if valid_21627946 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627946
  var valid_21627947 = header.getOrDefault("X-Amz-Credential")
  valid_21627947 = validateParameter(valid_21627947, JString, required = false,
                                   default = nil)
  if valid_21627947 != nil:
    section.add "X-Amz-Credential", valid_21627947
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `LogicalResourceId` field"
  var valid_21627948 = formData.getOrDefault("LogicalResourceId")
  valid_21627948 = validateParameter(valid_21627948, JString, required = true,
                                   default = nil)
  if valid_21627948 != nil:
    section.add "LogicalResourceId", valid_21627948
  var valid_21627949 = formData.getOrDefault("UniqueId")
  valid_21627949 = validateParameter(valid_21627949, JString, required = true,
                                   default = nil)
  if valid_21627949 != nil:
    section.add "UniqueId", valid_21627949
  var valid_21627950 = formData.getOrDefault("Status")
  valid_21627950 = validateParameter(valid_21627950, JString, required = true,
                                   default = newJString("SUCCESS"))
  if valid_21627950 != nil:
    section.add "Status", valid_21627950
  var valid_21627951 = formData.getOrDefault("StackName")
  valid_21627951 = validateParameter(valid_21627951, JString, required = true,
                                   default = nil)
  if valid_21627951 != nil:
    section.add "StackName", valid_21627951
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627952: Call_PostSignalResource_21627936; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_21627952.validator(path, query, header, formData, body, _)
  let scheme = call_21627952.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627952.makeUrl(scheme.get, call_21627952.host, call_21627952.base,
                               call_21627952.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627952, uri, valid, _)

proc call*(call_21627953: Call_PostSignalResource_21627936;
          LogicalResourceId: string; UniqueId: string; StackName: string;
          Status: string = "SUCCESS"; Action: string = "SignalResource";
          Version: string = "2010-05-15"): Recallable =
  ## postSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   Version: string (required)
  var query_21627954 = newJObject()
  var formData_21627955 = newJObject()
  add(formData_21627955, "LogicalResourceId", newJString(LogicalResourceId))
  add(formData_21627955, "UniqueId", newJString(UniqueId))
  add(formData_21627955, "Status", newJString(Status))
  add(query_21627954, "Action", newJString(Action))
  add(formData_21627955, "StackName", newJString(StackName))
  add(query_21627954, "Version", newJString(Version))
  result = call_21627953.call(nil, query_21627954, nil, formData_21627955, nil)

var postSignalResource* = Call_PostSignalResource_21627936(
    name: "postSignalResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SignalResource",
    validator: validate_PostSignalResource_21627937, base: "/",
    makeUrl: url_PostSignalResource_21627938, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSignalResource_21627917 = ref object of OpenApiRestCall_21625435
proc url_GetSignalResource_21627919(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSignalResource_21627918(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  section = newJObject()
  var valid_21627920 = query.getOrDefault("Status")
  valid_21627920 = validateParameter(valid_21627920, JString, required = true,
                                   default = newJString("SUCCESS"))
  if valid_21627920 != nil:
    section.add "Status", valid_21627920
  var valid_21627921 = query.getOrDefault("UniqueId")
  valid_21627921 = validateParameter(valid_21627921, JString, required = true,
                                   default = nil)
  if valid_21627921 != nil:
    section.add "UniqueId", valid_21627921
  var valid_21627922 = query.getOrDefault("LogicalResourceId")
  valid_21627922 = validateParameter(valid_21627922, JString, required = true,
                                   default = nil)
  if valid_21627922 != nil:
    section.add "LogicalResourceId", valid_21627922
  var valid_21627923 = query.getOrDefault("Action")
  valid_21627923 = validateParameter(valid_21627923, JString, required = true,
                                   default = newJString("SignalResource"))
  if valid_21627923 != nil:
    section.add "Action", valid_21627923
  var valid_21627924 = query.getOrDefault("Version")
  valid_21627924 = validateParameter(valid_21627924, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627924 != nil:
    section.add "Version", valid_21627924
  var valid_21627925 = query.getOrDefault("StackName")
  valid_21627925 = validateParameter(valid_21627925, JString, required = true,
                                   default = nil)
  if valid_21627925 != nil:
    section.add "StackName", valid_21627925
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627926 = header.getOrDefault("X-Amz-Date")
  valid_21627926 = validateParameter(valid_21627926, JString, required = false,
                                   default = nil)
  if valid_21627926 != nil:
    section.add "X-Amz-Date", valid_21627926
  var valid_21627927 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627927 = validateParameter(valid_21627927, JString, required = false,
                                   default = nil)
  if valid_21627927 != nil:
    section.add "X-Amz-Security-Token", valid_21627927
  var valid_21627928 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627928 = validateParameter(valid_21627928, JString, required = false,
                                   default = nil)
  if valid_21627928 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627928
  var valid_21627929 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627929 = validateParameter(valid_21627929, JString, required = false,
                                   default = nil)
  if valid_21627929 != nil:
    section.add "X-Amz-Algorithm", valid_21627929
  var valid_21627930 = header.getOrDefault("X-Amz-Signature")
  valid_21627930 = validateParameter(valid_21627930, JString, required = false,
                                   default = nil)
  if valid_21627930 != nil:
    section.add "X-Amz-Signature", valid_21627930
  var valid_21627931 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627931 = validateParameter(valid_21627931, JString, required = false,
                                   default = nil)
  if valid_21627931 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627931
  var valid_21627932 = header.getOrDefault("X-Amz-Credential")
  valid_21627932 = validateParameter(valid_21627932, JString, required = false,
                                   default = nil)
  if valid_21627932 != nil:
    section.add "X-Amz-Credential", valid_21627932
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627933: Call_GetSignalResource_21627917; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_21627933.validator(path, query, header, formData, body, _)
  let scheme = call_21627933.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627933.makeUrl(scheme.get, call_21627933.host, call_21627933.base,
                               call_21627933.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627933, uri, valid, _)

proc call*(call_21627934: Call_GetSignalResource_21627917; UniqueId: string;
          LogicalResourceId: string; StackName: string; Status: string = "SUCCESS";
          Action: string = "SignalResource"; Version: string = "2010-05-15"): Recallable =
  ## getSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  var query_21627935 = newJObject()
  add(query_21627935, "Status", newJString(Status))
  add(query_21627935, "UniqueId", newJString(UniqueId))
  add(query_21627935, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_21627935, "Action", newJString(Action))
  add(query_21627935, "Version", newJString(Version))
  add(query_21627935, "StackName", newJString(StackName))
  result = call_21627934.call(nil, query_21627935, nil, nil, nil)

var getSignalResource* = Call_GetSignalResource_21627917(name: "getSignalResource",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SignalResource", validator: validate_GetSignalResource_21627918,
    base: "/", makeUrl: url_GetSignalResource_21627919,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostStopStackSetOperation_21627973 = ref object of OpenApiRestCall_21625435
proc url_PostStopStackSetOperation_21627975(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostStopStackSetOperation_21627974(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627976 = query.getOrDefault("Action")
  valid_21627976 = validateParameter(valid_21627976, JString, required = true, default = newJString(
      "StopStackSetOperation"))
  if valid_21627976 != nil:
    section.add "Action", valid_21627976
  var valid_21627977 = query.getOrDefault("Version")
  valid_21627977 = validateParameter(valid_21627977, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627977 != nil:
    section.add "Version", valid_21627977
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627978 = header.getOrDefault("X-Amz-Date")
  valid_21627978 = validateParameter(valid_21627978, JString, required = false,
                                   default = nil)
  if valid_21627978 != nil:
    section.add "X-Amz-Date", valid_21627978
  var valid_21627979 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627979 = validateParameter(valid_21627979, JString, required = false,
                                   default = nil)
  if valid_21627979 != nil:
    section.add "X-Amz-Security-Token", valid_21627979
  var valid_21627980 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627980 = validateParameter(valid_21627980, JString, required = false,
                                   default = nil)
  if valid_21627980 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627980
  var valid_21627981 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627981 = validateParameter(valid_21627981, JString, required = false,
                                   default = nil)
  if valid_21627981 != nil:
    section.add "X-Amz-Algorithm", valid_21627981
  var valid_21627982 = header.getOrDefault("X-Amz-Signature")
  valid_21627982 = validateParameter(valid_21627982, JString, required = false,
                                   default = nil)
  if valid_21627982 != nil:
    section.add "X-Amz-Signature", valid_21627982
  var valid_21627983 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627983 = validateParameter(valid_21627983, JString, required = false,
                                   default = nil)
  if valid_21627983 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627983
  var valid_21627984 = header.getOrDefault("X-Amz-Credential")
  valid_21627984 = validateParameter(valid_21627984, JString, required = false,
                                   default = nil)
  if valid_21627984 != nil:
    section.add "X-Amz-Credential", valid_21627984
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21627985 = formData.getOrDefault("StackSetName")
  valid_21627985 = validateParameter(valid_21627985, JString, required = true,
                                   default = nil)
  if valid_21627985 != nil:
    section.add "StackSetName", valid_21627985
  var valid_21627986 = formData.getOrDefault("OperationId")
  valid_21627986 = validateParameter(valid_21627986, JString, required = true,
                                   default = nil)
  if valid_21627986 != nil:
    section.add "OperationId", valid_21627986
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627987: Call_PostStopStackSetOperation_21627973;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_21627987.validator(path, query, header, formData, body, _)
  let scheme = call_21627987.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627987.makeUrl(scheme.get, call_21627987.host, call_21627987.base,
                               call_21627987.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627987, uri, valid, _)

proc call*(call_21627988: Call_PostStopStackSetOperation_21627973;
          StackSetName: string; OperationId: string;
          Action: string = "StopStackSetOperation"; Version: string = "2010-05-15"): Recallable =
  ## postStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   Version: string (required)
  var query_21627989 = newJObject()
  var formData_21627990 = newJObject()
  add(formData_21627990, "StackSetName", newJString(StackSetName))
  add(query_21627989, "Action", newJString(Action))
  add(formData_21627990, "OperationId", newJString(OperationId))
  add(query_21627989, "Version", newJString(Version))
  result = call_21627988.call(nil, query_21627989, nil, formData_21627990, nil)

var postStopStackSetOperation* = Call_PostStopStackSetOperation_21627973(
    name: "postStopStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_PostStopStackSetOperation_21627974, base: "/",
    makeUrl: url_PostStopStackSetOperation_21627975,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetStopStackSetOperation_21627956 = ref object of OpenApiRestCall_21625435
proc url_GetStopStackSetOperation_21627958(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetStopStackSetOperation_21627957(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   Version: JString (required)
  section = newJObject()
  var valid_21627959 = query.getOrDefault("Action")
  valid_21627959 = validateParameter(valid_21627959, JString, required = true, default = newJString(
      "StopStackSetOperation"))
  if valid_21627959 != nil:
    section.add "Action", valid_21627959
  var valid_21627960 = query.getOrDefault("StackSetName")
  valid_21627960 = validateParameter(valid_21627960, JString, required = true,
                                   default = nil)
  if valid_21627960 != nil:
    section.add "StackSetName", valid_21627960
  var valid_21627961 = query.getOrDefault("OperationId")
  valid_21627961 = validateParameter(valid_21627961, JString, required = true,
                                   default = nil)
  if valid_21627961 != nil:
    section.add "OperationId", valid_21627961
  var valid_21627962 = query.getOrDefault("Version")
  valid_21627962 = validateParameter(valid_21627962, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21627962 != nil:
    section.add "Version", valid_21627962
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21627963 = header.getOrDefault("X-Amz-Date")
  valid_21627963 = validateParameter(valid_21627963, JString, required = false,
                                   default = nil)
  if valid_21627963 != nil:
    section.add "X-Amz-Date", valid_21627963
  var valid_21627964 = header.getOrDefault("X-Amz-Security-Token")
  valid_21627964 = validateParameter(valid_21627964, JString, required = false,
                                   default = nil)
  if valid_21627964 != nil:
    section.add "X-Amz-Security-Token", valid_21627964
  var valid_21627965 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21627965 = validateParameter(valid_21627965, JString, required = false,
                                   default = nil)
  if valid_21627965 != nil:
    section.add "X-Amz-Content-Sha256", valid_21627965
  var valid_21627966 = header.getOrDefault("X-Amz-Algorithm")
  valid_21627966 = validateParameter(valid_21627966, JString, required = false,
                                   default = nil)
  if valid_21627966 != nil:
    section.add "X-Amz-Algorithm", valid_21627966
  var valid_21627967 = header.getOrDefault("X-Amz-Signature")
  valid_21627967 = validateParameter(valid_21627967, JString, required = false,
                                   default = nil)
  if valid_21627967 != nil:
    section.add "X-Amz-Signature", valid_21627967
  var valid_21627968 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21627968 = validateParameter(valid_21627968, JString, required = false,
                                   default = nil)
  if valid_21627968 != nil:
    section.add "X-Amz-SignedHeaders", valid_21627968
  var valid_21627969 = header.getOrDefault("X-Amz-Credential")
  valid_21627969 = validateParameter(valid_21627969, JString, required = false,
                                   default = nil)
  if valid_21627969 != nil:
    section.add "X-Amz-Credential", valid_21627969
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21627970: Call_GetStopStackSetOperation_21627956;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_21627970.validator(path, query, header, formData, body, _)
  let scheme = call_21627970.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21627970.makeUrl(scheme.get, call_21627970.host, call_21627970.base,
                               call_21627970.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21627970, uri, valid, _)

proc call*(call_21627971: Call_GetStopStackSetOperation_21627956;
          StackSetName: string; OperationId: string;
          Action: string = "StopStackSetOperation"; Version: string = "2010-05-15"): Recallable =
  ## getStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   Version: string (required)
  var query_21627972 = newJObject()
  add(query_21627972, "Action", newJString(Action))
  add(query_21627972, "StackSetName", newJString(StackSetName))
  add(query_21627972, "OperationId", newJString(OperationId))
  add(query_21627972, "Version", newJString(Version))
  result = call_21627971.call(nil, query_21627972, nil, nil, nil)

var getStopStackSetOperation* = Call_GetStopStackSetOperation_21627956(
    name: "getStopStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_GetStopStackSetOperation_21627957, base: "/",
    makeUrl: url_GetStopStackSetOperation_21627958,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStack_21628023 = ref object of OpenApiRestCall_21625435
proc url_PostUpdateStack_21628025(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStack_21628024(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628026 = query.getOrDefault("Action")
  valid_21628026 = validateParameter(valid_21628026, JString, required = true,
                                   default = newJString("UpdateStack"))
  if valid_21628026 != nil:
    section.add "Action", valid_21628026
  var valid_21628027 = query.getOrDefault("Version")
  valid_21628027 = validateParameter(valid_21628027, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628027 != nil:
    section.add "Version", valid_21628027
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628028 = header.getOrDefault("X-Amz-Date")
  valid_21628028 = validateParameter(valid_21628028, JString, required = false,
                                   default = nil)
  if valid_21628028 != nil:
    section.add "X-Amz-Date", valid_21628028
  var valid_21628029 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628029 = validateParameter(valid_21628029, JString, required = false,
                                   default = nil)
  if valid_21628029 != nil:
    section.add "X-Amz-Security-Token", valid_21628029
  var valid_21628030 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628030 = validateParameter(valid_21628030, JString, required = false,
                                   default = nil)
  if valid_21628030 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628030
  var valid_21628031 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628031 = validateParameter(valid_21628031, JString, required = false,
                                   default = nil)
  if valid_21628031 != nil:
    section.add "X-Amz-Algorithm", valid_21628031
  var valid_21628032 = header.getOrDefault("X-Amz-Signature")
  valid_21628032 = validateParameter(valid_21628032, JString, required = false,
                                   default = nil)
  if valid_21628032 != nil:
    section.add "X-Amz-Signature", valid_21628032
  var valid_21628033 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628033 = validateParameter(valid_21628033, JString, required = false,
                                   default = nil)
  if valid_21628033 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628033
  var valid_21628034 = header.getOrDefault("X-Amz-Credential")
  valid_21628034 = validateParameter(valid_21628034, JString, required = false,
                                   default = nil)
  if valid_21628034 != nil:
    section.add "X-Amz-Credential", valid_21628034
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  section = newJObject()
  var valid_21628035 = formData.getOrDefault("StackPolicyDuringUpdateBody")
  valid_21628035 = validateParameter(valid_21628035, JString, required = false,
                                   default = nil)
  if valid_21628035 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_21628035
  var valid_21628036 = formData.getOrDefault("StackPolicyURL")
  valid_21628036 = validateParameter(valid_21628036, JString, required = false,
                                   default = nil)
  if valid_21628036 != nil:
    section.add "StackPolicyURL", valid_21628036
  var valid_21628037 = formData.getOrDefault("RoleARN")
  valid_21628037 = validateParameter(valid_21628037, JString, required = false,
                                   default = nil)
  if valid_21628037 != nil:
    section.add "RoleARN", valid_21628037
  var valid_21628038 = formData.getOrDefault("ResourceTypes")
  valid_21628038 = validateParameter(valid_21628038, JArray, required = false,
                                   default = nil)
  if valid_21628038 != nil:
    section.add "ResourceTypes", valid_21628038
  var valid_21628039 = formData.getOrDefault("TemplateURL")
  valid_21628039 = validateParameter(valid_21628039, JString, required = false,
                                   default = nil)
  if valid_21628039 != nil:
    section.add "TemplateURL", valid_21628039
  var valid_21628040 = formData.getOrDefault("Capabilities")
  valid_21628040 = validateParameter(valid_21628040, JArray, required = false,
                                   default = nil)
  if valid_21628040 != nil:
    section.add "Capabilities", valid_21628040
  var valid_21628041 = formData.getOrDefault(
      "RollbackConfiguration.MonitoringTimeInMinutes")
  valid_21628041 = validateParameter(valid_21628041, JString, required = false,
                                   default = nil)
  if valid_21628041 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_21628041
  var valid_21628042 = formData.getOrDefault("Tags")
  valid_21628042 = validateParameter(valid_21628042, JArray, required = false,
                                   default = nil)
  if valid_21628042 != nil:
    section.add "Tags", valid_21628042
  var valid_21628043 = formData.getOrDefault("ClientRequestToken")
  valid_21628043 = validateParameter(valid_21628043, JString, required = false,
                                   default = nil)
  if valid_21628043 != nil:
    section.add "ClientRequestToken", valid_21628043
  var valid_21628044 = formData.getOrDefault("UsePreviousTemplate")
  valid_21628044 = validateParameter(valid_21628044, JBool, required = false,
                                   default = nil)
  if valid_21628044 != nil:
    section.add "UsePreviousTemplate", valid_21628044
  var valid_21628045 = formData.getOrDefault("Parameters")
  valid_21628045 = validateParameter(valid_21628045, JArray, required = false,
                                   default = nil)
  if valid_21628045 != nil:
    section.add "Parameters", valid_21628045
  var valid_21628046 = formData.getOrDefault("NotificationARNs")
  valid_21628046 = validateParameter(valid_21628046, JArray, required = false,
                                   default = nil)
  if valid_21628046 != nil:
    section.add "NotificationARNs", valid_21628046
  var valid_21628047 = formData.getOrDefault(
      "RollbackConfiguration.RollbackTriggers")
  valid_21628047 = validateParameter(valid_21628047, JArray, required = false,
                                   default = nil)
  if valid_21628047 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_21628047
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_21628048 = formData.getOrDefault("StackName")
  valid_21628048 = validateParameter(valid_21628048, JString, required = true,
                                   default = nil)
  if valid_21628048 != nil:
    section.add "StackName", valid_21628048
  var valid_21628049 = formData.getOrDefault("TemplateBody")
  valid_21628049 = validateParameter(valid_21628049, JString, required = false,
                                   default = nil)
  if valid_21628049 != nil:
    section.add "TemplateBody", valid_21628049
  var valid_21628050 = formData.getOrDefault("StackPolicyDuringUpdateURL")
  valid_21628050 = validateParameter(valid_21628050, JString, required = false,
                                   default = nil)
  if valid_21628050 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_21628050
  var valid_21628051 = formData.getOrDefault("StackPolicyBody")
  valid_21628051 = validateParameter(valid_21628051, JString, required = false,
                                   default = nil)
  if valid_21628051 != nil:
    section.add "StackPolicyBody", valid_21628051
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628052: Call_PostUpdateStack_21628023; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_21628052.validator(path, query, header, formData, body, _)
  let scheme = call_21628052.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628052.makeUrl(scheme.get, call_21628052.host, call_21628052.base,
                               call_21628052.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628052, uri, valid, _)

proc call*(call_21628053: Call_PostUpdateStack_21628023; StackName: string;
          StackPolicyDuringUpdateBody: string = ""; StackPolicyURL: string = "";
          RoleARN: string = ""; ResourceTypes: JsonNode = nil; TemplateURL: string = "";
          Capabilities: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Tags: JsonNode = nil; ClientRequestToken: string = "";
          UsePreviousTemplate: bool = false; Parameters: JsonNode = nil;
          Action: string = "UpdateStack"; NotificationARNs: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          TemplateBody: string = ""; Version: string = "2010-05-15";
          StackPolicyDuringUpdateURL: string = ""; StackPolicyBody: string = ""): Recallable =
  ## postUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Action: string (required)
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: string (required)
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  var query_21628054 = newJObject()
  var formData_21628055 = newJObject()
  add(formData_21628055, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(formData_21628055, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_21628055, "RoleARN", newJString(RoleARN))
  if ResourceTypes != nil:
    formData_21628055.add "ResourceTypes", ResourceTypes
  add(formData_21628055, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_21628055.add "Capabilities", Capabilities
  add(formData_21628055, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Tags != nil:
    formData_21628055.add "Tags", Tags
  add(formData_21628055, "ClientRequestToken", newJString(ClientRequestToken))
  add(formData_21628055, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if Parameters != nil:
    formData_21628055.add "Parameters", Parameters
  add(query_21628054, "Action", newJString(Action))
  if NotificationARNs != nil:
    formData_21628055.add "NotificationARNs", NotificationARNs
  if RollbackConfigurationRollbackTriggers != nil:
    formData_21628055.add "RollbackConfiguration.RollbackTriggers",
                         RollbackConfigurationRollbackTriggers
  add(formData_21628055, "StackName", newJString(StackName))
  add(formData_21628055, "TemplateBody", newJString(TemplateBody))
  add(query_21628054, "Version", newJString(Version))
  add(formData_21628055, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(formData_21628055, "StackPolicyBody", newJString(StackPolicyBody))
  result = call_21628053.call(nil, query_21628054, nil, formData_21628055, nil)

var postUpdateStack* = Call_PostUpdateStack_21628023(name: "postUpdateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_PostUpdateStack_21628024,
    base: "/", makeUrl: url_PostUpdateStack_21628025,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStack_21627991 = ref object of OpenApiRestCall_21625435
proc url_GetUpdateStack_21627993(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStack_21627992(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: JString (required)
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  section = newJObject()
  var valid_21627994 = query.getOrDefault("StackPolicyBody")
  valid_21627994 = validateParameter(valid_21627994, JString, required = false,
                                   default = nil)
  if valid_21627994 != nil:
    section.add "StackPolicyBody", valid_21627994
  var valid_21627995 = query.getOrDefault("TemplateURL")
  valid_21627995 = validateParameter(valid_21627995, JString, required = false,
                                   default = nil)
  if valid_21627995 != nil:
    section.add "TemplateURL", valid_21627995
  var valid_21627996 = query.getOrDefault("StackPolicyURL")
  valid_21627996 = validateParameter(valid_21627996, JString, required = false,
                                   default = nil)
  if valid_21627996 != nil:
    section.add "StackPolicyURL", valid_21627996
  var valid_21627997 = query.getOrDefault("TemplateBody")
  valid_21627997 = validateParameter(valid_21627997, JString, required = false,
                                   default = nil)
  if valid_21627997 != nil:
    section.add "TemplateBody", valid_21627997
  var valid_21627998 = query.getOrDefault("Tags")
  valid_21627998 = validateParameter(valid_21627998, JArray, required = false,
                                   default = nil)
  if valid_21627998 != nil:
    section.add "Tags", valid_21627998
  var valid_21627999 = query.getOrDefault("Capabilities")
  valid_21627999 = validateParameter(valid_21627999, JArray, required = false,
                                   default = nil)
  if valid_21627999 != nil:
    section.add "Capabilities", valid_21627999
  var valid_21628000 = query.getOrDefault("Parameters")
  valid_21628000 = validateParameter(valid_21628000, JArray, required = false,
                                   default = nil)
  if valid_21628000 != nil:
    section.add "Parameters", valid_21628000
  var valid_21628001 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_21628001 = validateParameter(valid_21628001, JString, required = false,
                                   default = nil)
  if valid_21628001 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_21628001
  var valid_21628002 = query.getOrDefault("Action")
  valid_21628002 = validateParameter(valid_21628002, JString, required = true,
                                   default = newJString("UpdateStack"))
  if valid_21628002 != nil:
    section.add "Action", valid_21628002
  var valid_21628003 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_21628003 = validateParameter(valid_21628003, JArray, required = false,
                                   default = nil)
  if valid_21628003 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_21628003
  var valid_21628004 = query.getOrDefault("RoleARN")
  valid_21628004 = validateParameter(valid_21628004, JString, required = false,
                                   default = nil)
  if valid_21628004 != nil:
    section.add "RoleARN", valid_21628004
  var valid_21628005 = query.getOrDefault("NotificationARNs")
  valid_21628005 = validateParameter(valid_21628005, JArray, required = false,
                                   default = nil)
  if valid_21628005 != nil:
    section.add "NotificationARNs", valid_21628005
  var valid_21628006 = query.getOrDefault("ClientRequestToken")
  valid_21628006 = validateParameter(valid_21628006, JString, required = false,
                                   default = nil)
  if valid_21628006 != nil:
    section.add "ClientRequestToken", valid_21628006
  var valid_21628007 = query.getOrDefault("StackPolicyDuringUpdateURL")
  valid_21628007 = validateParameter(valid_21628007, JString, required = false,
                                   default = nil)
  if valid_21628007 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_21628007
  var valid_21628008 = query.getOrDefault("UsePreviousTemplate")
  valid_21628008 = validateParameter(valid_21628008, JBool, required = false,
                                   default = nil)
  if valid_21628008 != nil:
    section.add "UsePreviousTemplate", valid_21628008
  var valid_21628009 = query.getOrDefault("StackPolicyDuringUpdateBody")
  valid_21628009 = validateParameter(valid_21628009, JString, required = false,
                                   default = nil)
  if valid_21628009 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_21628009
  var valid_21628010 = query.getOrDefault("ResourceTypes")
  valid_21628010 = validateParameter(valid_21628010, JArray, required = false,
                                   default = nil)
  if valid_21628010 != nil:
    section.add "ResourceTypes", valid_21628010
  var valid_21628011 = query.getOrDefault("Version")
  valid_21628011 = validateParameter(valid_21628011, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628011 != nil:
    section.add "Version", valid_21628011
  var valid_21628012 = query.getOrDefault("StackName")
  valid_21628012 = validateParameter(valid_21628012, JString, required = true,
                                   default = nil)
  if valid_21628012 != nil:
    section.add "StackName", valid_21628012
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628013 = header.getOrDefault("X-Amz-Date")
  valid_21628013 = validateParameter(valid_21628013, JString, required = false,
                                   default = nil)
  if valid_21628013 != nil:
    section.add "X-Amz-Date", valid_21628013
  var valid_21628014 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628014 = validateParameter(valid_21628014, JString, required = false,
                                   default = nil)
  if valid_21628014 != nil:
    section.add "X-Amz-Security-Token", valid_21628014
  var valid_21628015 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628015 = validateParameter(valid_21628015, JString, required = false,
                                   default = nil)
  if valid_21628015 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628015
  var valid_21628016 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628016 = validateParameter(valid_21628016, JString, required = false,
                                   default = nil)
  if valid_21628016 != nil:
    section.add "X-Amz-Algorithm", valid_21628016
  var valid_21628017 = header.getOrDefault("X-Amz-Signature")
  valid_21628017 = validateParameter(valid_21628017, JString, required = false,
                                   default = nil)
  if valid_21628017 != nil:
    section.add "X-Amz-Signature", valid_21628017
  var valid_21628018 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628018 = validateParameter(valid_21628018, JString, required = false,
                                   default = nil)
  if valid_21628018 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628018
  var valid_21628019 = header.getOrDefault("X-Amz-Credential")
  valid_21628019 = validateParameter(valid_21628019, JString, required = false,
                                   default = nil)
  if valid_21628019 != nil:
    section.add "X-Amz-Credential", valid_21628019
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628020: Call_GetUpdateStack_21627991; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_21628020.validator(path, query, header, formData, body, _)
  let scheme = call_21628020.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628020.makeUrl(scheme.get, call_21628020.host, call_21628020.base,
                               call_21628020.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628020, uri, valid, _)

proc call*(call_21628021: Call_GetUpdateStack_21627991; StackName: string;
          StackPolicyBody: string = ""; TemplateURL: string = "";
          StackPolicyURL: string = ""; TemplateBody: string = ""; Tags: JsonNode = nil;
          Capabilities: JsonNode = nil; Parameters: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Action: string = "UpdateStack";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          RoleARN: string = ""; NotificationARNs: JsonNode = nil;
          ClientRequestToken: string = ""; StackPolicyDuringUpdateURL: string = "";
          UsePreviousTemplate: bool = false;
          StackPolicyDuringUpdateBody: string = ""; ResourceTypes: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: string (required)
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  var query_21628022 = newJObject()
  add(query_21628022, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_21628022, "TemplateURL", newJString(TemplateURL))
  add(query_21628022, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_21628022, "TemplateBody", newJString(TemplateBody))
  if Tags != nil:
    query_21628022.add "Tags", Tags
  if Capabilities != nil:
    query_21628022.add "Capabilities", Capabilities
  if Parameters != nil:
    query_21628022.add "Parameters", Parameters
  add(query_21628022, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  add(query_21628022, "Action", newJString(Action))
  if RollbackConfigurationRollbackTriggers != nil:
    query_21628022.add "RollbackConfiguration.RollbackTriggers",
                      RollbackConfigurationRollbackTriggers
  add(query_21628022, "RoleARN", newJString(RoleARN))
  if NotificationARNs != nil:
    query_21628022.add "NotificationARNs", NotificationARNs
  add(query_21628022, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_21628022, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(query_21628022, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_21628022, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  if ResourceTypes != nil:
    query_21628022.add "ResourceTypes", ResourceTypes
  add(query_21628022, "Version", newJString(Version))
  add(query_21628022, "StackName", newJString(StackName))
  result = call_21628021.call(nil, query_21628022, nil, nil, nil)

var getUpdateStack* = Call_GetUpdateStack_21627991(name: "getUpdateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_GetUpdateStack_21627992,
    base: "/", makeUrl: url_GetUpdateStack_21627993,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackInstances_21628083 = ref object of OpenApiRestCall_21625435
proc url_PostUpdateStackInstances_21628085(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackInstances_21628084(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628086 = query.getOrDefault("Action")
  valid_21628086 = validateParameter(valid_21628086, JString, required = true,
                                   default = newJString("UpdateStackInstances"))
  if valid_21628086 != nil:
    section.add "Action", valid_21628086
  var valid_21628087 = query.getOrDefault("Version")
  valid_21628087 = validateParameter(valid_21628087, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628087 != nil:
    section.add "Version", valid_21628087
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628088 = header.getOrDefault("X-Amz-Date")
  valid_21628088 = validateParameter(valid_21628088, JString, required = false,
                                   default = nil)
  if valid_21628088 != nil:
    section.add "X-Amz-Date", valid_21628088
  var valid_21628089 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628089 = validateParameter(valid_21628089, JString, required = false,
                                   default = nil)
  if valid_21628089 != nil:
    section.add "X-Amz-Security-Token", valid_21628089
  var valid_21628090 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628090 = validateParameter(valid_21628090, JString, required = false,
                                   default = nil)
  if valid_21628090 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628090
  var valid_21628091 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628091 = validateParameter(valid_21628091, JString, required = false,
                                   default = nil)
  if valid_21628091 != nil:
    section.add "X-Amz-Algorithm", valid_21628091
  var valid_21628092 = header.getOrDefault("X-Amz-Signature")
  valid_21628092 = validateParameter(valid_21628092, JString, required = false,
                                   default = nil)
  if valid_21628092 != nil:
    section.add "X-Amz-Signature", valid_21628092
  var valid_21628093 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628093 = validateParameter(valid_21628093, JString, required = false,
                                   default = nil)
  if valid_21628093 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628093
  var valid_21628094 = header.getOrDefault("X-Amz-Credential")
  valid_21628094 = validateParameter(valid_21628094, JString, required = false,
                                   default = nil)
  if valid_21628094 != nil:
    section.add "X-Amz-Credential", valid_21628094
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  section = newJObject()
  var valid_21628095 = formData.getOrDefault(
      "OperationPreferences.FailureTolerancePercentage")
  valid_21628095 = validateParameter(valid_21628095, JString, required = false,
                                   default = nil)
  if valid_21628095 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21628095
  var valid_21628096 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentCount")
  valid_21628096 = validateParameter(valid_21628096, JString, required = false,
                                   default = nil)
  if valid_21628096 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21628096
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21628097 = formData.getOrDefault("StackSetName")
  valid_21628097 = validateParameter(valid_21628097, JString, required = true,
                                   default = nil)
  if valid_21628097 != nil:
    section.add "StackSetName", valid_21628097
  var valid_21628098 = formData.getOrDefault("Accounts")
  valid_21628098 = validateParameter(valid_21628098, JArray, required = false,
                                   default = nil)
  if valid_21628098 != nil:
    section.add "Accounts", valid_21628098
  var valid_21628099 = formData.getOrDefault("Regions")
  valid_21628099 = validateParameter(valid_21628099, JArray, required = true,
                                   default = nil)
  if valid_21628099 != nil:
    section.add "Regions", valid_21628099
  var valid_21628100 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_21628100 = validateParameter(valid_21628100, JArray, required = false,
                                   default = nil)
  if valid_21628100 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21628100
  var valid_21628101 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentPercentage")
  valid_21628101 = validateParameter(valid_21628101, JString, required = false,
                                   default = nil)
  if valid_21628101 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21628101
  var valid_21628102 = formData.getOrDefault("DeploymentTargets.Accounts")
  valid_21628102 = validateParameter(valid_21628102, JArray, required = false,
                                   default = nil)
  if valid_21628102 != nil:
    section.add "DeploymentTargets.Accounts", valid_21628102
  var valid_21628103 = formData.getOrDefault(
      "OperationPreferences.FailureToleranceCount")
  valid_21628103 = validateParameter(valid_21628103, JString, required = false,
                                   default = nil)
  if valid_21628103 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21628103
  var valid_21628104 = formData.getOrDefault(
      "DeploymentTargets.OrganizationalUnitIds")
  valid_21628104 = validateParameter(valid_21628104, JArray, required = false,
                                   default = nil)
  if valid_21628104 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21628104
  var valid_21628105 = formData.getOrDefault("OperationId")
  valid_21628105 = validateParameter(valid_21628105, JString, required = false,
                                   default = nil)
  if valid_21628105 != nil:
    section.add "OperationId", valid_21628105
  var valid_21628106 = formData.getOrDefault("ParameterOverrides")
  valid_21628106 = validateParameter(valid_21628106, JArray, required = false,
                                   default = nil)
  if valid_21628106 != nil:
    section.add "ParameterOverrides", valid_21628106
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628107: Call_PostUpdateStackInstances_21628083;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_21628107.validator(path, query, header, formData, body, _)
  let scheme = call_21628107.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628107.makeUrl(scheme.get, call_21628107.host, call_21628107.base,
                               call_21628107.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628107, uri, valid, _)

proc call*(call_21628108: Call_PostUpdateStackInstances_21628083;
          StackSetName: string; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Accounts: JsonNode = nil; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "UpdateStackInstances";
          DeploymentTargetsAccounts: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil;
          OperationId: string = ""; Version: string = "2010-05-15";
          ParameterOverrides: JsonNode = nil): Recallable =
  ## postUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Version: string (required)
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  var query_21628109 = newJObject()
  var formData_21628110 = newJObject()
  add(formData_21628110, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_21628110, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_21628110, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    formData_21628110.add "Accounts", Accounts
  if Regions != nil:
    formData_21628110.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    formData_21628110.add "OperationPreferences.RegionOrder",
                         OperationPreferencesRegionOrder
  add(formData_21628110, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21628109, "Action", newJString(Action))
  if DeploymentTargetsAccounts != nil:
    formData_21628110.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  add(formData_21628110, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if DeploymentTargetsOrganizationalUnitIds != nil:
    formData_21628110.add "DeploymentTargets.OrganizationalUnitIds",
                         DeploymentTargetsOrganizationalUnitIds
  add(formData_21628110, "OperationId", newJString(OperationId))
  add(query_21628109, "Version", newJString(Version))
  if ParameterOverrides != nil:
    formData_21628110.add "ParameterOverrides", ParameterOverrides
  result = call_21628108.call(nil, query_21628109, nil, formData_21628110, nil)

var postUpdateStackInstances* = Call_PostUpdateStackInstances_21628083(
    name: "postUpdateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_PostUpdateStackInstances_21628084, base: "/",
    makeUrl: url_PostUpdateStackInstances_21628085,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackInstances_21628056 = ref object of OpenApiRestCall_21625435
proc url_GetUpdateStackInstances_21628058(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackInstances_21628057(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  section = newJObject()
  var valid_21628059 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_21628059 = validateParameter(valid_21628059, JString, required = false,
                                   default = nil)
  if valid_21628059 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21628059
  var valid_21628060 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_21628060 = validateParameter(valid_21628060, JString, required = false,
                                   default = nil)
  if valid_21628060 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21628060
  var valid_21628061 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_21628061 = validateParameter(valid_21628061, JArray, required = false,
                                   default = nil)
  if valid_21628061 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21628061
  var valid_21628062 = query.getOrDefault("Action")
  valid_21628062 = validateParameter(valid_21628062, JString, required = true,
                                   default = newJString("UpdateStackInstances"))
  if valid_21628062 != nil:
    section.add "Action", valid_21628062
  var valid_21628063 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_21628063 = validateParameter(valid_21628063, JString, required = false,
                                   default = nil)
  if valid_21628063 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21628063
  var valid_21628064 = query.getOrDefault("ParameterOverrides")
  valid_21628064 = validateParameter(valid_21628064, JArray, required = false,
                                   default = nil)
  if valid_21628064 != nil:
    section.add "ParameterOverrides", valid_21628064
  var valid_21628065 = query.getOrDefault("StackSetName")
  valid_21628065 = validateParameter(valid_21628065, JString, required = true,
                                   default = nil)
  if valid_21628065 != nil:
    section.add "StackSetName", valid_21628065
  var valid_21628066 = query.getOrDefault("Accounts")
  valid_21628066 = validateParameter(valid_21628066, JArray, required = false,
                                   default = nil)
  if valid_21628066 != nil:
    section.add "Accounts", valid_21628066
  var valid_21628067 = query.getOrDefault("Regions")
  valid_21628067 = validateParameter(valid_21628067, JArray, required = true,
                                   default = nil)
  if valid_21628067 != nil:
    section.add "Regions", valid_21628067
  var valid_21628068 = query.getOrDefault("OperationId")
  valid_21628068 = validateParameter(valid_21628068, JString, required = false,
                                   default = nil)
  if valid_21628068 != nil:
    section.add "OperationId", valid_21628068
  var valid_21628069 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_21628069 = validateParameter(valid_21628069, JString, required = false,
                                   default = nil)
  if valid_21628069 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21628069
  var valid_21628070 = query.getOrDefault("Version")
  valid_21628070 = validateParameter(valid_21628070, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628070 != nil:
    section.add "Version", valid_21628070
  var valid_21628071 = query.getOrDefault("DeploymentTargets.Accounts")
  valid_21628071 = validateParameter(valid_21628071, JArray, required = false,
                                   default = nil)
  if valid_21628071 != nil:
    section.add "DeploymentTargets.Accounts", valid_21628071
  var valid_21628072 = query.getOrDefault("DeploymentTargets.OrganizationalUnitIds")
  valid_21628072 = validateParameter(valid_21628072, JArray, required = false,
                                   default = nil)
  if valid_21628072 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21628072
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628073 = header.getOrDefault("X-Amz-Date")
  valid_21628073 = validateParameter(valid_21628073, JString, required = false,
                                   default = nil)
  if valid_21628073 != nil:
    section.add "X-Amz-Date", valid_21628073
  var valid_21628074 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628074 = validateParameter(valid_21628074, JString, required = false,
                                   default = nil)
  if valid_21628074 != nil:
    section.add "X-Amz-Security-Token", valid_21628074
  var valid_21628075 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628075 = validateParameter(valid_21628075, JString, required = false,
                                   default = nil)
  if valid_21628075 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628075
  var valid_21628076 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628076 = validateParameter(valid_21628076, JString, required = false,
                                   default = nil)
  if valid_21628076 != nil:
    section.add "X-Amz-Algorithm", valid_21628076
  var valid_21628077 = header.getOrDefault("X-Amz-Signature")
  valid_21628077 = validateParameter(valid_21628077, JString, required = false,
                                   default = nil)
  if valid_21628077 != nil:
    section.add "X-Amz-Signature", valid_21628077
  var valid_21628078 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628078 = validateParameter(valid_21628078, JString, required = false,
                                   default = nil)
  if valid_21628078 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628078
  var valid_21628079 = header.getOrDefault("X-Amz-Credential")
  valid_21628079 = validateParameter(valid_21628079, JString, required = false,
                                   default = nil)
  if valid_21628079 != nil:
    section.add "X-Amz-Credential", valid_21628079
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628080: Call_GetUpdateStackInstances_21628056;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_21628080.validator(path, query, header, formData, body, _)
  let scheme = call_21628080.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628080.makeUrl(scheme.get, call_21628080.host, call_21628080.base,
                               call_21628080.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628080, uri, valid, _)

proc call*(call_21628081: Call_GetUpdateStackInstances_21628056;
          StackSetName: string; Regions: JsonNode;
          OperationPreferencesFailureToleranceCount: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          Action: string = "UpdateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          ParameterOverrides: JsonNode = nil; Accounts: JsonNode = nil;
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"; DeploymentTargetsAccounts: JsonNode = nil;
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil): Recallable =
  ## getUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  var query_21628082 = newJObject()
  add(query_21628082, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_21628082, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if OperationPreferencesRegionOrder != nil:
    query_21628082.add "OperationPreferences.RegionOrder",
                      OperationPreferencesRegionOrder
  add(query_21628082, "Action", newJString(Action))
  add(query_21628082, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  if ParameterOverrides != nil:
    query_21628082.add "ParameterOverrides", ParameterOverrides
  add(query_21628082, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    query_21628082.add "Accounts", Accounts
  if Regions != nil:
    query_21628082.add "Regions", Regions
  add(query_21628082, "OperationId", newJString(OperationId))
  add(query_21628082, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_21628082, "Version", newJString(Version))
  if DeploymentTargetsAccounts != nil:
    query_21628082.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  if DeploymentTargetsOrganizationalUnitIds != nil:
    query_21628082.add "DeploymentTargets.OrganizationalUnitIds",
                      DeploymentTargetsOrganizationalUnitIds
  result = call_21628081.call(nil, query_21628082, nil, nil, nil)

var getUpdateStackInstances* = Call_GetUpdateStackInstances_21628056(
    name: "getUpdateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_GetUpdateStackInstances_21628057, base: "/",
    makeUrl: url_GetUpdateStackInstances_21628058,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackSet_21628149 = ref object of OpenApiRestCall_21625435
proc url_PostUpdateStackSet_21628151(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackSet_21628150(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628152 = query.getOrDefault("Action")
  valid_21628152 = validateParameter(valid_21628152, JString, required = true,
                                   default = newJString("UpdateStackSet"))
  if valid_21628152 != nil:
    section.add "Action", valid_21628152
  var valid_21628153 = query.getOrDefault("Version")
  valid_21628153 = validateParameter(valid_21628153, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628153 != nil:
    section.add "Version", valid_21628153
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628154 = header.getOrDefault("X-Amz-Date")
  valid_21628154 = validateParameter(valid_21628154, JString, required = false,
                                   default = nil)
  if valid_21628154 != nil:
    section.add "X-Amz-Date", valid_21628154
  var valid_21628155 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628155 = validateParameter(valid_21628155, JString, required = false,
                                   default = nil)
  if valid_21628155 != nil:
    section.add "X-Amz-Security-Token", valid_21628155
  var valid_21628156 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628156 = validateParameter(valid_21628156, JString, required = false,
                                   default = nil)
  if valid_21628156 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628156
  var valid_21628157 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628157 = validateParameter(valid_21628157, JString, required = false,
                                   default = nil)
  if valid_21628157 != nil:
    section.add "X-Amz-Algorithm", valid_21628157
  var valid_21628158 = header.getOrDefault("X-Amz-Signature")
  valid_21628158 = validateParameter(valid_21628158, JString, required = false,
                                   default = nil)
  if valid_21628158 != nil:
    section.add "X-Amz-Signature", valid_21628158
  var valid_21628159 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628159 = validateParameter(valid_21628159, JString, required = false,
                                   default = nil)
  if valid_21628159 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628159
  var valid_21628160 = header.getOrDefault("X-Amz-Credential")
  valid_21628160 = validateParameter(valid_21628160, JString, required = false,
                                   default = nil)
  if valid_21628160 != nil:
    section.add "X-Amz-Credential", valid_21628160
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   AutoDeployment.RetainStacksOnAccountRemoval: JString
  ##                                              : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  ##   AutoDeployment.Enabled: JString
  ##                         : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   PermissionModel: JString
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. You cannot modify <code>PermissionModel</code> if there are stack instances associated with your stack set.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  section = newJObject()
  var valid_21628161 = formData.getOrDefault(
      "OperationPreferences.FailureTolerancePercentage")
  valid_21628161 = validateParameter(valid_21628161, JString, required = false,
                                   default = nil)
  if valid_21628161 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21628161
  var valid_21628162 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentCount")
  valid_21628162 = validateParameter(valid_21628162, JString, required = false,
                                   default = nil)
  if valid_21628162 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21628162
  var valid_21628163 = formData.getOrDefault(
      "AutoDeployment.RetainStacksOnAccountRemoval")
  valid_21628163 = validateParameter(valid_21628163, JString, required = false,
                                   default = nil)
  if valid_21628163 != nil:
    section.add "AutoDeployment.RetainStacksOnAccountRemoval", valid_21628163
  var valid_21628164 = formData.getOrDefault("AutoDeployment.Enabled")
  valid_21628164 = validateParameter(valid_21628164, JString, required = false,
                                   default = nil)
  if valid_21628164 != nil:
    section.add "AutoDeployment.Enabled", valid_21628164
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_21628165 = formData.getOrDefault("StackSetName")
  valid_21628165 = validateParameter(valid_21628165, JString, required = true,
                                   default = nil)
  if valid_21628165 != nil:
    section.add "StackSetName", valid_21628165
  var valid_21628166 = formData.getOrDefault("ExecutionRoleName")
  valid_21628166 = validateParameter(valid_21628166, JString, required = false,
                                   default = nil)
  if valid_21628166 != nil:
    section.add "ExecutionRoleName", valid_21628166
  var valid_21628167 = formData.getOrDefault("Accounts")
  valid_21628167 = validateParameter(valid_21628167, JArray, required = false,
                                   default = nil)
  if valid_21628167 != nil:
    section.add "Accounts", valid_21628167
  var valid_21628168 = formData.getOrDefault("TemplateURL")
  valid_21628168 = validateParameter(valid_21628168, JString, required = false,
                                   default = nil)
  if valid_21628168 != nil:
    section.add "TemplateURL", valid_21628168
  var valid_21628169 = formData.getOrDefault("Capabilities")
  valid_21628169 = validateParameter(valid_21628169, JArray, required = false,
                                   default = nil)
  if valid_21628169 != nil:
    section.add "Capabilities", valid_21628169
  var valid_21628170 = formData.getOrDefault("Tags")
  valid_21628170 = validateParameter(valid_21628170, JArray, required = false,
                                   default = nil)
  if valid_21628170 != nil:
    section.add "Tags", valid_21628170
  var valid_21628171 = formData.getOrDefault("Regions")
  valid_21628171 = validateParameter(valid_21628171, JArray, required = false,
                                   default = nil)
  if valid_21628171 != nil:
    section.add "Regions", valid_21628171
  var valid_21628172 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_21628172 = validateParameter(valid_21628172, JArray, required = false,
                                   default = nil)
  if valid_21628172 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21628172
  var valid_21628173 = formData.getOrDefault("UsePreviousTemplate")
  valid_21628173 = validateParameter(valid_21628173, JBool, required = false,
                                   default = nil)
  if valid_21628173 != nil:
    section.add "UsePreviousTemplate", valid_21628173
  var valid_21628174 = formData.getOrDefault("PermissionModel")
  valid_21628174 = validateParameter(valid_21628174, JString, required = false,
                                   default = newJString("SERVICE_MANAGED"))
  if valid_21628174 != nil:
    section.add "PermissionModel", valid_21628174
  var valid_21628175 = formData.getOrDefault("Parameters")
  valid_21628175 = validateParameter(valid_21628175, JArray, required = false,
                                   default = nil)
  if valid_21628175 != nil:
    section.add "Parameters", valid_21628175
  var valid_21628176 = formData.getOrDefault(
      "OperationPreferences.MaxConcurrentPercentage")
  valid_21628176 = validateParameter(valid_21628176, JString, required = false,
                                   default = nil)
  if valid_21628176 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21628176
  var valid_21628177 = formData.getOrDefault("AdministrationRoleARN")
  valid_21628177 = validateParameter(valid_21628177, JString, required = false,
                                   default = nil)
  if valid_21628177 != nil:
    section.add "AdministrationRoleARN", valid_21628177
  var valid_21628178 = formData.getOrDefault("DeploymentTargets.Accounts")
  valid_21628178 = validateParameter(valid_21628178, JArray, required = false,
                                   default = nil)
  if valid_21628178 != nil:
    section.add "DeploymentTargets.Accounts", valid_21628178
  var valid_21628179 = formData.getOrDefault(
      "OperationPreferences.FailureToleranceCount")
  valid_21628179 = validateParameter(valid_21628179, JString, required = false,
                                   default = nil)
  if valid_21628179 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21628179
  var valid_21628180 = formData.getOrDefault(
      "DeploymentTargets.OrganizationalUnitIds")
  valid_21628180 = validateParameter(valid_21628180, JArray, required = false,
                                   default = nil)
  if valid_21628180 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21628180
  var valid_21628181 = formData.getOrDefault("TemplateBody")
  valid_21628181 = validateParameter(valid_21628181, JString, required = false,
                                   default = nil)
  if valid_21628181 != nil:
    section.add "TemplateBody", valid_21628181
  var valid_21628182 = formData.getOrDefault("OperationId")
  valid_21628182 = validateParameter(valid_21628182, JString, required = false,
                                   default = nil)
  if valid_21628182 != nil:
    section.add "OperationId", valid_21628182
  var valid_21628183 = formData.getOrDefault("Description")
  valid_21628183 = validateParameter(valid_21628183, JString, required = false,
                                   default = nil)
  if valid_21628183 != nil:
    section.add "Description", valid_21628183
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628184: Call_PostUpdateStackSet_21628149; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_21628184.validator(path, query, header, formData, body, _)
  let scheme = call_21628184.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628184.makeUrl(scheme.get, call_21628184.host, call_21628184.base,
                               call_21628184.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628184, uri, valid, _)

proc call*(call_21628185: Call_PostUpdateStackSet_21628149; StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          AutoDeploymentRetainStacksOnAccountRemoval: string = "";
          AutoDeploymentEnabled: string = ""; ExecutionRoleName: string = "";
          Accounts: JsonNode = nil; TemplateURL: string = "";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil; Regions: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          UsePreviousTemplate: bool = false;
          PermissionModel: string = "SERVICE_MANAGED"; Parameters: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "UpdateStackSet"; AdministrationRoleARN: string = "";
          DeploymentTargetsAccounts: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil;
          TemplateBody: string = ""; OperationId: string = ""; Description: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   AutoDeploymentRetainStacksOnAccountRemoval: string
  ##                                             : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  ##   AutoDeploymentEnabled: string
  ##                        : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   PermissionModel: string
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. You cannot modify <code>PermissionModel</code> if there are stack instances associated with your stack set.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   Version: string (required)
  var query_21628186 = newJObject()
  var formData_21628187 = newJObject()
  add(formData_21628187, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_21628187, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_21628187, "AutoDeployment.RetainStacksOnAccountRemoval",
      newJString(AutoDeploymentRetainStacksOnAccountRemoval))
  add(formData_21628187, "AutoDeployment.Enabled",
      newJString(AutoDeploymentEnabled))
  add(formData_21628187, "StackSetName", newJString(StackSetName))
  add(formData_21628187, "ExecutionRoleName", newJString(ExecutionRoleName))
  if Accounts != nil:
    formData_21628187.add "Accounts", Accounts
  add(formData_21628187, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_21628187.add "Capabilities", Capabilities
  if Tags != nil:
    formData_21628187.add "Tags", Tags
  if Regions != nil:
    formData_21628187.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    formData_21628187.add "OperationPreferences.RegionOrder",
                         OperationPreferencesRegionOrder
  add(formData_21628187, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(formData_21628187, "PermissionModel", newJString(PermissionModel))
  if Parameters != nil:
    formData_21628187.add "Parameters", Parameters
  add(formData_21628187, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21628186, "Action", newJString(Action))
  add(formData_21628187, "AdministrationRoleARN",
      newJString(AdministrationRoleARN))
  if DeploymentTargetsAccounts != nil:
    formData_21628187.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  add(formData_21628187, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if DeploymentTargetsOrganizationalUnitIds != nil:
    formData_21628187.add "DeploymentTargets.OrganizationalUnitIds",
                         DeploymentTargetsOrganizationalUnitIds
  add(formData_21628187, "TemplateBody", newJString(TemplateBody))
  add(formData_21628187, "OperationId", newJString(OperationId))
  add(formData_21628187, "Description", newJString(Description))
  add(query_21628186, "Version", newJString(Version))
  result = call_21628185.call(nil, query_21628186, nil, formData_21628187, nil)

var postUpdateStackSet* = Call_PostUpdateStackSet_21628149(
    name: "postUpdateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackSet",
    validator: validate_PostUpdateStackSet_21628150, base: "/",
    makeUrl: url_PostUpdateStackSet_21628151, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackSet_21628111 = ref object of OpenApiRestCall_21625435
proc url_GetUpdateStackSet_21628113(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackSet_21628112(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   PermissionModel: JString
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. You cannot modify <code>PermissionModel</code> if there are stack instances associated with your stack set.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AutoDeployment.Enabled: JString
  ##                         : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  ##   DeploymentTargets.Accounts: JArray
  ##                             : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargets.OrganizationalUnitIds: JArray
  ##                                          : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   AutoDeployment.RetainStacksOnAccountRemoval: JString
  ##                                              : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  section = newJObject()
  var valid_21628114 = query.getOrDefault("TemplateURL")
  valid_21628114 = validateParameter(valid_21628114, JString, required = false,
                                   default = nil)
  if valid_21628114 != nil:
    section.add "TemplateURL", valid_21628114
  var valid_21628115 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_21628115 = validateParameter(valid_21628115, JString, required = false,
                                   default = nil)
  if valid_21628115 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_21628115
  var valid_21628116 = query.getOrDefault("TemplateBody")
  valid_21628116 = validateParameter(valid_21628116, JString, required = false,
                                   default = nil)
  if valid_21628116 != nil:
    section.add "TemplateBody", valid_21628116
  var valid_21628117 = query.getOrDefault("Description")
  valid_21628117 = validateParameter(valid_21628117, JString, required = false,
                                   default = nil)
  if valid_21628117 != nil:
    section.add "Description", valid_21628117
  var valid_21628118 = query.getOrDefault("AdministrationRoleARN")
  valid_21628118 = validateParameter(valid_21628118, JString, required = false,
                                   default = nil)
  if valid_21628118 != nil:
    section.add "AdministrationRoleARN", valid_21628118
  var valid_21628119 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_21628119 = validateParameter(valid_21628119, JString, required = false,
                                   default = nil)
  if valid_21628119 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_21628119
  var valid_21628120 = query.getOrDefault("Tags")
  valid_21628120 = validateParameter(valid_21628120, JArray, required = false,
                                   default = nil)
  if valid_21628120 != nil:
    section.add "Tags", valid_21628120
  var valid_21628121 = query.getOrDefault("PermissionModel")
  valid_21628121 = validateParameter(valid_21628121, JString, required = false,
                                   default = newJString("SERVICE_MANAGED"))
  if valid_21628121 != nil:
    section.add "PermissionModel", valid_21628121
  var valid_21628122 = query.getOrDefault("Capabilities")
  valid_21628122 = validateParameter(valid_21628122, JArray, required = false,
                                   default = nil)
  if valid_21628122 != nil:
    section.add "Capabilities", valid_21628122
  var valid_21628123 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_21628123 = validateParameter(valid_21628123, JArray, required = false,
                                   default = nil)
  if valid_21628123 != nil:
    section.add "OperationPreferences.RegionOrder", valid_21628123
  var valid_21628124 = query.getOrDefault("Parameters")
  valid_21628124 = validateParameter(valid_21628124, JArray, required = false,
                                   default = nil)
  if valid_21628124 != nil:
    section.add "Parameters", valid_21628124
  var valid_21628125 = query.getOrDefault("Action")
  valid_21628125 = validateParameter(valid_21628125, JString, required = true,
                                   default = newJString("UpdateStackSet"))
  if valid_21628125 != nil:
    section.add "Action", valid_21628125
  var valid_21628126 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_21628126 = validateParameter(valid_21628126, JString, required = false,
                                   default = nil)
  if valid_21628126 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_21628126
  var valid_21628127 = query.getOrDefault("StackSetName")
  valid_21628127 = validateParameter(valid_21628127, JString, required = true,
                                   default = nil)
  if valid_21628127 != nil:
    section.add "StackSetName", valid_21628127
  var valid_21628128 = query.getOrDefault("AutoDeployment.Enabled")
  valid_21628128 = validateParameter(valid_21628128, JString, required = false,
                                   default = nil)
  if valid_21628128 != nil:
    section.add "AutoDeployment.Enabled", valid_21628128
  var valid_21628129 = query.getOrDefault("ExecutionRoleName")
  valid_21628129 = validateParameter(valid_21628129, JString, required = false,
                                   default = nil)
  if valid_21628129 != nil:
    section.add "ExecutionRoleName", valid_21628129
  var valid_21628130 = query.getOrDefault("UsePreviousTemplate")
  valid_21628130 = validateParameter(valid_21628130, JBool, required = false,
                                   default = nil)
  if valid_21628130 != nil:
    section.add "UsePreviousTemplate", valid_21628130
  var valid_21628131 = query.getOrDefault("Accounts")
  valid_21628131 = validateParameter(valid_21628131, JArray, required = false,
                                   default = nil)
  if valid_21628131 != nil:
    section.add "Accounts", valid_21628131
  var valid_21628132 = query.getOrDefault("OperationId")
  valid_21628132 = validateParameter(valid_21628132, JString, required = false,
                                   default = nil)
  if valid_21628132 != nil:
    section.add "OperationId", valid_21628132
  var valid_21628133 = query.getOrDefault("Regions")
  valid_21628133 = validateParameter(valid_21628133, JArray, required = false,
                                   default = nil)
  if valid_21628133 != nil:
    section.add "Regions", valid_21628133
  var valid_21628134 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_21628134 = validateParameter(valid_21628134, JString, required = false,
                                   default = nil)
  if valid_21628134 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_21628134
  var valid_21628135 = query.getOrDefault("Version")
  valid_21628135 = validateParameter(valid_21628135, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628135 != nil:
    section.add "Version", valid_21628135
  var valid_21628136 = query.getOrDefault("DeploymentTargets.Accounts")
  valid_21628136 = validateParameter(valid_21628136, JArray, required = false,
                                   default = nil)
  if valid_21628136 != nil:
    section.add "DeploymentTargets.Accounts", valid_21628136
  var valid_21628137 = query.getOrDefault("DeploymentTargets.OrganizationalUnitIds")
  valid_21628137 = validateParameter(valid_21628137, JArray, required = false,
                                   default = nil)
  if valid_21628137 != nil:
    section.add "DeploymentTargets.OrganizationalUnitIds", valid_21628137
  var valid_21628138 = query.getOrDefault("AutoDeployment.RetainStacksOnAccountRemoval")
  valid_21628138 = validateParameter(valid_21628138, JString, required = false,
                                   default = nil)
  if valid_21628138 != nil:
    section.add "AutoDeployment.RetainStacksOnAccountRemoval", valid_21628138
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628139 = header.getOrDefault("X-Amz-Date")
  valid_21628139 = validateParameter(valid_21628139, JString, required = false,
                                   default = nil)
  if valid_21628139 != nil:
    section.add "X-Amz-Date", valid_21628139
  var valid_21628140 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628140 = validateParameter(valid_21628140, JString, required = false,
                                   default = nil)
  if valid_21628140 != nil:
    section.add "X-Amz-Security-Token", valid_21628140
  var valid_21628141 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628141 = validateParameter(valid_21628141, JString, required = false,
                                   default = nil)
  if valid_21628141 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628141
  var valid_21628142 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628142 = validateParameter(valid_21628142, JString, required = false,
                                   default = nil)
  if valid_21628142 != nil:
    section.add "X-Amz-Algorithm", valid_21628142
  var valid_21628143 = header.getOrDefault("X-Amz-Signature")
  valid_21628143 = validateParameter(valid_21628143, JString, required = false,
                                   default = nil)
  if valid_21628143 != nil:
    section.add "X-Amz-Signature", valid_21628143
  var valid_21628144 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628144 = validateParameter(valid_21628144, JString, required = false,
                                   default = nil)
  if valid_21628144 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628144
  var valid_21628145 = header.getOrDefault("X-Amz-Credential")
  valid_21628145 = validateParameter(valid_21628145, JString, required = false,
                                   default = nil)
  if valid_21628145 != nil:
    section.add "X-Amz-Credential", valid_21628145
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628146: Call_GetUpdateStackSet_21628111; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_21628146.validator(path, query, header, formData, body, _)
  let scheme = call_21628146.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628146.makeUrl(scheme.get, call_21628146.host, call_21628146.base,
                               call_21628146.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628146, uri, valid, _)

proc call*(call_21628147: Call_GetUpdateStackSet_21628111; StackSetName: string;
          TemplateURL: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          TemplateBody: string = ""; Description: string = "";
          AdministrationRoleARN: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          Tags: JsonNode = nil; PermissionModel: string = "SERVICE_MANAGED";
          Capabilities: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          Parameters: JsonNode = nil; Action: string = "UpdateStackSet";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          AutoDeploymentEnabled: string = ""; ExecutionRoleName: string = "";
          UsePreviousTemplate: bool = false; Accounts: JsonNode = nil;
          OperationId: string = ""; Regions: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"; DeploymentTargetsAccounts: JsonNode = nil;
          DeploymentTargetsOrganizationalUnitIds: JsonNode = nil;
          AutoDeploymentRetainStacksOnAccountRemoval: string = ""): Recallable =
  ## getUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   PermissionModel: string
  ##                  : <p>Describes how the IAM roles required for stack set operations are created. You cannot modify <code>PermissionModel</code> if there are stack instances associated with your stack set.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AutoDeploymentEnabled: string
  ##                        : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   DeploymentTargetsAccounts: JArray
  ##                            : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The names of one or more AWS accounts for which you want to deploy stack set updates.
  ##   DeploymentTargetsOrganizationalUnitIds: JArray
  ##                                         : <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
  ## The organization root ID or organizational unit (OUs) IDs to which StackSets deploys.
  ##   AutoDeploymentRetainStacksOnAccountRemoval: string
  ##                                             : [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
  ## If set to <code>true</code>, stack resources are retained when an account is removed from a target organization or OU. If set to <code>false</code>, stack resources are deleted. Specify only if <code>Enabled</code> is set to <code>True</code>.
  var query_21628148 = newJObject()
  add(query_21628148, "TemplateURL", newJString(TemplateURL))
  add(query_21628148, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_21628148, "TemplateBody", newJString(TemplateBody))
  add(query_21628148, "Description", newJString(Description))
  add(query_21628148, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_21628148, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Tags != nil:
    query_21628148.add "Tags", Tags
  add(query_21628148, "PermissionModel", newJString(PermissionModel))
  if Capabilities != nil:
    query_21628148.add "Capabilities", Capabilities
  if OperationPreferencesRegionOrder != nil:
    query_21628148.add "OperationPreferences.RegionOrder",
                      OperationPreferencesRegionOrder
  if Parameters != nil:
    query_21628148.add "Parameters", Parameters
  add(query_21628148, "Action", newJString(Action))
  add(query_21628148, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_21628148, "StackSetName", newJString(StackSetName))
  add(query_21628148, "AutoDeployment.Enabled", newJString(AutoDeploymentEnabled))
  add(query_21628148, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_21628148, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if Accounts != nil:
    query_21628148.add "Accounts", Accounts
  add(query_21628148, "OperationId", newJString(OperationId))
  if Regions != nil:
    query_21628148.add "Regions", Regions
  add(query_21628148, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_21628148, "Version", newJString(Version))
  if DeploymentTargetsAccounts != nil:
    query_21628148.add "DeploymentTargets.Accounts", DeploymentTargetsAccounts
  if DeploymentTargetsOrganizationalUnitIds != nil:
    query_21628148.add "DeploymentTargets.OrganizationalUnitIds",
                      DeploymentTargetsOrganizationalUnitIds
  add(query_21628148, "AutoDeployment.RetainStacksOnAccountRemoval",
      newJString(AutoDeploymentRetainStacksOnAccountRemoval))
  result = call_21628147.call(nil, query_21628148, nil, nil, nil)

var getUpdateStackSet* = Call_GetUpdateStackSet_21628111(name: "getUpdateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStackSet", validator: validate_GetUpdateStackSet_21628112,
    base: "/", makeUrl: url_GetUpdateStackSet_21628113,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateTerminationProtection_21628205 = ref object of OpenApiRestCall_21625435
proc url_PostUpdateTerminationProtection_21628207(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateTerminationProtection_21628206(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628208 = query.getOrDefault("Action")
  valid_21628208 = validateParameter(valid_21628208, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_21628208 != nil:
    section.add "Action", valid_21628208
  var valid_21628209 = query.getOrDefault("Version")
  valid_21628209 = validateParameter(valid_21628209, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628209 != nil:
    section.add "Version", valid_21628209
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628210 = header.getOrDefault("X-Amz-Date")
  valid_21628210 = validateParameter(valid_21628210, JString, required = false,
                                   default = nil)
  if valid_21628210 != nil:
    section.add "X-Amz-Date", valid_21628210
  var valid_21628211 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628211 = validateParameter(valid_21628211, JString, required = false,
                                   default = nil)
  if valid_21628211 != nil:
    section.add "X-Amz-Security-Token", valid_21628211
  var valid_21628212 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628212 = validateParameter(valid_21628212, JString, required = false,
                                   default = nil)
  if valid_21628212 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628212
  var valid_21628213 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628213 = validateParameter(valid_21628213, JString, required = false,
                                   default = nil)
  if valid_21628213 != nil:
    section.add "X-Amz-Algorithm", valid_21628213
  var valid_21628214 = header.getOrDefault("X-Amz-Signature")
  valid_21628214 = validateParameter(valid_21628214, JString, required = false,
                                   default = nil)
  if valid_21628214 != nil:
    section.add "X-Amz-Signature", valid_21628214
  var valid_21628215 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628215 = validateParameter(valid_21628215, JString, required = false,
                                   default = nil)
  if valid_21628215 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628215
  var valid_21628216 = header.getOrDefault("X-Amz-Credential")
  valid_21628216 = validateParameter(valid_21628216, JString, required = false,
                                   default = nil)
  if valid_21628216 != nil:
    section.add "X-Amz-Credential", valid_21628216
  result.add "header", section
  ## parameters in `formData` object:
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `EnableTerminationProtection` field"
  var valid_21628217 = formData.getOrDefault("EnableTerminationProtection")
  valid_21628217 = validateParameter(valid_21628217, JBool, required = true,
                                   default = nil)
  if valid_21628217 != nil:
    section.add "EnableTerminationProtection", valid_21628217
  var valid_21628218 = formData.getOrDefault("StackName")
  valid_21628218 = validateParameter(valid_21628218, JString, required = true,
                                   default = nil)
  if valid_21628218 != nil:
    section.add "StackName", valid_21628218
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628219: Call_PostUpdateTerminationProtection_21628205;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_21628219.validator(path, query, header, formData, body, _)
  let scheme = call_21628219.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628219.makeUrl(scheme.get, call_21628219.host, call_21628219.base,
                               call_21628219.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628219, uri, valid, _)

proc call*(call_21628220: Call_PostUpdateTerminationProtection_21628205;
          EnableTerminationProtection: bool; StackName: string;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## postUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   Version: string (required)
  var query_21628221 = newJObject()
  var formData_21628222 = newJObject()
  add(formData_21628222, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_21628221, "Action", newJString(Action))
  add(formData_21628222, "StackName", newJString(StackName))
  add(query_21628221, "Version", newJString(Version))
  result = call_21628220.call(nil, query_21628221, nil, formData_21628222, nil)

var postUpdateTerminationProtection* = Call_PostUpdateTerminationProtection_21628205(
    name: "postUpdateTerminationProtection", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_PostUpdateTerminationProtection_21628206, base: "/",
    makeUrl: url_PostUpdateTerminationProtection_21628207,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateTerminationProtection_21628188 = ref object of OpenApiRestCall_21625435
proc url_GetUpdateTerminationProtection_21628190(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateTerminationProtection_21628189(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode;
    _: string = ""): JsonNode {.nosinks.} =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  section = newJObject()
  var valid_21628191 = query.getOrDefault("Action")
  valid_21628191 = validateParameter(valid_21628191, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_21628191 != nil:
    section.add "Action", valid_21628191
  var valid_21628192 = query.getOrDefault("EnableTerminationProtection")
  valid_21628192 = validateParameter(valid_21628192, JBool, required = true,
                                   default = nil)
  if valid_21628192 != nil:
    section.add "EnableTerminationProtection", valid_21628192
  var valid_21628193 = query.getOrDefault("Version")
  valid_21628193 = validateParameter(valid_21628193, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628193 != nil:
    section.add "Version", valid_21628193
  var valid_21628194 = query.getOrDefault("StackName")
  valid_21628194 = validateParameter(valid_21628194, JString, required = true,
                                   default = nil)
  if valid_21628194 != nil:
    section.add "StackName", valid_21628194
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628195 = header.getOrDefault("X-Amz-Date")
  valid_21628195 = validateParameter(valid_21628195, JString, required = false,
                                   default = nil)
  if valid_21628195 != nil:
    section.add "X-Amz-Date", valid_21628195
  var valid_21628196 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628196 = validateParameter(valid_21628196, JString, required = false,
                                   default = nil)
  if valid_21628196 != nil:
    section.add "X-Amz-Security-Token", valid_21628196
  var valid_21628197 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628197 = validateParameter(valid_21628197, JString, required = false,
                                   default = nil)
  if valid_21628197 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628197
  var valid_21628198 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628198 = validateParameter(valid_21628198, JString, required = false,
                                   default = nil)
  if valid_21628198 != nil:
    section.add "X-Amz-Algorithm", valid_21628198
  var valid_21628199 = header.getOrDefault("X-Amz-Signature")
  valid_21628199 = validateParameter(valid_21628199, JString, required = false,
                                   default = nil)
  if valid_21628199 != nil:
    section.add "X-Amz-Signature", valid_21628199
  var valid_21628200 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628200 = validateParameter(valid_21628200, JString, required = false,
                                   default = nil)
  if valid_21628200 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628200
  var valid_21628201 = header.getOrDefault("X-Amz-Credential")
  valid_21628201 = validateParameter(valid_21628201, JString, required = false,
                                   default = nil)
  if valid_21628201 != nil:
    section.add "X-Amz-Credential", valid_21628201
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628202: Call_GetUpdateTerminationProtection_21628188;
          path: JsonNode = nil; query: JsonNode = nil; header: JsonNode = nil;
          formData: JsonNode = nil; body: JsonNode = nil; _: string = ""): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_21628202.validator(path, query, header, formData, body, _)
  let scheme = call_21628202.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628202.makeUrl(scheme.get, call_21628202.host, call_21628202.base,
                               call_21628202.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628202, uri, valid, _)

proc call*(call_21628203: Call_GetUpdateTerminationProtection_21628188;
          EnableTerminationProtection: bool; StackName: string;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   Action: string (required)
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  var query_21628204 = newJObject()
  add(query_21628204, "Action", newJString(Action))
  add(query_21628204, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_21628204, "Version", newJString(Version))
  add(query_21628204, "StackName", newJString(StackName))
  result = call_21628203.call(nil, query_21628204, nil, nil, nil)

var getUpdateTerminationProtection* = Call_GetUpdateTerminationProtection_21628188(
    name: "getUpdateTerminationProtection", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_GetUpdateTerminationProtection_21628189, base: "/",
    makeUrl: url_GetUpdateTerminationProtection_21628190,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostValidateTemplate_21628240 = ref object of OpenApiRestCall_21625435
proc url_PostValidateTemplate_21628242(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostValidateTemplate_21628241(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628243 = query.getOrDefault("Action")
  valid_21628243 = validateParameter(valid_21628243, JString, required = true,
                                   default = newJString("ValidateTemplate"))
  if valid_21628243 != nil:
    section.add "Action", valid_21628243
  var valid_21628244 = query.getOrDefault("Version")
  valid_21628244 = validateParameter(valid_21628244, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628244 != nil:
    section.add "Version", valid_21628244
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628245 = header.getOrDefault("X-Amz-Date")
  valid_21628245 = validateParameter(valid_21628245, JString, required = false,
                                   default = nil)
  if valid_21628245 != nil:
    section.add "X-Amz-Date", valid_21628245
  var valid_21628246 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628246 = validateParameter(valid_21628246, JString, required = false,
                                   default = nil)
  if valid_21628246 != nil:
    section.add "X-Amz-Security-Token", valid_21628246
  var valid_21628247 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628247 = validateParameter(valid_21628247, JString, required = false,
                                   default = nil)
  if valid_21628247 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628247
  var valid_21628248 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628248 = validateParameter(valid_21628248, JString, required = false,
                                   default = nil)
  if valid_21628248 != nil:
    section.add "X-Amz-Algorithm", valid_21628248
  var valid_21628249 = header.getOrDefault("X-Amz-Signature")
  valid_21628249 = validateParameter(valid_21628249, JString, required = false,
                                   default = nil)
  if valid_21628249 != nil:
    section.add "X-Amz-Signature", valid_21628249
  var valid_21628250 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628250 = validateParameter(valid_21628250, JString, required = false,
                                   default = nil)
  if valid_21628250 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628250
  var valid_21628251 = header.getOrDefault("X-Amz-Credential")
  valid_21628251 = validateParameter(valid_21628251, JString, required = false,
                                   default = nil)
  if valid_21628251 != nil:
    section.add "X-Amz-Credential", valid_21628251
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  section = newJObject()
  var valid_21628252 = formData.getOrDefault("TemplateURL")
  valid_21628252 = validateParameter(valid_21628252, JString, required = false,
                                   default = nil)
  if valid_21628252 != nil:
    section.add "TemplateURL", valid_21628252
  var valid_21628253 = formData.getOrDefault("TemplateBody")
  valid_21628253 = validateParameter(valid_21628253, JString, required = false,
                                   default = nil)
  if valid_21628253 != nil:
    section.add "TemplateBody", valid_21628253
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628254: Call_PostValidateTemplate_21628240; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_21628254.validator(path, query, header, formData, body, _)
  let scheme = call_21628254.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628254.makeUrl(scheme.get, call_21628254.host, call_21628254.base,
                               call_21628254.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628254, uri, valid, _)

proc call*(call_21628255: Call_PostValidateTemplate_21628240;
          TemplateURL: string = ""; Action: string = "ValidateTemplate";
          TemplateBody: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_21628256 = newJObject()
  var formData_21628257 = newJObject()
  add(formData_21628257, "TemplateURL", newJString(TemplateURL))
  add(query_21628256, "Action", newJString(Action))
  add(formData_21628257, "TemplateBody", newJString(TemplateBody))
  add(query_21628256, "Version", newJString(Version))
  result = call_21628255.call(nil, query_21628256, nil, formData_21628257, nil)

var postValidateTemplate* = Call_PostValidateTemplate_21628240(
    name: "postValidateTemplate", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_PostValidateTemplate_21628241, base: "/",
    makeUrl: url_PostValidateTemplate_21628242,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetValidateTemplate_21628223 = ref object of OpenApiRestCall_21625435
proc url_GetValidateTemplate_21628225(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base == "/" and route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetValidateTemplate_21628224(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode; _: string = ""): JsonNode {.
    nosinks.} =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_21628226 = query.getOrDefault("TemplateURL")
  valid_21628226 = validateParameter(valid_21628226, JString, required = false,
                                   default = nil)
  if valid_21628226 != nil:
    section.add "TemplateURL", valid_21628226
  var valid_21628227 = query.getOrDefault("TemplateBody")
  valid_21628227 = validateParameter(valid_21628227, JString, required = false,
                                   default = nil)
  if valid_21628227 != nil:
    section.add "TemplateBody", valid_21628227
  var valid_21628228 = query.getOrDefault("Action")
  valid_21628228 = validateParameter(valid_21628228, JString, required = true,
                                   default = newJString("ValidateTemplate"))
  if valid_21628228 != nil:
    section.add "Action", valid_21628228
  var valid_21628229 = query.getOrDefault("Version")
  valid_21628229 = validateParameter(valid_21628229, JString, required = true,
                                   default = newJString("2010-05-15"))
  if valid_21628229 != nil:
    section.add "Version", valid_21628229
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_21628230 = header.getOrDefault("X-Amz-Date")
  valid_21628230 = validateParameter(valid_21628230, JString, required = false,
                                   default = nil)
  if valid_21628230 != nil:
    section.add "X-Amz-Date", valid_21628230
  var valid_21628231 = header.getOrDefault("X-Amz-Security-Token")
  valid_21628231 = validateParameter(valid_21628231, JString, required = false,
                                   default = nil)
  if valid_21628231 != nil:
    section.add "X-Amz-Security-Token", valid_21628231
  var valid_21628232 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_21628232 = validateParameter(valid_21628232, JString, required = false,
                                   default = nil)
  if valid_21628232 != nil:
    section.add "X-Amz-Content-Sha256", valid_21628232
  var valid_21628233 = header.getOrDefault("X-Amz-Algorithm")
  valid_21628233 = validateParameter(valid_21628233, JString, required = false,
                                   default = nil)
  if valid_21628233 != nil:
    section.add "X-Amz-Algorithm", valid_21628233
  var valid_21628234 = header.getOrDefault("X-Amz-Signature")
  valid_21628234 = validateParameter(valid_21628234, JString, required = false,
                                   default = nil)
  if valid_21628234 != nil:
    section.add "X-Amz-Signature", valid_21628234
  var valid_21628235 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_21628235 = validateParameter(valid_21628235, JString, required = false,
                                   default = nil)
  if valid_21628235 != nil:
    section.add "X-Amz-SignedHeaders", valid_21628235
  var valid_21628236 = header.getOrDefault("X-Amz-Credential")
  valid_21628236 = validateParameter(valid_21628236, JString, required = false,
                                   default = nil)
  if valid_21628236 != nil:
    section.add "X-Amz-Credential", valid_21628236
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_21628237: Call_GetValidateTemplate_21628223; path: JsonNode = nil;
          query: JsonNode = nil; header: JsonNode = nil; formData: JsonNode = nil;
          body: JsonNode = nil; _: string = ""): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_21628237.validator(path, query, header, formData, body, _)
  let scheme = call_21628237.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let uri = call_21628237.makeUrl(scheme.get, call_21628237.host, call_21628237.base,
                               call_21628237.route, valid.getOrDefault("path"),
                               valid.getOrDefault("query"))
  result = atozHook(call_21628237, uri, valid, _)

proc call*(call_21628238: Call_GetValidateTemplate_21628223;
          TemplateURL: string = ""; TemplateBody: string = "";
          Action: string = "ValidateTemplate"; Version: string = "2010-05-15"): Recallable =
  ## getValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_21628239 = newJObject()
  add(query_21628239, "TemplateURL", newJString(TemplateURL))
  add(query_21628239, "TemplateBody", newJString(TemplateBody))
  add(query_21628239, "Action", newJString(Action))
  add(query_21628239, "Version", newJString(Version))
  result = call_21628238.call(nil, query_21628239, nil, nil, nil)

var getValidateTemplate* = Call_GetValidateTemplate_21628223(
    name: "getValidateTemplate", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_GetValidateTemplate_21628224, base: "/",
    makeUrl: url_GetValidateTemplate_21628225,
    schemes: {Scheme.Https, Scheme.Http})
export
  rest

type
  EnvKind = enum
    BakeIntoBinary = "Baking $1 into the binary",
    FetchFromEnv = "Fetch $1 from the environment"
template sloppyConst(via: EnvKind; name: untyped): untyped =
  import
    macros

  const
    name {.strdefine.}: string = case via
    of BakeIntoBinary:
      getEnv(astToStr(name), "")
    of FetchFromEnv:
      ""
  static :
    let msg = block:
      if name == "":
        "Missing $1 in the environment"
      else:
        $via
    warning msg % [astToStr(name)]

sloppyConst FetchFromEnv, AWS_ACCESS_KEY_ID
sloppyConst FetchFromEnv, AWS_SECRET_ACCESS_KEY
sloppyConst BakeIntoBinary, AWS_REGION
sloppyConst FetchFromEnv, AWS_ACCOUNT_ID
type
  XAmz = enum
    SecurityToken = "X-Amz-Security-Token", ContentSha256 = "X-Amz-Content-Sha256"
proc atozSign(recall: var Recallable; query: JsonNode; algo: SigningAlgo = SHA256) =
  let
    date = makeDateTime()
    access = os.getEnv("AWS_ACCESS_KEY_ID", AWS_ACCESS_KEY_ID)
    secret = os.getEnv("AWS_SECRET_ACCESS_KEY", AWS_SECRET_ACCESS_KEY)
    region = os.getEnv("AWS_REGION", AWS_REGION)
  assert secret != "", "need $AWS_SECRET_ACCESS_KEY in environment"
  assert access != "", "need $AWS_ACCESS_KEY_ID in environment"
  assert region != "", "need $AWS_REGION in environment"
  var
    normal: PathNormal
    url = normalizeUrl(recall.url, query, normalize = normal)
    scheme = parseEnum[Scheme](url.scheme)
  assert scheme in awsServers, "unknown scheme `" & $scheme & "`"
  assert region in awsServers[scheme], "unknown region `" & region & "`"
  url.hostname = awsServers[scheme][region]
  case awsServiceName.toLowerAscii
  of "s3":
    normal = PathNormal.S3
  else:
    normal = PathNormal.Default
  recall.headers["Host"] = url.hostname
  recall.headers["X-Amz-Date"] = date
  recall.headers[$ContentSha256] = hash(recall.body, SHA256)
  let
    scope = credentialScope(region = region, service = awsServiceName, date = date)
    request = canonicalRequest(recall.meth, $url, query, recall.headers, recall.body,
                             normalize = normal, digest = algo)
    sts = stringToSign(request.hash(algo), scope, date = date, digest = algo)
    signature = calculateSignature(secret = secret, date = date, region = region,
                                 service = awsServiceName, sts, digest = algo)
  var auth = $algo & " "
  auth &= "Credential=" & access / scope & ", "
  auth &= "SignedHeaders=" & recall.headers.signedHeaders & ", "
  auth &= "Signature=" & signature
  recall.headers["Authorization"] = auth
  recall.headers.del "Host"
  recall.url = $url

method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode; body = ""): Recallable {.
    base.} =
  ## the hook is a terrible earworm
  var
    headers = newHttpHeaders(massageHeaders(input.getOrDefault("header")))
    text = body
  if text.len == 0 and "body" in input:
    text = input.getOrDefault("body").getStr
    if not headers.hasKey("content-type"):
      headers["content-type"] = "application/x-amz-json-1.0"
  else:
    headers["content-md5"] = base64.encode text.toMD5
  if not headers.hasKey($SecurityToken):
    let session = getEnv("AWS_SESSION_TOKEN", "")
    if session != "":
      headers[$SecurityToken] = session
  result = newRecallable(call, url, headers, text)
  result.atozSign(input.getOrDefault("query"), SHA256)

when not defined(ssl):
  {.error: "use ssl".}