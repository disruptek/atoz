
import
  json, options, hashes, tables, openapi/rest, os, uri, strutils, httpcore, sigv4

## auto-generated via openapi macro
## title: AWS CloudFormation
## version: 2010-05-15
## termsOfService: https://aws.amazon.com/service-terms/
## license:
##     name: Apache 2.0 License
##     url: http://www.apache.org/licenses/
## 
## <fullname>AWS CloudFormation</fullname> <p>AWS CloudFormation allows you to create and manage AWS infrastructure deployments predictably and repeatedly. You can use AWS CloudFormation to leverage AWS products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly-reliable, highly scalable, cost-effective applications without creating or configuring the underlying AWS infrastructure.</p> <p>With AWS CloudFormation, you declare all of your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. AWS CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about AWS CloudFormation, see the <a href="http://aws.amazon.com/cloudformation/">AWS CloudFormation Product Page</a>.</p> <p>Amazon CloudFormation makes use of other AWS products. If you need additional technical information about a specific AWS product, you can find the product's technical documentation at <a href="https://docs.aws.amazon.com/">docs.aws.amazon.com</a>.</p>
## 
## Amazon Web Services documentation
## https://docs.aws.amazon.com/cloudformation/
type
  Scheme {.pure.} = enum
    Https = "https", Http = "http", Wss = "wss", Ws = "ws"
  ValidatorSignature = proc (query: JsonNode = nil; body: JsonNode = nil;
                          header: JsonNode = nil; path: JsonNode = nil;
                          formData: JsonNode = nil): JsonNode
  OpenApiRestCall = ref object of RestCall
    validator*: ValidatorSignature
    route*: string
    base*: string
    host*: string
    schemes*: set[Scheme]
    url*: proc (protocol: Scheme; host: string; base: string; route: string;
              path: JsonNode): string

  OpenApiRestCall_602433 = ref object of OpenApiRestCall
proc hash(scheme: Scheme): Hash {.used.} =
  result = hash(ord(scheme))

proc clone[T: OpenApiRestCall_602433](t: T): T {.used.} =
  result = T(name: t.name, meth: t.meth, host: t.host, base: t.base, route: t.route,
           schemes: t.schemes, validator: t.validator, url: t.url)

proc pickScheme(t: OpenApiRestCall_602433): Option[Scheme] {.used.} =
  ## select a supported scheme from a set of candidates
  for scheme in Scheme.low ..
      Scheme.high:
    if scheme notin t.schemes:
      continue
    if scheme in [Scheme.Https, Scheme.Wss]:
      when defined(ssl):
        return some(scheme)
      else:
        continue
    return some(scheme)

proc validateParameter(js: JsonNode; kind: JsonNodeKind; required: bool;
                      default: JsonNode = nil): JsonNode =
  ## ensure an input is of the correct json type and yield
  ## a suitable default value when appropriate
  if js ==
      nil:
    if default != nil:
      return validateParameter(default, kind, required = required)
  result = js
  if result ==
      nil:
    assert not required, $kind & " expected; received nil"
    if required:
      result = newJNull()
  else:
    assert js.kind ==
        kind, $kind & " expected; received " &
        $js.kind

type
  KeyVal {.used.} = tuple[key: string, val: string]
  PathTokenKind = enum
    ConstantSegment, VariableSegment
  PathToken = tuple[kind: PathTokenKind, value: string]
proc hydratePath(input: JsonNode; segments: seq[PathToken]): Option[string] =
  ## reconstitute a path with constants and variable values taken from json
  var head: string
  if segments.len == 0:
    return some("")
  head = segments[0].value
  case segments[0].kind
  of ConstantSegment:
    discard
  of VariableSegment:
    if head notin input:
      return
    let js = input[head]
    if js.kind notin {JString, JInt, JFloat, JNull, JBool}:
      return
    head = $js
  var remainder = input.hydratePath(segments[1 ..^ 1])
  if remainder.isNone:
    return
  result = some(head & remainder.get)

const
  awsServers = {Scheme.Http: {"ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com", "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com", "us-west-2": "cloudformation.us-west-2.amazonaws.com", "eu-west-2": "cloudformation.eu-west-2.amazonaws.com", "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com", "eu-central-1": "cloudformation.eu-central-1.amazonaws.com", "us-east-2": "cloudformation.us-east-2.amazonaws.com", "us-east-1": "cloudformation.us-east-1.amazonaws.com", "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn", "ap-south-1": "cloudformation.ap-south-1.amazonaws.com", "eu-north-1": "cloudformation.eu-north-1.amazonaws.com", "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com", "us-west-1": "cloudformation.us-west-1.amazonaws.com", "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com", "eu-west-3": "cloudformation.eu-west-3.amazonaws.com", "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn", "sa-east-1": "cloudformation.sa-east-1.amazonaws.com", "eu-west-1": "cloudformation.eu-west-1.amazonaws.com", "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com", "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com", "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable, Scheme.Https: {
      "ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com",
      "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com",
      "us-west-2": "cloudformation.us-west-2.amazonaws.com",
      "eu-west-2": "cloudformation.eu-west-2.amazonaws.com",
      "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com",
      "eu-central-1": "cloudformation.eu-central-1.amazonaws.com",
      "us-east-2": "cloudformation.us-east-2.amazonaws.com",
      "us-east-1": "cloudformation.us-east-1.amazonaws.com",
      "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn",
      "ap-south-1": "cloudformation.ap-south-1.amazonaws.com",
      "eu-north-1": "cloudformation.eu-north-1.amazonaws.com",
      "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com",
      "us-west-1": "cloudformation.us-west-1.amazonaws.com",
      "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com",
      "eu-west-3": "cloudformation.eu-west-3.amazonaws.com",
      "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn",
      "sa-east-1": "cloudformation.sa-east-1.amazonaws.com",
      "eu-west-1": "cloudformation.eu-west-1.amazonaws.com",
      "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com",
      "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com",
      "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable}.toTable
const
  awsServiceName = "cloudformation"
method hook(call: OpenApiRestCall; url: string; input: JsonNode): Recallable {.base.}
type
  Call_PostCancelUpdateStack_603042 = ref object of OpenApiRestCall_602433
proc url_PostCancelUpdateStack_603044(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostCancelUpdateStack_603043(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603045 = query.getOrDefault("Action")
  valid_603045 = validateParameter(valid_603045, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_603045 != nil:
    section.add "Action", valid_603045
  var valid_603046 = query.getOrDefault("Version")
  valid_603046 = validateParameter(valid_603046, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603046 != nil:
    section.add "Version", valid_603046
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603047 = header.getOrDefault("X-Amz-Date")
  valid_603047 = validateParameter(valid_603047, JString, required = false,
                                 default = nil)
  if valid_603047 != nil:
    section.add "X-Amz-Date", valid_603047
  var valid_603048 = header.getOrDefault("X-Amz-Security-Token")
  valid_603048 = validateParameter(valid_603048, JString, required = false,
                                 default = nil)
  if valid_603048 != nil:
    section.add "X-Amz-Security-Token", valid_603048
  var valid_603049 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603049 = validateParameter(valid_603049, JString, required = false,
                                 default = nil)
  if valid_603049 != nil:
    section.add "X-Amz-Content-Sha256", valid_603049
  var valid_603050 = header.getOrDefault("X-Amz-Algorithm")
  valid_603050 = validateParameter(valid_603050, JString, required = false,
                                 default = nil)
  if valid_603050 != nil:
    section.add "X-Amz-Algorithm", valid_603050
  var valid_603051 = header.getOrDefault("X-Amz-Signature")
  valid_603051 = validateParameter(valid_603051, JString, required = false,
                                 default = nil)
  if valid_603051 != nil:
    section.add "X-Amz-Signature", valid_603051
  var valid_603052 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603052 = validateParameter(valid_603052, JString, required = false,
                                 default = nil)
  if valid_603052 != nil:
    section.add "X-Amz-SignedHeaders", valid_603052
  var valid_603053 = header.getOrDefault("X-Amz-Credential")
  valid_603053 = validateParameter(valid_603053, JString, required = false,
                                 default = nil)
  if valid_603053 != nil:
    section.add "X-Amz-Credential", valid_603053
  result.add "header", section
  ## parameters in `formData` object:
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  section = newJObject()
  var valid_603054 = formData.getOrDefault("ClientRequestToken")
  valid_603054 = validateParameter(valid_603054, JString, required = false,
                                 default = nil)
  if valid_603054 != nil:
    section.add "ClientRequestToken", valid_603054
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603055 = formData.getOrDefault("StackName")
  valid_603055 = validateParameter(valid_603055, JString, required = true,
                                 default = nil)
  if valid_603055 != nil:
    section.add "StackName", valid_603055
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603056: Call_PostCancelUpdateStack_603042; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_603056.validator(path, query, header, formData, body)
  let scheme = call_603056.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603056.url(scheme.get, call_603056.host, call_603056.base,
                         call_603056.route, valid.getOrDefault("path"))
  result = hook(call_603056, url, valid)

proc call*(call_603057: Call_PostCancelUpdateStack_603042; StackName: string;
          ClientRequestToken: string = ""; Action: string = "CancelUpdateStack";
          Version: string = "2010-05-15"): Recallable =
  ## postCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Version: string (required)
  var query_603058 = newJObject()
  var formData_603059 = newJObject()
  add(formData_603059, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603058, "Action", newJString(Action))
  add(formData_603059, "StackName", newJString(StackName))
  add(query_603058, "Version", newJString(Version))
  result = call_603057.call(nil, query_603058, nil, formData_603059, nil)

var postCancelUpdateStack* = Call_PostCancelUpdateStack_603042(
    name: "postCancelUpdateStack", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_PostCancelUpdateStack_603043, base: "/",
    url: url_PostCancelUpdateStack_603044, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCancelUpdateStack_602770 = ref object of OpenApiRestCall_602433
proc url_GetCancelUpdateStack_602772(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetCancelUpdateStack_602771(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602897 = query.getOrDefault("Action")
  valid_602897 = validateParameter(valid_602897, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_602897 != nil:
    section.add "Action", valid_602897
  var valid_602898 = query.getOrDefault("ClientRequestToken")
  valid_602898 = validateParameter(valid_602898, JString, required = false,
                                 default = nil)
  if valid_602898 != nil:
    section.add "ClientRequestToken", valid_602898
  var valid_602899 = query.getOrDefault("Version")
  valid_602899 = validateParameter(valid_602899, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602899 != nil:
    section.add "Version", valid_602899
  var valid_602900 = query.getOrDefault("StackName")
  valid_602900 = validateParameter(valid_602900, JString, required = true,
                                 default = nil)
  if valid_602900 != nil:
    section.add "StackName", valid_602900
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_602901 = header.getOrDefault("X-Amz-Date")
  valid_602901 = validateParameter(valid_602901, JString, required = false,
                                 default = nil)
  if valid_602901 != nil:
    section.add "X-Amz-Date", valid_602901
  var valid_602902 = header.getOrDefault("X-Amz-Security-Token")
  valid_602902 = validateParameter(valid_602902, JString, required = false,
                                 default = nil)
  if valid_602902 != nil:
    section.add "X-Amz-Security-Token", valid_602902
  var valid_602903 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602903 = validateParameter(valid_602903, JString, required = false,
                                 default = nil)
  if valid_602903 != nil:
    section.add "X-Amz-Content-Sha256", valid_602903
  var valid_602904 = header.getOrDefault("X-Amz-Algorithm")
  valid_602904 = validateParameter(valid_602904, JString, required = false,
                                 default = nil)
  if valid_602904 != nil:
    section.add "X-Amz-Algorithm", valid_602904
  var valid_602905 = header.getOrDefault("X-Amz-Signature")
  valid_602905 = validateParameter(valid_602905, JString, required = false,
                                 default = nil)
  if valid_602905 != nil:
    section.add "X-Amz-Signature", valid_602905
  var valid_602906 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602906 = validateParameter(valid_602906, JString, required = false,
                                 default = nil)
  if valid_602906 != nil:
    section.add "X-Amz-SignedHeaders", valid_602906
  var valid_602907 = header.getOrDefault("X-Amz-Credential")
  valid_602907 = validateParameter(valid_602907, JString, required = false,
                                 default = nil)
  if valid_602907 != nil:
    section.add "X-Amz-Credential", valid_602907
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602930: Call_GetCancelUpdateStack_602770; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_602930.validator(path, query, header, formData, body)
  let scheme = call_602930.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602930.url(scheme.get, call_602930.host, call_602930.base,
                         call_602930.route, valid.getOrDefault("path"))
  result = hook(call_602930, url, valid)

proc call*(call_603001: Call_GetCancelUpdateStack_602770; StackName: string;
          Action: string = "CancelUpdateStack"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  var query_603002 = newJObject()
  add(query_603002, "Action", newJString(Action))
  add(query_603002, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603002, "Version", newJString(Version))
  add(query_603002, "StackName", newJString(StackName))
  result = call_603001.call(nil, query_603002, nil, nil, nil)

var getCancelUpdateStack* = Call_GetCancelUpdateStack_602770(
    name: "getCancelUpdateStack", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_GetCancelUpdateStack_602771, base: "/",
    url: url_GetCancelUpdateStack_602772, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostContinueUpdateRollback_603079 = ref object of OpenApiRestCall_602433
proc url_PostContinueUpdateRollback_603081(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostContinueUpdateRollback_603080(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603082 = query.getOrDefault("Action")
  valid_603082 = validateParameter(valid_603082, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_603082 != nil:
    section.add "Action", valid_603082
  var valid_603083 = query.getOrDefault("Version")
  valid_603083 = validateParameter(valid_603083, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603083 != nil:
    section.add "Version", valid_603083
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603084 = header.getOrDefault("X-Amz-Date")
  valid_603084 = validateParameter(valid_603084, JString, required = false,
                                 default = nil)
  if valid_603084 != nil:
    section.add "X-Amz-Date", valid_603084
  var valid_603085 = header.getOrDefault("X-Amz-Security-Token")
  valid_603085 = validateParameter(valid_603085, JString, required = false,
                                 default = nil)
  if valid_603085 != nil:
    section.add "X-Amz-Security-Token", valid_603085
  var valid_603086 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603086 = validateParameter(valid_603086, JString, required = false,
                                 default = nil)
  if valid_603086 != nil:
    section.add "X-Amz-Content-Sha256", valid_603086
  var valid_603087 = header.getOrDefault("X-Amz-Algorithm")
  valid_603087 = validateParameter(valid_603087, JString, required = false,
                                 default = nil)
  if valid_603087 != nil:
    section.add "X-Amz-Algorithm", valid_603087
  var valid_603088 = header.getOrDefault("X-Amz-Signature")
  valid_603088 = validateParameter(valid_603088, JString, required = false,
                                 default = nil)
  if valid_603088 != nil:
    section.add "X-Amz-Signature", valid_603088
  var valid_603089 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603089 = validateParameter(valid_603089, JString, required = false,
                                 default = nil)
  if valid_603089 != nil:
    section.add "X-Amz-SignedHeaders", valid_603089
  var valid_603090 = header.getOrDefault("X-Amz-Credential")
  valid_603090 = validateParameter(valid_603090, JString, required = false,
                                 default = nil)
  if valid_603090 != nil:
    section.add "X-Amz-Credential", valid_603090
  result.add "header", section
  ## parameters in `formData` object:
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_603091 = formData.getOrDefault("ResourcesToSkip")
  valid_603091 = validateParameter(valid_603091, JArray, required = false,
                                 default = nil)
  if valid_603091 != nil:
    section.add "ResourcesToSkip", valid_603091
  var valid_603092 = formData.getOrDefault("ClientRequestToken")
  valid_603092 = validateParameter(valid_603092, JString, required = false,
                                 default = nil)
  if valid_603092 != nil:
    section.add "ClientRequestToken", valid_603092
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603093 = formData.getOrDefault("StackName")
  valid_603093 = validateParameter(valid_603093, JString, required = true,
                                 default = nil)
  if valid_603093 != nil:
    section.add "StackName", valid_603093
  var valid_603094 = formData.getOrDefault("RoleARN")
  valid_603094 = validateParameter(valid_603094, JString, required = false,
                                 default = nil)
  if valid_603094 != nil:
    section.add "RoleARN", valid_603094
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603095: Call_PostContinueUpdateRollback_603079; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_603095.validator(path, query, header, formData, body)
  let scheme = call_603095.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603095.url(scheme.get, call_603095.host, call_603095.base,
                         call_603095.route, valid.getOrDefault("path"))
  result = hook(call_603095, url, valid)

proc call*(call_603096: Call_PostContinueUpdateRollback_603079; StackName: string;
          ResourcesToSkip: JsonNode = nil; ClientRequestToken: string = "";
          Action: string = "ContinueUpdateRollback"; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## postContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_603097 = newJObject()
  var formData_603098 = newJObject()
  if ResourcesToSkip != nil:
    formData_603098.add "ResourcesToSkip", ResourcesToSkip
  add(formData_603098, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603097, "Action", newJString(Action))
  add(formData_603098, "StackName", newJString(StackName))
  add(query_603097, "Version", newJString(Version))
  add(formData_603098, "RoleARN", newJString(RoleARN))
  result = call_603096.call(nil, query_603097, nil, formData_603098, nil)

var postContinueUpdateRollback* = Call_PostContinueUpdateRollback_603079(
    name: "postContinueUpdateRollback", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_PostContinueUpdateRollback_603080, base: "/",
    url: url_PostContinueUpdateRollback_603081,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetContinueUpdateRollback_603060 = ref object of OpenApiRestCall_602433
proc url_GetContinueUpdateRollback_603062(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetContinueUpdateRollback_603061(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603063 = query.getOrDefault("Action")
  valid_603063 = validateParameter(valid_603063, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_603063 != nil:
    section.add "Action", valid_603063
  var valid_603064 = query.getOrDefault("ResourcesToSkip")
  valid_603064 = validateParameter(valid_603064, JArray, required = false,
                                 default = nil)
  if valid_603064 != nil:
    section.add "ResourcesToSkip", valid_603064
  var valid_603065 = query.getOrDefault("RoleARN")
  valid_603065 = validateParameter(valid_603065, JString, required = false,
                                 default = nil)
  if valid_603065 != nil:
    section.add "RoleARN", valid_603065
  var valid_603066 = query.getOrDefault("ClientRequestToken")
  valid_603066 = validateParameter(valid_603066, JString, required = false,
                                 default = nil)
  if valid_603066 != nil:
    section.add "ClientRequestToken", valid_603066
  var valid_603067 = query.getOrDefault("Version")
  valid_603067 = validateParameter(valid_603067, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603067 != nil:
    section.add "Version", valid_603067
  var valid_603068 = query.getOrDefault("StackName")
  valid_603068 = validateParameter(valid_603068, JString, required = true,
                                 default = nil)
  if valid_603068 != nil:
    section.add "StackName", valid_603068
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603069 = header.getOrDefault("X-Amz-Date")
  valid_603069 = validateParameter(valid_603069, JString, required = false,
                                 default = nil)
  if valid_603069 != nil:
    section.add "X-Amz-Date", valid_603069
  var valid_603070 = header.getOrDefault("X-Amz-Security-Token")
  valid_603070 = validateParameter(valid_603070, JString, required = false,
                                 default = nil)
  if valid_603070 != nil:
    section.add "X-Amz-Security-Token", valid_603070
  var valid_603071 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603071 = validateParameter(valid_603071, JString, required = false,
                                 default = nil)
  if valid_603071 != nil:
    section.add "X-Amz-Content-Sha256", valid_603071
  var valid_603072 = header.getOrDefault("X-Amz-Algorithm")
  valid_603072 = validateParameter(valid_603072, JString, required = false,
                                 default = nil)
  if valid_603072 != nil:
    section.add "X-Amz-Algorithm", valid_603072
  var valid_603073 = header.getOrDefault("X-Amz-Signature")
  valid_603073 = validateParameter(valid_603073, JString, required = false,
                                 default = nil)
  if valid_603073 != nil:
    section.add "X-Amz-Signature", valid_603073
  var valid_603074 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603074 = validateParameter(valid_603074, JString, required = false,
                                 default = nil)
  if valid_603074 != nil:
    section.add "X-Amz-SignedHeaders", valid_603074
  var valid_603075 = header.getOrDefault("X-Amz-Credential")
  valid_603075 = validateParameter(valid_603075, JString, required = false,
                                 default = nil)
  if valid_603075 != nil:
    section.add "X-Amz-Credential", valid_603075
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603076: Call_GetContinueUpdateRollback_603060; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_603076.validator(path, query, header, formData, body)
  let scheme = call_603076.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603076.url(scheme.get, call_603076.host, call_603076.base,
                         call_603076.route, valid.getOrDefault("path"))
  result = hook(call_603076, url, valid)

proc call*(call_603077: Call_GetContinueUpdateRollback_603060; StackName: string;
          Action: string = "ContinueUpdateRollback";
          ResourcesToSkip: JsonNode = nil; RoleARN: string = "";
          ClientRequestToken: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   Action: string (required)
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  var query_603078 = newJObject()
  add(query_603078, "Action", newJString(Action))
  if ResourcesToSkip != nil:
    query_603078.add "ResourcesToSkip", ResourcesToSkip
  add(query_603078, "RoleARN", newJString(RoleARN))
  add(query_603078, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603078, "Version", newJString(Version))
  add(query_603078, "StackName", newJString(StackName))
  result = call_603077.call(nil, query_603078, nil, nil, nil)

var getContinueUpdateRollback* = Call_GetContinueUpdateRollback_603060(
    name: "getContinueUpdateRollback", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_GetContinueUpdateRollback_603061, base: "/",
    url: url_GetContinueUpdateRollback_603062,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateChangeSet_603130 = ref object of OpenApiRestCall_602433
proc url_PostCreateChangeSet_603132(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostCreateChangeSet_603131(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603133 = query.getOrDefault("Action")
  valid_603133 = validateParameter(valid_603133, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_603133 != nil:
    section.add "Action", valid_603133
  var valid_603134 = query.getOrDefault("Version")
  valid_603134 = validateParameter(valid_603134, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603134 != nil:
    section.add "Version", valid_603134
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603135 = header.getOrDefault("X-Amz-Date")
  valid_603135 = validateParameter(valid_603135, JString, required = false,
                                 default = nil)
  if valid_603135 != nil:
    section.add "X-Amz-Date", valid_603135
  var valid_603136 = header.getOrDefault("X-Amz-Security-Token")
  valid_603136 = validateParameter(valid_603136, JString, required = false,
                                 default = nil)
  if valid_603136 != nil:
    section.add "X-Amz-Security-Token", valid_603136
  var valid_603137 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603137 = validateParameter(valid_603137, JString, required = false,
                                 default = nil)
  if valid_603137 != nil:
    section.add "X-Amz-Content-Sha256", valid_603137
  var valid_603138 = header.getOrDefault("X-Amz-Algorithm")
  valid_603138 = validateParameter(valid_603138, JString, required = false,
                                 default = nil)
  if valid_603138 != nil:
    section.add "X-Amz-Algorithm", valid_603138
  var valid_603139 = header.getOrDefault("X-Amz-Signature")
  valid_603139 = validateParameter(valid_603139, JString, required = false,
                                 default = nil)
  if valid_603139 != nil:
    section.add "X-Amz-Signature", valid_603139
  var valid_603140 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603140 = validateParameter(valid_603140, JString, required = false,
                                 default = nil)
  if valid_603140 != nil:
    section.add "X-Amz-SignedHeaders", valid_603140
  var valid_603141 = header.getOrDefault("X-Amz-Credential")
  valid_603141 = validateParameter(valid_603141, JString, required = false,
                                 default = nil)
  if valid_603141 != nil:
    section.add "X-Amz-Credential", valid_603141
  result.add "header", section
  ## parameters in `formData` object:
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_603142 = formData.getOrDefault("ChangeSetType")
  valid_603142 = validateParameter(valid_603142, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_603142 != nil:
    section.add "ChangeSetType", valid_603142
  var valid_603143 = formData.getOrDefault("ClientToken")
  valid_603143 = validateParameter(valid_603143, JString, required = false,
                                 default = nil)
  if valid_603143 != nil:
    section.add "ClientToken", valid_603143
  var valid_603144 = formData.getOrDefault("ResourceTypes")
  valid_603144 = validateParameter(valid_603144, JArray, required = false,
                                 default = nil)
  if valid_603144 != nil:
    section.add "ResourceTypes", valid_603144
  var valid_603145 = formData.getOrDefault("TemplateURL")
  valid_603145 = validateParameter(valid_603145, JString, required = false,
                                 default = nil)
  if valid_603145 != nil:
    section.add "TemplateURL", valid_603145
  var valid_603146 = formData.getOrDefault("Capabilities")
  valid_603146 = validateParameter(valid_603146, JArray, required = false,
                                 default = nil)
  if valid_603146 != nil:
    section.add "Capabilities", valid_603146
  var valid_603147 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_603147 = validateParameter(valid_603147, JString, required = false,
                                 default = nil)
  if valid_603147 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_603147
  var valid_603148 = formData.getOrDefault("Tags")
  valid_603148 = validateParameter(valid_603148, JArray, required = false,
                                 default = nil)
  if valid_603148 != nil:
    section.add "Tags", valid_603148
  var valid_603149 = formData.getOrDefault("UsePreviousTemplate")
  valid_603149 = validateParameter(valid_603149, JBool, required = false, default = nil)
  if valid_603149 != nil:
    section.add "UsePreviousTemplate", valid_603149
  var valid_603150 = formData.getOrDefault("Parameters")
  valid_603150 = validateParameter(valid_603150, JArray, required = false,
                                 default = nil)
  if valid_603150 != nil:
    section.add "Parameters", valid_603150
  var valid_603151 = formData.getOrDefault("NotificationARNs")
  valid_603151 = validateParameter(valid_603151, JArray, required = false,
                                 default = nil)
  if valid_603151 != nil:
    section.add "NotificationARNs", valid_603151
  var valid_603152 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_603152 = validateParameter(valid_603152, JArray, required = false,
                                 default = nil)
  if valid_603152 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_603152
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_603153 = formData.getOrDefault("ChangeSetName")
  valid_603153 = validateParameter(valid_603153, JString, required = true,
                                 default = nil)
  if valid_603153 != nil:
    section.add "ChangeSetName", valid_603153
  var valid_603154 = formData.getOrDefault("StackName")
  valid_603154 = validateParameter(valid_603154, JString, required = true,
                                 default = nil)
  if valid_603154 != nil:
    section.add "StackName", valid_603154
  var valid_603155 = formData.getOrDefault("TemplateBody")
  valid_603155 = validateParameter(valid_603155, JString, required = false,
                                 default = nil)
  if valid_603155 != nil:
    section.add "TemplateBody", valid_603155
  var valid_603156 = formData.getOrDefault("Description")
  valid_603156 = validateParameter(valid_603156, JString, required = false,
                                 default = nil)
  if valid_603156 != nil:
    section.add "Description", valid_603156
  var valid_603157 = formData.getOrDefault("RoleARN")
  valid_603157 = validateParameter(valid_603157, JString, required = false,
                                 default = nil)
  if valid_603157 != nil:
    section.add "RoleARN", valid_603157
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603158: Call_PostCreateChangeSet_603130; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_603158.validator(path, query, header, formData, body)
  let scheme = call_603158.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603158.url(scheme.get, call_603158.host, call_603158.base,
                         call_603158.route, valid.getOrDefault("path"))
  result = hook(call_603158, url, valid)

proc call*(call_603159: Call_PostCreateChangeSet_603130; ChangeSetName: string;
          StackName: string; ChangeSetType: string = "CREATE";
          ClientToken: string = ""; ResourceTypes: JsonNode = nil;
          TemplateURL: string = ""; Capabilities: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Tags: JsonNode = nil; UsePreviousTemplate: bool = false;
          Parameters: JsonNode = nil; Action: string = "CreateChangeSet";
          NotificationARNs: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          TemplateBody: string = ""; Version: string = "2010-05-15";
          Description: string = ""; RoleARN: string = ""): Recallable =
  ## postCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Action: string (required)
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_603160 = newJObject()
  var formData_603161 = newJObject()
  add(formData_603161, "ChangeSetType", newJString(ChangeSetType))
  add(formData_603161, "ClientToken", newJString(ClientToken))
  if ResourceTypes != nil:
    formData_603161.add "ResourceTypes", ResourceTypes
  add(formData_603161, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_603161.add "Capabilities", Capabilities
  add(formData_603161, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Tags != nil:
    formData_603161.add "Tags", Tags
  add(formData_603161, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if Parameters != nil:
    formData_603161.add "Parameters", Parameters
  add(query_603160, "Action", newJString(Action))
  if NotificationARNs != nil:
    formData_603161.add "NotificationARNs", NotificationARNs
  if RollbackConfigurationRollbackTriggers != nil:
    formData_603161.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  add(formData_603161, "ChangeSetName", newJString(ChangeSetName))
  add(formData_603161, "StackName", newJString(StackName))
  add(formData_603161, "TemplateBody", newJString(TemplateBody))
  add(query_603160, "Version", newJString(Version))
  add(formData_603161, "Description", newJString(Description))
  add(formData_603161, "RoleARN", newJString(RoleARN))
  result = call_603159.call(nil, query_603160, nil, formData_603161, nil)

var postCreateChangeSet* = Call_PostCreateChangeSet_603130(
    name: "postCreateChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_PostCreateChangeSet_603131, base: "/",
    url: url_PostCreateChangeSet_603132, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateChangeSet_603099 = ref object of OpenApiRestCall_602433
proc url_GetCreateChangeSet_603101(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetCreateChangeSet_603100(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   Action: JString (required)
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  section = newJObject()
  var valid_603102 = query.getOrDefault("TemplateURL")
  valid_603102 = validateParameter(valid_603102, JString, required = false,
                                 default = nil)
  if valid_603102 != nil:
    section.add "TemplateURL", valid_603102
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_603103 = query.getOrDefault("ChangeSetName")
  valid_603103 = validateParameter(valid_603103, JString, required = true,
                                 default = nil)
  if valid_603103 != nil:
    section.add "ChangeSetName", valid_603103
  var valid_603104 = query.getOrDefault("TemplateBody")
  valid_603104 = validateParameter(valid_603104, JString, required = false,
                                 default = nil)
  if valid_603104 != nil:
    section.add "TemplateBody", valid_603104
  var valid_603105 = query.getOrDefault("ClientToken")
  valid_603105 = validateParameter(valid_603105, JString, required = false,
                                 default = nil)
  if valid_603105 != nil:
    section.add "ClientToken", valid_603105
  var valid_603106 = query.getOrDefault("Description")
  valid_603106 = validateParameter(valid_603106, JString, required = false,
                                 default = nil)
  if valid_603106 != nil:
    section.add "Description", valid_603106
  var valid_603107 = query.getOrDefault("Tags")
  valid_603107 = validateParameter(valid_603107, JArray, required = false,
                                 default = nil)
  if valid_603107 != nil:
    section.add "Tags", valid_603107
  var valid_603108 = query.getOrDefault("Capabilities")
  valid_603108 = validateParameter(valid_603108, JArray, required = false,
                                 default = nil)
  if valid_603108 != nil:
    section.add "Capabilities", valid_603108
  var valid_603109 = query.getOrDefault("Parameters")
  valid_603109 = validateParameter(valid_603109, JArray, required = false,
                                 default = nil)
  if valid_603109 != nil:
    section.add "Parameters", valid_603109
  var valid_603110 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_603110 = validateParameter(valid_603110, JString, required = false,
                                 default = nil)
  if valid_603110 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_603110
  var valid_603111 = query.getOrDefault("ChangeSetType")
  valid_603111 = validateParameter(valid_603111, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_603111 != nil:
    section.add "ChangeSetType", valid_603111
  var valid_603112 = query.getOrDefault("Action")
  valid_603112 = validateParameter(valid_603112, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_603112 != nil:
    section.add "Action", valid_603112
  var valid_603113 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_603113 = validateParameter(valid_603113, JArray, required = false,
                                 default = nil)
  if valid_603113 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_603113
  var valid_603114 = query.getOrDefault("RoleARN")
  valid_603114 = validateParameter(valid_603114, JString, required = false,
                                 default = nil)
  if valid_603114 != nil:
    section.add "RoleARN", valid_603114
  var valid_603115 = query.getOrDefault("NotificationARNs")
  valid_603115 = validateParameter(valid_603115, JArray, required = false,
                                 default = nil)
  if valid_603115 != nil:
    section.add "NotificationARNs", valid_603115
  var valid_603116 = query.getOrDefault("UsePreviousTemplate")
  valid_603116 = validateParameter(valid_603116, JBool, required = false, default = nil)
  if valid_603116 != nil:
    section.add "UsePreviousTemplate", valid_603116
  var valid_603117 = query.getOrDefault("ResourceTypes")
  valid_603117 = validateParameter(valid_603117, JArray, required = false,
                                 default = nil)
  if valid_603117 != nil:
    section.add "ResourceTypes", valid_603117
  var valid_603118 = query.getOrDefault("Version")
  valid_603118 = validateParameter(valid_603118, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603118 != nil:
    section.add "Version", valid_603118
  var valid_603119 = query.getOrDefault("StackName")
  valid_603119 = validateParameter(valid_603119, JString, required = true,
                                 default = nil)
  if valid_603119 != nil:
    section.add "StackName", valid_603119
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603120 = header.getOrDefault("X-Amz-Date")
  valid_603120 = validateParameter(valid_603120, JString, required = false,
                                 default = nil)
  if valid_603120 != nil:
    section.add "X-Amz-Date", valid_603120
  var valid_603121 = header.getOrDefault("X-Amz-Security-Token")
  valid_603121 = validateParameter(valid_603121, JString, required = false,
                                 default = nil)
  if valid_603121 != nil:
    section.add "X-Amz-Security-Token", valid_603121
  var valid_603122 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603122 = validateParameter(valid_603122, JString, required = false,
                                 default = nil)
  if valid_603122 != nil:
    section.add "X-Amz-Content-Sha256", valid_603122
  var valid_603123 = header.getOrDefault("X-Amz-Algorithm")
  valid_603123 = validateParameter(valid_603123, JString, required = false,
                                 default = nil)
  if valid_603123 != nil:
    section.add "X-Amz-Algorithm", valid_603123
  var valid_603124 = header.getOrDefault("X-Amz-Signature")
  valid_603124 = validateParameter(valid_603124, JString, required = false,
                                 default = nil)
  if valid_603124 != nil:
    section.add "X-Amz-Signature", valid_603124
  var valid_603125 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603125 = validateParameter(valid_603125, JString, required = false,
                                 default = nil)
  if valid_603125 != nil:
    section.add "X-Amz-SignedHeaders", valid_603125
  var valid_603126 = header.getOrDefault("X-Amz-Credential")
  valid_603126 = validateParameter(valid_603126, JString, required = false,
                                 default = nil)
  if valid_603126 != nil:
    section.add "X-Amz-Credential", valid_603126
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603127: Call_GetCreateChangeSet_603099; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_603127.validator(path, query, header, formData, body)
  let scheme = call_603127.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603127.url(scheme.get, call_603127.host, call_603127.base,
                         call_603127.route, valid.getOrDefault("path"))
  result = hook(call_603127, url, valid)

proc call*(call_603128: Call_GetCreateChangeSet_603099; ChangeSetName: string;
          StackName: string; TemplateURL: string = ""; TemplateBody: string = "";
          ClientToken: string = ""; Description: string = ""; Tags: JsonNode = nil;
          Capabilities: JsonNode = nil; Parameters: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          ChangeSetType: string = "CREATE"; Action: string = "CreateChangeSet";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          RoleARN: string = ""; NotificationARNs: JsonNode = nil;
          UsePreviousTemplate: bool = false; ResourceTypes: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## getCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   Action: string (required)
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  var query_603129 = newJObject()
  add(query_603129, "TemplateURL", newJString(TemplateURL))
  add(query_603129, "ChangeSetName", newJString(ChangeSetName))
  add(query_603129, "TemplateBody", newJString(TemplateBody))
  add(query_603129, "ClientToken", newJString(ClientToken))
  add(query_603129, "Description", newJString(Description))
  if Tags != nil:
    query_603129.add "Tags", Tags
  if Capabilities != nil:
    query_603129.add "Capabilities", Capabilities
  if Parameters != nil:
    query_603129.add "Parameters", Parameters
  add(query_603129, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  add(query_603129, "ChangeSetType", newJString(ChangeSetType))
  add(query_603129, "Action", newJString(Action))
  if RollbackConfigurationRollbackTriggers != nil:
    query_603129.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_603129, "RoleARN", newJString(RoleARN))
  if NotificationARNs != nil:
    query_603129.add "NotificationARNs", NotificationARNs
  add(query_603129, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if ResourceTypes != nil:
    query_603129.add "ResourceTypes", ResourceTypes
  add(query_603129, "Version", newJString(Version))
  add(query_603129, "StackName", newJString(StackName))
  result = call_603128.call(nil, query_603129, nil, nil, nil)

var getCreateChangeSet* = Call_GetCreateChangeSet_603099(
    name: "getCreateChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_GetCreateChangeSet_603100, base: "/",
    url: url_GetCreateChangeSet_603101, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStack_603195 = ref object of OpenApiRestCall_602433
proc url_PostCreateStack_603197(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostCreateStack_603196(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603198 = query.getOrDefault("Action")
  valid_603198 = validateParameter(valid_603198, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_603198 != nil:
    section.add "Action", valid_603198
  var valid_603199 = query.getOrDefault("Version")
  valid_603199 = validateParameter(valid_603199, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603199 != nil:
    section.add "Version", valid_603199
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603200 = header.getOrDefault("X-Amz-Date")
  valid_603200 = validateParameter(valid_603200, JString, required = false,
                                 default = nil)
  if valid_603200 != nil:
    section.add "X-Amz-Date", valid_603200
  var valid_603201 = header.getOrDefault("X-Amz-Security-Token")
  valid_603201 = validateParameter(valid_603201, JString, required = false,
                                 default = nil)
  if valid_603201 != nil:
    section.add "X-Amz-Security-Token", valid_603201
  var valid_603202 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603202 = validateParameter(valid_603202, JString, required = false,
                                 default = nil)
  if valid_603202 != nil:
    section.add "X-Amz-Content-Sha256", valid_603202
  var valid_603203 = header.getOrDefault("X-Amz-Algorithm")
  valid_603203 = validateParameter(valid_603203, JString, required = false,
                                 default = nil)
  if valid_603203 != nil:
    section.add "X-Amz-Algorithm", valid_603203
  var valid_603204 = header.getOrDefault("X-Amz-Signature")
  valid_603204 = validateParameter(valid_603204, JString, required = false,
                                 default = nil)
  if valid_603204 != nil:
    section.add "X-Amz-Signature", valid_603204
  var valid_603205 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603205 = validateParameter(valid_603205, JString, required = false,
                                 default = nil)
  if valid_603205 != nil:
    section.add "X-Amz-SignedHeaders", valid_603205
  var valid_603206 = header.getOrDefault("X-Amz-Credential")
  valid_603206 = validateParameter(valid_603206, JString, required = false,
                                 default = nil)
  if valid_603206 != nil:
    section.add "X-Amz-Credential", valid_603206
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  section = newJObject()
  var valid_603207 = formData.getOrDefault("StackPolicyURL")
  valid_603207 = validateParameter(valid_603207, JString, required = false,
                                 default = nil)
  if valid_603207 != nil:
    section.add "StackPolicyURL", valid_603207
  var valid_603208 = formData.getOrDefault("RoleARN")
  valid_603208 = validateParameter(valid_603208, JString, required = false,
                                 default = nil)
  if valid_603208 != nil:
    section.add "RoleARN", valid_603208
  var valid_603209 = formData.getOrDefault("ResourceTypes")
  valid_603209 = validateParameter(valid_603209, JArray, required = false,
                                 default = nil)
  if valid_603209 != nil:
    section.add "ResourceTypes", valid_603209
  var valid_603210 = formData.getOrDefault("EnableTerminationProtection")
  valid_603210 = validateParameter(valid_603210, JBool, required = false, default = nil)
  if valid_603210 != nil:
    section.add "EnableTerminationProtection", valid_603210
  var valid_603211 = formData.getOrDefault("TemplateURL")
  valid_603211 = validateParameter(valid_603211, JString, required = false,
                                 default = nil)
  if valid_603211 != nil:
    section.add "TemplateURL", valid_603211
  var valid_603212 = formData.getOrDefault("Capabilities")
  valid_603212 = validateParameter(valid_603212, JArray, required = false,
                                 default = nil)
  if valid_603212 != nil:
    section.add "Capabilities", valid_603212
  var valid_603213 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_603213 = validateParameter(valid_603213, JString, required = false,
                                 default = nil)
  if valid_603213 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_603213
  var valid_603214 = formData.getOrDefault("Tags")
  valid_603214 = validateParameter(valid_603214, JArray, required = false,
                                 default = nil)
  if valid_603214 != nil:
    section.add "Tags", valid_603214
  var valid_603215 = formData.getOrDefault("DisableRollback")
  valid_603215 = validateParameter(valid_603215, JBool, required = false, default = nil)
  if valid_603215 != nil:
    section.add "DisableRollback", valid_603215
  var valid_603216 = formData.getOrDefault("ClientRequestToken")
  valid_603216 = validateParameter(valid_603216, JString, required = false,
                                 default = nil)
  if valid_603216 != nil:
    section.add "ClientRequestToken", valid_603216
  var valid_603217 = formData.getOrDefault("Parameters")
  valid_603217 = validateParameter(valid_603217, JArray, required = false,
                                 default = nil)
  if valid_603217 != nil:
    section.add "Parameters", valid_603217
  var valid_603218 = formData.getOrDefault("NotificationARNs")
  valid_603218 = validateParameter(valid_603218, JArray, required = false,
                                 default = nil)
  if valid_603218 != nil:
    section.add "NotificationARNs", valid_603218
  var valid_603219 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_603219 = validateParameter(valid_603219, JArray, required = false,
                                 default = nil)
  if valid_603219 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_603219
  var valid_603220 = formData.getOrDefault("OnFailure")
  valid_603220 = validateParameter(valid_603220, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_603220 != nil:
    section.add "OnFailure", valid_603220
  var valid_603221 = formData.getOrDefault("TimeoutInMinutes")
  valid_603221 = validateParameter(valid_603221, JInt, required = false, default = nil)
  if valid_603221 != nil:
    section.add "TimeoutInMinutes", valid_603221
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603222 = formData.getOrDefault("StackName")
  valid_603222 = validateParameter(valid_603222, JString, required = true,
                                 default = nil)
  if valid_603222 != nil:
    section.add "StackName", valid_603222
  var valid_603223 = formData.getOrDefault("TemplateBody")
  valid_603223 = validateParameter(valid_603223, JString, required = false,
                                 default = nil)
  if valid_603223 != nil:
    section.add "TemplateBody", valid_603223
  var valid_603224 = formData.getOrDefault("StackPolicyBody")
  valid_603224 = validateParameter(valid_603224, JString, required = false,
                                 default = nil)
  if valid_603224 != nil:
    section.add "StackPolicyBody", valid_603224
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603225: Call_PostCreateStack_603195; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_603225.validator(path, query, header, formData, body)
  let scheme = call_603225.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603225.url(scheme.get, call_603225.host, call_603225.base,
                         call_603225.route, valid.getOrDefault("path"))
  result = hook(call_603225, url, valid)

proc call*(call_603226: Call_PostCreateStack_603195; StackName: string;
          StackPolicyURL: string = ""; RoleARN: string = "";
          ResourceTypes: JsonNode = nil; EnableTerminationProtection: bool = false;
          TemplateURL: string = ""; Capabilities: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Tags: JsonNode = nil; DisableRollback: bool = false;
          ClientRequestToken: string = ""; Parameters: JsonNode = nil;
          Action: string = "CreateStack"; NotificationARNs: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          OnFailure: string = "DO_NOTHING"; TimeoutInMinutes: int = 0;
          TemplateBody: string = ""; Version: string = "2010-05-15";
          StackPolicyBody: string = ""): Recallable =
  ## postCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Action: string (required)
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: string (required)
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  var query_603227 = newJObject()
  var formData_603228 = newJObject()
  add(formData_603228, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_603228, "RoleARN", newJString(RoleARN))
  if ResourceTypes != nil:
    formData_603228.add "ResourceTypes", ResourceTypes
  add(formData_603228, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(formData_603228, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_603228.add "Capabilities", Capabilities
  add(formData_603228, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Tags != nil:
    formData_603228.add "Tags", Tags
  add(formData_603228, "DisableRollback", newJBool(DisableRollback))
  add(formData_603228, "ClientRequestToken", newJString(ClientRequestToken))
  if Parameters != nil:
    formData_603228.add "Parameters", Parameters
  add(query_603227, "Action", newJString(Action))
  if NotificationARNs != nil:
    formData_603228.add "NotificationARNs", NotificationARNs
  if RollbackConfigurationRollbackTriggers != nil:
    formData_603228.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  add(formData_603228, "OnFailure", newJString(OnFailure))
  add(formData_603228, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  add(formData_603228, "StackName", newJString(StackName))
  add(formData_603228, "TemplateBody", newJString(TemplateBody))
  add(query_603227, "Version", newJString(Version))
  add(formData_603228, "StackPolicyBody", newJString(StackPolicyBody))
  result = call_603226.call(nil, query_603227, nil, formData_603228, nil)

var postCreateStack* = Call_PostCreateStack_603195(name: "postCreateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_PostCreateStack_603196,
    base: "/", url: url_PostCreateStack_603197, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStack_603162 = ref object of OpenApiRestCall_602433
proc url_GetCreateStack_603164(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetCreateStack_603163(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: JString (required)
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  section = newJObject()
  var valid_603165 = query.getOrDefault("StackPolicyBody")
  valid_603165 = validateParameter(valid_603165, JString, required = false,
                                 default = nil)
  if valid_603165 != nil:
    section.add "StackPolicyBody", valid_603165
  var valid_603166 = query.getOrDefault("TemplateURL")
  valid_603166 = validateParameter(valid_603166, JString, required = false,
                                 default = nil)
  if valid_603166 != nil:
    section.add "TemplateURL", valid_603166
  var valid_603167 = query.getOrDefault("StackPolicyURL")
  valid_603167 = validateParameter(valid_603167, JString, required = false,
                                 default = nil)
  if valid_603167 != nil:
    section.add "StackPolicyURL", valid_603167
  var valid_603168 = query.getOrDefault("TemplateBody")
  valid_603168 = validateParameter(valid_603168, JString, required = false,
                                 default = nil)
  if valid_603168 != nil:
    section.add "TemplateBody", valid_603168
  var valid_603169 = query.getOrDefault("DisableRollback")
  valid_603169 = validateParameter(valid_603169, JBool, required = false, default = nil)
  if valid_603169 != nil:
    section.add "DisableRollback", valid_603169
  var valid_603170 = query.getOrDefault("Tags")
  valid_603170 = validateParameter(valid_603170, JArray, required = false,
                                 default = nil)
  if valid_603170 != nil:
    section.add "Tags", valid_603170
  var valid_603171 = query.getOrDefault("Capabilities")
  valid_603171 = validateParameter(valid_603171, JArray, required = false,
                                 default = nil)
  if valid_603171 != nil:
    section.add "Capabilities", valid_603171
  var valid_603172 = query.getOrDefault("Parameters")
  valid_603172 = validateParameter(valid_603172, JArray, required = false,
                                 default = nil)
  if valid_603172 != nil:
    section.add "Parameters", valid_603172
  var valid_603173 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_603173 = validateParameter(valid_603173, JString, required = false,
                                 default = nil)
  if valid_603173 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_603173
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603174 = query.getOrDefault("Action")
  valid_603174 = validateParameter(valid_603174, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_603174 != nil:
    section.add "Action", valid_603174
  var valid_603175 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_603175 = validateParameter(valid_603175, JArray, required = false,
                                 default = nil)
  if valid_603175 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_603175
  var valid_603176 = query.getOrDefault("NotificationARNs")
  valid_603176 = validateParameter(valid_603176, JArray, required = false,
                                 default = nil)
  if valid_603176 != nil:
    section.add "NotificationARNs", valid_603176
  var valid_603177 = query.getOrDefault("RoleARN")
  valid_603177 = validateParameter(valid_603177, JString, required = false,
                                 default = nil)
  if valid_603177 != nil:
    section.add "RoleARN", valid_603177
  var valid_603178 = query.getOrDefault("ClientRequestToken")
  valid_603178 = validateParameter(valid_603178, JString, required = false,
                                 default = nil)
  if valid_603178 != nil:
    section.add "ClientRequestToken", valid_603178
  var valid_603179 = query.getOrDefault("EnableTerminationProtection")
  valid_603179 = validateParameter(valid_603179, JBool, required = false, default = nil)
  if valid_603179 != nil:
    section.add "EnableTerminationProtection", valid_603179
  var valid_603180 = query.getOrDefault("OnFailure")
  valid_603180 = validateParameter(valid_603180, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_603180 != nil:
    section.add "OnFailure", valid_603180
  var valid_603181 = query.getOrDefault("TimeoutInMinutes")
  valid_603181 = validateParameter(valid_603181, JInt, required = false, default = nil)
  if valid_603181 != nil:
    section.add "TimeoutInMinutes", valid_603181
  var valid_603182 = query.getOrDefault("ResourceTypes")
  valid_603182 = validateParameter(valid_603182, JArray, required = false,
                                 default = nil)
  if valid_603182 != nil:
    section.add "ResourceTypes", valid_603182
  var valid_603183 = query.getOrDefault("Version")
  valid_603183 = validateParameter(valid_603183, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603183 != nil:
    section.add "Version", valid_603183
  var valid_603184 = query.getOrDefault("StackName")
  valid_603184 = validateParameter(valid_603184, JString, required = true,
                                 default = nil)
  if valid_603184 != nil:
    section.add "StackName", valid_603184
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603185 = header.getOrDefault("X-Amz-Date")
  valid_603185 = validateParameter(valid_603185, JString, required = false,
                                 default = nil)
  if valid_603185 != nil:
    section.add "X-Amz-Date", valid_603185
  var valid_603186 = header.getOrDefault("X-Amz-Security-Token")
  valid_603186 = validateParameter(valid_603186, JString, required = false,
                                 default = nil)
  if valid_603186 != nil:
    section.add "X-Amz-Security-Token", valid_603186
  var valid_603187 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603187 = validateParameter(valid_603187, JString, required = false,
                                 default = nil)
  if valid_603187 != nil:
    section.add "X-Amz-Content-Sha256", valid_603187
  var valid_603188 = header.getOrDefault("X-Amz-Algorithm")
  valid_603188 = validateParameter(valid_603188, JString, required = false,
                                 default = nil)
  if valid_603188 != nil:
    section.add "X-Amz-Algorithm", valid_603188
  var valid_603189 = header.getOrDefault("X-Amz-Signature")
  valid_603189 = validateParameter(valid_603189, JString, required = false,
                                 default = nil)
  if valid_603189 != nil:
    section.add "X-Amz-Signature", valid_603189
  var valid_603190 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603190 = validateParameter(valid_603190, JString, required = false,
                                 default = nil)
  if valid_603190 != nil:
    section.add "X-Amz-SignedHeaders", valid_603190
  var valid_603191 = header.getOrDefault("X-Amz-Credential")
  valid_603191 = validateParameter(valid_603191, JString, required = false,
                                 default = nil)
  if valid_603191 != nil:
    section.add "X-Amz-Credential", valid_603191
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603192: Call_GetCreateStack_603162; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_603192.validator(path, query, header, formData, body)
  let scheme = call_603192.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603192.url(scheme.get, call_603192.host, call_603192.base,
                         call_603192.route, valid.getOrDefault("path"))
  result = hook(call_603192, url, valid)

proc call*(call_603193: Call_GetCreateStack_603162; StackName: string;
          StackPolicyBody: string = ""; TemplateURL: string = "";
          StackPolicyURL: string = ""; TemplateBody: string = "";
          DisableRollback: bool = false; Tags: JsonNode = nil;
          Capabilities: JsonNode = nil; Parameters: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Action: string = "CreateStack";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; RoleARN: string = "";
          ClientRequestToken: string = "";
          EnableTerminationProtection: bool = false;
          OnFailure: string = "DO_NOTHING"; TimeoutInMinutes: int = 0;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15"): Recallable =
  ## getCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: string (required)
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  var query_603194 = newJObject()
  add(query_603194, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_603194, "TemplateURL", newJString(TemplateURL))
  add(query_603194, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_603194, "TemplateBody", newJString(TemplateBody))
  add(query_603194, "DisableRollback", newJBool(DisableRollback))
  if Tags != nil:
    query_603194.add "Tags", Tags
  if Capabilities != nil:
    query_603194.add "Capabilities", Capabilities
  if Parameters != nil:
    query_603194.add "Parameters", Parameters
  add(query_603194, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  add(query_603194, "Action", newJString(Action))
  if RollbackConfigurationRollbackTriggers != nil:
    query_603194.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    query_603194.add "NotificationARNs", NotificationARNs
  add(query_603194, "RoleARN", newJString(RoleARN))
  add(query_603194, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603194, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_603194, "OnFailure", newJString(OnFailure))
  add(query_603194, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  if ResourceTypes != nil:
    query_603194.add "ResourceTypes", ResourceTypes
  add(query_603194, "Version", newJString(Version))
  add(query_603194, "StackName", newJString(StackName))
  result = call_603193.call(nil, query_603194, nil, nil, nil)

var getCreateStack* = Call_GetCreateStack_603162(name: "getCreateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_GetCreateStack_603163,
    base: "/", url: url_GetCreateStack_603164, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackInstances_603254 = ref object of OpenApiRestCall_602433
proc url_PostCreateStackInstances_603256(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostCreateStackInstances_603255(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603257 = query.getOrDefault("Action")
  valid_603257 = validateParameter(valid_603257, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_603257 != nil:
    section.add "Action", valid_603257
  var valid_603258 = query.getOrDefault("Version")
  valid_603258 = validateParameter(valid_603258, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603258 != nil:
    section.add "Version", valid_603258
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603259 = header.getOrDefault("X-Amz-Date")
  valid_603259 = validateParameter(valid_603259, JString, required = false,
                                 default = nil)
  if valid_603259 != nil:
    section.add "X-Amz-Date", valid_603259
  var valid_603260 = header.getOrDefault("X-Amz-Security-Token")
  valid_603260 = validateParameter(valid_603260, JString, required = false,
                                 default = nil)
  if valid_603260 != nil:
    section.add "X-Amz-Security-Token", valid_603260
  var valid_603261 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603261 = validateParameter(valid_603261, JString, required = false,
                                 default = nil)
  if valid_603261 != nil:
    section.add "X-Amz-Content-Sha256", valid_603261
  var valid_603262 = header.getOrDefault("X-Amz-Algorithm")
  valid_603262 = validateParameter(valid_603262, JString, required = false,
                                 default = nil)
  if valid_603262 != nil:
    section.add "X-Amz-Algorithm", valid_603262
  var valid_603263 = header.getOrDefault("X-Amz-Signature")
  valid_603263 = validateParameter(valid_603263, JString, required = false,
                                 default = nil)
  if valid_603263 != nil:
    section.add "X-Amz-Signature", valid_603263
  var valid_603264 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603264 = validateParameter(valid_603264, JString, required = false,
                                 default = nil)
  if valid_603264 != nil:
    section.add "X-Amz-SignedHeaders", valid_603264
  var valid_603265 = header.getOrDefault("X-Amz-Credential")
  valid_603265 = validateParameter(valid_603265, JString, required = false,
                                 default = nil)
  if valid_603265 != nil:
    section.add "X-Amz-Credential", valid_603265
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  section = newJObject()
  var valid_603266 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_603266 = validateParameter(valid_603266, JString, required = false,
                                 default = nil)
  if valid_603266 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_603266
  var valid_603267 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_603267 = validateParameter(valid_603267, JString, required = false,
                                 default = nil)
  if valid_603267 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_603267
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603268 = formData.getOrDefault("StackSetName")
  valid_603268 = validateParameter(valid_603268, JString, required = true,
                                 default = nil)
  if valid_603268 != nil:
    section.add "StackSetName", valid_603268
  var valid_603269 = formData.getOrDefault("Accounts")
  valid_603269 = validateParameter(valid_603269, JArray, required = true, default = nil)
  if valid_603269 != nil:
    section.add "Accounts", valid_603269
  var valid_603270 = formData.getOrDefault("Regions")
  valid_603270 = validateParameter(valid_603270, JArray, required = true, default = nil)
  if valid_603270 != nil:
    section.add "Regions", valid_603270
  var valid_603271 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_603271 = validateParameter(valid_603271, JArray, required = false,
                                 default = nil)
  if valid_603271 != nil:
    section.add "OperationPreferences.RegionOrder", valid_603271
  var valid_603272 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_603272 = validateParameter(valid_603272, JString, required = false,
                                 default = nil)
  if valid_603272 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_603272
  var valid_603273 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_603273 = validateParameter(valid_603273, JString, required = false,
                                 default = nil)
  if valid_603273 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_603273
  var valid_603274 = formData.getOrDefault("OperationId")
  valid_603274 = validateParameter(valid_603274, JString, required = false,
                                 default = nil)
  if valid_603274 != nil:
    section.add "OperationId", valid_603274
  var valid_603275 = formData.getOrDefault("ParameterOverrides")
  valid_603275 = validateParameter(valid_603275, JArray, required = false,
                                 default = nil)
  if valid_603275 != nil:
    section.add "ParameterOverrides", valid_603275
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603276: Call_PostCreateStackInstances_603254; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_603276.validator(path, query, header, formData, body)
  let scheme = call_603276.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603276.url(scheme.get, call_603276.host, call_603276.base,
                         call_603276.route, valid.getOrDefault("path"))
  result = hook(call_603276, url, valid)

proc call*(call_603277: Call_PostCreateStackInstances_603254; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "CreateStackInstances";
          OperationPreferencesFailureToleranceCount: string = "";
          OperationId: string = ""; Version: string = "2010-05-15";
          ParameterOverrides: JsonNode = nil): Recallable =
  ## postCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Version: string (required)
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  var query_603278 = newJObject()
  var formData_603279 = newJObject()
  add(formData_603279, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_603279, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_603279, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    formData_603279.add "Accounts", Accounts
  if Regions != nil:
    formData_603279.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    formData_603279.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_603279, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_603278, "Action", newJString(Action))
  add(formData_603279, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(formData_603279, "OperationId", newJString(OperationId))
  add(query_603278, "Version", newJString(Version))
  if ParameterOverrides != nil:
    formData_603279.add "ParameterOverrides", ParameterOverrides
  result = call_603277.call(nil, query_603278, nil, formData_603279, nil)

var postCreateStackInstances* = Call_PostCreateStackInstances_603254(
    name: "postCreateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_PostCreateStackInstances_603255, base: "/",
    url: url_PostCreateStackInstances_603256, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackInstances_603229 = ref object of OpenApiRestCall_602433
proc url_GetCreateStackInstances_603231(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetCreateStackInstances_603230(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_603232 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_603232 = validateParameter(valid_603232, JString, required = false,
                                 default = nil)
  if valid_603232 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_603232
  var valid_603233 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_603233 = validateParameter(valid_603233, JString, required = false,
                                 default = nil)
  if valid_603233 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_603233
  var valid_603234 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_603234 = validateParameter(valid_603234, JArray, required = false,
                                 default = nil)
  if valid_603234 != nil:
    section.add "OperationPreferences.RegionOrder", valid_603234
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603235 = query.getOrDefault("Action")
  valid_603235 = validateParameter(valid_603235, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_603235 != nil:
    section.add "Action", valid_603235
  var valid_603236 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_603236 = validateParameter(valid_603236, JString, required = false,
                                 default = nil)
  if valid_603236 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_603236
  var valid_603237 = query.getOrDefault("ParameterOverrides")
  valid_603237 = validateParameter(valid_603237, JArray, required = false,
                                 default = nil)
  if valid_603237 != nil:
    section.add "ParameterOverrides", valid_603237
  var valid_603238 = query.getOrDefault("StackSetName")
  valid_603238 = validateParameter(valid_603238, JString, required = true,
                                 default = nil)
  if valid_603238 != nil:
    section.add "StackSetName", valid_603238
  var valid_603239 = query.getOrDefault("Accounts")
  valid_603239 = validateParameter(valid_603239, JArray, required = true, default = nil)
  if valid_603239 != nil:
    section.add "Accounts", valid_603239
  var valid_603240 = query.getOrDefault("Regions")
  valid_603240 = validateParameter(valid_603240, JArray, required = true, default = nil)
  if valid_603240 != nil:
    section.add "Regions", valid_603240
  var valid_603241 = query.getOrDefault("OperationId")
  valid_603241 = validateParameter(valid_603241, JString, required = false,
                                 default = nil)
  if valid_603241 != nil:
    section.add "OperationId", valid_603241
  var valid_603242 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_603242 = validateParameter(valid_603242, JString, required = false,
                                 default = nil)
  if valid_603242 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_603242
  var valid_603243 = query.getOrDefault("Version")
  valid_603243 = validateParameter(valid_603243, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603243 != nil:
    section.add "Version", valid_603243
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603244 = header.getOrDefault("X-Amz-Date")
  valid_603244 = validateParameter(valid_603244, JString, required = false,
                                 default = nil)
  if valid_603244 != nil:
    section.add "X-Amz-Date", valid_603244
  var valid_603245 = header.getOrDefault("X-Amz-Security-Token")
  valid_603245 = validateParameter(valid_603245, JString, required = false,
                                 default = nil)
  if valid_603245 != nil:
    section.add "X-Amz-Security-Token", valid_603245
  var valid_603246 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603246 = validateParameter(valid_603246, JString, required = false,
                                 default = nil)
  if valid_603246 != nil:
    section.add "X-Amz-Content-Sha256", valid_603246
  var valid_603247 = header.getOrDefault("X-Amz-Algorithm")
  valid_603247 = validateParameter(valid_603247, JString, required = false,
                                 default = nil)
  if valid_603247 != nil:
    section.add "X-Amz-Algorithm", valid_603247
  var valid_603248 = header.getOrDefault("X-Amz-Signature")
  valid_603248 = validateParameter(valid_603248, JString, required = false,
                                 default = nil)
  if valid_603248 != nil:
    section.add "X-Amz-Signature", valid_603248
  var valid_603249 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603249 = validateParameter(valid_603249, JString, required = false,
                                 default = nil)
  if valid_603249 != nil:
    section.add "X-Amz-SignedHeaders", valid_603249
  var valid_603250 = header.getOrDefault("X-Amz-Credential")
  valid_603250 = validateParameter(valid_603250, JString, required = false,
                                 default = nil)
  if valid_603250 != nil:
    section.add "X-Amz-Credential", valid_603250
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603251: Call_GetCreateStackInstances_603229; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_603251.validator(path, query, header, formData, body)
  let scheme = call_603251.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603251.url(scheme.get, call_603251.host, call_603251.base,
                         call_603251.route, valid.getOrDefault("path"))
  result = hook(call_603251, url, valid)

proc call*(call_603252: Call_GetCreateStackInstances_603229; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureToleranceCount: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          Action: string = "CreateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          ParameterOverrides: JsonNode = nil; OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  var query_603253 = newJObject()
  add(query_603253, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_603253, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if OperationPreferencesRegionOrder != nil:
    query_603253.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_603253, "Action", newJString(Action))
  add(query_603253, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  if ParameterOverrides != nil:
    query_603253.add "ParameterOverrides", ParameterOverrides
  add(query_603253, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    query_603253.add "Accounts", Accounts
  if Regions != nil:
    query_603253.add "Regions", Regions
  add(query_603253, "OperationId", newJString(OperationId))
  add(query_603253, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_603253, "Version", newJString(Version))
  result = call_603252.call(nil, query_603253, nil, nil, nil)

var getCreateStackInstances* = Call_GetCreateStackInstances_603229(
    name: "getCreateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_GetCreateStackInstances_603230, base: "/",
    url: url_GetCreateStackInstances_603231, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackSet_603305 = ref object of OpenApiRestCall_602433
proc url_PostCreateStackSet_603307(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostCreateStackSet_603306(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603308 = query.getOrDefault("Action")
  valid_603308 = validateParameter(valid_603308, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_603308 != nil:
    section.add "Action", valid_603308
  var valid_603309 = query.getOrDefault("Version")
  valid_603309 = validateParameter(valid_603309, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603309 != nil:
    section.add "Version", valid_603309
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603310 = header.getOrDefault("X-Amz-Date")
  valid_603310 = validateParameter(valid_603310, JString, required = false,
                                 default = nil)
  if valid_603310 != nil:
    section.add "X-Amz-Date", valid_603310
  var valid_603311 = header.getOrDefault("X-Amz-Security-Token")
  valid_603311 = validateParameter(valid_603311, JString, required = false,
                                 default = nil)
  if valid_603311 != nil:
    section.add "X-Amz-Security-Token", valid_603311
  var valid_603312 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603312 = validateParameter(valid_603312, JString, required = false,
                                 default = nil)
  if valid_603312 != nil:
    section.add "X-Amz-Content-Sha256", valid_603312
  var valid_603313 = header.getOrDefault("X-Amz-Algorithm")
  valid_603313 = validateParameter(valid_603313, JString, required = false,
                                 default = nil)
  if valid_603313 != nil:
    section.add "X-Amz-Algorithm", valid_603313
  var valid_603314 = header.getOrDefault("X-Amz-Signature")
  valid_603314 = validateParameter(valid_603314, JString, required = false,
                                 default = nil)
  if valid_603314 != nil:
    section.add "X-Amz-Signature", valid_603314
  var valid_603315 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603315 = validateParameter(valid_603315, JString, required = false,
                                 default = nil)
  if valid_603315 != nil:
    section.add "X-Amz-SignedHeaders", valid_603315
  var valid_603316 = header.getOrDefault("X-Amz-Credential")
  valid_603316 = validateParameter(valid_603316, JString, required = false,
                                 default = nil)
  if valid_603316 != nil:
    section.add "X-Amz-Credential", valid_603316
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603317 = formData.getOrDefault("StackSetName")
  valid_603317 = validateParameter(valid_603317, JString, required = true,
                                 default = nil)
  if valid_603317 != nil:
    section.add "StackSetName", valid_603317
  var valid_603318 = formData.getOrDefault("ExecutionRoleName")
  valid_603318 = validateParameter(valid_603318, JString, required = false,
                                 default = nil)
  if valid_603318 != nil:
    section.add "ExecutionRoleName", valid_603318
  var valid_603319 = formData.getOrDefault("TemplateURL")
  valid_603319 = validateParameter(valid_603319, JString, required = false,
                                 default = nil)
  if valid_603319 != nil:
    section.add "TemplateURL", valid_603319
  var valid_603320 = formData.getOrDefault("Capabilities")
  valid_603320 = validateParameter(valid_603320, JArray, required = false,
                                 default = nil)
  if valid_603320 != nil:
    section.add "Capabilities", valid_603320
  var valid_603321 = formData.getOrDefault("Tags")
  valid_603321 = validateParameter(valid_603321, JArray, required = false,
                                 default = nil)
  if valid_603321 != nil:
    section.add "Tags", valid_603321
  var valid_603322 = formData.getOrDefault("ClientRequestToken")
  valid_603322 = validateParameter(valid_603322, JString, required = false,
                                 default = nil)
  if valid_603322 != nil:
    section.add "ClientRequestToken", valid_603322
  var valid_603323 = formData.getOrDefault("Parameters")
  valid_603323 = validateParameter(valid_603323, JArray, required = false,
                                 default = nil)
  if valid_603323 != nil:
    section.add "Parameters", valid_603323
  var valid_603324 = formData.getOrDefault("AdministrationRoleARN")
  valid_603324 = validateParameter(valid_603324, JString, required = false,
                                 default = nil)
  if valid_603324 != nil:
    section.add "AdministrationRoleARN", valid_603324
  var valid_603325 = formData.getOrDefault("TemplateBody")
  valid_603325 = validateParameter(valid_603325, JString, required = false,
                                 default = nil)
  if valid_603325 != nil:
    section.add "TemplateBody", valid_603325
  var valid_603326 = formData.getOrDefault("Description")
  valid_603326 = validateParameter(valid_603326, JString, required = false,
                                 default = nil)
  if valid_603326 != nil:
    section.add "Description", valid_603326
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603327: Call_PostCreateStackSet_603305; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_603327.validator(path, query, header, formData, body)
  let scheme = call_603327.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603327.url(scheme.get, call_603327.host, call_603327.base,
                         call_603327.route, valid.getOrDefault("path"))
  result = hook(call_603327, url, valid)

proc call*(call_603328: Call_PostCreateStackSet_603305; StackSetName: string;
          ExecutionRoleName: string = ""; TemplateURL: string = "";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          ClientRequestToken: string = ""; Parameters: JsonNode = nil;
          Action: string = "CreateStackSet"; AdministrationRoleARN: string = "";
          TemplateBody: string = ""; Version: string = "2010-05-15";
          Description: string = ""): Recallable =
  ## postCreateStackSet
  ## Creates a stack set.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Action: string (required)
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: string (required)
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  var query_603329 = newJObject()
  var formData_603330 = newJObject()
  add(formData_603330, "StackSetName", newJString(StackSetName))
  add(formData_603330, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(formData_603330, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_603330.add "Capabilities", Capabilities
  if Tags != nil:
    formData_603330.add "Tags", Tags
  add(formData_603330, "ClientRequestToken", newJString(ClientRequestToken))
  if Parameters != nil:
    formData_603330.add "Parameters", Parameters
  add(query_603329, "Action", newJString(Action))
  add(formData_603330, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_603330, "TemplateBody", newJString(TemplateBody))
  add(query_603329, "Version", newJString(Version))
  add(formData_603330, "Description", newJString(Description))
  result = call_603328.call(nil, query_603329, nil, formData_603330, nil)

var postCreateStackSet* = Call_PostCreateStackSet_603305(
    name: "postCreateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackSet",
    validator: validate_PostCreateStackSet_603306, base: "/",
    url: url_PostCreateStackSet_603307, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackSet_603280 = ref object of OpenApiRestCall_602433
proc url_GetCreateStackSet_603282(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetCreateStackSet_603281(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_603283 = query.getOrDefault("TemplateURL")
  valid_603283 = validateParameter(valid_603283, JString, required = false,
                                 default = nil)
  if valid_603283 != nil:
    section.add "TemplateURL", valid_603283
  var valid_603284 = query.getOrDefault("TemplateBody")
  valid_603284 = validateParameter(valid_603284, JString, required = false,
                                 default = nil)
  if valid_603284 != nil:
    section.add "TemplateBody", valid_603284
  var valid_603285 = query.getOrDefault("Description")
  valid_603285 = validateParameter(valid_603285, JString, required = false,
                                 default = nil)
  if valid_603285 != nil:
    section.add "Description", valid_603285
  var valid_603286 = query.getOrDefault("AdministrationRoleARN")
  valid_603286 = validateParameter(valid_603286, JString, required = false,
                                 default = nil)
  if valid_603286 != nil:
    section.add "AdministrationRoleARN", valid_603286
  var valid_603287 = query.getOrDefault("Tags")
  valid_603287 = validateParameter(valid_603287, JArray, required = false,
                                 default = nil)
  if valid_603287 != nil:
    section.add "Tags", valid_603287
  var valid_603288 = query.getOrDefault("Capabilities")
  valid_603288 = validateParameter(valid_603288, JArray, required = false,
                                 default = nil)
  if valid_603288 != nil:
    section.add "Capabilities", valid_603288
  var valid_603289 = query.getOrDefault("Parameters")
  valid_603289 = validateParameter(valid_603289, JArray, required = false,
                                 default = nil)
  if valid_603289 != nil:
    section.add "Parameters", valid_603289
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603290 = query.getOrDefault("Action")
  valid_603290 = validateParameter(valid_603290, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_603290 != nil:
    section.add "Action", valid_603290
  var valid_603291 = query.getOrDefault("ClientRequestToken")
  valid_603291 = validateParameter(valid_603291, JString, required = false,
                                 default = nil)
  if valid_603291 != nil:
    section.add "ClientRequestToken", valid_603291
  var valid_603292 = query.getOrDefault("StackSetName")
  valid_603292 = validateParameter(valid_603292, JString, required = true,
                                 default = nil)
  if valid_603292 != nil:
    section.add "StackSetName", valid_603292
  var valid_603293 = query.getOrDefault("ExecutionRoleName")
  valid_603293 = validateParameter(valid_603293, JString, required = false,
                                 default = nil)
  if valid_603293 != nil:
    section.add "ExecutionRoleName", valid_603293
  var valid_603294 = query.getOrDefault("Version")
  valid_603294 = validateParameter(valid_603294, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603294 != nil:
    section.add "Version", valid_603294
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603295 = header.getOrDefault("X-Amz-Date")
  valid_603295 = validateParameter(valid_603295, JString, required = false,
                                 default = nil)
  if valid_603295 != nil:
    section.add "X-Amz-Date", valid_603295
  var valid_603296 = header.getOrDefault("X-Amz-Security-Token")
  valid_603296 = validateParameter(valid_603296, JString, required = false,
                                 default = nil)
  if valid_603296 != nil:
    section.add "X-Amz-Security-Token", valid_603296
  var valid_603297 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603297 = validateParameter(valid_603297, JString, required = false,
                                 default = nil)
  if valid_603297 != nil:
    section.add "X-Amz-Content-Sha256", valid_603297
  var valid_603298 = header.getOrDefault("X-Amz-Algorithm")
  valid_603298 = validateParameter(valid_603298, JString, required = false,
                                 default = nil)
  if valid_603298 != nil:
    section.add "X-Amz-Algorithm", valid_603298
  var valid_603299 = header.getOrDefault("X-Amz-Signature")
  valid_603299 = validateParameter(valid_603299, JString, required = false,
                                 default = nil)
  if valid_603299 != nil:
    section.add "X-Amz-Signature", valid_603299
  var valid_603300 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603300 = validateParameter(valid_603300, JString, required = false,
                                 default = nil)
  if valid_603300 != nil:
    section.add "X-Amz-SignedHeaders", valid_603300
  var valid_603301 = header.getOrDefault("X-Amz-Credential")
  valid_603301 = validateParameter(valid_603301, JString, required = false,
                                 default = nil)
  if valid_603301 != nil:
    section.add "X-Amz-Credential", valid_603301
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603302: Call_GetCreateStackSet_603280; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_603302.validator(path, query, header, formData, body)
  let scheme = call_603302.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603302.url(scheme.get, call_603302.host, call_603302.base,
                         call_603302.route, valid.getOrDefault("path"))
  result = hook(call_603302, url, valid)

proc call*(call_603303: Call_GetCreateStackSet_603280; StackSetName: string;
          TemplateURL: string = ""; TemplateBody: string = ""; Description: string = "";
          AdministrationRoleARN: string = ""; Tags: JsonNode = nil;
          Capabilities: JsonNode = nil; Parameters: JsonNode = nil;
          Action: string = "CreateStackSet"; ClientRequestToken: string = "";
          ExecutionRoleName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getCreateStackSet
  ## Creates a stack set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   Version: string (required)
  var query_603304 = newJObject()
  add(query_603304, "TemplateURL", newJString(TemplateURL))
  add(query_603304, "TemplateBody", newJString(TemplateBody))
  add(query_603304, "Description", newJString(Description))
  add(query_603304, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  if Tags != nil:
    query_603304.add "Tags", Tags
  if Capabilities != nil:
    query_603304.add "Capabilities", Capabilities
  if Parameters != nil:
    query_603304.add "Parameters", Parameters
  add(query_603304, "Action", newJString(Action))
  add(query_603304, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603304, "StackSetName", newJString(StackSetName))
  add(query_603304, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_603304, "Version", newJString(Version))
  result = call_603303.call(nil, query_603304, nil, nil, nil)

var getCreateStackSet* = Call_GetCreateStackSet_603280(name: "getCreateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStackSet", validator: validate_GetCreateStackSet_603281,
    base: "/", url: url_GetCreateStackSet_603282,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteChangeSet_603348 = ref object of OpenApiRestCall_602433
proc url_PostDeleteChangeSet_603350(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDeleteChangeSet_603349(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603351 = query.getOrDefault("Action")
  valid_603351 = validateParameter(valid_603351, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_603351 != nil:
    section.add "Action", valid_603351
  var valid_603352 = query.getOrDefault("Version")
  valid_603352 = validateParameter(valid_603352, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603352 != nil:
    section.add "Version", valid_603352
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603353 = header.getOrDefault("X-Amz-Date")
  valid_603353 = validateParameter(valid_603353, JString, required = false,
                                 default = nil)
  if valid_603353 != nil:
    section.add "X-Amz-Date", valid_603353
  var valid_603354 = header.getOrDefault("X-Amz-Security-Token")
  valid_603354 = validateParameter(valid_603354, JString, required = false,
                                 default = nil)
  if valid_603354 != nil:
    section.add "X-Amz-Security-Token", valid_603354
  var valid_603355 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603355 = validateParameter(valid_603355, JString, required = false,
                                 default = nil)
  if valid_603355 != nil:
    section.add "X-Amz-Content-Sha256", valid_603355
  var valid_603356 = header.getOrDefault("X-Amz-Algorithm")
  valid_603356 = validateParameter(valid_603356, JString, required = false,
                                 default = nil)
  if valid_603356 != nil:
    section.add "X-Amz-Algorithm", valid_603356
  var valid_603357 = header.getOrDefault("X-Amz-Signature")
  valid_603357 = validateParameter(valid_603357, JString, required = false,
                                 default = nil)
  if valid_603357 != nil:
    section.add "X-Amz-Signature", valid_603357
  var valid_603358 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603358 = validateParameter(valid_603358, JString, required = false,
                                 default = nil)
  if valid_603358 != nil:
    section.add "X-Amz-SignedHeaders", valid_603358
  var valid_603359 = header.getOrDefault("X-Amz-Credential")
  valid_603359 = validateParameter(valid_603359, JString, required = false,
                                 default = nil)
  if valid_603359 != nil:
    section.add "X-Amz-Credential", valid_603359
  result.add "header", section
  ## parameters in `formData` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_603360 = formData.getOrDefault("ChangeSetName")
  valid_603360 = validateParameter(valid_603360, JString, required = true,
                                 default = nil)
  if valid_603360 != nil:
    section.add "ChangeSetName", valid_603360
  var valid_603361 = formData.getOrDefault("StackName")
  valid_603361 = validateParameter(valid_603361, JString, required = false,
                                 default = nil)
  if valid_603361 != nil:
    section.add "StackName", valid_603361
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603362: Call_PostDeleteChangeSet_603348; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_603362.validator(path, query, header, formData, body)
  let scheme = call_603362.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603362.url(scheme.get, call_603362.host, call_603362.base,
                         call_603362.route, valid.getOrDefault("path"))
  result = hook(call_603362, url, valid)

proc call*(call_603363: Call_PostDeleteChangeSet_603348; ChangeSetName: string;
          Action: string = "DeleteChangeSet"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Version: string (required)
  var query_603364 = newJObject()
  var formData_603365 = newJObject()
  add(query_603364, "Action", newJString(Action))
  add(formData_603365, "ChangeSetName", newJString(ChangeSetName))
  add(formData_603365, "StackName", newJString(StackName))
  add(query_603364, "Version", newJString(Version))
  result = call_603363.call(nil, query_603364, nil, formData_603365, nil)

var postDeleteChangeSet* = Call_PostDeleteChangeSet_603348(
    name: "postDeleteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_PostDeleteChangeSet_603349, base: "/",
    url: url_PostDeleteChangeSet_603350, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteChangeSet_603331 = ref object of OpenApiRestCall_602433
proc url_GetDeleteChangeSet_603333(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDeleteChangeSet_603332(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_603334 = query.getOrDefault("ChangeSetName")
  valid_603334 = validateParameter(valid_603334, JString, required = true,
                                 default = nil)
  if valid_603334 != nil:
    section.add "ChangeSetName", valid_603334
  var valid_603335 = query.getOrDefault("Action")
  valid_603335 = validateParameter(valid_603335, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_603335 != nil:
    section.add "Action", valid_603335
  var valid_603336 = query.getOrDefault("Version")
  valid_603336 = validateParameter(valid_603336, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603336 != nil:
    section.add "Version", valid_603336
  var valid_603337 = query.getOrDefault("StackName")
  valid_603337 = validateParameter(valid_603337, JString, required = false,
                                 default = nil)
  if valid_603337 != nil:
    section.add "StackName", valid_603337
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603338 = header.getOrDefault("X-Amz-Date")
  valid_603338 = validateParameter(valid_603338, JString, required = false,
                                 default = nil)
  if valid_603338 != nil:
    section.add "X-Amz-Date", valid_603338
  var valid_603339 = header.getOrDefault("X-Amz-Security-Token")
  valid_603339 = validateParameter(valid_603339, JString, required = false,
                                 default = nil)
  if valid_603339 != nil:
    section.add "X-Amz-Security-Token", valid_603339
  var valid_603340 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603340 = validateParameter(valid_603340, JString, required = false,
                                 default = nil)
  if valid_603340 != nil:
    section.add "X-Amz-Content-Sha256", valid_603340
  var valid_603341 = header.getOrDefault("X-Amz-Algorithm")
  valid_603341 = validateParameter(valid_603341, JString, required = false,
                                 default = nil)
  if valid_603341 != nil:
    section.add "X-Amz-Algorithm", valid_603341
  var valid_603342 = header.getOrDefault("X-Amz-Signature")
  valid_603342 = validateParameter(valid_603342, JString, required = false,
                                 default = nil)
  if valid_603342 != nil:
    section.add "X-Amz-Signature", valid_603342
  var valid_603343 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603343 = validateParameter(valid_603343, JString, required = false,
                                 default = nil)
  if valid_603343 != nil:
    section.add "X-Amz-SignedHeaders", valid_603343
  var valid_603344 = header.getOrDefault("X-Amz-Credential")
  valid_603344 = validateParameter(valid_603344, JString, required = false,
                                 default = nil)
  if valid_603344 != nil:
    section.add "X-Amz-Credential", valid_603344
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603345: Call_GetDeleteChangeSet_603331; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_603345.validator(path, query, header, formData, body)
  let scheme = call_603345.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603345.url(scheme.get, call_603345.host, call_603345.base,
                         call_603345.route, valid.getOrDefault("path"))
  result = hook(call_603345, url, valid)

proc call*(call_603346: Call_GetDeleteChangeSet_603331; ChangeSetName: string;
          Action: string = "DeleteChangeSet"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  var query_603347 = newJObject()
  add(query_603347, "ChangeSetName", newJString(ChangeSetName))
  add(query_603347, "Action", newJString(Action))
  add(query_603347, "Version", newJString(Version))
  add(query_603347, "StackName", newJString(StackName))
  result = call_603346.call(nil, query_603347, nil, nil, nil)

var getDeleteChangeSet* = Call_GetDeleteChangeSet_603331(
    name: "getDeleteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_GetDeleteChangeSet_603332, base: "/",
    url: url_GetDeleteChangeSet_603333, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStack_603385 = ref object of OpenApiRestCall_602433
proc url_PostDeleteStack_603387(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDeleteStack_603386(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603388 = query.getOrDefault("Action")
  valid_603388 = validateParameter(valid_603388, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_603388 != nil:
    section.add "Action", valid_603388
  var valid_603389 = query.getOrDefault("Version")
  valid_603389 = validateParameter(valid_603389, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603389 != nil:
    section.add "Version", valid_603389
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603390 = header.getOrDefault("X-Amz-Date")
  valid_603390 = validateParameter(valid_603390, JString, required = false,
                                 default = nil)
  if valid_603390 != nil:
    section.add "X-Amz-Date", valid_603390
  var valid_603391 = header.getOrDefault("X-Amz-Security-Token")
  valid_603391 = validateParameter(valid_603391, JString, required = false,
                                 default = nil)
  if valid_603391 != nil:
    section.add "X-Amz-Security-Token", valid_603391
  var valid_603392 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603392 = validateParameter(valid_603392, JString, required = false,
                                 default = nil)
  if valid_603392 != nil:
    section.add "X-Amz-Content-Sha256", valid_603392
  var valid_603393 = header.getOrDefault("X-Amz-Algorithm")
  valid_603393 = validateParameter(valid_603393, JString, required = false,
                                 default = nil)
  if valid_603393 != nil:
    section.add "X-Amz-Algorithm", valid_603393
  var valid_603394 = header.getOrDefault("X-Amz-Signature")
  valid_603394 = validateParameter(valid_603394, JString, required = false,
                                 default = nil)
  if valid_603394 != nil:
    section.add "X-Amz-Signature", valid_603394
  var valid_603395 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603395 = validateParameter(valid_603395, JString, required = false,
                                 default = nil)
  if valid_603395 != nil:
    section.add "X-Amz-SignedHeaders", valid_603395
  var valid_603396 = header.getOrDefault("X-Amz-Credential")
  valid_603396 = validateParameter(valid_603396, JString, required = false,
                                 default = nil)
  if valid_603396 != nil:
    section.add "X-Amz-Credential", valid_603396
  result.add "header", section
  ## parameters in `formData` object:
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_603397 = formData.getOrDefault("ClientRequestToken")
  valid_603397 = validateParameter(valid_603397, JString, required = false,
                                 default = nil)
  if valid_603397 != nil:
    section.add "ClientRequestToken", valid_603397
  var valid_603398 = formData.getOrDefault("RetainResources")
  valid_603398 = validateParameter(valid_603398, JArray, required = false,
                                 default = nil)
  if valid_603398 != nil:
    section.add "RetainResources", valid_603398
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603399 = formData.getOrDefault("StackName")
  valid_603399 = validateParameter(valid_603399, JString, required = true,
                                 default = nil)
  if valid_603399 != nil:
    section.add "StackName", valid_603399
  var valid_603400 = formData.getOrDefault("RoleARN")
  valid_603400 = validateParameter(valid_603400, JString, required = false,
                                 default = nil)
  if valid_603400 != nil:
    section.add "RoleARN", valid_603400
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603401: Call_PostDeleteStack_603385; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_603401.validator(path, query, header, formData, body)
  let scheme = call_603401.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603401.url(scheme.get, call_603401.host, call_603401.base,
                         call_603401.route, valid.getOrDefault("path"))
  result = hook(call_603401, url, valid)

proc call*(call_603402: Call_PostDeleteStack_603385; StackName: string;
          ClientRequestToken: string = ""; RetainResources: JsonNode = nil;
          Action: string = "DeleteStack"; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## postDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_603403 = newJObject()
  var formData_603404 = newJObject()
  add(formData_603404, "ClientRequestToken", newJString(ClientRequestToken))
  if RetainResources != nil:
    formData_603404.add "RetainResources", RetainResources
  add(query_603403, "Action", newJString(Action))
  add(formData_603404, "StackName", newJString(StackName))
  add(query_603403, "Version", newJString(Version))
  add(formData_603404, "RoleARN", newJString(RoleARN))
  result = call_603402.call(nil, query_603403, nil, formData_603404, nil)

var postDeleteStack* = Call_PostDeleteStack_603385(name: "postDeleteStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_PostDeleteStack_603386,
    base: "/", url: url_PostDeleteStack_603387, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStack_603366 = ref object of OpenApiRestCall_602433
proc url_GetDeleteStack_603368(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDeleteStack_603367(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603369 = query.getOrDefault("Action")
  valid_603369 = validateParameter(valid_603369, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_603369 != nil:
    section.add "Action", valid_603369
  var valid_603370 = query.getOrDefault("RoleARN")
  valid_603370 = validateParameter(valid_603370, JString, required = false,
                                 default = nil)
  if valid_603370 != nil:
    section.add "RoleARN", valid_603370
  var valid_603371 = query.getOrDefault("ClientRequestToken")
  valid_603371 = validateParameter(valid_603371, JString, required = false,
                                 default = nil)
  if valid_603371 != nil:
    section.add "ClientRequestToken", valid_603371
  var valid_603372 = query.getOrDefault("RetainResources")
  valid_603372 = validateParameter(valid_603372, JArray, required = false,
                                 default = nil)
  if valid_603372 != nil:
    section.add "RetainResources", valid_603372
  var valid_603373 = query.getOrDefault("Version")
  valid_603373 = validateParameter(valid_603373, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603373 != nil:
    section.add "Version", valid_603373
  var valid_603374 = query.getOrDefault("StackName")
  valid_603374 = validateParameter(valid_603374, JString, required = true,
                                 default = nil)
  if valid_603374 != nil:
    section.add "StackName", valid_603374
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603375 = header.getOrDefault("X-Amz-Date")
  valid_603375 = validateParameter(valid_603375, JString, required = false,
                                 default = nil)
  if valid_603375 != nil:
    section.add "X-Amz-Date", valid_603375
  var valid_603376 = header.getOrDefault("X-Amz-Security-Token")
  valid_603376 = validateParameter(valid_603376, JString, required = false,
                                 default = nil)
  if valid_603376 != nil:
    section.add "X-Amz-Security-Token", valid_603376
  var valid_603377 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603377 = validateParameter(valid_603377, JString, required = false,
                                 default = nil)
  if valid_603377 != nil:
    section.add "X-Amz-Content-Sha256", valid_603377
  var valid_603378 = header.getOrDefault("X-Amz-Algorithm")
  valid_603378 = validateParameter(valid_603378, JString, required = false,
                                 default = nil)
  if valid_603378 != nil:
    section.add "X-Amz-Algorithm", valid_603378
  var valid_603379 = header.getOrDefault("X-Amz-Signature")
  valid_603379 = validateParameter(valid_603379, JString, required = false,
                                 default = nil)
  if valid_603379 != nil:
    section.add "X-Amz-Signature", valid_603379
  var valid_603380 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603380 = validateParameter(valid_603380, JString, required = false,
                                 default = nil)
  if valid_603380 != nil:
    section.add "X-Amz-SignedHeaders", valid_603380
  var valid_603381 = header.getOrDefault("X-Amz-Credential")
  valid_603381 = validateParameter(valid_603381, JString, required = false,
                                 default = nil)
  if valid_603381 != nil:
    section.add "X-Amz-Credential", valid_603381
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603382: Call_GetDeleteStack_603366; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_603382.validator(path, query, header, formData, body)
  let scheme = call_603382.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603382.url(scheme.get, call_603382.host, call_603382.base,
                         call_603382.route, valid.getOrDefault("path"))
  result = hook(call_603382, url, valid)

proc call*(call_603383: Call_GetDeleteStack_603366; StackName: string;
          Action: string = "DeleteStack"; RoleARN: string = "";
          ClientRequestToken: string = ""; RetainResources: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## getDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   Action: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  var query_603384 = newJObject()
  add(query_603384, "Action", newJString(Action))
  add(query_603384, "RoleARN", newJString(RoleARN))
  add(query_603384, "ClientRequestToken", newJString(ClientRequestToken))
  if RetainResources != nil:
    query_603384.add "RetainResources", RetainResources
  add(query_603384, "Version", newJString(Version))
  add(query_603384, "StackName", newJString(StackName))
  result = call_603383.call(nil, query_603384, nil, nil, nil)

var getDeleteStack* = Call_GetDeleteStack_603366(name: "getDeleteStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_GetDeleteStack_603367,
    base: "/", url: url_GetDeleteStack_603368, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackInstances_603430 = ref object of OpenApiRestCall_602433
proc url_PostDeleteStackInstances_603432(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDeleteStackInstances_603431(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603433 = query.getOrDefault("Action")
  valid_603433 = validateParameter(valid_603433, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_603433 != nil:
    section.add "Action", valid_603433
  var valid_603434 = query.getOrDefault("Version")
  valid_603434 = validateParameter(valid_603434, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603434 != nil:
    section.add "Version", valid_603434
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603435 = header.getOrDefault("X-Amz-Date")
  valid_603435 = validateParameter(valid_603435, JString, required = false,
                                 default = nil)
  if valid_603435 != nil:
    section.add "X-Amz-Date", valid_603435
  var valid_603436 = header.getOrDefault("X-Amz-Security-Token")
  valid_603436 = validateParameter(valid_603436, JString, required = false,
                                 default = nil)
  if valid_603436 != nil:
    section.add "X-Amz-Security-Token", valid_603436
  var valid_603437 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603437 = validateParameter(valid_603437, JString, required = false,
                                 default = nil)
  if valid_603437 != nil:
    section.add "X-Amz-Content-Sha256", valid_603437
  var valid_603438 = header.getOrDefault("X-Amz-Algorithm")
  valid_603438 = validateParameter(valid_603438, JString, required = false,
                                 default = nil)
  if valid_603438 != nil:
    section.add "X-Amz-Algorithm", valid_603438
  var valid_603439 = header.getOrDefault("X-Amz-Signature")
  valid_603439 = validateParameter(valid_603439, JString, required = false,
                                 default = nil)
  if valid_603439 != nil:
    section.add "X-Amz-Signature", valid_603439
  var valid_603440 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603440 = validateParameter(valid_603440, JString, required = false,
                                 default = nil)
  if valid_603440 != nil:
    section.add "X-Amz-SignedHeaders", valid_603440
  var valid_603441 = header.getOrDefault("X-Amz-Credential")
  valid_603441 = validateParameter(valid_603441, JString, required = false,
                                 default = nil)
  if valid_603441 != nil:
    section.add "X-Amz-Credential", valid_603441
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  section = newJObject()
  var valid_603442 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_603442 = validateParameter(valid_603442, JString, required = false,
                                 default = nil)
  if valid_603442 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_603442
  var valid_603443 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_603443 = validateParameter(valid_603443, JString, required = false,
                                 default = nil)
  if valid_603443 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_603443
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603444 = formData.getOrDefault("StackSetName")
  valid_603444 = validateParameter(valid_603444, JString, required = true,
                                 default = nil)
  if valid_603444 != nil:
    section.add "StackSetName", valid_603444
  var valid_603445 = formData.getOrDefault("Accounts")
  valid_603445 = validateParameter(valid_603445, JArray, required = true, default = nil)
  if valid_603445 != nil:
    section.add "Accounts", valid_603445
  var valid_603446 = formData.getOrDefault("Regions")
  valid_603446 = validateParameter(valid_603446, JArray, required = true, default = nil)
  if valid_603446 != nil:
    section.add "Regions", valid_603446
  var valid_603447 = formData.getOrDefault("RetainStacks")
  valid_603447 = validateParameter(valid_603447, JBool, required = true, default = nil)
  if valid_603447 != nil:
    section.add "RetainStacks", valid_603447
  var valid_603448 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_603448 = validateParameter(valid_603448, JArray, required = false,
                                 default = nil)
  if valid_603448 != nil:
    section.add "OperationPreferences.RegionOrder", valid_603448
  var valid_603449 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_603449 = validateParameter(valid_603449, JString, required = false,
                                 default = nil)
  if valid_603449 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_603449
  var valid_603450 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_603450 = validateParameter(valid_603450, JString, required = false,
                                 default = nil)
  if valid_603450 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_603450
  var valid_603451 = formData.getOrDefault("OperationId")
  valid_603451 = validateParameter(valid_603451, JString, required = false,
                                 default = nil)
  if valid_603451 != nil:
    section.add "OperationId", valid_603451
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603452: Call_PostDeleteStackInstances_603430; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_603452.validator(path, query, header, formData, body)
  let scheme = call_603452.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603452.url(scheme.get, call_603452.host, call_603452.base,
                         call_603452.route, valid.getOrDefault("path"))
  result = hook(call_603452, url, valid)

proc call*(call_603453: Call_PostDeleteStackInstances_603430; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode; RetainStacks: bool;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "DeleteStackInstances";
          OperationPreferencesFailureToleranceCount: string = "";
          OperationId: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Version: string (required)
  var query_603454 = newJObject()
  var formData_603455 = newJObject()
  add(formData_603455, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_603455, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_603455, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    formData_603455.add "Accounts", Accounts
  if Regions != nil:
    formData_603455.add "Regions", Regions
  add(formData_603455, "RetainStacks", newJBool(RetainStacks))
  if OperationPreferencesRegionOrder != nil:
    formData_603455.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_603455, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_603454, "Action", newJString(Action))
  add(formData_603455, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(formData_603455, "OperationId", newJString(OperationId))
  add(query_603454, "Version", newJString(Version))
  result = call_603453.call(nil, query_603454, nil, formData_603455, nil)

var postDeleteStackInstances* = Call_PostDeleteStackInstances_603430(
    name: "postDeleteStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_PostDeleteStackInstances_603431, base: "/",
    url: url_PostDeleteStackInstances_603432, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackInstances_603405 = ref object of OpenApiRestCall_602433
proc url_GetDeleteStackInstances_603407(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDeleteStackInstances_603406(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_603408 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_603408 = validateParameter(valid_603408, JString, required = false,
                                 default = nil)
  if valid_603408 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_603408
  var valid_603409 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_603409 = validateParameter(valid_603409, JString, required = false,
                                 default = nil)
  if valid_603409 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_603409
  var valid_603410 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_603410 = validateParameter(valid_603410, JArray, required = false,
                                 default = nil)
  if valid_603410 != nil:
    section.add "OperationPreferences.RegionOrder", valid_603410
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603411 = query.getOrDefault("Action")
  valid_603411 = validateParameter(valid_603411, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_603411 != nil:
    section.add "Action", valid_603411
  var valid_603412 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_603412 = validateParameter(valid_603412, JString, required = false,
                                 default = nil)
  if valid_603412 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_603412
  var valid_603413 = query.getOrDefault("StackSetName")
  valid_603413 = validateParameter(valid_603413, JString, required = true,
                                 default = nil)
  if valid_603413 != nil:
    section.add "StackSetName", valid_603413
  var valid_603414 = query.getOrDefault("RetainStacks")
  valid_603414 = validateParameter(valid_603414, JBool, required = true, default = nil)
  if valid_603414 != nil:
    section.add "RetainStacks", valid_603414
  var valid_603415 = query.getOrDefault("Accounts")
  valid_603415 = validateParameter(valid_603415, JArray, required = true, default = nil)
  if valid_603415 != nil:
    section.add "Accounts", valid_603415
  var valid_603416 = query.getOrDefault("Regions")
  valid_603416 = validateParameter(valid_603416, JArray, required = true, default = nil)
  if valid_603416 != nil:
    section.add "Regions", valid_603416
  var valid_603417 = query.getOrDefault("OperationId")
  valid_603417 = validateParameter(valid_603417, JString, required = false,
                                 default = nil)
  if valid_603417 != nil:
    section.add "OperationId", valid_603417
  var valid_603418 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_603418 = validateParameter(valid_603418, JString, required = false,
                                 default = nil)
  if valid_603418 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_603418
  var valid_603419 = query.getOrDefault("Version")
  valid_603419 = validateParameter(valid_603419, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603419 != nil:
    section.add "Version", valid_603419
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603420 = header.getOrDefault("X-Amz-Date")
  valid_603420 = validateParameter(valid_603420, JString, required = false,
                                 default = nil)
  if valid_603420 != nil:
    section.add "X-Amz-Date", valid_603420
  var valid_603421 = header.getOrDefault("X-Amz-Security-Token")
  valid_603421 = validateParameter(valid_603421, JString, required = false,
                                 default = nil)
  if valid_603421 != nil:
    section.add "X-Amz-Security-Token", valid_603421
  var valid_603422 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603422 = validateParameter(valid_603422, JString, required = false,
                                 default = nil)
  if valid_603422 != nil:
    section.add "X-Amz-Content-Sha256", valid_603422
  var valid_603423 = header.getOrDefault("X-Amz-Algorithm")
  valid_603423 = validateParameter(valid_603423, JString, required = false,
                                 default = nil)
  if valid_603423 != nil:
    section.add "X-Amz-Algorithm", valid_603423
  var valid_603424 = header.getOrDefault("X-Amz-Signature")
  valid_603424 = validateParameter(valid_603424, JString, required = false,
                                 default = nil)
  if valid_603424 != nil:
    section.add "X-Amz-Signature", valid_603424
  var valid_603425 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603425 = validateParameter(valid_603425, JString, required = false,
                                 default = nil)
  if valid_603425 != nil:
    section.add "X-Amz-SignedHeaders", valid_603425
  var valid_603426 = header.getOrDefault("X-Amz-Credential")
  valid_603426 = validateParameter(valid_603426, JString, required = false,
                                 default = nil)
  if valid_603426 != nil:
    section.add "X-Amz-Credential", valid_603426
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603427: Call_GetDeleteStackInstances_603405; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_603427.validator(path, query, header, formData, body)
  let scheme = call_603427.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603427.url(scheme.get, call_603427.host, call_603427.base,
                         call_603427.route, valid.getOrDefault("path"))
  result = hook(call_603427, url, valid)

proc call*(call_603428: Call_GetDeleteStackInstances_603405; StackSetName: string;
          RetainStacks: bool; Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureToleranceCount: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          Action: string = "DeleteStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  var query_603429 = newJObject()
  add(query_603429, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_603429, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if OperationPreferencesRegionOrder != nil:
    query_603429.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_603429, "Action", newJString(Action))
  add(query_603429, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_603429, "StackSetName", newJString(StackSetName))
  add(query_603429, "RetainStacks", newJBool(RetainStacks))
  if Accounts != nil:
    query_603429.add "Accounts", Accounts
  if Regions != nil:
    query_603429.add "Regions", Regions
  add(query_603429, "OperationId", newJString(OperationId))
  add(query_603429, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_603429, "Version", newJString(Version))
  result = call_603428.call(nil, query_603429, nil, nil, nil)

var getDeleteStackInstances* = Call_GetDeleteStackInstances_603405(
    name: "getDeleteStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_GetDeleteStackInstances_603406, base: "/",
    url: url_GetDeleteStackInstances_603407, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackSet_603472 = ref object of OpenApiRestCall_602433
proc url_PostDeleteStackSet_603474(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDeleteStackSet_603473(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603475 = query.getOrDefault("Action")
  valid_603475 = validateParameter(valid_603475, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_603475 != nil:
    section.add "Action", valid_603475
  var valid_603476 = query.getOrDefault("Version")
  valid_603476 = validateParameter(valid_603476, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603476 != nil:
    section.add "Version", valid_603476
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603477 = header.getOrDefault("X-Amz-Date")
  valid_603477 = validateParameter(valid_603477, JString, required = false,
                                 default = nil)
  if valid_603477 != nil:
    section.add "X-Amz-Date", valid_603477
  var valid_603478 = header.getOrDefault("X-Amz-Security-Token")
  valid_603478 = validateParameter(valid_603478, JString, required = false,
                                 default = nil)
  if valid_603478 != nil:
    section.add "X-Amz-Security-Token", valid_603478
  var valid_603479 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603479 = validateParameter(valid_603479, JString, required = false,
                                 default = nil)
  if valid_603479 != nil:
    section.add "X-Amz-Content-Sha256", valid_603479
  var valid_603480 = header.getOrDefault("X-Amz-Algorithm")
  valid_603480 = validateParameter(valid_603480, JString, required = false,
                                 default = nil)
  if valid_603480 != nil:
    section.add "X-Amz-Algorithm", valid_603480
  var valid_603481 = header.getOrDefault("X-Amz-Signature")
  valid_603481 = validateParameter(valid_603481, JString, required = false,
                                 default = nil)
  if valid_603481 != nil:
    section.add "X-Amz-Signature", valid_603481
  var valid_603482 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603482 = validateParameter(valid_603482, JString, required = false,
                                 default = nil)
  if valid_603482 != nil:
    section.add "X-Amz-SignedHeaders", valid_603482
  var valid_603483 = header.getOrDefault("X-Amz-Credential")
  valid_603483 = validateParameter(valid_603483, JString, required = false,
                                 default = nil)
  if valid_603483 != nil:
    section.add "X-Amz-Credential", valid_603483
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603484 = formData.getOrDefault("StackSetName")
  valid_603484 = validateParameter(valid_603484, JString, required = true,
                                 default = nil)
  if valid_603484 != nil:
    section.add "StackSetName", valid_603484
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603485: Call_PostDeleteStackSet_603472; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_603485.validator(path, query, header, formData, body)
  let scheme = call_603485.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603485.url(scheme.get, call_603485.host, call_603485.base,
                         call_603485.route, valid.getOrDefault("path"))
  result = hook(call_603485, url, valid)

proc call*(call_603486: Call_PostDeleteStackSet_603472; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603487 = newJObject()
  var formData_603488 = newJObject()
  add(formData_603488, "StackSetName", newJString(StackSetName))
  add(query_603487, "Action", newJString(Action))
  add(query_603487, "Version", newJString(Version))
  result = call_603486.call(nil, query_603487, nil, formData_603488, nil)

var postDeleteStackSet* = Call_PostDeleteStackSet_603472(
    name: "postDeleteStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackSet",
    validator: validate_PostDeleteStackSet_603473, base: "/",
    url: url_PostDeleteStackSet_603474, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackSet_603456 = ref object of OpenApiRestCall_602433
proc url_GetDeleteStackSet_603458(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDeleteStackSet_603457(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603459 = query.getOrDefault("Action")
  valid_603459 = validateParameter(valid_603459, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_603459 != nil:
    section.add "Action", valid_603459
  var valid_603460 = query.getOrDefault("StackSetName")
  valid_603460 = validateParameter(valid_603460, JString, required = true,
                                 default = nil)
  if valid_603460 != nil:
    section.add "StackSetName", valid_603460
  var valid_603461 = query.getOrDefault("Version")
  valid_603461 = validateParameter(valid_603461, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603461 != nil:
    section.add "Version", valid_603461
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603462 = header.getOrDefault("X-Amz-Date")
  valid_603462 = validateParameter(valid_603462, JString, required = false,
                                 default = nil)
  if valid_603462 != nil:
    section.add "X-Amz-Date", valid_603462
  var valid_603463 = header.getOrDefault("X-Amz-Security-Token")
  valid_603463 = validateParameter(valid_603463, JString, required = false,
                                 default = nil)
  if valid_603463 != nil:
    section.add "X-Amz-Security-Token", valid_603463
  var valid_603464 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603464 = validateParameter(valid_603464, JString, required = false,
                                 default = nil)
  if valid_603464 != nil:
    section.add "X-Amz-Content-Sha256", valid_603464
  var valid_603465 = header.getOrDefault("X-Amz-Algorithm")
  valid_603465 = validateParameter(valid_603465, JString, required = false,
                                 default = nil)
  if valid_603465 != nil:
    section.add "X-Amz-Algorithm", valid_603465
  var valid_603466 = header.getOrDefault("X-Amz-Signature")
  valid_603466 = validateParameter(valid_603466, JString, required = false,
                                 default = nil)
  if valid_603466 != nil:
    section.add "X-Amz-Signature", valid_603466
  var valid_603467 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603467 = validateParameter(valid_603467, JString, required = false,
                                 default = nil)
  if valid_603467 != nil:
    section.add "X-Amz-SignedHeaders", valid_603467
  var valid_603468 = header.getOrDefault("X-Amz-Credential")
  valid_603468 = validateParameter(valid_603468, JString, required = false,
                                 default = nil)
  if valid_603468 != nil:
    section.add "X-Amz-Credential", valid_603468
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603469: Call_GetDeleteStackSet_603456; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_603469.validator(path, query, header, formData, body)
  let scheme = call_603469.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603469.url(scheme.get, call_603469.host, call_603469.base,
                         call_603469.route, valid.getOrDefault("path"))
  result = hook(call_603469, url, valid)

proc call*(call_603470: Call_GetDeleteStackSet_603456; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Version: string (required)
  var query_603471 = newJObject()
  add(query_603471, "Action", newJString(Action))
  add(query_603471, "StackSetName", newJString(StackSetName))
  add(query_603471, "Version", newJString(Version))
  result = call_603470.call(nil, query_603471, nil, nil, nil)

var getDeleteStackSet* = Call_GetDeleteStackSet_603456(name: "getDeleteStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStackSet", validator: validate_GetDeleteStackSet_603457,
    base: "/", url: url_GetDeleteStackSet_603458,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAccountLimits_603505 = ref object of OpenApiRestCall_602433
proc url_PostDescribeAccountLimits_603507(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeAccountLimits_603506(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603508 = query.getOrDefault("Action")
  valid_603508 = validateParameter(valid_603508, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_603508 != nil:
    section.add "Action", valid_603508
  var valid_603509 = query.getOrDefault("Version")
  valid_603509 = validateParameter(valid_603509, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603509 != nil:
    section.add "Version", valid_603509
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603510 = header.getOrDefault("X-Amz-Date")
  valid_603510 = validateParameter(valid_603510, JString, required = false,
                                 default = nil)
  if valid_603510 != nil:
    section.add "X-Amz-Date", valid_603510
  var valid_603511 = header.getOrDefault("X-Amz-Security-Token")
  valid_603511 = validateParameter(valid_603511, JString, required = false,
                                 default = nil)
  if valid_603511 != nil:
    section.add "X-Amz-Security-Token", valid_603511
  var valid_603512 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603512 = validateParameter(valid_603512, JString, required = false,
                                 default = nil)
  if valid_603512 != nil:
    section.add "X-Amz-Content-Sha256", valid_603512
  var valid_603513 = header.getOrDefault("X-Amz-Algorithm")
  valid_603513 = validateParameter(valid_603513, JString, required = false,
                                 default = nil)
  if valid_603513 != nil:
    section.add "X-Amz-Algorithm", valid_603513
  var valid_603514 = header.getOrDefault("X-Amz-Signature")
  valid_603514 = validateParameter(valid_603514, JString, required = false,
                                 default = nil)
  if valid_603514 != nil:
    section.add "X-Amz-Signature", valid_603514
  var valid_603515 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603515 = validateParameter(valid_603515, JString, required = false,
                                 default = nil)
  if valid_603515 != nil:
    section.add "X-Amz-SignedHeaders", valid_603515
  var valid_603516 = header.getOrDefault("X-Amz-Credential")
  valid_603516 = validateParameter(valid_603516, JString, required = false,
                                 default = nil)
  if valid_603516 != nil:
    section.add "X-Amz-Credential", valid_603516
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  section = newJObject()
  var valid_603517 = formData.getOrDefault("NextToken")
  valid_603517 = validateParameter(valid_603517, JString, required = false,
                                 default = nil)
  if valid_603517 != nil:
    section.add "NextToken", valid_603517
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603518: Call_PostDescribeAccountLimits_603505; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_603518.validator(path, query, header, formData, body)
  let scheme = call_603518.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603518.url(scheme.get, call_603518.host, call_603518.base,
                         call_603518.route, valid.getOrDefault("path"))
  result = hook(call_603518, url, valid)

proc call*(call_603519: Call_PostDescribeAccountLimits_603505;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603520 = newJObject()
  var formData_603521 = newJObject()
  add(formData_603521, "NextToken", newJString(NextToken))
  add(query_603520, "Action", newJString(Action))
  add(query_603520, "Version", newJString(Version))
  result = call_603519.call(nil, query_603520, nil, formData_603521, nil)

var postDescribeAccountLimits* = Call_PostDescribeAccountLimits_603505(
    name: "postDescribeAccountLimits", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_PostDescribeAccountLimits_603506, base: "/",
    url: url_PostDescribeAccountLimits_603507,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAccountLimits_603489 = ref object of OpenApiRestCall_602433
proc url_GetDescribeAccountLimits_603491(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeAccountLimits_603490(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603492 = query.getOrDefault("NextToken")
  valid_603492 = validateParameter(valid_603492, JString, required = false,
                                 default = nil)
  if valid_603492 != nil:
    section.add "NextToken", valid_603492
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603493 = query.getOrDefault("Action")
  valid_603493 = validateParameter(valid_603493, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_603493 != nil:
    section.add "Action", valid_603493
  var valid_603494 = query.getOrDefault("Version")
  valid_603494 = validateParameter(valid_603494, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603494 != nil:
    section.add "Version", valid_603494
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603495 = header.getOrDefault("X-Amz-Date")
  valid_603495 = validateParameter(valid_603495, JString, required = false,
                                 default = nil)
  if valid_603495 != nil:
    section.add "X-Amz-Date", valid_603495
  var valid_603496 = header.getOrDefault("X-Amz-Security-Token")
  valid_603496 = validateParameter(valid_603496, JString, required = false,
                                 default = nil)
  if valid_603496 != nil:
    section.add "X-Amz-Security-Token", valid_603496
  var valid_603497 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603497 = validateParameter(valid_603497, JString, required = false,
                                 default = nil)
  if valid_603497 != nil:
    section.add "X-Amz-Content-Sha256", valid_603497
  var valid_603498 = header.getOrDefault("X-Amz-Algorithm")
  valid_603498 = validateParameter(valid_603498, JString, required = false,
                                 default = nil)
  if valid_603498 != nil:
    section.add "X-Amz-Algorithm", valid_603498
  var valid_603499 = header.getOrDefault("X-Amz-Signature")
  valid_603499 = validateParameter(valid_603499, JString, required = false,
                                 default = nil)
  if valid_603499 != nil:
    section.add "X-Amz-Signature", valid_603499
  var valid_603500 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603500 = validateParameter(valid_603500, JString, required = false,
                                 default = nil)
  if valid_603500 != nil:
    section.add "X-Amz-SignedHeaders", valid_603500
  var valid_603501 = header.getOrDefault("X-Amz-Credential")
  valid_603501 = validateParameter(valid_603501, JString, required = false,
                                 default = nil)
  if valid_603501 != nil:
    section.add "X-Amz-Credential", valid_603501
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603502: Call_GetDescribeAccountLimits_603489; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_603502.validator(path, query, header, formData, body)
  let scheme = call_603502.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603502.url(scheme.get, call_603502.host, call_603502.base,
                         call_603502.route, valid.getOrDefault("path"))
  result = hook(call_603502, url, valid)

proc call*(call_603503: Call_GetDescribeAccountLimits_603489;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603504 = newJObject()
  add(query_603504, "NextToken", newJString(NextToken))
  add(query_603504, "Action", newJString(Action))
  add(query_603504, "Version", newJString(Version))
  result = call_603503.call(nil, query_603504, nil, nil, nil)

var getDescribeAccountLimits* = Call_GetDescribeAccountLimits_603489(
    name: "getDescribeAccountLimits", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_GetDescribeAccountLimits_603490, base: "/",
    url: url_GetDescribeAccountLimits_603491, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeChangeSet_603540 = ref object of OpenApiRestCall_602433
proc url_PostDescribeChangeSet_603542(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeChangeSet_603541(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603543 = query.getOrDefault("Action")
  valid_603543 = validateParameter(valid_603543, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_603543 != nil:
    section.add "Action", valid_603543
  var valid_603544 = query.getOrDefault("Version")
  valid_603544 = validateParameter(valid_603544, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603544 != nil:
    section.add "Version", valid_603544
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603545 = header.getOrDefault("X-Amz-Date")
  valid_603545 = validateParameter(valid_603545, JString, required = false,
                                 default = nil)
  if valid_603545 != nil:
    section.add "X-Amz-Date", valid_603545
  var valid_603546 = header.getOrDefault("X-Amz-Security-Token")
  valid_603546 = validateParameter(valid_603546, JString, required = false,
                                 default = nil)
  if valid_603546 != nil:
    section.add "X-Amz-Security-Token", valid_603546
  var valid_603547 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603547 = validateParameter(valid_603547, JString, required = false,
                                 default = nil)
  if valid_603547 != nil:
    section.add "X-Amz-Content-Sha256", valid_603547
  var valid_603548 = header.getOrDefault("X-Amz-Algorithm")
  valid_603548 = validateParameter(valid_603548, JString, required = false,
                                 default = nil)
  if valid_603548 != nil:
    section.add "X-Amz-Algorithm", valid_603548
  var valid_603549 = header.getOrDefault("X-Amz-Signature")
  valid_603549 = validateParameter(valid_603549, JString, required = false,
                                 default = nil)
  if valid_603549 != nil:
    section.add "X-Amz-Signature", valid_603549
  var valid_603550 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603550 = validateParameter(valid_603550, JString, required = false,
                                 default = nil)
  if valid_603550 != nil:
    section.add "X-Amz-SignedHeaders", valid_603550
  var valid_603551 = header.getOrDefault("X-Amz-Credential")
  valid_603551 = validateParameter(valid_603551, JString, required = false,
                                 default = nil)
  if valid_603551 != nil:
    section.add "X-Amz-Credential", valid_603551
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  section = newJObject()
  var valid_603552 = formData.getOrDefault("NextToken")
  valid_603552 = validateParameter(valid_603552, JString, required = false,
                                 default = nil)
  if valid_603552 != nil:
    section.add "NextToken", valid_603552
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_603553 = formData.getOrDefault("ChangeSetName")
  valid_603553 = validateParameter(valid_603553, JString, required = true,
                                 default = nil)
  if valid_603553 != nil:
    section.add "ChangeSetName", valid_603553
  var valid_603554 = formData.getOrDefault("StackName")
  valid_603554 = validateParameter(valid_603554, JString, required = false,
                                 default = nil)
  if valid_603554 != nil:
    section.add "StackName", valid_603554
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603555: Call_PostDescribeChangeSet_603540; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_603555.validator(path, query, header, formData, body)
  let scheme = call_603555.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603555.url(scheme.get, call_603555.host, call_603555.base,
                         call_603555.route, valid.getOrDefault("path"))
  result = hook(call_603555, url, valid)

proc call*(call_603556: Call_PostDescribeChangeSet_603540; ChangeSetName: string;
          NextToken: string = ""; Action: string = "DescribeChangeSet";
          StackName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Version: string (required)
  var query_603557 = newJObject()
  var formData_603558 = newJObject()
  add(formData_603558, "NextToken", newJString(NextToken))
  add(query_603557, "Action", newJString(Action))
  add(formData_603558, "ChangeSetName", newJString(ChangeSetName))
  add(formData_603558, "StackName", newJString(StackName))
  add(query_603557, "Version", newJString(Version))
  result = call_603556.call(nil, query_603557, nil, formData_603558, nil)

var postDescribeChangeSet* = Call_PostDescribeChangeSet_603540(
    name: "postDescribeChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_PostDescribeChangeSet_603541, base: "/",
    url: url_PostDescribeChangeSet_603542, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeChangeSet_603522 = ref object of OpenApiRestCall_602433
proc url_GetDescribeChangeSet_603524(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeChangeSet_603523(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_603525 = query.getOrDefault("ChangeSetName")
  valid_603525 = validateParameter(valid_603525, JString, required = true,
                                 default = nil)
  if valid_603525 != nil:
    section.add "ChangeSetName", valid_603525
  var valid_603526 = query.getOrDefault("NextToken")
  valid_603526 = validateParameter(valid_603526, JString, required = false,
                                 default = nil)
  if valid_603526 != nil:
    section.add "NextToken", valid_603526
  var valid_603527 = query.getOrDefault("Action")
  valid_603527 = validateParameter(valid_603527, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_603527 != nil:
    section.add "Action", valid_603527
  var valid_603528 = query.getOrDefault("Version")
  valid_603528 = validateParameter(valid_603528, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603528 != nil:
    section.add "Version", valid_603528
  var valid_603529 = query.getOrDefault("StackName")
  valid_603529 = validateParameter(valid_603529, JString, required = false,
                                 default = nil)
  if valid_603529 != nil:
    section.add "StackName", valid_603529
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603530 = header.getOrDefault("X-Amz-Date")
  valid_603530 = validateParameter(valid_603530, JString, required = false,
                                 default = nil)
  if valid_603530 != nil:
    section.add "X-Amz-Date", valid_603530
  var valid_603531 = header.getOrDefault("X-Amz-Security-Token")
  valid_603531 = validateParameter(valid_603531, JString, required = false,
                                 default = nil)
  if valid_603531 != nil:
    section.add "X-Amz-Security-Token", valid_603531
  var valid_603532 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603532 = validateParameter(valid_603532, JString, required = false,
                                 default = nil)
  if valid_603532 != nil:
    section.add "X-Amz-Content-Sha256", valid_603532
  var valid_603533 = header.getOrDefault("X-Amz-Algorithm")
  valid_603533 = validateParameter(valid_603533, JString, required = false,
                                 default = nil)
  if valid_603533 != nil:
    section.add "X-Amz-Algorithm", valid_603533
  var valid_603534 = header.getOrDefault("X-Amz-Signature")
  valid_603534 = validateParameter(valid_603534, JString, required = false,
                                 default = nil)
  if valid_603534 != nil:
    section.add "X-Amz-Signature", valid_603534
  var valid_603535 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603535 = validateParameter(valid_603535, JString, required = false,
                                 default = nil)
  if valid_603535 != nil:
    section.add "X-Amz-SignedHeaders", valid_603535
  var valid_603536 = header.getOrDefault("X-Amz-Credential")
  valid_603536 = validateParameter(valid_603536, JString, required = false,
                                 default = nil)
  if valid_603536 != nil:
    section.add "X-Amz-Credential", valid_603536
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603537: Call_GetDescribeChangeSet_603522; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_603537.validator(path, query, header, formData, body)
  let scheme = call_603537.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603537.url(scheme.get, call_603537.host, call_603537.base,
                         call_603537.route, valid.getOrDefault("path"))
  result = hook(call_603537, url, valid)

proc call*(call_603538: Call_GetDescribeChangeSet_603522; ChangeSetName: string;
          NextToken: string = ""; Action: string = "DescribeChangeSet";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  var query_603539 = newJObject()
  add(query_603539, "ChangeSetName", newJString(ChangeSetName))
  add(query_603539, "NextToken", newJString(NextToken))
  add(query_603539, "Action", newJString(Action))
  add(query_603539, "Version", newJString(Version))
  add(query_603539, "StackName", newJString(StackName))
  result = call_603538.call(nil, query_603539, nil, nil, nil)

var getDescribeChangeSet* = Call_GetDescribeChangeSet_603522(
    name: "getDescribeChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_GetDescribeChangeSet_603523, base: "/",
    url: url_GetDescribeChangeSet_603524, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackDriftDetectionStatus_603575 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackDriftDetectionStatus_603577(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackDriftDetectionStatus_603576(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603578 = query.getOrDefault("Action")
  valid_603578 = validateParameter(valid_603578, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_603578 != nil:
    section.add "Action", valid_603578
  var valid_603579 = query.getOrDefault("Version")
  valid_603579 = validateParameter(valid_603579, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603579 != nil:
    section.add "Version", valid_603579
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603580 = header.getOrDefault("X-Amz-Date")
  valid_603580 = validateParameter(valid_603580, JString, required = false,
                                 default = nil)
  if valid_603580 != nil:
    section.add "X-Amz-Date", valid_603580
  var valid_603581 = header.getOrDefault("X-Amz-Security-Token")
  valid_603581 = validateParameter(valid_603581, JString, required = false,
                                 default = nil)
  if valid_603581 != nil:
    section.add "X-Amz-Security-Token", valid_603581
  var valid_603582 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603582 = validateParameter(valid_603582, JString, required = false,
                                 default = nil)
  if valid_603582 != nil:
    section.add "X-Amz-Content-Sha256", valid_603582
  var valid_603583 = header.getOrDefault("X-Amz-Algorithm")
  valid_603583 = validateParameter(valid_603583, JString, required = false,
                                 default = nil)
  if valid_603583 != nil:
    section.add "X-Amz-Algorithm", valid_603583
  var valid_603584 = header.getOrDefault("X-Amz-Signature")
  valid_603584 = validateParameter(valid_603584, JString, required = false,
                                 default = nil)
  if valid_603584 != nil:
    section.add "X-Amz-Signature", valid_603584
  var valid_603585 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603585 = validateParameter(valid_603585, JString, required = false,
                                 default = nil)
  if valid_603585 != nil:
    section.add "X-Amz-SignedHeaders", valid_603585
  var valid_603586 = header.getOrDefault("X-Amz-Credential")
  valid_603586 = validateParameter(valid_603586, JString, required = false,
                                 default = nil)
  if valid_603586 != nil:
    section.add "X-Amz-Credential", valid_603586
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackDriftDetectionId` field"
  var valid_603587 = formData.getOrDefault("StackDriftDetectionId")
  valid_603587 = validateParameter(valid_603587, JString, required = true,
                                 default = nil)
  if valid_603587 != nil:
    section.add "StackDriftDetectionId", valid_603587
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603588: Call_PostDescribeStackDriftDetectionStatus_603575;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_603588.validator(path, query, header, formData, body)
  let scheme = call_603588.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603588.url(scheme.get, call_603588.host, call_603588.base,
                         call_603588.route, valid.getOrDefault("path"))
  result = hook(call_603588, url, valid)

proc call*(call_603589: Call_PostDescribeStackDriftDetectionStatus_603575;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   Action: string (required)
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Version: string (required)
  var query_603590 = newJObject()
  var formData_603591 = newJObject()
  add(query_603590, "Action", newJString(Action))
  add(formData_603591, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_603590, "Version", newJString(Version))
  result = call_603589.call(nil, query_603590, nil, formData_603591, nil)

var postDescribeStackDriftDetectionStatus* = Call_PostDescribeStackDriftDetectionStatus_603575(
    name: "postDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_PostDescribeStackDriftDetectionStatus_603576, base: "/",
    url: url_PostDescribeStackDriftDetectionStatus_603577,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackDriftDetectionStatus_603559 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackDriftDetectionStatus_603561(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackDriftDetectionStatus_603560(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `StackDriftDetectionId` field"
  var valid_603562 = query.getOrDefault("StackDriftDetectionId")
  valid_603562 = validateParameter(valid_603562, JString, required = true,
                                 default = nil)
  if valid_603562 != nil:
    section.add "StackDriftDetectionId", valid_603562
  var valid_603563 = query.getOrDefault("Action")
  valid_603563 = validateParameter(valid_603563, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_603563 != nil:
    section.add "Action", valid_603563
  var valid_603564 = query.getOrDefault("Version")
  valid_603564 = validateParameter(valid_603564, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603564 != nil:
    section.add "Version", valid_603564
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603565 = header.getOrDefault("X-Amz-Date")
  valid_603565 = validateParameter(valid_603565, JString, required = false,
                                 default = nil)
  if valid_603565 != nil:
    section.add "X-Amz-Date", valid_603565
  var valid_603566 = header.getOrDefault("X-Amz-Security-Token")
  valid_603566 = validateParameter(valid_603566, JString, required = false,
                                 default = nil)
  if valid_603566 != nil:
    section.add "X-Amz-Security-Token", valid_603566
  var valid_603567 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603567 = validateParameter(valid_603567, JString, required = false,
                                 default = nil)
  if valid_603567 != nil:
    section.add "X-Amz-Content-Sha256", valid_603567
  var valid_603568 = header.getOrDefault("X-Amz-Algorithm")
  valid_603568 = validateParameter(valid_603568, JString, required = false,
                                 default = nil)
  if valid_603568 != nil:
    section.add "X-Amz-Algorithm", valid_603568
  var valid_603569 = header.getOrDefault("X-Amz-Signature")
  valid_603569 = validateParameter(valid_603569, JString, required = false,
                                 default = nil)
  if valid_603569 != nil:
    section.add "X-Amz-Signature", valid_603569
  var valid_603570 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603570 = validateParameter(valid_603570, JString, required = false,
                                 default = nil)
  if valid_603570 != nil:
    section.add "X-Amz-SignedHeaders", valid_603570
  var valid_603571 = header.getOrDefault("X-Amz-Credential")
  valid_603571 = validateParameter(valid_603571, JString, required = false,
                                 default = nil)
  if valid_603571 != nil:
    section.add "X-Amz-Credential", valid_603571
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603572: Call_GetDescribeStackDriftDetectionStatus_603559;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_603572.validator(path, query, header, formData, body)
  let scheme = call_603572.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603572.url(scheme.get, call_603572.host, call_603572.base,
                         call_603572.route, valid.getOrDefault("path"))
  result = hook(call_603572, url, valid)

proc call*(call_603573: Call_GetDescribeStackDriftDetectionStatus_603559;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603574 = newJObject()
  add(query_603574, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_603574, "Action", newJString(Action))
  add(query_603574, "Version", newJString(Version))
  result = call_603573.call(nil, query_603574, nil, nil, nil)

var getDescribeStackDriftDetectionStatus* = Call_GetDescribeStackDriftDetectionStatus_603559(
    name: "getDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_GetDescribeStackDriftDetectionStatus_603560, base: "/",
    url: url_GetDescribeStackDriftDetectionStatus_603561,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackEvents_603609 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackEvents_603611(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackEvents_603610(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603612 = query.getOrDefault("Action")
  valid_603612 = validateParameter(valid_603612, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_603612 != nil:
    section.add "Action", valid_603612
  var valid_603613 = query.getOrDefault("Version")
  valid_603613 = validateParameter(valid_603613, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603613 != nil:
    section.add "Version", valid_603613
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603614 = header.getOrDefault("X-Amz-Date")
  valid_603614 = validateParameter(valid_603614, JString, required = false,
                                 default = nil)
  if valid_603614 != nil:
    section.add "X-Amz-Date", valid_603614
  var valid_603615 = header.getOrDefault("X-Amz-Security-Token")
  valid_603615 = validateParameter(valid_603615, JString, required = false,
                                 default = nil)
  if valid_603615 != nil:
    section.add "X-Amz-Security-Token", valid_603615
  var valid_603616 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603616 = validateParameter(valid_603616, JString, required = false,
                                 default = nil)
  if valid_603616 != nil:
    section.add "X-Amz-Content-Sha256", valid_603616
  var valid_603617 = header.getOrDefault("X-Amz-Algorithm")
  valid_603617 = validateParameter(valid_603617, JString, required = false,
                                 default = nil)
  if valid_603617 != nil:
    section.add "X-Amz-Algorithm", valid_603617
  var valid_603618 = header.getOrDefault("X-Amz-Signature")
  valid_603618 = validateParameter(valid_603618, JString, required = false,
                                 default = nil)
  if valid_603618 != nil:
    section.add "X-Amz-Signature", valid_603618
  var valid_603619 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603619 = validateParameter(valid_603619, JString, required = false,
                                 default = nil)
  if valid_603619 != nil:
    section.add "X-Amz-SignedHeaders", valid_603619
  var valid_603620 = header.getOrDefault("X-Amz-Credential")
  valid_603620 = validateParameter(valid_603620, JString, required = false,
                                 default = nil)
  if valid_603620 != nil:
    section.add "X-Amz-Credential", valid_603620
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_603621 = formData.getOrDefault("NextToken")
  valid_603621 = validateParameter(valid_603621, JString, required = false,
                                 default = nil)
  if valid_603621 != nil:
    section.add "NextToken", valid_603621
  var valid_603622 = formData.getOrDefault("StackName")
  valid_603622 = validateParameter(valid_603622, JString, required = false,
                                 default = nil)
  if valid_603622 != nil:
    section.add "StackName", valid_603622
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603623: Call_PostDescribeStackEvents_603609; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_603623.validator(path, query, header, formData, body)
  let scheme = call_603623.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603623.url(scheme.get, call_603623.host, call_603623.base,
                         call_603623.route, valid.getOrDefault("path"))
  result = hook(call_603623, url, valid)

proc call*(call_603624: Call_PostDescribeStackEvents_603609;
          NextToken: string = ""; Action: string = "DescribeStackEvents";
          StackName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_603625 = newJObject()
  var formData_603626 = newJObject()
  add(formData_603626, "NextToken", newJString(NextToken))
  add(query_603625, "Action", newJString(Action))
  add(formData_603626, "StackName", newJString(StackName))
  add(query_603625, "Version", newJString(Version))
  result = call_603624.call(nil, query_603625, nil, formData_603626, nil)

var postDescribeStackEvents* = Call_PostDescribeStackEvents_603609(
    name: "postDescribeStackEvents", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_PostDescribeStackEvents_603610, base: "/",
    url: url_PostDescribeStackEvents_603611, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackEvents_603592 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackEvents_603594(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackEvents_603593(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_603595 = query.getOrDefault("NextToken")
  valid_603595 = validateParameter(valid_603595, JString, required = false,
                                 default = nil)
  if valid_603595 != nil:
    section.add "NextToken", valid_603595
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603596 = query.getOrDefault("Action")
  valid_603596 = validateParameter(valid_603596, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_603596 != nil:
    section.add "Action", valid_603596
  var valid_603597 = query.getOrDefault("Version")
  valid_603597 = validateParameter(valid_603597, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603597 != nil:
    section.add "Version", valid_603597
  var valid_603598 = query.getOrDefault("StackName")
  valid_603598 = validateParameter(valid_603598, JString, required = false,
                                 default = nil)
  if valid_603598 != nil:
    section.add "StackName", valid_603598
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603599 = header.getOrDefault("X-Amz-Date")
  valid_603599 = validateParameter(valid_603599, JString, required = false,
                                 default = nil)
  if valid_603599 != nil:
    section.add "X-Amz-Date", valid_603599
  var valid_603600 = header.getOrDefault("X-Amz-Security-Token")
  valid_603600 = validateParameter(valid_603600, JString, required = false,
                                 default = nil)
  if valid_603600 != nil:
    section.add "X-Amz-Security-Token", valid_603600
  var valid_603601 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603601 = validateParameter(valid_603601, JString, required = false,
                                 default = nil)
  if valid_603601 != nil:
    section.add "X-Amz-Content-Sha256", valid_603601
  var valid_603602 = header.getOrDefault("X-Amz-Algorithm")
  valid_603602 = validateParameter(valid_603602, JString, required = false,
                                 default = nil)
  if valid_603602 != nil:
    section.add "X-Amz-Algorithm", valid_603602
  var valid_603603 = header.getOrDefault("X-Amz-Signature")
  valid_603603 = validateParameter(valid_603603, JString, required = false,
                                 default = nil)
  if valid_603603 != nil:
    section.add "X-Amz-Signature", valid_603603
  var valid_603604 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603604 = validateParameter(valid_603604, JString, required = false,
                                 default = nil)
  if valid_603604 != nil:
    section.add "X-Amz-SignedHeaders", valid_603604
  var valid_603605 = header.getOrDefault("X-Amz-Credential")
  valid_603605 = validateParameter(valid_603605, JString, required = false,
                                 default = nil)
  if valid_603605 != nil:
    section.add "X-Amz-Credential", valid_603605
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603606: Call_GetDescribeStackEvents_603592; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_603606.validator(path, query, header, formData, body)
  let scheme = call_603606.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603606.url(scheme.get, call_603606.host, call_603606.base,
                         call_603606.route, valid.getOrDefault("path"))
  result = hook(call_603606, url, valid)

proc call*(call_603607: Call_GetDescribeStackEvents_603592; NextToken: string = "";
          Action: string = "DescribeStackEvents"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_603608 = newJObject()
  add(query_603608, "NextToken", newJString(NextToken))
  add(query_603608, "Action", newJString(Action))
  add(query_603608, "Version", newJString(Version))
  add(query_603608, "StackName", newJString(StackName))
  result = call_603607.call(nil, query_603608, nil, nil, nil)

var getDescribeStackEvents* = Call_GetDescribeStackEvents_603592(
    name: "getDescribeStackEvents", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_GetDescribeStackEvents_603593, base: "/",
    url: url_GetDescribeStackEvents_603594, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackInstance_603645 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackInstance_603647(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackInstance_603646(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603648 = query.getOrDefault("Action")
  valid_603648 = validateParameter(valid_603648, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_603648 != nil:
    section.add "Action", valid_603648
  var valid_603649 = query.getOrDefault("Version")
  valid_603649 = validateParameter(valid_603649, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603649 != nil:
    section.add "Version", valid_603649
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603650 = header.getOrDefault("X-Amz-Date")
  valid_603650 = validateParameter(valid_603650, JString, required = false,
                                 default = nil)
  if valid_603650 != nil:
    section.add "X-Amz-Date", valid_603650
  var valid_603651 = header.getOrDefault("X-Amz-Security-Token")
  valid_603651 = validateParameter(valid_603651, JString, required = false,
                                 default = nil)
  if valid_603651 != nil:
    section.add "X-Amz-Security-Token", valid_603651
  var valid_603652 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603652 = validateParameter(valid_603652, JString, required = false,
                                 default = nil)
  if valid_603652 != nil:
    section.add "X-Amz-Content-Sha256", valid_603652
  var valid_603653 = header.getOrDefault("X-Amz-Algorithm")
  valid_603653 = validateParameter(valid_603653, JString, required = false,
                                 default = nil)
  if valid_603653 != nil:
    section.add "X-Amz-Algorithm", valid_603653
  var valid_603654 = header.getOrDefault("X-Amz-Signature")
  valid_603654 = validateParameter(valid_603654, JString, required = false,
                                 default = nil)
  if valid_603654 != nil:
    section.add "X-Amz-Signature", valid_603654
  var valid_603655 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603655 = validateParameter(valid_603655, JString, required = false,
                                 default = nil)
  if valid_603655 != nil:
    section.add "X-Amz-SignedHeaders", valid_603655
  var valid_603656 = header.getOrDefault("X-Amz-Credential")
  valid_603656 = validateParameter(valid_603656, JString, required = false,
                                 default = nil)
  if valid_603656 != nil:
    section.add "X-Amz-Credential", valid_603656
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603657 = formData.getOrDefault("StackSetName")
  valid_603657 = validateParameter(valid_603657, JString, required = true,
                                 default = nil)
  if valid_603657 != nil:
    section.add "StackSetName", valid_603657
  var valid_603658 = formData.getOrDefault("StackInstanceRegion")
  valid_603658 = validateParameter(valid_603658, JString, required = true,
                                 default = nil)
  if valid_603658 != nil:
    section.add "StackInstanceRegion", valid_603658
  var valid_603659 = formData.getOrDefault("StackInstanceAccount")
  valid_603659 = validateParameter(valid_603659, JString, required = true,
                                 default = nil)
  if valid_603659 != nil:
    section.add "StackInstanceAccount", valid_603659
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603660: Call_PostDescribeStackInstance_603645; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_603660.validator(path, query, header, formData, body)
  let scheme = call_603660.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603660.url(scheme.get, call_603660.host, call_603660.base,
                         call_603660.route, valid.getOrDefault("path"))
  result = hook(call_603660, url, valid)

proc call*(call_603661: Call_PostDescribeStackInstance_603645;
          StackSetName: string; StackInstanceRegion: string;
          StackInstanceAccount: string; Action: string = "DescribeStackInstance";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   Action: string (required)
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Version: string (required)
  var query_603662 = newJObject()
  var formData_603663 = newJObject()
  add(formData_603663, "StackSetName", newJString(StackSetName))
  add(query_603662, "Action", newJString(Action))
  add(formData_603663, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_603663, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_603662, "Version", newJString(Version))
  result = call_603661.call(nil, query_603662, nil, formData_603663, nil)

var postDescribeStackInstance* = Call_PostDescribeStackInstance_603645(
    name: "postDescribeStackInstance", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_PostDescribeStackInstance_603646, base: "/",
    url: url_PostDescribeStackInstance_603647,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackInstance_603627 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackInstance_603629(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackInstance_603628(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   Action: JString (required)
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `StackInstanceRegion` field"
  var valid_603630 = query.getOrDefault("StackInstanceRegion")
  valid_603630 = validateParameter(valid_603630, JString, required = true,
                                 default = nil)
  if valid_603630 != nil:
    section.add "StackInstanceRegion", valid_603630
  var valid_603631 = query.getOrDefault("Action")
  valid_603631 = validateParameter(valid_603631, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_603631 != nil:
    section.add "Action", valid_603631
  var valid_603632 = query.getOrDefault("StackInstanceAccount")
  valid_603632 = validateParameter(valid_603632, JString, required = true,
                                 default = nil)
  if valid_603632 != nil:
    section.add "StackInstanceAccount", valid_603632
  var valid_603633 = query.getOrDefault("StackSetName")
  valid_603633 = validateParameter(valid_603633, JString, required = true,
                                 default = nil)
  if valid_603633 != nil:
    section.add "StackSetName", valid_603633
  var valid_603634 = query.getOrDefault("Version")
  valid_603634 = validateParameter(valid_603634, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603634 != nil:
    section.add "Version", valid_603634
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603635 = header.getOrDefault("X-Amz-Date")
  valid_603635 = validateParameter(valid_603635, JString, required = false,
                                 default = nil)
  if valid_603635 != nil:
    section.add "X-Amz-Date", valid_603635
  var valid_603636 = header.getOrDefault("X-Amz-Security-Token")
  valid_603636 = validateParameter(valid_603636, JString, required = false,
                                 default = nil)
  if valid_603636 != nil:
    section.add "X-Amz-Security-Token", valid_603636
  var valid_603637 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603637 = validateParameter(valid_603637, JString, required = false,
                                 default = nil)
  if valid_603637 != nil:
    section.add "X-Amz-Content-Sha256", valid_603637
  var valid_603638 = header.getOrDefault("X-Amz-Algorithm")
  valid_603638 = validateParameter(valid_603638, JString, required = false,
                                 default = nil)
  if valid_603638 != nil:
    section.add "X-Amz-Algorithm", valid_603638
  var valid_603639 = header.getOrDefault("X-Amz-Signature")
  valid_603639 = validateParameter(valid_603639, JString, required = false,
                                 default = nil)
  if valid_603639 != nil:
    section.add "X-Amz-Signature", valid_603639
  var valid_603640 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603640 = validateParameter(valid_603640, JString, required = false,
                                 default = nil)
  if valid_603640 != nil:
    section.add "X-Amz-SignedHeaders", valid_603640
  var valid_603641 = header.getOrDefault("X-Amz-Credential")
  valid_603641 = validateParameter(valid_603641, JString, required = false,
                                 default = nil)
  if valid_603641 != nil:
    section.add "X-Amz-Credential", valid_603641
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603642: Call_GetDescribeStackInstance_603627; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_603642.validator(path, query, header, formData, body)
  let scheme = call_603642.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603642.url(scheme.get, call_603642.host, call_603642.base,
                         call_603642.route, valid.getOrDefault("path"))
  result = hook(call_603642, url, valid)

proc call*(call_603643: Call_GetDescribeStackInstance_603627;
          StackInstanceRegion: string; StackInstanceAccount: string;
          StackSetName: string; Action: string = "DescribeStackInstance";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   Action: string (required)
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   Version: string (required)
  var query_603644 = newJObject()
  add(query_603644, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_603644, "Action", newJString(Action))
  add(query_603644, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_603644, "StackSetName", newJString(StackSetName))
  add(query_603644, "Version", newJString(Version))
  result = call_603643.call(nil, query_603644, nil, nil, nil)

var getDescribeStackInstance* = Call_GetDescribeStackInstance_603627(
    name: "getDescribeStackInstance", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_GetDescribeStackInstance_603628, base: "/",
    url: url_GetDescribeStackInstance_603629, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResource_603681 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackResource_603683(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackResource_603682(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603684 = query.getOrDefault("Action")
  valid_603684 = validateParameter(valid_603684, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_603684 != nil:
    section.add "Action", valid_603684
  var valid_603685 = query.getOrDefault("Version")
  valid_603685 = validateParameter(valid_603685, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603685 != nil:
    section.add "Version", valid_603685
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603686 = header.getOrDefault("X-Amz-Date")
  valid_603686 = validateParameter(valid_603686, JString, required = false,
                                 default = nil)
  if valid_603686 != nil:
    section.add "X-Amz-Date", valid_603686
  var valid_603687 = header.getOrDefault("X-Amz-Security-Token")
  valid_603687 = validateParameter(valid_603687, JString, required = false,
                                 default = nil)
  if valid_603687 != nil:
    section.add "X-Amz-Security-Token", valid_603687
  var valid_603688 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603688 = validateParameter(valid_603688, JString, required = false,
                                 default = nil)
  if valid_603688 != nil:
    section.add "X-Amz-Content-Sha256", valid_603688
  var valid_603689 = header.getOrDefault("X-Amz-Algorithm")
  valid_603689 = validateParameter(valid_603689, JString, required = false,
                                 default = nil)
  if valid_603689 != nil:
    section.add "X-Amz-Algorithm", valid_603689
  var valid_603690 = header.getOrDefault("X-Amz-Signature")
  valid_603690 = validateParameter(valid_603690, JString, required = false,
                                 default = nil)
  if valid_603690 != nil:
    section.add "X-Amz-Signature", valid_603690
  var valid_603691 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603691 = validateParameter(valid_603691, JString, required = false,
                                 default = nil)
  if valid_603691 != nil:
    section.add "X-Amz-SignedHeaders", valid_603691
  var valid_603692 = header.getOrDefault("X-Amz-Credential")
  valid_603692 = validateParameter(valid_603692, JString, required = false,
                                 default = nil)
  if valid_603692 != nil:
    section.add "X-Amz-Credential", valid_603692
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `LogicalResourceId` field"
  var valid_603693 = formData.getOrDefault("LogicalResourceId")
  valid_603693 = validateParameter(valid_603693, JString, required = true,
                                 default = nil)
  if valid_603693 != nil:
    section.add "LogicalResourceId", valid_603693
  var valid_603694 = formData.getOrDefault("StackName")
  valid_603694 = validateParameter(valid_603694, JString, required = true,
                                 default = nil)
  if valid_603694 != nil:
    section.add "StackName", valid_603694
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603695: Call_PostDescribeStackResource_603681; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_603695.validator(path, query, header, formData, body)
  let scheme = call_603695.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603695.url(scheme.get, call_603695.host, call_603695.base,
                         call_603695.route, valid.getOrDefault("path"))
  result = hook(call_603695, url, valid)

proc call*(call_603696: Call_PostDescribeStackResource_603681;
          LogicalResourceId: string; StackName: string;
          Action: string = "DescribeStackResource"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_603697 = newJObject()
  var formData_603698 = newJObject()
  add(formData_603698, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_603697, "Action", newJString(Action))
  add(formData_603698, "StackName", newJString(StackName))
  add(query_603697, "Version", newJString(Version))
  result = call_603696.call(nil, query_603697, nil, formData_603698, nil)

var postDescribeStackResource* = Call_PostDescribeStackResource_603681(
    name: "postDescribeStackResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_PostDescribeStackResource_603682, base: "/",
    url: url_PostDescribeStackResource_603683,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResource_603664 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackResource_603666(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackResource_603665(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `LogicalResourceId` field"
  var valid_603667 = query.getOrDefault("LogicalResourceId")
  valid_603667 = validateParameter(valid_603667, JString, required = true,
                                 default = nil)
  if valid_603667 != nil:
    section.add "LogicalResourceId", valid_603667
  var valid_603668 = query.getOrDefault("Action")
  valid_603668 = validateParameter(valid_603668, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_603668 != nil:
    section.add "Action", valid_603668
  var valid_603669 = query.getOrDefault("Version")
  valid_603669 = validateParameter(valid_603669, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603669 != nil:
    section.add "Version", valid_603669
  var valid_603670 = query.getOrDefault("StackName")
  valid_603670 = validateParameter(valid_603670, JString, required = true,
                                 default = nil)
  if valid_603670 != nil:
    section.add "StackName", valid_603670
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603671 = header.getOrDefault("X-Amz-Date")
  valid_603671 = validateParameter(valid_603671, JString, required = false,
                                 default = nil)
  if valid_603671 != nil:
    section.add "X-Amz-Date", valid_603671
  var valid_603672 = header.getOrDefault("X-Amz-Security-Token")
  valid_603672 = validateParameter(valid_603672, JString, required = false,
                                 default = nil)
  if valid_603672 != nil:
    section.add "X-Amz-Security-Token", valid_603672
  var valid_603673 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603673 = validateParameter(valid_603673, JString, required = false,
                                 default = nil)
  if valid_603673 != nil:
    section.add "X-Amz-Content-Sha256", valid_603673
  var valid_603674 = header.getOrDefault("X-Amz-Algorithm")
  valid_603674 = validateParameter(valid_603674, JString, required = false,
                                 default = nil)
  if valid_603674 != nil:
    section.add "X-Amz-Algorithm", valid_603674
  var valid_603675 = header.getOrDefault("X-Amz-Signature")
  valid_603675 = validateParameter(valid_603675, JString, required = false,
                                 default = nil)
  if valid_603675 != nil:
    section.add "X-Amz-Signature", valid_603675
  var valid_603676 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603676 = validateParameter(valid_603676, JString, required = false,
                                 default = nil)
  if valid_603676 != nil:
    section.add "X-Amz-SignedHeaders", valid_603676
  var valid_603677 = header.getOrDefault("X-Amz-Credential")
  valid_603677 = validateParameter(valid_603677, JString, required = false,
                                 default = nil)
  if valid_603677 != nil:
    section.add "X-Amz-Credential", valid_603677
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603678: Call_GetDescribeStackResource_603664; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_603678.validator(path, query, header, formData, body)
  let scheme = call_603678.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603678.url(scheme.get, call_603678.host, call_603678.base,
                         call_603678.route, valid.getOrDefault("path"))
  result = hook(call_603678, url, valid)

proc call*(call_603679: Call_GetDescribeStackResource_603664;
          LogicalResourceId: string; StackName: string;
          Action: string = "DescribeStackResource"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_603680 = newJObject()
  add(query_603680, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_603680, "Action", newJString(Action))
  add(query_603680, "Version", newJString(Version))
  add(query_603680, "StackName", newJString(StackName))
  result = call_603679.call(nil, query_603680, nil, nil, nil)

var getDescribeStackResource* = Call_GetDescribeStackResource_603664(
    name: "getDescribeStackResource", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_GetDescribeStackResource_603665, base: "/",
    url: url_GetDescribeStackResource_603666, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResourceDrifts_603718 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackResourceDrifts_603720(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackResourceDrifts_603719(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603721 = query.getOrDefault("Action")
  valid_603721 = validateParameter(valid_603721, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_603721 != nil:
    section.add "Action", valid_603721
  var valid_603722 = query.getOrDefault("Version")
  valid_603722 = validateParameter(valid_603722, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603722 != nil:
    section.add "Version", valid_603722
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603723 = header.getOrDefault("X-Amz-Date")
  valid_603723 = validateParameter(valid_603723, JString, required = false,
                                 default = nil)
  if valid_603723 != nil:
    section.add "X-Amz-Date", valid_603723
  var valid_603724 = header.getOrDefault("X-Amz-Security-Token")
  valid_603724 = validateParameter(valid_603724, JString, required = false,
                                 default = nil)
  if valid_603724 != nil:
    section.add "X-Amz-Security-Token", valid_603724
  var valid_603725 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603725 = validateParameter(valid_603725, JString, required = false,
                                 default = nil)
  if valid_603725 != nil:
    section.add "X-Amz-Content-Sha256", valid_603725
  var valid_603726 = header.getOrDefault("X-Amz-Algorithm")
  valid_603726 = validateParameter(valid_603726, JString, required = false,
                                 default = nil)
  if valid_603726 != nil:
    section.add "X-Amz-Algorithm", valid_603726
  var valid_603727 = header.getOrDefault("X-Amz-Signature")
  valid_603727 = validateParameter(valid_603727, JString, required = false,
                                 default = nil)
  if valid_603727 != nil:
    section.add "X-Amz-Signature", valid_603727
  var valid_603728 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603728 = validateParameter(valid_603728, JString, required = false,
                                 default = nil)
  if valid_603728 != nil:
    section.add "X-Amz-SignedHeaders", valid_603728
  var valid_603729 = header.getOrDefault("X-Amz-Credential")
  valid_603729 = validateParameter(valid_603729, JString, required = false,
                                 default = nil)
  if valid_603729 != nil:
    section.add "X-Amz-Credential", valid_603729
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  section = newJObject()
  var valid_603730 = formData.getOrDefault("NextToken")
  valid_603730 = validateParameter(valid_603730, JString, required = false,
                                 default = nil)
  if valid_603730 != nil:
    section.add "NextToken", valid_603730
  var valid_603731 = formData.getOrDefault("MaxResults")
  valid_603731 = validateParameter(valid_603731, JInt, required = false, default = nil)
  if valid_603731 != nil:
    section.add "MaxResults", valid_603731
  var valid_603732 = formData.getOrDefault("StackResourceDriftStatusFilters")
  valid_603732 = validateParameter(valid_603732, JArray, required = false,
                                 default = nil)
  if valid_603732 != nil:
    section.add "StackResourceDriftStatusFilters", valid_603732
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603733 = formData.getOrDefault("StackName")
  valid_603733 = validateParameter(valid_603733, JString, required = true,
                                 default = nil)
  if valid_603733 != nil:
    section.add "StackName", valid_603733
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603734: Call_PostDescribeStackResourceDrifts_603718;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_603734.validator(path, query, header, formData, body)
  let scheme = call_603734.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603734.url(scheme.get, call_603734.host, call_603734.base,
                         call_603734.route, valid.getOrDefault("path"))
  result = hook(call_603734, url, valid)

proc call*(call_603735: Call_PostDescribeStackResourceDrifts_603718;
          StackName: string; NextToken: string = ""; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil;
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   Version: string (required)
  var query_603736 = newJObject()
  var formData_603737 = newJObject()
  add(formData_603737, "NextToken", newJString(NextToken))
  add(formData_603737, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    formData_603737.add "StackResourceDriftStatusFilters",
                       StackResourceDriftStatusFilters
  add(query_603736, "Action", newJString(Action))
  add(formData_603737, "StackName", newJString(StackName))
  add(query_603736, "Version", newJString(Version))
  result = call_603735.call(nil, query_603736, nil, formData_603737, nil)

var postDescribeStackResourceDrifts* = Call_PostDescribeStackResourceDrifts_603718(
    name: "postDescribeStackResourceDrifts", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_PostDescribeStackResourceDrifts_603719, base: "/",
    url: url_PostDescribeStackResourceDrifts_603720,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResourceDrifts_603699 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackResourceDrifts_603701(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackResourceDrifts_603700(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  section = newJObject()
  var valid_603702 = query.getOrDefault("StackResourceDriftStatusFilters")
  valid_603702 = validateParameter(valid_603702, JArray, required = false,
                                 default = nil)
  if valid_603702 != nil:
    section.add "StackResourceDriftStatusFilters", valid_603702
  var valid_603703 = query.getOrDefault("NextToken")
  valid_603703 = validateParameter(valid_603703, JString, required = false,
                                 default = nil)
  if valid_603703 != nil:
    section.add "NextToken", valid_603703
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603704 = query.getOrDefault("Action")
  valid_603704 = validateParameter(valid_603704, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_603704 != nil:
    section.add "Action", valid_603704
  var valid_603705 = query.getOrDefault("Version")
  valid_603705 = validateParameter(valid_603705, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603705 != nil:
    section.add "Version", valid_603705
  var valid_603706 = query.getOrDefault("MaxResults")
  valid_603706 = validateParameter(valid_603706, JInt, required = false, default = nil)
  if valid_603706 != nil:
    section.add "MaxResults", valid_603706
  var valid_603707 = query.getOrDefault("StackName")
  valid_603707 = validateParameter(valid_603707, JString, required = true,
                                 default = nil)
  if valid_603707 != nil:
    section.add "StackName", valid_603707
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603708 = header.getOrDefault("X-Amz-Date")
  valid_603708 = validateParameter(valid_603708, JString, required = false,
                                 default = nil)
  if valid_603708 != nil:
    section.add "X-Amz-Date", valid_603708
  var valid_603709 = header.getOrDefault("X-Amz-Security-Token")
  valid_603709 = validateParameter(valid_603709, JString, required = false,
                                 default = nil)
  if valid_603709 != nil:
    section.add "X-Amz-Security-Token", valid_603709
  var valid_603710 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603710 = validateParameter(valid_603710, JString, required = false,
                                 default = nil)
  if valid_603710 != nil:
    section.add "X-Amz-Content-Sha256", valid_603710
  var valid_603711 = header.getOrDefault("X-Amz-Algorithm")
  valid_603711 = validateParameter(valid_603711, JString, required = false,
                                 default = nil)
  if valid_603711 != nil:
    section.add "X-Amz-Algorithm", valid_603711
  var valid_603712 = header.getOrDefault("X-Amz-Signature")
  valid_603712 = validateParameter(valid_603712, JString, required = false,
                                 default = nil)
  if valid_603712 != nil:
    section.add "X-Amz-Signature", valid_603712
  var valid_603713 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603713 = validateParameter(valid_603713, JString, required = false,
                                 default = nil)
  if valid_603713 != nil:
    section.add "X-Amz-SignedHeaders", valid_603713
  var valid_603714 = header.getOrDefault("X-Amz-Credential")
  valid_603714 = validateParameter(valid_603714, JString, required = false,
                                 default = nil)
  if valid_603714 != nil:
    section.add "X-Amz-Credential", valid_603714
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603715: Call_GetDescribeStackResourceDrifts_603699; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_603715.validator(path, query, header, formData, body)
  let scheme = call_603715.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603715.url(scheme.get, call_603715.host, call_603715.base,
                         call_603715.route, valid.getOrDefault("path"))
  result = hook(call_603715, url, valid)

proc call*(call_603716: Call_GetDescribeStackResourceDrifts_603699;
          StackName: string; StackResourceDriftStatusFilters: JsonNode = nil;
          NextToken: string = ""; Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  var query_603717 = newJObject()
  if StackResourceDriftStatusFilters != nil:
    query_603717.add "StackResourceDriftStatusFilters",
                    StackResourceDriftStatusFilters
  add(query_603717, "NextToken", newJString(NextToken))
  add(query_603717, "Action", newJString(Action))
  add(query_603717, "Version", newJString(Version))
  add(query_603717, "MaxResults", newJInt(MaxResults))
  add(query_603717, "StackName", newJString(StackName))
  result = call_603716.call(nil, query_603717, nil, nil, nil)

var getDescribeStackResourceDrifts* = Call_GetDescribeStackResourceDrifts_603699(
    name: "getDescribeStackResourceDrifts", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_GetDescribeStackResourceDrifts_603700, base: "/",
    url: url_GetDescribeStackResourceDrifts_603701,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResources_603756 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackResources_603758(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackResources_603757(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603759 = query.getOrDefault("Action")
  valid_603759 = validateParameter(valid_603759, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_603759 != nil:
    section.add "Action", valid_603759
  var valid_603760 = query.getOrDefault("Version")
  valid_603760 = validateParameter(valid_603760, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603760 != nil:
    section.add "Version", valid_603760
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603761 = header.getOrDefault("X-Amz-Date")
  valid_603761 = validateParameter(valid_603761, JString, required = false,
                                 default = nil)
  if valid_603761 != nil:
    section.add "X-Amz-Date", valid_603761
  var valid_603762 = header.getOrDefault("X-Amz-Security-Token")
  valid_603762 = validateParameter(valid_603762, JString, required = false,
                                 default = nil)
  if valid_603762 != nil:
    section.add "X-Amz-Security-Token", valid_603762
  var valid_603763 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603763 = validateParameter(valid_603763, JString, required = false,
                                 default = nil)
  if valid_603763 != nil:
    section.add "X-Amz-Content-Sha256", valid_603763
  var valid_603764 = header.getOrDefault("X-Amz-Algorithm")
  valid_603764 = validateParameter(valid_603764, JString, required = false,
                                 default = nil)
  if valid_603764 != nil:
    section.add "X-Amz-Algorithm", valid_603764
  var valid_603765 = header.getOrDefault("X-Amz-Signature")
  valid_603765 = validateParameter(valid_603765, JString, required = false,
                                 default = nil)
  if valid_603765 != nil:
    section.add "X-Amz-Signature", valid_603765
  var valid_603766 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603766 = validateParameter(valid_603766, JString, required = false,
                                 default = nil)
  if valid_603766 != nil:
    section.add "X-Amz-SignedHeaders", valid_603766
  var valid_603767 = header.getOrDefault("X-Amz-Credential")
  valid_603767 = validateParameter(valid_603767, JString, required = false,
                                 default = nil)
  if valid_603767 != nil:
    section.add "X-Amz-Credential", valid_603767
  result.add "header", section
  ## parameters in `formData` object:
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  section = newJObject()
  var valid_603768 = formData.getOrDefault("PhysicalResourceId")
  valid_603768 = validateParameter(valid_603768, JString, required = false,
                                 default = nil)
  if valid_603768 != nil:
    section.add "PhysicalResourceId", valid_603768
  var valid_603769 = formData.getOrDefault("LogicalResourceId")
  valid_603769 = validateParameter(valid_603769, JString, required = false,
                                 default = nil)
  if valid_603769 != nil:
    section.add "LogicalResourceId", valid_603769
  var valid_603770 = formData.getOrDefault("StackName")
  valid_603770 = validateParameter(valid_603770, JString, required = false,
                                 default = nil)
  if valid_603770 != nil:
    section.add "StackName", valid_603770
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603771: Call_PostDescribeStackResources_603756; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_603771.validator(path, query, header, formData, body)
  let scheme = call_603771.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603771.url(scheme.get, call_603771.host, call_603771.base,
                         call_603771.route, valid.getOrDefault("path"))
  result = hook(call_603771, url, valid)

proc call*(call_603772: Call_PostDescribeStackResources_603756;
          PhysicalResourceId: string = ""; LogicalResourceId: string = "";
          Action: string = "DescribeStackResources"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   Version: string (required)
  var query_603773 = newJObject()
  var formData_603774 = newJObject()
  add(formData_603774, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(formData_603774, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_603773, "Action", newJString(Action))
  add(formData_603774, "StackName", newJString(StackName))
  add(query_603773, "Version", newJString(Version))
  result = call_603772.call(nil, query_603773, nil, formData_603774, nil)

var postDescribeStackResources* = Call_PostDescribeStackResources_603756(
    name: "postDescribeStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_PostDescribeStackResources_603757, base: "/",
    url: url_PostDescribeStackResources_603758,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResources_603738 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackResources_603740(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackResources_603739(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  section = newJObject()
  var valid_603741 = query.getOrDefault("LogicalResourceId")
  valid_603741 = validateParameter(valid_603741, JString, required = false,
                                 default = nil)
  if valid_603741 != nil:
    section.add "LogicalResourceId", valid_603741
  var valid_603742 = query.getOrDefault("PhysicalResourceId")
  valid_603742 = validateParameter(valid_603742, JString, required = false,
                                 default = nil)
  if valid_603742 != nil:
    section.add "PhysicalResourceId", valid_603742
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603743 = query.getOrDefault("Action")
  valid_603743 = validateParameter(valid_603743, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_603743 != nil:
    section.add "Action", valid_603743
  var valid_603744 = query.getOrDefault("Version")
  valid_603744 = validateParameter(valid_603744, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603744 != nil:
    section.add "Version", valid_603744
  var valid_603745 = query.getOrDefault("StackName")
  valid_603745 = validateParameter(valid_603745, JString, required = false,
                                 default = nil)
  if valid_603745 != nil:
    section.add "StackName", valid_603745
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603746 = header.getOrDefault("X-Amz-Date")
  valid_603746 = validateParameter(valid_603746, JString, required = false,
                                 default = nil)
  if valid_603746 != nil:
    section.add "X-Amz-Date", valid_603746
  var valid_603747 = header.getOrDefault("X-Amz-Security-Token")
  valid_603747 = validateParameter(valid_603747, JString, required = false,
                                 default = nil)
  if valid_603747 != nil:
    section.add "X-Amz-Security-Token", valid_603747
  var valid_603748 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603748 = validateParameter(valid_603748, JString, required = false,
                                 default = nil)
  if valid_603748 != nil:
    section.add "X-Amz-Content-Sha256", valid_603748
  var valid_603749 = header.getOrDefault("X-Amz-Algorithm")
  valid_603749 = validateParameter(valid_603749, JString, required = false,
                                 default = nil)
  if valid_603749 != nil:
    section.add "X-Amz-Algorithm", valid_603749
  var valid_603750 = header.getOrDefault("X-Amz-Signature")
  valid_603750 = validateParameter(valid_603750, JString, required = false,
                                 default = nil)
  if valid_603750 != nil:
    section.add "X-Amz-Signature", valid_603750
  var valid_603751 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603751 = validateParameter(valid_603751, JString, required = false,
                                 default = nil)
  if valid_603751 != nil:
    section.add "X-Amz-SignedHeaders", valid_603751
  var valid_603752 = header.getOrDefault("X-Amz-Credential")
  valid_603752 = validateParameter(valid_603752, JString, required = false,
                                 default = nil)
  if valid_603752 != nil:
    section.add "X-Amz-Credential", valid_603752
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603753: Call_GetDescribeStackResources_603738; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_603753.validator(path, query, header, formData, body)
  let scheme = call_603753.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603753.url(scheme.get, call_603753.host, call_603753.base,
                         call_603753.route, valid.getOrDefault("path"))
  result = hook(call_603753, url, valid)

proc call*(call_603754: Call_GetDescribeStackResources_603738;
          LogicalResourceId: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  var query_603755 = newJObject()
  add(query_603755, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_603755, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_603755, "Action", newJString(Action))
  add(query_603755, "Version", newJString(Version))
  add(query_603755, "StackName", newJString(StackName))
  result = call_603754.call(nil, query_603755, nil, nil, nil)

var getDescribeStackResources* = Call_GetDescribeStackResources_603738(
    name: "getDescribeStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_GetDescribeStackResources_603739, base: "/",
    url: url_GetDescribeStackResources_603740,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSet_603791 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackSet_603793(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackSet_603792(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603794 = query.getOrDefault("Action")
  valid_603794 = validateParameter(valid_603794, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_603794 != nil:
    section.add "Action", valid_603794
  var valid_603795 = query.getOrDefault("Version")
  valid_603795 = validateParameter(valid_603795, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603795 != nil:
    section.add "Version", valid_603795
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603796 = header.getOrDefault("X-Amz-Date")
  valid_603796 = validateParameter(valid_603796, JString, required = false,
                                 default = nil)
  if valid_603796 != nil:
    section.add "X-Amz-Date", valid_603796
  var valid_603797 = header.getOrDefault("X-Amz-Security-Token")
  valid_603797 = validateParameter(valid_603797, JString, required = false,
                                 default = nil)
  if valid_603797 != nil:
    section.add "X-Amz-Security-Token", valid_603797
  var valid_603798 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603798 = validateParameter(valid_603798, JString, required = false,
                                 default = nil)
  if valid_603798 != nil:
    section.add "X-Amz-Content-Sha256", valid_603798
  var valid_603799 = header.getOrDefault("X-Amz-Algorithm")
  valid_603799 = validateParameter(valid_603799, JString, required = false,
                                 default = nil)
  if valid_603799 != nil:
    section.add "X-Amz-Algorithm", valid_603799
  var valid_603800 = header.getOrDefault("X-Amz-Signature")
  valid_603800 = validateParameter(valid_603800, JString, required = false,
                                 default = nil)
  if valid_603800 != nil:
    section.add "X-Amz-Signature", valid_603800
  var valid_603801 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603801 = validateParameter(valid_603801, JString, required = false,
                                 default = nil)
  if valid_603801 != nil:
    section.add "X-Amz-SignedHeaders", valid_603801
  var valid_603802 = header.getOrDefault("X-Amz-Credential")
  valid_603802 = validateParameter(valid_603802, JString, required = false,
                                 default = nil)
  if valid_603802 != nil:
    section.add "X-Amz-Credential", valid_603802
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603803 = formData.getOrDefault("StackSetName")
  valid_603803 = validateParameter(valid_603803, JString, required = true,
                                 default = nil)
  if valid_603803 != nil:
    section.add "StackSetName", valid_603803
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603804: Call_PostDescribeStackSet_603791; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_603804.validator(path, query, header, formData, body)
  let scheme = call_603804.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603804.url(scheme.get, call_603804.host, call_603804.base,
                         call_603804.route, valid.getOrDefault("path"))
  result = hook(call_603804, url, valid)

proc call*(call_603805: Call_PostDescribeStackSet_603791; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603806 = newJObject()
  var formData_603807 = newJObject()
  add(formData_603807, "StackSetName", newJString(StackSetName))
  add(query_603806, "Action", newJString(Action))
  add(query_603806, "Version", newJString(Version))
  result = call_603805.call(nil, query_603806, nil, formData_603807, nil)

var postDescribeStackSet* = Call_PostDescribeStackSet_603791(
    name: "postDescribeStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_PostDescribeStackSet_603792, base: "/",
    url: url_PostDescribeStackSet_603793, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSet_603775 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackSet_603777(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackSet_603776(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603778 = query.getOrDefault("Action")
  valid_603778 = validateParameter(valid_603778, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_603778 != nil:
    section.add "Action", valid_603778
  var valid_603779 = query.getOrDefault("StackSetName")
  valid_603779 = validateParameter(valid_603779, JString, required = true,
                                 default = nil)
  if valid_603779 != nil:
    section.add "StackSetName", valid_603779
  var valid_603780 = query.getOrDefault("Version")
  valid_603780 = validateParameter(valid_603780, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603780 != nil:
    section.add "Version", valid_603780
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603781 = header.getOrDefault("X-Amz-Date")
  valid_603781 = validateParameter(valid_603781, JString, required = false,
                                 default = nil)
  if valid_603781 != nil:
    section.add "X-Amz-Date", valid_603781
  var valid_603782 = header.getOrDefault("X-Amz-Security-Token")
  valid_603782 = validateParameter(valid_603782, JString, required = false,
                                 default = nil)
  if valid_603782 != nil:
    section.add "X-Amz-Security-Token", valid_603782
  var valid_603783 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603783 = validateParameter(valid_603783, JString, required = false,
                                 default = nil)
  if valid_603783 != nil:
    section.add "X-Amz-Content-Sha256", valid_603783
  var valid_603784 = header.getOrDefault("X-Amz-Algorithm")
  valid_603784 = validateParameter(valid_603784, JString, required = false,
                                 default = nil)
  if valid_603784 != nil:
    section.add "X-Amz-Algorithm", valid_603784
  var valid_603785 = header.getOrDefault("X-Amz-Signature")
  valid_603785 = validateParameter(valid_603785, JString, required = false,
                                 default = nil)
  if valid_603785 != nil:
    section.add "X-Amz-Signature", valid_603785
  var valid_603786 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603786 = validateParameter(valid_603786, JString, required = false,
                                 default = nil)
  if valid_603786 != nil:
    section.add "X-Amz-SignedHeaders", valid_603786
  var valid_603787 = header.getOrDefault("X-Amz-Credential")
  valid_603787 = validateParameter(valid_603787, JString, required = false,
                                 default = nil)
  if valid_603787 != nil:
    section.add "X-Amz-Credential", valid_603787
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603788: Call_GetDescribeStackSet_603775; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_603788.validator(path, query, header, formData, body)
  let scheme = call_603788.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603788.url(scheme.get, call_603788.host, call_603788.base,
                         call_603788.route, valid.getOrDefault("path"))
  result = hook(call_603788, url, valid)

proc call*(call_603789: Call_GetDescribeStackSet_603775; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Version: string (required)
  var query_603790 = newJObject()
  add(query_603790, "Action", newJString(Action))
  add(query_603790, "StackSetName", newJString(StackSetName))
  add(query_603790, "Version", newJString(Version))
  result = call_603789.call(nil, query_603790, nil, nil, nil)

var getDescribeStackSet* = Call_GetDescribeStackSet_603775(
    name: "getDescribeStackSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_GetDescribeStackSet_603776, base: "/",
    url: url_GetDescribeStackSet_603777, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSetOperation_603825 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStackSetOperation_603827(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStackSetOperation_603826(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603828 = query.getOrDefault("Action")
  valid_603828 = validateParameter(valid_603828, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_603828 != nil:
    section.add "Action", valid_603828
  var valid_603829 = query.getOrDefault("Version")
  valid_603829 = validateParameter(valid_603829, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603829 != nil:
    section.add "Version", valid_603829
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603830 = header.getOrDefault("X-Amz-Date")
  valid_603830 = validateParameter(valid_603830, JString, required = false,
                                 default = nil)
  if valid_603830 != nil:
    section.add "X-Amz-Date", valid_603830
  var valid_603831 = header.getOrDefault("X-Amz-Security-Token")
  valid_603831 = validateParameter(valid_603831, JString, required = false,
                                 default = nil)
  if valid_603831 != nil:
    section.add "X-Amz-Security-Token", valid_603831
  var valid_603832 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603832 = validateParameter(valid_603832, JString, required = false,
                                 default = nil)
  if valid_603832 != nil:
    section.add "X-Amz-Content-Sha256", valid_603832
  var valid_603833 = header.getOrDefault("X-Amz-Algorithm")
  valid_603833 = validateParameter(valid_603833, JString, required = false,
                                 default = nil)
  if valid_603833 != nil:
    section.add "X-Amz-Algorithm", valid_603833
  var valid_603834 = header.getOrDefault("X-Amz-Signature")
  valid_603834 = validateParameter(valid_603834, JString, required = false,
                                 default = nil)
  if valid_603834 != nil:
    section.add "X-Amz-Signature", valid_603834
  var valid_603835 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603835 = validateParameter(valid_603835, JString, required = false,
                                 default = nil)
  if valid_603835 != nil:
    section.add "X-Amz-SignedHeaders", valid_603835
  var valid_603836 = header.getOrDefault("X-Amz-Credential")
  valid_603836 = validateParameter(valid_603836, JString, required = false,
                                 default = nil)
  if valid_603836 != nil:
    section.add "X-Amz-Credential", valid_603836
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603837 = formData.getOrDefault("StackSetName")
  valid_603837 = validateParameter(valid_603837, JString, required = true,
                                 default = nil)
  if valid_603837 != nil:
    section.add "StackSetName", valid_603837
  var valid_603838 = formData.getOrDefault("OperationId")
  valid_603838 = validateParameter(valid_603838, JString, required = true,
                                 default = nil)
  if valid_603838 != nil:
    section.add "OperationId", valid_603838
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603839: Call_PostDescribeStackSetOperation_603825; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_603839.validator(path, query, header, formData, body)
  let scheme = call_603839.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603839.url(scheme.get, call_603839.host, call_603839.base,
                         call_603839.route, valid.getOrDefault("path"))
  result = hook(call_603839, url, valid)

proc call*(call_603840: Call_PostDescribeStackSetOperation_603825;
          StackSetName: string; OperationId: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   Version: string (required)
  var query_603841 = newJObject()
  var formData_603842 = newJObject()
  add(formData_603842, "StackSetName", newJString(StackSetName))
  add(query_603841, "Action", newJString(Action))
  add(formData_603842, "OperationId", newJString(OperationId))
  add(query_603841, "Version", newJString(Version))
  result = call_603840.call(nil, query_603841, nil, formData_603842, nil)

var postDescribeStackSetOperation* = Call_PostDescribeStackSetOperation_603825(
    name: "postDescribeStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_PostDescribeStackSetOperation_603826, base: "/",
    url: url_PostDescribeStackSetOperation_603827,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSetOperation_603808 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStackSetOperation_603810(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStackSetOperation_603809(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603811 = query.getOrDefault("Action")
  valid_603811 = validateParameter(valid_603811, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_603811 != nil:
    section.add "Action", valid_603811
  var valid_603812 = query.getOrDefault("StackSetName")
  valid_603812 = validateParameter(valid_603812, JString, required = true,
                                 default = nil)
  if valid_603812 != nil:
    section.add "StackSetName", valid_603812
  var valid_603813 = query.getOrDefault("OperationId")
  valid_603813 = validateParameter(valid_603813, JString, required = true,
                                 default = nil)
  if valid_603813 != nil:
    section.add "OperationId", valid_603813
  var valid_603814 = query.getOrDefault("Version")
  valid_603814 = validateParameter(valid_603814, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603814 != nil:
    section.add "Version", valid_603814
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603815 = header.getOrDefault("X-Amz-Date")
  valid_603815 = validateParameter(valid_603815, JString, required = false,
                                 default = nil)
  if valid_603815 != nil:
    section.add "X-Amz-Date", valid_603815
  var valid_603816 = header.getOrDefault("X-Amz-Security-Token")
  valid_603816 = validateParameter(valid_603816, JString, required = false,
                                 default = nil)
  if valid_603816 != nil:
    section.add "X-Amz-Security-Token", valid_603816
  var valid_603817 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603817 = validateParameter(valid_603817, JString, required = false,
                                 default = nil)
  if valid_603817 != nil:
    section.add "X-Amz-Content-Sha256", valid_603817
  var valid_603818 = header.getOrDefault("X-Amz-Algorithm")
  valid_603818 = validateParameter(valid_603818, JString, required = false,
                                 default = nil)
  if valid_603818 != nil:
    section.add "X-Amz-Algorithm", valid_603818
  var valid_603819 = header.getOrDefault("X-Amz-Signature")
  valid_603819 = validateParameter(valid_603819, JString, required = false,
                                 default = nil)
  if valid_603819 != nil:
    section.add "X-Amz-Signature", valid_603819
  var valid_603820 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603820 = validateParameter(valid_603820, JString, required = false,
                                 default = nil)
  if valid_603820 != nil:
    section.add "X-Amz-SignedHeaders", valid_603820
  var valid_603821 = header.getOrDefault("X-Amz-Credential")
  valid_603821 = validateParameter(valid_603821, JString, required = false,
                                 default = nil)
  if valid_603821 != nil:
    section.add "X-Amz-Credential", valid_603821
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603822: Call_GetDescribeStackSetOperation_603808; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_603822.validator(path, query, header, formData, body)
  let scheme = call_603822.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603822.url(scheme.get, call_603822.host, call_603822.base,
                         call_603822.route, valid.getOrDefault("path"))
  result = hook(call_603822, url, valid)

proc call*(call_603823: Call_GetDescribeStackSetOperation_603808;
          StackSetName: string; OperationId: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   Version: string (required)
  var query_603824 = newJObject()
  add(query_603824, "Action", newJString(Action))
  add(query_603824, "StackSetName", newJString(StackSetName))
  add(query_603824, "OperationId", newJString(OperationId))
  add(query_603824, "Version", newJString(Version))
  result = call_603823.call(nil, query_603824, nil, nil, nil)

var getDescribeStackSetOperation* = Call_GetDescribeStackSetOperation_603808(
    name: "getDescribeStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_GetDescribeStackSetOperation_603809, base: "/",
    url: url_GetDescribeStackSetOperation_603810,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStacks_603860 = ref object of OpenApiRestCall_602433
proc url_PostDescribeStacks_603862(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDescribeStacks_603861(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603863 = query.getOrDefault("Action")
  valid_603863 = validateParameter(valid_603863, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_603863 != nil:
    section.add "Action", valid_603863
  var valid_603864 = query.getOrDefault("Version")
  valid_603864 = validateParameter(valid_603864, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603864 != nil:
    section.add "Version", valid_603864
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603865 = header.getOrDefault("X-Amz-Date")
  valid_603865 = validateParameter(valid_603865, JString, required = false,
                                 default = nil)
  if valid_603865 != nil:
    section.add "X-Amz-Date", valid_603865
  var valid_603866 = header.getOrDefault("X-Amz-Security-Token")
  valid_603866 = validateParameter(valid_603866, JString, required = false,
                                 default = nil)
  if valid_603866 != nil:
    section.add "X-Amz-Security-Token", valid_603866
  var valid_603867 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603867 = validateParameter(valid_603867, JString, required = false,
                                 default = nil)
  if valid_603867 != nil:
    section.add "X-Amz-Content-Sha256", valid_603867
  var valid_603868 = header.getOrDefault("X-Amz-Algorithm")
  valid_603868 = validateParameter(valid_603868, JString, required = false,
                                 default = nil)
  if valid_603868 != nil:
    section.add "X-Amz-Algorithm", valid_603868
  var valid_603869 = header.getOrDefault("X-Amz-Signature")
  valid_603869 = validateParameter(valid_603869, JString, required = false,
                                 default = nil)
  if valid_603869 != nil:
    section.add "X-Amz-Signature", valid_603869
  var valid_603870 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603870 = validateParameter(valid_603870, JString, required = false,
                                 default = nil)
  if valid_603870 != nil:
    section.add "X-Amz-SignedHeaders", valid_603870
  var valid_603871 = header.getOrDefault("X-Amz-Credential")
  valid_603871 = validateParameter(valid_603871, JString, required = false,
                                 default = nil)
  if valid_603871 != nil:
    section.add "X-Amz-Credential", valid_603871
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_603872 = formData.getOrDefault("NextToken")
  valid_603872 = validateParameter(valid_603872, JString, required = false,
                                 default = nil)
  if valid_603872 != nil:
    section.add "NextToken", valid_603872
  var valid_603873 = formData.getOrDefault("StackName")
  valid_603873 = validateParameter(valid_603873, JString, required = false,
                                 default = nil)
  if valid_603873 != nil:
    section.add "StackName", valid_603873
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603874: Call_PostDescribeStacks_603860; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_603874.validator(path, query, header, formData, body)
  let scheme = call_603874.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603874.url(scheme.get, call_603874.host, call_603874.base,
                         call_603874.route, valid.getOrDefault("path"))
  result = hook(call_603874, url, valid)

proc call*(call_603875: Call_PostDescribeStacks_603860; NextToken: string = "";
          Action: string = "DescribeStacks"; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_603876 = newJObject()
  var formData_603877 = newJObject()
  add(formData_603877, "NextToken", newJString(NextToken))
  add(query_603876, "Action", newJString(Action))
  add(formData_603877, "StackName", newJString(StackName))
  add(query_603876, "Version", newJString(Version))
  result = call_603875.call(nil, query_603876, nil, formData_603877, nil)

var postDescribeStacks* = Call_PostDescribeStacks_603860(
    name: "postDescribeStacks", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStacks",
    validator: validate_PostDescribeStacks_603861, base: "/",
    url: url_PostDescribeStacks_603862, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStacks_603843 = ref object of OpenApiRestCall_602433
proc url_GetDescribeStacks_603845(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDescribeStacks_603844(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_603846 = query.getOrDefault("NextToken")
  valid_603846 = validateParameter(valid_603846, JString, required = false,
                                 default = nil)
  if valid_603846 != nil:
    section.add "NextToken", valid_603846
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603847 = query.getOrDefault("Action")
  valid_603847 = validateParameter(valid_603847, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_603847 != nil:
    section.add "Action", valid_603847
  var valid_603848 = query.getOrDefault("Version")
  valid_603848 = validateParameter(valid_603848, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603848 != nil:
    section.add "Version", valid_603848
  var valid_603849 = query.getOrDefault("StackName")
  valid_603849 = validateParameter(valid_603849, JString, required = false,
                                 default = nil)
  if valid_603849 != nil:
    section.add "StackName", valid_603849
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603850 = header.getOrDefault("X-Amz-Date")
  valid_603850 = validateParameter(valid_603850, JString, required = false,
                                 default = nil)
  if valid_603850 != nil:
    section.add "X-Amz-Date", valid_603850
  var valid_603851 = header.getOrDefault("X-Amz-Security-Token")
  valid_603851 = validateParameter(valid_603851, JString, required = false,
                                 default = nil)
  if valid_603851 != nil:
    section.add "X-Amz-Security-Token", valid_603851
  var valid_603852 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603852 = validateParameter(valid_603852, JString, required = false,
                                 default = nil)
  if valid_603852 != nil:
    section.add "X-Amz-Content-Sha256", valid_603852
  var valid_603853 = header.getOrDefault("X-Amz-Algorithm")
  valid_603853 = validateParameter(valid_603853, JString, required = false,
                                 default = nil)
  if valid_603853 != nil:
    section.add "X-Amz-Algorithm", valid_603853
  var valid_603854 = header.getOrDefault("X-Amz-Signature")
  valid_603854 = validateParameter(valid_603854, JString, required = false,
                                 default = nil)
  if valid_603854 != nil:
    section.add "X-Amz-Signature", valid_603854
  var valid_603855 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603855 = validateParameter(valid_603855, JString, required = false,
                                 default = nil)
  if valid_603855 != nil:
    section.add "X-Amz-SignedHeaders", valid_603855
  var valid_603856 = header.getOrDefault("X-Amz-Credential")
  valid_603856 = validateParameter(valid_603856, JString, required = false,
                                 default = nil)
  if valid_603856 != nil:
    section.add "X-Amz-Credential", valid_603856
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603857: Call_GetDescribeStacks_603843; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_603857.validator(path, query, header, formData, body)
  let scheme = call_603857.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603857.url(scheme.get, call_603857.host, call_603857.base,
                         call_603857.route, valid.getOrDefault("path"))
  result = hook(call_603857, url, valid)

proc call*(call_603858: Call_GetDescribeStacks_603843; NextToken: string = "";
          Action: string = "DescribeStacks"; Version: string = "2010-05-15";
          StackName: string = ""): Recallable =
  ## getDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_603859 = newJObject()
  add(query_603859, "NextToken", newJString(NextToken))
  add(query_603859, "Action", newJString(Action))
  add(query_603859, "Version", newJString(Version))
  add(query_603859, "StackName", newJString(StackName))
  result = call_603858.call(nil, query_603859, nil, nil, nil)

var getDescribeStacks* = Call_GetDescribeStacks_603843(name: "getDescribeStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStacks", validator: validate_GetDescribeStacks_603844,
    base: "/", url: url_GetDescribeStacks_603845,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackDrift_603895 = ref object of OpenApiRestCall_602433
proc url_PostDetectStackDrift_603897(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDetectStackDrift_603896(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603898 = query.getOrDefault("Action")
  valid_603898 = validateParameter(valid_603898, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_603898 != nil:
    section.add "Action", valid_603898
  var valid_603899 = query.getOrDefault("Version")
  valid_603899 = validateParameter(valid_603899, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603899 != nil:
    section.add "Version", valid_603899
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603900 = header.getOrDefault("X-Amz-Date")
  valid_603900 = validateParameter(valid_603900, JString, required = false,
                                 default = nil)
  if valid_603900 != nil:
    section.add "X-Amz-Date", valid_603900
  var valid_603901 = header.getOrDefault("X-Amz-Security-Token")
  valid_603901 = validateParameter(valid_603901, JString, required = false,
                                 default = nil)
  if valid_603901 != nil:
    section.add "X-Amz-Security-Token", valid_603901
  var valid_603902 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603902 = validateParameter(valid_603902, JString, required = false,
                                 default = nil)
  if valid_603902 != nil:
    section.add "X-Amz-Content-Sha256", valid_603902
  var valid_603903 = header.getOrDefault("X-Amz-Algorithm")
  valid_603903 = validateParameter(valid_603903, JString, required = false,
                                 default = nil)
  if valid_603903 != nil:
    section.add "X-Amz-Algorithm", valid_603903
  var valid_603904 = header.getOrDefault("X-Amz-Signature")
  valid_603904 = validateParameter(valid_603904, JString, required = false,
                                 default = nil)
  if valid_603904 != nil:
    section.add "X-Amz-Signature", valid_603904
  var valid_603905 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603905 = validateParameter(valid_603905, JString, required = false,
                                 default = nil)
  if valid_603905 != nil:
    section.add "X-Amz-SignedHeaders", valid_603905
  var valid_603906 = header.getOrDefault("X-Amz-Credential")
  valid_603906 = validateParameter(valid_603906, JString, required = false,
                                 default = nil)
  if valid_603906 != nil:
    section.add "X-Amz-Credential", valid_603906
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  section = newJObject()
  var valid_603907 = formData.getOrDefault("LogicalResourceIds")
  valid_603907 = validateParameter(valid_603907, JArray, required = false,
                                 default = nil)
  if valid_603907 != nil:
    section.add "LogicalResourceIds", valid_603907
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603908 = formData.getOrDefault("StackName")
  valid_603908 = validateParameter(valid_603908, JString, required = true,
                                 default = nil)
  if valid_603908 != nil:
    section.add "StackName", valid_603908
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603909: Call_PostDetectStackDrift_603895; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_603909.validator(path, query, header, formData, body)
  let scheme = call_603909.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603909.url(scheme.get, call_603909.host, call_603909.base,
                         call_603909.route, valid.getOrDefault("path"))
  result = hook(call_603909, url, valid)

proc call*(call_603910: Call_PostDetectStackDrift_603895; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Version: string (required)
  var query_603911 = newJObject()
  var formData_603912 = newJObject()
  if LogicalResourceIds != nil:
    formData_603912.add "LogicalResourceIds", LogicalResourceIds
  add(query_603911, "Action", newJString(Action))
  add(formData_603912, "StackName", newJString(StackName))
  add(query_603911, "Version", newJString(Version))
  result = call_603910.call(nil, query_603911, nil, formData_603912, nil)

var postDetectStackDrift* = Call_PostDetectStackDrift_603895(
    name: "postDetectStackDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_PostDetectStackDrift_603896, base: "/",
    url: url_PostDetectStackDrift_603897, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackDrift_603878 = ref object of OpenApiRestCall_602433
proc url_GetDetectStackDrift_603880(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDetectStackDrift_603879(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  section = newJObject()
  var valid_603881 = query.getOrDefault("LogicalResourceIds")
  valid_603881 = validateParameter(valid_603881, JArray, required = false,
                                 default = nil)
  if valid_603881 != nil:
    section.add "LogicalResourceIds", valid_603881
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603882 = query.getOrDefault("Action")
  valid_603882 = validateParameter(valid_603882, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_603882 != nil:
    section.add "Action", valid_603882
  var valid_603883 = query.getOrDefault("Version")
  valid_603883 = validateParameter(valid_603883, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603883 != nil:
    section.add "Version", valid_603883
  var valid_603884 = query.getOrDefault("StackName")
  valid_603884 = validateParameter(valid_603884, JString, required = true,
                                 default = nil)
  if valid_603884 != nil:
    section.add "StackName", valid_603884
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603885 = header.getOrDefault("X-Amz-Date")
  valid_603885 = validateParameter(valid_603885, JString, required = false,
                                 default = nil)
  if valid_603885 != nil:
    section.add "X-Amz-Date", valid_603885
  var valid_603886 = header.getOrDefault("X-Amz-Security-Token")
  valid_603886 = validateParameter(valid_603886, JString, required = false,
                                 default = nil)
  if valid_603886 != nil:
    section.add "X-Amz-Security-Token", valid_603886
  var valid_603887 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603887 = validateParameter(valid_603887, JString, required = false,
                                 default = nil)
  if valid_603887 != nil:
    section.add "X-Amz-Content-Sha256", valid_603887
  var valid_603888 = header.getOrDefault("X-Amz-Algorithm")
  valid_603888 = validateParameter(valid_603888, JString, required = false,
                                 default = nil)
  if valid_603888 != nil:
    section.add "X-Amz-Algorithm", valid_603888
  var valid_603889 = header.getOrDefault("X-Amz-Signature")
  valid_603889 = validateParameter(valid_603889, JString, required = false,
                                 default = nil)
  if valid_603889 != nil:
    section.add "X-Amz-Signature", valid_603889
  var valid_603890 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603890 = validateParameter(valid_603890, JString, required = false,
                                 default = nil)
  if valid_603890 != nil:
    section.add "X-Amz-SignedHeaders", valid_603890
  var valid_603891 = header.getOrDefault("X-Amz-Credential")
  valid_603891 = validateParameter(valid_603891, JString, required = false,
                                 default = nil)
  if valid_603891 != nil:
    section.add "X-Amz-Credential", valid_603891
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603892: Call_GetDetectStackDrift_603878; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_603892.validator(path, query, header, formData, body)
  let scheme = call_603892.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603892.url(scheme.get, call_603892.host, call_603892.base,
                         call_603892.route, valid.getOrDefault("path"))
  result = hook(call_603892, url, valid)

proc call*(call_603893: Call_GetDetectStackDrift_603878; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  var query_603894 = newJObject()
  if LogicalResourceIds != nil:
    query_603894.add "LogicalResourceIds", LogicalResourceIds
  add(query_603894, "Action", newJString(Action))
  add(query_603894, "Version", newJString(Version))
  add(query_603894, "StackName", newJString(StackName))
  result = call_603893.call(nil, query_603894, nil, nil, nil)

var getDetectStackDrift* = Call_GetDetectStackDrift_603878(
    name: "getDetectStackDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_GetDetectStackDrift_603879, base: "/",
    url: url_GetDetectStackDrift_603880, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackResourceDrift_603930 = ref object of OpenApiRestCall_602433
proc url_PostDetectStackResourceDrift_603932(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostDetectStackResourceDrift_603931(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603933 = query.getOrDefault("Action")
  valid_603933 = validateParameter(valid_603933, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_603933 != nil:
    section.add "Action", valid_603933
  var valid_603934 = query.getOrDefault("Version")
  valid_603934 = validateParameter(valid_603934, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603934 != nil:
    section.add "Version", valid_603934
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603935 = header.getOrDefault("X-Amz-Date")
  valid_603935 = validateParameter(valid_603935, JString, required = false,
                                 default = nil)
  if valid_603935 != nil:
    section.add "X-Amz-Date", valid_603935
  var valid_603936 = header.getOrDefault("X-Amz-Security-Token")
  valid_603936 = validateParameter(valid_603936, JString, required = false,
                                 default = nil)
  if valid_603936 != nil:
    section.add "X-Amz-Security-Token", valid_603936
  var valid_603937 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603937 = validateParameter(valid_603937, JString, required = false,
                                 default = nil)
  if valid_603937 != nil:
    section.add "X-Amz-Content-Sha256", valid_603937
  var valid_603938 = header.getOrDefault("X-Amz-Algorithm")
  valid_603938 = validateParameter(valid_603938, JString, required = false,
                                 default = nil)
  if valid_603938 != nil:
    section.add "X-Amz-Algorithm", valid_603938
  var valid_603939 = header.getOrDefault("X-Amz-Signature")
  valid_603939 = validateParameter(valid_603939, JString, required = false,
                                 default = nil)
  if valid_603939 != nil:
    section.add "X-Amz-Signature", valid_603939
  var valid_603940 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603940 = validateParameter(valid_603940, JString, required = false,
                                 default = nil)
  if valid_603940 != nil:
    section.add "X-Amz-SignedHeaders", valid_603940
  var valid_603941 = header.getOrDefault("X-Amz-Credential")
  valid_603941 = validateParameter(valid_603941, JString, required = false,
                                 default = nil)
  if valid_603941 != nil:
    section.add "X-Amz-Credential", valid_603941
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `LogicalResourceId` field"
  var valid_603942 = formData.getOrDefault("LogicalResourceId")
  valid_603942 = validateParameter(valid_603942, JString, required = true,
                                 default = nil)
  if valid_603942 != nil:
    section.add "LogicalResourceId", valid_603942
  var valid_603943 = formData.getOrDefault("StackName")
  valid_603943 = validateParameter(valid_603943, JString, required = true,
                                 default = nil)
  if valid_603943 != nil:
    section.add "StackName", valid_603943
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603944: Call_PostDetectStackResourceDrift_603930; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_603944.validator(path, query, header, formData, body)
  let scheme = call_603944.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603944.url(scheme.get, call_603944.host, call_603944.base,
                         call_603944.route, valid.getOrDefault("path"))
  result = hook(call_603944, url, valid)

proc call*(call_603945: Call_PostDetectStackResourceDrift_603930;
          LogicalResourceId: string; StackName: string;
          Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Version: string (required)
  var query_603946 = newJObject()
  var formData_603947 = newJObject()
  add(formData_603947, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_603946, "Action", newJString(Action))
  add(formData_603947, "StackName", newJString(StackName))
  add(query_603946, "Version", newJString(Version))
  result = call_603945.call(nil, query_603946, nil, formData_603947, nil)

var postDetectStackResourceDrift* = Call_PostDetectStackResourceDrift_603930(
    name: "postDetectStackResourceDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_PostDetectStackResourceDrift_603931, base: "/",
    url: url_PostDetectStackResourceDrift_603932,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackResourceDrift_603913 = ref object of OpenApiRestCall_602433
proc url_GetDetectStackResourceDrift_603915(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetDetectStackResourceDrift_603914(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `LogicalResourceId` field"
  var valid_603916 = query.getOrDefault("LogicalResourceId")
  valid_603916 = validateParameter(valid_603916, JString, required = true,
                                 default = nil)
  if valid_603916 != nil:
    section.add "LogicalResourceId", valid_603916
  var valid_603917 = query.getOrDefault("Action")
  valid_603917 = validateParameter(valid_603917, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_603917 != nil:
    section.add "Action", valid_603917
  var valid_603918 = query.getOrDefault("Version")
  valid_603918 = validateParameter(valid_603918, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603918 != nil:
    section.add "Version", valid_603918
  var valid_603919 = query.getOrDefault("StackName")
  valid_603919 = validateParameter(valid_603919, JString, required = true,
                                 default = nil)
  if valid_603919 != nil:
    section.add "StackName", valid_603919
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603920 = header.getOrDefault("X-Amz-Date")
  valid_603920 = validateParameter(valid_603920, JString, required = false,
                                 default = nil)
  if valid_603920 != nil:
    section.add "X-Amz-Date", valid_603920
  var valid_603921 = header.getOrDefault("X-Amz-Security-Token")
  valid_603921 = validateParameter(valid_603921, JString, required = false,
                                 default = nil)
  if valid_603921 != nil:
    section.add "X-Amz-Security-Token", valid_603921
  var valid_603922 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603922 = validateParameter(valid_603922, JString, required = false,
                                 default = nil)
  if valid_603922 != nil:
    section.add "X-Amz-Content-Sha256", valid_603922
  var valid_603923 = header.getOrDefault("X-Amz-Algorithm")
  valid_603923 = validateParameter(valid_603923, JString, required = false,
                                 default = nil)
  if valid_603923 != nil:
    section.add "X-Amz-Algorithm", valid_603923
  var valid_603924 = header.getOrDefault("X-Amz-Signature")
  valid_603924 = validateParameter(valid_603924, JString, required = false,
                                 default = nil)
  if valid_603924 != nil:
    section.add "X-Amz-Signature", valid_603924
  var valid_603925 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603925 = validateParameter(valid_603925, JString, required = false,
                                 default = nil)
  if valid_603925 != nil:
    section.add "X-Amz-SignedHeaders", valid_603925
  var valid_603926 = header.getOrDefault("X-Amz-Credential")
  valid_603926 = validateParameter(valid_603926, JString, required = false,
                                 default = nil)
  if valid_603926 != nil:
    section.add "X-Amz-Credential", valid_603926
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603927: Call_GetDetectStackResourceDrift_603913; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_603927.validator(path, query, header, formData, body)
  let scheme = call_603927.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603927.url(scheme.get, call_603927.host, call_603927.base,
                         call_603927.route, valid.getOrDefault("path"))
  result = hook(call_603927, url, valid)

proc call*(call_603928: Call_GetDetectStackResourceDrift_603913;
          LogicalResourceId: string; StackName: string;
          Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  var query_603929 = newJObject()
  add(query_603929, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_603929, "Action", newJString(Action))
  add(query_603929, "Version", newJString(Version))
  add(query_603929, "StackName", newJString(StackName))
  result = call_603928.call(nil, query_603929, nil, nil, nil)

var getDetectStackResourceDrift* = Call_GetDetectStackResourceDrift_603913(
    name: "getDetectStackResourceDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_GetDetectStackResourceDrift_603914, base: "/",
    url: url_GetDetectStackResourceDrift_603915,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostEstimateTemplateCost_603966 = ref object of OpenApiRestCall_602433
proc url_PostEstimateTemplateCost_603968(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostEstimateTemplateCost_603967(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603969 = query.getOrDefault("Action")
  valid_603969 = validateParameter(valid_603969, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_603969 != nil:
    section.add "Action", valid_603969
  var valid_603970 = query.getOrDefault("Version")
  valid_603970 = validateParameter(valid_603970, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603970 != nil:
    section.add "Version", valid_603970
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603971 = header.getOrDefault("X-Amz-Date")
  valid_603971 = validateParameter(valid_603971, JString, required = false,
                                 default = nil)
  if valid_603971 != nil:
    section.add "X-Amz-Date", valid_603971
  var valid_603972 = header.getOrDefault("X-Amz-Security-Token")
  valid_603972 = validateParameter(valid_603972, JString, required = false,
                                 default = nil)
  if valid_603972 != nil:
    section.add "X-Amz-Security-Token", valid_603972
  var valid_603973 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603973 = validateParameter(valid_603973, JString, required = false,
                                 default = nil)
  if valid_603973 != nil:
    section.add "X-Amz-Content-Sha256", valid_603973
  var valid_603974 = header.getOrDefault("X-Amz-Algorithm")
  valid_603974 = validateParameter(valid_603974, JString, required = false,
                                 default = nil)
  if valid_603974 != nil:
    section.add "X-Amz-Algorithm", valid_603974
  var valid_603975 = header.getOrDefault("X-Amz-Signature")
  valid_603975 = validateParameter(valid_603975, JString, required = false,
                                 default = nil)
  if valid_603975 != nil:
    section.add "X-Amz-Signature", valid_603975
  var valid_603976 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603976 = validateParameter(valid_603976, JString, required = false,
                                 default = nil)
  if valid_603976 != nil:
    section.add "X-Amz-SignedHeaders", valid_603976
  var valid_603977 = header.getOrDefault("X-Amz-Credential")
  valid_603977 = validateParameter(valid_603977, JString, required = false,
                                 default = nil)
  if valid_603977 != nil:
    section.add "X-Amz-Credential", valid_603977
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  section = newJObject()
  var valid_603978 = formData.getOrDefault("TemplateURL")
  valid_603978 = validateParameter(valid_603978, JString, required = false,
                                 default = nil)
  if valid_603978 != nil:
    section.add "TemplateURL", valid_603978
  var valid_603979 = formData.getOrDefault("Parameters")
  valid_603979 = validateParameter(valid_603979, JArray, required = false,
                                 default = nil)
  if valid_603979 != nil:
    section.add "Parameters", valid_603979
  var valid_603980 = formData.getOrDefault("TemplateBody")
  valid_603980 = validateParameter(valid_603980, JString, required = false,
                                 default = nil)
  if valid_603980 != nil:
    section.add "TemplateBody", valid_603980
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603981: Call_PostEstimateTemplateCost_603966; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_603981.validator(path, query, header, formData, body)
  let scheme = call_603981.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603981.url(scheme.get, call_603981.host, call_603981.base,
                         call_603981.route, valid.getOrDefault("path"))
  result = hook(call_603981, url, valid)

proc call*(call_603982: Call_PostEstimateTemplateCost_603966;
          TemplateURL: string = ""; Parameters: JsonNode = nil;
          Action: string = "EstimateTemplateCost"; TemplateBody: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Action: string (required)
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_603983 = newJObject()
  var formData_603984 = newJObject()
  add(formData_603984, "TemplateURL", newJString(TemplateURL))
  if Parameters != nil:
    formData_603984.add "Parameters", Parameters
  add(query_603983, "Action", newJString(Action))
  add(formData_603984, "TemplateBody", newJString(TemplateBody))
  add(query_603983, "Version", newJString(Version))
  result = call_603982.call(nil, query_603983, nil, formData_603984, nil)

var postEstimateTemplateCost* = Call_PostEstimateTemplateCost_603966(
    name: "postEstimateTemplateCost", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_PostEstimateTemplateCost_603967, base: "/",
    url: url_PostEstimateTemplateCost_603968, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetEstimateTemplateCost_603948 = ref object of OpenApiRestCall_602433
proc url_GetEstimateTemplateCost_603950(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetEstimateTemplateCost_603949(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603951 = query.getOrDefault("TemplateURL")
  valid_603951 = validateParameter(valid_603951, JString, required = false,
                                 default = nil)
  if valid_603951 != nil:
    section.add "TemplateURL", valid_603951
  var valid_603952 = query.getOrDefault("TemplateBody")
  valid_603952 = validateParameter(valid_603952, JString, required = false,
                                 default = nil)
  if valid_603952 != nil:
    section.add "TemplateBody", valid_603952
  var valid_603953 = query.getOrDefault("Parameters")
  valid_603953 = validateParameter(valid_603953, JArray, required = false,
                                 default = nil)
  if valid_603953 != nil:
    section.add "Parameters", valid_603953
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603954 = query.getOrDefault("Action")
  valid_603954 = validateParameter(valid_603954, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_603954 != nil:
    section.add "Action", valid_603954
  var valid_603955 = query.getOrDefault("Version")
  valid_603955 = validateParameter(valid_603955, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603955 != nil:
    section.add "Version", valid_603955
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603956 = header.getOrDefault("X-Amz-Date")
  valid_603956 = validateParameter(valid_603956, JString, required = false,
                                 default = nil)
  if valid_603956 != nil:
    section.add "X-Amz-Date", valid_603956
  var valid_603957 = header.getOrDefault("X-Amz-Security-Token")
  valid_603957 = validateParameter(valid_603957, JString, required = false,
                                 default = nil)
  if valid_603957 != nil:
    section.add "X-Amz-Security-Token", valid_603957
  var valid_603958 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603958 = validateParameter(valid_603958, JString, required = false,
                                 default = nil)
  if valid_603958 != nil:
    section.add "X-Amz-Content-Sha256", valid_603958
  var valid_603959 = header.getOrDefault("X-Amz-Algorithm")
  valid_603959 = validateParameter(valid_603959, JString, required = false,
                                 default = nil)
  if valid_603959 != nil:
    section.add "X-Amz-Algorithm", valid_603959
  var valid_603960 = header.getOrDefault("X-Amz-Signature")
  valid_603960 = validateParameter(valid_603960, JString, required = false,
                                 default = nil)
  if valid_603960 != nil:
    section.add "X-Amz-Signature", valid_603960
  var valid_603961 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603961 = validateParameter(valid_603961, JString, required = false,
                                 default = nil)
  if valid_603961 != nil:
    section.add "X-Amz-SignedHeaders", valid_603961
  var valid_603962 = header.getOrDefault("X-Amz-Credential")
  valid_603962 = validateParameter(valid_603962, JString, required = false,
                                 default = nil)
  if valid_603962 != nil:
    section.add "X-Amz-Credential", valid_603962
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603963: Call_GetEstimateTemplateCost_603948; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_603963.validator(path, query, header, formData, body)
  let scheme = call_603963.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603963.url(scheme.get, call_603963.host, call_603963.base,
                         call_603963.route, valid.getOrDefault("path"))
  result = hook(call_603963, url, valid)

proc call*(call_603964: Call_GetEstimateTemplateCost_603948;
          TemplateURL: string = ""; TemplateBody: string = "";
          Parameters: JsonNode = nil; Action: string = "EstimateTemplateCost";
          Version: string = "2010-05-15"): Recallable =
  ## getEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603965 = newJObject()
  add(query_603965, "TemplateURL", newJString(TemplateURL))
  add(query_603965, "TemplateBody", newJString(TemplateBody))
  if Parameters != nil:
    query_603965.add "Parameters", Parameters
  add(query_603965, "Action", newJString(Action))
  add(query_603965, "Version", newJString(Version))
  result = call_603964.call(nil, query_603965, nil, nil, nil)

var getEstimateTemplateCost* = Call_GetEstimateTemplateCost_603948(
    name: "getEstimateTemplateCost", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_GetEstimateTemplateCost_603949, base: "/",
    url: url_GetEstimateTemplateCost_603950, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostExecuteChangeSet_604003 = ref object of OpenApiRestCall_602433
proc url_PostExecuteChangeSet_604005(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostExecuteChangeSet_604004(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604006 = query.getOrDefault("Action")
  valid_604006 = validateParameter(valid_604006, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_604006 != nil:
    section.add "Action", valid_604006
  var valid_604007 = query.getOrDefault("Version")
  valid_604007 = validateParameter(valid_604007, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604007 != nil:
    section.add "Version", valid_604007
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604008 = header.getOrDefault("X-Amz-Date")
  valid_604008 = validateParameter(valid_604008, JString, required = false,
                                 default = nil)
  if valid_604008 != nil:
    section.add "X-Amz-Date", valid_604008
  var valid_604009 = header.getOrDefault("X-Amz-Security-Token")
  valid_604009 = validateParameter(valid_604009, JString, required = false,
                                 default = nil)
  if valid_604009 != nil:
    section.add "X-Amz-Security-Token", valid_604009
  var valid_604010 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604010 = validateParameter(valid_604010, JString, required = false,
                                 default = nil)
  if valid_604010 != nil:
    section.add "X-Amz-Content-Sha256", valid_604010
  var valid_604011 = header.getOrDefault("X-Amz-Algorithm")
  valid_604011 = validateParameter(valid_604011, JString, required = false,
                                 default = nil)
  if valid_604011 != nil:
    section.add "X-Amz-Algorithm", valid_604011
  var valid_604012 = header.getOrDefault("X-Amz-Signature")
  valid_604012 = validateParameter(valid_604012, JString, required = false,
                                 default = nil)
  if valid_604012 != nil:
    section.add "X-Amz-Signature", valid_604012
  var valid_604013 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604013 = validateParameter(valid_604013, JString, required = false,
                                 default = nil)
  if valid_604013 != nil:
    section.add "X-Amz-SignedHeaders", valid_604013
  var valid_604014 = header.getOrDefault("X-Amz-Credential")
  valid_604014 = validateParameter(valid_604014, JString, required = false,
                                 default = nil)
  if valid_604014 != nil:
    section.add "X-Amz-Credential", valid_604014
  result.add "header", section
  ## parameters in `formData` object:
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  section = newJObject()
  var valid_604015 = formData.getOrDefault("ClientRequestToken")
  valid_604015 = validateParameter(valid_604015, JString, required = false,
                                 default = nil)
  if valid_604015 != nil:
    section.add "ClientRequestToken", valid_604015
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_604016 = formData.getOrDefault("ChangeSetName")
  valid_604016 = validateParameter(valid_604016, JString, required = true,
                                 default = nil)
  if valid_604016 != nil:
    section.add "ChangeSetName", valid_604016
  var valid_604017 = formData.getOrDefault("StackName")
  valid_604017 = validateParameter(valid_604017, JString, required = false,
                                 default = nil)
  if valid_604017 != nil:
    section.add "StackName", valid_604017
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604018: Call_PostExecuteChangeSet_604003; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_604018.validator(path, query, header, formData, body)
  let scheme = call_604018.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604018.url(scheme.get, call_604018.host, call_604018.base,
                         call_604018.route, valid.getOrDefault("path"))
  result = hook(call_604018, url, valid)

proc call*(call_604019: Call_PostExecuteChangeSet_604003; ChangeSetName: string;
          ClientRequestToken: string = ""; Action: string = "ExecuteChangeSet";
          StackName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Version: string (required)
  var query_604020 = newJObject()
  var formData_604021 = newJObject()
  add(formData_604021, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_604020, "Action", newJString(Action))
  add(formData_604021, "ChangeSetName", newJString(ChangeSetName))
  add(formData_604021, "StackName", newJString(StackName))
  add(query_604020, "Version", newJString(Version))
  result = call_604019.call(nil, query_604020, nil, formData_604021, nil)

var postExecuteChangeSet* = Call_PostExecuteChangeSet_604003(
    name: "postExecuteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_PostExecuteChangeSet_604004, base: "/",
    url: url_PostExecuteChangeSet_604005, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetExecuteChangeSet_603985 = ref object of OpenApiRestCall_602433
proc url_GetExecuteChangeSet_603987(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetExecuteChangeSet_603986(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `ChangeSetName` field"
  var valid_603988 = query.getOrDefault("ChangeSetName")
  valid_603988 = validateParameter(valid_603988, JString, required = true,
                                 default = nil)
  if valid_603988 != nil:
    section.add "ChangeSetName", valid_603988
  var valid_603989 = query.getOrDefault("Action")
  valid_603989 = validateParameter(valid_603989, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_603989 != nil:
    section.add "Action", valid_603989
  var valid_603990 = query.getOrDefault("ClientRequestToken")
  valid_603990 = validateParameter(valid_603990, JString, required = false,
                                 default = nil)
  if valid_603990 != nil:
    section.add "ClientRequestToken", valid_603990
  var valid_603991 = query.getOrDefault("Version")
  valid_603991 = validateParameter(valid_603991, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603991 != nil:
    section.add "Version", valid_603991
  var valid_603992 = query.getOrDefault("StackName")
  valid_603992 = validateParameter(valid_603992, JString, required = false,
                                 default = nil)
  if valid_603992 != nil:
    section.add "StackName", valid_603992
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_603993 = header.getOrDefault("X-Amz-Date")
  valid_603993 = validateParameter(valid_603993, JString, required = false,
                                 default = nil)
  if valid_603993 != nil:
    section.add "X-Amz-Date", valid_603993
  var valid_603994 = header.getOrDefault("X-Amz-Security-Token")
  valid_603994 = validateParameter(valid_603994, JString, required = false,
                                 default = nil)
  if valid_603994 != nil:
    section.add "X-Amz-Security-Token", valid_603994
  var valid_603995 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603995 = validateParameter(valid_603995, JString, required = false,
                                 default = nil)
  if valid_603995 != nil:
    section.add "X-Amz-Content-Sha256", valid_603995
  var valid_603996 = header.getOrDefault("X-Amz-Algorithm")
  valid_603996 = validateParameter(valid_603996, JString, required = false,
                                 default = nil)
  if valid_603996 != nil:
    section.add "X-Amz-Algorithm", valid_603996
  var valid_603997 = header.getOrDefault("X-Amz-Signature")
  valid_603997 = validateParameter(valid_603997, JString, required = false,
                                 default = nil)
  if valid_603997 != nil:
    section.add "X-Amz-Signature", valid_603997
  var valid_603998 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603998 = validateParameter(valid_603998, JString, required = false,
                                 default = nil)
  if valid_603998 != nil:
    section.add "X-Amz-SignedHeaders", valid_603998
  var valid_603999 = header.getOrDefault("X-Amz-Credential")
  valid_603999 = validateParameter(valid_603999, JString, required = false,
                                 default = nil)
  if valid_603999 != nil:
    section.add "X-Amz-Credential", valid_603999
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604000: Call_GetExecuteChangeSet_603985; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_604000.validator(path, query, header, formData, body)
  let scheme = call_604000.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604000.url(scheme.get, call_604000.host, call_604000.base,
                         call_604000.route, valid.getOrDefault("path"))
  result = hook(call_604000, url, valid)

proc call*(call_604001: Call_GetExecuteChangeSet_603985; ChangeSetName: string;
          Action: string = "ExecuteChangeSet"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  var query_604002 = newJObject()
  add(query_604002, "ChangeSetName", newJString(ChangeSetName))
  add(query_604002, "Action", newJString(Action))
  add(query_604002, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_604002, "Version", newJString(Version))
  add(query_604002, "StackName", newJString(StackName))
  result = call_604001.call(nil, query_604002, nil, nil, nil)

var getExecuteChangeSet* = Call_GetExecuteChangeSet_603985(
    name: "getExecuteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_GetExecuteChangeSet_603986, base: "/",
    url: url_GetExecuteChangeSet_603987, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetStackPolicy_604038 = ref object of OpenApiRestCall_602433
proc url_PostGetStackPolicy_604040(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostGetStackPolicy_604039(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604041 = query.getOrDefault("Action")
  valid_604041 = validateParameter(valid_604041, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_604041 != nil:
    section.add "Action", valid_604041
  var valid_604042 = query.getOrDefault("Version")
  valid_604042 = validateParameter(valid_604042, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604042 != nil:
    section.add "Version", valid_604042
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604043 = header.getOrDefault("X-Amz-Date")
  valid_604043 = validateParameter(valid_604043, JString, required = false,
                                 default = nil)
  if valid_604043 != nil:
    section.add "X-Amz-Date", valid_604043
  var valid_604044 = header.getOrDefault("X-Amz-Security-Token")
  valid_604044 = validateParameter(valid_604044, JString, required = false,
                                 default = nil)
  if valid_604044 != nil:
    section.add "X-Amz-Security-Token", valid_604044
  var valid_604045 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604045 = validateParameter(valid_604045, JString, required = false,
                                 default = nil)
  if valid_604045 != nil:
    section.add "X-Amz-Content-Sha256", valid_604045
  var valid_604046 = header.getOrDefault("X-Amz-Algorithm")
  valid_604046 = validateParameter(valid_604046, JString, required = false,
                                 default = nil)
  if valid_604046 != nil:
    section.add "X-Amz-Algorithm", valid_604046
  var valid_604047 = header.getOrDefault("X-Amz-Signature")
  valid_604047 = validateParameter(valid_604047, JString, required = false,
                                 default = nil)
  if valid_604047 != nil:
    section.add "X-Amz-Signature", valid_604047
  var valid_604048 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604048 = validateParameter(valid_604048, JString, required = false,
                                 default = nil)
  if valid_604048 != nil:
    section.add "X-Amz-SignedHeaders", valid_604048
  var valid_604049 = header.getOrDefault("X-Amz-Credential")
  valid_604049 = validateParameter(valid_604049, JString, required = false,
                                 default = nil)
  if valid_604049 != nil:
    section.add "X-Amz-Credential", valid_604049
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_604050 = formData.getOrDefault("StackName")
  valid_604050 = validateParameter(valid_604050, JString, required = true,
                                 default = nil)
  if valid_604050 != nil:
    section.add "StackName", valid_604050
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604051: Call_PostGetStackPolicy_604038; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_604051.validator(path, query, header, formData, body)
  let scheme = call_604051.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604051.url(scheme.get, call_604051.host, call_604051.base,
                         call_604051.route, valid.getOrDefault("path"))
  result = hook(call_604051, url, valid)

proc call*(call_604052: Call_PostGetStackPolicy_604038; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Version: string (required)
  var query_604053 = newJObject()
  var formData_604054 = newJObject()
  add(query_604053, "Action", newJString(Action))
  add(formData_604054, "StackName", newJString(StackName))
  add(query_604053, "Version", newJString(Version))
  result = call_604052.call(nil, query_604053, nil, formData_604054, nil)

var postGetStackPolicy* = Call_PostGetStackPolicy_604038(
    name: "postGetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetStackPolicy",
    validator: validate_PostGetStackPolicy_604039, base: "/",
    url: url_PostGetStackPolicy_604040, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetStackPolicy_604022 = ref object of OpenApiRestCall_602433
proc url_GetGetStackPolicy_604024(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetGetStackPolicy_604023(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604025 = query.getOrDefault("Action")
  valid_604025 = validateParameter(valid_604025, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_604025 != nil:
    section.add "Action", valid_604025
  var valid_604026 = query.getOrDefault("Version")
  valid_604026 = validateParameter(valid_604026, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604026 != nil:
    section.add "Version", valid_604026
  var valid_604027 = query.getOrDefault("StackName")
  valid_604027 = validateParameter(valid_604027, JString, required = true,
                                 default = nil)
  if valid_604027 != nil:
    section.add "StackName", valid_604027
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604028 = header.getOrDefault("X-Amz-Date")
  valid_604028 = validateParameter(valid_604028, JString, required = false,
                                 default = nil)
  if valid_604028 != nil:
    section.add "X-Amz-Date", valid_604028
  var valid_604029 = header.getOrDefault("X-Amz-Security-Token")
  valid_604029 = validateParameter(valid_604029, JString, required = false,
                                 default = nil)
  if valid_604029 != nil:
    section.add "X-Amz-Security-Token", valid_604029
  var valid_604030 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604030 = validateParameter(valid_604030, JString, required = false,
                                 default = nil)
  if valid_604030 != nil:
    section.add "X-Amz-Content-Sha256", valid_604030
  var valid_604031 = header.getOrDefault("X-Amz-Algorithm")
  valid_604031 = validateParameter(valid_604031, JString, required = false,
                                 default = nil)
  if valid_604031 != nil:
    section.add "X-Amz-Algorithm", valid_604031
  var valid_604032 = header.getOrDefault("X-Amz-Signature")
  valid_604032 = validateParameter(valid_604032, JString, required = false,
                                 default = nil)
  if valid_604032 != nil:
    section.add "X-Amz-Signature", valid_604032
  var valid_604033 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604033 = validateParameter(valid_604033, JString, required = false,
                                 default = nil)
  if valid_604033 != nil:
    section.add "X-Amz-SignedHeaders", valid_604033
  var valid_604034 = header.getOrDefault("X-Amz-Credential")
  valid_604034 = validateParameter(valid_604034, JString, required = false,
                                 default = nil)
  if valid_604034 != nil:
    section.add "X-Amz-Credential", valid_604034
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604035: Call_GetGetStackPolicy_604022; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_604035.validator(path, query, header, formData, body)
  let scheme = call_604035.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604035.url(scheme.get, call_604035.host, call_604035.base,
                         call_604035.route, valid.getOrDefault("path"))
  result = hook(call_604035, url, valid)

proc call*(call_604036: Call_GetGetStackPolicy_604022; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  var query_604037 = newJObject()
  add(query_604037, "Action", newJString(Action))
  add(query_604037, "Version", newJString(Version))
  add(query_604037, "StackName", newJString(StackName))
  result = call_604036.call(nil, query_604037, nil, nil, nil)

var getGetStackPolicy* = Call_GetGetStackPolicy_604022(name: "getGetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetStackPolicy", validator: validate_GetGetStackPolicy_604023,
    base: "/", url: url_GetGetStackPolicy_604024,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplate_604073 = ref object of OpenApiRestCall_602433
proc url_PostGetTemplate_604075(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostGetTemplate_604074(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604076 = query.getOrDefault("Action")
  valid_604076 = validateParameter(valid_604076, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_604076 != nil:
    section.add "Action", valid_604076
  var valid_604077 = query.getOrDefault("Version")
  valid_604077 = validateParameter(valid_604077, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604077 != nil:
    section.add "Version", valid_604077
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604078 = header.getOrDefault("X-Amz-Date")
  valid_604078 = validateParameter(valid_604078, JString, required = false,
                                 default = nil)
  if valid_604078 != nil:
    section.add "X-Amz-Date", valid_604078
  var valid_604079 = header.getOrDefault("X-Amz-Security-Token")
  valid_604079 = validateParameter(valid_604079, JString, required = false,
                                 default = nil)
  if valid_604079 != nil:
    section.add "X-Amz-Security-Token", valid_604079
  var valid_604080 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604080 = validateParameter(valid_604080, JString, required = false,
                                 default = nil)
  if valid_604080 != nil:
    section.add "X-Amz-Content-Sha256", valid_604080
  var valid_604081 = header.getOrDefault("X-Amz-Algorithm")
  valid_604081 = validateParameter(valid_604081, JString, required = false,
                                 default = nil)
  if valid_604081 != nil:
    section.add "X-Amz-Algorithm", valid_604081
  var valid_604082 = header.getOrDefault("X-Amz-Signature")
  valid_604082 = validateParameter(valid_604082, JString, required = false,
                                 default = nil)
  if valid_604082 != nil:
    section.add "X-Amz-Signature", valid_604082
  var valid_604083 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604083 = validateParameter(valid_604083, JString, required = false,
                                 default = nil)
  if valid_604083 != nil:
    section.add "X-Amz-SignedHeaders", valid_604083
  var valid_604084 = header.getOrDefault("X-Amz-Credential")
  valid_604084 = validateParameter(valid_604084, JString, required = false,
                                 default = nil)
  if valid_604084 != nil:
    section.add "X-Amz-Credential", valid_604084
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_604085 = formData.getOrDefault("TemplateStage")
  valid_604085 = validateParameter(valid_604085, JString, required = false,
                                 default = newJString("Original"))
  if valid_604085 != nil:
    section.add "TemplateStage", valid_604085
  var valid_604086 = formData.getOrDefault("ChangeSetName")
  valid_604086 = validateParameter(valid_604086, JString, required = false,
                                 default = nil)
  if valid_604086 != nil:
    section.add "ChangeSetName", valid_604086
  var valid_604087 = formData.getOrDefault("StackName")
  valid_604087 = validateParameter(valid_604087, JString, required = false,
                                 default = nil)
  if valid_604087 != nil:
    section.add "StackName", valid_604087
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604088: Call_PostGetTemplate_604073; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_604088.validator(path, query, header, formData, body)
  let scheme = call_604088.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604088.url(scheme.get, call_604088.host, call_604088.base,
                         call_604088.route, valid.getOrDefault("path"))
  result = hook(call_604088, url, valid)

proc call*(call_604089: Call_PostGetTemplate_604073;
          TemplateStage: string = "Original"; Action: string = "GetTemplate";
          ChangeSetName: string = ""; StackName: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: string (required)
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_604090 = newJObject()
  var formData_604091 = newJObject()
  add(formData_604091, "TemplateStage", newJString(TemplateStage))
  add(query_604090, "Action", newJString(Action))
  add(formData_604091, "ChangeSetName", newJString(ChangeSetName))
  add(formData_604091, "StackName", newJString(StackName))
  add(query_604090, "Version", newJString(Version))
  result = call_604089.call(nil, query_604090, nil, formData_604091, nil)

var postGetTemplate* = Call_PostGetTemplate_604073(name: "postGetTemplate",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_PostGetTemplate_604074,
    base: "/", url: url_PostGetTemplate_604075, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplate_604055 = ref object of OpenApiRestCall_602433
proc url_GetGetTemplate_604057(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetGetTemplate_604056(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Action: JString (required)
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_604058 = query.getOrDefault("ChangeSetName")
  valid_604058 = validateParameter(valid_604058, JString, required = false,
                                 default = nil)
  if valid_604058 != nil:
    section.add "ChangeSetName", valid_604058
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604059 = query.getOrDefault("Action")
  valid_604059 = validateParameter(valid_604059, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_604059 != nil:
    section.add "Action", valid_604059
  var valid_604060 = query.getOrDefault("TemplateStage")
  valid_604060 = validateParameter(valid_604060, JString, required = false,
                                 default = newJString("Original"))
  if valid_604060 != nil:
    section.add "TemplateStage", valid_604060
  var valid_604061 = query.getOrDefault("Version")
  valid_604061 = validateParameter(valid_604061, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604061 != nil:
    section.add "Version", valid_604061
  var valid_604062 = query.getOrDefault("StackName")
  valid_604062 = validateParameter(valid_604062, JString, required = false,
                                 default = nil)
  if valid_604062 != nil:
    section.add "StackName", valid_604062
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604063 = header.getOrDefault("X-Amz-Date")
  valid_604063 = validateParameter(valid_604063, JString, required = false,
                                 default = nil)
  if valid_604063 != nil:
    section.add "X-Amz-Date", valid_604063
  var valid_604064 = header.getOrDefault("X-Amz-Security-Token")
  valid_604064 = validateParameter(valid_604064, JString, required = false,
                                 default = nil)
  if valid_604064 != nil:
    section.add "X-Amz-Security-Token", valid_604064
  var valid_604065 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604065 = validateParameter(valid_604065, JString, required = false,
                                 default = nil)
  if valid_604065 != nil:
    section.add "X-Amz-Content-Sha256", valid_604065
  var valid_604066 = header.getOrDefault("X-Amz-Algorithm")
  valid_604066 = validateParameter(valid_604066, JString, required = false,
                                 default = nil)
  if valid_604066 != nil:
    section.add "X-Amz-Algorithm", valid_604066
  var valid_604067 = header.getOrDefault("X-Amz-Signature")
  valid_604067 = validateParameter(valid_604067, JString, required = false,
                                 default = nil)
  if valid_604067 != nil:
    section.add "X-Amz-Signature", valid_604067
  var valid_604068 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604068 = validateParameter(valid_604068, JString, required = false,
                                 default = nil)
  if valid_604068 != nil:
    section.add "X-Amz-SignedHeaders", valid_604068
  var valid_604069 = header.getOrDefault("X-Amz-Credential")
  valid_604069 = validateParameter(valid_604069, JString, required = false,
                                 default = nil)
  if valid_604069 != nil:
    section.add "X-Amz-Credential", valid_604069
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604070: Call_GetGetTemplate_604055; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_604070.validator(path, query, header, formData, body)
  let scheme = call_604070.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604070.url(scheme.get, call_604070.host, call_604070.base,
                         call_604070.route, valid.getOrDefault("path"))
  result = hook(call_604070, url, valid)

proc call*(call_604071: Call_GetGetTemplate_604055; ChangeSetName: string = "";
          Action: string = "GetTemplate"; TemplateStage: string = "Original";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Action: string (required)
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_604072 = newJObject()
  add(query_604072, "ChangeSetName", newJString(ChangeSetName))
  add(query_604072, "Action", newJString(Action))
  add(query_604072, "TemplateStage", newJString(TemplateStage))
  add(query_604072, "Version", newJString(Version))
  add(query_604072, "StackName", newJString(StackName))
  result = call_604071.call(nil, query_604072, nil, nil, nil)

var getGetTemplate* = Call_GetGetTemplate_604055(name: "getGetTemplate",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_GetGetTemplate_604056,
    base: "/", url: url_GetGetTemplate_604057, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplateSummary_604111 = ref object of OpenApiRestCall_602433
proc url_PostGetTemplateSummary_604113(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostGetTemplateSummary_604112(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604114 = query.getOrDefault("Action")
  valid_604114 = validateParameter(valid_604114, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_604114 != nil:
    section.add "Action", valid_604114
  var valid_604115 = query.getOrDefault("Version")
  valid_604115 = validateParameter(valid_604115, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604115 != nil:
    section.add "Version", valid_604115
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604116 = header.getOrDefault("X-Amz-Date")
  valid_604116 = validateParameter(valid_604116, JString, required = false,
                                 default = nil)
  if valid_604116 != nil:
    section.add "X-Amz-Date", valid_604116
  var valid_604117 = header.getOrDefault("X-Amz-Security-Token")
  valid_604117 = validateParameter(valid_604117, JString, required = false,
                                 default = nil)
  if valid_604117 != nil:
    section.add "X-Amz-Security-Token", valid_604117
  var valid_604118 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604118 = validateParameter(valid_604118, JString, required = false,
                                 default = nil)
  if valid_604118 != nil:
    section.add "X-Amz-Content-Sha256", valid_604118
  var valid_604119 = header.getOrDefault("X-Amz-Algorithm")
  valid_604119 = validateParameter(valid_604119, JString, required = false,
                                 default = nil)
  if valid_604119 != nil:
    section.add "X-Amz-Algorithm", valid_604119
  var valid_604120 = header.getOrDefault("X-Amz-Signature")
  valid_604120 = validateParameter(valid_604120, JString, required = false,
                                 default = nil)
  if valid_604120 != nil:
    section.add "X-Amz-Signature", valid_604120
  var valid_604121 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604121 = validateParameter(valid_604121, JString, required = false,
                                 default = nil)
  if valid_604121 != nil:
    section.add "X-Amz-SignedHeaders", valid_604121
  var valid_604122 = header.getOrDefault("X-Amz-Credential")
  valid_604122 = validateParameter(valid_604122, JString, required = false,
                                 default = nil)
  if valid_604122 != nil:
    section.add "X-Amz-Credential", valid_604122
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  section = newJObject()
  var valid_604123 = formData.getOrDefault("StackSetName")
  valid_604123 = validateParameter(valid_604123, JString, required = false,
                                 default = nil)
  if valid_604123 != nil:
    section.add "StackSetName", valid_604123
  var valid_604124 = formData.getOrDefault("TemplateURL")
  valid_604124 = validateParameter(valid_604124, JString, required = false,
                                 default = nil)
  if valid_604124 != nil:
    section.add "TemplateURL", valid_604124
  var valid_604125 = formData.getOrDefault("StackName")
  valid_604125 = validateParameter(valid_604125, JString, required = false,
                                 default = nil)
  if valid_604125 != nil:
    section.add "StackName", valid_604125
  var valid_604126 = formData.getOrDefault("TemplateBody")
  valid_604126 = validateParameter(valid_604126, JString, required = false,
                                 default = nil)
  if valid_604126 != nil:
    section.add "TemplateBody", valid_604126
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604127: Call_PostGetTemplateSummary_604111; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_604127.validator(path, query, header, formData, body)
  let scheme = call_604127.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604127.url(scheme.get, call_604127.host, call_604127.base,
                         call_604127.route, valid.getOrDefault("path"))
  result = hook(call_604127, url, valid)

proc call*(call_604128: Call_PostGetTemplateSummary_604111;
          StackSetName: string = ""; TemplateURL: string = "";
          Action: string = "GetTemplateSummary"; StackName: string = "";
          TemplateBody: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  var query_604129 = newJObject()
  var formData_604130 = newJObject()
  add(formData_604130, "StackSetName", newJString(StackSetName))
  add(formData_604130, "TemplateURL", newJString(TemplateURL))
  add(query_604129, "Action", newJString(Action))
  add(formData_604130, "StackName", newJString(StackName))
  add(formData_604130, "TemplateBody", newJString(TemplateBody))
  add(query_604129, "Version", newJString(Version))
  result = call_604128.call(nil, query_604129, nil, formData_604130, nil)

var postGetTemplateSummary* = Call_PostGetTemplateSummary_604111(
    name: "postGetTemplateSummary", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_PostGetTemplateSummary_604112, base: "/",
    url: url_PostGetTemplateSummary_604113, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplateSummary_604092 = ref object of OpenApiRestCall_602433
proc url_GetGetTemplateSummary_604094(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetGetTemplateSummary_604093(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: JString (required)
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: JString (required)
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  section = newJObject()
  var valid_604095 = query.getOrDefault("TemplateURL")
  valid_604095 = validateParameter(valid_604095, JString, required = false,
                                 default = nil)
  if valid_604095 != nil:
    section.add "TemplateURL", valid_604095
  var valid_604096 = query.getOrDefault("TemplateBody")
  valid_604096 = validateParameter(valid_604096, JString, required = false,
                                 default = nil)
  if valid_604096 != nil:
    section.add "TemplateBody", valid_604096
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604097 = query.getOrDefault("Action")
  valid_604097 = validateParameter(valid_604097, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_604097 != nil:
    section.add "Action", valid_604097
  var valid_604098 = query.getOrDefault("StackSetName")
  valid_604098 = validateParameter(valid_604098, JString, required = false,
                                 default = nil)
  if valid_604098 != nil:
    section.add "StackSetName", valid_604098
  var valid_604099 = query.getOrDefault("Version")
  valid_604099 = validateParameter(valid_604099, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604099 != nil:
    section.add "Version", valid_604099
  var valid_604100 = query.getOrDefault("StackName")
  valid_604100 = validateParameter(valid_604100, JString, required = false,
                                 default = nil)
  if valid_604100 != nil:
    section.add "StackName", valid_604100
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604101 = header.getOrDefault("X-Amz-Date")
  valid_604101 = validateParameter(valid_604101, JString, required = false,
                                 default = nil)
  if valid_604101 != nil:
    section.add "X-Amz-Date", valid_604101
  var valid_604102 = header.getOrDefault("X-Amz-Security-Token")
  valid_604102 = validateParameter(valid_604102, JString, required = false,
                                 default = nil)
  if valid_604102 != nil:
    section.add "X-Amz-Security-Token", valid_604102
  var valid_604103 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604103 = validateParameter(valid_604103, JString, required = false,
                                 default = nil)
  if valid_604103 != nil:
    section.add "X-Amz-Content-Sha256", valid_604103
  var valid_604104 = header.getOrDefault("X-Amz-Algorithm")
  valid_604104 = validateParameter(valid_604104, JString, required = false,
                                 default = nil)
  if valid_604104 != nil:
    section.add "X-Amz-Algorithm", valid_604104
  var valid_604105 = header.getOrDefault("X-Amz-Signature")
  valid_604105 = validateParameter(valid_604105, JString, required = false,
                                 default = nil)
  if valid_604105 != nil:
    section.add "X-Amz-Signature", valid_604105
  var valid_604106 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604106 = validateParameter(valid_604106, JString, required = false,
                                 default = nil)
  if valid_604106 != nil:
    section.add "X-Amz-SignedHeaders", valid_604106
  var valid_604107 = header.getOrDefault("X-Amz-Credential")
  valid_604107 = validateParameter(valid_604107, JString, required = false,
                                 default = nil)
  if valid_604107 != nil:
    section.add "X-Amz-Credential", valid_604107
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604108: Call_GetGetTemplateSummary_604092; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_604108.validator(path, query, header, formData, body)
  let scheme = call_604108.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604108.url(scheme.get, call_604108.host, call_604108.base,
                         call_604108.route, valid.getOrDefault("path"))
  result = hook(call_604108, url, valid)

proc call*(call_604109: Call_GetGetTemplateSummary_604092;
          TemplateURL: string = ""; TemplateBody: string = "";
          Action: string = "GetTemplateSummary"; StackSetName: string = "";
          Version: string = "2010-05-15"; StackName: string = ""): Recallable =
  ## getGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  var query_604110 = newJObject()
  add(query_604110, "TemplateURL", newJString(TemplateURL))
  add(query_604110, "TemplateBody", newJString(TemplateBody))
  add(query_604110, "Action", newJString(Action))
  add(query_604110, "StackSetName", newJString(StackSetName))
  add(query_604110, "Version", newJString(Version))
  add(query_604110, "StackName", newJString(StackName))
  result = call_604109.call(nil, query_604110, nil, nil, nil)

var getGetTemplateSummary* = Call_GetGetTemplateSummary_604092(
    name: "getGetTemplateSummary", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_GetGetTemplateSummary_604093, base: "/",
    url: url_GetGetTemplateSummary_604094, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListChangeSets_604148 = ref object of OpenApiRestCall_602433
proc url_PostListChangeSets_604150(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListChangeSets_604149(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604151 = query.getOrDefault("Action")
  valid_604151 = validateParameter(valid_604151, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_604151 != nil:
    section.add "Action", valid_604151
  var valid_604152 = query.getOrDefault("Version")
  valid_604152 = validateParameter(valid_604152, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604152 != nil:
    section.add "Version", valid_604152
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604153 = header.getOrDefault("X-Amz-Date")
  valid_604153 = validateParameter(valid_604153, JString, required = false,
                                 default = nil)
  if valid_604153 != nil:
    section.add "X-Amz-Date", valid_604153
  var valid_604154 = header.getOrDefault("X-Amz-Security-Token")
  valid_604154 = validateParameter(valid_604154, JString, required = false,
                                 default = nil)
  if valid_604154 != nil:
    section.add "X-Amz-Security-Token", valid_604154
  var valid_604155 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604155 = validateParameter(valid_604155, JString, required = false,
                                 default = nil)
  if valid_604155 != nil:
    section.add "X-Amz-Content-Sha256", valid_604155
  var valid_604156 = header.getOrDefault("X-Amz-Algorithm")
  valid_604156 = validateParameter(valid_604156, JString, required = false,
                                 default = nil)
  if valid_604156 != nil:
    section.add "X-Amz-Algorithm", valid_604156
  var valid_604157 = header.getOrDefault("X-Amz-Signature")
  valid_604157 = validateParameter(valid_604157, JString, required = false,
                                 default = nil)
  if valid_604157 != nil:
    section.add "X-Amz-Signature", valid_604157
  var valid_604158 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604158 = validateParameter(valid_604158, JString, required = false,
                                 default = nil)
  if valid_604158 != nil:
    section.add "X-Amz-SignedHeaders", valid_604158
  var valid_604159 = header.getOrDefault("X-Amz-Credential")
  valid_604159 = validateParameter(valid_604159, JString, required = false,
                                 default = nil)
  if valid_604159 != nil:
    section.add "X-Amz-Credential", valid_604159
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  section = newJObject()
  var valid_604160 = formData.getOrDefault("NextToken")
  valid_604160 = validateParameter(valid_604160, JString, required = false,
                                 default = nil)
  if valid_604160 != nil:
    section.add "NextToken", valid_604160
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_604161 = formData.getOrDefault("StackName")
  valid_604161 = validateParameter(valid_604161, JString, required = true,
                                 default = nil)
  if valid_604161 != nil:
    section.add "StackName", valid_604161
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604162: Call_PostListChangeSets_604148; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_604162.validator(path, query, header, formData, body)
  let scheme = call_604162.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604162.url(scheme.get, call_604162.host, call_604162.base,
                         call_604162.route, valid.getOrDefault("path"))
  result = hook(call_604162, url, valid)

proc call*(call_604163: Call_PostListChangeSets_604148; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## postListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Version: string (required)
  var query_604164 = newJObject()
  var formData_604165 = newJObject()
  add(formData_604165, "NextToken", newJString(NextToken))
  add(query_604164, "Action", newJString(Action))
  add(formData_604165, "StackName", newJString(StackName))
  add(query_604164, "Version", newJString(Version))
  result = call_604163.call(nil, query_604164, nil, formData_604165, nil)

var postListChangeSets* = Call_PostListChangeSets_604148(
    name: "postListChangeSets", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListChangeSets",
    validator: validate_PostListChangeSets_604149, base: "/",
    url: url_PostListChangeSets_604150, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListChangeSets_604131 = ref object of OpenApiRestCall_602433
proc url_GetListChangeSets_604133(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListChangeSets_604132(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  section = newJObject()
  var valid_604134 = query.getOrDefault("NextToken")
  valid_604134 = validateParameter(valid_604134, JString, required = false,
                                 default = nil)
  if valid_604134 != nil:
    section.add "NextToken", valid_604134
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604135 = query.getOrDefault("Action")
  valid_604135 = validateParameter(valid_604135, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_604135 != nil:
    section.add "Action", valid_604135
  var valid_604136 = query.getOrDefault("Version")
  valid_604136 = validateParameter(valid_604136, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604136 != nil:
    section.add "Version", valid_604136
  var valid_604137 = query.getOrDefault("StackName")
  valid_604137 = validateParameter(valid_604137, JString, required = true,
                                 default = nil)
  if valid_604137 != nil:
    section.add "StackName", valid_604137
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604138 = header.getOrDefault("X-Amz-Date")
  valid_604138 = validateParameter(valid_604138, JString, required = false,
                                 default = nil)
  if valid_604138 != nil:
    section.add "X-Amz-Date", valid_604138
  var valid_604139 = header.getOrDefault("X-Amz-Security-Token")
  valid_604139 = validateParameter(valid_604139, JString, required = false,
                                 default = nil)
  if valid_604139 != nil:
    section.add "X-Amz-Security-Token", valid_604139
  var valid_604140 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604140 = validateParameter(valid_604140, JString, required = false,
                                 default = nil)
  if valid_604140 != nil:
    section.add "X-Amz-Content-Sha256", valid_604140
  var valid_604141 = header.getOrDefault("X-Amz-Algorithm")
  valid_604141 = validateParameter(valid_604141, JString, required = false,
                                 default = nil)
  if valid_604141 != nil:
    section.add "X-Amz-Algorithm", valid_604141
  var valid_604142 = header.getOrDefault("X-Amz-Signature")
  valid_604142 = validateParameter(valid_604142, JString, required = false,
                                 default = nil)
  if valid_604142 != nil:
    section.add "X-Amz-Signature", valid_604142
  var valid_604143 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604143 = validateParameter(valid_604143, JString, required = false,
                                 default = nil)
  if valid_604143 != nil:
    section.add "X-Amz-SignedHeaders", valid_604143
  var valid_604144 = header.getOrDefault("X-Amz-Credential")
  valid_604144 = validateParameter(valid_604144, JString, required = false,
                                 default = nil)
  if valid_604144 != nil:
    section.add "X-Amz-Credential", valid_604144
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604145: Call_GetListChangeSets_604131; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_604145.validator(path, query, header, formData, body)
  let scheme = call_604145.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604145.url(scheme.get, call_604145.host, call_604145.base,
                         call_604145.route, valid.getOrDefault("path"))
  result = hook(call_604145, url, valid)

proc call*(call_604146: Call_GetListChangeSets_604131; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## getListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  var query_604147 = newJObject()
  add(query_604147, "NextToken", newJString(NextToken))
  add(query_604147, "Action", newJString(Action))
  add(query_604147, "Version", newJString(Version))
  add(query_604147, "StackName", newJString(StackName))
  result = call_604146.call(nil, query_604147, nil, nil, nil)

var getListChangeSets* = Call_GetListChangeSets_604131(name: "getListChangeSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListChangeSets", validator: validate_GetListChangeSets_604132,
    base: "/", url: url_GetListChangeSets_604133,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListExports_604182 = ref object of OpenApiRestCall_602433
proc url_PostListExports_604184(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListExports_604183(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604185 = query.getOrDefault("Action")
  valid_604185 = validateParameter(valid_604185, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_604185 != nil:
    section.add "Action", valid_604185
  var valid_604186 = query.getOrDefault("Version")
  valid_604186 = validateParameter(valid_604186, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604186 != nil:
    section.add "Version", valid_604186
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604187 = header.getOrDefault("X-Amz-Date")
  valid_604187 = validateParameter(valid_604187, JString, required = false,
                                 default = nil)
  if valid_604187 != nil:
    section.add "X-Amz-Date", valid_604187
  var valid_604188 = header.getOrDefault("X-Amz-Security-Token")
  valid_604188 = validateParameter(valid_604188, JString, required = false,
                                 default = nil)
  if valid_604188 != nil:
    section.add "X-Amz-Security-Token", valid_604188
  var valid_604189 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604189 = validateParameter(valid_604189, JString, required = false,
                                 default = nil)
  if valid_604189 != nil:
    section.add "X-Amz-Content-Sha256", valid_604189
  var valid_604190 = header.getOrDefault("X-Amz-Algorithm")
  valid_604190 = validateParameter(valid_604190, JString, required = false,
                                 default = nil)
  if valid_604190 != nil:
    section.add "X-Amz-Algorithm", valid_604190
  var valid_604191 = header.getOrDefault("X-Amz-Signature")
  valid_604191 = validateParameter(valid_604191, JString, required = false,
                                 default = nil)
  if valid_604191 != nil:
    section.add "X-Amz-Signature", valid_604191
  var valid_604192 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604192 = validateParameter(valid_604192, JString, required = false,
                                 default = nil)
  if valid_604192 != nil:
    section.add "X-Amz-SignedHeaders", valid_604192
  var valid_604193 = header.getOrDefault("X-Amz-Credential")
  valid_604193 = validateParameter(valid_604193, JString, required = false,
                                 default = nil)
  if valid_604193 != nil:
    section.add "X-Amz-Credential", valid_604193
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  section = newJObject()
  var valid_604194 = formData.getOrDefault("NextToken")
  valid_604194 = validateParameter(valid_604194, JString, required = false,
                                 default = nil)
  if valid_604194 != nil:
    section.add "NextToken", valid_604194
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604195: Call_PostListExports_604182; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_604195.validator(path, query, header, formData, body)
  let scheme = call_604195.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604195.url(scheme.get, call_604195.host, call_604195.base,
                         call_604195.route, valid.getOrDefault("path"))
  result = hook(call_604195, url, valid)

proc call*(call_604196: Call_PostListExports_604182; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## postListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604197 = newJObject()
  var formData_604198 = newJObject()
  add(formData_604198, "NextToken", newJString(NextToken))
  add(query_604197, "Action", newJString(Action))
  add(query_604197, "Version", newJString(Version))
  result = call_604196.call(nil, query_604197, nil, formData_604198, nil)

var postListExports* = Call_PostListExports_604182(name: "postListExports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_PostListExports_604183,
    base: "/", url: url_PostListExports_604184, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListExports_604166 = ref object of OpenApiRestCall_602433
proc url_GetListExports_604168(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListExports_604167(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_604169 = query.getOrDefault("NextToken")
  valid_604169 = validateParameter(valid_604169, JString, required = false,
                                 default = nil)
  if valid_604169 != nil:
    section.add "NextToken", valid_604169
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604170 = query.getOrDefault("Action")
  valid_604170 = validateParameter(valid_604170, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_604170 != nil:
    section.add "Action", valid_604170
  var valid_604171 = query.getOrDefault("Version")
  valid_604171 = validateParameter(valid_604171, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604171 != nil:
    section.add "Version", valid_604171
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604172 = header.getOrDefault("X-Amz-Date")
  valid_604172 = validateParameter(valid_604172, JString, required = false,
                                 default = nil)
  if valid_604172 != nil:
    section.add "X-Amz-Date", valid_604172
  var valid_604173 = header.getOrDefault("X-Amz-Security-Token")
  valid_604173 = validateParameter(valid_604173, JString, required = false,
                                 default = nil)
  if valid_604173 != nil:
    section.add "X-Amz-Security-Token", valid_604173
  var valid_604174 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604174 = validateParameter(valid_604174, JString, required = false,
                                 default = nil)
  if valid_604174 != nil:
    section.add "X-Amz-Content-Sha256", valid_604174
  var valid_604175 = header.getOrDefault("X-Amz-Algorithm")
  valid_604175 = validateParameter(valid_604175, JString, required = false,
                                 default = nil)
  if valid_604175 != nil:
    section.add "X-Amz-Algorithm", valid_604175
  var valid_604176 = header.getOrDefault("X-Amz-Signature")
  valid_604176 = validateParameter(valid_604176, JString, required = false,
                                 default = nil)
  if valid_604176 != nil:
    section.add "X-Amz-Signature", valid_604176
  var valid_604177 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604177 = validateParameter(valid_604177, JString, required = false,
                                 default = nil)
  if valid_604177 != nil:
    section.add "X-Amz-SignedHeaders", valid_604177
  var valid_604178 = header.getOrDefault("X-Amz-Credential")
  valid_604178 = validateParameter(valid_604178, JString, required = false,
                                 default = nil)
  if valid_604178 != nil:
    section.add "X-Amz-Credential", valid_604178
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604179: Call_GetListExports_604166; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_604179.validator(path, query, header, formData, body)
  let scheme = call_604179.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604179.url(scheme.get, call_604179.host, call_604179.base,
                         call_604179.route, valid.getOrDefault("path"))
  result = hook(call_604179, url, valid)

proc call*(call_604180: Call_GetListExports_604166; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## getListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604181 = newJObject()
  add(query_604181, "NextToken", newJString(NextToken))
  add(query_604181, "Action", newJString(Action))
  add(query_604181, "Version", newJString(Version))
  result = call_604180.call(nil, query_604181, nil, nil, nil)

var getListExports* = Call_GetListExports_604166(name: "getListExports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_GetListExports_604167,
    base: "/", url: url_GetListExports_604168, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListImports_604216 = ref object of OpenApiRestCall_602433
proc url_PostListImports_604218(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListImports_604217(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604219 = query.getOrDefault("Action")
  valid_604219 = validateParameter(valid_604219, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_604219 != nil:
    section.add "Action", valid_604219
  var valid_604220 = query.getOrDefault("Version")
  valid_604220 = validateParameter(valid_604220, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604220 != nil:
    section.add "Version", valid_604220
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604221 = header.getOrDefault("X-Amz-Date")
  valid_604221 = validateParameter(valid_604221, JString, required = false,
                                 default = nil)
  if valid_604221 != nil:
    section.add "X-Amz-Date", valid_604221
  var valid_604222 = header.getOrDefault("X-Amz-Security-Token")
  valid_604222 = validateParameter(valid_604222, JString, required = false,
                                 default = nil)
  if valid_604222 != nil:
    section.add "X-Amz-Security-Token", valid_604222
  var valid_604223 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604223 = validateParameter(valid_604223, JString, required = false,
                                 default = nil)
  if valid_604223 != nil:
    section.add "X-Amz-Content-Sha256", valid_604223
  var valid_604224 = header.getOrDefault("X-Amz-Algorithm")
  valid_604224 = validateParameter(valid_604224, JString, required = false,
                                 default = nil)
  if valid_604224 != nil:
    section.add "X-Amz-Algorithm", valid_604224
  var valid_604225 = header.getOrDefault("X-Amz-Signature")
  valid_604225 = validateParameter(valid_604225, JString, required = false,
                                 default = nil)
  if valid_604225 != nil:
    section.add "X-Amz-Signature", valid_604225
  var valid_604226 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604226 = validateParameter(valid_604226, JString, required = false,
                                 default = nil)
  if valid_604226 != nil:
    section.add "X-Amz-SignedHeaders", valid_604226
  var valid_604227 = header.getOrDefault("X-Amz-Credential")
  valid_604227 = validateParameter(valid_604227, JString, required = false,
                                 default = nil)
  if valid_604227 != nil:
    section.add "X-Amz-Credential", valid_604227
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  section = newJObject()
  var valid_604228 = formData.getOrDefault("NextToken")
  valid_604228 = validateParameter(valid_604228, JString, required = false,
                                 default = nil)
  if valid_604228 != nil:
    section.add "NextToken", valid_604228
  assert formData != nil,
        "formData argument is necessary due to required `ExportName` field"
  var valid_604229 = formData.getOrDefault("ExportName")
  valid_604229 = validateParameter(valid_604229, JString, required = true,
                                 default = nil)
  if valid_604229 != nil:
    section.add "ExportName", valid_604229
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604230: Call_PostListImports_604216; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_604230.validator(path, query, header, formData, body)
  let scheme = call_604230.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604230.url(scheme.get, call_604230.host, call_604230.base,
                         call_604230.route, valid.getOrDefault("path"))
  result = hook(call_604230, url, valid)

proc call*(call_604231: Call_PostListImports_604216; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## postListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: string (required)
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: string (required)
  var query_604232 = newJObject()
  var formData_604233 = newJObject()
  add(formData_604233, "NextToken", newJString(NextToken))
  add(query_604232, "Action", newJString(Action))
  add(formData_604233, "ExportName", newJString(ExportName))
  add(query_604232, "Version", newJString(Version))
  result = call_604231.call(nil, query_604232, nil, formData_604233, nil)

var postListImports* = Call_PostListImports_604216(name: "postListImports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_PostListImports_604217,
    base: "/", url: url_PostListImports_604218, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListImports_604199 = ref object of OpenApiRestCall_602433
proc url_GetListImports_604201(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListImports_604200(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: JString (required)
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: JString (required)
  section = newJObject()
  var valid_604202 = query.getOrDefault("NextToken")
  valid_604202 = validateParameter(valid_604202, JString, required = false,
                                 default = nil)
  if valid_604202 != nil:
    section.add "NextToken", valid_604202
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604203 = query.getOrDefault("Action")
  valid_604203 = validateParameter(valid_604203, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_604203 != nil:
    section.add "Action", valid_604203
  var valid_604204 = query.getOrDefault("ExportName")
  valid_604204 = validateParameter(valid_604204, JString, required = true,
                                 default = nil)
  if valid_604204 != nil:
    section.add "ExportName", valid_604204
  var valid_604205 = query.getOrDefault("Version")
  valid_604205 = validateParameter(valid_604205, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604205 != nil:
    section.add "Version", valid_604205
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604206 = header.getOrDefault("X-Amz-Date")
  valid_604206 = validateParameter(valid_604206, JString, required = false,
                                 default = nil)
  if valid_604206 != nil:
    section.add "X-Amz-Date", valid_604206
  var valid_604207 = header.getOrDefault("X-Amz-Security-Token")
  valid_604207 = validateParameter(valid_604207, JString, required = false,
                                 default = nil)
  if valid_604207 != nil:
    section.add "X-Amz-Security-Token", valid_604207
  var valid_604208 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604208 = validateParameter(valid_604208, JString, required = false,
                                 default = nil)
  if valid_604208 != nil:
    section.add "X-Amz-Content-Sha256", valid_604208
  var valid_604209 = header.getOrDefault("X-Amz-Algorithm")
  valid_604209 = validateParameter(valid_604209, JString, required = false,
                                 default = nil)
  if valid_604209 != nil:
    section.add "X-Amz-Algorithm", valid_604209
  var valid_604210 = header.getOrDefault("X-Amz-Signature")
  valid_604210 = validateParameter(valid_604210, JString, required = false,
                                 default = nil)
  if valid_604210 != nil:
    section.add "X-Amz-Signature", valid_604210
  var valid_604211 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604211 = validateParameter(valid_604211, JString, required = false,
                                 default = nil)
  if valid_604211 != nil:
    section.add "X-Amz-SignedHeaders", valid_604211
  var valid_604212 = header.getOrDefault("X-Amz-Credential")
  valid_604212 = validateParameter(valid_604212, JString, required = false,
                                 default = nil)
  if valid_604212 != nil:
    section.add "X-Amz-Credential", valid_604212
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604213: Call_GetListImports_604199; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_604213.validator(path, query, header, formData, body)
  let scheme = call_604213.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604213.url(scheme.get, call_604213.host, call_604213.base,
                         call_604213.route, valid.getOrDefault("path"))
  result = hook(call_604213, url, valid)

proc call*(call_604214: Call_GetListImports_604199; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## getListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: string (required)
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: string (required)
  var query_604215 = newJObject()
  add(query_604215, "NextToken", newJString(NextToken))
  add(query_604215, "Action", newJString(Action))
  add(query_604215, "ExportName", newJString(ExportName))
  add(query_604215, "Version", newJString(Version))
  result = call_604214.call(nil, query_604215, nil, nil, nil)

var getListImports* = Call_GetListImports_604199(name: "getListImports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_GetListImports_604200,
    base: "/", url: url_GetListImports_604201, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackInstances_604254 = ref object of OpenApiRestCall_602433
proc url_PostListStackInstances_604256(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListStackInstances_604255(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604257 = query.getOrDefault("Action")
  valid_604257 = validateParameter(valid_604257, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_604257 != nil:
    section.add "Action", valid_604257
  var valid_604258 = query.getOrDefault("Version")
  valid_604258 = validateParameter(valid_604258, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604258 != nil:
    section.add "Version", valid_604258
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604259 = header.getOrDefault("X-Amz-Date")
  valid_604259 = validateParameter(valid_604259, JString, required = false,
                                 default = nil)
  if valid_604259 != nil:
    section.add "X-Amz-Date", valid_604259
  var valid_604260 = header.getOrDefault("X-Amz-Security-Token")
  valid_604260 = validateParameter(valid_604260, JString, required = false,
                                 default = nil)
  if valid_604260 != nil:
    section.add "X-Amz-Security-Token", valid_604260
  var valid_604261 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604261 = validateParameter(valid_604261, JString, required = false,
                                 default = nil)
  if valid_604261 != nil:
    section.add "X-Amz-Content-Sha256", valid_604261
  var valid_604262 = header.getOrDefault("X-Amz-Algorithm")
  valid_604262 = validateParameter(valid_604262, JString, required = false,
                                 default = nil)
  if valid_604262 != nil:
    section.add "X-Amz-Algorithm", valid_604262
  var valid_604263 = header.getOrDefault("X-Amz-Signature")
  valid_604263 = validateParameter(valid_604263, JString, required = false,
                                 default = nil)
  if valid_604263 != nil:
    section.add "X-Amz-Signature", valid_604263
  var valid_604264 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604264 = validateParameter(valid_604264, JString, required = false,
                                 default = nil)
  if valid_604264 != nil:
    section.add "X-Amz-SignedHeaders", valid_604264
  var valid_604265 = header.getOrDefault("X-Amz-Credential")
  valid_604265 = validateParameter(valid_604265, JString, required = false,
                                 default = nil)
  if valid_604265 != nil:
    section.add "X-Amz-Credential", valid_604265
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  section = newJObject()
  var valid_604266 = formData.getOrDefault("NextToken")
  valid_604266 = validateParameter(valid_604266, JString, required = false,
                                 default = nil)
  if valid_604266 != nil:
    section.add "NextToken", valid_604266
  var valid_604267 = formData.getOrDefault("MaxResults")
  valid_604267 = validateParameter(valid_604267, JInt, required = false, default = nil)
  if valid_604267 != nil:
    section.add "MaxResults", valid_604267
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604268 = formData.getOrDefault("StackSetName")
  valid_604268 = validateParameter(valid_604268, JString, required = true,
                                 default = nil)
  if valid_604268 != nil:
    section.add "StackSetName", valid_604268
  var valid_604269 = formData.getOrDefault("StackInstanceRegion")
  valid_604269 = validateParameter(valid_604269, JString, required = false,
                                 default = nil)
  if valid_604269 != nil:
    section.add "StackInstanceRegion", valid_604269
  var valid_604270 = formData.getOrDefault("StackInstanceAccount")
  valid_604270 = validateParameter(valid_604270, JString, required = false,
                                 default = nil)
  if valid_604270 != nil:
    section.add "StackInstanceAccount", valid_604270
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604271: Call_PostListStackInstances_604254; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_604271.validator(path, query, header, formData, body)
  let scheme = call_604271.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604271.url(scheme.get, call_604271.host, call_604271.base,
                         call_604271.route, valid.getOrDefault("path"))
  result = hook(call_604271, url, valid)

proc call*(call_604272: Call_PostListStackInstances_604254; StackSetName: string;
          NextToken: string = ""; MaxResults: int = 0;
          Action: string = "ListStackInstances"; StackInstanceRegion: string = "";
          StackInstanceAccount: string = ""; Version: string = "2010-05-15"): Recallable =
  ## postListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   Action: string (required)
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   Version: string (required)
  var query_604273 = newJObject()
  var formData_604274 = newJObject()
  add(formData_604274, "NextToken", newJString(NextToken))
  add(formData_604274, "MaxResults", newJInt(MaxResults))
  add(formData_604274, "StackSetName", newJString(StackSetName))
  add(query_604273, "Action", newJString(Action))
  add(formData_604274, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_604274, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_604273, "Version", newJString(Version))
  result = call_604272.call(nil, query_604273, nil, formData_604274, nil)

var postListStackInstances* = Call_PostListStackInstances_604254(
    name: "postListStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_PostListStackInstances_604255, base: "/",
    url: url_PostListStackInstances_604256, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackInstances_604234 = ref object of OpenApiRestCall_602433
proc url_GetListStackInstances_604236(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListStackInstances_604235(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_604237 = query.getOrDefault("StackInstanceRegion")
  valid_604237 = validateParameter(valid_604237, JString, required = false,
                                 default = nil)
  if valid_604237 != nil:
    section.add "StackInstanceRegion", valid_604237
  var valid_604238 = query.getOrDefault("NextToken")
  valid_604238 = validateParameter(valid_604238, JString, required = false,
                                 default = nil)
  if valid_604238 != nil:
    section.add "NextToken", valid_604238
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604239 = query.getOrDefault("Action")
  valid_604239 = validateParameter(valid_604239, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_604239 != nil:
    section.add "Action", valid_604239
  var valid_604240 = query.getOrDefault("StackInstanceAccount")
  valid_604240 = validateParameter(valid_604240, JString, required = false,
                                 default = nil)
  if valid_604240 != nil:
    section.add "StackInstanceAccount", valid_604240
  var valid_604241 = query.getOrDefault("StackSetName")
  valid_604241 = validateParameter(valid_604241, JString, required = true,
                                 default = nil)
  if valid_604241 != nil:
    section.add "StackSetName", valid_604241
  var valid_604242 = query.getOrDefault("Version")
  valid_604242 = validateParameter(valid_604242, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604242 != nil:
    section.add "Version", valid_604242
  var valid_604243 = query.getOrDefault("MaxResults")
  valid_604243 = validateParameter(valid_604243, JInt, required = false, default = nil)
  if valid_604243 != nil:
    section.add "MaxResults", valid_604243
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604244 = header.getOrDefault("X-Amz-Date")
  valid_604244 = validateParameter(valid_604244, JString, required = false,
                                 default = nil)
  if valid_604244 != nil:
    section.add "X-Amz-Date", valid_604244
  var valid_604245 = header.getOrDefault("X-Amz-Security-Token")
  valid_604245 = validateParameter(valid_604245, JString, required = false,
                                 default = nil)
  if valid_604245 != nil:
    section.add "X-Amz-Security-Token", valid_604245
  var valid_604246 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604246 = validateParameter(valid_604246, JString, required = false,
                                 default = nil)
  if valid_604246 != nil:
    section.add "X-Amz-Content-Sha256", valid_604246
  var valid_604247 = header.getOrDefault("X-Amz-Algorithm")
  valid_604247 = validateParameter(valid_604247, JString, required = false,
                                 default = nil)
  if valid_604247 != nil:
    section.add "X-Amz-Algorithm", valid_604247
  var valid_604248 = header.getOrDefault("X-Amz-Signature")
  valid_604248 = validateParameter(valid_604248, JString, required = false,
                                 default = nil)
  if valid_604248 != nil:
    section.add "X-Amz-Signature", valid_604248
  var valid_604249 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604249 = validateParameter(valid_604249, JString, required = false,
                                 default = nil)
  if valid_604249 != nil:
    section.add "X-Amz-SignedHeaders", valid_604249
  var valid_604250 = header.getOrDefault("X-Amz-Credential")
  valid_604250 = validateParameter(valid_604250, JString, required = false,
                                 default = nil)
  if valid_604250 != nil:
    section.add "X-Amz-Credential", valid_604250
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604251: Call_GetListStackInstances_604234; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_604251.validator(path, query, header, formData, body)
  let scheme = call_604251.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604251.url(scheme.get, call_604251.host, call_604251.base,
                         call_604251.route, valid.getOrDefault("path"))
  result = hook(call_604251, url, valid)

proc call*(call_604252: Call_GetListStackInstances_604234; StackSetName: string;
          StackInstanceRegion: string = ""; NextToken: string = "";
          Action: string = "ListStackInstances"; StackInstanceAccount: string = "";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_604253 = newJObject()
  add(query_604253, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_604253, "NextToken", newJString(NextToken))
  add(query_604253, "Action", newJString(Action))
  add(query_604253, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_604253, "StackSetName", newJString(StackSetName))
  add(query_604253, "Version", newJString(Version))
  add(query_604253, "MaxResults", newJInt(MaxResults))
  result = call_604252.call(nil, query_604253, nil, nil, nil)

var getListStackInstances* = Call_GetListStackInstances_604234(
    name: "getListStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_GetListStackInstances_604235, base: "/",
    url: url_GetListStackInstances_604236, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackResources_604292 = ref object of OpenApiRestCall_602433
proc url_PostListStackResources_604294(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListStackResources_604293(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604295 = query.getOrDefault("Action")
  valid_604295 = validateParameter(valid_604295, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_604295 != nil:
    section.add "Action", valid_604295
  var valid_604296 = query.getOrDefault("Version")
  valid_604296 = validateParameter(valid_604296, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604296 != nil:
    section.add "Version", valid_604296
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604297 = header.getOrDefault("X-Amz-Date")
  valid_604297 = validateParameter(valid_604297, JString, required = false,
                                 default = nil)
  if valid_604297 != nil:
    section.add "X-Amz-Date", valid_604297
  var valid_604298 = header.getOrDefault("X-Amz-Security-Token")
  valid_604298 = validateParameter(valid_604298, JString, required = false,
                                 default = nil)
  if valid_604298 != nil:
    section.add "X-Amz-Security-Token", valid_604298
  var valid_604299 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604299 = validateParameter(valid_604299, JString, required = false,
                                 default = nil)
  if valid_604299 != nil:
    section.add "X-Amz-Content-Sha256", valid_604299
  var valid_604300 = header.getOrDefault("X-Amz-Algorithm")
  valid_604300 = validateParameter(valid_604300, JString, required = false,
                                 default = nil)
  if valid_604300 != nil:
    section.add "X-Amz-Algorithm", valid_604300
  var valid_604301 = header.getOrDefault("X-Amz-Signature")
  valid_604301 = validateParameter(valid_604301, JString, required = false,
                                 default = nil)
  if valid_604301 != nil:
    section.add "X-Amz-Signature", valid_604301
  var valid_604302 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604302 = validateParameter(valid_604302, JString, required = false,
                                 default = nil)
  if valid_604302 != nil:
    section.add "X-Amz-SignedHeaders", valid_604302
  var valid_604303 = header.getOrDefault("X-Amz-Credential")
  valid_604303 = validateParameter(valid_604303, JString, required = false,
                                 default = nil)
  if valid_604303 != nil:
    section.add "X-Amz-Credential", valid_604303
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_604304 = formData.getOrDefault("NextToken")
  valid_604304 = validateParameter(valid_604304, JString, required = false,
                                 default = nil)
  if valid_604304 != nil:
    section.add "NextToken", valid_604304
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_604305 = formData.getOrDefault("StackName")
  valid_604305 = validateParameter(valid_604305, JString, required = true,
                                 default = nil)
  if valid_604305 != nil:
    section.add "StackName", valid_604305
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604306: Call_PostListStackResources_604292; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_604306.validator(path, query, header, formData, body)
  let scheme = call_604306.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604306.url(scheme.get, call_604306.host, call_604306.base,
                         call_604306.route, valid.getOrDefault("path"))
  result = hook(call_604306, url, valid)

proc call*(call_604307: Call_PostListStackResources_604292; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## postListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Version: string (required)
  var query_604308 = newJObject()
  var formData_604309 = newJObject()
  add(formData_604309, "NextToken", newJString(NextToken))
  add(query_604308, "Action", newJString(Action))
  add(formData_604309, "StackName", newJString(StackName))
  add(query_604308, "Version", newJString(Version))
  result = call_604307.call(nil, query_604308, nil, formData_604309, nil)

var postListStackResources* = Call_PostListStackResources_604292(
    name: "postListStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_PostListStackResources_604293, base: "/",
    url: url_PostListStackResources_604294, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackResources_604275 = ref object of OpenApiRestCall_602433
proc url_GetListStackResources_604277(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListStackResources_604276(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_604278 = query.getOrDefault("NextToken")
  valid_604278 = validateParameter(valid_604278, JString, required = false,
                                 default = nil)
  if valid_604278 != nil:
    section.add "NextToken", valid_604278
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604279 = query.getOrDefault("Action")
  valid_604279 = validateParameter(valid_604279, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_604279 != nil:
    section.add "Action", valid_604279
  var valid_604280 = query.getOrDefault("Version")
  valid_604280 = validateParameter(valid_604280, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604280 != nil:
    section.add "Version", valid_604280
  var valid_604281 = query.getOrDefault("StackName")
  valid_604281 = validateParameter(valid_604281, JString, required = true,
                                 default = nil)
  if valid_604281 != nil:
    section.add "StackName", valid_604281
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604282 = header.getOrDefault("X-Amz-Date")
  valid_604282 = validateParameter(valid_604282, JString, required = false,
                                 default = nil)
  if valid_604282 != nil:
    section.add "X-Amz-Date", valid_604282
  var valid_604283 = header.getOrDefault("X-Amz-Security-Token")
  valid_604283 = validateParameter(valid_604283, JString, required = false,
                                 default = nil)
  if valid_604283 != nil:
    section.add "X-Amz-Security-Token", valid_604283
  var valid_604284 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604284 = validateParameter(valid_604284, JString, required = false,
                                 default = nil)
  if valid_604284 != nil:
    section.add "X-Amz-Content-Sha256", valid_604284
  var valid_604285 = header.getOrDefault("X-Amz-Algorithm")
  valid_604285 = validateParameter(valid_604285, JString, required = false,
                                 default = nil)
  if valid_604285 != nil:
    section.add "X-Amz-Algorithm", valid_604285
  var valid_604286 = header.getOrDefault("X-Amz-Signature")
  valid_604286 = validateParameter(valid_604286, JString, required = false,
                                 default = nil)
  if valid_604286 != nil:
    section.add "X-Amz-Signature", valid_604286
  var valid_604287 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604287 = validateParameter(valid_604287, JString, required = false,
                                 default = nil)
  if valid_604287 != nil:
    section.add "X-Amz-SignedHeaders", valid_604287
  var valid_604288 = header.getOrDefault("X-Amz-Credential")
  valid_604288 = validateParameter(valid_604288, JString, required = false,
                                 default = nil)
  if valid_604288 != nil:
    section.add "X-Amz-Credential", valid_604288
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604289: Call_GetListStackResources_604275; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_604289.validator(path, query, header, formData, body)
  let scheme = call_604289.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604289.url(scheme.get, call_604289.host, call_604289.base,
                         call_604289.route, valid.getOrDefault("path"))
  result = hook(call_604289, url, valid)

proc call*(call_604290: Call_GetListStackResources_604275; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  var query_604291 = newJObject()
  add(query_604291, "NextToken", newJString(NextToken))
  add(query_604291, "Action", newJString(Action))
  add(query_604291, "Version", newJString(Version))
  add(query_604291, "StackName", newJString(StackName))
  result = call_604290.call(nil, query_604291, nil, nil, nil)

var getListStackResources* = Call_GetListStackResources_604275(
    name: "getListStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_GetListStackResources_604276, base: "/",
    url: url_GetListStackResources_604277, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperationResults_604329 = ref object of OpenApiRestCall_602433
proc url_PostListStackSetOperationResults_604331(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListStackSetOperationResults_604330(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604332 = query.getOrDefault("Action")
  valid_604332 = validateParameter(valid_604332, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_604332 != nil:
    section.add "Action", valid_604332
  var valid_604333 = query.getOrDefault("Version")
  valid_604333 = validateParameter(valid_604333, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604333 != nil:
    section.add "Version", valid_604333
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604334 = header.getOrDefault("X-Amz-Date")
  valid_604334 = validateParameter(valid_604334, JString, required = false,
                                 default = nil)
  if valid_604334 != nil:
    section.add "X-Amz-Date", valid_604334
  var valid_604335 = header.getOrDefault("X-Amz-Security-Token")
  valid_604335 = validateParameter(valid_604335, JString, required = false,
                                 default = nil)
  if valid_604335 != nil:
    section.add "X-Amz-Security-Token", valid_604335
  var valid_604336 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604336 = validateParameter(valid_604336, JString, required = false,
                                 default = nil)
  if valid_604336 != nil:
    section.add "X-Amz-Content-Sha256", valid_604336
  var valid_604337 = header.getOrDefault("X-Amz-Algorithm")
  valid_604337 = validateParameter(valid_604337, JString, required = false,
                                 default = nil)
  if valid_604337 != nil:
    section.add "X-Amz-Algorithm", valid_604337
  var valid_604338 = header.getOrDefault("X-Amz-Signature")
  valid_604338 = validateParameter(valid_604338, JString, required = false,
                                 default = nil)
  if valid_604338 != nil:
    section.add "X-Amz-Signature", valid_604338
  var valid_604339 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604339 = validateParameter(valid_604339, JString, required = false,
                                 default = nil)
  if valid_604339 != nil:
    section.add "X-Amz-SignedHeaders", valid_604339
  var valid_604340 = header.getOrDefault("X-Amz-Credential")
  valid_604340 = validateParameter(valid_604340, JString, required = false,
                                 default = nil)
  if valid_604340 != nil:
    section.add "X-Amz-Credential", valid_604340
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  section = newJObject()
  var valid_604341 = formData.getOrDefault("NextToken")
  valid_604341 = validateParameter(valid_604341, JString, required = false,
                                 default = nil)
  if valid_604341 != nil:
    section.add "NextToken", valid_604341
  var valid_604342 = formData.getOrDefault("MaxResults")
  valid_604342 = validateParameter(valid_604342, JInt, required = false, default = nil)
  if valid_604342 != nil:
    section.add "MaxResults", valid_604342
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604343 = formData.getOrDefault("StackSetName")
  valid_604343 = validateParameter(valid_604343, JString, required = true,
                                 default = nil)
  if valid_604343 != nil:
    section.add "StackSetName", valid_604343
  var valid_604344 = formData.getOrDefault("OperationId")
  valid_604344 = validateParameter(valid_604344, JString, required = true,
                                 default = nil)
  if valid_604344 != nil:
    section.add "OperationId", valid_604344
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604345: Call_PostListStackSetOperationResults_604329;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_604345.validator(path, query, header, formData, body)
  let scheme = call_604345.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604345.url(scheme.get, call_604345.host, call_604345.base,
                         call_604345.route, valid.getOrDefault("path"))
  result = hook(call_604345, url, valid)

proc call*(call_604346: Call_PostListStackSetOperationResults_604329;
          StackSetName: string; OperationId: string; NextToken: string = "";
          MaxResults: int = 0; Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"): Recallable =
  ## postListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   Action: string (required)
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   Version: string (required)
  var query_604347 = newJObject()
  var formData_604348 = newJObject()
  add(formData_604348, "NextToken", newJString(NextToken))
  add(formData_604348, "MaxResults", newJInt(MaxResults))
  add(formData_604348, "StackSetName", newJString(StackSetName))
  add(query_604347, "Action", newJString(Action))
  add(formData_604348, "OperationId", newJString(OperationId))
  add(query_604347, "Version", newJString(Version))
  result = call_604346.call(nil, query_604347, nil, formData_604348, nil)

var postListStackSetOperationResults* = Call_PostListStackSetOperationResults_604329(
    name: "postListStackSetOperationResults", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_PostListStackSetOperationResults_604330, base: "/",
    url: url_PostListStackSetOperationResults_604331,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperationResults_604310 = ref object of OpenApiRestCall_602433
proc url_GetListStackSetOperationResults_604312(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListStackSetOperationResults_604311(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_604313 = query.getOrDefault("NextToken")
  valid_604313 = validateParameter(valid_604313, JString, required = false,
                                 default = nil)
  if valid_604313 != nil:
    section.add "NextToken", valid_604313
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604314 = query.getOrDefault("Action")
  valid_604314 = validateParameter(valid_604314, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_604314 != nil:
    section.add "Action", valid_604314
  var valid_604315 = query.getOrDefault("StackSetName")
  valid_604315 = validateParameter(valid_604315, JString, required = true,
                                 default = nil)
  if valid_604315 != nil:
    section.add "StackSetName", valid_604315
  var valid_604316 = query.getOrDefault("OperationId")
  valid_604316 = validateParameter(valid_604316, JString, required = true,
                                 default = nil)
  if valid_604316 != nil:
    section.add "OperationId", valid_604316
  var valid_604317 = query.getOrDefault("Version")
  valid_604317 = validateParameter(valid_604317, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604317 != nil:
    section.add "Version", valid_604317
  var valid_604318 = query.getOrDefault("MaxResults")
  valid_604318 = validateParameter(valid_604318, JInt, required = false, default = nil)
  if valid_604318 != nil:
    section.add "MaxResults", valid_604318
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604319 = header.getOrDefault("X-Amz-Date")
  valid_604319 = validateParameter(valid_604319, JString, required = false,
                                 default = nil)
  if valid_604319 != nil:
    section.add "X-Amz-Date", valid_604319
  var valid_604320 = header.getOrDefault("X-Amz-Security-Token")
  valid_604320 = validateParameter(valid_604320, JString, required = false,
                                 default = nil)
  if valid_604320 != nil:
    section.add "X-Amz-Security-Token", valid_604320
  var valid_604321 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604321 = validateParameter(valid_604321, JString, required = false,
                                 default = nil)
  if valid_604321 != nil:
    section.add "X-Amz-Content-Sha256", valid_604321
  var valid_604322 = header.getOrDefault("X-Amz-Algorithm")
  valid_604322 = validateParameter(valid_604322, JString, required = false,
                                 default = nil)
  if valid_604322 != nil:
    section.add "X-Amz-Algorithm", valid_604322
  var valid_604323 = header.getOrDefault("X-Amz-Signature")
  valid_604323 = validateParameter(valid_604323, JString, required = false,
                                 default = nil)
  if valid_604323 != nil:
    section.add "X-Amz-Signature", valid_604323
  var valid_604324 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604324 = validateParameter(valid_604324, JString, required = false,
                                 default = nil)
  if valid_604324 != nil:
    section.add "X-Amz-SignedHeaders", valid_604324
  var valid_604325 = header.getOrDefault("X-Amz-Credential")
  valid_604325 = validateParameter(valid_604325, JString, required = false,
                                 default = nil)
  if valid_604325 != nil:
    section.add "X-Amz-Credential", valid_604325
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604326: Call_GetListStackSetOperationResults_604310;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_604326.validator(path, query, header, formData, body)
  let scheme = call_604326.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604326.url(scheme.get, call_604326.host, call_604326.base,
                         call_604326.route, valid.getOrDefault("path"))
  result = hook(call_604326, url, valid)

proc call*(call_604327: Call_GetListStackSetOperationResults_604310;
          StackSetName: string; OperationId: string; NextToken: string = "";
          Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_604328 = newJObject()
  add(query_604328, "NextToken", newJString(NextToken))
  add(query_604328, "Action", newJString(Action))
  add(query_604328, "StackSetName", newJString(StackSetName))
  add(query_604328, "OperationId", newJString(OperationId))
  add(query_604328, "Version", newJString(Version))
  add(query_604328, "MaxResults", newJInt(MaxResults))
  result = call_604327.call(nil, query_604328, nil, nil, nil)

var getListStackSetOperationResults* = Call_GetListStackSetOperationResults_604310(
    name: "getListStackSetOperationResults", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_GetListStackSetOperationResults_604311, base: "/",
    url: url_GetListStackSetOperationResults_604312,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperations_604367 = ref object of OpenApiRestCall_602433
proc url_PostListStackSetOperations_604369(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListStackSetOperations_604368(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604370 = query.getOrDefault("Action")
  valid_604370 = validateParameter(valid_604370, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_604370 != nil:
    section.add "Action", valid_604370
  var valid_604371 = query.getOrDefault("Version")
  valid_604371 = validateParameter(valid_604371, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604371 != nil:
    section.add "Version", valid_604371
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604372 = header.getOrDefault("X-Amz-Date")
  valid_604372 = validateParameter(valid_604372, JString, required = false,
                                 default = nil)
  if valid_604372 != nil:
    section.add "X-Amz-Date", valid_604372
  var valid_604373 = header.getOrDefault("X-Amz-Security-Token")
  valid_604373 = validateParameter(valid_604373, JString, required = false,
                                 default = nil)
  if valid_604373 != nil:
    section.add "X-Amz-Security-Token", valid_604373
  var valid_604374 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604374 = validateParameter(valid_604374, JString, required = false,
                                 default = nil)
  if valid_604374 != nil:
    section.add "X-Amz-Content-Sha256", valid_604374
  var valid_604375 = header.getOrDefault("X-Amz-Algorithm")
  valid_604375 = validateParameter(valid_604375, JString, required = false,
                                 default = nil)
  if valid_604375 != nil:
    section.add "X-Amz-Algorithm", valid_604375
  var valid_604376 = header.getOrDefault("X-Amz-Signature")
  valid_604376 = validateParameter(valid_604376, JString, required = false,
                                 default = nil)
  if valid_604376 != nil:
    section.add "X-Amz-Signature", valid_604376
  var valid_604377 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604377 = validateParameter(valid_604377, JString, required = false,
                                 default = nil)
  if valid_604377 != nil:
    section.add "X-Amz-SignedHeaders", valid_604377
  var valid_604378 = header.getOrDefault("X-Amz-Credential")
  valid_604378 = validateParameter(valid_604378, JString, required = false,
                                 default = nil)
  if valid_604378 != nil:
    section.add "X-Amz-Credential", valid_604378
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  section = newJObject()
  var valid_604379 = formData.getOrDefault("NextToken")
  valid_604379 = validateParameter(valid_604379, JString, required = false,
                                 default = nil)
  if valid_604379 != nil:
    section.add "NextToken", valid_604379
  var valid_604380 = formData.getOrDefault("MaxResults")
  valid_604380 = validateParameter(valid_604380, JInt, required = false, default = nil)
  if valid_604380 != nil:
    section.add "MaxResults", valid_604380
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604381 = formData.getOrDefault("StackSetName")
  valid_604381 = validateParameter(valid_604381, JString, required = true,
                                 default = nil)
  if valid_604381 != nil:
    section.add "StackSetName", valid_604381
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604382: Call_PostListStackSetOperations_604367; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_604382.validator(path, query, header, formData, body)
  let scheme = call_604382.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604382.url(scheme.get, call_604382.host, call_604382.base,
                         call_604382.route, valid.getOrDefault("path"))
  result = hook(call_604382, url, valid)

proc call*(call_604383: Call_PostListStackSetOperations_604367;
          StackSetName: string; NextToken: string = ""; MaxResults: int = 0;
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15"): Recallable =
  ## postListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604384 = newJObject()
  var formData_604385 = newJObject()
  add(formData_604385, "NextToken", newJString(NextToken))
  add(formData_604385, "MaxResults", newJInt(MaxResults))
  add(formData_604385, "StackSetName", newJString(StackSetName))
  add(query_604384, "Action", newJString(Action))
  add(query_604384, "Version", newJString(Version))
  result = call_604383.call(nil, query_604384, nil, formData_604385, nil)

var postListStackSetOperations* = Call_PostListStackSetOperations_604367(
    name: "postListStackSetOperations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_PostListStackSetOperations_604368, base: "/",
    url: url_PostListStackSetOperations_604369,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperations_604349 = ref object of OpenApiRestCall_602433
proc url_GetListStackSetOperations_604351(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListStackSetOperations_604350(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_604352 = query.getOrDefault("NextToken")
  valid_604352 = validateParameter(valid_604352, JString, required = false,
                                 default = nil)
  if valid_604352 != nil:
    section.add "NextToken", valid_604352
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604353 = query.getOrDefault("Action")
  valid_604353 = validateParameter(valid_604353, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_604353 != nil:
    section.add "Action", valid_604353
  var valid_604354 = query.getOrDefault("StackSetName")
  valid_604354 = validateParameter(valid_604354, JString, required = true,
                                 default = nil)
  if valid_604354 != nil:
    section.add "StackSetName", valid_604354
  var valid_604355 = query.getOrDefault("Version")
  valid_604355 = validateParameter(valid_604355, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604355 != nil:
    section.add "Version", valid_604355
  var valid_604356 = query.getOrDefault("MaxResults")
  valid_604356 = validateParameter(valid_604356, JInt, required = false, default = nil)
  if valid_604356 != nil:
    section.add "MaxResults", valid_604356
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604357 = header.getOrDefault("X-Amz-Date")
  valid_604357 = validateParameter(valid_604357, JString, required = false,
                                 default = nil)
  if valid_604357 != nil:
    section.add "X-Amz-Date", valid_604357
  var valid_604358 = header.getOrDefault("X-Amz-Security-Token")
  valid_604358 = validateParameter(valid_604358, JString, required = false,
                                 default = nil)
  if valid_604358 != nil:
    section.add "X-Amz-Security-Token", valid_604358
  var valid_604359 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604359 = validateParameter(valid_604359, JString, required = false,
                                 default = nil)
  if valid_604359 != nil:
    section.add "X-Amz-Content-Sha256", valid_604359
  var valid_604360 = header.getOrDefault("X-Amz-Algorithm")
  valid_604360 = validateParameter(valid_604360, JString, required = false,
                                 default = nil)
  if valid_604360 != nil:
    section.add "X-Amz-Algorithm", valid_604360
  var valid_604361 = header.getOrDefault("X-Amz-Signature")
  valid_604361 = validateParameter(valid_604361, JString, required = false,
                                 default = nil)
  if valid_604361 != nil:
    section.add "X-Amz-Signature", valid_604361
  var valid_604362 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604362 = validateParameter(valid_604362, JString, required = false,
                                 default = nil)
  if valid_604362 != nil:
    section.add "X-Amz-SignedHeaders", valid_604362
  var valid_604363 = header.getOrDefault("X-Amz-Credential")
  valid_604363 = validateParameter(valid_604363, JString, required = false,
                                 default = nil)
  if valid_604363 != nil:
    section.add "X-Amz-Credential", valid_604363
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604364: Call_GetListStackSetOperations_604349; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_604364.validator(path, query, header, formData, body)
  let scheme = call_604364.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604364.url(scheme.get, call_604364.host, call_604364.base,
                         call_604364.route, valid.getOrDefault("path"))
  result = hook(call_604364, url, valid)

proc call*(call_604365: Call_GetListStackSetOperations_604349;
          StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## getListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_604366 = newJObject()
  add(query_604366, "NextToken", newJString(NextToken))
  add(query_604366, "Action", newJString(Action))
  add(query_604366, "StackSetName", newJString(StackSetName))
  add(query_604366, "Version", newJString(Version))
  add(query_604366, "MaxResults", newJInt(MaxResults))
  result = call_604365.call(nil, query_604366, nil, nil, nil)

var getListStackSetOperations* = Call_GetListStackSetOperations_604349(
    name: "getListStackSetOperations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_GetListStackSetOperations_604350, base: "/",
    url: url_GetListStackSetOperations_604351,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSets_604404 = ref object of OpenApiRestCall_602433
proc url_PostListStackSets_604406(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListStackSets_604405(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604407 = query.getOrDefault("Action")
  valid_604407 = validateParameter(valid_604407, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_604407 != nil:
    section.add "Action", valid_604407
  var valid_604408 = query.getOrDefault("Version")
  valid_604408 = validateParameter(valid_604408, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604408 != nil:
    section.add "Version", valid_604408
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604409 = header.getOrDefault("X-Amz-Date")
  valid_604409 = validateParameter(valid_604409, JString, required = false,
                                 default = nil)
  if valid_604409 != nil:
    section.add "X-Amz-Date", valid_604409
  var valid_604410 = header.getOrDefault("X-Amz-Security-Token")
  valid_604410 = validateParameter(valid_604410, JString, required = false,
                                 default = nil)
  if valid_604410 != nil:
    section.add "X-Amz-Security-Token", valid_604410
  var valid_604411 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604411 = validateParameter(valid_604411, JString, required = false,
                                 default = nil)
  if valid_604411 != nil:
    section.add "X-Amz-Content-Sha256", valid_604411
  var valid_604412 = header.getOrDefault("X-Amz-Algorithm")
  valid_604412 = validateParameter(valid_604412, JString, required = false,
                                 default = nil)
  if valid_604412 != nil:
    section.add "X-Amz-Algorithm", valid_604412
  var valid_604413 = header.getOrDefault("X-Amz-Signature")
  valid_604413 = validateParameter(valid_604413, JString, required = false,
                                 default = nil)
  if valid_604413 != nil:
    section.add "X-Amz-Signature", valid_604413
  var valid_604414 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604414 = validateParameter(valid_604414, JString, required = false,
                                 default = nil)
  if valid_604414 != nil:
    section.add "X-Amz-SignedHeaders", valid_604414
  var valid_604415 = header.getOrDefault("X-Amz-Credential")
  valid_604415 = validateParameter(valid_604415, JString, required = false,
                                 default = nil)
  if valid_604415 != nil:
    section.add "X-Amz-Credential", valid_604415
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  section = newJObject()
  var valid_604416 = formData.getOrDefault("NextToken")
  valid_604416 = validateParameter(valid_604416, JString, required = false,
                                 default = nil)
  if valid_604416 != nil:
    section.add "NextToken", valid_604416
  var valid_604417 = formData.getOrDefault("MaxResults")
  valid_604417 = validateParameter(valid_604417, JInt, required = false, default = nil)
  if valid_604417 != nil:
    section.add "MaxResults", valid_604417
  var valid_604418 = formData.getOrDefault("Status")
  valid_604418 = validateParameter(valid_604418, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_604418 != nil:
    section.add "Status", valid_604418
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604419: Call_PostListStackSets_604404; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_604419.validator(path, query, header, formData, body)
  let scheme = call_604419.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604419.url(scheme.get, call_604419.host, call_604419.base,
                         call_604419.route, valid.getOrDefault("path"))
  result = hook(call_604419, url, valid)

proc call*(call_604420: Call_PostListStackSets_604404; NextToken: string = "";
          MaxResults: int = 0; Status: string = "ACTIVE";
          Action: string = "ListStackSets"; Version: string = "2010-05-15"): Recallable =
  ## postListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604421 = newJObject()
  var formData_604422 = newJObject()
  add(formData_604422, "NextToken", newJString(NextToken))
  add(formData_604422, "MaxResults", newJInt(MaxResults))
  add(formData_604422, "Status", newJString(Status))
  add(query_604421, "Action", newJString(Action))
  add(query_604421, "Version", newJString(Version))
  result = call_604420.call(nil, query_604421, nil, formData_604422, nil)

var postListStackSets* = Call_PostListStackSets_604404(name: "postListStackSets",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_PostListStackSets_604405,
    base: "/", url: url_PostListStackSets_604406,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSets_604386 = ref object of OpenApiRestCall_602433
proc url_GetListStackSets_604388(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListStackSets_604387(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_604389 = query.getOrDefault("Status")
  valid_604389 = validateParameter(valid_604389, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_604389 != nil:
    section.add "Status", valid_604389
  var valid_604390 = query.getOrDefault("NextToken")
  valid_604390 = validateParameter(valid_604390, JString, required = false,
                                 default = nil)
  if valid_604390 != nil:
    section.add "NextToken", valid_604390
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604391 = query.getOrDefault("Action")
  valid_604391 = validateParameter(valid_604391, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_604391 != nil:
    section.add "Action", valid_604391
  var valid_604392 = query.getOrDefault("Version")
  valid_604392 = validateParameter(valid_604392, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604392 != nil:
    section.add "Version", valid_604392
  var valid_604393 = query.getOrDefault("MaxResults")
  valid_604393 = validateParameter(valid_604393, JInt, required = false, default = nil)
  if valid_604393 != nil:
    section.add "MaxResults", valid_604393
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604394 = header.getOrDefault("X-Amz-Date")
  valid_604394 = validateParameter(valid_604394, JString, required = false,
                                 default = nil)
  if valid_604394 != nil:
    section.add "X-Amz-Date", valid_604394
  var valid_604395 = header.getOrDefault("X-Amz-Security-Token")
  valid_604395 = validateParameter(valid_604395, JString, required = false,
                                 default = nil)
  if valid_604395 != nil:
    section.add "X-Amz-Security-Token", valid_604395
  var valid_604396 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604396 = validateParameter(valid_604396, JString, required = false,
                                 default = nil)
  if valid_604396 != nil:
    section.add "X-Amz-Content-Sha256", valid_604396
  var valid_604397 = header.getOrDefault("X-Amz-Algorithm")
  valid_604397 = validateParameter(valid_604397, JString, required = false,
                                 default = nil)
  if valid_604397 != nil:
    section.add "X-Amz-Algorithm", valid_604397
  var valid_604398 = header.getOrDefault("X-Amz-Signature")
  valid_604398 = validateParameter(valid_604398, JString, required = false,
                                 default = nil)
  if valid_604398 != nil:
    section.add "X-Amz-Signature", valid_604398
  var valid_604399 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604399 = validateParameter(valid_604399, JString, required = false,
                                 default = nil)
  if valid_604399 != nil:
    section.add "X-Amz-SignedHeaders", valid_604399
  var valid_604400 = header.getOrDefault("X-Amz-Credential")
  valid_604400 = validateParameter(valid_604400, JString, required = false,
                                 default = nil)
  if valid_604400 != nil:
    section.add "X-Amz-Credential", valid_604400
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604401: Call_GetListStackSets_604386; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_604401.validator(path, query, header, formData, body)
  let scheme = call_604401.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604401.url(scheme.get, call_604401.host, call_604401.base,
                         call_604401.route, valid.getOrDefault("path"))
  result = hook(call_604401, url, valid)

proc call*(call_604402: Call_GetListStackSets_604386; Status: string = "ACTIVE";
          NextToken: string = ""; Action: string = "ListStackSets";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## getListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_604403 = newJObject()
  add(query_604403, "Status", newJString(Status))
  add(query_604403, "NextToken", newJString(NextToken))
  add(query_604403, "Action", newJString(Action))
  add(query_604403, "Version", newJString(Version))
  add(query_604403, "MaxResults", newJInt(MaxResults))
  result = call_604402.call(nil, query_604403, nil, nil, nil)

var getListStackSets* = Call_GetListStackSets_604386(name: "getListStackSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_GetListStackSets_604387,
    base: "/", url: url_GetListStackSets_604388,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStacks_604440 = ref object of OpenApiRestCall_602433
proc url_PostListStacks_604442(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostListStacks_604441(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604443 = query.getOrDefault("Action")
  valid_604443 = validateParameter(valid_604443, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_604443 != nil:
    section.add "Action", valid_604443
  var valid_604444 = query.getOrDefault("Version")
  valid_604444 = validateParameter(valid_604444, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604444 != nil:
    section.add "Version", valid_604444
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604445 = header.getOrDefault("X-Amz-Date")
  valid_604445 = validateParameter(valid_604445, JString, required = false,
                                 default = nil)
  if valid_604445 != nil:
    section.add "X-Amz-Date", valid_604445
  var valid_604446 = header.getOrDefault("X-Amz-Security-Token")
  valid_604446 = validateParameter(valid_604446, JString, required = false,
                                 default = nil)
  if valid_604446 != nil:
    section.add "X-Amz-Security-Token", valid_604446
  var valid_604447 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604447 = validateParameter(valid_604447, JString, required = false,
                                 default = nil)
  if valid_604447 != nil:
    section.add "X-Amz-Content-Sha256", valid_604447
  var valid_604448 = header.getOrDefault("X-Amz-Algorithm")
  valid_604448 = validateParameter(valid_604448, JString, required = false,
                                 default = nil)
  if valid_604448 != nil:
    section.add "X-Amz-Algorithm", valid_604448
  var valid_604449 = header.getOrDefault("X-Amz-Signature")
  valid_604449 = validateParameter(valid_604449, JString, required = false,
                                 default = nil)
  if valid_604449 != nil:
    section.add "X-Amz-Signature", valid_604449
  var valid_604450 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604450 = validateParameter(valid_604450, JString, required = false,
                                 default = nil)
  if valid_604450 != nil:
    section.add "X-Amz-SignedHeaders", valid_604450
  var valid_604451 = header.getOrDefault("X-Amz-Credential")
  valid_604451 = validateParameter(valid_604451, JString, required = false,
                                 default = nil)
  if valid_604451 != nil:
    section.add "X-Amz-Credential", valid_604451
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  section = newJObject()
  var valid_604452 = formData.getOrDefault("NextToken")
  valid_604452 = validateParameter(valid_604452, JString, required = false,
                                 default = nil)
  if valid_604452 != nil:
    section.add "NextToken", valid_604452
  var valid_604453 = formData.getOrDefault("StackStatusFilter")
  valid_604453 = validateParameter(valid_604453, JArray, required = false,
                                 default = nil)
  if valid_604453 != nil:
    section.add "StackStatusFilter", valid_604453
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604454: Call_PostListStacks_604440; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_604454.validator(path, query, header, formData, body)
  let scheme = call_604454.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604454.url(scheme.get, call_604454.host, call_604454.base,
                         call_604454.route, valid.getOrDefault("path"))
  result = hook(call_604454, url, valid)

proc call*(call_604455: Call_PostListStacks_604440; NextToken: string = "";
          Action: string = "ListStacks"; Version: string = "2010-05-15";
          StackStatusFilter: JsonNode = nil): Recallable =
  ## postListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  var query_604456 = newJObject()
  var formData_604457 = newJObject()
  add(formData_604457, "NextToken", newJString(NextToken))
  add(query_604456, "Action", newJString(Action))
  add(query_604456, "Version", newJString(Version))
  if StackStatusFilter != nil:
    formData_604457.add "StackStatusFilter", StackStatusFilter
  result = call_604455.call(nil, query_604456, nil, formData_604457, nil)

var postListStacks* = Call_PostListStacks_604440(name: "postListStacks",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_PostListStacks_604441,
    base: "/", url: url_PostListStacks_604442, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStacks_604423 = ref object of OpenApiRestCall_602433
proc url_GetListStacks_604425(protocol: Scheme; host: string; base: string;
                             route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetListStacks_604424(path: JsonNode; query: JsonNode; header: JsonNode;
                                  formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: JString (required)
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Version: JString (required)
  section = newJObject()
  var valid_604426 = query.getOrDefault("NextToken")
  valid_604426 = validateParameter(valid_604426, JString, required = false,
                                 default = nil)
  if valid_604426 != nil:
    section.add "NextToken", valid_604426
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604427 = query.getOrDefault("Action")
  valid_604427 = validateParameter(valid_604427, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_604427 != nil:
    section.add "Action", valid_604427
  var valid_604428 = query.getOrDefault("StackStatusFilter")
  valid_604428 = validateParameter(valid_604428, JArray, required = false,
                                 default = nil)
  if valid_604428 != nil:
    section.add "StackStatusFilter", valid_604428
  var valid_604429 = query.getOrDefault("Version")
  valid_604429 = validateParameter(valid_604429, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604429 != nil:
    section.add "Version", valid_604429
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604430 = header.getOrDefault("X-Amz-Date")
  valid_604430 = validateParameter(valid_604430, JString, required = false,
                                 default = nil)
  if valid_604430 != nil:
    section.add "X-Amz-Date", valid_604430
  var valid_604431 = header.getOrDefault("X-Amz-Security-Token")
  valid_604431 = validateParameter(valid_604431, JString, required = false,
                                 default = nil)
  if valid_604431 != nil:
    section.add "X-Amz-Security-Token", valid_604431
  var valid_604432 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604432 = validateParameter(valid_604432, JString, required = false,
                                 default = nil)
  if valid_604432 != nil:
    section.add "X-Amz-Content-Sha256", valid_604432
  var valid_604433 = header.getOrDefault("X-Amz-Algorithm")
  valid_604433 = validateParameter(valid_604433, JString, required = false,
                                 default = nil)
  if valid_604433 != nil:
    section.add "X-Amz-Algorithm", valid_604433
  var valid_604434 = header.getOrDefault("X-Amz-Signature")
  valid_604434 = validateParameter(valid_604434, JString, required = false,
                                 default = nil)
  if valid_604434 != nil:
    section.add "X-Amz-Signature", valid_604434
  var valid_604435 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604435 = validateParameter(valid_604435, JString, required = false,
                                 default = nil)
  if valid_604435 != nil:
    section.add "X-Amz-SignedHeaders", valid_604435
  var valid_604436 = header.getOrDefault("X-Amz-Credential")
  valid_604436 = validateParameter(valid_604436, JString, required = false,
                                 default = nil)
  if valid_604436 != nil:
    section.add "X-Amz-Credential", valid_604436
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604437: Call_GetListStacks_604423; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_604437.validator(path, query, header, formData, body)
  let scheme = call_604437.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604437.url(scheme.get, call_604437.host, call_604437.base,
                         call_604437.route, valid.getOrDefault("path"))
  result = hook(call_604437, url, valid)

proc call*(call_604438: Call_GetListStacks_604423; NextToken: string = "";
          Action: string = "ListStacks"; StackStatusFilter: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## getListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Version: string (required)
  var query_604439 = newJObject()
  add(query_604439, "NextToken", newJString(NextToken))
  add(query_604439, "Action", newJString(Action))
  if StackStatusFilter != nil:
    query_604439.add "StackStatusFilter", StackStatusFilter
  add(query_604439, "Version", newJString(Version))
  result = call_604438.call(nil, query_604439, nil, nil, nil)

var getListStacks* = Call_GetListStacks_604423(name: "getListStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_GetListStacks_604424,
    base: "/", url: url_GetListStacks_604425, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetStackPolicy_604476 = ref object of OpenApiRestCall_602433
proc url_PostSetStackPolicy_604478(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostSetStackPolicy_604477(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604479 = query.getOrDefault("Action")
  valid_604479 = validateParameter(valid_604479, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_604479 != nil:
    section.add "Action", valid_604479
  var valid_604480 = query.getOrDefault("Version")
  valid_604480 = validateParameter(valid_604480, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604480 != nil:
    section.add "Version", valid_604480
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604481 = header.getOrDefault("X-Amz-Date")
  valid_604481 = validateParameter(valid_604481, JString, required = false,
                                 default = nil)
  if valid_604481 != nil:
    section.add "X-Amz-Date", valid_604481
  var valid_604482 = header.getOrDefault("X-Amz-Security-Token")
  valid_604482 = validateParameter(valid_604482, JString, required = false,
                                 default = nil)
  if valid_604482 != nil:
    section.add "X-Amz-Security-Token", valid_604482
  var valid_604483 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604483 = validateParameter(valid_604483, JString, required = false,
                                 default = nil)
  if valid_604483 != nil:
    section.add "X-Amz-Content-Sha256", valid_604483
  var valid_604484 = header.getOrDefault("X-Amz-Algorithm")
  valid_604484 = validateParameter(valid_604484, JString, required = false,
                                 default = nil)
  if valid_604484 != nil:
    section.add "X-Amz-Algorithm", valid_604484
  var valid_604485 = header.getOrDefault("X-Amz-Signature")
  valid_604485 = validateParameter(valid_604485, JString, required = false,
                                 default = nil)
  if valid_604485 != nil:
    section.add "X-Amz-Signature", valid_604485
  var valid_604486 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604486 = validateParameter(valid_604486, JString, required = false,
                                 default = nil)
  if valid_604486 != nil:
    section.add "X-Amz-SignedHeaders", valid_604486
  var valid_604487 = header.getOrDefault("X-Amz-Credential")
  valid_604487 = validateParameter(valid_604487, JString, required = false,
                                 default = nil)
  if valid_604487 != nil:
    section.add "X-Amz-Credential", valid_604487
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  section = newJObject()
  var valid_604488 = formData.getOrDefault("StackPolicyURL")
  valid_604488 = validateParameter(valid_604488, JString, required = false,
                                 default = nil)
  if valid_604488 != nil:
    section.add "StackPolicyURL", valid_604488
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_604489 = formData.getOrDefault("StackName")
  valid_604489 = validateParameter(valid_604489, JString, required = true,
                                 default = nil)
  if valid_604489 != nil:
    section.add "StackName", valid_604489
  var valid_604490 = formData.getOrDefault("StackPolicyBody")
  valid_604490 = validateParameter(valid_604490, JString, required = false,
                                 default = nil)
  if valid_604490 != nil:
    section.add "StackPolicyBody", valid_604490
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604491: Call_PostSetStackPolicy_604476; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_604491.validator(path, query, header, formData, body)
  let scheme = call_604491.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604491.url(scheme.get, call_604491.host, call_604491.base,
                         call_604491.route, valid.getOrDefault("path"))
  result = hook(call_604491, url, valid)

proc call*(call_604492: Call_PostSetStackPolicy_604476; StackName: string;
          StackPolicyURL: string = ""; Action: string = "SetStackPolicy";
          Version: string = "2010-05-15"; StackPolicyBody: string = ""): Recallable =
  ## postSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   Version: string (required)
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  var query_604493 = newJObject()
  var formData_604494 = newJObject()
  add(formData_604494, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_604493, "Action", newJString(Action))
  add(formData_604494, "StackName", newJString(StackName))
  add(query_604493, "Version", newJString(Version))
  add(formData_604494, "StackPolicyBody", newJString(StackPolicyBody))
  result = call_604492.call(nil, query_604493, nil, formData_604494, nil)

var postSetStackPolicy* = Call_PostSetStackPolicy_604476(
    name: "postSetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetStackPolicy",
    validator: validate_PostSetStackPolicy_604477, base: "/",
    url: url_PostSetStackPolicy_604478, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetStackPolicy_604458 = ref object of OpenApiRestCall_602433
proc url_GetSetStackPolicy_604460(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetSetStackPolicy_604459(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  section = newJObject()
  var valid_604461 = query.getOrDefault("StackPolicyBody")
  valid_604461 = validateParameter(valid_604461, JString, required = false,
                                 default = nil)
  if valid_604461 != nil:
    section.add "StackPolicyBody", valid_604461
  var valid_604462 = query.getOrDefault("StackPolicyURL")
  valid_604462 = validateParameter(valid_604462, JString, required = false,
                                 default = nil)
  if valid_604462 != nil:
    section.add "StackPolicyURL", valid_604462
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604463 = query.getOrDefault("Action")
  valid_604463 = validateParameter(valid_604463, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_604463 != nil:
    section.add "Action", valid_604463
  var valid_604464 = query.getOrDefault("Version")
  valid_604464 = validateParameter(valid_604464, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604464 != nil:
    section.add "Version", valid_604464
  var valid_604465 = query.getOrDefault("StackName")
  valid_604465 = validateParameter(valid_604465, JString, required = true,
                                 default = nil)
  if valid_604465 != nil:
    section.add "StackName", valid_604465
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604466 = header.getOrDefault("X-Amz-Date")
  valid_604466 = validateParameter(valid_604466, JString, required = false,
                                 default = nil)
  if valid_604466 != nil:
    section.add "X-Amz-Date", valid_604466
  var valid_604467 = header.getOrDefault("X-Amz-Security-Token")
  valid_604467 = validateParameter(valid_604467, JString, required = false,
                                 default = nil)
  if valid_604467 != nil:
    section.add "X-Amz-Security-Token", valid_604467
  var valid_604468 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604468 = validateParameter(valid_604468, JString, required = false,
                                 default = nil)
  if valid_604468 != nil:
    section.add "X-Amz-Content-Sha256", valid_604468
  var valid_604469 = header.getOrDefault("X-Amz-Algorithm")
  valid_604469 = validateParameter(valid_604469, JString, required = false,
                                 default = nil)
  if valid_604469 != nil:
    section.add "X-Amz-Algorithm", valid_604469
  var valid_604470 = header.getOrDefault("X-Amz-Signature")
  valid_604470 = validateParameter(valid_604470, JString, required = false,
                                 default = nil)
  if valid_604470 != nil:
    section.add "X-Amz-Signature", valid_604470
  var valid_604471 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604471 = validateParameter(valid_604471, JString, required = false,
                                 default = nil)
  if valid_604471 != nil:
    section.add "X-Amz-SignedHeaders", valid_604471
  var valid_604472 = header.getOrDefault("X-Amz-Credential")
  valid_604472 = validateParameter(valid_604472, JString, required = false,
                                 default = nil)
  if valid_604472 != nil:
    section.add "X-Amz-Credential", valid_604472
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604473: Call_GetSetStackPolicy_604458; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_604473.validator(path, query, header, formData, body)
  let scheme = call_604473.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604473.url(scheme.get, call_604473.host, call_604473.base,
                         call_604473.route, valid.getOrDefault("path"))
  result = hook(call_604473, url, valid)

proc call*(call_604474: Call_GetSetStackPolicy_604458; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  var query_604475 = newJObject()
  add(query_604475, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_604475, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_604475, "Action", newJString(Action))
  add(query_604475, "Version", newJString(Version))
  add(query_604475, "StackName", newJString(StackName))
  result = call_604474.call(nil, query_604475, nil, nil, nil)

var getSetStackPolicy* = Call_GetSetStackPolicy_604458(name: "getSetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SetStackPolicy", validator: validate_GetSetStackPolicy_604459,
    base: "/", url: url_GetSetStackPolicy_604460,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSignalResource_604514 = ref object of OpenApiRestCall_602433
proc url_PostSignalResource_604516(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostSignalResource_604515(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604517 = query.getOrDefault("Action")
  valid_604517 = validateParameter(valid_604517, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_604517 != nil:
    section.add "Action", valid_604517
  var valid_604518 = query.getOrDefault("Version")
  valid_604518 = validateParameter(valid_604518, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604518 != nil:
    section.add "Version", valid_604518
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604519 = header.getOrDefault("X-Amz-Date")
  valid_604519 = validateParameter(valid_604519, JString, required = false,
                                 default = nil)
  if valid_604519 != nil:
    section.add "X-Amz-Date", valid_604519
  var valid_604520 = header.getOrDefault("X-Amz-Security-Token")
  valid_604520 = validateParameter(valid_604520, JString, required = false,
                                 default = nil)
  if valid_604520 != nil:
    section.add "X-Amz-Security-Token", valid_604520
  var valid_604521 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604521 = validateParameter(valid_604521, JString, required = false,
                                 default = nil)
  if valid_604521 != nil:
    section.add "X-Amz-Content-Sha256", valid_604521
  var valid_604522 = header.getOrDefault("X-Amz-Algorithm")
  valid_604522 = validateParameter(valid_604522, JString, required = false,
                                 default = nil)
  if valid_604522 != nil:
    section.add "X-Amz-Algorithm", valid_604522
  var valid_604523 = header.getOrDefault("X-Amz-Signature")
  valid_604523 = validateParameter(valid_604523, JString, required = false,
                                 default = nil)
  if valid_604523 != nil:
    section.add "X-Amz-Signature", valid_604523
  var valid_604524 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604524 = validateParameter(valid_604524, JString, required = false,
                                 default = nil)
  if valid_604524 != nil:
    section.add "X-Amz-SignedHeaders", valid_604524
  var valid_604525 = header.getOrDefault("X-Amz-Credential")
  valid_604525 = validateParameter(valid_604525, JString, required = false,
                                 default = nil)
  if valid_604525 != nil:
    section.add "X-Amz-Credential", valid_604525
  result.add "header", section
  ## parameters in `formData` object:
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `LogicalResourceId` field"
  var valid_604526 = formData.getOrDefault("LogicalResourceId")
  valid_604526 = validateParameter(valid_604526, JString, required = true,
                                 default = nil)
  if valid_604526 != nil:
    section.add "LogicalResourceId", valid_604526
  var valid_604527 = formData.getOrDefault("UniqueId")
  valid_604527 = validateParameter(valid_604527, JString, required = true,
                                 default = nil)
  if valid_604527 != nil:
    section.add "UniqueId", valid_604527
  var valid_604528 = formData.getOrDefault("Status")
  valid_604528 = validateParameter(valid_604528, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_604528 != nil:
    section.add "Status", valid_604528
  var valid_604529 = formData.getOrDefault("StackName")
  valid_604529 = validateParameter(valid_604529, JString, required = true,
                                 default = nil)
  if valid_604529 != nil:
    section.add "StackName", valid_604529
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604530: Call_PostSignalResource_604514; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_604530.validator(path, query, header, formData, body)
  let scheme = call_604530.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604530.url(scheme.get, call_604530.host, call_604530.base,
                         call_604530.route, valid.getOrDefault("path"))
  result = hook(call_604530, url, valid)

proc call*(call_604531: Call_PostSignalResource_604514; LogicalResourceId: string;
          UniqueId: string; StackName: string; Status: string = "SUCCESS";
          Action: string = "SignalResource"; Version: string = "2010-05-15"): Recallable =
  ## postSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   Version: string (required)
  var query_604532 = newJObject()
  var formData_604533 = newJObject()
  add(formData_604533, "LogicalResourceId", newJString(LogicalResourceId))
  add(formData_604533, "UniqueId", newJString(UniqueId))
  add(formData_604533, "Status", newJString(Status))
  add(query_604532, "Action", newJString(Action))
  add(formData_604533, "StackName", newJString(StackName))
  add(query_604532, "Version", newJString(Version))
  result = call_604531.call(nil, query_604532, nil, formData_604533, nil)

var postSignalResource* = Call_PostSignalResource_604514(
    name: "postSignalResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SignalResource",
    validator: validate_PostSignalResource_604515, base: "/",
    url: url_PostSignalResource_604516, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSignalResource_604495 = ref object of OpenApiRestCall_602433
proc url_GetSignalResource_604497(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetSignalResource_604496(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Status` field"
  var valid_604498 = query.getOrDefault("Status")
  valid_604498 = validateParameter(valid_604498, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_604498 != nil:
    section.add "Status", valid_604498
  var valid_604499 = query.getOrDefault("UniqueId")
  valid_604499 = validateParameter(valid_604499, JString, required = true,
                                 default = nil)
  if valid_604499 != nil:
    section.add "UniqueId", valid_604499
  var valid_604500 = query.getOrDefault("LogicalResourceId")
  valid_604500 = validateParameter(valid_604500, JString, required = true,
                                 default = nil)
  if valid_604500 != nil:
    section.add "LogicalResourceId", valid_604500
  var valid_604501 = query.getOrDefault("Action")
  valid_604501 = validateParameter(valid_604501, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_604501 != nil:
    section.add "Action", valid_604501
  var valid_604502 = query.getOrDefault("Version")
  valid_604502 = validateParameter(valid_604502, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604502 != nil:
    section.add "Version", valid_604502
  var valid_604503 = query.getOrDefault("StackName")
  valid_604503 = validateParameter(valid_604503, JString, required = true,
                                 default = nil)
  if valid_604503 != nil:
    section.add "StackName", valid_604503
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604504 = header.getOrDefault("X-Amz-Date")
  valid_604504 = validateParameter(valid_604504, JString, required = false,
                                 default = nil)
  if valid_604504 != nil:
    section.add "X-Amz-Date", valid_604504
  var valid_604505 = header.getOrDefault("X-Amz-Security-Token")
  valid_604505 = validateParameter(valid_604505, JString, required = false,
                                 default = nil)
  if valid_604505 != nil:
    section.add "X-Amz-Security-Token", valid_604505
  var valid_604506 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604506 = validateParameter(valid_604506, JString, required = false,
                                 default = nil)
  if valid_604506 != nil:
    section.add "X-Amz-Content-Sha256", valid_604506
  var valid_604507 = header.getOrDefault("X-Amz-Algorithm")
  valid_604507 = validateParameter(valid_604507, JString, required = false,
                                 default = nil)
  if valid_604507 != nil:
    section.add "X-Amz-Algorithm", valid_604507
  var valid_604508 = header.getOrDefault("X-Amz-Signature")
  valid_604508 = validateParameter(valid_604508, JString, required = false,
                                 default = nil)
  if valid_604508 != nil:
    section.add "X-Amz-Signature", valid_604508
  var valid_604509 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604509 = validateParameter(valid_604509, JString, required = false,
                                 default = nil)
  if valid_604509 != nil:
    section.add "X-Amz-SignedHeaders", valid_604509
  var valid_604510 = header.getOrDefault("X-Amz-Credential")
  valid_604510 = validateParameter(valid_604510, JString, required = false,
                                 default = nil)
  if valid_604510 != nil:
    section.add "X-Amz-Credential", valid_604510
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604511: Call_GetSignalResource_604495; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_604511.validator(path, query, header, formData, body)
  let scheme = call_604511.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604511.url(scheme.get, call_604511.host, call_604511.base,
                         call_604511.route, valid.getOrDefault("path"))
  result = hook(call_604511, url, valid)

proc call*(call_604512: Call_GetSignalResource_604495; UniqueId: string;
          LogicalResourceId: string; StackName: string; Status: string = "SUCCESS";
          Action: string = "SignalResource"; Version: string = "2010-05-15"): Recallable =
  ## getSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  var query_604513 = newJObject()
  add(query_604513, "Status", newJString(Status))
  add(query_604513, "UniqueId", newJString(UniqueId))
  add(query_604513, "LogicalResourceId", newJString(LogicalResourceId))
  add(query_604513, "Action", newJString(Action))
  add(query_604513, "Version", newJString(Version))
  add(query_604513, "StackName", newJString(StackName))
  result = call_604512.call(nil, query_604513, nil, nil, nil)

var getSignalResource* = Call_GetSignalResource_604495(name: "getSignalResource",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SignalResource", validator: validate_GetSignalResource_604496,
    base: "/", url: url_GetSignalResource_604497,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostStopStackSetOperation_604551 = ref object of OpenApiRestCall_602433
proc url_PostStopStackSetOperation_604553(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostStopStackSetOperation_604552(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604554 = query.getOrDefault("Action")
  valid_604554 = validateParameter(valid_604554, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_604554 != nil:
    section.add "Action", valid_604554
  var valid_604555 = query.getOrDefault("Version")
  valid_604555 = validateParameter(valid_604555, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604555 != nil:
    section.add "Version", valid_604555
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604556 = header.getOrDefault("X-Amz-Date")
  valid_604556 = validateParameter(valid_604556, JString, required = false,
                                 default = nil)
  if valid_604556 != nil:
    section.add "X-Amz-Date", valid_604556
  var valid_604557 = header.getOrDefault("X-Amz-Security-Token")
  valid_604557 = validateParameter(valid_604557, JString, required = false,
                                 default = nil)
  if valid_604557 != nil:
    section.add "X-Amz-Security-Token", valid_604557
  var valid_604558 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604558 = validateParameter(valid_604558, JString, required = false,
                                 default = nil)
  if valid_604558 != nil:
    section.add "X-Amz-Content-Sha256", valid_604558
  var valid_604559 = header.getOrDefault("X-Amz-Algorithm")
  valid_604559 = validateParameter(valid_604559, JString, required = false,
                                 default = nil)
  if valid_604559 != nil:
    section.add "X-Amz-Algorithm", valid_604559
  var valid_604560 = header.getOrDefault("X-Amz-Signature")
  valid_604560 = validateParameter(valid_604560, JString, required = false,
                                 default = nil)
  if valid_604560 != nil:
    section.add "X-Amz-Signature", valid_604560
  var valid_604561 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604561 = validateParameter(valid_604561, JString, required = false,
                                 default = nil)
  if valid_604561 != nil:
    section.add "X-Amz-SignedHeaders", valid_604561
  var valid_604562 = header.getOrDefault("X-Amz-Credential")
  valid_604562 = validateParameter(valid_604562, JString, required = false,
                                 default = nil)
  if valid_604562 != nil:
    section.add "X-Amz-Credential", valid_604562
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604563 = formData.getOrDefault("StackSetName")
  valid_604563 = validateParameter(valid_604563, JString, required = true,
                                 default = nil)
  if valid_604563 != nil:
    section.add "StackSetName", valid_604563
  var valid_604564 = formData.getOrDefault("OperationId")
  valid_604564 = validateParameter(valid_604564, JString, required = true,
                                 default = nil)
  if valid_604564 != nil:
    section.add "OperationId", valid_604564
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604565: Call_PostStopStackSetOperation_604551; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_604565.validator(path, query, header, formData, body)
  let scheme = call_604565.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604565.url(scheme.get, call_604565.host, call_604565.base,
                         call_604565.route, valid.getOrDefault("path"))
  result = hook(call_604565, url, valid)

proc call*(call_604566: Call_PostStopStackSetOperation_604551;
          StackSetName: string; OperationId: string;
          Action: string = "StopStackSetOperation"; Version: string = "2010-05-15"): Recallable =
  ## postStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   Version: string (required)
  var query_604567 = newJObject()
  var formData_604568 = newJObject()
  add(formData_604568, "StackSetName", newJString(StackSetName))
  add(query_604567, "Action", newJString(Action))
  add(formData_604568, "OperationId", newJString(OperationId))
  add(query_604567, "Version", newJString(Version))
  result = call_604566.call(nil, query_604567, nil, formData_604568, nil)

var postStopStackSetOperation* = Call_PostStopStackSetOperation_604551(
    name: "postStopStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_PostStopStackSetOperation_604552, base: "/",
    url: url_PostStopStackSetOperation_604553,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetStopStackSetOperation_604534 = ref object of OpenApiRestCall_602433
proc url_GetStopStackSetOperation_604536(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetStopStackSetOperation_604535(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604537 = query.getOrDefault("Action")
  valid_604537 = validateParameter(valid_604537, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_604537 != nil:
    section.add "Action", valid_604537
  var valid_604538 = query.getOrDefault("StackSetName")
  valid_604538 = validateParameter(valid_604538, JString, required = true,
                                 default = nil)
  if valid_604538 != nil:
    section.add "StackSetName", valid_604538
  var valid_604539 = query.getOrDefault("OperationId")
  valid_604539 = validateParameter(valid_604539, JString, required = true,
                                 default = nil)
  if valid_604539 != nil:
    section.add "OperationId", valid_604539
  var valid_604540 = query.getOrDefault("Version")
  valid_604540 = validateParameter(valid_604540, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604540 != nil:
    section.add "Version", valid_604540
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604541 = header.getOrDefault("X-Amz-Date")
  valid_604541 = validateParameter(valid_604541, JString, required = false,
                                 default = nil)
  if valid_604541 != nil:
    section.add "X-Amz-Date", valid_604541
  var valid_604542 = header.getOrDefault("X-Amz-Security-Token")
  valid_604542 = validateParameter(valid_604542, JString, required = false,
                                 default = nil)
  if valid_604542 != nil:
    section.add "X-Amz-Security-Token", valid_604542
  var valid_604543 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604543 = validateParameter(valid_604543, JString, required = false,
                                 default = nil)
  if valid_604543 != nil:
    section.add "X-Amz-Content-Sha256", valid_604543
  var valid_604544 = header.getOrDefault("X-Amz-Algorithm")
  valid_604544 = validateParameter(valid_604544, JString, required = false,
                                 default = nil)
  if valid_604544 != nil:
    section.add "X-Amz-Algorithm", valid_604544
  var valid_604545 = header.getOrDefault("X-Amz-Signature")
  valid_604545 = validateParameter(valid_604545, JString, required = false,
                                 default = nil)
  if valid_604545 != nil:
    section.add "X-Amz-Signature", valid_604545
  var valid_604546 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604546 = validateParameter(valid_604546, JString, required = false,
                                 default = nil)
  if valid_604546 != nil:
    section.add "X-Amz-SignedHeaders", valid_604546
  var valid_604547 = header.getOrDefault("X-Amz-Credential")
  valid_604547 = validateParameter(valid_604547, JString, required = false,
                                 default = nil)
  if valid_604547 != nil:
    section.add "X-Amz-Credential", valid_604547
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604548: Call_GetStopStackSetOperation_604534; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_604548.validator(path, query, header, formData, body)
  let scheme = call_604548.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604548.url(scheme.get, call_604548.host, call_604548.base,
                         call_604548.route, valid.getOrDefault("path"))
  result = hook(call_604548, url, valid)

proc call*(call_604549: Call_GetStopStackSetOperation_604534; StackSetName: string;
          OperationId: string; Action: string = "StopStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   Action: string (required)
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   Version: string (required)
  var query_604550 = newJObject()
  add(query_604550, "Action", newJString(Action))
  add(query_604550, "StackSetName", newJString(StackSetName))
  add(query_604550, "OperationId", newJString(OperationId))
  add(query_604550, "Version", newJString(Version))
  result = call_604549.call(nil, query_604550, nil, nil, nil)

var getStopStackSetOperation* = Call_GetStopStackSetOperation_604534(
    name: "getStopStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_GetStopStackSetOperation_604535, base: "/",
    url: url_GetStopStackSetOperation_604536, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStack_604601 = ref object of OpenApiRestCall_602433
proc url_PostUpdateStack_604603(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostUpdateStack_604602(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604604 = query.getOrDefault("Action")
  valid_604604 = validateParameter(valid_604604, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_604604 != nil:
    section.add "Action", valid_604604
  var valid_604605 = query.getOrDefault("Version")
  valid_604605 = validateParameter(valid_604605, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604605 != nil:
    section.add "Version", valid_604605
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604606 = header.getOrDefault("X-Amz-Date")
  valid_604606 = validateParameter(valid_604606, JString, required = false,
                                 default = nil)
  if valid_604606 != nil:
    section.add "X-Amz-Date", valid_604606
  var valid_604607 = header.getOrDefault("X-Amz-Security-Token")
  valid_604607 = validateParameter(valid_604607, JString, required = false,
                                 default = nil)
  if valid_604607 != nil:
    section.add "X-Amz-Security-Token", valid_604607
  var valid_604608 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604608 = validateParameter(valid_604608, JString, required = false,
                                 default = nil)
  if valid_604608 != nil:
    section.add "X-Amz-Content-Sha256", valid_604608
  var valid_604609 = header.getOrDefault("X-Amz-Algorithm")
  valid_604609 = validateParameter(valid_604609, JString, required = false,
                                 default = nil)
  if valid_604609 != nil:
    section.add "X-Amz-Algorithm", valid_604609
  var valid_604610 = header.getOrDefault("X-Amz-Signature")
  valid_604610 = validateParameter(valid_604610, JString, required = false,
                                 default = nil)
  if valid_604610 != nil:
    section.add "X-Amz-Signature", valid_604610
  var valid_604611 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604611 = validateParameter(valid_604611, JString, required = false,
                                 default = nil)
  if valid_604611 != nil:
    section.add "X-Amz-SignedHeaders", valid_604611
  var valid_604612 = header.getOrDefault("X-Amz-Credential")
  valid_604612 = validateParameter(valid_604612, JString, required = false,
                                 default = nil)
  if valid_604612 != nil:
    section.add "X-Amz-Credential", valid_604612
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  section = newJObject()
  var valid_604613 = formData.getOrDefault("StackPolicyDuringUpdateBody")
  valid_604613 = validateParameter(valid_604613, JString, required = false,
                                 default = nil)
  if valid_604613 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_604613
  var valid_604614 = formData.getOrDefault("StackPolicyURL")
  valid_604614 = validateParameter(valid_604614, JString, required = false,
                                 default = nil)
  if valid_604614 != nil:
    section.add "StackPolicyURL", valid_604614
  var valid_604615 = formData.getOrDefault("RoleARN")
  valid_604615 = validateParameter(valid_604615, JString, required = false,
                                 default = nil)
  if valid_604615 != nil:
    section.add "RoleARN", valid_604615
  var valid_604616 = formData.getOrDefault("ResourceTypes")
  valid_604616 = validateParameter(valid_604616, JArray, required = false,
                                 default = nil)
  if valid_604616 != nil:
    section.add "ResourceTypes", valid_604616
  var valid_604617 = formData.getOrDefault("TemplateURL")
  valid_604617 = validateParameter(valid_604617, JString, required = false,
                                 default = nil)
  if valid_604617 != nil:
    section.add "TemplateURL", valid_604617
  var valid_604618 = formData.getOrDefault("Capabilities")
  valid_604618 = validateParameter(valid_604618, JArray, required = false,
                                 default = nil)
  if valid_604618 != nil:
    section.add "Capabilities", valid_604618
  var valid_604619 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_604619 = validateParameter(valid_604619, JString, required = false,
                                 default = nil)
  if valid_604619 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_604619
  var valid_604620 = formData.getOrDefault("Tags")
  valid_604620 = validateParameter(valid_604620, JArray, required = false,
                                 default = nil)
  if valid_604620 != nil:
    section.add "Tags", valid_604620
  var valid_604621 = formData.getOrDefault("ClientRequestToken")
  valid_604621 = validateParameter(valid_604621, JString, required = false,
                                 default = nil)
  if valid_604621 != nil:
    section.add "ClientRequestToken", valid_604621
  var valid_604622 = formData.getOrDefault("UsePreviousTemplate")
  valid_604622 = validateParameter(valid_604622, JBool, required = false, default = nil)
  if valid_604622 != nil:
    section.add "UsePreviousTemplate", valid_604622
  var valid_604623 = formData.getOrDefault("Parameters")
  valid_604623 = validateParameter(valid_604623, JArray, required = false,
                                 default = nil)
  if valid_604623 != nil:
    section.add "Parameters", valid_604623
  var valid_604624 = formData.getOrDefault("NotificationARNs")
  valid_604624 = validateParameter(valid_604624, JArray, required = false,
                                 default = nil)
  if valid_604624 != nil:
    section.add "NotificationARNs", valid_604624
  var valid_604625 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_604625 = validateParameter(valid_604625, JArray, required = false,
                                 default = nil)
  if valid_604625 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_604625
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_604626 = formData.getOrDefault("StackName")
  valid_604626 = validateParameter(valid_604626, JString, required = true,
                                 default = nil)
  if valid_604626 != nil:
    section.add "StackName", valid_604626
  var valid_604627 = formData.getOrDefault("TemplateBody")
  valid_604627 = validateParameter(valid_604627, JString, required = false,
                                 default = nil)
  if valid_604627 != nil:
    section.add "TemplateBody", valid_604627
  var valid_604628 = formData.getOrDefault("StackPolicyDuringUpdateURL")
  valid_604628 = validateParameter(valid_604628, JString, required = false,
                                 default = nil)
  if valid_604628 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_604628
  var valid_604629 = formData.getOrDefault("StackPolicyBody")
  valid_604629 = validateParameter(valid_604629, JString, required = false,
                                 default = nil)
  if valid_604629 != nil:
    section.add "StackPolicyBody", valid_604629
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604630: Call_PostUpdateStack_604601; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_604630.validator(path, query, header, formData, body)
  let scheme = call_604630.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604630.url(scheme.get, call_604630.host, call_604630.base,
                         call_604630.route, valid.getOrDefault("path"))
  result = hook(call_604630, url, valid)

proc call*(call_604631: Call_PostUpdateStack_604601; StackName: string;
          StackPolicyDuringUpdateBody: string = ""; StackPolicyURL: string = "";
          RoleARN: string = ""; ResourceTypes: JsonNode = nil; TemplateURL: string = "";
          Capabilities: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Tags: JsonNode = nil; ClientRequestToken: string = "";
          UsePreviousTemplate: bool = false; Parameters: JsonNode = nil;
          Action: string = "UpdateStack"; NotificationARNs: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          TemplateBody: string = ""; Version: string = "2010-05-15";
          StackPolicyDuringUpdateURL: string = ""; StackPolicyBody: string = ""): Recallable =
  ## postUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Action: string (required)
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: string (required)
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  var query_604632 = newJObject()
  var formData_604633 = newJObject()
  add(formData_604633, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(formData_604633, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_604633, "RoleARN", newJString(RoleARN))
  if ResourceTypes != nil:
    formData_604633.add "ResourceTypes", ResourceTypes
  add(formData_604633, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_604633.add "Capabilities", Capabilities
  add(formData_604633, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Tags != nil:
    formData_604633.add "Tags", Tags
  add(formData_604633, "ClientRequestToken", newJString(ClientRequestToken))
  add(formData_604633, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if Parameters != nil:
    formData_604633.add "Parameters", Parameters
  add(query_604632, "Action", newJString(Action))
  if NotificationARNs != nil:
    formData_604633.add "NotificationARNs", NotificationARNs
  if RollbackConfigurationRollbackTriggers != nil:
    formData_604633.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  add(formData_604633, "StackName", newJString(StackName))
  add(formData_604633, "TemplateBody", newJString(TemplateBody))
  add(query_604632, "Version", newJString(Version))
  add(formData_604633, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(formData_604633, "StackPolicyBody", newJString(StackPolicyBody))
  result = call_604631.call(nil, query_604632, nil, formData_604633, nil)

var postUpdateStack* = Call_PostUpdateStack_604601(name: "postUpdateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_PostUpdateStack_604602,
    base: "/", url: url_PostUpdateStack_604603, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStack_604569 = ref object of OpenApiRestCall_602433
proc url_GetUpdateStack_604571(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetUpdateStack_604570(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: JString (required)
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  section = newJObject()
  var valid_604572 = query.getOrDefault("StackPolicyBody")
  valid_604572 = validateParameter(valid_604572, JString, required = false,
                                 default = nil)
  if valid_604572 != nil:
    section.add "StackPolicyBody", valid_604572
  var valid_604573 = query.getOrDefault("TemplateURL")
  valid_604573 = validateParameter(valid_604573, JString, required = false,
                                 default = nil)
  if valid_604573 != nil:
    section.add "TemplateURL", valid_604573
  var valid_604574 = query.getOrDefault("StackPolicyURL")
  valid_604574 = validateParameter(valid_604574, JString, required = false,
                                 default = nil)
  if valid_604574 != nil:
    section.add "StackPolicyURL", valid_604574
  var valid_604575 = query.getOrDefault("TemplateBody")
  valid_604575 = validateParameter(valid_604575, JString, required = false,
                                 default = nil)
  if valid_604575 != nil:
    section.add "TemplateBody", valid_604575
  var valid_604576 = query.getOrDefault("Tags")
  valid_604576 = validateParameter(valid_604576, JArray, required = false,
                                 default = nil)
  if valid_604576 != nil:
    section.add "Tags", valid_604576
  var valid_604577 = query.getOrDefault("Capabilities")
  valid_604577 = validateParameter(valid_604577, JArray, required = false,
                                 default = nil)
  if valid_604577 != nil:
    section.add "Capabilities", valid_604577
  var valid_604578 = query.getOrDefault("Parameters")
  valid_604578 = validateParameter(valid_604578, JArray, required = false,
                                 default = nil)
  if valid_604578 != nil:
    section.add "Parameters", valid_604578
  var valid_604579 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_604579 = validateParameter(valid_604579, JString, required = false,
                                 default = nil)
  if valid_604579 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_604579
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604580 = query.getOrDefault("Action")
  valid_604580 = validateParameter(valid_604580, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_604580 != nil:
    section.add "Action", valid_604580
  var valid_604581 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_604581 = validateParameter(valid_604581, JArray, required = false,
                                 default = nil)
  if valid_604581 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_604581
  var valid_604582 = query.getOrDefault("RoleARN")
  valid_604582 = validateParameter(valid_604582, JString, required = false,
                                 default = nil)
  if valid_604582 != nil:
    section.add "RoleARN", valid_604582
  var valid_604583 = query.getOrDefault("NotificationARNs")
  valid_604583 = validateParameter(valid_604583, JArray, required = false,
                                 default = nil)
  if valid_604583 != nil:
    section.add "NotificationARNs", valid_604583
  var valid_604584 = query.getOrDefault("ClientRequestToken")
  valid_604584 = validateParameter(valid_604584, JString, required = false,
                                 default = nil)
  if valid_604584 != nil:
    section.add "ClientRequestToken", valid_604584
  var valid_604585 = query.getOrDefault("StackPolicyDuringUpdateURL")
  valid_604585 = validateParameter(valid_604585, JString, required = false,
                                 default = nil)
  if valid_604585 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_604585
  var valid_604586 = query.getOrDefault("UsePreviousTemplate")
  valid_604586 = validateParameter(valid_604586, JBool, required = false, default = nil)
  if valid_604586 != nil:
    section.add "UsePreviousTemplate", valid_604586
  var valid_604587 = query.getOrDefault("StackPolicyDuringUpdateBody")
  valid_604587 = validateParameter(valid_604587, JString, required = false,
                                 default = nil)
  if valid_604587 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_604587
  var valid_604588 = query.getOrDefault("ResourceTypes")
  valid_604588 = validateParameter(valid_604588, JArray, required = false,
                                 default = nil)
  if valid_604588 != nil:
    section.add "ResourceTypes", valid_604588
  var valid_604589 = query.getOrDefault("Version")
  valid_604589 = validateParameter(valid_604589, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604589 != nil:
    section.add "Version", valid_604589
  var valid_604590 = query.getOrDefault("StackName")
  valid_604590 = validateParameter(valid_604590, JString, required = true,
                                 default = nil)
  if valid_604590 != nil:
    section.add "StackName", valid_604590
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604591 = header.getOrDefault("X-Amz-Date")
  valid_604591 = validateParameter(valid_604591, JString, required = false,
                                 default = nil)
  if valid_604591 != nil:
    section.add "X-Amz-Date", valid_604591
  var valid_604592 = header.getOrDefault("X-Amz-Security-Token")
  valid_604592 = validateParameter(valid_604592, JString, required = false,
                                 default = nil)
  if valid_604592 != nil:
    section.add "X-Amz-Security-Token", valid_604592
  var valid_604593 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604593 = validateParameter(valid_604593, JString, required = false,
                                 default = nil)
  if valid_604593 != nil:
    section.add "X-Amz-Content-Sha256", valid_604593
  var valid_604594 = header.getOrDefault("X-Amz-Algorithm")
  valid_604594 = validateParameter(valid_604594, JString, required = false,
                                 default = nil)
  if valid_604594 != nil:
    section.add "X-Amz-Algorithm", valid_604594
  var valid_604595 = header.getOrDefault("X-Amz-Signature")
  valid_604595 = validateParameter(valid_604595, JString, required = false,
                                 default = nil)
  if valid_604595 != nil:
    section.add "X-Amz-Signature", valid_604595
  var valid_604596 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604596 = validateParameter(valid_604596, JString, required = false,
                                 default = nil)
  if valid_604596 != nil:
    section.add "X-Amz-SignedHeaders", valid_604596
  var valid_604597 = header.getOrDefault("X-Amz-Credential")
  valid_604597 = validateParameter(valid_604597, JString, required = false,
                                 default = nil)
  if valid_604597 != nil:
    section.add "X-Amz-Credential", valid_604597
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604598: Call_GetUpdateStack_604569; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_604598.validator(path, query, header, formData, body)
  let scheme = call_604598.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604598.url(scheme.get, call_604598.host, call_604598.base,
                         call_604598.route, valid.getOrDefault("path"))
  result = hook(call_604598, url, valid)

proc call*(call_604599: Call_GetUpdateStack_604569; StackName: string;
          StackPolicyBody: string = ""; TemplateURL: string = "";
          StackPolicyURL: string = ""; TemplateBody: string = ""; Tags: JsonNode = nil;
          Capabilities: JsonNode = nil; Parameters: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Action: string = "UpdateStack";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          RoleARN: string = ""; NotificationARNs: JsonNode = nil;
          ClientRequestToken: string = ""; StackPolicyDuringUpdateURL: string = "";
          UsePreviousTemplate: bool = false;
          StackPolicyDuringUpdateBody: string = ""; ResourceTypes: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Action: string (required)
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  var query_604600 = newJObject()
  add(query_604600, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_604600, "TemplateURL", newJString(TemplateURL))
  add(query_604600, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_604600, "TemplateBody", newJString(TemplateBody))
  if Tags != nil:
    query_604600.add "Tags", Tags
  if Capabilities != nil:
    query_604600.add "Capabilities", Capabilities
  if Parameters != nil:
    query_604600.add "Parameters", Parameters
  add(query_604600, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  add(query_604600, "Action", newJString(Action))
  if RollbackConfigurationRollbackTriggers != nil:
    query_604600.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_604600, "RoleARN", newJString(RoleARN))
  if NotificationARNs != nil:
    query_604600.add "NotificationARNs", NotificationARNs
  add(query_604600, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_604600, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(query_604600, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_604600, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  if ResourceTypes != nil:
    query_604600.add "ResourceTypes", ResourceTypes
  add(query_604600, "Version", newJString(Version))
  add(query_604600, "StackName", newJString(StackName))
  result = call_604599.call(nil, query_604600, nil, nil, nil)

var getUpdateStack* = Call_GetUpdateStack_604569(name: "getUpdateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_GetUpdateStack_604570,
    base: "/", url: url_GetUpdateStack_604571, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackInstances_604659 = ref object of OpenApiRestCall_602433
proc url_PostUpdateStackInstances_604661(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostUpdateStackInstances_604660(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604662 = query.getOrDefault("Action")
  valid_604662 = validateParameter(valid_604662, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_604662 != nil:
    section.add "Action", valid_604662
  var valid_604663 = query.getOrDefault("Version")
  valid_604663 = validateParameter(valid_604663, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604663 != nil:
    section.add "Version", valid_604663
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604664 = header.getOrDefault("X-Amz-Date")
  valid_604664 = validateParameter(valid_604664, JString, required = false,
                                 default = nil)
  if valid_604664 != nil:
    section.add "X-Amz-Date", valid_604664
  var valid_604665 = header.getOrDefault("X-Amz-Security-Token")
  valid_604665 = validateParameter(valid_604665, JString, required = false,
                                 default = nil)
  if valid_604665 != nil:
    section.add "X-Amz-Security-Token", valid_604665
  var valid_604666 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604666 = validateParameter(valid_604666, JString, required = false,
                                 default = nil)
  if valid_604666 != nil:
    section.add "X-Amz-Content-Sha256", valid_604666
  var valid_604667 = header.getOrDefault("X-Amz-Algorithm")
  valid_604667 = validateParameter(valid_604667, JString, required = false,
                                 default = nil)
  if valid_604667 != nil:
    section.add "X-Amz-Algorithm", valid_604667
  var valid_604668 = header.getOrDefault("X-Amz-Signature")
  valid_604668 = validateParameter(valid_604668, JString, required = false,
                                 default = nil)
  if valid_604668 != nil:
    section.add "X-Amz-Signature", valid_604668
  var valid_604669 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604669 = validateParameter(valid_604669, JString, required = false,
                                 default = nil)
  if valid_604669 != nil:
    section.add "X-Amz-SignedHeaders", valid_604669
  var valid_604670 = header.getOrDefault("X-Amz-Credential")
  valid_604670 = validateParameter(valid_604670, JString, required = false,
                                 default = nil)
  if valid_604670 != nil:
    section.add "X-Amz-Credential", valid_604670
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  section = newJObject()
  var valid_604671 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604671 = validateParameter(valid_604671, JString, required = false,
                                 default = nil)
  if valid_604671 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604671
  var valid_604672 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604672 = validateParameter(valid_604672, JString, required = false,
                                 default = nil)
  if valid_604672 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604672
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604673 = formData.getOrDefault("StackSetName")
  valid_604673 = validateParameter(valid_604673, JString, required = true,
                                 default = nil)
  if valid_604673 != nil:
    section.add "StackSetName", valid_604673
  var valid_604674 = formData.getOrDefault("Accounts")
  valid_604674 = validateParameter(valid_604674, JArray, required = true, default = nil)
  if valid_604674 != nil:
    section.add "Accounts", valid_604674
  var valid_604675 = formData.getOrDefault("Regions")
  valid_604675 = validateParameter(valid_604675, JArray, required = true, default = nil)
  if valid_604675 != nil:
    section.add "Regions", valid_604675
  var valid_604676 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_604676 = validateParameter(valid_604676, JArray, required = false,
                                 default = nil)
  if valid_604676 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604676
  var valid_604677 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604677 = validateParameter(valid_604677, JString, required = false,
                                 default = nil)
  if valid_604677 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604677
  var valid_604678 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604678 = validateParameter(valid_604678, JString, required = false,
                                 default = nil)
  if valid_604678 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604678
  var valid_604679 = formData.getOrDefault("OperationId")
  valid_604679 = validateParameter(valid_604679, JString, required = false,
                                 default = nil)
  if valid_604679 != nil:
    section.add "OperationId", valid_604679
  var valid_604680 = formData.getOrDefault("ParameterOverrides")
  valid_604680 = validateParameter(valid_604680, JArray, required = false,
                                 default = nil)
  if valid_604680 != nil:
    section.add "ParameterOverrides", valid_604680
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604681: Call_PostUpdateStackInstances_604659; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_604681.validator(path, query, header, formData, body)
  let scheme = call_604681.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604681.url(scheme.get, call_604681.host, call_604681.base,
                         call_604681.route, valid.getOrDefault("path"))
  result = hook(call_604681, url, valid)

proc call*(call_604682: Call_PostUpdateStackInstances_604659; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "UpdateStackInstances";
          OperationPreferencesFailureToleranceCount: string = "";
          OperationId: string = ""; Version: string = "2010-05-15";
          ParameterOverrides: JsonNode = nil): Recallable =
  ## postUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Version: string (required)
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  var query_604683 = newJObject()
  var formData_604684 = newJObject()
  add(formData_604684, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_604684, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_604684, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    formData_604684.add "Accounts", Accounts
  if Regions != nil:
    formData_604684.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    formData_604684.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_604684, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_604683, "Action", newJString(Action))
  add(formData_604684, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(formData_604684, "OperationId", newJString(OperationId))
  add(query_604683, "Version", newJString(Version))
  if ParameterOverrides != nil:
    formData_604684.add "ParameterOverrides", ParameterOverrides
  result = call_604682.call(nil, query_604683, nil, formData_604684, nil)

var postUpdateStackInstances* = Call_PostUpdateStackInstances_604659(
    name: "postUpdateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_PostUpdateStackInstances_604660, base: "/",
    url: url_PostUpdateStackInstances_604661, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackInstances_604634 = ref object of OpenApiRestCall_602433
proc url_GetUpdateStackInstances_604636(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetUpdateStackInstances_604635(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_604637 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604637 = validateParameter(valid_604637, JString, required = false,
                                 default = nil)
  if valid_604637 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604637
  var valid_604638 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604638 = validateParameter(valid_604638, JString, required = false,
                                 default = nil)
  if valid_604638 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604638
  var valid_604639 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_604639 = validateParameter(valid_604639, JArray, required = false,
                                 default = nil)
  if valid_604639 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604639
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604640 = query.getOrDefault("Action")
  valid_604640 = validateParameter(valid_604640, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_604640 != nil:
    section.add "Action", valid_604640
  var valid_604641 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604641 = validateParameter(valid_604641, JString, required = false,
                                 default = nil)
  if valid_604641 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604641
  var valid_604642 = query.getOrDefault("ParameterOverrides")
  valid_604642 = validateParameter(valid_604642, JArray, required = false,
                                 default = nil)
  if valid_604642 != nil:
    section.add "ParameterOverrides", valid_604642
  var valid_604643 = query.getOrDefault("StackSetName")
  valid_604643 = validateParameter(valid_604643, JString, required = true,
                                 default = nil)
  if valid_604643 != nil:
    section.add "StackSetName", valid_604643
  var valid_604644 = query.getOrDefault("Accounts")
  valid_604644 = validateParameter(valid_604644, JArray, required = true, default = nil)
  if valid_604644 != nil:
    section.add "Accounts", valid_604644
  var valid_604645 = query.getOrDefault("Regions")
  valid_604645 = validateParameter(valid_604645, JArray, required = true, default = nil)
  if valid_604645 != nil:
    section.add "Regions", valid_604645
  var valid_604646 = query.getOrDefault("OperationId")
  valid_604646 = validateParameter(valid_604646, JString, required = false,
                                 default = nil)
  if valid_604646 != nil:
    section.add "OperationId", valid_604646
  var valid_604647 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604647 = validateParameter(valid_604647, JString, required = false,
                                 default = nil)
  if valid_604647 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604647
  var valid_604648 = query.getOrDefault("Version")
  valid_604648 = validateParameter(valid_604648, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604648 != nil:
    section.add "Version", valid_604648
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604649 = header.getOrDefault("X-Amz-Date")
  valid_604649 = validateParameter(valid_604649, JString, required = false,
                                 default = nil)
  if valid_604649 != nil:
    section.add "X-Amz-Date", valid_604649
  var valid_604650 = header.getOrDefault("X-Amz-Security-Token")
  valid_604650 = validateParameter(valid_604650, JString, required = false,
                                 default = nil)
  if valid_604650 != nil:
    section.add "X-Amz-Security-Token", valid_604650
  var valid_604651 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604651 = validateParameter(valid_604651, JString, required = false,
                                 default = nil)
  if valid_604651 != nil:
    section.add "X-Amz-Content-Sha256", valid_604651
  var valid_604652 = header.getOrDefault("X-Amz-Algorithm")
  valid_604652 = validateParameter(valid_604652, JString, required = false,
                                 default = nil)
  if valid_604652 != nil:
    section.add "X-Amz-Algorithm", valid_604652
  var valid_604653 = header.getOrDefault("X-Amz-Signature")
  valid_604653 = validateParameter(valid_604653, JString, required = false,
                                 default = nil)
  if valid_604653 != nil:
    section.add "X-Amz-Signature", valid_604653
  var valid_604654 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604654 = validateParameter(valid_604654, JString, required = false,
                                 default = nil)
  if valid_604654 != nil:
    section.add "X-Amz-SignedHeaders", valid_604654
  var valid_604655 = header.getOrDefault("X-Amz-Credential")
  valid_604655 = validateParameter(valid_604655, JString, required = false,
                                 default = nil)
  if valid_604655 != nil:
    section.add "X-Amz-Credential", valid_604655
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604656: Call_GetUpdateStackInstances_604634; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_604656.validator(path, query, header, formData, body)
  let scheme = call_604656.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604656.url(scheme.get, call_604656.host, call_604656.base,
                         call_604656.route, valid.getOrDefault("path"))
  result = hook(call_604656, url, valid)

proc call*(call_604657: Call_GetUpdateStackInstances_604634; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureToleranceCount: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesRegionOrder: JsonNode = nil;
          Action: string = "UpdateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          ParameterOverrides: JsonNode = nil; OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  var query_604658 = newJObject()
  add(query_604658, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_604658, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if OperationPreferencesRegionOrder != nil:
    query_604658.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_604658, "Action", newJString(Action))
  add(query_604658, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  if ParameterOverrides != nil:
    query_604658.add "ParameterOverrides", ParameterOverrides
  add(query_604658, "StackSetName", newJString(StackSetName))
  if Accounts != nil:
    query_604658.add "Accounts", Accounts
  if Regions != nil:
    query_604658.add "Regions", Regions
  add(query_604658, "OperationId", newJString(OperationId))
  add(query_604658, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_604658, "Version", newJString(Version))
  result = call_604657.call(nil, query_604658, nil, nil, nil)

var getUpdateStackInstances* = Call_GetUpdateStackInstances_604634(
    name: "getUpdateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_GetUpdateStackInstances_604635, base: "/",
    url: url_GetUpdateStackInstances_604636, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackSet_604718 = ref object of OpenApiRestCall_602433
proc url_PostUpdateStackSet_604720(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostUpdateStackSet_604719(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604721 = query.getOrDefault("Action")
  valid_604721 = validateParameter(valid_604721, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_604721 != nil:
    section.add "Action", valid_604721
  var valid_604722 = query.getOrDefault("Version")
  valid_604722 = validateParameter(valid_604722, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604722 != nil:
    section.add "Version", valid_604722
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604723 = header.getOrDefault("X-Amz-Date")
  valid_604723 = validateParameter(valid_604723, JString, required = false,
                                 default = nil)
  if valid_604723 != nil:
    section.add "X-Amz-Date", valid_604723
  var valid_604724 = header.getOrDefault("X-Amz-Security-Token")
  valid_604724 = validateParameter(valid_604724, JString, required = false,
                                 default = nil)
  if valid_604724 != nil:
    section.add "X-Amz-Security-Token", valid_604724
  var valid_604725 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604725 = validateParameter(valid_604725, JString, required = false,
                                 default = nil)
  if valid_604725 != nil:
    section.add "X-Amz-Content-Sha256", valid_604725
  var valid_604726 = header.getOrDefault("X-Amz-Algorithm")
  valid_604726 = validateParameter(valid_604726, JString, required = false,
                                 default = nil)
  if valid_604726 != nil:
    section.add "X-Amz-Algorithm", valid_604726
  var valid_604727 = header.getOrDefault("X-Amz-Signature")
  valid_604727 = validateParameter(valid_604727, JString, required = false,
                                 default = nil)
  if valid_604727 != nil:
    section.add "X-Amz-Signature", valid_604727
  var valid_604728 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604728 = validateParameter(valid_604728, JString, required = false,
                                 default = nil)
  if valid_604728 != nil:
    section.add "X-Amz-SignedHeaders", valid_604728
  var valid_604729 = header.getOrDefault("X-Amz-Credential")
  valid_604729 = validateParameter(valid_604729, JString, required = false,
                                 default = nil)
  if valid_604729 != nil:
    section.add "X-Amz-Credential", valid_604729
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  section = newJObject()
  var valid_604730 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604730 = validateParameter(valid_604730, JString, required = false,
                                 default = nil)
  if valid_604730 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604730
  var valid_604731 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604731 = validateParameter(valid_604731, JString, required = false,
                                 default = nil)
  if valid_604731 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604731
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604732 = formData.getOrDefault("StackSetName")
  valid_604732 = validateParameter(valid_604732, JString, required = true,
                                 default = nil)
  if valid_604732 != nil:
    section.add "StackSetName", valid_604732
  var valid_604733 = formData.getOrDefault("ExecutionRoleName")
  valid_604733 = validateParameter(valid_604733, JString, required = false,
                                 default = nil)
  if valid_604733 != nil:
    section.add "ExecutionRoleName", valid_604733
  var valid_604734 = formData.getOrDefault("Accounts")
  valid_604734 = validateParameter(valid_604734, JArray, required = false,
                                 default = nil)
  if valid_604734 != nil:
    section.add "Accounts", valid_604734
  var valid_604735 = formData.getOrDefault("TemplateURL")
  valid_604735 = validateParameter(valid_604735, JString, required = false,
                                 default = nil)
  if valid_604735 != nil:
    section.add "TemplateURL", valid_604735
  var valid_604736 = formData.getOrDefault("Capabilities")
  valid_604736 = validateParameter(valid_604736, JArray, required = false,
                                 default = nil)
  if valid_604736 != nil:
    section.add "Capabilities", valid_604736
  var valid_604737 = formData.getOrDefault("Tags")
  valid_604737 = validateParameter(valid_604737, JArray, required = false,
                                 default = nil)
  if valid_604737 != nil:
    section.add "Tags", valid_604737
  var valid_604738 = formData.getOrDefault("Regions")
  valid_604738 = validateParameter(valid_604738, JArray, required = false,
                                 default = nil)
  if valid_604738 != nil:
    section.add "Regions", valid_604738
  var valid_604739 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_604739 = validateParameter(valid_604739, JArray, required = false,
                                 default = nil)
  if valid_604739 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604739
  var valid_604740 = formData.getOrDefault("UsePreviousTemplate")
  valid_604740 = validateParameter(valid_604740, JBool, required = false, default = nil)
  if valid_604740 != nil:
    section.add "UsePreviousTemplate", valid_604740
  var valid_604741 = formData.getOrDefault("Parameters")
  valid_604741 = validateParameter(valid_604741, JArray, required = false,
                                 default = nil)
  if valid_604741 != nil:
    section.add "Parameters", valid_604741
  var valid_604742 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604742 = validateParameter(valid_604742, JString, required = false,
                                 default = nil)
  if valid_604742 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604742
  var valid_604743 = formData.getOrDefault("AdministrationRoleARN")
  valid_604743 = validateParameter(valid_604743, JString, required = false,
                                 default = nil)
  if valid_604743 != nil:
    section.add "AdministrationRoleARN", valid_604743
  var valid_604744 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604744 = validateParameter(valid_604744, JString, required = false,
                                 default = nil)
  if valid_604744 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604744
  var valid_604745 = formData.getOrDefault("TemplateBody")
  valid_604745 = validateParameter(valid_604745, JString, required = false,
                                 default = nil)
  if valid_604745 != nil:
    section.add "TemplateBody", valid_604745
  var valid_604746 = formData.getOrDefault("OperationId")
  valid_604746 = validateParameter(valid_604746, JString, required = false,
                                 default = nil)
  if valid_604746 != nil:
    section.add "OperationId", valid_604746
  var valid_604747 = formData.getOrDefault("Description")
  valid_604747 = validateParameter(valid_604747, JString, required = false,
                                 default = nil)
  if valid_604747 != nil:
    section.add "Description", valid_604747
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604748: Call_PostUpdateStackSet_604718; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_604748.validator(path, query, header, formData, body)
  let scheme = call_604748.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604748.url(scheme.get, call_604748.host, call_604748.base,
                         call_604748.route, valid.getOrDefault("path"))
  result = hook(call_604748, url, valid)

proc call*(call_604749: Call_PostUpdateStackSet_604718; StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          ExecutionRoleName: string = ""; Accounts: JsonNode = nil;
          TemplateURL: string = ""; Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Regions: JsonNode = nil; OperationPreferencesRegionOrder: JsonNode = nil;
          UsePreviousTemplate: bool = false; Parameters: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Action: string = "UpdateStackSet"; AdministrationRoleARN: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          TemplateBody: string = ""; OperationId: string = ""; Description: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Action: string (required)
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   Version: string (required)
  var query_604750 = newJObject()
  var formData_604751 = newJObject()
  add(formData_604751, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_604751, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(formData_604751, "StackSetName", newJString(StackSetName))
  add(formData_604751, "ExecutionRoleName", newJString(ExecutionRoleName))
  if Accounts != nil:
    formData_604751.add "Accounts", Accounts
  add(formData_604751, "TemplateURL", newJString(TemplateURL))
  if Capabilities != nil:
    formData_604751.add "Capabilities", Capabilities
  if Tags != nil:
    formData_604751.add "Tags", Tags
  if Regions != nil:
    formData_604751.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    formData_604751.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_604751, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if Parameters != nil:
    formData_604751.add "Parameters", Parameters
  add(formData_604751, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_604750, "Action", newJString(Action))
  add(formData_604751, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_604751, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(formData_604751, "TemplateBody", newJString(TemplateBody))
  add(formData_604751, "OperationId", newJString(OperationId))
  add(formData_604751, "Description", newJString(Description))
  add(query_604750, "Version", newJString(Version))
  result = call_604749.call(nil, query_604750, nil, formData_604751, nil)

var postUpdateStackSet* = Call_PostUpdateStackSet_604718(
    name: "postUpdateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackSet",
    validator: validate_PostUpdateStackSet_604719, base: "/",
    url: url_PostUpdateStackSet_604720, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackSet_604685 = ref object of OpenApiRestCall_602433
proc url_GetUpdateStackSet_604687(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetUpdateStackSet_604686(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Action: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_604688 = query.getOrDefault("TemplateURL")
  valid_604688 = validateParameter(valid_604688, JString, required = false,
                                 default = nil)
  if valid_604688 != nil:
    section.add "TemplateURL", valid_604688
  var valid_604689 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604689 = validateParameter(valid_604689, JString, required = false,
                                 default = nil)
  if valid_604689 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604689
  var valid_604690 = query.getOrDefault("TemplateBody")
  valid_604690 = validateParameter(valid_604690, JString, required = false,
                                 default = nil)
  if valid_604690 != nil:
    section.add "TemplateBody", valid_604690
  var valid_604691 = query.getOrDefault("Description")
  valid_604691 = validateParameter(valid_604691, JString, required = false,
                                 default = nil)
  if valid_604691 != nil:
    section.add "Description", valid_604691
  var valid_604692 = query.getOrDefault("AdministrationRoleARN")
  valid_604692 = validateParameter(valid_604692, JString, required = false,
                                 default = nil)
  if valid_604692 != nil:
    section.add "AdministrationRoleARN", valid_604692
  var valid_604693 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604693 = validateParameter(valid_604693, JString, required = false,
                                 default = nil)
  if valid_604693 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604693
  var valid_604694 = query.getOrDefault("Tags")
  valid_604694 = validateParameter(valid_604694, JArray, required = false,
                                 default = nil)
  if valid_604694 != nil:
    section.add "Tags", valid_604694
  var valid_604695 = query.getOrDefault("Capabilities")
  valid_604695 = validateParameter(valid_604695, JArray, required = false,
                                 default = nil)
  if valid_604695 != nil:
    section.add "Capabilities", valid_604695
  var valid_604696 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_604696 = validateParameter(valid_604696, JArray, required = false,
                                 default = nil)
  if valid_604696 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604696
  var valid_604697 = query.getOrDefault("Parameters")
  valid_604697 = validateParameter(valid_604697, JArray, required = false,
                                 default = nil)
  if valid_604697 != nil:
    section.add "Parameters", valid_604697
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604698 = query.getOrDefault("Action")
  valid_604698 = validateParameter(valid_604698, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_604698 != nil:
    section.add "Action", valid_604698
  var valid_604699 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604699 = validateParameter(valid_604699, JString, required = false,
                                 default = nil)
  if valid_604699 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604699
  var valid_604700 = query.getOrDefault("StackSetName")
  valid_604700 = validateParameter(valid_604700, JString, required = true,
                                 default = nil)
  if valid_604700 != nil:
    section.add "StackSetName", valid_604700
  var valid_604701 = query.getOrDefault("ExecutionRoleName")
  valid_604701 = validateParameter(valid_604701, JString, required = false,
                                 default = nil)
  if valid_604701 != nil:
    section.add "ExecutionRoleName", valid_604701
  var valid_604702 = query.getOrDefault("UsePreviousTemplate")
  valid_604702 = validateParameter(valid_604702, JBool, required = false, default = nil)
  if valid_604702 != nil:
    section.add "UsePreviousTemplate", valid_604702
  var valid_604703 = query.getOrDefault("Accounts")
  valid_604703 = validateParameter(valid_604703, JArray, required = false,
                                 default = nil)
  if valid_604703 != nil:
    section.add "Accounts", valid_604703
  var valid_604704 = query.getOrDefault("OperationId")
  valid_604704 = validateParameter(valid_604704, JString, required = false,
                                 default = nil)
  if valid_604704 != nil:
    section.add "OperationId", valid_604704
  var valid_604705 = query.getOrDefault("Regions")
  valid_604705 = validateParameter(valid_604705, JArray, required = false,
                                 default = nil)
  if valid_604705 != nil:
    section.add "Regions", valid_604705
  var valid_604706 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604706 = validateParameter(valid_604706, JString, required = false,
                                 default = nil)
  if valid_604706 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604706
  var valid_604707 = query.getOrDefault("Version")
  valid_604707 = validateParameter(valid_604707, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604707 != nil:
    section.add "Version", valid_604707
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604708 = header.getOrDefault("X-Amz-Date")
  valid_604708 = validateParameter(valid_604708, JString, required = false,
                                 default = nil)
  if valid_604708 != nil:
    section.add "X-Amz-Date", valid_604708
  var valid_604709 = header.getOrDefault("X-Amz-Security-Token")
  valid_604709 = validateParameter(valid_604709, JString, required = false,
                                 default = nil)
  if valid_604709 != nil:
    section.add "X-Amz-Security-Token", valid_604709
  var valid_604710 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604710 = validateParameter(valid_604710, JString, required = false,
                                 default = nil)
  if valid_604710 != nil:
    section.add "X-Amz-Content-Sha256", valid_604710
  var valid_604711 = header.getOrDefault("X-Amz-Algorithm")
  valid_604711 = validateParameter(valid_604711, JString, required = false,
                                 default = nil)
  if valid_604711 != nil:
    section.add "X-Amz-Algorithm", valid_604711
  var valid_604712 = header.getOrDefault("X-Amz-Signature")
  valid_604712 = validateParameter(valid_604712, JString, required = false,
                                 default = nil)
  if valid_604712 != nil:
    section.add "X-Amz-Signature", valid_604712
  var valid_604713 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604713 = validateParameter(valid_604713, JString, required = false,
                                 default = nil)
  if valid_604713 != nil:
    section.add "X-Amz-SignedHeaders", valid_604713
  var valid_604714 = header.getOrDefault("X-Amz-Credential")
  valid_604714 = validateParameter(valid_604714, JString, required = false,
                                 default = nil)
  if valid_604714 != nil:
    section.add "X-Amz-Credential", valid_604714
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604715: Call_GetUpdateStackSet_604685; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_604715.validator(path, query, header, formData, body)
  let scheme = call_604715.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604715.url(scheme.get, call_604715.host, call_604715.base,
                         call_604715.route, valid.getOrDefault("path"))
  result = hook(call_604715, url, valid)

proc call*(call_604716: Call_GetUpdateStackSet_604685; StackSetName: string;
          TemplateURL: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          TemplateBody: string = ""; Description: string = "";
          AdministrationRoleARN: string = "";
          OperationPreferencesFailureTolerancePercentage: string = "";
          Tags: JsonNode = nil; Capabilities: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          Parameters: JsonNode = nil; Action: string = "UpdateStackSet";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          ExecutionRoleName: string = ""; UsePreviousTemplate: bool = false;
          Accounts: JsonNode = nil; OperationId: string = ""; Regions: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicity acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  var query_604717 = newJObject()
  add(query_604717, "TemplateURL", newJString(TemplateURL))
  add(query_604717, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_604717, "TemplateBody", newJString(TemplateBody))
  add(query_604717, "Description", newJString(Description))
  add(query_604717, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_604717, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Tags != nil:
    query_604717.add "Tags", Tags
  if Capabilities != nil:
    query_604717.add "Capabilities", Capabilities
  if OperationPreferencesRegionOrder != nil:
    query_604717.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  if Parameters != nil:
    query_604717.add "Parameters", Parameters
  add(query_604717, "Action", newJString(Action))
  add(query_604717, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_604717, "StackSetName", newJString(StackSetName))
  add(query_604717, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_604717, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if Accounts != nil:
    query_604717.add "Accounts", Accounts
  add(query_604717, "OperationId", newJString(OperationId))
  if Regions != nil:
    query_604717.add "Regions", Regions
  add(query_604717, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_604717, "Version", newJString(Version))
  result = call_604716.call(nil, query_604717, nil, nil, nil)

var getUpdateStackSet* = Call_GetUpdateStackSet_604685(name: "getUpdateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStackSet", validator: validate_GetUpdateStackSet_604686,
    base: "/", url: url_GetUpdateStackSet_604687,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateTerminationProtection_604769 = ref object of OpenApiRestCall_602433
proc url_PostUpdateTerminationProtection_604771(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostUpdateTerminationProtection_604770(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604772 = query.getOrDefault("Action")
  valid_604772 = validateParameter(valid_604772, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_604772 != nil:
    section.add "Action", valid_604772
  var valid_604773 = query.getOrDefault("Version")
  valid_604773 = validateParameter(valid_604773, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604773 != nil:
    section.add "Version", valid_604773
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604774 = header.getOrDefault("X-Amz-Date")
  valid_604774 = validateParameter(valid_604774, JString, required = false,
                                 default = nil)
  if valid_604774 != nil:
    section.add "X-Amz-Date", valid_604774
  var valid_604775 = header.getOrDefault("X-Amz-Security-Token")
  valid_604775 = validateParameter(valid_604775, JString, required = false,
                                 default = nil)
  if valid_604775 != nil:
    section.add "X-Amz-Security-Token", valid_604775
  var valid_604776 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604776 = validateParameter(valid_604776, JString, required = false,
                                 default = nil)
  if valid_604776 != nil:
    section.add "X-Amz-Content-Sha256", valid_604776
  var valid_604777 = header.getOrDefault("X-Amz-Algorithm")
  valid_604777 = validateParameter(valid_604777, JString, required = false,
                                 default = nil)
  if valid_604777 != nil:
    section.add "X-Amz-Algorithm", valid_604777
  var valid_604778 = header.getOrDefault("X-Amz-Signature")
  valid_604778 = validateParameter(valid_604778, JString, required = false,
                                 default = nil)
  if valid_604778 != nil:
    section.add "X-Amz-Signature", valid_604778
  var valid_604779 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604779 = validateParameter(valid_604779, JString, required = false,
                                 default = nil)
  if valid_604779 != nil:
    section.add "X-Amz-SignedHeaders", valid_604779
  var valid_604780 = header.getOrDefault("X-Amz-Credential")
  valid_604780 = validateParameter(valid_604780, JString, required = false,
                                 default = nil)
  if valid_604780 != nil:
    section.add "X-Amz-Credential", valid_604780
  result.add "header", section
  ## parameters in `formData` object:
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `EnableTerminationProtection` field"
  var valid_604781 = formData.getOrDefault("EnableTerminationProtection")
  valid_604781 = validateParameter(valid_604781, JBool, required = true, default = nil)
  if valid_604781 != nil:
    section.add "EnableTerminationProtection", valid_604781
  var valid_604782 = formData.getOrDefault("StackName")
  valid_604782 = validateParameter(valid_604782, JString, required = true,
                                 default = nil)
  if valid_604782 != nil:
    section.add "StackName", valid_604782
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604783: Call_PostUpdateTerminationProtection_604769;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_604783.validator(path, query, header, formData, body)
  let scheme = call_604783.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604783.url(scheme.get, call_604783.host, call_604783.base,
                         call_604783.route, valid.getOrDefault("path"))
  result = hook(call_604783, url, valid)

proc call*(call_604784: Call_PostUpdateTerminationProtection_604769;
          EnableTerminationProtection: bool; StackName: string;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## postUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   Version: string (required)
  var query_604785 = newJObject()
  var formData_604786 = newJObject()
  add(formData_604786, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_604785, "Action", newJString(Action))
  add(formData_604786, "StackName", newJString(StackName))
  add(query_604785, "Version", newJString(Version))
  result = call_604784.call(nil, query_604785, nil, formData_604786, nil)

var postUpdateTerminationProtection* = Call_PostUpdateTerminationProtection_604769(
    name: "postUpdateTerminationProtection", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_PostUpdateTerminationProtection_604770, base: "/",
    url: url_PostUpdateTerminationProtection_604771,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateTerminationProtection_604752 = ref object of OpenApiRestCall_602433
proc url_GetUpdateTerminationProtection_604754(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetUpdateTerminationProtection_604753(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Version: JString (required)
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604755 = query.getOrDefault("Action")
  valid_604755 = validateParameter(valid_604755, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_604755 != nil:
    section.add "Action", valid_604755
  var valid_604756 = query.getOrDefault("EnableTerminationProtection")
  valid_604756 = validateParameter(valid_604756, JBool, required = true, default = nil)
  if valid_604756 != nil:
    section.add "EnableTerminationProtection", valid_604756
  var valid_604757 = query.getOrDefault("Version")
  valid_604757 = validateParameter(valid_604757, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604757 != nil:
    section.add "Version", valid_604757
  var valid_604758 = query.getOrDefault("StackName")
  valid_604758 = validateParameter(valid_604758, JString, required = true,
                                 default = nil)
  if valid_604758 != nil:
    section.add "StackName", valid_604758
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604759 = header.getOrDefault("X-Amz-Date")
  valid_604759 = validateParameter(valid_604759, JString, required = false,
                                 default = nil)
  if valid_604759 != nil:
    section.add "X-Amz-Date", valid_604759
  var valid_604760 = header.getOrDefault("X-Amz-Security-Token")
  valid_604760 = validateParameter(valid_604760, JString, required = false,
                                 default = nil)
  if valid_604760 != nil:
    section.add "X-Amz-Security-Token", valid_604760
  var valid_604761 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604761 = validateParameter(valid_604761, JString, required = false,
                                 default = nil)
  if valid_604761 != nil:
    section.add "X-Amz-Content-Sha256", valid_604761
  var valid_604762 = header.getOrDefault("X-Amz-Algorithm")
  valid_604762 = validateParameter(valid_604762, JString, required = false,
                                 default = nil)
  if valid_604762 != nil:
    section.add "X-Amz-Algorithm", valid_604762
  var valid_604763 = header.getOrDefault("X-Amz-Signature")
  valid_604763 = validateParameter(valid_604763, JString, required = false,
                                 default = nil)
  if valid_604763 != nil:
    section.add "X-Amz-Signature", valid_604763
  var valid_604764 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604764 = validateParameter(valid_604764, JString, required = false,
                                 default = nil)
  if valid_604764 != nil:
    section.add "X-Amz-SignedHeaders", valid_604764
  var valid_604765 = header.getOrDefault("X-Amz-Credential")
  valid_604765 = validateParameter(valid_604765, JString, required = false,
                                 default = nil)
  if valid_604765 != nil:
    section.add "X-Amz-Credential", valid_604765
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604766: Call_GetUpdateTerminationProtection_604752; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_604766.validator(path, query, header, formData, body)
  let scheme = call_604766.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604766.url(scheme.get, call_604766.host, call_604766.base,
                         call_604766.route, valid.getOrDefault("path"))
  result = hook(call_604766, url, valid)

proc call*(call_604767: Call_GetUpdateTerminationProtection_604752;
          EnableTerminationProtection: bool; StackName: string;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   Action: string (required)
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Version: string (required)
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  var query_604768 = newJObject()
  add(query_604768, "Action", newJString(Action))
  add(query_604768, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_604768, "Version", newJString(Version))
  add(query_604768, "StackName", newJString(StackName))
  result = call_604767.call(nil, query_604768, nil, nil, nil)

var getUpdateTerminationProtection* = Call_GetUpdateTerminationProtection_604752(
    name: "getUpdateTerminationProtection", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_GetUpdateTerminationProtection_604753, base: "/",
    url: url_GetUpdateTerminationProtection_604754,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostValidateTemplate_604804 = ref object of OpenApiRestCall_602433
proc url_PostValidateTemplate_604806(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_PostValidateTemplate_604805(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604807 = query.getOrDefault("Action")
  valid_604807 = validateParameter(valid_604807, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_604807 != nil:
    section.add "Action", valid_604807
  var valid_604808 = query.getOrDefault("Version")
  valid_604808 = validateParameter(valid_604808, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604808 != nil:
    section.add "Version", valid_604808
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604809 = header.getOrDefault("X-Amz-Date")
  valid_604809 = validateParameter(valid_604809, JString, required = false,
                                 default = nil)
  if valid_604809 != nil:
    section.add "X-Amz-Date", valid_604809
  var valid_604810 = header.getOrDefault("X-Amz-Security-Token")
  valid_604810 = validateParameter(valid_604810, JString, required = false,
                                 default = nil)
  if valid_604810 != nil:
    section.add "X-Amz-Security-Token", valid_604810
  var valid_604811 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604811 = validateParameter(valid_604811, JString, required = false,
                                 default = nil)
  if valid_604811 != nil:
    section.add "X-Amz-Content-Sha256", valid_604811
  var valid_604812 = header.getOrDefault("X-Amz-Algorithm")
  valid_604812 = validateParameter(valid_604812, JString, required = false,
                                 default = nil)
  if valid_604812 != nil:
    section.add "X-Amz-Algorithm", valid_604812
  var valid_604813 = header.getOrDefault("X-Amz-Signature")
  valid_604813 = validateParameter(valid_604813, JString, required = false,
                                 default = nil)
  if valid_604813 != nil:
    section.add "X-Amz-Signature", valid_604813
  var valid_604814 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604814 = validateParameter(valid_604814, JString, required = false,
                                 default = nil)
  if valid_604814 != nil:
    section.add "X-Amz-SignedHeaders", valid_604814
  var valid_604815 = header.getOrDefault("X-Amz-Credential")
  valid_604815 = validateParameter(valid_604815, JString, required = false,
                                 default = nil)
  if valid_604815 != nil:
    section.add "X-Amz-Credential", valid_604815
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  section = newJObject()
  var valid_604816 = formData.getOrDefault("TemplateURL")
  valid_604816 = validateParameter(valid_604816, JString, required = false,
                                 default = nil)
  if valid_604816 != nil:
    section.add "TemplateURL", valid_604816
  var valid_604817 = formData.getOrDefault("TemplateBody")
  valid_604817 = validateParameter(valid_604817, JString, required = false,
                                 default = nil)
  if valid_604817 != nil:
    section.add "TemplateBody", valid_604817
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604818: Call_PostValidateTemplate_604804; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_604818.validator(path, query, header, formData, body)
  let scheme = call_604818.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604818.url(scheme.get, call_604818.host, call_604818.base,
                         call_604818.route, valid.getOrDefault("path"))
  result = hook(call_604818, url, valid)

proc call*(call_604819: Call_PostValidateTemplate_604804; TemplateURL: string = "";
          Action: string = "ValidateTemplate"; TemplateBody: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## postValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_604820 = newJObject()
  var formData_604821 = newJObject()
  add(formData_604821, "TemplateURL", newJString(TemplateURL))
  add(query_604820, "Action", newJString(Action))
  add(formData_604821, "TemplateBody", newJString(TemplateBody))
  add(query_604820, "Version", newJString(Version))
  result = call_604819.call(nil, query_604820, nil, formData_604821, nil)

var postValidateTemplate* = Call_PostValidateTemplate_604804(
    name: "postValidateTemplate", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_PostValidateTemplate_604805, base: "/",
    url: url_PostValidateTemplate_604806, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetValidateTemplate_604787 = ref object of OpenApiRestCall_602433
proc url_GetValidateTemplate_604789(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode): string =
  result = $protocol & "://" & host & base & route

proc validate_GetValidateTemplate_604788(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_604790 = query.getOrDefault("TemplateURL")
  valid_604790 = validateParameter(valid_604790, JString, required = false,
                                 default = nil)
  if valid_604790 != nil:
    section.add "TemplateURL", valid_604790
  var valid_604791 = query.getOrDefault("TemplateBody")
  valid_604791 = validateParameter(valid_604791, JString, required = false,
                                 default = nil)
  if valid_604791 != nil:
    section.add "TemplateBody", valid_604791
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604792 = query.getOrDefault("Action")
  valid_604792 = validateParameter(valid_604792, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_604792 != nil:
    section.add "Action", valid_604792
  var valid_604793 = query.getOrDefault("Version")
  valid_604793 = validateParameter(valid_604793, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604793 != nil:
    section.add "Version", valid_604793
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Date: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-Signature: JString
  ##   X-Amz-SignedHeaders: JString
  ##   X-Amz-Credential: JString
  section = newJObject()
  var valid_604794 = header.getOrDefault("X-Amz-Date")
  valid_604794 = validateParameter(valid_604794, JString, required = false,
                                 default = nil)
  if valid_604794 != nil:
    section.add "X-Amz-Date", valid_604794
  var valid_604795 = header.getOrDefault("X-Amz-Security-Token")
  valid_604795 = validateParameter(valid_604795, JString, required = false,
                                 default = nil)
  if valid_604795 != nil:
    section.add "X-Amz-Security-Token", valid_604795
  var valid_604796 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604796 = validateParameter(valid_604796, JString, required = false,
                                 default = nil)
  if valid_604796 != nil:
    section.add "X-Amz-Content-Sha256", valid_604796
  var valid_604797 = header.getOrDefault("X-Amz-Algorithm")
  valid_604797 = validateParameter(valid_604797, JString, required = false,
                                 default = nil)
  if valid_604797 != nil:
    section.add "X-Amz-Algorithm", valid_604797
  var valid_604798 = header.getOrDefault("X-Amz-Signature")
  valid_604798 = validateParameter(valid_604798, JString, required = false,
                                 default = nil)
  if valid_604798 != nil:
    section.add "X-Amz-Signature", valid_604798
  var valid_604799 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604799 = validateParameter(valid_604799, JString, required = false,
                                 default = nil)
  if valid_604799 != nil:
    section.add "X-Amz-SignedHeaders", valid_604799
  var valid_604800 = header.getOrDefault("X-Amz-Credential")
  valid_604800 = validateParameter(valid_604800, JString, required = false,
                                 default = nil)
  if valid_604800 != nil:
    section.add "X-Amz-Credential", valid_604800
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604801: Call_GetValidateTemplate_604787; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_604801.validator(path, query, header, formData, body)
  let scheme = call_604801.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604801.url(scheme.get, call_604801.host, call_604801.base,
                         call_604801.route, valid.getOrDefault("path"))
  result = hook(call_604801, url, valid)

proc call*(call_604802: Call_GetValidateTemplate_604787; TemplateURL: string = "";
          TemplateBody: string = ""; Action: string = "ValidateTemplate";
          Version: string = "2010-05-15"): Recallable =
  ## getValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604803 = newJObject()
  add(query_604803, "TemplateURL", newJString(TemplateURL))
  add(query_604803, "TemplateBody", newJString(TemplateBody))
  add(query_604803, "Action", newJString(Action))
  add(query_604803, "Version", newJString(Version))
  result = call_604802.call(nil, query_604803, nil, nil, nil)

var getValidateTemplate* = Call_GetValidateTemplate_604787(
    name: "getValidateTemplate", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_GetValidateTemplate_604788, base: "/",
    url: url_GetValidateTemplate_604789, schemes: {Scheme.Https, Scheme.Http})
export
  rest

proc sign(recall: var Recallable; query: JsonNode; algo: SigningAlgo = SHA256) =
  let
    date = makeDateTime()
    access = os.getEnv("AWS_ACCESS_KEY_ID", "")
    secret = os.getEnv("AWS_SECRET_ACCESS_KEY", "")
    region = os.getEnv("AWS_REGION", "")
  assert secret != "", "need secret key in env"
  assert access != "", "need access key in env"
  assert region != "", "need region in env"
  var
    normal: PathNormal
    url = normalizeUrl(recall.url, query, normalize = normal)
    scheme = parseEnum[Scheme](url.scheme)
  assert scheme in awsServers, "unknown scheme `" & $scheme & "`"
  assert region in awsServers[scheme], "unknown region `" & region & "`"
  url.hostname = awsServers[scheme][region]
  case awsServiceName.toLowerAscii
  of "s3":
    normal = PathNormal.S3
  else:
    normal = PathNormal.Default
  recall.headers["Host"] = url.hostname
  recall.headers["X-Amz-Date"] = date
  let
    algo = SHA256
    scope = credentialScope(region = region, service = awsServiceName, date = date)
    request = canonicalRequest(recall.meth, $url, query, recall.headers, recall.body,
                             normalize = normal, digest = algo)
    sts = stringToSign(request.hash(algo), scope, date = date, digest = algo)
    signature = calculateSignature(secret = secret, date = date, region = region,
                                 service = awsServiceName, sts, digest = algo)
  var auth = $algo & " "
  auth &= "Credential=" & access / scope & ", "
  auth &= "SignedHeaders=" & recall.headers.signedHeaders & ", "
  auth &= "Signature=" & signature
  recall.headers["Authorization"] = auth
  recall.headers.del "Host"
  recall.url = $url

method hook(call: OpenApiRestCall; url: string; input: JsonNode): Recallable {.base.} =
  let headers = massageHeaders(input.getOrDefault("header"))
  result = newRecallable(call, url, headers, "")
  result.sign(input.getOrDefault("query"), SHA256)
