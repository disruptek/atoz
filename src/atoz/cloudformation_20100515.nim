
import
  json, options, hashes, uri, strutils, tables, rest, os, uri, strutils, httpcore, sigv4

## auto-generated via openapi macro
## title: AWS CloudFormation
## version: 2010-05-15
## termsOfService: https://aws.amazon.com/service-terms/
## license:
##     name: Apache 2.0 License
##     url: http://www.apache.org/licenses/
## 
## <fullname>AWS CloudFormation</fullname> <p>AWS CloudFormation allows you to create and manage AWS infrastructure deployments predictably and repeatedly. You can use AWS CloudFormation to leverage AWS products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly-reliable, highly scalable, cost-effective applications without creating or configuring the underlying AWS infrastructure.</p> <p>With AWS CloudFormation, you declare all of your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. AWS CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about AWS CloudFormation, see the <a href="http://aws.amazon.com/cloudformation/">AWS CloudFormation Product Page</a>.</p> <p>Amazon CloudFormation makes use of other AWS products. If you need additional technical information about a specific AWS product, you can find the product's technical documentation at <a href="https://docs.aws.amazon.com/">docs.aws.amazon.com</a>.</p>
## 
## Amazon Web Services documentation
## https://docs.aws.amazon.com/cloudformation/
type
  Scheme {.pure.} = enum
    Https = "https", Http = "http", Wss = "wss", Ws = "ws"
  ValidatorSignature = proc (query: JsonNode = nil; body: JsonNode = nil;
                          header: JsonNode = nil; path: JsonNode = nil;
                          formData: JsonNode = nil): JsonNode
  OpenApiRestCall = ref object of RestCall
    validator*: ValidatorSignature
    route*: string
    base*: string
    host*: string
    schemes*: set[Scheme]
    url*: proc (protocol: Scheme; host: string; base: string; route: string;
              path: JsonNode; query: JsonNode): Uri

  OpenApiRestCall_601389 = ref object of OpenApiRestCall
proc hash(scheme: Scheme): Hash {.used.} =
  result = hash(ord(scheme))

proc clone[T: OpenApiRestCall_601389](t: T): T {.used.} =
  result = T(name: t.name, meth: t.meth, host: t.host, base: t.base, route: t.route,
           schemes: t.schemes, validator: t.validator, url: t.url)

proc pickScheme(t: OpenApiRestCall_601389): Option[Scheme] {.used.} =
  ## select a supported scheme from a set of candidates
  for scheme in Scheme.low ..
      Scheme.high:
    if scheme notin t.schemes:
      continue
    if scheme in [Scheme.Https, Scheme.Wss]:
      when defined(ssl):
        return some(scheme)
      else:
        continue
    return some(scheme)

proc validateParameter(js: JsonNode; kind: JsonNodeKind; required: bool;
                      default: JsonNode = nil): JsonNode =
  ## ensure an input is of the correct json type and yield
  ## a suitable default value when appropriate
  if js ==
      nil:
    if default != nil:
      return validateParameter(default, kind, required = required)
  result = js
  if result ==
      nil:
    assert not required, $kind & " expected; received nil"
    if required:
      result = newJNull()
  else:
    assert js.kind ==
        kind, $kind & " expected; received " &
        $js.kind

type
  KeyVal {.used.} = tuple[key: string, val: string]
  PathTokenKind = enum
    ConstantSegment, VariableSegment
  PathToken = tuple[kind: PathTokenKind, value: string]
proc queryString(query: JsonNode): string {.used.} =
  var qs: seq[KeyVal]
  if query == nil:
    return ""
  for k, v in query.pairs:
    qs.add (key: k, val: v.getStr)
  result = encodeQuery(qs)

proc hydratePath(input: JsonNode; segments: seq[PathToken]): Option[string] {.used.} =
  ## reconstitute a path with constants and variable values taken from json
  var head: string
  if segments.len == 0:
    return some("")
  head = segments[0].value
  case segments[0].kind
  of ConstantSegment:
    discard
  of VariableSegment:
    if head notin input:
      return
    let js = input[head]
    case js.kind
    of JInt, JFloat, JNull, JBool:
      head = $js
    of JString:
      head = js.getStr
    else:
      return
  var remainder = input.hydratePath(segments[1 ..^ 1])
  if remainder.isNone:
    return
  result = some(head & remainder.get)

const
  awsServers = {Scheme.Http: {"ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com", "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com", "us-west-2": "cloudformation.us-west-2.amazonaws.com", "eu-west-2": "cloudformation.eu-west-2.amazonaws.com", "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com", "eu-central-1": "cloudformation.eu-central-1.amazonaws.com", "us-east-2": "cloudformation.us-east-2.amazonaws.com", "us-east-1": "cloudformation.us-east-1.amazonaws.com", "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn", "ap-south-1": "cloudformation.ap-south-1.amazonaws.com", "eu-north-1": "cloudformation.eu-north-1.amazonaws.com", "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com", "us-west-1": "cloudformation.us-west-1.amazonaws.com", "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com", "eu-west-3": "cloudformation.eu-west-3.amazonaws.com", "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn", "sa-east-1": "cloudformation.sa-east-1.amazonaws.com", "eu-west-1": "cloudformation.eu-west-1.amazonaws.com", "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com", "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com", "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable, Scheme.Https: {
      "ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com",
      "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com",
      "us-west-2": "cloudformation.us-west-2.amazonaws.com",
      "eu-west-2": "cloudformation.eu-west-2.amazonaws.com",
      "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com",
      "eu-central-1": "cloudformation.eu-central-1.amazonaws.com",
      "us-east-2": "cloudformation.us-east-2.amazonaws.com",
      "us-east-1": "cloudformation.us-east-1.amazonaws.com",
      "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn",
      "ap-south-1": "cloudformation.ap-south-1.amazonaws.com",
      "eu-north-1": "cloudformation.eu-north-1.amazonaws.com",
      "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com",
      "us-west-1": "cloudformation.us-west-1.amazonaws.com",
      "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com",
      "eu-west-3": "cloudformation.eu-west-3.amazonaws.com",
      "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn",
      "sa-east-1": "cloudformation.sa-east-1.amazonaws.com",
      "eu-west-1": "cloudformation.eu-west-1.amazonaws.com",
      "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com",
      "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com",
      "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable}.toTable
const
  awsServiceName = "cloudformation"
method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode): Recallable {.base.}
type
  Call_PostCancelUpdateStack_601999 = ref object of OpenApiRestCall_601389
proc url_PostCancelUpdateStack_602001(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCancelUpdateStack_602000(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602002 = query.getOrDefault("Action")
  valid_602002 = validateParameter(valid_602002, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_602002 != nil:
    section.add "Action", valid_602002
  var valid_602003 = query.getOrDefault("Version")
  valid_602003 = validateParameter(valid_602003, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602003 != nil:
    section.add "Version", valid_602003
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602004 = header.getOrDefault("X-Amz-Signature")
  valid_602004 = validateParameter(valid_602004, JString, required = false,
                                 default = nil)
  if valid_602004 != nil:
    section.add "X-Amz-Signature", valid_602004
  var valid_602005 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602005 = validateParameter(valid_602005, JString, required = false,
                                 default = nil)
  if valid_602005 != nil:
    section.add "X-Amz-Content-Sha256", valid_602005
  var valid_602006 = header.getOrDefault("X-Amz-Date")
  valid_602006 = validateParameter(valid_602006, JString, required = false,
                                 default = nil)
  if valid_602006 != nil:
    section.add "X-Amz-Date", valid_602006
  var valid_602007 = header.getOrDefault("X-Amz-Credential")
  valid_602007 = validateParameter(valid_602007, JString, required = false,
                                 default = nil)
  if valid_602007 != nil:
    section.add "X-Amz-Credential", valid_602007
  var valid_602008 = header.getOrDefault("X-Amz-Security-Token")
  valid_602008 = validateParameter(valid_602008, JString, required = false,
                                 default = nil)
  if valid_602008 != nil:
    section.add "X-Amz-Security-Token", valid_602008
  var valid_602009 = header.getOrDefault("X-Amz-Algorithm")
  valid_602009 = validateParameter(valid_602009, JString, required = false,
                                 default = nil)
  if valid_602009 != nil:
    section.add "X-Amz-Algorithm", valid_602009
  var valid_602010 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602010 = validateParameter(valid_602010, JString, required = false,
                                 default = nil)
  if valid_602010 != nil:
    section.add "X-Amz-SignedHeaders", valid_602010
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602011 = formData.getOrDefault("StackName")
  valid_602011 = validateParameter(valid_602011, JString, required = true,
                                 default = nil)
  if valid_602011 != nil:
    section.add "StackName", valid_602011
  var valid_602012 = formData.getOrDefault("ClientRequestToken")
  valid_602012 = validateParameter(valid_602012, JString, required = false,
                                 default = nil)
  if valid_602012 != nil:
    section.add "ClientRequestToken", valid_602012
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602013: Call_PostCancelUpdateStack_601999; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_602013.validator(path, query, header, formData, body)
  let scheme = call_602013.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602013.url(scheme.get, call_602013.host, call_602013.base,
                         call_602013.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602013, url, valid)

proc call*(call_602014: Call_PostCancelUpdateStack_601999; StackName: string;
          ClientRequestToken: string = ""; Action: string = "CancelUpdateStack";
          Version: string = "2010-05-15"): Recallable =
  ## postCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602015 = newJObject()
  var formData_602016 = newJObject()
  add(formData_602016, "StackName", newJString(StackName))
  add(formData_602016, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602015, "Action", newJString(Action))
  add(query_602015, "Version", newJString(Version))
  result = call_602014.call(nil, query_602015, nil, formData_602016, nil)

var postCancelUpdateStack* = Call_PostCancelUpdateStack_601999(
    name: "postCancelUpdateStack", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_PostCancelUpdateStack_602000, base: "/",
    url: url_PostCancelUpdateStack_602001, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCancelUpdateStack_601727 = ref object of OpenApiRestCall_601389
proc url_GetCancelUpdateStack_601729(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCancelUpdateStack_601728(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_601841 = query.getOrDefault("StackName")
  valid_601841 = validateParameter(valid_601841, JString, required = true,
                                 default = nil)
  if valid_601841 != nil:
    section.add "StackName", valid_601841
  var valid_601855 = query.getOrDefault("Action")
  valid_601855 = validateParameter(valid_601855, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_601855 != nil:
    section.add "Action", valid_601855
  var valid_601856 = query.getOrDefault("ClientRequestToken")
  valid_601856 = validateParameter(valid_601856, JString, required = false,
                                 default = nil)
  if valid_601856 != nil:
    section.add "ClientRequestToken", valid_601856
  var valid_601857 = query.getOrDefault("Version")
  valid_601857 = validateParameter(valid_601857, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_601857 != nil:
    section.add "Version", valid_601857
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_601858 = header.getOrDefault("X-Amz-Signature")
  valid_601858 = validateParameter(valid_601858, JString, required = false,
                                 default = nil)
  if valid_601858 != nil:
    section.add "X-Amz-Signature", valid_601858
  var valid_601859 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_601859 = validateParameter(valid_601859, JString, required = false,
                                 default = nil)
  if valid_601859 != nil:
    section.add "X-Amz-Content-Sha256", valid_601859
  var valid_601860 = header.getOrDefault("X-Amz-Date")
  valid_601860 = validateParameter(valid_601860, JString, required = false,
                                 default = nil)
  if valid_601860 != nil:
    section.add "X-Amz-Date", valid_601860
  var valid_601861 = header.getOrDefault("X-Amz-Credential")
  valid_601861 = validateParameter(valid_601861, JString, required = false,
                                 default = nil)
  if valid_601861 != nil:
    section.add "X-Amz-Credential", valid_601861
  var valid_601862 = header.getOrDefault("X-Amz-Security-Token")
  valid_601862 = validateParameter(valid_601862, JString, required = false,
                                 default = nil)
  if valid_601862 != nil:
    section.add "X-Amz-Security-Token", valid_601862
  var valid_601863 = header.getOrDefault("X-Amz-Algorithm")
  valid_601863 = validateParameter(valid_601863, JString, required = false,
                                 default = nil)
  if valid_601863 != nil:
    section.add "X-Amz-Algorithm", valid_601863
  var valid_601864 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_601864 = validateParameter(valid_601864, JString, required = false,
                                 default = nil)
  if valid_601864 != nil:
    section.add "X-Amz-SignedHeaders", valid_601864
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_601887: Call_GetCancelUpdateStack_601727; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_601887.validator(path, query, header, formData, body)
  let scheme = call_601887.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_601887.url(scheme.get, call_601887.host, call_601887.base,
                         call_601887.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_601887, url, valid)

proc call*(call_601958: Call_GetCancelUpdateStack_601727; StackName: string;
          Action: string = "CancelUpdateStack"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  var query_601959 = newJObject()
  add(query_601959, "StackName", newJString(StackName))
  add(query_601959, "Action", newJString(Action))
  add(query_601959, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_601959, "Version", newJString(Version))
  result = call_601958.call(nil, query_601959, nil, nil, nil)

var getCancelUpdateStack* = Call_GetCancelUpdateStack_601727(
    name: "getCancelUpdateStack", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_GetCancelUpdateStack_601728, base: "/",
    url: url_GetCancelUpdateStack_601729, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostContinueUpdateRollback_602036 = ref object of OpenApiRestCall_601389
proc url_PostContinueUpdateRollback_602038(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostContinueUpdateRollback_602037(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602039 = query.getOrDefault("Action")
  valid_602039 = validateParameter(valid_602039, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_602039 != nil:
    section.add "Action", valid_602039
  var valid_602040 = query.getOrDefault("Version")
  valid_602040 = validateParameter(valid_602040, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602040 != nil:
    section.add "Version", valid_602040
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602041 = header.getOrDefault("X-Amz-Signature")
  valid_602041 = validateParameter(valid_602041, JString, required = false,
                                 default = nil)
  if valid_602041 != nil:
    section.add "X-Amz-Signature", valid_602041
  var valid_602042 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602042 = validateParameter(valid_602042, JString, required = false,
                                 default = nil)
  if valid_602042 != nil:
    section.add "X-Amz-Content-Sha256", valid_602042
  var valid_602043 = header.getOrDefault("X-Amz-Date")
  valid_602043 = validateParameter(valid_602043, JString, required = false,
                                 default = nil)
  if valid_602043 != nil:
    section.add "X-Amz-Date", valid_602043
  var valid_602044 = header.getOrDefault("X-Amz-Credential")
  valid_602044 = validateParameter(valid_602044, JString, required = false,
                                 default = nil)
  if valid_602044 != nil:
    section.add "X-Amz-Credential", valid_602044
  var valid_602045 = header.getOrDefault("X-Amz-Security-Token")
  valid_602045 = validateParameter(valid_602045, JString, required = false,
                                 default = nil)
  if valid_602045 != nil:
    section.add "X-Amz-Security-Token", valid_602045
  var valid_602046 = header.getOrDefault("X-Amz-Algorithm")
  valid_602046 = validateParameter(valid_602046, JString, required = false,
                                 default = nil)
  if valid_602046 != nil:
    section.add "X-Amz-Algorithm", valid_602046
  var valid_602047 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602047 = validateParameter(valid_602047, JString, required = false,
                                 default = nil)
  if valid_602047 != nil:
    section.add "X-Amz-SignedHeaders", valid_602047
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602048 = formData.getOrDefault("StackName")
  valid_602048 = validateParameter(valid_602048, JString, required = true,
                                 default = nil)
  if valid_602048 != nil:
    section.add "StackName", valid_602048
  var valid_602049 = formData.getOrDefault("RoleARN")
  valid_602049 = validateParameter(valid_602049, JString, required = false,
                                 default = nil)
  if valid_602049 != nil:
    section.add "RoleARN", valid_602049
  var valid_602050 = formData.getOrDefault("ClientRequestToken")
  valid_602050 = validateParameter(valid_602050, JString, required = false,
                                 default = nil)
  if valid_602050 != nil:
    section.add "ClientRequestToken", valid_602050
  var valid_602051 = formData.getOrDefault("ResourcesToSkip")
  valid_602051 = validateParameter(valid_602051, JArray, required = false,
                                 default = nil)
  if valid_602051 != nil:
    section.add "ResourcesToSkip", valid_602051
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602052: Call_PostContinueUpdateRollback_602036; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_602052.validator(path, query, header, formData, body)
  let scheme = call_602052.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602052.url(scheme.get, call_602052.host, call_602052.base,
                         call_602052.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602052, url, valid)

proc call*(call_602053: Call_PostContinueUpdateRollback_602036; StackName: string;
          RoleARN: string = ""; ClientRequestToken: string = "";
          Action: string = "ContinueUpdateRollback";
          ResourcesToSkip: JsonNode = nil; Version: string = "2010-05-15"): Recallable =
  ## postContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   Version: string (required)
  var query_602054 = newJObject()
  var formData_602055 = newJObject()
  add(formData_602055, "StackName", newJString(StackName))
  add(formData_602055, "RoleARN", newJString(RoleARN))
  add(formData_602055, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602054, "Action", newJString(Action))
  if ResourcesToSkip != nil:
    formData_602055.add "ResourcesToSkip", ResourcesToSkip
  add(query_602054, "Version", newJString(Version))
  result = call_602053.call(nil, query_602054, nil, formData_602055, nil)

var postContinueUpdateRollback* = Call_PostContinueUpdateRollback_602036(
    name: "postContinueUpdateRollback", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_PostContinueUpdateRollback_602037, base: "/",
    url: url_PostContinueUpdateRollback_602038,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetContinueUpdateRollback_602017 = ref object of OpenApiRestCall_601389
proc url_GetContinueUpdateRollback_602019(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetContinueUpdateRollback_602018(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_602020 = query.getOrDefault("ResourcesToSkip")
  valid_602020 = validateParameter(valid_602020, JArray, required = false,
                                 default = nil)
  if valid_602020 != nil:
    section.add "ResourcesToSkip", valid_602020
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602021 = query.getOrDefault("StackName")
  valid_602021 = validateParameter(valid_602021, JString, required = true,
                                 default = nil)
  if valid_602021 != nil:
    section.add "StackName", valid_602021
  var valid_602022 = query.getOrDefault("Action")
  valid_602022 = validateParameter(valid_602022, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_602022 != nil:
    section.add "Action", valid_602022
  var valid_602023 = query.getOrDefault("ClientRequestToken")
  valid_602023 = validateParameter(valid_602023, JString, required = false,
                                 default = nil)
  if valid_602023 != nil:
    section.add "ClientRequestToken", valid_602023
  var valid_602024 = query.getOrDefault("Version")
  valid_602024 = validateParameter(valid_602024, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602024 != nil:
    section.add "Version", valid_602024
  var valid_602025 = query.getOrDefault("RoleARN")
  valid_602025 = validateParameter(valid_602025, JString, required = false,
                                 default = nil)
  if valid_602025 != nil:
    section.add "RoleARN", valid_602025
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602026 = header.getOrDefault("X-Amz-Signature")
  valid_602026 = validateParameter(valid_602026, JString, required = false,
                                 default = nil)
  if valid_602026 != nil:
    section.add "X-Amz-Signature", valid_602026
  var valid_602027 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602027 = validateParameter(valid_602027, JString, required = false,
                                 default = nil)
  if valid_602027 != nil:
    section.add "X-Amz-Content-Sha256", valid_602027
  var valid_602028 = header.getOrDefault("X-Amz-Date")
  valid_602028 = validateParameter(valid_602028, JString, required = false,
                                 default = nil)
  if valid_602028 != nil:
    section.add "X-Amz-Date", valid_602028
  var valid_602029 = header.getOrDefault("X-Amz-Credential")
  valid_602029 = validateParameter(valid_602029, JString, required = false,
                                 default = nil)
  if valid_602029 != nil:
    section.add "X-Amz-Credential", valid_602029
  var valid_602030 = header.getOrDefault("X-Amz-Security-Token")
  valid_602030 = validateParameter(valid_602030, JString, required = false,
                                 default = nil)
  if valid_602030 != nil:
    section.add "X-Amz-Security-Token", valid_602030
  var valid_602031 = header.getOrDefault("X-Amz-Algorithm")
  valid_602031 = validateParameter(valid_602031, JString, required = false,
                                 default = nil)
  if valid_602031 != nil:
    section.add "X-Amz-Algorithm", valid_602031
  var valid_602032 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602032 = validateParameter(valid_602032, JString, required = false,
                                 default = nil)
  if valid_602032 != nil:
    section.add "X-Amz-SignedHeaders", valid_602032
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602033: Call_GetContinueUpdateRollback_602017; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_602033.validator(path, query, header, formData, body)
  let scheme = call_602033.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602033.url(scheme.get, call_602033.host, call_602033.base,
                         call_602033.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602033, url, valid)

proc call*(call_602034: Call_GetContinueUpdateRollback_602017; StackName: string;
          ResourcesToSkip: JsonNode = nil;
          Action: string = "ContinueUpdateRollback";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## getContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_602035 = newJObject()
  if ResourcesToSkip != nil:
    query_602035.add "ResourcesToSkip", ResourcesToSkip
  add(query_602035, "StackName", newJString(StackName))
  add(query_602035, "Action", newJString(Action))
  add(query_602035, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602035, "Version", newJString(Version))
  add(query_602035, "RoleARN", newJString(RoleARN))
  result = call_602034.call(nil, query_602035, nil, nil, nil)

var getContinueUpdateRollback* = Call_GetContinueUpdateRollback_602017(
    name: "getContinueUpdateRollback", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_GetContinueUpdateRollback_602018, base: "/",
    url: url_GetContinueUpdateRollback_602019,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateChangeSet_602088 = ref object of OpenApiRestCall_601389
proc url_PostCreateChangeSet_602090(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateChangeSet_602089(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602091 = query.getOrDefault("Action")
  valid_602091 = validateParameter(valid_602091, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_602091 != nil:
    section.add "Action", valid_602091
  var valid_602092 = query.getOrDefault("Version")
  valid_602092 = validateParameter(valid_602092, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602092 != nil:
    section.add "Version", valid_602092
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602093 = header.getOrDefault("X-Amz-Signature")
  valid_602093 = validateParameter(valid_602093, JString, required = false,
                                 default = nil)
  if valid_602093 != nil:
    section.add "X-Amz-Signature", valid_602093
  var valid_602094 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602094 = validateParameter(valid_602094, JString, required = false,
                                 default = nil)
  if valid_602094 != nil:
    section.add "X-Amz-Content-Sha256", valid_602094
  var valid_602095 = header.getOrDefault("X-Amz-Date")
  valid_602095 = validateParameter(valid_602095, JString, required = false,
                                 default = nil)
  if valid_602095 != nil:
    section.add "X-Amz-Date", valid_602095
  var valid_602096 = header.getOrDefault("X-Amz-Credential")
  valid_602096 = validateParameter(valid_602096, JString, required = false,
                                 default = nil)
  if valid_602096 != nil:
    section.add "X-Amz-Credential", valid_602096
  var valid_602097 = header.getOrDefault("X-Amz-Security-Token")
  valid_602097 = validateParameter(valid_602097, JString, required = false,
                                 default = nil)
  if valid_602097 != nil:
    section.add "X-Amz-Security-Token", valid_602097
  var valid_602098 = header.getOrDefault("X-Amz-Algorithm")
  valid_602098 = validateParameter(valid_602098, JString, required = false,
                                 default = nil)
  if valid_602098 != nil:
    section.add "X-Amz-Algorithm", valid_602098
  var valid_602099 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602099 = validateParameter(valid_602099, JString, required = false,
                                 default = nil)
  if valid_602099 != nil:
    section.add "X-Amz-SignedHeaders", valid_602099
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602100 = formData.getOrDefault("StackName")
  valid_602100 = validateParameter(valid_602100, JString, required = true,
                                 default = nil)
  if valid_602100 != nil:
    section.add "StackName", valid_602100
  var valid_602101 = formData.getOrDefault("ChangeSetName")
  valid_602101 = validateParameter(valid_602101, JString, required = true,
                                 default = nil)
  if valid_602101 != nil:
    section.add "ChangeSetName", valid_602101
  var valid_602102 = formData.getOrDefault("Description")
  valid_602102 = validateParameter(valid_602102, JString, required = false,
                                 default = nil)
  if valid_602102 != nil:
    section.add "Description", valid_602102
  var valid_602103 = formData.getOrDefault("UsePreviousTemplate")
  valid_602103 = validateParameter(valid_602103, JBool, required = false, default = nil)
  if valid_602103 != nil:
    section.add "UsePreviousTemplate", valid_602103
  var valid_602104 = formData.getOrDefault("TemplateURL")
  valid_602104 = validateParameter(valid_602104, JString, required = false,
                                 default = nil)
  if valid_602104 != nil:
    section.add "TemplateURL", valid_602104
  var valid_602105 = formData.getOrDefault("TemplateBody")
  valid_602105 = validateParameter(valid_602105, JString, required = false,
                                 default = nil)
  if valid_602105 != nil:
    section.add "TemplateBody", valid_602105
  var valid_602106 = formData.getOrDefault("RoleARN")
  valid_602106 = validateParameter(valid_602106, JString, required = false,
                                 default = nil)
  if valid_602106 != nil:
    section.add "RoleARN", valid_602106
  var valid_602107 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_602107 = validateParameter(valid_602107, JArray, required = false,
                                 default = nil)
  if valid_602107 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_602107
  var valid_602108 = formData.getOrDefault("NotificationARNs")
  valid_602108 = validateParameter(valid_602108, JArray, required = false,
                                 default = nil)
  if valid_602108 != nil:
    section.add "NotificationARNs", valid_602108
  var valid_602109 = formData.getOrDefault("Capabilities")
  valid_602109 = validateParameter(valid_602109, JArray, required = false,
                                 default = nil)
  if valid_602109 != nil:
    section.add "Capabilities", valid_602109
  var valid_602110 = formData.getOrDefault("Tags")
  valid_602110 = validateParameter(valid_602110, JArray, required = false,
                                 default = nil)
  if valid_602110 != nil:
    section.add "Tags", valid_602110
  var valid_602111 = formData.getOrDefault("Parameters")
  valid_602111 = validateParameter(valid_602111, JArray, required = false,
                                 default = nil)
  if valid_602111 != nil:
    section.add "Parameters", valid_602111
  var valid_602112 = formData.getOrDefault("ChangeSetType")
  valid_602112 = validateParameter(valid_602112, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_602112 != nil:
    section.add "ChangeSetType", valid_602112
  var valid_602113 = formData.getOrDefault("ResourceTypes")
  valid_602113 = validateParameter(valid_602113, JArray, required = false,
                                 default = nil)
  if valid_602113 != nil:
    section.add "ResourceTypes", valid_602113
  var valid_602114 = formData.getOrDefault("ClientToken")
  valid_602114 = validateParameter(valid_602114, JString, required = false,
                                 default = nil)
  if valid_602114 != nil:
    section.add "ClientToken", valid_602114
  var valid_602115 = formData.getOrDefault("ResourcesToImport")
  valid_602115 = validateParameter(valid_602115, JArray, required = false,
                                 default = nil)
  if valid_602115 != nil:
    section.add "ResourcesToImport", valid_602115
  var valid_602116 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_602116 = validateParameter(valid_602116, JString, required = false,
                                 default = nil)
  if valid_602116 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_602116
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602117: Call_PostCreateChangeSet_602088; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_602117.validator(path, query, header, formData, body)
  let scheme = call_602117.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602117.url(scheme.get, call_602117.host, call_602117.base,
                         call_602117.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602117, url, valid)

proc call*(call_602118: Call_PostCreateChangeSet_602088; StackName: string;
          ChangeSetName: string; Description: string = "";
          UsePreviousTemplate: bool = false; TemplateURL: string = "";
          TemplateBody: string = ""; RoleARN: string = "";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; Action: string = "CreateChangeSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil; ChangeSetType: string = "CREATE";
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          ClientToken: string = ""; ResourcesToImport: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   Version: string (required)
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_602119 = newJObject()
  var formData_602120 = newJObject()
  add(formData_602120, "StackName", newJString(StackName))
  add(formData_602120, "ChangeSetName", newJString(ChangeSetName))
  add(formData_602120, "Description", newJString(Description))
  add(formData_602120, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(formData_602120, "TemplateURL", newJString(TemplateURL))
  add(formData_602120, "TemplateBody", newJString(TemplateBody))
  add(formData_602120, "RoleARN", newJString(RoleARN))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_602120.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_602120.add "NotificationARNs", NotificationARNs
  add(query_602119, "Action", newJString(Action))
  if Capabilities != nil:
    formData_602120.add "Capabilities", Capabilities
  if Tags != nil:
    formData_602120.add "Tags", Tags
  if Parameters != nil:
    formData_602120.add "Parameters", Parameters
  add(formData_602120, "ChangeSetType", newJString(ChangeSetType))
  if ResourceTypes != nil:
    formData_602120.add "ResourceTypes", ResourceTypes
  add(query_602119, "Version", newJString(Version))
  add(formData_602120, "ClientToken", newJString(ClientToken))
  if ResourcesToImport != nil:
    formData_602120.add "ResourcesToImport", ResourcesToImport
  add(formData_602120, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_602118.call(nil, query_602119, nil, formData_602120, nil)

var postCreateChangeSet* = Call_PostCreateChangeSet_602088(
    name: "postCreateChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_PostCreateChangeSet_602089, base: "/",
    url: url_PostCreateChangeSet_602090, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateChangeSet_602056 = ref object of OpenApiRestCall_601389
proc url_GetCreateChangeSet_602058(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateChangeSet_602057(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  var valid_602059 = query.getOrDefault("ResourceTypes")
  valid_602059 = validateParameter(valid_602059, JArray, required = false,
                                 default = nil)
  if valid_602059 != nil:
    section.add "ResourceTypes", valid_602059
  var valid_602060 = query.getOrDefault("RoleARN")
  valid_602060 = validateParameter(valid_602060, JString, required = false,
                                 default = nil)
  if valid_602060 != nil:
    section.add "RoleARN", valid_602060
  var valid_602061 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_602061 = validateParameter(valid_602061, JString, required = false,
                                 default = nil)
  if valid_602061 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_602061
  var valid_602062 = query.getOrDefault("Parameters")
  valid_602062 = validateParameter(valid_602062, JArray, required = false,
                                 default = nil)
  if valid_602062 != nil:
    section.add "Parameters", valid_602062
  var valid_602063 = query.getOrDefault("Tags")
  valid_602063 = validateParameter(valid_602063, JArray, required = false,
                                 default = nil)
  if valid_602063 != nil:
    section.add "Tags", valid_602063
  var valid_602064 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_602064 = validateParameter(valid_602064, JArray, required = false,
                                 default = nil)
  if valid_602064 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_602064
  var valid_602065 = query.getOrDefault("ChangeSetType")
  valid_602065 = validateParameter(valid_602065, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_602065 != nil:
    section.add "ChangeSetType", valid_602065
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602066 = query.getOrDefault("StackName")
  valid_602066 = validateParameter(valid_602066, JString, required = true,
                                 default = nil)
  if valid_602066 != nil:
    section.add "StackName", valid_602066
  var valid_602067 = query.getOrDefault("UsePreviousTemplate")
  valid_602067 = validateParameter(valid_602067, JBool, required = false, default = nil)
  if valid_602067 != nil:
    section.add "UsePreviousTemplate", valid_602067
  var valid_602068 = query.getOrDefault("TemplateBody")
  valid_602068 = validateParameter(valid_602068, JString, required = false,
                                 default = nil)
  if valid_602068 != nil:
    section.add "TemplateBody", valid_602068
  var valid_602069 = query.getOrDefault("ResourcesToImport")
  valid_602069 = validateParameter(valid_602069, JArray, required = false,
                                 default = nil)
  if valid_602069 != nil:
    section.add "ResourcesToImport", valid_602069
  var valid_602070 = query.getOrDefault("NotificationARNs")
  valid_602070 = validateParameter(valid_602070, JArray, required = false,
                                 default = nil)
  if valid_602070 != nil:
    section.add "NotificationARNs", valid_602070
  var valid_602071 = query.getOrDefault("Action")
  valid_602071 = validateParameter(valid_602071, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_602071 != nil:
    section.add "Action", valid_602071
  var valid_602072 = query.getOrDefault("Description")
  valid_602072 = validateParameter(valid_602072, JString, required = false,
                                 default = nil)
  if valid_602072 != nil:
    section.add "Description", valid_602072
  var valid_602073 = query.getOrDefault("TemplateURL")
  valid_602073 = validateParameter(valid_602073, JString, required = false,
                                 default = nil)
  if valid_602073 != nil:
    section.add "TemplateURL", valid_602073
  var valid_602074 = query.getOrDefault("ChangeSetName")
  valid_602074 = validateParameter(valid_602074, JString, required = true,
                                 default = nil)
  if valid_602074 != nil:
    section.add "ChangeSetName", valid_602074
  var valid_602075 = query.getOrDefault("Version")
  valid_602075 = validateParameter(valid_602075, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602075 != nil:
    section.add "Version", valid_602075
  var valid_602076 = query.getOrDefault("Capabilities")
  valid_602076 = validateParameter(valid_602076, JArray, required = false,
                                 default = nil)
  if valid_602076 != nil:
    section.add "Capabilities", valid_602076
  var valid_602077 = query.getOrDefault("ClientToken")
  valid_602077 = validateParameter(valid_602077, JString, required = false,
                                 default = nil)
  if valid_602077 != nil:
    section.add "ClientToken", valid_602077
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602078 = header.getOrDefault("X-Amz-Signature")
  valid_602078 = validateParameter(valid_602078, JString, required = false,
                                 default = nil)
  if valid_602078 != nil:
    section.add "X-Amz-Signature", valid_602078
  var valid_602079 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602079 = validateParameter(valid_602079, JString, required = false,
                                 default = nil)
  if valid_602079 != nil:
    section.add "X-Amz-Content-Sha256", valid_602079
  var valid_602080 = header.getOrDefault("X-Amz-Date")
  valid_602080 = validateParameter(valid_602080, JString, required = false,
                                 default = nil)
  if valid_602080 != nil:
    section.add "X-Amz-Date", valid_602080
  var valid_602081 = header.getOrDefault("X-Amz-Credential")
  valid_602081 = validateParameter(valid_602081, JString, required = false,
                                 default = nil)
  if valid_602081 != nil:
    section.add "X-Amz-Credential", valid_602081
  var valid_602082 = header.getOrDefault("X-Amz-Security-Token")
  valid_602082 = validateParameter(valid_602082, JString, required = false,
                                 default = nil)
  if valid_602082 != nil:
    section.add "X-Amz-Security-Token", valid_602082
  var valid_602083 = header.getOrDefault("X-Amz-Algorithm")
  valid_602083 = validateParameter(valid_602083, JString, required = false,
                                 default = nil)
  if valid_602083 != nil:
    section.add "X-Amz-Algorithm", valid_602083
  var valid_602084 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602084 = validateParameter(valid_602084, JString, required = false,
                                 default = nil)
  if valid_602084 != nil:
    section.add "X-Amz-SignedHeaders", valid_602084
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602085: Call_GetCreateChangeSet_602056; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_602085.validator(path, query, header, formData, body)
  let scheme = call_602085.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602085.url(scheme.get, call_602085.host, call_602085.base,
                         call_602085.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602085, url, valid)

proc call*(call_602086: Call_GetCreateChangeSet_602056; StackName: string;
          ChangeSetName: string; ResourceTypes: JsonNode = nil; RoleARN: string = "";
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          ChangeSetType: string = "CREATE"; UsePreviousTemplate: bool = false;
          TemplateBody: string = ""; ResourcesToImport: JsonNode = nil;
          NotificationARNs: JsonNode = nil; Action: string = "CreateChangeSet";
          Description: string = ""; TemplateURL: string = "";
          Version: string = "2010-05-15"; Capabilities: JsonNode = nil;
          ClientToken: string = ""): Recallable =
  ## getCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: string (required)
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  var query_602087 = newJObject()
  if ResourceTypes != nil:
    query_602087.add "ResourceTypes", ResourceTypes
  add(query_602087, "RoleARN", newJString(RoleARN))
  add(query_602087, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_602087.add "Parameters", Parameters
  if Tags != nil:
    query_602087.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_602087.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_602087, "ChangeSetType", newJString(ChangeSetType))
  add(query_602087, "StackName", newJString(StackName))
  add(query_602087, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_602087, "TemplateBody", newJString(TemplateBody))
  if ResourcesToImport != nil:
    query_602087.add "ResourcesToImport", ResourcesToImport
  if NotificationARNs != nil:
    query_602087.add "NotificationARNs", NotificationARNs
  add(query_602087, "Action", newJString(Action))
  add(query_602087, "Description", newJString(Description))
  add(query_602087, "TemplateURL", newJString(TemplateURL))
  add(query_602087, "ChangeSetName", newJString(ChangeSetName))
  add(query_602087, "Version", newJString(Version))
  if Capabilities != nil:
    query_602087.add "Capabilities", Capabilities
  add(query_602087, "ClientToken", newJString(ClientToken))
  result = call_602086.call(nil, query_602087, nil, nil, nil)

var getCreateChangeSet* = Call_GetCreateChangeSet_602056(
    name: "getCreateChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_GetCreateChangeSet_602057, base: "/",
    url: url_GetCreateChangeSet_602058, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStack_602154 = ref object of OpenApiRestCall_601389
proc url_PostCreateStack_602156(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStack_602155(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602157 = query.getOrDefault("Action")
  valid_602157 = validateParameter(valid_602157, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_602157 != nil:
    section.add "Action", valid_602157
  var valid_602158 = query.getOrDefault("Version")
  valid_602158 = validateParameter(valid_602158, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602158 != nil:
    section.add "Version", valid_602158
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602159 = header.getOrDefault("X-Amz-Signature")
  valid_602159 = validateParameter(valid_602159, JString, required = false,
                                 default = nil)
  if valid_602159 != nil:
    section.add "X-Amz-Signature", valid_602159
  var valid_602160 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602160 = validateParameter(valid_602160, JString, required = false,
                                 default = nil)
  if valid_602160 != nil:
    section.add "X-Amz-Content-Sha256", valid_602160
  var valid_602161 = header.getOrDefault("X-Amz-Date")
  valid_602161 = validateParameter(valid_602161, JString, required = false,
                                 default = nil)
  if valid_602161 != nil:
    section.add "X-Amz-Date", valid_602161
  var valid_602162 = header.getOrDefault("X-Amz-Credential")
  valid_602162 = validateParameter(valid_602162, JString, required = false,
                                 default = nil)
  if valid_602162 != nil:
    section.add "X-Amz-Credential", valid_602162
  var valid_602163 = header.getOrDefault("X-Amz-Security-Token")
  valid_602163 = validateParameter(valid_602163, JString, required = false,
                                 default = nil)
  if valid_602163 != nil:
    section.add "X-Amz-Security-Token", valid_602163
  var valid_602164 = header.getOrDefault("X-Amz-Algorithm")
  valid_602164 = validateParameter(valid_602164, JString, required = false,
                                 default = nil)
  if valid_602164 != nil:
    section.add "X-Amz-Algorithm", valid_602164
  var valid_602165 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602165 = validateParameter(valid_602165, JString, required = false,
                                 default = nil)
  if valid_602165 != nil:
    section.add "X-Amz-SignedHeaders", valid_602165
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  var valid_602166 = formData.getOrDefault("StackPolicyBody")
  valid_602166 = validateParameter(valid_602166, JString, required = false,
                                 default = nil)
  if valid_602166 != nil:
    section.add "StackPolicyBody", valid_602166
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602167 = formData.getOrDefault("StackName")
  valid_602167 = validateParameter(valid_602167, JString, required = true,
                                 default = nil)
  if valid_602167 != nil:
    section.add "StackName", valid_602167
  var valid_602168 = formData.getOrDefault("DisableRollback")
  valid_602168 = validateParameter(valid_602168, JBool, required = false, default = nil)
  if valid_602168 != nil:
    section.add "DisableRollback", valid_602168
  var valid_602169 = formData.getOrDefault("StackPolicyURL")
  valid_602169 = validateParameter(valid_602169, JString, required = false,
                                 default = nil)
  if valid_602169 != nil:
    section.add "StackPolicyURL", valid_602169
  var valid_602170 = formData.getOrDefault("TemplateURL")
  valid_602170 = validateParameter(valid_602170, JString, required = false,
                                 default = nil)
  if valid_602170 != nil:
    section.add "TemplateURL", valid_602170
  var valid_602171 = formData.getOrDefault("EnableTerminationProtection")
  valid_602171 = validateParameter(valid_602171, JBool, required = false, default = nil)
  if valid_602171 != nil:
    section.add "EnableTerminationProtection", valid_602171
  var valid_602172 = formData.getOrDefault("TemplateBody")
  valid_602172 = validateParameter(valid_602172, JString, required = false,
                                 default = nil)
  if valid_602172 != nil:
    section.add "TemplateBody", valid_602172
  var valid_602173 = formData.getOrDefault("RoleARN")
  valid_602173 = validateParameter(valid_602173, JString, required = false,
                                 default = nil)
  if valid_602173 != nil:
    section.add "RoleARN", valid_602173
  var valid_602174 = formData.getOrDefault("OnFailure")
  valid_602174 = validateParameter(valid_602174, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_602174 != nil:
    section.add "OnFailure", valid_602174
  var valid_602175 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_602175 = validateParameter(valid_602175, JArray, required = false,
                                 default = nil)
  if valid_602175 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_602175
  var valid_602176 = formData.getOrDefault("NotificationARNs")
  valid_602176 = validateParameter(valid_602176, JArray, required = false,
                                 default = nil)
  if valid_602176 != nil:
    section.add "NotificationARNs", valid_602176
  var valid_602177 = formData.getOrDefault("ClientRequestToken")
  valid_602177 = validateParameter(valid_602177, JString, required = false,
                                 default = nil)
  if valid_602177 != nil:
    section.add "ClientRequestToken", valid_602177
  var valid_602178 = formData.getOrDefault("Capabilities")
  valid_602178 = validateParameter(valid_602178, JArray, required = false,
                                 default = nil)
  if valid_602178 != nil:
    section.add "Capabilities", valid_602178
  var valid_602179 = formData.getOrDefault("TimeoutInMinutes")
  valid_602179 = validateParameter(valid_602179, JInt, required = false, default = nil)
  if valid_602179 != nil:
    section.add "TimeoutInMinutes", valid_602179
  var valid_602180 = formData.getOrDefault("Parameters")
  valid_602180 = validateParameter(valid_602180, JArray, required = false,
                                 default = nil)
  if valid_602180 != nil:
    section.add "Parameters", valid_602180
  var valid_602181 = formData.getOrDefault("Tags")
  valid_602181 = validateParameter(valid_602181, JArray, required = false,
                                 default = nil)
  if valid_602181 != nil:
    section.add "Tags", valid_602181
  var valid_602182 = formData.getOrDefault("ResourceTypes")
  valid_602182 = validateParameter(valid_602182, JArray, required = false,
                                 default = nil)
  if valid_602182 != nil:
    section.add "ResourceTypes", valid_602182
  var valid_602183 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_602183 = validateParameter(valid_602183, JString, required = false,
                                 default = nil)
  if valid_602183 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_602183
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602184: Call_PostCreateStack_602154; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_602184.validator(path, query, header, formData, body)
  let scheme = call_602184.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602184.url(scheme.get, call_602184.host, call_602184.base,
                         call_602184.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602184, url, valid)

proc call*(call_602185: Call_PostCreateStack_602154; StackName: string;
          StackPolicyBody: string = ""; DisableRollback: bool = false;
          StackPolicyURL: string = ""; TemplateURL: string = "";
          EnableTerminationProtection: bool = false; TemplateBody: string = "";
          RoleARN: string = ""; OnFailure: string = "DO_NOTHING";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; ClientRequestToken: string = "";
          Action: string = "CreateStack"; Capabilities: JsonNode = nil;
          TimeoutInMinutes: int = 0; Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_602186 = newJObject()
  var formData_602187 = newJObject()
  add(formData_602187, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_602187, "StackName", newJString(StackName))
  add(formData_602187, "DisableRollback", newJBool(DisableRollback))
  add(formData_602187, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_602187, "TemplateURL", newJString(TemplateURL))
  add(formData_602187, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(formData_602187, "TemplateBody", newJString(TemplateBody))
  add(formData_602187, "RoleARN", newJString(RoleARN))
  add(formData_602187, "OnFailure", newJString(OnFailure))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_602187.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_602187.add "NotificationARNs", NotificationARNs
  add(formData_602187, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602186, "Action", newJString(Action))
  if Capabilities != nil:
    formData_602187.add "Capabilities", Capabilities
  add(formData_602187, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  if Parameters != nil:
    formData_602187.add "Parameters", Parameters
  if Tags != nil:
    formData_602187.add "Tags", Tags
  if ResourceTypes != nil:
    formData_602187.add "ResourceTypes", ResourceTypes
  add(query_602186, "Version", newJString(Version))
  add(formData_602187, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_602185.call(nil, query_602186, nil, formData_602187, nil)

var postCreateStack* = Call_PostCreateStack_602154(name: "postCreateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_PostCreateStack_602155,
    base: "/", url: url_PostCreateStack_602156, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStack_602121 = ref object of OpenApiRestCall_601389
proc url_GetCreateStack_602123(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStack_602122(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_602124 = query.getOrDefault("ResourceTypes")
  valid_602124 = validateParameter(valid_602124, JArray, required = false,
                                 default = nil)
  if valid_602124 != nil:
    section.add "ResourceTypes", valid_602124
  var valid_602125 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_602125 = validateParameter(valid_602125, JString, required = false,
                                 default = nil)
  if valid_602125 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_602125
  var valid_602126 = query.getOrDefault("Parameters")
  valid_602126 = validateParameter(valid_602126, JArray, required = false,
                                 default = nil)
  if valid_602126 != nil:
    section.add "Parameters", valid_602126
  var valid_602127 = query.getOrDefault("Tags")
  valid_602127 = validateParameter(valid_602127, JArray, required = false,
                                 default = nil)
  if valid_602127 != nil:
    section.add "Tags", valid_602127
  var valid_602128 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_602128 = validateParameter(valid_602128, JArray, required = false,
                                 default = nil)
  if valid_602128 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_602128
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602129 = query.getOrDefault("StackName")
  valid_602129 = validateParameter(valid_602129, JString, required = true,
                                 default = nil)
  if valid_602129 != nil:
    section.add "StackName", valid_602129
  var valid_602130 = query.getOrDefault("EnableTerminationProtection")
  valid_602130 = validateParameter(valid_602130, JBool, required = false, default = nil)
  if valid_602130 != nil:
    section.add "EnableTerminationProtection", valid_602130
  var valid_602131 = query.getOrDefault("TimeoutInMinutes")
  valid_602131 = validateParameter(valid_602131, JInt, required = false, default = nil)
  if valid_602131 != nil:
    section.add "TimeoutInMinutes", valid_602131
  var valid_602132 = query.getOrDefault("StackPolicyBody")
  valid_602132 = validateParameter(valid_602132, JString, required = false,
                                 default = nil)
  if valid_602132 != nil:
    section.add "StackPolicyBody", valid_602132
  var valid_602133 = query.getOrDefault("TemplateBody")
  valid_602133 = validateParameter(valid_602133, JString, required = false,
                                 default = nil)
  if valid_602133 != nil:
    section.add "TemplateBody", valid_602133
  var valid_602134 = query.getOrDefault("DisableRollback")
  valid_602134 = validateParameter(valid_602134, JBool, required = false, default = nil)
  if valid_602134 != nil:
    section.add "DisableRollback", valid_602134
  var valid_602135 = query.getOrDefault("NotificationARNs")
  valid_602135 = validateParameter(valid_602135, JArray, required = false,
                                 default = nil)
  if valid_602135 != nil:
    section.add "NotificationARNs", valid_602135
  var valid_602136 = query.getOrDefault("OnFailure")
  valid_602136 = validateParameter(valid_602136, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_602136 != nil:
    section.add "OnFailure", valid_602136
  var valid_602137 = query.getOrDefault("StackPolicyURL")
  valid_602137 = validateParameter(valid_602137, JString, required = false,
                                 default = nil)
  if valid_602137 != nil:
    section.add "StackPolicyURL", valid_602137
  var valid_602138 = query.getOrDefault("Action")
  valid_602138 = validateParameter(valid_602138, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_602138 != nil:
    section.add "Action", valid_602138
  var valid_602139 = query.getOrDefault("ClientRequestToken")
  valid_602139 = validateParameter(valid_602139, JString, required = false,
                                 default = nil)
  if valid_602139 != nil:
    section.add "ClientRequestToken", valid_602139
  var valid_602140 = query.getOrDefault("TemplateURL")
  valid_602140 = validateParameter(valid_602140, JString, required = false,
                                 default = nil)
  if valid_602140 != nil:
    section.add "TemplateURL", valid_602140
  var valid_602141 = query.getOrDefault("Version")
  valid_602141 = validateParameter(valid_602141, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602141 != nil:
    section.add "Version", valid_602141
  var valid_602142 = query.getOrDefault("Capabilities")
  valid_602142 = validateParameter(valid_602142, JArray, required = false,
                                 default = nil)
  if valid_602142 != nil:
    section.add "Capabilities", valid_602142
  var valid_602143 = query.getOrDefault("RoleARN")
  valid_602143 = validateParameter(valid_602143, JString, required = false,
                                 default = nil)
  if valid_602143 != nil:
    section.add "RoleARN", valid_602143
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602144 = header.getOrDefault("X-Amz-Signature")
  valid_602144 = validateParameter(valid_602144, JString, required = false,
                                 default = nil)
  if valid_602144 != nil:
    section.add "X-Amz-Signature", valid_602144
  var valid_602145 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602145 = validateParameter(valid_602145, JString, required = false,
                                 default = nil)
  if valid_602145 != nil:
    section.add "X-Amz-Content-Sha256", valid_602145
  var valid_602146 = header.getOrDefault("X-Amz-Date")
  valid_602146 = validateParameter(valid_602146, JString, required = false,
                                 default = nil)
  if valid_602146 != nil:
    section.add "X-Amz-Date", valid_602146
  var valid_602147 = header.getOrDefault("X-Amz-Credential")
  valid_602147 = validateParameter(valid_602147, JString, required = false,
                                 default = nil)
  if valid_602147 != nil:
    section.add "X-Amz-Credential", valid_602147
  var valid_602148 = header.getOrDefault("X-Amz-Security-Token")
  valid_602148 = validateParameter(valid_602148, JString, required = false,
                                 default = nil)
  if valid_602148 != nil:
    section.add "X-Amz-Security-Token", valid_602148
  var valid_602149 = header.getOrDefault("X-Amz-Algorithm")
  valid_602149 = validateParameter(valid_602149, JString, required = false,
                                 default = nil)
  if valid_602149 != nil:
    section.add "X-Amz-Algorithm", valid_602149
  var valid_602150 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602150 = validateParameter(valid_602150, JString, required = false,
                                 default = nil)
  if valid_602150 != nil:
    section.add "X-Amz-SignedHeaders", valid_602150
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602151: Call_GetCreateStack_602121; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_602151.validator(path, query, header, formData, body)
  let scheme = call_602151.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602151.url(scheme.get, call_602151.host, call_602151.base,
                         call_602151.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602151, url, valid)

proc call*(call_602152: Call_GetCreateStack_602121; StackName: string;
          ResourceTypes: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          EnableTerminationProtection: bool = false; TimeoutInMinutes: int = 0;
          StackPolicyBody: string = ""; TemplateBody: string = "";
          DisableRollback: bool = false; NotificationARNs: JsonNode = nil;
          OnFailure: string = "DO_NOTHING"; StackPolicyURL: string = "";
          Action: string = "CreateStack"; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil; RoleARN: string = ""): Recallable =
  ## getCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_602153 = newJObject()
  if ResourceTypes != nil:
    query_602153.add "ResourceTypes", ResourceTypes
  add(query_602153, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_602153.add "Parameters", Parameters
  if Tags != nil:
    query_602153.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_602153.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_602153, "StackName", newJString(StackName))
  add(query_602153, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_602153, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  add(query_602153, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_602153, "TemplateBody", newJString(TemplateBody))
  add(query_602153, "DisableRollback", newJBool(DisableRollback))
  if NotificationARNs != nil:
    query_602153.add "NotificationARNs", NotificationARNs
  add(query_602153, "OnFailure", newJString(OnFailure))
  add(query_602153, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_602153, "Action", newJString(Action))
  add(query_602153, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602153, "TemplateURL", newJString(TemplateURL))
  add(query_602153, "Version", newJString(Version))
  if Capabilities != nil:
    query_602153.add "Capabilities", Capabilities
  add(query_602153, "RoleARN", newJString(RoleARN))
  result = call_602152.call(nil, query_602153, nil, nil, nil)

var getCreateStack* = Call_GetCreateStack_602121(name: "getCreateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_GetCreateStack_602122,
    base: "/", url: url_GetCreateStack_602123, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackInstances_602213 = ref object of OpenApiRestCall_601389
proc url_PostCreateStackInstances_602215(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackInstances_602214(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602216 = query.getOrDefault("Action")
  valid_602216 = validateParameter(valid_602216, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_602216 != nil:
    section.add "Action", valid_602216
  var valid_602217 = query.getOrDefault("Version")
  valid_602217 = validateParameter(valid_602217, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602217 != nil:
    section.add "Version", valid_602217
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602218 = header.getOrDefault("X-Amz-Signature")
  valid_602218 = validateParameter(valid_602218, JString, required = false,
                                 default = nil)
  if valid_602218 != nil:
    section.add "X-Amz-Signature", valid_602218
  var valid_602219 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602219 = validateParameter(valid_602219, JString, required = false,
                                 default = nil)
  if valid_602219 != nil:
    section.add "X-Amz-Content-Sha256", valid_602219
  var valid_602220 = header.getOrDefault("X-Amz-Date")
  valid_602220 = validateParameter(valid_602220, JString, required = false,
                                 default = nil)
  if valid_602220 != nil:
    section.add "X-Amz-Date", valid_602220
  var valid_602221 = header.getOrDefault("X-Amz-Credential")
  valid_602221 = validateParameter(valid_602221, JString, required = false,
                                 default = nil)
  if valid_602221 != nil:
    section.add "X-Amz-Credential", valid_602221
  var valid_602222 = header.getOrDefault("X-Amz-Security-Token")
  valid_602222 = validateParameter(valid_602222, JString, required = false,
                                 default = nil)
  if valid_602222 != nil:
    section.add "X-Amz-Security-Token", valid_602222
  var valid_602223 = header.getOrDefault("X-Amz-Algorithm")
  valid_602223 = validateParameter(valid_602223, JString, required = false,
                                 default = nil)
  if valid_602223 != nil:
    section.add "X-Amz-Algorithm", valid_602223
  var valid_602224 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602224 = validateParameter(valid_602224, JString, required = false,
                                 default = nil)
  if valid_602224 != nil:
    section.add "X-Amz-SignedHeaders", valid_602224
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_602225 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_602225 = validateParameter(valid_602225, JString, required = false,
                                 default = nil)
  if valid_602225 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_602225
  var valid_602226 = formData.getOrDefault("OperationId")
  valid_602226 = validateParameter(valid_602226, JString, required = false,
                                 default = nil)
  if valid_602226 != nil:
    section.add "OperationId", valid_602226
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_602227 = formData.getOrDefault("StackSetName")
  valid_602227 = validateParameter(valid_602227, JString, required = true,
                                 default = nil)
  if valid_602227 != nil:
    section.add "StackSetName", valid_602227
  var valid_602228 = formData.getOrDefault("ParameterOverrides")
  valid_602228 = validateParameter(valid_602228, JArray, required = false,
                                 default = nil)
  if valid_602228 != nil:
    section.add "ParameterOverrides", valid_602228
  var valid_602229 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_602229 = validateParameter(valid_602229, JArray, required = false,
                                 default = nil)
  if valid_602229 != nil:
    section.add "OperationPreferences.RegionOrder", valid_602229
  var valid_602230 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_602230 = validateParameter(valid_602230, JString, required = false,
                                 default = nil)
  if valid_602230 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_602230
  var valid_602231 = formData.getOrDefault("Accounts")
  valid_602231 = validateParameter(valid_602231, JArray, required = true, default = nil)
  if valid_602231 != nil:
    section.add "Accounts", valid_602231
  var valid_602232 = formData.getOrDefault("Regions")
  valid_602232 = validateParameter(valid_602232, JArray, required = true, default = nil)
  if valid_602232 != nil:
    section.add "Regions", valid_602232
  var valid_602233 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_602233 = validateParameter(valid_602233, JString, required = false,
                                 default = nil)
  if valid_602233 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_602233
  var valid_602234 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_602234 = validateParameter(valid_602234, JString, required = false,
                                 default = nil)
  if valid_602234 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_602234
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602235: Call_PostCreateStackInstances_602213; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_602235.validator(path, query, header, formData, body)
  let scheme = call_602235.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602235.url(scheme.get, call_602235.host, call_602235.base,
                         call_602235.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602235, url, valid)

proc call*(call_602236: Call_PostCreateStackInstances_602213; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; ParameterOverrides: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "CreateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_602237 = newJObject()
  var formData_602238 = newJObject()
  add(formData_602238, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_602238, "OperationId", newJString(OperationId))
  add(formData_602238, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    formData_602238.add "ParameterOverrides", ParameterOverrides
  if OperationPreferencesRegionOrder != nil:
    formData_602238.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_602238, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_602238.add "Accounts", Accounts
  if Regions != nil:
    formData_602238.add "Regions", Regions
  add(query_602237, "Action", newJString(Action))
  add(formData_602238, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_602237, "Version", newJString(Version))
  add(formData_602238, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_602236.call(nil, query_602237, nil, formData_602238, nil)

var postCreateStackInstances* = Call_PostCreateStackInstances_602213(
    name: "postCreateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_PostCreateStackInstances_602214, base: "/",
    url: url_PostCreateStackInstances_602215, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackInstances_602188 = ref object of OpenApiRestCall_601389
proc url_GetCreateStackInstances_602190(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackInstances_602189(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_602191 = query.getOrDefault("OperationId")
  valid_602191 = validateParameter(valid_602191, JString, required = false,
                                 default = nil)
  if valid_602191 != nil:
    section.add "OperationId", valid_602191
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_602192 = query.getOrDefault("StackSetName")
  valid_602192 = validateParameter(valid_602192, JString, required = true,
                                 default = nil)
  if valid_602192 != nil:
    section.add "StackSetName", valid_602192
  var valid_602193 = query.getOrDefault("ParameterOverrides")
  valid_602193 = validateParameter(valid_602193, JArray, required = false,
                                 default = nil)
  if valid_602193 != nil:
    section.add "ParameterOverrides", valid_602193
  var valid_602194 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_602194 = validateParameter(valid_602194, JString, required = false,
                                 default = nil)
  if valid_602194 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_602194
  var valid_602195 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_602195 = validateParameter(valid_602195, JString, required = false,
                                 default = nil)
  if valid_602195 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_602195
  var valid_602196 = query.getOrDefault("Action")
  valid_602196 = validateParameter(valid_602196, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_602196 != nil:
    section.add "Action", valid_602196
  var valid_602197 = query.getOrDefault("Regions")
  valid_602197 = validateParameter(valid_602197, JArray, required = true, default = nil)
  if valid_602197 != nil:
    section.add "Regions", valid_602197
  var valid_602198 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_602198 = validateParameter(valid_602198, JArray, required = false,
                                 default = nil)
  if valid_602198 != nil:
    section.add "OperationPreferences.RegionOrder", valid_602198
  var valid_602199 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_602199 = validateParameter(valid_602199, JString, required = false,
                                 default = nil)
  if valid_602199 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_602199
  var valid_602200 = query.getOrDefault("Accounts")
  valid_602200 = validateParameter(valid_602200, JArray, required = true, default = nil)
  if valid_602200 != nil:
    section.add "Accounts", valid_602200
  var valid_602201 = query.getOrDefault("Version")
  valid_602201 = validateParameter(valid_602201, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602201 != nil:
    section.add "Version", valid_602201
  var valid_602202 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_602202 = validateParameter(valid_602202, JString, required = false,
                                 default = nil)
  if valid_602202 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_602202
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602203 = header.getOrDefault("X-Amz-Signature")
  valid_602203 = validateParameter(valid_602203, JString, required = false,
                                 default = nil)
  if valid_602203 != nil:
    section.add "X-Amz-Signature", valid_602203
  var valid_602204 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602204 = validateParameter(valid_602204, JString, required = false,
                                 default = nil)
  if valid_602204 != nil:
    section.add "X-Amz-Content-Sha256", valid_602204
  var valid_602205 = header.getOrDefault("X-Amz-Date")
  valid_602205 = validateParameter(valid_602205, JString, required = false,
                                 default = nil)
  if valid_602205 != nil:
    section.add "X-Amz-Date", valid_602205
  var valid_602206 = header.getOrDefault("X-Amz-Credential")
  valid_602206 = validateParameter(valid_602206, JString, required = false,
                                 default = nil)
  if valid_602206 != nil:
    section.add "X-Amz-Credential", valid_602206
  var valid_602207 = header.getOrDefault("X-Amz-Security-Token")
  valid_602207 = validateParameter(valid_602207, JString, required = false,
                                 default = nil)
  if valid_602207 != nil:
    section.add "X-Amz-Security-Token", valid_602207
  var valid_602208 = header.getOrDefault("X-Amz-Algorithm")
  valid_602208 = validateParameter(valid_602208, JString, required = false,
                                 default = nil)
  if valid_602208 != nil:
    section.add "X-Amz-Algorithm", valid_602208
  var valid_602209 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602209 = validateParameter(valid_602209, JString, required = false,
                                 default = nil)
  if valid_602209 != nil:
    section.add "X-Amz-SignedHeaders", valid_602209
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602210: Call_GetCreateStackInstances_602188; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_602210.validator(path, query, header, formData, body)
  let scheme = call_602210.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602210.url(scheme.get, call_602210.host, call_602210.base,
                         call_602210.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602210, url, valid)

proc call*(call_602211: Call_GetCreateStackInstances_602188; StackSetName: string;
          Regions: JsonNode; Accounts: JsonNode; OperationId: string = "";
          ParameterOverrides: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "CreateStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_602212 = newJObject()
  add(query_602212, "OperationId", newJString(OperationId))
  add(query_602212, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    query_602212.add "ParameterOverrides", ParameterOverrides
  add(query_602212, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_602212, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_602212, "Action", newJString(Action))
  if Regions != nil:
    query_602212.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_602212.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_602212, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_602212.add "Accounts", Accounts
  add(query_602212, "Version", newJString(Version))
  add(query_602212, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_602211.call(nil, query_602212, nil, nil, nil)

var getCreateStackInstances* = Call_GetCreateStackInstances_602188(
    name: "getCreateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_GetCreateStackInstances_602189, base: "/",
    url: url_GetCreateStackInstances_602190, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackSet_602264 = ref object of OpenApiRestCall_601389
proc url_PostCreateStackSet_602266(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackSet_602265(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602267 = query.getOrDefault("Action")
  valid_602267 = validateParameter(valid_602267, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_602267 != nil:
    section.add "Action", valid_602267
  var valid_602268 = query.getOrDefault("Version")
  valid_602268 = validateParameter(valid_602268, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602268 != nil:
    section.add "Version", valid_602268
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602269 = header.getOrDefault("X-Amz-Signature")
  valid_602269 = validateParameter(valid_602269, JString, required = false,
                                 default = nil)
  if valid_602269 != nil:
    section.add "X-Amz-Signature", valid_602269
  var valid_602270 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602270 = validateParameter(valid_602270, JString, required = false,
                                 default = nil)
  if valid_602270 != nil:
    section.add "X-Amz-Content-Sha256", valid_602270
  var valid_602271 = header.getOrDefault("X-Amz-Date")
  valid_602271 = validateParameter(valid_602271, JString, required = false,
                                 default = nil)
  if valid_602271 != nil:
    section.add "X-Amz-Date", valid_602271
  var valid_602272 = header.getOrDefault("X-Amz-Credential")
  valid_602272 = validateParameter(valid_602272, JString, required = false,
                                 default = nil)
  if valid_602272 != nil:
    section.add "X-Amz-Credential", valid_602272
  var valid_602273 = header.getOrDefault("X-Amz-Security-Token")
  valid_602273 = validateParameter(valid_602273, JString, required = false,
                                 default = nil)
  if valid_602273 != nil:
    section.add "X-Amz-Security-Token", valid_602273
  var valid_602274 = header.getOrDefault("X-Amz-Algorithm")
  valid_602274 = validateParameter(valid_602274, JString, required = false,
                                 default = nil)
  if valid_602274 != nil:
    section.add "X-Amz-Algorithm", valid_602274
  var valid_602275 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602275 = validateParameter(valid_602275, JString, required = false,
                                 default = nil)
  if valid_602275 != nil:
    section.add "X-Amz-SignedHeaders", valid_602275
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_602276 = formData.getOrDefault("StackSetName")
  valid_602276 = validateParameter(valid_602276, JString, required = true,
                                 default = nil)
  if valid_602276 != nil:
    section.add "StackSetName", valid_602276
  var valid_602277 = formData.getOrDefault("AdministrationRoleARN")
  valid_602277 = validateParameter(valid_602277, JString, required = false,
                                 default = nil)
  if valid_602277 != nil:
    section.add "AdministrationRoleARN", valid_602277
  var valid_602278 = formData.getOrDefault("Description")
  valid_602278 = validateParameter(valid_602278, JString, required = false,
                                 default = nil)
  if valid_602278 != nil:
    section.add "Description", valid_602278
  var valid_602279 = formData.getOrDefault("TemplateURL")
  valid_602279 = validateParameter(valid_602279, JString, required = false,
                                 default = nil)
  if valid_602279 != nil:
    section.add "TemplateURL", valid_602279
  var valid_602280 = formData.getOrDefault("TemplateBody")
  valid_602280 = validateParameter(valid_602280, JString, required = false,
                                 default = nil)
  if valid_602280 != nil:
    section.add "TemplateBody", valid_602280
  var valid_602281 = formData.getOrDefault("ClientRequestToken")
  valid_602281 = validateParameter(valid_602281, JString, required = false,
                                 default = nil)
  if valid_602281 != nil:
    section.add "ClientRequestToken", valid_602281
  var valid_602282 = formData.getOrDefault("Capabilities")
  valid_602282 = validateParameter(valid_602282, JArray, required = false,
                                 default = nil)
  if valid_602282 != nil:
    section.add "Capabilities", valid_602282
  var valid_602283 = formData.getOrDefault("Tags")
  valid_602283 = validateParameter(valid_602283, JArray, required = false,
                                 default = nil)
  if valid_602283 != nil:
    section.add "Tags", valid_602283
  var valid_602284 = formData.getOrDefault("Parameters")
  valid_602284 = validateParameter(valid_602284, JArray, required = false,
                                 default = nil)
  if valid_602284 != nil:
    section.add "Parameters", valid_602284
  var valid_602285 = formData.getOrDefault("ExecutionRoleName")
  valid_602285 = validateParameter(valid_602285, JString, required = false,
                                 default = nil)
  if valid_602285 != nil:
    section.add "ExecutionRoleName", valid_602285
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602286: Call_PostCreateStackSet_602264; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_602286.validator(path, query, header, formData, body)
  let scheme = call_602286.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602286.url(scheme.get, call_602286.host, call_602286.base,
                         call_602286.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602286, url, valid)

proc call*(call_602287: Call_PostCreateStackSet_602264; StackSetName: string;
          AdministrationRoleARN: string = ""; Description: string = "";
          TemplateURL: string = ""; TemplateBody: string = "";
          ClientRequestToken: string = ""; Action: string = "CreateStackSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil; Version: string = "2010-05-15";
          ExecutionRoleName: string = ""): Recallable =
  ## postCreateStackSet
  ## Creates a stack set.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Version: string (required)
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  var query_602288 = newJObject()
  var formData_602289 = newJObject()
  add(formData_602289, "StackSetName", newJString(StackSetName))
  add(formData_602289, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_602289, "Description", newJString(Description))
  add(formData_602289, "TemplateURL", newJString(TemplateURL))
  add(formData_602289, "TemplateBody", newJString(TemplateBody))
  add(formData_602289, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602288, "Action", newJString(Action))
  if Capabilities != nil:
    formData_602289.add "Capabilities", Capabilities
  if Tags != nil:
    formData_602289.add "Tags", Tags
  if Parameters != nil:
    formData_602289.add "Parameters", Parameters
  add(query_602288, "Version", newJString(Version))
  add(formData_602289, "ExecutionRoleName", newJString(ExecutionRoleName))
  result = call_602287.call(nil, query_602288, nil, formData_602289, nil)

var postCreateStackSet* = Call_PostCreateStackSet_602264(
    name: "postCreateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackSet",
    validator: validate_PostCreateStackSet_602265, base: "/",
    url: url_PostCreateStackSet_602266, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackSet_602239 = ref object of OpenApiRestCall_601389
proc url_GetCreateStackSet_602241(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackSet_602240(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_602242 = query.getOrDefault("StackSetName")
  valid_602242 = validateParameter(valid_602242, JString, required = true,
                                 default = nil)
  if valid_602242 != nil:
    section.add "StackSetName", valid_602242
  var valid_602243 = query.getOrDefault("Parameters")
  valid_602243 = validateParameter(valid_602243, JArray, required = false,
                                 default = nil)
  if valid_602243 != nil:
    section.add "Parameters", valid_602243
  var valid_602244 = query.getOrDefault("Tags")
  valid_602244 = validateParameter(valid_602244, JArray, required = false,
                                 default = nil)
  if valid_602244 != nil:
    section.add "Tags", valid_602244
  var valid_602245 = query.getOrDefault("ExecutionRoleName")
  valid_602245 = validateParameter(valid_602245, JString, required = false,
                                 default = nil)
  if valid_602245 != nil:
    section.add "ExecutionRoleName", valid_602245
  var valid_602246 = query.getOrDefault("TemplateBody")
  valid_602246 = validateParameter(valid_602246, JString, required = false,
                                 default = nil)
  if valid_602246 != nil:
    section.add "TemplateBody", valid_602246
  var valid_602247 = query.getOrDefault("AdministrationRoleARN")
  valid_602247 = validateParameter(valid_602247, JString, required = false,
                                 default = nil)
  if valid_602247 != nil:
    section.add "AdministrationRoleARN", valid_602247
  var valid_602248 = query.getOrDefault("Action")
  valid_602248 = validateParameter(valid_602248, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_602248 != nil:
    section.add "Action", valid_602248
  var valid_602249 = query.getOrDefault("Description")
  valid_602249 = validateParameter(valid_602249, JString, required = false,
                                 default = nil)
  if valid_602249 != nil:
    section.add "Description", valid_602249
  var valid_602250 = query.getOrDefault("ClientRequestToken")
  valid_602250 = validateParameter(valid_602250, JString, required = false,
                                 default = nil)
  if valid_602250 != nil:
    section.add "ClientRequestToken", valid_602250
  var valid_602251 = query.getOrDefault("TemplateURL")
  valid_602251 = validateParameter(valid_602251, JString, required = false,
                                 default = nil)
  if valid_602251 != nil:
    section.add "TemplateURL", valid_602251
  var valid_602252 = query.getOrDefault("Version")
  valid_602252 = validateParameter(valid_602252, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602252 != nil:
    section.add "Version", valid_602252
  var valid_602253 = query.getOrDefault("Capabilities")
  valid_602253 = validateParameter(valid_602253, JArray, required = false,
                                 default = nil)
  if valid_602253 != nil:
    section.add "Capabilities", valid_602253
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602254 = header.getOrDefault("X-Amz-Signature")
  valid_602254 = validateParameter(valid_602254, JString, required = false,
                                 default = nil)
  if valid_602254 != nil:
    section.add "X-Amz-Signature", valid_602254
  var valid_602255 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602255 = validateParameter(valid_602255, JString, required = false,
                                 default = nil)
  if valid_602255 != nil:
    section.add "X-Amz-Content-Sha256", valid_602255
  var valid_602256 = header.getOrDefault("X-Amz-Date")
  valid_602256 = validateParameter(valid_602256, JString, required = false,
                                 default = nil)
  if valid_602256 != nil:
    section.add "X-Amz-Date", valid_602256
  var valid_602257 = header.getOrDefault("X-Amz-Credential")
  valid_602257 = validateParameter(valid_602257, JString, required = false,
                                 default = nil)
  if valid_602257 != nil:
    section.add "X-Amz-Credential", valid_602257
  var valid_602258 = header.getOrDefault("X-Amz-Security-Token")
  valid_602258 = validateParameter(valid_602258, JString, required = false,
                                 default = nil)
  if valid_602258 != nil:
    section.add "X-Amz-Security-Token", valid_602258
  var valid_602259 = header.getOrDefault("X-Amz-Algorithm")
  valid_602259 = validateParameter(valid_602259, JString, required = false,
                                 default = nil)
  if valid_602259 != nil:
    section.add "X-Amz-Algorithm", valid_602259
  var valid_602260 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602260 = validateParameter(valid_602260, JString, required = false,
                                 default = nil)
  if valid_602260 != nil:
    section.add "X-Amz-SignedHeaders", valid_602260
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602261: Call_GetCreateStackSet_602239; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_602261.validator(path, query, header, formData, body)
  let scheme = call_602261.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602261.url(scheme.get, call_602261.host, call_602261.base,
                         call_602261.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602261, url, valid)

proc call*(call_602262: Call_GetCreateStackSet_602239; StackSetName: string;
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ExecutionRoleName: string = ""; TemplateBody: string = "";
          AdministrationRoleARN: string = ""; Action: string = "CreateStackSet";
          Description: string = ""; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil): Recallable =
  ## getCreateStackSet
  ## Creates a stack set.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Action: string (required)
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  var query_602263 = newJObject()
  add(query_602263, "StackSetName", newJString(StackSetName))
  if Parameters != nil:
    query_602263.add "Parameters", Parameters
  if Tags != nil:
    query_602263.add "Tags", Tags
  add(query_602263, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_602263, "TemplateBody", newJString(TemplateBody))
  add(query_602263, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_602263, "Action", newJString(Action))
  add(query_602263, "Description", newJString(Description))
  add(query_602263, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602263, "TemplateURL", newJString(TemplateURL))
  add(query_602263, "Version", newJString(Version))
  if Capabilities != nil:
    query_602263.add "Capabilities", Capabilities
  result = call_602262.call(nil, query_602263, nil, nil, nil)

var getCreateStackSet* = Call_GetCreateStackSet_602239(name: "getCreateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStackSet", validator: validate_GetCreateStackSet_602240,
    base: "/", url: url_GetCreateStackSet_602241,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteChangeSet_602307 = ref object of OpenApiRestCall_601389
proc url_PostDeleteChangeSet_602309(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteChangeSet_602308(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602310 = query.getOrDefault("Action")
  valid_602310 = validateParameter(valid_602310, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_602310 != nil:
    section.add "Action", valid_602310
  var valid_602311 = query.getOrDefault("Version")
  valid_602311 = validateParameter(valid_602311, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602311 != nil:
    section.add "Version", valid_602311
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602312 = header.getOrDefault("X-Amz-Signature")
  valid_602312 = validateParameter(valid_602312, JString, required = false,
                                 default = nil)
  if valid_602312 != nil:
    section.add "X-Amz-Signature", valid_602312
  var valid_602313 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602313 = validateParameter(valid_602313, JString, required = false,
                                 default = nil)
  if valid_602313 != nil:
    section.add "X-Amz-Content-Sha256", valid_602313
  var valid_602314 = header.getOrDefault("X-Amz-Date")
  valid_602314 = validateParameter(valid_602314, JString, required = false,
                                 default = nil)
  if valid_602314 != nil:
    section.add "X-Amz-Date", valid_602314
  var valid_602315 = header.getOrDefault("X-Amz-Credential")
  valid_602315 = validateParameter(valid_602315, JString, required = false,
                                 default = nil)
  if valid_602315 != nil:
    section.add "X-Amz-Credential", valid_602315
  var valid_602316 = header.getOrDefault("X-Amz-Security-Token")
  valid_602316 = validateParameter(valid_602316, JString, required = false,
                                 default = nil)
  if valid_602316 != nil:
    section.add "X-Amz-Security-Token", valid_602316
  var valid_602317 = header.getOrDefault("X-Amz-Algorithm")
  valid_602317 = validateParameter(valid_602317, JString, required = false,
                                 default = nil)
  if valid_602317 != nil:
    section.add "X-Amz-Algorithm", valid_602317
  var valid_602318 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602318 = validateParameter(valid_602318, JString, required = false,
                                 default = nil)
  if valid_602318 != nil:
    section.add "X-Amz-SignedHeaders", valid_602318
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  section = newJObject()
  var valid_602319 = formData.getOrDefault("StackName")
  valid_602319 = validateParameter(valid_602319, JString, required = false,
                                 default = nil)
  if valid_602319 != nil:
    section.add "StackName", valid_602319
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_602320 = formData.getOrDefault("ChangeSetName")
  valid_602320 = validateParameter(valid_602320, JString, required = true,
                                 default = nil)
  if valid_602320 != nil:
    section.add "ChangeSetName", valid_602320
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602321: Call_PostDeleteChangeSet_602307; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_602321.validator(path, query, header, formData, body)
  let scheme = call_602321.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602321.url(scheme.get, call_602321.host, call_602321.base,
                         call_602321.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602321, url, valid)

proc call*(call_602322: Call_PostDeleteChangeSet_602307; ChangeSetName: string;
          StackName: string = ""; Action: string = "DeleteChangeSet";
          Version: string = "2010-05-15"): Recallable =
  ## postDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602323 = newJObject()
  var formData_602324 = newJObject()
  add(formData_602324, "StackName", newJString(StackName))
  add(formData_602324, "ChangeSetName", newJString(ChangeSetName))
  add(query_602323, "Action", newJString(Action))
  add(query_602323, "Version", newJString(Version))
  result = call_602322.call(nil, query_602323, nil, formData_602324, nil)

var postDeleteChangeSet* = Call_PostDeleteChangeSet_602307(
    name: "postDeleteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_PostDeleteChangeSet_602308, base: "/",
    url: url_PostDeleteChangeSet_602309, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteChangeSet_602290 = ref object of OpenApiRestCall_601389
proc url_GetDeleteChangeSet_602292(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteChangeSet_602291(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Action: JString (required)
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Version: JString (required)
  section = newJObject()
  var valid_602293 = query.getOrDefault("StackName")
  valid_602293 = validateParameter(valid_602293, JString, required = false,
                                 default = nil)
  if valid_602293 != nil:
    section.add "StackName", valid_602293
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602294 = query.getOrDefault("Action")
  valid_602294 = validateParameter(valid_602294, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_602294 != nil:
    section.add "Action", valid_602294
  var valid_602295 = query.getOrDefault("ChangeSetName")
  valid_602295 = validateParameter(valid_602295, JString, required = true,
                                 default = nil)
  if valid_602295 != nil:
    section.add "ChangeSetName", valid_602295
  var valid_602296 = query.getOrDefault("Version")
  valid_602296 = validateParameter(valid_602296, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602296 != nil:
    section.add "Version", valid_602296
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602297 = header.getOrDefault("X-Amz-Signature")
  valid_602297 = validateParameter(valid_602297, JString, required = false,
                                 default = nil)
  if valid_602297 != nil:
    section.add "X-Amz-Signature", valid_602297
  var valid_602298 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602298 = validateParameter(valid_602298, JString, required = false,
                                 default = nil)
  if valid_602298 != nil:
    section.add "X-Amz-Content-Sha256", valid_602298
  var valid_602299 = header.getOrDefault("X-Amz-Date")
  valid_602299 = validateParameter(valid_602299, JString, required = false,
                                 default = nil)
  if valid_602299 != nil:
    section.add "X-Amz-Date", valid_602299
  var valid_602300 = header.getOrDefault("X-Amz-Credential")
  valid_602300 = validateParameter(valid_602300, JString, required = false,
                                 default = nil)
  if valid_602300 != nil:
    section.add "X-Amz-Credential", valid_602300
  var valid_602301 = header.getOrDefault("X-Amz-Security-Token")
  valid_602301 = validateParameter(valid_602301, JString, required = false,
                                 default = nil)
  if valid_602301 != nil:
    section.add "X-Amz-Security-Token", valid_602301
  var valid_602302 = header.getOrDefault("X-Amz-Algorithm")
  valid_602302 = validateParameter(valid_602302, JString, required = false,
                                 default = nil)
  if valid_602302 != nil:
    section.add "X-Amz-Algorithm", valid_602302
  var valid_602303 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602303 = validateParameter(valid_602303, JString, required = false,
                                 default = nil)
  if valid_602303 != nil:
    section.add "X-Amz-SignedHeaders", valid_602303
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602304: Call_GetDeleteChangeSet_602290; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_602304.validator(path, query, header, formData, body)
  let scheme = call_602304.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602304.url(scheme.get, call_602304.host, call_602304.base,
                         call_602304.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602304, url, valid)

proc call*(call_602305: Call_GetDeleteChangeSet_602290; ChangeSetName: string;
          StackName: string = ""; Action: string = "DeleteChangeSet";
          Version: string = "2010-05-15"): Recallable =
  ## getDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Version: string (required)
  var query_602306 = newJObject()
  add(query_602306, "StackName", newJString(StackName))
  add(query_602306, "Action", newJString(Action))
  add(query_602306, "ChangeSetName", newJString(ChangeSetName))
  add(query_602306, "Version", newJString(Version))
  result = call_602305.call(nil, query_602306, nil, nil, nil)

var getDeleteChangeSet* = Call_GetDeleteChangeSet_602290(
    name: "getDeleteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_GetDeleteChangeSet_602291, base: "/",
    url: url_GetDeleteChangeSet_602292, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStack_602344 = ref object of OpenApiRestCall_601389
proc url_PostDeleteStack_602346(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStack_602345(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602347 = query.getOrDefault("Action")
  valid_602347 = validateParameter(valid_602347, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_602347 != nil:
    section.add "Action", valid_602347
  var valid_602348 = query.getOrDefault("Version")
  valid_602348 = validateParameter(valid_602348, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602348 != nil:
    section.add "Version", valid_602348
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602349 = header.getOrDefault("X-Amz-Signature")
  valid_602349 = validateParameter(valid_602349, JString, required = false,
                                 default = nil)
  if valid_602349 != nil:
    section.add "X-Amz-Signature", valid_602349
  var valid_602350 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602350 = validateParameter(valid_602350, JString, required = false,
                                 default = nil)
  if valid_602350 != nil:
    section.add "X-Amz-Content-Sha256", valid_602350
  var valid_602351 = header.getOrDefault("X-Amz-Date")
  valid_602351 = validateParameter(valid_602351, JString, required = false,
                                 default = nil)
  if valid_602351 != nil:
    section.add "X-Amz-Date", valid_602351
  var valid_602352 = header.getOrDefault("X-Amz-Credential")
  valid_602352 = validateParameter(valid_602352, JString, required = false,
                                 default = nil)
  if valid_602352 != nil:
    section.add "X-Amz-Credential", valid_602352
  var valid_602353 = header.getOrDefault("X-Amz-Security-Token")
  valid_602353 = validateParameter(valid_602353, JString, required = false,
                                 default = nil)
  if valid_602353 != nil:
    section.add "X-Amz-Security-Token", valid_602353
  var valid_602354 = header.getOrDefault("X-Amz-Algorithm")
  valid_602354 = validateParameter(valid_602354, JString, required = false,
                                 default = nil)
  if valid_602354 != nil:
    section.add "X-Amz-Algorithm", valid_602354
  var valid_602355 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602355 = validateParameter(valid_602355, JString, required = false,
                                 default = nil)
  if valid_602355 != nil:
    section.add "X-Amz-SignedHeaders", valid_602355
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602356 = formData.getOrDefault("StackName")
  valid_602356 = validateParameter(valid_602356, JString, required = true,
                                 default = nil)
  if valid_602356 != nil:
    section.add "StackName", valid_602356
  var valid_602357 = formData.getOrDefault("RoleARN")
  valid_602357 = validateParameter(valid_602357, JString, required = false,
                                 default = nil)
  if valid_602357 != nil:
    section.add "RoleARN", valid_602357
  var valid_602358 = formData.getOrDefault("ClientRequestToken")
  valid_602358 = validateParameter(valid_602358, JString, required = false,
                                 default = nil)
  if valid_602358 != nil:
    section.add "ClientRequestToken", valid_602358
  var valid_602359 = formData.getOrDefault("RetainResources")
  valid_602359 = validateParameter(valid_602359, JArray, required = false,
                                 default = nil)
  if valid_602359 != nil:
    section.add "RetainResources", valid_602359
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602360: Call_PostDeleteStack_602344; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_602360.validator(path, query, header, formData, body)
  let scheme = call_602360.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602360.url(scheme.get, call_602360.host, call_602360.base,
                         call_602360.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602360, url, valid)

proc call*(call_602361: Call_PostDeleteStack_602344; StackName: string;
          RoleARN: string = ""; ClientRequestToken: string = "";
          Action: string = "DeleteStack"; Version: string = "2010-05-15";
          RetainResources: JsonNode = nil): Recallable =
  ## postDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  var query_602362 = newJObject()
  var formData_602363 = newJObject()
  add(formData_602363, "StackName", newJString(StackName))
  add(formData_602363, "RoleARN", newJString(RoleARN))
  add(formData_602363, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602362, "Action", newJString(Action))
  add(query_602362, "Version", newJString(Version))
  if RetainResources != nil:
    formData_602363.add "RetainResources", RetainResources
  result = call_602361.call(nil, query_602362, nil, formData_602363, nil)

var postDeleteStack* = Call_PostDeleteStack_602344(name: "postDeleteStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_PostDeleteStack_602345,
    base: "/", url: url_PostDeleteStack_602346, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStack_602325 = ref object of OpenApiRestCall_601389
proc url_GetDeleteStack_602327(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStack_602326(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Version: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602328 = query.getOrDefault("StackName")
  valid_602328 = validateParameter(valid_602328, JString, required = true,
                                 default = nil)
  if valid_602328 != nil:
    section.add "StackName", valid_602328
  var valid_602329 = query.getOrDefault("RetainResources")
  valid_602329 = validateParameter(valid_602329, JArray, required = false,
                                 default = nil)
  if valid_602329 != nil:
    section.add "RetainResources", valid_602329
  var valid_602330 = query.getOrDefault("Action")
  valid_602330 = validateParameter(valid_602330, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_602330 != nil:
    section.add "Action", valid_602330
  var valid_602331 = query.getOrDefault("ClientRequestToken")
  valid_602331 = validateParameter(valid_602331, JString, required = false,
                                 default = nil)
  if valid_602331 != nil:
    section.add "ClientRequestToken", valid_602331
  var valid_602332 = query.getOrDefault("Version")
  valid_602332 = validateParameter(valid_602332, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602332 != nil:
    section.add "Version", valid_602332
  var valid_602333 = query.getOrDefault("RoleARN")
  valid_602333 = validateParameter(valid_602333, JString, required = false,
                                 default = nil)
  if valid_602333 != nil:
    section.add "RoleARN", valid_602333
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602334 = header.getOrDefault("X-Amz-Signature")
  valid_602334 = validateParameter(valid_602334, JString, required = false,
                                 default = nil)
  if valid_602334 != nil:
    section.add "X-Amz-Signature", valid_602334
  var valid_602335 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602335 = validateParameter(valid_602335, JString, required = false,
                                 default = nil)
  if valid_602335 != nil:
    section.add "X-Amz-Content-Sha256", valid_602335
  var valid_602336 = header.getOrDefault("X-Amz-Date")
  valid_602336 = validateParameter(valid_602336, JString, required = false,
                                 default = nil)
  if valid_602336 != nil:
    section.add "X-Amz-Date", valid_602336
  var valid_602337 = header.getOrDefault("X-Amz-Credential")
  valid_602337 = validateParameter(valid_602337, JString, required = false,
                                 default = nil)
  if valid_602337 != nil:
    section.add "X-Amz-Credential", valid_602337
  var valid_602338 = header.getOrDefault("X-Amz-Security-Token")
  valid_602338 = validateParameter(valid_602338, JString, required = false,
                                 default = nil)
  if valid_602338 != nil:
    section.add "X-Amz-Security-Token", valid_602338
  var valid_602339 = header.getOrDefault("X-Amz-Algorithm")
  valid_602339 = validateParameter(valid_602339, JString, required = false,
                                 default = nil)
  if valid_602339 != nil:
    section.add "X-Amz-Algorithm", valid_602339
  var valid_602340 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602340 = validateParameter(valid_602340, JString, required = false,
                                 default = nil)
  if valid_602340 != nil:
    section.add "X-Amz-SignedHeaders", valid_602340
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602341: Call_GetDeleteStack_602325; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_602341.validator(path, query, header, formData, body)
  let scheme = call_602341.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602341.url(scheme.get, call_602341.host, call_602341.base,
                         call_602341.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602341, url, valid)

proc call*(call_602342: Call_GetDeleteStack_602325; StackName: string;
          RetainResources: JsonNode = nil; Action: string = "DeleteStack";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## getDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_602343 = newJObject()
  add(query_602343, "StackName", newJString(StackName))
  if RetainResources != nil:
    query_602343.add "RetainResources", RetainResources
  add(query_602343, "Action", newJString(Action))
  add(query_602343, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_602343, "Version", newJString(Version))
  add(query_602343, "RoleARN", newJString(RoleARN))
  result = call_602342.call(nil, query_602343, nil, nil, nil)

var getDeleteStack* = Call_GetDeleteStack_602325(name: "getDeleteStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_GetDeleteStack_602326,
    base: "/", url: url_GetDeleteStack_602327, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackInstances_602389 = ref object of OpenApiRestCall_601389
proc url_PostDeleteStackInstances_602391(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackInstances_602390(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602392 = query.getOrDefault("Action")
  valid_602392 = validateParameter(valid_602392, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_602392 != nil:
    section.add "Action", valid_602392
  var valid_602393 = query.getOrDefault("Version")
  valid_602393 = validateParameter(valid_602393, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602393 != nil:
    section.add "Version", valid_602393
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602394 = header.getOrDefault("X-Amz-Signature")
  valid_602394 = validateParameter(valid_602394, JString, required = false,
                                 default = nil)
  if valid_602394 != nil:
    section.add "X-Amz-Signature", valid_602394
  var valid_602395 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602395 = validateParameter(valid_602395, JString, required = false,
                                 default = nil)
  if valid_602395 != nil:
    section.add "X-Amz-Content-Sha256", valid_602395
  var valid_602396 = header.getOrDefault("X-Amz-Date")
  valid_602396 = validateParameter(valid_602396, JString, required = false,
                                 default = nil)
  if valid_602396 != nil:
    section.add "X-Amz-Date", valid_602396
  var valid_602397 = header.getOrDefault("X-Amz-Credential")
  valid_602397 = validateParameter(valid_602397, JString, required = false,
                                 default = nil)
  if valid_602397 != nil:
    section.add "X-Amz-Credential", valid_602397
  var valid_602398 = header.getOrDefault("X-Amz-Security-Token")
  valid_602398 = validateParameter(valid_602398, JString, required = false,
                                 default = nil)
  if valid_602398 != nil:
    section.add "X-Amz-Security-Token", valid_602398
  var valid_602399 = header.getOrDefault("X-Amz-Algorithm")
  valid_602399 = validateParameter(valid_602399, JString, required = false,
                                 default = nil)
  if valid_602399 != nil:
    section.add "X-Amz-Algorithm", valid_602399
  var valid_602400 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602400 = validateParameter(valid_602400, JString, required = false,
                                 default = nil)
  if valid_602400 != nil:
    section.add "X-Amz-SignedHeaders", valid_602400
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_602401 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_602401 = validateParameter(valid_602401, JString, required = false,
                                 default = nil)
  if valid_602401 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_602401
  var valid_602402 = formData.getOrDefault("OperationId")
  valid_602402 = validateParameter(valid_602402, JString, required = false,
                                 default = nil)
  if valid_602402 != nil:
    section.add "OperationId", valid_602402
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_602403 = formData.getOrDefault("StackSetName")
  valid_602403 = validateParameter(valid_602403, JString, required = true,
                                 default = nil)
  if valid_602403 != nil:
    section.add "StackSetName", valid_602403
  var valid_602404 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_602404 = validateParameter(valid_602404, JArray, required = false,
                                 default = nil)
  if valid_602404 != nil:
    section.add "OperationPreferences.RegionOrder", valid_602404
  var valid_602405 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_602405 = validateParameter(valid_602405, JString, required = false,
                                 default = nil)
  if valid_602405 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_602405
  var valid_602406 = formData.getOrDefault("Accounts")
  valid_602406 = validateParameter(valid_602406, JArray, required = true, default = nil)
  if valid_602406 != nil:
    section.add "Accounts", valid_602406
  var valid_602407 = formData.getOrDefault("Regions")
  valid_602407 = validateParameter(valid_602407, JArray, required = true, default = nil)
  if valid_602407 != nil:
    section.add "Regions", valid_602407
  var valid_602408 = formData.getOrDefault("RetainStacks")
  valid_602408 = validateParameter(valid_602408, JBool, required = true, default = nil)
  if valid_602408 != nil:
    section.add "RetainStacks", valid_602408
  var valid_602409 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_602409 = validateParameter(valid_602409, JString, required = false,
                                 default = nil)
  if valid_602409 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_602409
  var valid_602410 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_602410 = validateParameter(valid_602410, JString, required = false,
                                 default = nil)
  if valid_602410 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_602410
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602411: Call_PostDeleteStackInstances_602389; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_602411.validator(path, query, header, formData, body)
  let scheme = call_602411.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602411.url(scheme.get, call_602411.host, call_602411.base,
                         call_602411.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602411, url, valid)

proc call*(call_602412: Call_PostDeleteStackInstances_602389; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode; RetainStacks: bool;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DeleteStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_602413 = newJObject()
  var formData_602414 = newJObject()
  add(formData_602414, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_602414, "OperationId", newJString(OperationId))
  add(formData_602414, "StackSetName", newJString(StackSetName))
  if OperationPreferencesRegionOrder != nil:
    formData_602414.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_602414, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_602414.add "Accounts", Accounts
  if Regions != nil:
    formData_602414.add "Regions", Regions
  add(formData_602414, "RetainStacks", newJBool(RetainStacks))
  add(query_602413, "Action", newJString(Action))
  add(formData_602414, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_602413, "Version", newJString(Version))
  add(formData_602414, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_602412.call(nil, query_602413, nil, formData_602414, nil)

var postDeleteStackInstances* = Call_PostDeleteStackInstances_602389(
    name: "postDeleteStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_PostDeleteStackInstances_602390, base: "/",
    url: url_PostDeleteStackInstances_602391, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackInstances_602364 = ref object of OpenApiRestCall_601389
proc url_GetDeleteStackInstances_602366(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackInstances_602365(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_602367 = query.getOrDefault("OperationId")
  valid_602367 = validateParameter(valid_602367, JString, required = false,
                                 default = nil)
  if valid_602367 != nil:
    section.add "OperationId", valid_602367
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_602368 = query.getOrDefault("StackSetName")
  valid_602368 = validateParameter(valid_602368, JString, required = true,
                                 default = nil)
  if valid_602368 != nil:
    section.add "StackSetName", valid_602368
  var valid_602369 = query.getOrDefault("RetainStacks")
  valid_602369 = validateParameter(valid_602369, JBool, required = true, default = nil)
  if valid_602369 != nil:
    section.add "RetainStacks", valid_602369
  var valid_602370 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_602370 = validateParameter(valid_602370, JString, required = false,
                                 default = nil)
  if valid_602370 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_602370
  var valid_602371 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_602371 = validateParameter(valid_602371, JString, required = false,
                                 default = nil)
  if valid_602371 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_602371
  var valid_602372 = query.getOrDefault("Action")
  valid_602372 = validateParameter(valid_602372, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_602372 != nil:
    section.add "Action", valid_602372
  var valid_602373 = query.getOrDefault("Regions")
  valid_602373 = validateParameter(valid_602373, JArray, required = true, default = nil)
  if valid_602373 != nil:
    section.add "Regions", valid_602373
  var valid_602374 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_602374 = validateParameter(valid_602374, JArray, required = false,
                                 default = nil)
  if valid_602374 != nil:
    section.add "OperationPreferences.RegionOrder", valid_602374
  var valid_602375 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_602375 = validateParameter(valid_602375, JString, required = false,
                                 default = nil)
  if valid_602375 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_602375
  var valid_602376 = query.getOrDefault("Accounts")
  valid_602376 = validateParameter(valid_602376, JArray, required = true, default = nil)
  if valid_602376 != nil:
    section.add "Accounts", valid_602376
  var valid_602377 = query.getOrDefault("Version")
  valid_602377 = validateParameter(valid_602377, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602377 != nil:
    section.add "Version", valid_602377
  var valid_602378 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_602378 = validateParameter(valid_602378, JString, required = false,
                                 default = nil)
  if valid_602378 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_602378
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602379 = header.getOrDefault("X-Amz-Signature")
  valid_602379 = validateParameter(valid_602379, JString, required = false,
                                 default = nil)
  if valid_602379 != nil:
    section.add "X-Amz-Signature", valid_602379
  var valid_602380 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602380 = validateParameter(valid_602380, JString, required = false,
                                 default = nil)
  if valid_602380 != nil:
    section.add "X-Amz-Content-Sha256", valid_602380
  var valid_602381 = header.getOrDefault("X-Amz-Date")
  valid_602381 = validateParameter(valid_602381, JString, required = false,
                                 default = nil)
  if valid_602381 != nil:
    section.add "X-Amz-Date", valid_602381
  var valid_602382 = header.getOrDefault("X-Amz-Credential")
  valid_602382 = validateParameter(valid_602382, JString, required = false,
                                 default = nil)
  if valid_602382 != nil:
    section.add "X-Amz-Credential", valid_602382
  var valid_602383 = header.getOrDefault("X-Amz-Security-Token")
  valid_602383 = validateParameter(valid_602383, JString, required = false,
                                 default = nil)
  if valid_602383 != nil:
    section.add "X-Amz-Security-Token", valid_602383
  var valid_602384 = header.getOrDefault("X-Amz-Algorithm")
  valid_602384 = validateParameter(valid_602384, JString, required = false,
                                 default = nil)
  if valid_602384 != nil:
    section.add "X-Amz-Algorithm", valid_602384
  var valid_602385 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602385 = validateParameter(valid_602385, JString, required = false,
                                 default = nil)
  if valid_602385 != nil:
    section.add "X-Amz-SignedHeaders", valid_602385
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602386: Call_GetDeleteStackInstances_602364; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_602386.validator(path, query, header, formData, body)
  let scheme = call_602386.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602386.url(scheme.get, call_602386.host, call_602386.base,
                         call_602386.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602386, url, valid)

proc call*(call_602387: Call_GetDeleteStackInstances_602364; StackSetName: string;
          RetainStacks: bool; Regions: JsonNode; Accounts: JsonNode;
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DeleteStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_602388 = newJObject()
  add(query_602388, "OperationId", newJString(OperationId))
  add(query_602388, "StackSetName", newJString(StackSetName))
  add(query_602388, "RetainStacks", newJBool(RetainStacks))
  add(query_602388, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_602388, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_602388, "Action", newJString(Action))
  if Regions != nil:
    query_602388.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_602388.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_602388, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_602388.add "Accounts", Accounts
  add(query_602388, "Version", newJString(Version))
  add(query_602388, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_602387.call(nil, query_602388, nil, nil, nil)

var getDeleteStackInstances* = Call_GetDeleteStackInstances_602364(
    name: "getDeleteStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_GetDeleteStackInstances_602365, base: "/",
    url: url_GetDeleteStackInstances_602366, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackSet_602431 = ref object of OpenApiRestCall_601389
proc url_PostDeleteStackSet_602433(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackSet_602432(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602434 = query.getOrDefault("Action")
  valid_602434 = validateParameter(valid_602434, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_602434 != nil:
    section.add "Action", valid_602434
  var valid_602435 = query.getOrDefault("Version")
  valid_602435 = validateParameter(valid_602435, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602435 != nil:
    section.add "Version", valid_602435
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602436 = header.getOrDefault("X-Amz-Signature")
  valid_602436 = validateParameter(valid_602436, JString, required = false,
                                 default = nil)
  if valid_602436 != nil:
    section.add "X-Amz-Signature", valid_602436
  var valid_602437 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602437 = validateParameter(valid_602437, JString, required = false,
                                 default = nil)
  if valid_602437 != nil:
    section.add "X-Amz-Content-Sha256", valid_602437
  var valid_602438 = header.getOrDefault("X-Amz-Date")
  valid_602438 = validateParameter(valid_602438, JString, required = false,
                                 default = nil)
  if valid_602438 != nil:
    section.add "X-Amz-Date", valid_602438
  var valid_602439 = header.getOrDefault("X-Amz-Credential")
  valid_602439 = validateParameter(valid_602439, JString, required = false,
                                 default = nil)
  if valid_602439 != nil:
    section.add "X-Amz-Credential", valid_602439
  var valid_602440 = header.getOrDefault("X-Amz-Security-Token")
  valid_602440 = validateParameter(valid_602440, JString, required = false,
                                 default = nil)
  if valid_602440 != nil:
    section.add "X-Amz-Security-Token", valid_602440
  var valid_602441 = header.getOrDefault("X-Amz-Algorithm")
  valid_602441 = validateParameter(valid_602441, JString, required = false,
                                 default = nil)
  if valid_602441 != nil:
    section.add "X-Amz-Algorithm", valid_602441
  var valid_602442 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602442 = validateParameter(valid_602442, JString, required = false,
                                 default = nil)
  if valid_602442 != nil:
    section.add "X-Amz-SignedHeaders", valid_602442
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_602443 = formData.getOrDefault("StackSetName")
  valid_602443 = validateParameter(valid_602443, JString, required = true,
                                 default = nil)
  if valid_602443 != nil:
    section.add "StackSetName", valid_602443
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602444: Call_PostDeleteStackSet_602431; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_602444.validator(path, query, header, formData, body)
  let scheme = call_602444.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602444.url(scheme.get, call_602444.host, call_602444.base,
                         call_602444.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602444, url, valid)

proc call*(call_602445: Call_PostDeleteStackSet_602431; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602446 = newJObject()
  var formData_602447 = newJObject()
  add(formData_602447, "StackSetName", newJString(StackSetName))
  add(query_602446, "Action", newJString(Action))
  add(query_602446, "Version", newJString(Version))
  result = call_602445.call(nil, query_602446, nil, formData_602447, nil)

var postDeleteStackSet* = Call_PostDeleteStackSet_602431(
    name: "postDeleteStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackSet",
    validator: validate_PostDeleteStackSet_602432, base: "/",
    url: url_PostDeleteStackSet_602433, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackSet_602415 = ref object of OpenApiRestCall_601389
proc url_GetDeleteStackSet_602417(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackSet_602416(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_602418 = query.getOrDefault("StackSetName")
  valid_602418 = validateParameter(valid_602418, JString, required = true,
                                 default = nil)
  if valid_602418 != nil:
    section.add "StackSetName", valid_602418
  var valid_602419 = query.getOrDefault("Action")
  valid_602419 = validateParameter(valid_602419, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_602419 != nil:
    section.add "Action", valid_602419
  var valid_602420 = query.getOrDefault("Version")
  valid_602420 = validateParameter(valid_602420, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602420 != nil:
    section.add "Version", valid_602420
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602421 = header.getOrDefault("X-Amz-Signature")
  valid_602421 = validateParameter(valid_602421, JString, required = false,
                                 default = nil)
  if valid_602421 != nil:
    section.add "X-Amz-Signature", valid_602421
  var valid_602422 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602422 = validateParameter(valid_602422, JString, required = false,
                                 default = nil)
  if valid_602422 != nil:
    section.add "X-Amz-Content-Sha256", valid_602422
  var valid_602423 = header.getOrDefault("X-Amz-Date")
  valid_602423 = validateParameter(valid_602423, JString, required = false,
                                 default = nil)
  if valid_602423 != nil:
    section.add "X-Amz-Date", valid_602423
  var valid_602424 = header.getOrDefault("X-Amz-Credential")
  valid_602424 = validateParameter(valid_602424, JString, required = false,
                                 default = nil)
  if valid_602424 != nil:
    section.add "X-Amz-Credential", valid_602424
  var valid_602425 = header.getOrDefault("X-Amz-Security-Token")
  valid_602425 = validateParameter(valid_602425, JString, required = false,
                                 default = nil)
  if valid_602425 != nil:
    section.add "X-Amz-Security-Token", valid_602425
  var valid_602426 = header.getOrDefault("X-Amz-Algorithm")
  valid_602426 = validateParameter(valid_602426, JString, required = false,
                                 default = nil)
  if valid_602426 != nil:
    section.add "X-Amz-Algorithm", valid_602426
  var valid_602427 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602427 = validateParameter(valid_602427, JString, required = false,
                                 default = nil)
  if valid_602427 != nil:
    section.add "X-Amz-SignedHeaders", valid_602427
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602428: Call_GetDeleteStackSet_602415; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_602428.validator(path, query, header, formData, body)
  let scheme = call_602428.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602428.url(scheme.get, call_602428.host, call_602428.base,
                         call_602428.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602428, url, valid)

proc call*(call_602429: Call_GetDeleteStackSet_602415; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602430 = newJObject()
  add(query_602430, "StackSetName", newJString(StackSetName))
  add(query_602430, "Action", newJString(Action))
  add(query_602430, "Version", newJString(Version))
  result = call_602429.call(nil, query_602430, nil, nil, nil)

var getDeleteStackSet* = Call_GetDeleteStackSet_602415(name: "getDeleteStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStackSet", validator: validate_GetDeleteStackSet_602416,
    base: "/", url: url_GetDeleteStackSet_602417,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeregisterType_602467 = ref object of OpenApiRestCall_601389
proc url_PostDeregisterType_602469(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeregisterType_602468(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602470 = query.getOrDefault("Action")
  valid_602470 = validateParameter(valid_602470, JString, required = true,
                                 default = newJString("DeregisterType"))
  if valid_602470 != nil:
    section.add "Action", valid_602470
  var valid_602471 = query.getOrDefault("Version")
  valid_602471 = validateParameter(valid_602471, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602471 != nil:
    section.add "Version", valid_602471
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602472 = header.getOrDefault("X-Amz-Signature")
  valid_602472 = validateParameter(valid_602472, JString, required = false,
                                 default = nil)
  if valid_602472 != nil:
    section.add "X-Amz-Signature", valid_602472
  var valid_602473 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602473 = validateParameter(valid_602473, JString, required = false,
                                 default = nil)
  if valid_602473 != nil:
    section.add "X-Amz-Content-Sha256", valid_602473
  var valid_602474 = header.getOrDefault("X-Amz-Date")
  valid_602474 = validateParameter(valid_602474, JString, required = false,
                                 default = nil)
  if valid_602474 != nil:
    section.add "X-Amz-Date", valid_602474
  var valid_602475 = header.getOrDefault("X-Amz-Credential")
  valid_602475 = validateParameter(valid_602475, JString, required = false,
                                 default = nil)
  if valid_602475 != nil:
    section.add "X-Amz-Credential", valid_602475
  var valid_602476 = header.getOrDefault("X-Amz-Security-Token")
  valid_602476 = validateParameter(valid_602476, JString, required = false,
                                 default = nil)
  if valid_602476 != nil:
    section.add "X-Amz-Security-Token", valid_602476
  var valid_602477 = header.getOrDefault("X-Amz-Algorithm")
  valid_602477 = validateParameter(valid_602477, JString, required = false,
                                 default = nil)
  if valid_602477 != nil:
    section.add "X-Amz-Algorithm", valid_602477
  var valid_602478 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602478 = validateParameter(valid_602478, JString, required = false,
                                 default = nil)
  if valid_602478 != nil:
    section.add "X-Amz-SignedHeaders", valid_602478
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  section = newJObject()
  var valid_602479 = formData.getOrDefault("Arn")
  valid_602479 = validateParameter(valid_602479, JString, required = false,
                                 default = nil)
  if valid_602479 != nil:
    section.add "Arn", valid_602479
  var valid_602480 = formData.getOrDefault("VersionId")
  valid_602480 = validateParameter(valid_602480, JString, required = false,
                                 default = nil)
  if valid_602480 != nil:
    section.add "VersionId", valid_602480
  var valid_602481 = formData.getOrDefault("TypeName")
  valid_602481 = validateParameter(valid_602481, JString, required = false,
                                 default = nil)
  if valid_602481 != nil:
    section.add "TypeName", valid_602481
  var valid_602482 = formData.getOrDefault("Type")
  valid_602482 = validateParameter(valid_602482, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_602482 != nil:
    section.add "Type", valid_602482
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602483: Call_PostDeregisterType_602467; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  let valid = call_602483.validator(path, query, header, formData, body)
  let scheme = call_602483.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602483.url(scheme.get, call_602483.host, call_602483.base,
                         call_602483.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602483, url, valid)

proc call*(call_602484: Call_PostDeregisterType_602467; Arn: string = "";
          VersionId: string = ""; TypeName: string = ""; Type: string = "RESOURCE";
          Action: string = "DeregisterType"; Version: string = "2010-05-15"): Recallable =
  ## postDeregisterType
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602485 = newJObject()
  var formData_602486 = newJObject()
  add(formData_602486, "Arn", newJString(Arn))
  add(formData_602486, "VersionId", newJString(VersionId))
  add(formData_602486, "TypeName", newJString(TypeName))
  add(formData_602486, "Type", newJString(Type))
  add(query_602485, "Action", newJString(Action))
  add(query_602485, "Version", newJString(Version))
  result = call_602484.call(nil, query_602485, nil, formData_602486, nil)

var postDeregisterType* = Call_PostDeregisterType_602467(
    name: "postDeregisterType", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeregisterType",
    validator: validate_PostDeregisterType_602468, base: "/",
    url: url_PostDeregisterType_602469, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeregisterType_602448 = ref object of OpenApiRestCall_601389
proc url_GetDeregisterType_602450(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeregisterType_602449(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_602451 = query.getOrDefault("TypeName")
  valid_602451 = validateParameter(valid_602451, JString, required = false,
                                 default = nil)
  if valid_602451 != nil:
    section.add "TypeName", valid_602451
  var valid_602452 = query.getOrDefault("Type")
  valid_602452 = validateParameter(valid_602452, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_602452 != nil:
    section.add "Type", valid_602452
  var valid_602453 = query.getOrDefault("VersionId")
  valid_602453 = validateParameter(valid_602453, JString, required = false,
                                 default = nil)
  if valid_602453 != nil:
    section.add "VersionId", valid_602453
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602454 = query.getOrDefault("Action")
  valid_602454 = validateParameter(valid_602454, JString, required = true,
                                 default = newJString("DeregisterType"))
  if valid_602454 != nil:
    section.add "Action", valid_602454
  var valid_602455 = query.getOrDefault("Version")
  valid_602455 = validateParameter(valid_602455, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602455 != nil:
    section.add "Version", valid_602455
  var valid_602456 = query.getOrDefault("Arn")
  valid_602456 = validateParameter(valid_602456, JString, required = false,
                                 default = nil)
  if valid_602456 != nil:
    section.add "Arn", valid_602456
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602457 = header.getOrDefault("X-Amz-Signature")
  valid_602457 = validateParameter(valid_602457, JString, required = false,
                                 default = nil)
  if valid_602457 != nil:
    section.add "X-Amz-Signature", valid_602457
  var valid_602458 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602458 = validateParameter(valid_602458, JString, required = false,
                                 default = nil)
  if valid_602458 != nil:
    section.add "X-Amz-Content-Sha256", valid_602458
  var valid_602459 = header.getOrDefault("X-Amz-Date")
  valid_602459 = validateParameter(valid_602459, JString, required = false,
                                 default = nil)
  if valid_602459 != nil:
    section.add "X-Amz-Date", valid_602459
  var valid_602460 = header.getOrDefault("X-Amz-Credential")
  valid_602460 = validateParameter(valid_602460, JString, required = false,
                                 default = nil)
  if valid_602460 != nil:
    section.add "X-Amz-Credential", valid_602460
  var valid_602461 = header.getOrDefault("X-Amz-Security-Token")
  valid_602461 = validateParameter(valid_602461, JString, required = false,
                                 default = nil)
  if valid_602461 != nil:
    section.add "X-Amz-Security-Token", valid_602461
  var valid_602462 = header.getOrDefault("X-Amz-Algorithm")
  valid_602462 = validateParameter(valid_602462, JString, required = false,
                                 default = nil)
  if valid_602462 != nil:
    section.add "X-Amz-Algorithm", valid_602462
  var valid_602463 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602463 = validateParameter(valid_602463, JString, required = false,
                                 default = nil)
  if valid_602463 != nil:
    section.add "X-Amz-SignedHeaders", valid_602463
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602464: Call_GetDeregisterType_602448; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ## 
  let valid = call_602464.validator(path, query, header, formData, body)
  let scheme = call_602464.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602464.url(scheme.get, call_602464.host, call_602464.base,
                         call_602464.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602464, url, valid)

proc call*(call_602465: Call_GetDeregisterType_602448; TypeName: string = "";
          Type: string = "RESOURCE"; VersionId: string = "";
          Action: string = "DeregisterType"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getDeregisterType
  ## <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_602466 = newJObject()
  add(query_602466, "TypeName", newJString(TypeName))
  add(query_602466, "Type", newJString(Type))
  add(query_602466, "VersionId", newJString(VersionId))
  add(query_602466, "Action", newJString(Action))
  add(query_602466, "Version", newJString(Version))
  add(query_602466, "Arn", newJString(Arn))
  result = call_602465.call(nil, query_602466, nil, nil, nil)

var getDeregisterType* = Call_GetDeregisterType_602448(name: "getDeregisterType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeregisterType", validator: validate_GetDeregisterType_602449,
    base: "/", url: url_GetDeregisterType_602450,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAccountLimits_602503 = ref object of OpenApiRestCall_601389
proc url_PostDescribeAccountLimits_602505(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAccountLimits_602504(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602506 = query.getOrDefault("Action")
  valid_602506 = validateParameter(valid_602506, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_602506 != nil:
    section.add "Action", valid_602506
  var valid_602507 = query.getOrDefault("Version")
  valid_602507 = validateParameter(valid_602507, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602507 != nil:
    section.add "Version", valid_602507
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602508 = header.getOrDefault("X-Amz-Signature")
  valid_602508 = validateParameter(valid_602508, JString, required = false,
                                 default = nil)
  if valid_602508 != nil:
    section.add "X-Amz-Signature", valid_602508
  var valid_602509 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602509 = validateParameter(valid_602509, JString, required = false,
                                 default = nil)
  if valid_602509 != nil:
    section.add "X-Amz-Content-Sha256", valid_602509
  var valid_602510 = header.getOrDefault("X-Amz-Date")
  valid_602510 = validateParameter(valid_602510, JString, required = false,
                                 default = nil)
  if valid_602510 != nil:
    section.add "X-Amz-Date", valid_602510
  var valid_602511 = header.getOrDefault("X-Amz-Credential")
  valid_602511 = validateParameter(valid_602511, JString, required = false,
                                 default = nil)
  if valid_602511 != nil:
    section.add "X-Amz-Credential", valid_602511
  var valid_602512 = header.getOrDefault("X-Amz-Security-Token")
  valid_602512 = validateParameter(valid_602512, JString, required = false,
                                 default = nil)
  if valid_602512 != nil:
    section.add "X-Amz-Security-Token", valid_602512
  var valid_602513 = header.getOrDefault("X-Amz-Algorithm")
  valid_602513 = validateParameter(valid_602513, JString, required = false,
                                 default = nil)
  if valid_602513 != nil:
    section.add "X-Amz-Algorithm", valid_602513
  var valid_602514 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602514 = validateParameter(valid_602514, JString, required = false,
                                 default = nil)
  if valid_602514 != nil:
    section.add "X-Amz-SignedHeaders", valid_602514
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  section = newJObject()
  var valid_602515 = formData.getOrDefault("NextToken")
  valid_602515 = validateParameter(valid_602515, JString, required = false,
                                 default = nil)
  if valid_602515 != nil:
    section.add "NextToken", valid_602515
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602516: Call_PostDescribeAccountLimits_602503; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_602516.validator(path, query, header, formData, body)
  let scheme = call_602516.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602516.url(scheme.get, call_602516.host, call_602516.base,
                         call_602516.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602516, url, valid)

proc call*(call_602517: Call_PostDescribeAccountLimits_602503;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602518 = newJObject()
  var formData_602519 = newJObject()
  add(formData_602519, "NextToken", newJString(NextToken))
  add(query_602518, "Action", newJString(Action))
  add(query_602518, "Version", newJString(Version))
  result = call_602517.call(nil, query_602518, nil, formData_602519, nil)

var postDescribeAccountLimits* = Call_PostDescribeAccountLimits_602503(
    name: "postDescribeAccountLimits", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_PostDescribeAccountLimits_602504, base: "/",
    url: url_PostDescribeAccountLimits_602505,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAccountLimits_602487 = ref object of OpenApiRestCall_601389
proc url_GetDescribeAccountLimits_602489(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAccountLimits_602488(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_602490 = query.getOrDefault("NextToken")
  valid_602490 = validateParameter(valid_602490, JString, required = false,
                                 default = nil)
  if valid_602490 != nil:
    section.add "NextToken", valid_602490
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602491 = query.getOrDefault("Action")
  valid_602491 = validateParameter(valid_602491, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_602491 != nil:
    section.add "Action", valid_602491
  var valid_602492 = query.getOrDefault("Version")
  valid_602492 = validateParameter(valid_602492, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602492 != nil:
    section.add "Version", valid_602492
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602493 = header.getOrDefault("X-Amz-Signature")
  valid_602493 = validateParameter(valid_602493, JString, required = false,
                                 default = nil)
  if valid_602493 != nil:
    section.add "X-Amz-Signature", valid_602493
  var valid_602494 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602494 = validateParameter(valid_602494, JString, required = false,
                                 default = nil)
  if valid_602494 != nil:
    section.add "X-Amz-Content-Sha256", valid_602494
  var valid_602495 = header.getOrDefault("X-Amz-Date")
  valid_602495 = validateParameter(valid_602495, JString, required = false,
                                 default = nil)
  if valid_602495 != nil:
    section.add "X-Amz-Date", valid_602495
  var valid_602496 = header.getOrDefault("X-Amz-Credential")
  valid_602496 = validateParameter(valid_602496, JString, required = false,
                                 default = nil)
  if valid_602496 != nil:
    section.add "X-Amz-Credential", valid_602496
  var valid_602497 = header.getOrDefault("X-Amz-Security-Token")
  valid_602497 = validateParameter(valid_602497, JString, required = false,
                                 default = nil)
  if valid_602497 != nil:
    section.add "X-Amz-Security-Token", valid_602497
  var valid_602498 = header.getOrDefault("X-Amz-Algorithm")
  valid_602498 = validateParameter(valid_602498, JString, required = false,
                                 default = nil)
  if valid_602498 != nil:
    section.add "X-Amz-Algorithm", valid_602498
  var valid_602499 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602499 = validateParameter(valid_602499, JString, required = false,
                                 default = nil)
  if valid_602499 != nil:
    section.add "X-Amz-SignedHeaders", valid_602499
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602500: Call_GetDescribeAccountLimits_602487; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_602500.validator(path, query, header, formData, body)
  let scheme = call_602500.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602500.url(scheme.get, call_602500.host, call_602500.base,
                         call_602500.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602500, url, valid)

proc call*(call_602501: Call_GetDescribeAccountLimits_602487;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602502 = newJObject()
  add(query_602502, "NextToken", newJString(NextToken))
  add(query_602502, "Action", newJString(Action))
  add(query_602502, "Version", newJString(Version))
  result = call_602501.call(nil, query_602502, nil, nil, nil)

var getDescribeAccountLimits* = Call_GetDescribeAccountLimits_602487(
    name: "getDescribeAccountLimits", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_GetDescribeAccountLimits_602488, base: "/",
    url: url_GetDescribeAccountLimits_602489, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeChangeSet_602538 = ref object of OpenApiRestCall_601389
proc url_PostDescribeChangeSet_602540(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeChangeSet_602539(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602541 = query.getOrDefault("Action")
  valid_602541 = validateParameter(valid_602541, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_602541 != nil:
    section.add "Action", valid_602541
  var valid_602542 = query.getOrDefault("Version")
  valid_602542 = validateParameter(valid_602542, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602542 != nil:
    section.add "Version", valid_602542
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602543 = header.getOrDefault("X-Amz-Signature")
  valid_602543 = validateParameter(valid_602543, JString, required = false,
                                 default = nil)
  if valid_602543 != nil:
    section.add "X-Amz-Signature", valid_602543
  var valid_602544 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602544 = validateParameter(valid_602544, JString, required = false,
                                 default = nil)
  if valid_602544 != nil:
    section.add "X-Amz-Content-Sha256", valid_602544
  var valid_602545 = header.getOrDefault("X-Amz-Date")
  valid_602545 = validateParameter(valid_602545, JString, required = false,
                                 default = nil)
  if valid_602545 != nil:
    section.add "X-Amz-Date", valid_602545
  var valid_602546 = header.getOrDefault("X-Amz-Credential")
  valid_602546 = validateParameter(valid_602546, JString, required = false,
                                 default = nil)
  if valid_602546 != nil:
    section.add "X-Amz-Credential", valid_602546
  var valid_602547 = header.getOrDefault("X-Amz-Security-Token")
  valid_602547 = validateParameter(valid_602547, JString, required = false,
                                 default = nil)
  if valid_602547 != nil:
    section.add "X-Amz-Security-Token", valid_602547
  var valid_602548 = header.getOrDefault("X-Amz-Algorithm")
  valid_602548 = validateParameter(valid_602548, JString, required = false,
                                 default = nil)
  if valid_602548 != nil:
    section.add "X-Amz-Algorithm", valid_602548
  var valid_602549 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602549 = validateParameter(valid_602549, JString, required = false,
                                 default = nil)
  if valid_602549 != nil:
    section.add "X-Amz-SignedHeaders", valid_602549
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  section = newJObject()
  var valid_602550 = formData.getOrDefault("StackName")
  valid_602550 = validateParameter(valid_602550, JString, required = false,
                                 default = nil)
  if valid_602550 != nil:
    section.add "StackName", valid_602550
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_602551 = formData.getOrDefault("ChangeSetName")
  valid_602551 = validateParameter(valid_602551, JString, required = true,
                                 default = nil)
  if valid_602551 != nil:
    section.add "ChangeSetName", valid_602551
  var valid_602552 = formData.getOrDefault("NextToken")
  valid_602552 = validateParameter(valid_602552, JString, required = false,
                                 default = nil)
  if valid_602552 != nil:
    section.add "NextToken", valid_602552
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602553: Call_PostDescribeChangeSet_602538; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_602553.validator(path, query, header, formData, body)
  let scheme = call_602553.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602553.url(scheme.get, call_602553.host, call_602553.base,
                         call_602553.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602553, url, valid)

proc call*(call_602554: Call_PostDescribeChangeSet_602538; ChangeSetName: string;
          StackName: string = ""; NextToken: string = "";
          Action: string = "DescribeChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602555 = newJObject()
  var formData_602556 = newJObject()
  add(formData_602556, "StackName", newJString(StackName))
  add(formData_602556, "ChangeSetName", newJString(ChangeSetName))
  add(formData_602556, "NextToken", newJString(NextToken))
  add(query_602555, "Action", newJString(Action))
  add(query_602555, "Version", newJString(Version))
  result = call_602554.call(nil, query_602555, nil, formData_602556, nil)

var postDescribeChangeSet* = Call_PostDescribeChangeSet_602538(
    name: "postDescribeChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_PostDescribeChangeSet_602539, base: "/",
    url: url_PostDescribeChangeSet_602540, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeChangeSet_602520 = ref object of OpenApiRestCall_601389
proc url_GetDescribeChangeSet_602522(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeChangeSet_602521(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Action: JString (required)
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   Version: JString (required)
  section = newJObject()
  var valid_602523 = query.getOrDefault("NextToken")
  valid_602523 = validateParameter(valid_602523, JString, required = false,
                                 default = nil)
  if valid_602523 != nil:
    section.add "NextToken", valid_602523
  var valid_602524 = query.getOrDefault("StackName")
  valid_602524 = validateParameter(valid_602524, JString, required = false,
                                 default = nil)
  if valid_602524 != nil:
    section.add "StackName", valid_602524
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602525 = query.getOrDefault("Action")
  valid_602525 = validateParameter(valid_602525, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_602525 != nil:
    section.add "Action", valid_602525
  var valid_602526 = query.getOrDefault("ChangeSetName")
  valid_602526 = validateParameter(valid_602526, JString, required = true,
                                 default = nil)
  if valid_602526 != nil:
    section.add "ChangeSetName", valid_602526
  var valid_602527 = query.getOrDefault("Version")
  valid_602527 = validateParameter(valid_602527, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602527 != nil:
    section.add "Version", valid_602527
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602528 = header.getOrDefault("X-Amz-Signature")
  valid_602528 = validateParameter(valid_602528, JString, required = false,
                                 default = nil)
  if valid_602528 != nil:
    section.add "X-Amz-Signature", valid_602528
  var valid_602529 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602529 = validateParameter(valid_602529, JString, required = false,
                                 default = nil)
  if valid_602529 != nil:
    section.add "X-Amz-Content-Sha256", valid_602529
  var valid_602530 = header.getOrDefault("X-Amz-Date")
  valid_602530 = validateParameter(valid_602530, JString, required = false,
                                 default = nil)
  if valid_602530 != nil:
    section.add "X-Amz-Date", valid_602530
  var valid_602531 = header.getOrDefault("X-Amz-Credential")
  valid_602531 = validateParameter(valid_602531, JString, required = false,
                                 default = nil)
  if valid_602531 != nil:
    section.add "X-Amz-Credential", valid_602531
  var valid_602532 = header.getOrDefault("X-Amz-Security-Token")
  valid_602532 = validateParameter(valid_602532, JString, required = false,
                                 default = nil)
  if valid_602532 != nil:
    section.add "X-Amz-Security-Token", valid_602532
  var valid_602533 = header.getOrDefault("X-Amz-Algorithm")
  valid_602533 = validateParameter(valid_602533, JString, required = false,
                                 default = nil)
  if valid_602533 != nil:
    section.add "X-Amz-Algorithm", valid_602533
  var valid_602534 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602534 = validateParameter(valid_602534, JString, required = false,
                                 default = nil)
  if valid_602534 != nil:
    section.add "X-Amz-SignedHeaders", valid_602534
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602535: Call_GetDescribeChangeSet_602520; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_602535.validator(path, query, header, formData, body)
  let scheme = call_602535.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602535.url(scheme.get, call_602535.host, call_602535.base,
                         call_602535.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602535, url, valid)

proc call*(call_602536: Call_GetDescribeChangeSet_602520; ChangeSetName: string;
          NextToken: string = ""; StackName: string = "";
          Action: string = "DescribeChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   Version: string (required)
  var query_602537 = newJObject()
  add(query_602537, "NextToken", newJString(NextToken))
  add(query_602537, "StackName", newJString(StackName))
  add(query_602537, "Action", newJString(Action))
  add(query_602537, "ChangeSetName", newJString(ChangeSetName))
  add(query_602537, "Version", newJString(Version))
  result = call_602536.call(nil, query_602537, nil, nil, nil)

var getDescribeChangeSet* = Call_GetDescribeChangeSet_602520(
    name: "getDescribeChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_GetDescribeChangeSet_602521, base: "/",
    url: url_GetDescribeChangeSet_602522, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackDriftDetectionStatus_602573 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackDriftDetectionStatus_602575(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackDriftDetectionStatus_602574(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602576 = query.getOrDefault("Action")
  valid_602576 = validateParameter(valid_602576, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_602576 != nil:
    section.add "Action", valid_602576
  var valid_602577 = query.getOrDefault("Version")
  valid_602577 = validateParameter(valid_602577, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602577 != nil:
    section.add "Version", valid_602577
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602578 = header.getOrDefault("X-Amz-Signature")
  valid_602578 = validateParameter(valid_602578, JString, required = false,
                                 default = nil)
  if valid_602578 != nil:
    section.add "X-Amz-Signature", valid_602578
  var valid_602579 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602579 = validateParameter(valid_602579, JString, required = false,
                                 default = nil)
  if valid_602579 != nil:
    section.add "X-Amz-Content-Sha256", valid_602579
  var valid_602580 = header.getOrDefault("X-Amz-Date")
  valid_602580 = validateParameter(valid_602580, JString, required = false,
                                 default = nil)
  if valid_602580 != nil:
    section.add "X-Amz-Date", valid_602580
  var valid_602581 = header.getOrDefault("X-Amz-Credential")
  valid_602581 = validateParameter(valid_602581, JString, required = false,
                                 default = nil)
  if valid_602581 != nil:
    section.add "X-Amz-Credential", valid_602581
  var valid_602582 = header.getOrDefault("X-Amz-Security-Token")
  valid_602582 = validateParameter(valid_602582, JString, required = false,
                                 default = nil)
  if valid_602582 != nil:
    section.add "X-Amz-Security-Token", valid_602582
  var valid_602583 = header.getOrDefault("X-Amz-Algorithm")
  valid_602583 = validateParameter(valid_602583, JString, required = false,
                                 default = nil)
  if valid_602583 != nil:
    section.add "X-Amz-Algorithm", valid_602583
  var valid_602584 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602584 = validateParameter(valid_602584, JString, required = false,
                                 default = nil)
  if valid_602584 != nil:
    section.add "X-Amz-SignedHeaders", valid_602584
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackDriftDetectionId` field"
  var valid_602585 = formData.getOrDefault("StackDriftDetectionId")
  valid_602585 = validateParameter(valid_602585, JString, required = true,
                                 default = nil)
  if valid_602585 != nil:
    section.add "StackDriftDetectionId", valid_602585
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602586: Call_PostDescribeStackDriftDetectionStatus_602573;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_602586.validator(path, query, header, formData, body)
  let scheme = call_602586.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602586.url(scheme.get, call_602586.host, call_602586.base,
                         call_602586.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602586, url, valid)

proc call*(call_602587: Call_PostDescribeStackDriftDetectionStatus_602573;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602588 = newJObject()
  var formData_602589 = newJObject()
  add(formData_602589, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_602588, "Action", newJString(Action))
  add(query_602588, "Version", newJString(Version))
  result = call_602587.call(nil, query_602588, nil, formData_602589, nil)

var postDescribeStackDriftDetectionStatus* = Call_PostDescribeStackDriftDetectionStatus_602573(
    name: "postDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_PostDescribeStackDriftDetectionStatus_602574, base: "/",
    url: url_PostDescribeStackDriftDetectionStatus_602575,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackDriftDetectionStatus_602557 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackDriftDetectionStatus_602559(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackDriftDetectionStatus_602558(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `StackDriftDetectionId` field"
  var valid_602560 = query.getOrDefault("StackDriftDetectionId")
  valid_602560 = validateParameter(valid_602560, JString, required = true,
                                 default = nil)
  if valid_602560 != nil:
    section.add "StackDriftDetectionId", valid_602560
  var valid_602561 = query.getOrDefault("Action")
  valid_602561 = validateParameter(valid_602561, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_602561 != nil:
    section.add "Action", valid_602561
  var valid_602562 = query.getOrDefault("Version")
  valid_602562 = validateParameter(valid_602562, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602562 != nil:
    section.add "Version", valid_602562
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602563 = header.getOrDefault("X-Amz-Signature")
  valid_602563 = validateParameter(valid_602563, JString, required = false,
                                 default = nil)
  if valid_602563 != nil:
    section.add "X-Amz-Signature", valid_602563
  var valid_602564 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602564 = validateParameter(valid_602564, JString, required = false,
                                 default = nil)
  if valid_602564 != nil:
    section.add "X-Amz-Content-Sha256", valid_602564
  var valid_602565 = header.getOrDefault("X-Amz-Date")
  valid_602565 = validateParameter(valid_602565, JString, required = false,
                                 default = nil)
  if valid_602565 != nil:
    section.add "X-Amz-Date", valid_602565
  var valid_602566 = header.getOrDefault("X-Amz-Credential")
  valid_602566 = validateParameter(valid_602566, JString, required = false,
                                 default = nil)
  if valid_602566 != nil:
    section.add "X-Amz-Credential", valid_602566
  var valid_602567 = header.getOrDefault("X-Amz-Security-Token")
  valid_602567 = validateParameter(valid_602567, JString, required = false,
                                 default = nil)
  if valid_602567 != nil:
    section.add "X-Amz-Security-Token", valid_602567
  var valid_602568 = header.getOrDefault("X-Amz-Algorithm")
  valid_602568 = validateParameter(valid_602568, JString, required = false,
                                 default = nil)
  if valid_602568 != nil:
    section.add "X-Amz-Algorithm", valid_602568
  var valid_602569 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602569 = validateParameter(valid_602569, JString, required = false,
                                 default = nil)
  if valid_602569 != nil:
    section.add "X-Amz-SignedHeaders", valid_602569
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602570: Call_GetDescribeStackDriftDetectionStatus_602557;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_602570.validator(path, query, header, formData, body)
  let scheme = call_602570.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602570.url(scheme.get, call_602570.host, call_602570.base,
                         call_602570.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602570, url, valid)

proc call*(call_602571: Call_GetDescribeStackDriftDetectionStatus_602557;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602572 = newJObject()
  add(query_602572, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_602572, "Action", newJString(Action))
  add(query_602572, "Version", newJString(Version))
  result = call_602571.call(nil, query_602572, nil, nil, nil)

var getDescribeStackDriftDetectionStatus* = Call_GetDescribeStackDriftDetectionStatus_602557(
    name: "getDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_GetDescribeStackDriftDetectionStatus_602558, base: "/",
    url: url_GetDescribeStackDriftDetectionStatus_602559,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackEvents_602607 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackEvents_602609(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackEvents_602608(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602610 = query.getOrDefault("Action")
  valid_602610 = validateParameter(valid_602610, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_602610 != nil:
    section.add "Action", valid_602610
  var valid_602611 = query.getOrDefault("Version")
  valid_602611 = validateParameter(valid_602611, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602611 != nil:
    section.add "Version", valid_602611
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602612 = header.getOrDefault("X-Amz-Signature")
  valid_602612 = validateParameter(valid_602612, JString, required = false,
                                 default = nil)
  if valid_602612 != nil:
    section.add "X-Amz-Signature", valid_602612
  var valid_602613 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602613 = validateParameter(valid_602613, JString, required = false,
                                 default = nil)
  if valid_602613 != nil:
    section.add "X-Amz-Content-Sha256", valid_602613
  var valid_602614 = header.getOrDefault("X-Amz-Date")
  valid_602614 = validateParameter(valid_602614, JString, required = false,
                                 default = nil)
  if valid_602614 != nil:
    section.add "X-Amz-Date", valid_602614
  var valid_602615 = header.getOrDefault("X-Amz-Credential")
  valid_602615 = validateParameter(valid_602615, JString, required = false,
                                 default = nil)
  if valid_602615 != nil:
    section.add "X-Amz-Credential", valid_602615
  var valid_602616 = header.getOrDefault("X-Amz-Security-Token")
  valid_602616 = validateParameter(valid_602616, JString, required = false,
                                 default = nil)
  if valid_602616 != nil:
    section.add "X-Amz-Security-Token", valid_602616
  var valid_602617 = header.getOrDefault("X-Amz-Algorithm")
  valid_602617 = validateParameter(valid_602617, JString, required = false,
                                 default = nil)
  if valid_602617 != nil:
    section.add "X-Amz-Algorithm", valid_602617
  var valid_602618 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602618 = validateParameter(valid_602618, JString, required = false,
                                 default = nil)
  if valid_602618 != nil:
    section.add "X-Amz-SignedHeaders", valid_602618
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  section = newJObject()
  var valid_602619 = formData.getOrDefault("StackName")
  valid_602619 = validateParameter(valid_602619, JString, required = false,
                                 default = nil)
  if valid_602619 != nil:
    section.add "StackName", valid_602619
  var valid_602620 = formData.getOrDefault("NextToken")
  valid_602620 = validateParameter(valid_602620, JString, required = false,
                                 default = nil)
  if valid_602620 != nil:
    section.add "NextToken", valid_602620
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602621: Call_PostDescribeStackEvents_602607; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_602621.validator(path, query, header, formData, body)
  let scheme = call_602621.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602621.url(scheme.get, call_602621.host, call_602621.base,
                         call_602621.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602621, url, valid)

proc call*(call_602622: Call_PostDescribeStackEvents_602607;
          StackName: string = ""; NextToken: string = "";
          Action: string = "DescribeStackEvents"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602623 = newJObject()
  var formData_602624 = newJObject()
  add(formData_602624, "StackName", newJString(StackName))
  add(formData_602624, "NextToken", newJString(NextToken))
  add(query_602623, "Action", newJString(Action))
  add(query_602623, "Version", newJString(Version))
  result = call_602622.call(nil, query_602623, nil, formData_602624, nil)

var postDescribeStackEvents* = Call_PostDescribeStackEvents_602607(
    name: "postDescribeStackEvents", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_PostDescribeStackEvents_602608, base: "/",
    url: url_PostDescribeStackEvents_602609, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackEvents_602590 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackEvents_602592(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackEvents_602591(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_602593 = query.getOrDefault("NextToken")
  valid_602593 = validateParameter(valid_602593, JString, required = false,
                                 default = nil)
  if valid_602593 != nil:
    section.add "NextToken", valid_602593
  var valid_602594 = query.getOrDefault("StackName")
  valid_602594 = validateParameter(valid_602594, JString, required = false,
                                 default = nil)
  if valid_602594 != nil:
    section.add "StackName", valid_602594
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602595 = query.getOrDefault("Action")
  valid_602595 = validateParameter(valid_602595, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_602595 != nil:
    section.add "Action", valid_602595
  var valid_602596 = query.getOrDefault("Version")
  valid_602596 = validateParameter(valid_602596, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602596 != nil:
    section.add "Version", valid_602596
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602597 = header.getOrDefault("X-Amz-Signature")
  valid_602597 = validateParameter(valid_602597, JString, required = false,
                                 default = nil)
  if valid_602597 != nil:
    section.add "X-Amz-Signature", valid_602597
  var valid_602598 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602598 = validateParameter(valid_602598, JString, required = false,
                                 default = nil)
  if valid_602598 != nil:
    section.add "X-Amz-Content-Sha256", valid_602598
  var valid_602599 = header.getOrDefault("X-Amz-Date")
  valid_602599 = validateParameter(valid_602599, JString, required = false,
                                 default = nil)
  if valid_602599 != nil:
    section.add "X-Amz-Date", valid_602599
  var valid_602600 = header.getOrDefault("X-Amz-Credential")
  valid_602600 = validateParameter(valid_602600, JString, required = false,
                                 default = nil)
  if valid_602600 != nil:
    section.add "X-Amz-Credential", valid_602600
  var valid_602601 = header.getOrDefault("X-Amz-Security-Token")
  valid_602601 = validateParameter(valid_602601, JString, required = false,
                                 default = nil)
  if valid_602601 != nil:
    section.add "X-Amz-Security-Token", valid_602601
  var valid_602602 = header.getOrDefault("X-Amz-Algorithm")
  valid_602602 = validateParameter(valid_602602, JString, required = false,
                                 default = nil)
  if valid_602602 != nil:
    section.add "X-Amz-Algorithm", valid_602602
  var valid_602603 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602603 = validateParameter(valid_602603, JString, required = false,
                                 default = nil)
  if valid_602603 != nil:
    section.add "X-Amz-SignedHeaders", valid_602603
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602604: Call_GetDescribeStackEvents_602590; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_602604.validator(path, query, header, formData, body)
  let scheme = call_602604.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602604.url(scheme.get, call_602604.host, call_602604.base,
                         call_602604.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602604, url, valid)

proc call*(call_602605: Call_GetDescribeStackEvents_602590; NextToken: string = "";
          StackName: string = ""; Action: string = "DescribeStackEvents";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602606 = newJObject()
  add(query_602606, "NextToken", newJString(NextToken))
  add(query_602606, "StackName", newJString(StackName))
  add(query_602606, "Action", newJString(Action))
  add(query_602606, "Version", newJString(Version))
  result = call_602605.call(nil, query_602606, nil, nil, nil)

var getDescribeStackEvents* = Call_GetDescribeStackEvents_602590(
    name: "getDescribeStackEvents", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_GetDescribeStackEvents_602591, base: "/",
    url: url_GetDescribeStackEvents_602592, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackInstance_602643 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackInstance_602645(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackInstance_602644(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602646 = query.getOrDefault("Action")
  valid_602646 = validateParameter(valid_602646, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_602646 != nil:
    section.add "Action", valid_602646
  var valid_602647 = query.getOrDefault("Version")
  valid_602647 = validateParameter(valid_602647, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602647 != nil:
    section.add "Version", valid_602647
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602648 = header.getOrDefault("X-Amz-Signature")
  valid_602648 = validateParameter(valid_602648, JString, required = false,
                                 default = nil)
  if valid_602648 != nil:
    section.add "X-Amz-Signature", valid_602648
  var valid_602649 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602649 = validateParameter(valid_602649, JString, required = false,
                                 default = nil)
  if valid_602649 != nil:
    section.add "X-Amz-Content-Sha256", valid_602649
  var valid_602650 = header.getOrDefault("X-Amz-Date")
  valid_602650 = validateParameter(valid_602650, JString, required = false,
                                 default = nil)
  if valid_602650 != nil:
    section.add "X-Amz-Date", valid_602650
  var valid_602651 = header.getOrDefault("X-Amz-Credential")
  valid_602651 = validateParameter(valid_602651, JString, required = false,
                                 default = nil)
  if valid_602651 != nil:
    section.add "X-Amz-Credential", valid_602651
  var valid_602652 = header.getOrDefault("X-Amz-Security-Token")
  valid_602652 = validateParameter(valid_602652, JString, required = false,
                                 default = nil)
  if valid_602652 != nil:
    section.add "X-Amz-Security-Token", valid_602652
  var valid_602653 = header.getOrDefault("X-Amz-Algorithm")
  valid_602653 = validateParameter(valid_602653, JString, required = false,
                                 default = nil)
  if valid_602653 != nil:
    section.add "X-Amz-Algorithm", valid_602653
  var valid_602654 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602654 = validateParameter(valid_602654, JString, required = false,
                                 default = nil)
  if valid_602654 != nil:
    section.add "X-Amz-SignedHeaders", valid_602654
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackInstanceRegion` field"
  var valid_602655 = formData.getOrDefault("StackInstanceRegion")
  valid_602655 = validateParameter(valid_602655, JString, required = true,
                                 default = nil)
  if valid_602655 != nil:
    section.add "StackInstanceRegion", valid_602655
  var valid_602656 = formData.getOrDefault("StackSetName")
  valid_602656 = validateParameter(valid_602656, JString, required = true,
                                 default = nil)
  if valid_602656 != nil:
    section.add "StackSetName", valid_602656
  var valid_602657 = formData.getOrDefault("StackInstanceAccount")
  valid_602657 = validateParameter(valid_602657, JString, required = true,
                                 default = nil)
  if valid_602657 != nil:
    section.add "StackInstanceAccount", valid_602657
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602658: Call_PostDescribeStackInstance_602643; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_602658.validator(path, query, header, formData, body)
  let scheme = call_602658.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602658.url(scheme.get, call_602658.host, call_602658.base,
                         call_602658.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602658, url, valid)

proc call*(call_602659: Call_PostDescribeStackInstance_602643;
          StackInstanceRegion: string; StackSetName: string;
          StackInstanceAccount: string; Action: string = "DescribeStackInstance";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602660 = newJObject()
  var formData_602661 = newJObject()
  add(formData_602661, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_602661, "StackSetName", newJString(StackSetName))
  add(formData_602661, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_602660, "Action", newJString(Action))
  add(query_602660, "Version", newJString(Version))
  result = call_602659.call(nil, query_602660, nil, formData_602661, nil)

var postDescribeStackInstance* = Call_PostDescribeStackInstance_602643(
    name: "postDescribeStackInstance", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_PostDescribeStackInstance_602644, base: "/",
    url: url_PostDescribeStackInstance_602645,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackInstance_602625 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackInstance_602627(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackInstance_602626(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_602628 = query.getOrDefault("StackSetName")
  valid_602628 = validateParameter(valid_602628, JString, required = true,
                                 default = nil)
  if valid_602628 != nil:
    section.add "StackSetName", valid_602628
  var valid_602629 = query.getOrDefault("StackInstanceRegion")
  valid_602629 = validateParameter(valid_602629, JString, required = true,
                                 default = nil)
  if valid_602629 != nil:
    section.add "StackInstanceRegion", valid_602629
  var valid_602630 = query.getOrDefault("StackInstanceAccount")
  valid_602630 = validateParameter(valid_602630, JString, required = true,
                                 default = nil)
  if valid_602630 != nil:
    section.add "StackInstanceAccount", valid_602630
  var valid_602631 = query.getOrDefault("Action")
  valid_602631 = validateParameter(valid_602631, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_602631 != nil:
    section.add "Action", valid_602631
  var valid_602632 = query.getOrDefault("Version")
  valid_602632 = validateParameter(valid_602632, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602632 != nil:
    section.add "Version", valid_602632
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602633 = header.getOrDefault("X-Amz-Signature")
  valid_602633 = validateParameter(valid_602633, JString, required = false,
                                 default = nil)
  if valid_602633 != nil:
    section.add "X-Amz-Signature", valid_602633
  var valid_602634 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602634 = validateParameter(valid_602634, JString, required = false,
                                 default = nil)
  if valid_602634 != nil:
    section.add "X-Amz-Content-Sha256", valid_602634
  var valid_602635 = header.getOrDefault("X-Amz-Date")
  valid_602635 = validateParameter(valid_602635, JString, required = false,
                                 default = nil)
  if valid_602635 != nil:
    section.add "X-Amz-Date", valid_602635
  var valid_602636 = header.getOrDefault("X-Amz-Credential")
  valid_602636 = validateParameter(valid_602636, JString, required = false,
                                 default = nil)
  if valid_602636 != nil:
    section.add "X-Amz-Credential", valid_602636
  var valid_602637 = header.getOrDefault("X-Amz-Security-Token")
  valid_602637 = validateParameter(valid_602637, JString, required = false,
                                 default = nil)
  if valid_602637 != nil:
    section.add "X-Amz-Security-Token", valid_602637
  var valid_602638 = header.getOrDefault("X-Amz-Algorithm")
  valid_602638 = validateParameter(valid_602638, JString, required = false,
                                 default = nil)
  if valid_602638 != nil:
    section.add "X-Amz-Algorithm", valid_602638
  var valid_602639 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602639 = validateParameter(valid_602639, JString, required = false,
                                 default = nil)
  if valid_602639 != nil:
    section.add "X-Amz-SignedHeaders", valid_602639
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602640: Call_GetDescribeStackInstance_602625; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_602640.validator(path, query, header, formData, body)
  let scheme = call_602640.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602640.url(scheme.get, call_602640.host, call_602640.base,
                         call_602640.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602640, url, valid)

proc call*(call_602641: Call_GetDescribeStackInstance_602625; StackSetName: string;
          StackInstanceRegion: string; StackInstanceAccount: string;
          Action: string = "DescribeStackInstance"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602642 = newJObject()
  add(query_602642, "StackSetName", newJString(StackSetName))
  add(query_602642, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_602642, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_602642, "Action", newJString(Action))
  add(query_602642, "Version", newJString(Version))
  result = call_602641.call(nil, query_602642, nil, nil, nil)

var getDescribeStackInstance* = Call_GetDescribeStackInstance_602625(
    name: "getDescribeStackInstance", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_GetDescribeStackInstance_602626, base: "/",
    url: url_GetDescribeStackInstance_602627, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResource_602679 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackResource_602681(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResource_602680(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602682 = query.getOrDefault("Action")
  valid_602682 = validateParameter(valid_602682, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_602682 != nil:
    section.add "Action", valid_602682
  var valid_602683 = query.getOrDefault("Version")
  valid_602683 = validateParameter(valid_602683, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602683 != nil:
    section.add "Version", valid_602683
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602684 = header.getOrDefault("X-Amz-Signature")
  valid_602684 = validateParameter(valid_602684, JString, required = false,
                                 default = nil)
  if valid_602684 != nil:
    section.add "X-Amz-Signature", valid_602684
  var valid_602685 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602685 = validateParameter(valid_602685, JString, required = false,
                                 default = nil)
  if valid_602685 != nil:
    section.add "X-Amz-Content-Sha256", valid_602685
  var valid_602686 = header.getOrDefault("X-Amz-Date")
  valid_602686 = validateParameter(valid_602686, JString, required = false,
                                 default = nil)
  if valid_602686 != nil:
    section.add "X-Amz-Date", valid_602686
  var valid_602687 = header.getOrDefault("X-Amz-Credential")
  valid_602687 = validateParameter(valid_602687, JString, required = false,
                                 default = nil)
  if valid_602687 != nil:
    section.add "X-Amz-Credential", valid_602687
  var valid_602688 = header.getOrDefault("X-Amz-Security-Token")
  valid_602688 = validateParameter(valid_602688, JString, required = false,
                                 default = nil)
  if valid_602688 != nil:
    section.add "X-Amz-Security-Token", valid_602688
  var valid_602689 = header.getOrDefault("X-Amz-Algorithm")
  valid_602689 = validateParameter(valid_602689, JString, required = false,
                                 default = nil)
  if valid_602689 != nil:
    section.add "X-Amz-Algorithm", valid_602689
  var valid_602690 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602690 = validateParameter(valid_602690, JString, required = false,
                                 default = nil)
  if valid_602690 != nil:
    section.add "X-Amz-SignedHeaders", valid_602690
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602691 = formData.getOrDefault("StackName")
  valid_602691 = validateParameter(valid_602691, JString, required = true,
                                 default = nil)
  if valid_602691 != nil:
    section.add "StackName", valid_602691
  var valid_602692 = formData.getOrDefault("LogicalResourceId")
  valid_602692 = validateParameter(valid_602692, JString, required = true,
                                 default = nil)
  if valid_602692 != nil:
    section.add "LogicalResourceId", valid_602692
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602693: Call_PostDescribeStackResource_602679; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_602693.validator(path, query, header, formData, body)
  let scheme = call_602693.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602693.url(scheme.get, call_602693.host, call_602693.base,
                         call_602693.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602693, url, valid)

proc call*(call_602694: Call_PostDescribeStackResource_602679; StackName: string;
          LogicalResourceId: string; Action: string = "DescribeStackResource";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_602695 = newJObject()
  var formData_602696 = newJObject()
  add(formData_602696, "StackName", newJString(StackName))
  add(query_602695, "Action", newJString(Action))
  add(query_602695, "Version", newJString(Version))
  add(formData_602696, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_602694.call(nil, query_602695, nil, formData_602696, nil)

var postDescribeStackResource* = Call_PostDescribeStackResource_602679(
    name: "postDescribeStackResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_PostDescribeStackResource_602680, base: "/",
    url: url_PostDescribeStackResource_602681,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResource_602662 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackResource_602664(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResource_602663(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602665 = query.getOrDefault("StackName")
  valid_602665 = validateParameter(valid_602665, JString, required = true,
                                 default = nil)
  if valid_602665 != nil:
    section.add "StackName", valid_602665
  var valid_602666 = query.getOrDefault("Action")
  valid_602666 = validateParameter(valid_602666, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_602666 != nil:
    section.add "Action", valid_602666
  var valid_602667 = query.getOrDefault("Version")
  valid_602667 = validateParameter(valid_602667, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602667 != nil:
    section.add "Version", valid_602667
  var valid_602668 = query.getOrDefault("LogicalResourceId")
  valid_602668 = validateParameter(valid_602668, JString, required = true,
                                 default = nil)
  if valid_602668 != nil:
    section.add "LogicalResourceId", valid_602668
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602669 = header.getOrDefault("X-Amz-Signature")
  valid_602669 = validateParameter(valid_602669, JString, required = false,
                                 default = nil)
  if valid_602669 != nil:
    section.add "X-Amz-Signature", valid_602669
  var valid_602670 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602670 = validateParameter(valid_602670, JString, required = false,
                                 default = nil)
  if valid_602670 != nil:
    section.add "X-Amz-Content-Sha256", valid_602670
  var valid_602671 = header.getOrDefault("X-Amz-Date")
  valid_602671 = validateParameter(valid_602671, JString, required = false,
                                 default = nil)
  if valid_602671 != nil:
    section.add "X-Amz-Date", valid_602671
  var valid_602672 = header.getOrDefault("X-Amz-Credential")
  valid_602672 = validateParameter(valid_602672, JString, required = false,
                                 default = nil)
  if valid_602672 != nil:
    section.add "X-Amz-Credential", valid_602672
  var valid_602673 = header.getOrDefault("X-Amz-Security-Token")
  valid_602673 = validateParameter(valid_602673, JString, required = false,
                                 default = nil)
  if valid_602673 != nil:
    section.add "X-Amz-Security-Token", valid_602673
  var valid_602674 = header.getOrDefault("X-Amz-Algorithm")
  valid_602674 = validateParameter(valid_602674, JString, required = false,
                                 default = nil)
  if valid_602674 != nil:
    section.add "X-Amz-Algorithm", valid_602674
  var valid_602675 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602675 = validateParameter(valid_602675, JString, required = false,
                                 default = nil)
  if valid_602675 != nil:
    section.add "X-Amz-SignedHeaders", valid_602675
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602676: Call_GetDescribeStackResource_602662; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_602676.validator(path, query, header, formData, body)
  let scheme = call_602676.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602676.url(scheme.get, call_602676.host, call_602676.base,
                         call_602676.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602676, url, valid)

proc call*(call_602677: Call_GetDescribeStackResource_602662; StackName: string;
          LogicalResourceId: string; Action: string = "DescribeStackResource";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_602678 = newJObject()
  add(query_602678, "StackName", newJString(StackName))
  add(query_602678, "Action", newJString(Action))
  add(query_602678, "Version", newJString(Version))
  add(query_602678, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_602677.call(nil, query_602678, nil, nil, nil)

var getDescribeStackResource* = Call_GetDescribeStackResource_602662(
    name: "getDescribeStackResource", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_GetDescribeStackResource_602663, base: "/",
    url: url_GetDescribeStackResource_602664, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResourceDrifts_602716 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackResourceDrifts_602718(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResourceDrifts_602717(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602719 = query.getOrDefault("Action")
  valid_602719 = validateParameter(valid_602719, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_602719 != nil:
    section.add "Action", valid_602719
  var valid_602720 = query.getOrDefault("Version")
  valid_602720 = validateParameter(valid_602720, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602720 != nil:
    section.add "Version", valid_602720
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602721 = header.getOrDefault("X-Amz-Signature")
  valid_602721 = validateParameter(valid_602721, JString, required = false,
                                 default = nil)
  if valid_602721 != nil:
    section.add "X-Amz-Signature", valid_602721
  var valid_602722 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602722 = validateParameter(valid_602722, JString, required = false,
                                 default = nil)
  if valid_602722 != nil:
    section.add "X-Amz-Content-Sha256", valid_602722
  var valid_602723 = header.getOrDefault("X-Amz-Date")
  valid_602723 = validateParameter(valid_602723, JString, required = false,
                                 default = nil)
  if valid_602723 != nil:
    section.add "X-Amz-Date", valid_602723
  var valid_602724 = header.getOrDefault("X-Amz-Credential")
  valid_602724 = validateParameter(valid_602724, JString, required = false,
                                 default = nil)
  if valid_602724 != nil:
    section.add "X-Amz-Credential", valid_602724
  var valid_602725 = header.getOrDefault("X-Amz-Security-Token")
  valid_602725 = validateParameter(valid_602725, JString, required = false,
                                 default = nil)
  if valid_602725 != nil:
    section.add "X-Amz-Security-Token", valid_602725
  var valid_602726 = header.getOrDefault("X-Amz-Algorithm")
  valid_602726 = validateParameter(valid_602726, JString, required = false,
                                 default = nil)
  if valid_602726 != nil:
    section.add "X-Amz-Algorithm", valid_602726
  var valid_602727 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602727 = validateParameter(valid_602727, JString, required = false,
                                 default = nil)
  if valid_602727 != nil:
    section.add "X-Amz-SignedHeaders", valid_602727
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602728 = formData.getOrDefault("StackName")
  valid_602728 = validateParameter(valid_602728, JString, required = true,
                                 default = nil)
  if valid_602728 != nil:
    section.add "StackName", valid_602728
  var valid_602729 = formData.getOrDefault("NextToken")
  valid_602729 = validateParameter(valid_602729, JString, required = false,
                                 default = nil)
  if valid_602729 != nil:
    section.add "NextToken", valid_602729
  var valid_602730 = formData.getOrDefault("MaxResults")
  valid_602730 = validateParameter(valid_602730, JInt, required = false, default = nil)
  if valid_602730 != nil:
    section.add "MaxResults", valid_602730
  var valid_602731 = formData.getOrDefault("StackResourceDriftStatusFilters")
  valid_602731 = validateParameter(valid_602731, JArray, required = false,
                                 default = nil)
  if valid_602731 != nil:
    section.add "StackResourceDriftStatusFilters", valid_602731
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602732: Call_PostDescribeStackResourceDrifts_602716;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_602732.validator(path, query, header, formData, body)
  let scheme = call_602732.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602732.url(scheme.get, call_602732.host, call_602732.base,
                         call_602732.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602732, url, valid)

proc call*(call_602733: Call_PostDescribeStackResourceDrifts_602716;
          StackName: string; NextToken: string = "";
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil): Recallable =
  ## postDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  var query_602734 = newJObject()
  var formData_602735 = newJObject()
  add(formData_602735, "StackName", newJString(StackName))
  add(formData_602735, "NextToken", newJString(NextToken))
  add(query_602734, "Action", newJString(Action))
  add(query_602734, "Version", newJString(Version))
  add(formData_602735, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    formData_602735.add "StackResourceDriftStatusFilters",
                       StackResourceDriftStatusFilters
  result = call_602733.call(nil, query_602734, nil, formData_602735, nil)

var postDescribeStackResourceDrifts* = Call_PostDescribeStackResourceDrifts_602716(
    name: "postDescribeStackResourceDrifts", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_PostDescribeStackResourceDrifts_602717, base: "/",
    url: url_PostDescribeStackResourceDrifts_602718,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResourceDrifts_602697 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackResourceDrifts_602699(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResourceDrifts_602698(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_602700 = query.getOrDefault("MaxResults")
  valid_602700 = validateParameter(valid_602700, JInt, required = false, default = nil)
  if valid_602700 != nil:
    section.add "MaxResults", valid_602700
  var valid_602701 = query.getOrDefault("StackResourceDriftStatusFilters")
  valid_602701 = validateParameter(valid_602701, JArray, required = false,
                                 default = nil)
  if valid_602701 != nil:
    section.add "StackResourceDriftStatusFilters", valid_602701
  var valid_602702 = query.getOrDefault("NextToken")
  valid_602702 = validateParameter(valid_602702, JString, required = false,
                                 default = nil)
  if valid_602702 != nil:
    section.add "NextToken", valid_602702
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602703 = query.getOrDefault("StackName")
  valid_602703 = validateParameter(valid_602703, JString, required = true,
                                 default = nil)
  if valid_602703 != nil:
    section.add "StackName", valid_602703
  var valid_602704 = query.getOrDefault("Action")
  valid_602704 = validateParameter(valid_602704, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_602704 != nil:
    section.add "Action", valid_602704
  var valid_602705 = query.getOrDefault("Version")
  valid_602705 = validateParameter(valid_602705, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602705 != nil:
    section.add "Version", valid_602705
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602706 = header.getOrDefault("X-Amz-Signature")
  valid_602706 = validateParameter(valid_602706, JString, required = false,
                                 default = nil)
  if valid_602706 != nil:
    section.add "X-Amz-Signature", valid_602706
  var valid_602707 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602707 = validateParameter(valid_602707, JString, required = false,
                                 default = nil)
  if valid_602707 != nil:
    section.add "X-Amz-Content-Sha256", valid_602707
  var valid_602708 = header.getOrDefault("X-Amz-Date")
  valid_602708 = validateParameter(valid_602708, JString, required = false,
                                 default = nil)
  if valid_602708 != nil:
    section.add "X-Amz-Date", valid_602708
  var valid_602709 = header.getOrDefault("X-Amz-Credential")
  valid_602709 = validateParameter(valid_602709, JString, required = false,
                                 default = nil)
  if valid_602709 != nil:
    section.add "X-Amz-Credential", valid_602709
  var valid_602710 = header.getOrDefault("X-Amz-Security-Token")
  valid_602710 = validateParameter(valid_602710, JString, required = false,
                                 default = nil)
  if valid_602710 != nil:
    section.add "X-Amz-Security-Token", valid_602710
  var valid_602711 = header.getOrDefault("X-Amz-Algorithm")
  valid_602711 = validateParameter(valid_602711, JString, required = false,
                                 default = nil)
  if valid_602711 != nil:
    section.add "X-Amz-Algorithm", valid_602711
  var valid_602712 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602712 = validateParameter(valid_602712, JString, required = false,
                                 default = nil)
  if valid_602712 != nil:
    section.add "X-Amz-SignedHeaders", valid_602712
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602713: Call_GetDescribeStackResourceDrifts_602697; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_602713.validator(path, query, header, formData, body)
  let scheme = call_602713.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602713.url(scheme.get, call_602713.host, call_602713.base,
                         call_602713.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602713, url, valid)

proc call*(call_602714: Call_GetDescribeStackResourceDrifts_602697;
          StackName: string; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil; NextToken: string = "";
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602715 = newJObject()
  add(query_602715, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    query_602715.add "StackResourceDriftStatusFilters",
                    StackResourceDriftStatusFilters
  add(query_602715, "NextToken", newJString(NextToken))
  add(query_602715, "StackName", newJString(StackName))
  add(query_602715, "Action", newJString(Action))
  add(query_602715, "Version", newJString(Version))
  result = call_602714.call(nil, query_602715, nil, nil, nil)

var getDescribeStackResourceDrifts* = Call_GetDescribeStackResourceDrifts_602697(
    name: "getDescribeStackResourceDrifts", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_GetDescribeStackResourceDrifts_602698, base: "/",
    url: url_GetDescribeStackResourceDrifts_602699,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResources_602754 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackResources_602756(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResources_602755(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602757 = query.getOrDefault("Action")
  valid_602757 = validateParameter(valid_602757, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_602757 != nil:
    section.add "Action", valid_602757
  var valid_602758 = query.getOrDefault("Version")
  valid_602758 = validateParameter(valid_602758, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602758 != nil:
    section.add "Version", valid_602758
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602759 = header.getOrDefault("X-Amz-Signature")
  valid_602759 = validateParameter(valid_602759, JString, required = false,
                                 default = nil)
  if valid_602759 != nil:
    section.add "X-Amz-Signature", valid_602759
  var valid_602760 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602760 = validateParameter(valid_602760, JString, required = false,
                                 default = nil)
  if valid_602760 != nil:
    section.add "X-Amz-Content-Sha256", valid_602760
  var valid_602761 = header.getOrDefault("X-Amz-Date")
  valid_602761 = validateParameter(valid_602761, JString, required = false,
                                 default = nil)
  if valid_602761 != nil:
    section.add "X-Amz-Date", valid_602761
  var valid_602762 = header.getOrDefault("X-Amz-Credential")
  valid_602762 = validateParameter(valid_602762, JString, required = false,
                                 default = nil)
  if valid_602762 != nil:
    section.add "X-Amz-Credential", valid_602762
  var valid_602763 = header.getOrDefault("X-Amz-Security-Token")
  valid_602763 = validateParameter(valid_602763, JString, required = false,
                                 default = nil)
  if valid_602763 != nil:
    section.add "X-Amz-Security-Token", valid_602763
  var valid_602764 = header.getOrDefault("X-Amz-Algorithm")
  valid_602764 = validateParameter(valid_602764, JString, required = false,
                                 default = nil)
  if valid_602764 != nil:
    section.add "X-Amz-Algorithm", valid_602764
  var valid_602765 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602765 = validateParameter(valid_602765, JString, required = false,
                                 default = nil)
  if valid_602765 != nil:
    section.add "X-Amz-SignedHeaders", valid_602765
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_602766 = formData.getOrDefault("StackName")
  valid_602766 = validateParameter(valid_602766, JString, required = false,
                                 default = nil)
  if valid_602766 != nil:
    section.add "StackName", valid_602766
  var valid_602767 = formData.getOrDefault("PhysicalResourceId")
  valid_602767 = validateParameter(valid_602767, JString, required = false,
                                 default = nil)
  if valid_602767 != nil:
    section.add "PhysicalResourceId", valid_602767
  var valid_602768 = formData.getOrDefault("LogicalResourceId")
  valid_602768 = validateParameter(valid_602768, JString, required = false,
                                 default = nil)
  if valid_602768 != nil:
    section.add "LogicalResourceId", valid_602768
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602769: Call_PostDescribeStackResources_602754; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_602769.validator(path, query, header, formData, body)
  let scheme = call_602769.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602769.url(scheme.get, call_602769.host, call_602769.base,
                         call_602769.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602769, url, valid)

proc call*(call_602770: Call_PostDescribeStackResources_602754;
          StackName: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          LogicalResourceId: string = ""): Recallable =
  ## postDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_602771 = newJObject()
  var formData_602772 = newJObject()
  add(formData_602772, "StackName", newJString(StackName))
  add(formData_602772, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_602771, "Action", newJString(Action))
  add(query_602771, "Version", newJString(Version))
  add(formData_602772, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_602770.call(nil, query_602771, nil, formData_602772, nil)

var postDescribeStackResources* = Call_PostDescribeStackResources_602754(
    name: "postDescribeStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_PostDescribeStackResources_602755, base: "/",
    url: url_PostDescribeStackResources_602756,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResources_602736 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackResources_602738(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResources_602737(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_602739 = query.getOrDefault("StackName")
  valid_602739 = validateParameter(valid_602739, JString, required = false,
                                 default = nil)
  if valid_602739 != nil:
    section.add "StackName", valid_602739
  var valid_602740 = query.getOrDefault("PhysicalResourceId")
  valid_602740 = validateParameter(valid_602740, JString, required = false,
                                 default = nil)
  if valid_602740 != nil:
    section.add "PhysicalResourceId", valid_602740
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602741 = query.getOrDefault("Action")
  valid_602741 = validateParameter(valid_602741, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_602741 != nil:
    section.add "Action", valid_602741
  var valid_602742 = query.getOrDefault("Version")
  valid_602742 = validateParameter(valid_602742, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602742 != nil:
    section.add "Version", valid_602742
  var valid_602743 = query.getOrDefault("LogicalResourceId")
  valid_602743 = validateParameter(valid_602743, JString, required = false,
                                 default = nil)
  if valid_602743 != nil:
    section.add "LogicalResourceId", valid_602743
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602744 = header.getOrDefault("X-Amz-Signature")
  valid_602744 = validateParameter(valid_602744, JString, required = false,
                                 default = nil)
  if valid_602744 != nil:
    section.add "X-Amz-Signature", valid_602744
  var valid_602745 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602745 = validateParameter(valid_602745, JString, required = false,
                                 default = nil)
  if valid_602745 != nil:
    section.add "X-Amz-Content-Sha256", valid_602745
  var valid_602746 = header.getOrDefault("X-Amz-Date")
  valid_602746 = validateParameter(valid_602746, JString, required = false,
                                 default = nil)
  if valid_602746 != nil:
    section.add "X-Amz-Date", valid_602746
  var valid_602747 = header.getOrDefault("X-Amz-Credential")
  valid_602747 = validateParameter(valid_602747, JString, required = false,
                                 default = nil)
  if valid_602747 != nil:
    section.add "X-Amz-Credential", valid_602747
  var valid_602748 = header.getOrDefault("X-Amz-Security-Token")
  valid_602748 = validateParameter(valid_602748, JString, required = false,
                                 default = nil)
  if valid_602748 != nil:
    section.add "X-Amz-Security-Token", valid_602748
  var valid_602749 = header.getOrDefault("X-Amz-Algorithm")
  valid_602749 = validateParameter(valid_602749, JString, required = false,
                                 default = nil)
  if valid_602749 != nil:
    section.add "X-Amz-Algorithm", valid_602749
  var valid_602750 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602750 = validateParameter(valid_602750, JString, required = false,
                                 default = nil)
  if valid_602750 != nil:
    section.add "X-Amz-SignedHeaders", valid_602750
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602751: Call_GetDescribeStackResources_602736; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_602751.validator(path, query, header, formData, body)
  let scheme = call_602751.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602751.url(scheme.get, call_602751.host, call_602751.base,
                         call_602751.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602751, url, valid)

proc call*(call_602752: Call_GetDescribeStackResources_602736;
          StackName: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          LogicalResourceId: string = ""): Recallable =
  ## getDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_602753 = newJObject()
  add(query_602753, "StackName", newJString(StackName))
  add(query_602753, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_602753, "Action", newJString(Action))
  add(query_602753, "Version", newJString(Version))
  add(query_602753, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_602752.call(nil, query_602753, nil, nil, nil)

var getDescribeStackResources* = Call_GetDescribeStackResources_602736(
    name: "getDescribeStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_GetDescribeStackResources_602737, base: "/",
    url: url_GetDescribeStackResources_602738,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSet_602789 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackSet_602791(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSet_602790(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602792 = query.getOrDefault("Action")
  valid_602792 = validateParameter(valid_602792, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_602792 != nil:
    section.add "Action", valid_602792
  var valid_602793 = query.getOrDefault("Version")
  valid_602793 = validateParameter(valid_602793, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602793 != nil:
    section.add "Version", valid_602793
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602794 = header.getOrDefault("X-Amz-Signature")
  valid_602794 = validateParameter(valid_602794, JString, required = false,
                                 default = nil)
  if valid_602794 != nil:
    section.add "X-Amz-Signature", valid_602794
  var valid_602795 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602795 = validateParameter(valid_602795, JString, required = false,
                                 default = nil)
  if valid_602795 != nil:
    section.add "X-Amz-Content-Sha256", valid_602795
  var valid_602796 = header.getOrDefault("X-Amz-Date")
  valid_602796 = validateParameter(valid_602796, JString, required = false,
                                 default = nil)
  if valid_602796 != nil:
    section.add "X-Amz-Date", valid_602796
  var valid_602797 = header.getOrDefault("X-Amz-Credential")
  valid_602797 = validateParameter(valid_602797, JString, required = false,
                                 default = nil)
  if valid_602797 != nil:
    section.add "X-Amz-Credential", valid_602797
  var valid_602798 = header.getOrDefault("X-Amz-Security-Token")
  valid_602798 = validateParameter(valid_602798, JString, required = false,
                                 default = nil)
  if valid_602798 != nil:
    section.add "X-Amz-Security-Token", valid_602798
  var valid_602799 = header.getOrDefault("X-Amz-Algorithm")
  valid_602799 = validateParameter(valid_602799, JString, required = false,
                                 default = nil)
  if valid_602799 != nil:
    section.add "X-Amz-Algorithm", valid_602799
  var valid_602800 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602800 = validateParameter(valid_602800, JString, required = false,
                                 default = nil)
  if valid_602800 != nil:
    section.add "X-Amz-SignedHeaders", valid_602800
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_602801 = formData.getOrDefault("StackSetName")
  valid_602801 = validateParameter(valid_602801, JString, required = true,
                                 default = nil)
  if valid_602801 != nil:
    section.add "StackSetName", valid_602801
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602802: Call_PostDescribeStackSet_602789; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_602802.validator(path, query, header, formData, body)
  let scheme = call_602802.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602802.url(scheme.get, call_602802.host, call_602802.base,
                         call_602802.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602802, url, valid)

proc call*(call_602803: Call_PostDescribeStackSet_602789; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602804 = newJObject()
  var formData_602805 = newJObject()
  add(formData_602805, "StackSetName", newJString(StackSetName))
  add(query_602804, "Action", newJString(Action))
  add(query_602804, "Version", newJString(Version))
  result = call_602803.call(nil, query_602804, nil, formData_602805, nil)

var postDescribeStackSet* = Call_PostDescribeStackSet_602789(
    name: "postDescribeStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_PostDescribeStackSet_602790, base: "/",
    url: url_PostDescribeStackSet_602791, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSet_602773 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackSet_602775(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSet_602774(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_602776 = query.getOrDefault("StackSetName")
  valid_602776 = validateParameter(valid_602776, JString, required = true,
                                 default = nil)
  if valid_602776 != nil:
    section.add "StackSetName", valid_602776
  var valid_602777 = query.getOrDefault("Action")
  valid_602777 = validateParameter(valid_602777, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_602777 != nil:
    section.add "Action", valid_602777
  var valid_602778 = query.getOrDefault("Version")
  valid_602778 = validateParameter(valid_602778, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602778 != nil:
    section.add "Version", valid_602778
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602779 = header.getOrDefault("X-Amz-Signature")
  valid_602779 = validateParameter(valid_602779, JString, required = false,
                                 default = nil)
  if valid_602779 != nil:
    section.add "X-Amz-Signature", valid_602779
  var valid_602780 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602780 = validateParameter(valid_602780, JString, required = false,
                                 default = nil)
  if valid_602780 != nil:
    section.add "X-Amz-Content-Sha256", valid_602780
  var valid_602781 = header.getOrDefault("X-Amz-Date")
  valid_602781 = validateParameter(valid_602781, JString, required = false,
                                 default = nil)
  if valid_602781 != nil:
    section.add "X-Amz-Date", valid_602781
  var valid_602782 = header.getOrDefault("X-Amz-Credential")
  valid_602782 = validateParameter(valid_602782, JString, required = false,
                                 default = nil)
  if valid_602782 != nil:
    section.add "X-Amz-Credential", valid_602782
  var valid_602783 = header.getOrDefault("X-Amz-Security-Token")
  valid_602783 = validateParameter(valid_602783, JString, required = false,
                                 default = nil)
  if valid_602783 != nil:
    section.add "X-Amz-Security-Token", valid_602783
  var valid_602784 = header.getOrDefault("X-Amz-Algorithm")
  valid_602784 = validateParameter(valid_602784, JString, required = false,
                                 default = nil)
  if valid_602784 != nil:
    section.add "X-Amz-Algorithm", valid_602784
  var valid_602785 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602785 = validateParameter(valid_602785, JString, required = false,
                                 default = nil)
  if valid_602785 != nil:
    section.add "X-Amz-SignedHeaders", valid_602785
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602786: Call_GetDescribeStackSet_602773; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_602786.validator(path, query, header, formData, body)
  let scheme = call_602786.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602786.url(scheme.get, call_602786.host, call_602786.base,
                         call_602786.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602786, url, valid)

proc call*(call_602787: Call_GetDescribeStackSet_602773; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602788 = newJObject()
  add(query_602788, "StackSetName", newJString(StackSetName))
  add(query_602788, "Action", newJString(Action))
  add(query_602788, "Version", newJString(Version))
  result = call_602787.call(nil, query_602788, nil, nil, nil)

var getDescribeStackSet* = Call_GetDescribeStackSet_602773(
    name: "getDescribeStackSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_GetDescribeStackSet_602774, base: "/",
    url: url_GetDescribeStackSet_602775, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSetOperation_602823 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStackSetOperation_602825(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSetOperation_602824(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602826 = query.getOrDefault("Action")
  valid_602826 = validateParameter(valid_602826, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_602826 != nil:
    section.add "Action", valid_602826
  var valid_602827 = query.getOrDefault("Version")
  valid_602827 = validateParameter(valid_602827, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602827 != nil:
    section.add "Version", valid_602827
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602828 = header.getOrDefault("X-Amz-Signature")
  valid_602828 = validateParameter(valid_602828, JString, required = false,
                                 default = nil)
  if valid_602828 != nil:
    section.add "X-Amz-Signature", valid_602828
  var valid_602829 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602829 = validateParameter(valid_602829, JString, required = false,
                                 default = nil)
  if valid_602829 != nil:
    section.add "X-Amz-Content-Sha256", valid_602829
  var valid_602830 = header.getOrDefault("X-Amz-Date")
  valid_602830 = validateParameter(valid_602830, JString, required = false,
                                 default = nil)
  if valid_602830 != nil:
    section.add "X-Amz-Date", valid_602830
  var valid_602831 = header.getOrDefault("X-Amz-Credential")
  valid_602831 = validateParameter(valid_602831, JString, required = false,
                                 default = nil)
  if valid_602831 != nil:
    section.add "X-Amz-Credential", valid_602831
  var valid_602832 = header.getOrDefault("X-Amz-Security-Token")
  valid_602832 = validateParameter(valid_602832, JString, required = false,
                                 default = nil)
  if valid_602832 != nil:
    section.add "X-Amz-Security-Token", valid_602832
  var valid_602833 = header.getOrDefault("X-Amz-Algorithm")
  valid_602833 = validateParameter(valid_602833, JString, required = false,
                                 default = nil)
  if valid_602833 != nil:
    section.add "X-Amz-Algorithm", valid_602833
  var valid_602834 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602834 = validateParameter(valid_602834, JString, required = false,
                                 default = nil)
  if valid_602834 != nil:
    section.add "X-Amz-SignedHeaders", valid_602834
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_602835 = formData.getOrDefault("OperationId")
  valid_602835 = validateParameter(valid_602835, JString, required = true,
                                 default = nil)
  if valid_602835 != nil:
    section.add "OperationId", valid_602835
  var valid_602836 = formData.getOrDefault("StackSetName")
  valid_602836 = validateParameter(valid_602836, JString, required = true,
                                 default = nil)
  if valid_602836 != nil:
    section.add "StackSetName", valid_602836
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602837: Call_PostDescribeStackSetOperation_602823; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_602837.validator(path, query, header, formData, body)
  let scheme = call_602837.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602837.url(scheme.get, call_602837.host, call_602837.base,
                         call_602837.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602837, url, valid)

proc call*(call_602838: Call_PostDescribeStackSetOperation_602823;
          OperationId: string; StackSetName: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602839 = newJObject()
  var formData_602840 = newJObject()
  add(formData_602840, "OperationId", newJString(OperationId))
  add(formData_602840, "StackSetName", newJString(StackSetName))
  add(query_602839, "Action", newJString(Action))
  add(query_602839, "Version", newJString(Version))
  result = call_602838.call(nil, query_602839, nil, formData_602840, nil)

var postDescribeStackSetOperation* = Call_PostDescribeStackSetOperation_602823(
    name: "postDescribeStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_PostDescribeStackSetOperation_602824, base: "/",
    url: url_PostDescribeStackSetOperation_602825,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSetOperation_602806 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStackSetOperation_602808(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSetOperation_602807(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_602809 = query.getOrDefault("OperationId")
  valid_602809 = validateParameter(valid_602809, JString, required = true,
                                 default = nil)
  if valid_602809 != nil:
    section.add "OperationId", valid_602809
  var valid_602810 = query.getOrDefault("StackSetName")
  valid_602810 = validateParameter(valid_602810, JString, required = true,
                                 default = nil)
  if valid_602810 != nil:
    section.add "StackSetName", valid_602810
  var valid_602811 = query.getOrDefault("Action")
  valid_602811 = validateParameter(valid_602811, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_602811 != nil:
    section.add "Action", valid_602811
  var valid_602812 = query.getOrDefault("Version")
  valid_602812 = validateParameter(valid_602812, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602812 != nil:
    section.add "Version", valid_602812
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602813 = header.getOrDefault("X-Amz-Signature")
  valid_602813 = validateParameter(valid_602813, JString, required = false,
                                 default = nil)
  if valid_602813 != nil:
    section.add "X-Amz-Signature", valid_602813
  var valid_602814 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602814 = validateParameter(valid_602814, JString, required = false,
                                 default = nil)
  if valid_602814 != nil:
    section.add "X-Amz-Content-Sha256", valid_602814
  var valid_602815 = header.getOrDefault("X-Amz-Date")
  valid_602815 = validateParameter(valid_602815, JString, required = false,
                                 default = nil)
  if valid_602815 != nil:
    section.add "X-Amz-Date", valid_602815
  var valid_602816 = header.getOrDefault("X-Amz-Credential")
  valid_602816 = validateParameter(valid_602816, JString, required = false,
                                 default = nil)
  if valid_602816 != nil:
    section.add "X-Amz-Credential", valid_602816
  var valid_602817 = header.getOrDefault("X-Amz-Security-Token")
  valid_602817 = validateParameter(valid_602817, JString, required = false,
                                 default = nil)
  if valid_602817 != nil:
    section.add "X-Amz-Security-Token", valid_602817
  var valid_602818 = header.getOrDefault("X-Amz-Algorithm")
  valid_602818 = validateParameter(valid_602818, JString, required = false,
                                 default = nil)
  if valid_602818 != nil:
    section.add "X-Amz-Algorithm", valid_602818
  var valid_602819 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602819 = validateParameter(valid_602819, JString, required = false,
                                 default = nil)
  if valid_602819 != nil:
    section.add "X-Amz-SignedHeaders", valid_602819
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602820: Call_GetDescribeStackSetOperation_602806; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_602820.validator(path, query, header, formData, body)
  let scheme = call_602820.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602820.url(scheme.get, call_602820.host, call_602820.base,
                         call_602820.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602820, url, valid)

proc call*(call_602821: Call_GetDescribeStackSetOperation_602806;
          OperationId: string; StackSetName: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602822 = newJObject()
  add(query_602822, "OperationId", newJString(OperationId))
  add(query_602822, "StackSetName", newJString(StackSetName))
  add(query_602822, "Action", newJString(Action))
  add(query_602822, "Version", newJString(Version))
  result = call_602821.call(nil, query_602822, nil, nil, nil)

var getDescribeStackSetOperation* = Call_GetDescribeStackSetOperation_602806(
    name: "getDescribeStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_GetDescribeStackSetOperation_602807, base: "/",
    url: url_GetDescribeStackSetOperation_602808,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStacks_602858 = ref object of OpenApiRestCall_601389
proc url_PostDescribeStacks_602860(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStacks_602859(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602861 = query.getOrDefault("Action")
  valid_602861 = validateParameter(valid_602861, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_602861 != nil:
    section.add "Action", valid_602861
  var valid_602862 = query.getOrDefault("Version")
  valid_602862 = validateParameter(valid_602862, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602862 != nil:
    section.add "Version", valid_602862
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602863 = header.getOrDefault("X-Amz-Signature")
  valid_602863 = validateParameter(valid_602863, JString, required = false,
                                 default = nil)
  if valid_602863 != nil:
    section.add "X-Amz-Signature", valid_602863
  var valid_602864 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602864 = validateParameter(valid_602864, JString, required = false,
                                 default = nil)
  if valid_602864 != nil:
    section.add "X-Amz-Content-Sha256", valid_602864
  var valid_602865 = header.getOrDefault("X-Amz-Date")
  valid_602865 = validateParameter(valid_602865, JString, required = false,
                                 default = nil)
  if valid_602865 != nil:
    section.add "X-Amz-Date", valid_602865
  var valid_602866 = header.getOrDefault("X-Amz-Credential")
  valid_602866 = validateParameter(valid_602866, JString, required = false,
                                 default = nil)
  if valid_602866 != nil:
    section.add "X-Amz-Credential", valid_602866
  var valid_602867 = header.getOrDefault("X-Amz-Security-Token")
  valid_602867 = validateParameter(valid_602867, JString, required = false,
                                 default = nil)
  if valid_602867 != nil:
    section.add "X-Amz-Security-Token", valid_602867
  var valid_602868 = header.getOrDefault("X-Amz-Algorithm")
  valid_602868 = validateParameter(valid_602868, JString, required = false,
                                 default = nil)
  if valid_602868 != nil:
    section.add "X-Amz-Algorithm", valid_602868
  var valid_602869 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602869 = validateParameter(valid_602869, JString, required = false,
                                 default = nil)
  if valid_602869 != nil:
    section.add "X-Amz-SignedHeaders", valid_602869
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  section = newJObject()
  var valid_602870 = formData.getOrDefault("StackName")
  valid_602870 = validateParameter(valid_602870, JString, required = false,
                                 default = nil)
  if valid_602870 != nil:
    section.add "StackName", valid_602870
  var valid_602871 = formData.getOrDefault("NextToken")
  valid_602871 = validateParameter(valid_602871, JString, required = false,
                                 default = nil)
  if valid_602871 != nil:
    section.add "NextToken", valid_602871
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602872: Call_PostDescribeStacks_602858; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_602872.validator(path, query, header, formData, body)
  let scheme = call_602872.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602872.url(scheme.get, call_602872.host, call_602872.base,
                         call_602872.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602872, url, valid)

proc call*(call_602873: Call_PostDescribeStacks_602858; StackName: string = "";
          NextToken: string = ""; Action: string = "DescribeStacks";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602874 = newJObject()
  var formData_602875 = newJObject()
  add(formData_602875, "StackName", newJString(StackName))
  add(formData_602875, "NextToken", newJString(NextToken))
  add(query_602874, "Action", newJString(Action))
  add(query_602874, "Version", newJString(Version))
  result = call_602873.call(nil, query_602874, nil, formData_602875, nil)

var postDescribeStacks* = Call_PostDescribeStacks_602858(
    name: "postDescribeStacks", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStacks",
    validator: validate_PostDescribeStacks_602859, base: "/",
    url: url_PostDescribeStacks_602860, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStacks_602841 = ref object of OpenApiRestCall_601389
proc url_GetDescribeStacks_602843(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStacks_602842(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_602844 = query.getOrDefault("NextToken")
  valid_602844 = validateParameter(valid_602844, JString, required = false,
                                 default = nil)
  if valid_602844 != nil:
    section.add "NextToken", valid_602844
  var valid_602845 = query.getOrDefault("StackName")
  valid_602845 = validateParameter(valid_602845, JString, required = false,
                                 default = nil)
  if valid_602845 != nil:
    section.add "StackName", valid_602845
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602846 = query.getOrDefault("Action")
  valid_602846 = validateParameter(valid_602846, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_602846 != nil:
    section.add "Action", valid_602846
  var valid_602847 = query.getOrDefault("Version")
  valid_602847 = validateParameter(valid_602847, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602847 != nil:
    section.add "Version", valid_602847
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602848 = header.getOrDefault("X-Amz-Signature")
  valid_602848 = validateParameter(valid_602848, JString, required = false,
                                 default = nil)
  if valid_602848 != nil:
    section.add "X-Amz-Signature", valid_602848
  var valid_602849 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602849 = validateParameter(valid_602849, JString, required = false,
                                 default = nil)
  if valid_602849 != nil:
    section.add "X-Amz-Content-Sha256", valid_602849
  var valid_602850 = header.getOrDefault("X-Amz-Date")
  valid_602850 = validateParameter(valid_602850, JString, required = false,
                                 default = nil)
  if valid_602850 != nil:
    section.add "X-Amz-Date", valid_602850
  var valid_602851 = header.getOrDefault("X-Amz-Credential")
  valid_602851 = validateParameter(valid_602851, JString, required = false,
                                 default = nil)
  if valid_602851 != nil:
    section.add "X-Amz-Credential", valid_602851
  var valid_602852 = header.getOrDefault("X-Amz-Security-Token")
  valid_602852 = validateParameter(valid_602852, JString, required = false,
                                 default = nil)
  if valid_602852 != nil:
    section.add "X-Amz-Security-Token", valid_602852
  var valid_602853 = header.getOrDefault("X-Amz-Algorithm")
  valid_602853 = validateParameter(valid_602853, JString, required = false,
                                 default = nil)
  if valid_602853 != nil:
    section.add "X-Amz-Algorithm", valid_602853
  var valid_602854 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602854 = validateParameter(valid_602854, JString, required = false,
                                 default = nil)
  if valid_602854 != nil:
    section.add "X-Amz-SignedHeaders", valid_602854
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602855: Call_GetDescribeStacks_602841; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_602855.validator(path, query, header, formData, body)
  let scheme = call_602855.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602855.url(scheme.get, call_602855.host, call_602855.base,
                         call_602855.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602855, url, valid)

proc call*(call_602856: Call_GetDescribeStacks_602841; NextToken: string = "";
          StackName: string = ""; Action: string = "DescribeStacks";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602857 = newJObject()
  add(query_602857, "NextToken", newJString(NextToken))
  add(query_602857, "StackName", newJString(StackName))
  add(query_602857, "Action", newJString(Action))
  add(query_602857, "Version", newJString(Version))
  result = call_602856.call(nil, query_602857, nil, nil, nil)

var getDescribeStacks* = Call_GetDescribeStacks_602841(name: "getDescribeStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStacks", validator: validate_GetDescribeStacks_602842,
    base: "/", url: url_GetDescribeStacks_602843,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeType_602895 = ref object of OpenApiRestCall_601389
proc url_PostDescribeType_602897(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeType_602896(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602898 = query.getOrDefault("Action")
  valid_602898 = validateParameter(valid_602898, JString, required = true,
                                 default = newJString("DescribeType"))
  if valid_602898 != nil:
    section.add "Action", valid_602898
  var valid_602899 = query.getOrDefault("Version")
  valid_602899 = validateParameter(valid_602899, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602899 != nil:
    section.add "Version", valid_602899
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602900 = header.getOrDefault("X-Amz-Signature")
  valid_602900 = validateParameter(valid_602900, JString, required = false,
                                 default = nil)
  if valid_602900 != nil:
    section.add "X-Amz-Signature", valid_602900
  var valid_602901 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602901 = validateParameter(valid_602901, JString, required = false,
                                 default = nil)
  if valid_602901 != nil:
    section.add "X-Amz-Content-Sha256", valid_602901
  var valid_602902 = header.getOrDefault("X-Amz-Date")
  valid_602902 = validateParameter(valid_602902, JString, required = false,
                                 default = nil)
  if valid_602902 != nil:
    section.add "X-Amz-Date", valid_602902
  var valid_602903 = header.getOrDefault("X-Amz-Credential")
  valid_602903 = validateParameter(valid_602903, JString, required = false,
                                 default = nil)
  if valid_602903 != nil:
    section.add "X-Amz-Credential", valid_602903
  var valid_602904 = header.getOrDefault("X-Amz-Security-Token")
  valid_602904 = validateParameter(valid_602904, JString, required = false,
                                 default = nil)
  if valid_602904 != nil:
    section.add "X-Amz-Security-Token", valid_602904
  var valid_602905 = header.getOrDefault("X-Amz-Algorithm")
  valid_602905 = validateParameter(valid_602905, JString, required = false,
                                 default = nil)
  if valid_602905 != nil:
    section.add "X-Amz-Algorithm", valid_602905
  var valid_602906 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602906 = validateParameter(valid_602906, JString, required = false,
                                 default = nil)
  if valid_602906 != nil:
    section.add "X-Amz-SignedHeaders", valid_602906
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  section = newJObject()
  var valid_602907 = formData.getOrDefault("Arn")
  valid_602907 = validateParameter(valid_602907, JString, required = false,
                                 default = nil)
  if valid_602907 != nil:
    section.add "Arn", valid_602907
  var valid_602908 = formData.getOrDefault("VersionId")
  valid_602908 = validateParameter(valid_602908, JString, required = false,
                                 default = nil)
  if valid_602908 != nil:
    section.add "VersionId", valid_602908
  var valid_602909 = formData.getOrDefault("TypeName")
  valid_602909 = validateParameter(valid_602909, JString, required = false,
                                 default = nil)
  if valid_602909 != nil:
    section.add "TypeName", valid_602909
  var valid_602910 = formData.getOrDefault("Type")
  valid_602910 = validateParameter(valid_602910, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_602910 != nil:
    section.add "Type", valid_602910
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602911: Call_PostDescribeType_602895; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  let valid = call_602911.validator(path, query, header, formData, body)
  let scheme = call_602911.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602911.url(scheme.get, call_602911.host, call_602911.base,
                         call_602911.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602911, url, valid)

proc call*(call_602912: Call_PostDescribeType_602895; Arn: string = "";
          VersionId: string = ""; TypeName: string = ""; Type: string = "RESOURCE";
          Action: string = "DescribeType"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeType
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602913 = newJObject()
  var formData_602914 = newJObject()
  add(formData_602914, "Arn", newJString(Arn))
  add(formData_602914, "VersionId", newJString(VersionId))
  add(formData_602914, "TypeName", newJString(TypeName))
  add(formData_602914, "Type", newJString(Type))
  add(query_602913, "Action", newJString(Action))
  add(query_602913, "Version", newJString(Version))
  result = call_602912.call(nil, query_602913, nil, formData_602914, nil)

var postDescribeType* = Call_PostDescribeType_602895(name: "postDescribeType",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeType", validator: validate_PostDescribeType_602896,
    base: "/", url: url_PostDescribeType_602897,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeType_602876 = ref object of OpenApiRestCall_601389
proc url_GetDescribeType_602878(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeType_602877(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: JString
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_602879 = query.getOrDefault("TypeName")
  valid_602879 = validateParameter(valid_602879, JString, required = false,
                                 default = nil)
  if valid_602879 != nil:
    section.add "TypeName", valid_602879
  var valid_602880 = query.getOrDefault("Type")
  valid_602880 = validateParameter(valid_602880, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_602880 != nil:
    section.add "Type", valid_602880
  var valid_602881 = query.getOrDefault("VersionId")
  valid_602881 = validateParameter(valid_602881, JString, required = false,
                                 default = nil)
  if valid_602881 != nil:
    section.add "VersionId", valid_602881
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602882 = query.getOrDefault("Action")
  valid_602882 = validateParameter(valid_602882, JString, required = true,
                                 default = newJString("DescribeType"))
  if valid_602882 != nil:
    section.add "Action", valid_602882
  var valid_602883 = query.getOrDefault("Version")
  valid_602883 = validateParameter(valid_602883, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602883 != nil:
    section.add "Version", valid_602883
  var valid_602884 = query.getOrDefault("Arn")
  valid_602884 = validateParameter(valid_602884, JString, required = false,
                                 default = nil)
  if valid_602884 != nil:
    section.add "Arn", valid_602884
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602885 = header.getOrDefault("X-Amz-Signature")
  valid_602885 = validateParameter(valid_602885, JString, required = false,
                                 default = nil)
  if valid_602885 != nil:
    section.add "X-Amz-Signature", valid_602885
  var valid_602886 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602886 = validateParameter(valid_602886, JString, required = false,
                                 default = nil)
  if valid_602886 != nil:
    section.add "X-Amz-Content-Sha256", valid_602886
  var valid_602887 = header.getOrDefault("X-Amz-Date")
  valid_602887 = validateParameter(valid_602887, JString, required = false,
                                 default = nil)
  if valid_602887 != nil:
    section.add "X-Amz-Date", valid_602887
  var valid_602888 = header.getOrDefault("X-Amz-Credential")
  valid_602888 = validateParameter(valid_602888, JString, required = false,
                                 default = nil)
  if valid_602888 != nil:
    section.add "X-Amz-Credential", valid_602888
  var valid_602889 = header.getOrDefault("X-Amz-Security-Token")
  valid_602889 = validateParameter(valid_602889, JString, required = false,
                                 default = nil)
  if valid_602889 != nil:
    section.add "X-Amz-Security-Token", valid_602889
  var valid_602890 = header.getOrDefault("X-Amz-Algorithm")
  valid_602890 = validateParameter(valid_602890, JString, required = false,
                                 default = nil)
  if valid_602890 != nil:
    section.add "X-Amz-Algorithm", valid_602890
  var valid_602891 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602891 = validateParameter(valid_602891, JString, required = false,
                                 default = nil)
  if valid_602891 != nil:
    section.add "X-Amz-SignedHeaders", valid_602891
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602892: Call_GetDescribeType_602876; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ## 
  let valid = call_602892.validator(path, query, header, formData, body)
  let scheme = call_602892.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602892.url(scheme.get, call_602892.host, call_602892.base,
                         call_602892.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602892, url, valid)

proc call*(call_602893: Call_GetDescribeType_602876; TypeName: string = "";
          Type: string = "RESOURCE"; VersionId: string = "";
          Action: string = "DescribeType"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getDescribeType
  ## <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   VersionId: string
  ##            : <p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_602894 = newJObject()
  add(query_602894, "TypeName", newJString(TypeName))
  add(query_602894, "Type", newJString(Type))
  add(query_602894, "VersionId", newJString(VersionId))
  add(query_602894, "Action", newJString(Action))
  add(query_602894, "Version", newJString(Version))
  add(query_602894, "Arn", newJString(Arn))
  result = call_602893.call(nil, query_602894, nil, nil, nil)

var getDescribeType* = Call_GetDescribeType_602876(name: "getDescribeType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeType", validator: validate_GetDescribeType_602877,
    base: "/", url: url_GetDescribeType_602878, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeTypeRegistration_602931 = ref object of OpenApiRestCall_601389
proc url_PostDescribeTypeRegistration_602933(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeTypeRegistration_602932(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602934 = query.getOrDefault("Action")
  valid_602934 = validateParameter(valid_602934, JString, required = true, default = newJString(
      "DescribeTypeRegistration"))
  if valid_602934 != nil:
    section.add "Action", valid_602934
  var valid_602935 = query.getOrDefault("Version")
  valid_602935 = validateParameter(valid_602935, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602935 != nil:
    section.add "Version", valid_602935
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602936 = header.getOrDefault("X-Amz-Signature")
  valid_602936 = validateParameter(valid_602936, JString, required = false,
                                 default = nil)
  if valid_602936 != nil:
    section.add "X-Amz-Signature", valid_602936
  var valid_602937 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602937 = validateParameter(valid_602937, JString, required = false,
                                 default = nil)
  if valid_602937 != nil:
    section.add "X-Amz-Content-Sha256", valid_602937
  var valid_602938 = header.getOrDefault("X-Amz-Date")
  valid_602938 = validateParameter(valid_602938, JString, required = false,
                                 default = nil)
  if valid_602938 != nil:
    section.add "X-Amz-Date", valid_602938
  var valid_602939 = header.getOrDefault("X-Amz-Credential")
  valid_602939 = validateParameter(valid_602939, JString, required = false,
                                 default = nil)
  if valid_602939 != nil:
    section.add "X-Amz-Credential", valid_602939
  var valid_602940 = header.getOrDefault("X-Amz-Security-Token")
  valid_602940 = validateParameter(valid_602940, JString, required = false,
                                 default = nil)
  if valid_602940 != nil:
    section.add "X-Amz-Security-Token", valid_602940
  var valid_602941 = header.getOrDefault("X-Amz-Algorithm")
  valid_602941 = validateParameter(valid_602941, JString, required = false,
                                 default = nil)
  if valid_602941 != nil:
    section.add "X-Amz-Algorithm", valid_602941
  var valid_602942 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602942 = validateParameter(valid_602942, JString, required = false,
                                 default = nil)
  if valid_602942 != nil:
    section.add "X-Amz-SignedHeaders", valid_602942
  result.add "header", section
  ## parameters in `formData` object:
  ##   RegistrationToken: JString (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `RegistrationToken` field"
  var valid_602943 = formData.getOrDefault("RegistrationToken")
  valid_602943 = validateParameter(valid_602943, JString, required = true,
                                 default = nil)
  if valid_602943 != nil:
    section.add "RegistrationToken", valid_602943
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602944: Call_PostDescribeTypeRegistration_602931; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  let valid = call_602944.validator(path, query, header, formData, body)
  let scheme = call_602944.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602944.url(scheme.get, call_602944.host, call_602944.base,
                         call_602944.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602944, url, valid)

proc call*(call_602945: Call_PostDescribeTypeRegistration_602931;
          RegistrationToken: string; Action: string = "DescribeTypeRegistration";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeTypeRegistration
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ##   RegistrationToken: string (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602946 = newJObject()
  var formData_602947 = newJObject()
  add(formData_602947, "RegistrationToken", newJString(RegistrationToken))
  add(query_602946, "Action", newJString(Action))
  add(query_602946, "Version", newJString(Version))
  result = call_602945.call(nil, query_602946, nil, formData_602947, nil)

var postDescribeTypeRegistration* = Call_PostDescribeTypeRegistration_602931(
    name: "postDescribeTypeRegistration", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeTypeRegistration",
    validator: validate_PostDescribeTypeRegistration_602932, base: "/",
    url: url_PostDescribeTypeRegistration_602933,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeTypeRegistration_602915 = ref object of OpenApiRestCall_601389
proc url_GetDescribeTypeRegistration_602917(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeTypeRegistration_602916(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   RegistrationToken: JString (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `RegistrationToken` field"
  var valid_602918 = query.getOrDefault("RegistrationToken")
  valid_602918 = validateParameter(valid_602918, JString, required = true,
                                 default = nil)
  if valid_602918 != nil:
    section.add "RegistrationToken", valid_602918
  var valid_602919 = query.getOrDefault("Action")
  valid_602919 = validateParameter(valid_602919, JString, required = true, default = newJString(
      "DescribeTypeRegistration"))
  if valid_602919 != nil:
    section.add "Action", valid_602919
  var valid_602920 = query.getOrDefault("Version")
  valid_602920 = validateParameter(valid_602920, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602920 != nil:
    section.add "Version", valid_602920
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602921 = header.getOrDefault("X-Amz-Signature")
  valid_602921 = validateParameter(valid_602921, JString, required = false,
                                 default = nil)
  if valid_602921 != nil:
    section.add "X-Amz-Signature", valid_602921
  var valid_602922 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602922 = validateParameter(valid_602922, JString, required = false,
                                 default = nil)
  if valid_602922 != nil:
    section.add "X-Amz-Content-Sha256", valid_602922
  var valid_602923 = header.getOrDefault("X-Amz-Date")
  valid_602923 = validateParameter(valid_602923, JString, required = false,
                                 default = nil)
  if valid_602923 != nil:
    section.add "X-Amz-Date", valid_602923
  var valid_602924 = header.getOrDefault("X-Amz-Credential")
  valid_602924 = validateParameter(valid_602924, JString, required = false,
                                 default = nil)
  if valid_602924 != nil:
    section.add "X-Amz-Credential", valid_602924
  var valid_602925 = header.getOrDefault("X-Amz-Security-Token")
  valid_602925 = validateParameter(valid_602925, JString, required = false,
                                 default = nil)
  if valid_602925 != nil:
    section.add "X-Amz-Security-Token", valid_602925
  var valid_602926 = header.getOrDefault("X-Amz-Algorithm")
  valid_602926 = validateParameter(valid_602926, JString, required = false,
                                 default = nil)
  if valid_602926 != nil:
    section.add "X-Amz-Algorithm", valid_602926
  var valid_602927 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602927 = validateParameter(valid_602927, JString, required = false,
                                 default = nil)
  if valid_602927 != nil:
    section.add "X-Amz-SignedHeaders", valid_602927
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602928: Call_GetDescribeTypeRegistration_602915; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ## 
  let valid = call_602928.validator(path, query, header, formData, body)
  let scheme = call_602928.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602928.url(scheme.get, call_602928.host, call_602928.base,
                         call_602928.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602928, url, valid)

proc call*(call_602929: Call_GetDescribeTypeRegistration_602915;
          RegistrationToken: string; Action: string = "DescribeTypeRegistration";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeTypeRegistration
  ## <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
  ##   RegistrationToken: string (required)
  ##                    : <p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602930 = newJObject()
  add(query_602930, "RegistrationToken", newJString(RegistrationToken))
  add(query_602930, "Action", newJString(Action))
  add(query_602930, "Version", newJString(Version))
  result = call_602929.call(nil, query_602930, nil, nil, nil)

var getDescribeTypeRegistration* = Call_GetDescribeTypeRegistration_602915(
    name: "getDescribeTypeRegistration", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeTypeRegistration",
    validator: validate_GetDescribeTypeRegistration_602916, base: "/",
    url: url_GetDescribeTypeRegistration_602917,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackDrift_602965 = ref object of OpenApiRestCall_601389
proc url_PostDetectStackDrift_602967(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackDrift_602966(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_602968 = query.getOrDefault("Action")
  valid_602968 = validateParameter(valid_602968, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_602968 != nil:
    section.add "Action", valid_602968
  var valid_602969 = query.getOrDefault("Version")
  valid_602969 = validateParameter(valid_602969, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602969 != nil:
    section.add "Version", valid_602969
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602970 = header.getOrDefault("X-Amz-Signature")
  valid_602970 = validateParameter(valid_602970, JString, required = false,
                                 default = nil)
  if valid_602970 != nil:
    section.add "X-Amz-Signature", valid_602970
  var valid_602971 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602971 = validateParameter(valid_602971, JString, required = false,
                                 default = nil)
  if valid_602971 != nil:
    section.add "X-Amz-Content-Sha256", valid_602971
  var valid_602972 = header.getOrDefault("X-Amz-Date")
  valid_602972 = validateParameter(valid_602972, JString, required = false,
                                 default = nil)
  if valid_602972 != nil:
    section.add "X-Amz-Date", valid_602972
  var valid_602973 = header.getOrDefault("X-Amz-Credential")
  valid_602973 = validateParameter(valid_602973, JString, required = false,
                                 default = nil)
  if valid_602973 != nil:
    section.add "X-Amz-Credential", valid_602973
  var valid_602974 = header.getOrDefault("X-Amz-Security-Token")
  valid_602974 = validateParameter(valid_602974, JString, required = false,
                                 default = nil)
  if valid_602974 != nil:
    section.add "X-Amz-Security-Token", valid_602974
  var valid_602975 = header.getOrDefault("X-Amz-Algorithm")
  valid_602975 = validateParameter(valid_602975, JString, required = false,
                                 default = nil)
  if valid_602975 != nil:
    section.add "X-Amz-Algorithm", valid_602975
  var valid_602976 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602976 = validateParameter(valid_602976, JString, required = false,
                                 default = nil)
  if valid_602976 != nil:
    section.add "X-Amz-SignedHeaders", valid_602976
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_602977 = formData.getOrDefault("StackName")
  valid_602977 = validateParameter(valid_602977, JString, required = true,
                                 default = nil)
  if valid_602977 != nil:
    section.add "StackName", valid_602977
  var valid_602978 = formData.getOrDefault("LogicalResourceIds")
  valid_602978 = validateParameter(valid_602978, JArray, required = false,
                                 default = nil)
  if valid_602978 != nil:
    section.add "LogicalResourceIds", valid_602978
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602979: Call_PostDetectStackDrift_602965; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_602979.validator(path, query, header, formData, body)
  let scheme = call_602979.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602979.url(scheme.get, call_602979.host, call_602979.base,
                         call_602979.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602979, url, valid)

proc call*(call_602980: Call_PostDetectStackDrift_602965; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602981 = newJObject()
  var formData_602982 = newJObject()
  add(formData_602982, "StackName", newJString(StackName))
  if LogicalResourceIds != nil:
    formData_602982.add "LogicalResourceIds", LogicalResourceIds
  add(query_602981, "Action", newJString(Action))
  add(query_602981, "Version", newJString(Version))
  result = call_602980.call(nil, query_602981, nil, formData_602982, nil)

var postDetectStackDrift* = Call_PostDetectStackDrift_602965(
    name: "postDetectStackDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_PostDetectStackDrift_602966, base: "/",
    url: url_PostDetectStackDrift_602967, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackDrift_602948 = ref object of OpenApiRestCall_601389
proc url_GetDetectStackDrift_602950(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackDrift_602949(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_602951 = query.getOrDefault("LogicalResourceIds")
  valid_602951 = validateParameter(valid_602951, JArray, required = false,
                                 default = nil)
  if valid_602951 != nil:
    section.add "LogicalResourceIds", valid_602951
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602952 = query.getOrDefault("StackName")
  valid_602952 = validateParameter(valid_602952, JString, required = true,
                                 default = nil)
  if valid_602952 != nil:
    section.add "StackName", valid_602952
  var valid_602953 = query.getOrDefault("Action")
  valid_602953 = validateParameter(valid_602953, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_602953 != nil:
    section.add "Action", valid_602953
  var valid_602954 = query.getOrDefault("Version")
  valid_602954 = validateParameter(valid_602954, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602954 != nil:
    section.add "Version", valid_602954
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602955 = header.getOrDefault("X-Amz-Signature")
  valid_602955 = validateParameter(valid_602955, JString, required = false,
                                 default = nil)
  if valid_602955 != nil:
    section.add "X-Amz-Signature", valid_602955
  var valid_602956 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602956 = validateParameter(valid_602956, JString, required = false,
                                 default = nil)
  if valid_602956 != nil:
    section.add "X-Amz-Content-Sha256", valid_602956
  var valid_602957 = header.getOrDefault("X-Amz-Date")
  valid_602957 = validateParameter(valid_602957, JString, required = false,
                                 default = nil)
  if valid_602957 != nil:
    section.add "X-Amz-Date", valid_602957
  var valid_602958 = header.getOrDefault("X-Amz-Credential")
  valid_602958 = validateParameter(valid_602958, JString, required = false,
                                 default = nil)
  if valid_602958 != nil:
    section.add "X-Amz-Credential", valid_602958
  var valid_602959 = header.getOrDefault("X-Amz-Security-Token")
  valid_602959 = validateParameter(valid_602959, JString, required = false,
                                 default = nil)
  if valid_602959 != nil:
    section.add "X-Amz-Security-Token", valid_602959
  var valid_602960 = header.getOrDefault("X-Amz-Algorithm")
  valid_602960 = validateParameter(valid_602960, JString, required = false,
                                 default = nil)
  if valid_602960 != nil:
    section.add "X-Amz-Algorithm", valid_602960
  var valid_602961 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602961 = validateParameter(valid_602961, JString, required = false,
                                 default = nil)
  if valid_602961 != nil:
    section.add "X-Amz-SignedHeaders", valid_602961
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602962: Call_GetDetectStackDrift_602948; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_602962.validator(path, query, header, formData, body)
  let scheme = call_602962.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602962.url(scheme.get, call_602962.host, call_602962.base,
                         call_602962.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602962, url, valid)

proc call*(call_602963: Call_GetDetectStackDrift_602948; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Action: string (required)
  ##   Version: string (required)
  var query_602964 = newJObject()
  if LogicalResourceIds != nil:
    query_602964.add "LogicalResourceIds", LogicalResourceIds
  add(query_602964, "StackName", newJString(StackName))
  add(query_602964, "Action", newJString(Action))
  add(query_602964, "Version", newJString(Version))
  result = call_602963.call(nil, query_602964, nil, nil, nil)

var getDetectStackDrift* = Call_GetDetectStackDrift_602948(
    name: "getDetectStackDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_GetDetectStackDrift_602949, base: "/",
    url: url_GetDetectStackDrift_602950, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackResourceDrift_603000 = ref object of OpenApiRestCall_601389
proc url_PostDetectStackResourceDrift_603002(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackResourceDrift_603001(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603003 = query.getOrDefault("Action")
  valid_603003 = validateParameter(valid_603003, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_603003 != nil:
    section.add "Action", valid_603003
  var valid_603004 = query.getOrDefault("Version")
  valid_603004 = validateParameter(valid_603004, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603004 != nil:
    section.add "Version", valid_603004
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603005 = header.getOrDefault("X-Amz-Signature")
  valid_603005 = validateParameter(valid_603005, JString, required = false,
                                 default = nil)
  if valid_603005 != nil:
    section.add "X-Amz-Signature", valid_603005
  var valid_603006 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603006 = validateParameter(valid_603006, JString, required = false,
                                 default = nil)
  if valid_603006 != nil:
    section.add "X-Amz-Content-Sha256", valid_603006
  var valid_603007 = header.getOrDefault("X-Amz-Date")
  valid_603007 = validateParameter(valid_603007, JString, required = false,
                                 default = nil)
  if valid_603007 != nil:
    section.add "X-Amz-Date", valid_603007
  var valid_603008 = header.getOrDefault("X-Amz-Credential")
  valid_603008 = validateParameter(valid_603008, JString, required = false,
                                 default = nil)
  if valid_603008 != nil:
    section.add "X-Amz-Credential", valid_603008
  var valid_603009 = header.getOrDefault("X-Amz-Security-Token")
  valid_603009 = validateParameter(valid_603009, JString, required = false,
                                 default = nil)
  if valid_603009 != nil:
    section.add "X-Amz-Security-Token", valid_603009
  var valid_603010 = header.getOrDefault("X-Amz-Algorithm")
  valid_603010 = validateParameter(valid_603010, JString, required = false,
                                 default = nil)
  if valid_603010 != nil:
    section.add "X-Amz-Algorithm", valid_603010
  var valid_603011 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603011 = validateParameter(valid_603011, JString, required = false,
                                 default = nil)
  if valid_603011 != nil:
    section.add "X-Amz-SignedHeaders", valid_603011
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603012 = formData.getOrDefault("StackName")
  valid_603012 = validateParameter(valid_603012, JString, required = true,
                                 default = nil)
  if valid_603012 != nil:
    section.add "StackName", valid_603012
  var valid_603013 = formData.getOrDefault("LogicalResourceId")
  valid_603013 = validateParameter(valid_603013, JString, required = true,
                                 default = nil)
  if valid_603013 != nil:
    section.add "LogicalResourceId", valid_603013
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603014: Call_PostDetectStackResourceDrift_603000; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_603014.validator(path, query, header, formData, body)
  let scheme = call_603014.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603014.url(scheme.get, call_603014.host, call_603014.base,
                         call_603014.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603014, url, valid)

proc call*(call_603015: Call_PostDetectStackResourceDrift_603000;
          StackName: string; LogicalResourceId: string;
          Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  var query_603016 = newJObject()
  var formData_603017 = newJObject()
  add(formData_603017, "StackName", newJString(StackName))
  add(query_603016, "Action", newJString(Action))
  add(query_603016, "Version", newJString(Version))
  add(formData_603017, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_603015.call(nil, query_603016, nil, formData_603017, nil)

var postDetectStackResourceDrift* = Call_PostDetectStackResourceDrift_603000(
    name: "postDetectStackResourceDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_PostDetectStackResourceDrift_603001, base: "/",
    url: url_PostDetectStackResourceDrift_603002,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackResourceDrift_602983 = ref object of OpenApiRestCall_601389
proc url_GetDetectStackResourceDrift_602985(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackResourceDrift_602984(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_602986 = query.getOrDefault("StackName")
  valid_602986 = validateParameter(valid_602986, JString, required = true,
                                 default = nil)
  if valid_602986 != nil:
    section.add "StackName", valid_602986
  var valid_602987 = query.getOrDefault("Action")
  valid_602987 = validateParameter(valid_602987, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_602987 != nil:
    section.add "Action", valid_602987
  var valid_602988 = query.getOrDefault("Version")
  valid_602988 = validateParameter(valid_602988, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_602988 != nil:
    section.add "Version", valid_602988
  var valid_602989 = query.getOrDefault("LogicalResourceId")
  valid_602989 = validateParameter(valid_602989, JString, required = true,
                                 default = nil)
  if valid_602989 != nil:
    section.add "LogicalResourceId", valid_602989
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_602990 = header.getOrDefault("X-Amz-Signature")
  valid_602990 = validateParameter(valid_602990, JString, required = false,
                                 default = nil)
  if valid_602990 != nil:
    section.add "X-Amz-Signature", valid_602990
  var valid_602991 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_602991 = validateParameter(valid_602991, JString, required = false,
                                 default = nil)
  if valid_602991 != nil:
    section.add "X-Amz-Content-Sha256", valid_602991
  var valid_602992 = header.getOrDefault("X-Amz-Date")
  valid_602992 = validateParameter(valid_602992, JString, required = false,
                                 default = nil)
  if valid_602992 != nil:
    section.add "X-Amz-Date", valid_602992
  var valid_602993 = header.getOrDefault("X-Amz-Credential")
  valid_602993 = validateParameter(valid_602993, JString, required = false,
                                 default = nil)
  if valid_602993 != nil:
    section.add "X-Amz-Credential", valid_602993
  var valid_602994 = header.getOrDefault("X-Amz-Security-Token")
  valid_602994 = validateParameter(valid_602994, JString, required = false,
                                 default = nil)
  if valid_602994 != nil:
    section.add "X-Amz-Security-Token", valid_602994
  var valid_602995 = header.getOrDefault("X-Amz-Algorithm")
  valid_602995 = validateParameter(valid_602995, JString, required = false,
                                 default = nil)
  if valid_602995 != nil:
    section.add "X-Amz-Algorithm", valid_602995
  var valid_602996 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_602996 = validateParameter(valid_602996, JString, required = false,
                                 default = nil)
  if valid_602996 != nil:
    section.add "X-Amz-SignedHeaders", valid_602996
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_602997: Call_GetDetectStackResourceDrift_602983; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_602997.validator(path, query, header, formData, body)
  let scheme = call_602997.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_602997.url(scheme.get, call_602997.host, call_602997.base,
                         call_602997.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_602997, url, valid)

proc call*(call_602998: Call_GetDetectStackResourceDrift_602983; StackName: string;
          LogicalResourceId: string; Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  var query_602999 = newJObject()
  add(query_602999, "StackName", newJString(StackName))
  add(query_602999, "Action", newJString(Action))
  add(query_602999, "Version", newJString(Version))
  add(query_602999, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_602998.call(nil, query_602999, nil, nil, nil)

var getDetectStackResourceDrift* = Call_GetDetectStackResourceDrift_602983(
    name: "getDetectStackResourceDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_GetDetectStackResourceDrift_602984, base: "/",
    url: url_GetDetectStackResourceDrift_602985,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackSetDrift_603040 = ref object of OpenApiRestCall_601389
proc url_PostDetectStackSetDrift_603042(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackSetDrift_603041(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603043 = query.getOrDefault("Action")
  valid_603043 = validateParameter(valid_603043, JString, required = true,
                                 default = newJString("DetectStackSetDrift"))
  if valid_603043 != nil:
    section.add "Action", valid_603043
  var valid_603044 = query.getOrDefault("Version")
  valid_603044 = validateParameter(valid_603044, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603044 != nil:
    section.add "Version", valid_603044
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603045 = header.getOrDefault("X-Amz-Signature")
  valid_603045 = validateParameter(valid_603045, JString, required = false,
                                 default = nil)
  if valid_603045 != nil:
    section.add "X-Amz-Signature", valid_603045
  var valid_603046 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603046 = validateParameter(valid_603046, JString, required = false,
                                 default = nil)
  if valid_603046 != nil:
    section.add "X-Amz-Content-Sha256", valid_603046
  var valid_603047 = header.getOrDefault("X-Amz-Date")
  valid_603047 = validateParameter(valid_603047, JString, required = false,
                                 default = nil)
  if valid_603047 != nil:
    section.add "X-Amz-Date", valid_603047
  var valid_603048 = header.getOrDefault("X-Amz-Credential")
  valid_603048 = validateParameter(valid_603048, JString, required = false,
                                 default = nil)
  if valid_603048 != nil:
    section.add "X-Amz-Credential", valid_603048
  var valid_603049 = header.getOrDefault("X-Amz-Security-Token")
  valid_603049 = validateParameter(valid_603049, JString, required = false,
                                 default = nil)
  if valid_603049 != nil:
    section.add "X-Amz-Security-Token", valid_603049
  var valid_603050 = header.getOrDefault("X-Amz-Algorithm")
  valid_603050 = validateParameter(valid_603050, JString, required = false,
                                 default = nil)
  if valid_603050 != nil:
    section.add "X-Amz-Algorithm", valid_603050
  var valid_603051 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603051 = validateParameter(valid_603051, JString, required = false,
                                 default = nil)
  if valid_603051 != nil:
    section.add "X-Amz-SignedHeaders", valid_603051
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: JString (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_603052 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_603052 = validateParameter(valid_603052, JString, required = false,
                                 default = nil)
  if valid_603052 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_603052
  var valid_603053 = formData.getOrDefault("OperationId")
  valid_603053 = validateParameter(valid_603053, JString, required = false,
                                 default = nil)
  if valid_603053 != nil:
    section.add "OperationId", valid_603053
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603054 = formData.getOrDefault("StackSetName")
  valid_603054 = validateParameter(valid_603054, JString, required = true,
                                 default = nil)
  if valid_603054 != nil:
    section.add "StackSetName", valid_603054
  var valid_603055 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_603055 = validateParameter(valid_603055, JArray, required = false,
                                 default = nil)
  if valid_603055 != nil:
    section.add "OperationPreferences.RegionOrder", valid_603055
  var valid_603056 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_603056 = validateParameter(valid_603056, JString, required = false,
                                 default = nil)
  if valid_603056 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_603056
  var valid_603057 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_603057 = validateParameter(valid_603057, JString, required = false,
                                 default = nil)
  if valid_603057 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_603057
  var valid_603058 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_603058 = validateParameter(valid_603058, JString, required = false,
                                 default = nil)
  if valid_603058 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_603058
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603059: Call_PostDetectStackSetDrift_603040; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  let valid = call_603059.validator(path, query, header, formData, body)
  let scheme = call_603059.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603059.url(scheme.get, call_603059.host, call_603059.base,
                         call_603059.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603059, url, valid)

proc call*(call_603060: Call_PostDetectStackSetDrift_603040; StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DetectStackSetDrift";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postDetectStackSetDrift
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: string (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_603061 = newJObject()
  var formData_603062 = newJObject()
  add(formData_603062, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_603062, "OperationId", newJString(OperationId))
  add(formData_603062, "StackSetName", newJString(StackSetName))
  if OperationPreferencesRegionOrder != nil:
    formData_603062.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_603062, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_603061, "Action", newJString(Action))
  add(formData_603062, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_603061, "Version", newJString(Version))
  add(formData_603062, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_603060.call(nil, query_603061, nil, formData_603062, nil)

var postDetectStackSetDrift* = Call_PostDetectStackSetDrift_603040(
    name: "postDetectStackSetDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackSetDrift",
    validator: validate_PostDetectStackSetDrift_603041, base: "/",
    url: url_PostDetectStackSetDrift_603042, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackSetDrift_603018 = ref object of OpenApiRestCall_601389
proc url_GetDetectStackSetDrift_603020(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackSetDrift_603019(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: JString (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_603021 = query.getOrDefault("OperationId")
  valid_603021 = validateParameter(valid_603021, JString, required = false,
                                 default = nil)
  if valid_603021 != nil:
    section.add "OperationId", valid_603021
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_603022 = query.getOrDefault("StackSetName")
  valid_603022 = validateParameter(valid_603022, JString, required = true,
                                 default = nil)
  if valid_603022 != nil:
    section.add "StackSetName", valid_603022
  var valid_603023 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_603023 = validateParameter(valid_603023, JString, required = false,
                                 default = nil)
  if valid_603023 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_603023
  var valid_603024 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_603024 = validateParameter(valid_603024, JString, required = false,
                                 default = nil)
  if valid_603024 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_603024
  var valid_603025 = query.getOrDefault("Action")
  valid_603025 = validateParameter(valid_603025, JString, required = true,
                                 default = newJString("DetectStackSetDrift"))
  if valid_603025 != nil:
    section.add "Action", valid_603025
  var valid_603026 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_603026 = validateParameter(valid_603026, JArray, required = false,
                                 default = nil)
  if valid_603026 != nil:
    section.add "OperationPreferences.RegionOrder", valid_603026
  var valid_603027 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_603027 = validateParameter(valid_603027, JString, required = false,
                                 default = nil)
  if valid_603027 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_603027
  var valid_603028 = query.getOrDefault("Version")
  valid_603028 = validateParameter(valid_603028, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603028 != nil:
    section.add "Version", valid_603028
  var valid_603029 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_603029 = validateParameter(valid_603029, JString, required = false,
                                 default = nil)
  if valid_603029 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_603029
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603030 = header.getOrDefault("X-Amz-Signature")
  valid_603030 = validateParameter(valid_603030, JString, required = false,
                                 default = nil)
  if valid_603030 != nil:
    section.add "X-Amz-Signature", valid_603030
  var valid_603031 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603031 = validateParameter(valid_603031, JString, required = false,
                                 default = nil)
  if valid_603031 != nil:
    section.add "X-Amz-Content-Sha256", valid_603031
  var valid_603032 = header.getOrDefault("X-Amz-Date")
  valid_603032 = validateParameter(valid_603032, JString, required = false,
                                 default = nil)
  if valid_603032 != nil:
    section.add "X-Amz-Date", valid_603032
  var valid_603033 = header.getOrDefault("X-Amz-Credential")
  valid_603033 = validateParameter(valid_603033, JString, required = false,
                                 default = nil)
  if valid_603033 != nil:
    section.add "X-Amz-Credential", valid_603033
  var valid_603034 = header.getOrDefault("X-Amz-Security-Token")
  valid_603034 = validateParameter(valid_603034, JString, required = false,
                                 default = nil)
  if valid_603034 != nil:
    section.add "X-Amz-Security-Token", valid_603034
  var valid_603035 = header.getOrDefault("X-Amz-Algorithm")
  valid_603035 = validateParameter(valid_603035, JString, required = false,
                                 default = nil)
  if valid_603035 != nil:
    section.add "X-Amz-Algorithm", valid_603035
  var valid_603036 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603036 = validateParameter(valid_603036, JString, required = false,
                                 default = nil)
  if valid_603036 != nil:
    section.add "X-Amz-SignedHeaders", valid_603036
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603037: Call_GetDetectStackSetDrift_603018; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ## 
  let valid = call_603037.validator(path, query, header, formData, body)
  let scheme = call_603037.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603037.url(scheme.get, call_603037.host, call_603037.base,
                         call_603037.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603037, url, valid)

proc call*(call_603038: Call_GetDetectStackSetDrift_603018; StackSetName: string;
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DetectStackSetDrift";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getDetectStackSetDrift
  ## <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
  ##   OperationId: string
  ##              :  <i>The ID of the stack set operation.</i> 
  ##   StackSetName: string (required)
  ##               : The name of the stack set on which to perform the drift detection operation.
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_603039 = newJObject()
  add(query_603039, "OperationId", newJString(OperationId))
  add(query_603039, "StackSetName", newJString(StackSetName))
  add(query_603039, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_603039, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_603039, "Action", newJString(Action))
  if OperationPreferencesRegionOrder != nil:
    query_603039.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_603039, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(query_603039, "Version", newJString(Version))
  add(query_603039, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_603038.call(nil, query_603039, nil, nil, nil)

var getDetectStackSetDrift* = Call_GetDetectStackSetDrift_603018(
    name: "getDetectStackSetDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackSetDrift",
    validator: validate_GetDetectStackSetDrift_603019, base: "/",
    url: url_GetDetectStackSetDrift_603020, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostEstimateTemplateCost_603081 = ref object of OpenApiRestCall_601389
proc url_PostEstimateTemplateCost_603083(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostEstimateTemplateCost_603082(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603084 = query.getOrDefault("Action")
  valid_603084 = validateParameter(valid_603084, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_603084 != nil:
    section.add "Action", valid_603084
  var valid_603085 = query.getOrDefault("Version")
  valid_603085 = validateParameter(valid_603085, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603085 != nil:
    section.add "Version", valid_603085
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603086 = header.getOrDefault("X-Amz-Signature")
  valid_603086 = validateParameter(valid_603086, JString, required = false,
                                 default = nil)
  if valid_603086 != nil:
    section.add "X-Amz-Signature", valid_603086
  var valid_603087 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603087 = validateParameter(valid_603087, JString, required = false,
                                 default = nil)
  if valid_603087 != nil:
    section.add "X-Amz-Content-Sha256", valid_603087
  var valid_603088 = header.getOrDefault("X-Amz-Date")
  valid_603088 = validateParameter(valid_603088, JString, required = false,
                                 default = nil)
  if valid_603088 != nil:
    section.add "X-Amz-Date", valid_603088
  var valid_603089 = header.getOrDefault("X-Amz-Credential")
  valid_603089 = validateParameter(valid_603089, JString, required = false,
                                 default = nil)
  if valid_603089 != nil:
    section.add "X-Amz-Credential", valid_603089
  var valid_603090 = header.getOrDefault("X-Amz-Security-Token")
  valid_603090 = validateParameter(valid_603090, JString, required = false,
                                 default = nil)
  if valid_603090 != nil:
    section.add "X-Amz-Security-Token", valid_603090
  var valid_603091 = header.getOrDefault("X-Amz-Algorithm")
  valid_603091 = validateParameter(valid_603091, JString, required = false,
                                 default = nil)
  if valid_603091 != nil:
    section.add "X-Amz-Algorithm", valid_603091
  var valid_603092 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603092 = validateParameter(valid_603092, JString, required = false,
                                 default = nil)
  if valid_603092 != nil:
    section.add "X-Amz-SignedHeaders", valid_603092
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  section = newJObject()
  var valid_603093 = formData.getOrDefault("TemplateURL")
  valid_603093 = validateParameter(valid_603093, JString, required = false,
                                 default = nil)
  if valid_603093 != nil:
    section.add "TemplateURL", valid_603093
  var valid_603094 = formData.getOrDefault("TemplateBody")
  valid_603094 = validateParameter(valid_603094, JString, required = false,
                                 default = nil)
  if valid_603094 != nil:
    section.add "TemplateBody", valid_603094
  var valid_603095 = formData.getOrDefault("Parameters")
  valid_603095 = validateParameter(valid_603095, JArray, required = false,
                                 default = nil)
  if valid_603095 != nil:
    section.add "Parameters", valid_603095
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603096: Call_PostEstimateTemplateCost_603081; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_603096.validator(path, query, header, formData, body)
  let scheme = call_603096.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603096.url(scheme.get, call_603096.host, call_603096.base,
                         call_603096.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603096, url, valid)

proc call*(call_603097: Call_PostEstimateTemplateCost_603081;
          TemplateURL: string = ""; TemplateBody: string = "";
          Action: string = "EstimateTemplateCost"; Parameters: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## postEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Version: string (required)
  var query_603098 = newJObject()
  var formData_603099 = newJObject()
  add(formData_603099, "TemplateURL", newJString(TemplateURL))
  add(formData_603099, "TemplateBody", newJString(TemplateBody))
  add(query_603098, "Action", newJString(Action))
  if Parameters != nil:
    formData_603099.add "Parameters", Parameters
  add(query_603098, "Version", newJString(Version))
  result = call_603097.call(nil, query_603098, nil, formData_603099, nil)

var postEstimateTemplateCost* = Call_PostEstimateTemplateCost_603081(
    name: "postEstimateTemplateCost", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_PostEstimateTemplateCost_603082, base: "/",
    url: url_PostEstimateTemplateCost_603083, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetEstimateTemplateCost_603063 = ref object of OpenApiRestCall_601389
proc url_GetEstimateTemplateCost_603065(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetEstimateTemplateCost_603064(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_603066 = query.getOrDefault("Parameters")
  valid_603066 = validateParameter(valid_603066, JArray, required = false,
                                 default = nil)
  if valid_603066 != nil:
    section.add "Parameters", valid_603066
  var valid_603067 = query.getOrDefault("TemplateBody")
  valid_603067 = validateParameter(valid_603067, JString, required = false,
                                 default = nil)
  if valid_603067 != nil:
    section.add "TemplateBody", valid_603067
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603068 = query.getOrDefault("Action")
  valid_603068 = validateParameter(valid_603068, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_603068 != nil:
    section.add "Action", valid_603068
  var valid_603069 = query.getOrDefault("TemplateURL")
  valid_603069 = validateParameter(valid_603069, JString, required = false,
                                 default = nil)
  if valid_603069 != nil:
    section.add "TemplateURL", valid_603069
  var valid_603070 = query.getOrDefault("Version")
  valid_603070 = validateParameter(valid_603070, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603070 != nil:
    section.add "Version", valid_603070
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603071 = header.getOrDefault("X-Amz-Signature")
  valid_603071 = validateParameter(valid_603071, JString, required = false,
                                 default = nil)
  if valid_603071 != nil:
    section.add "X-Amz-Signature", valid_603071
  var valid_603072 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603072 = validateParameter(valid_603072, JString, required = false,
                                 default = nil)
  if valid_603072 != nil:
    section.add "X-Amz-Content-Sha256", valid_603072
  var valid_603073 = header.getOrDefault("X-Amz-Date")
  valid_603073 = validateParameter(valid_603073, JString, required = false,
                                 default = nil)
  if valid_603073 != nil:
    section.add "X-Amz-Date", valid_603073
  var valid_603074 = header.getOrDefault("X-Amz-Credential")
  valid_603074 = validateParameter(valid_603074, JString, required = false,
                                 default = nil)
  if valid_603074 != nil:
    section.add "X-Amz-Credential", valid_603074
  var valid_603075 = header.getOrDefault("X-Amz-Security-Token")
  valid_603075 = validateParameter(valid_603075, JString, required = false,
                                 default = nil)
  if valid_603075 != nil:
    section.add "X-Amz-Security-Token", valid_603075
  var valid_603076 = header.getOrDefault("X-Amz-Algorithm")
  valid_603076 = validateParameter(valid_603076, JString, required = false,
                                 default = nil)
  if valid_603076 != nil:
    section.add "X-Amz-Algorithm", valid_603076
  var valid_603077 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603077 = validateParameter(valid_603077, JString, required = false,
                                 default = nil)
  if valid_603077 != nil:
    section.add "X-Amz-SignedHeaders", valid_603077
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603078: Call_GetEstimateTemplateCost_603063; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_603078.validator(path, query, header, formData, body)
  let scheme = call_603078.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603078.url(scheme.get, call_603078.host, call_603078.base,
                         call_603078.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603078, url, valid)

proc call*(call_603079: Call_GetEstimateTemplateCost_603063;
          Parameters: JsonNode = nil; TemplateBody: string = "";
          Action: string = "EstimateTemplateCost"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_603080 = newJObject()
  if Parameters != nil:
    query_603080.add "Parameters", Parameters
  add(query_603080, "TemplateBody", newJString(TemplateBody))
  add(query_603080, "Action", newJString(Action))
  add(query_603080, "TemplateURL", newJString(TemplateURL))
  add(query_603080, "Version", newJString(Version))
  result = call_603079.call(nil, query_603080, nil, nil, nil)

var getEstimateTemplateCost* = Call_GetEstimateTemplateCost_603063(
    name: "getEstimateTemplateCost", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_GetEstimateTemplateCost_603064, base: "/",
    url: url_GetEstimateTemplateCost_603065, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostExecuteChangeSet_603118 = ref object of OpenApiRestCall_601389
proc url_PostExecuteChangeSet_603120(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostExecuteChangeSet_603119(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603121 = query.getOrDefault("Action")
  valid_603121 = validateParameter(valid_603121, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_603121 != nil:
    section.add "Action", valid_603121
  var valid_603122 = query.getOrDefault("Version")
  valid_603122 = validateParameter(valid_603122, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603122 != nil:
    section.add "Version", valid_603122
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603123 = header.getOrDefault("X-Amz-Signature")
  valid_603123 = validateParameter(valid_603123, JString, required = false,
                                 default = nil)
  if valid_603123 != nil:
    section.add "X-Amz-Signature", valid_603123
  var valid_603124 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603124 = validateParameter(valid_603124, JString, required = false,
                                 default = nil)
  if valid_603124 != nil:
    section.add "X-Amz-Content-Sha256", valid_603124
  var valid_603125 = header.getOrDefault("X-Amz-Date")
  valid_603125 = validateParameter(valid_603125, JString, required = false,
                                 default = nil)
  if valid_603125 != nil:
    section.add "X-Amz-Date", valid_603125
  var valid_603126 = header.getOrDefault("X-Amz-Credential")
  valid_603126 = validateParameter(valid_603126, JString, required = false,
                                 default = nil)
  if valid_603126 != nil:
    section.add "X-Amz-Credential", valid_603126
  var valid_603127 = header.getOrDefault("X-Amz-Security-Token")
  valid_603127 = validateParameter(valid_603127, JString, required = false,
                                 default = nil)
  if valid_603127 != nil:
    section.add "X-Amz-Security-Token", valid_603127
  var valid_603128 = header.getOrDefault("X-Amz-Algorithm")
  valid_603128 = validateParameter(valid_603128, JString, required = false,
                                 default = nil)
  if valid_603128 != nil:
    section.add "X-Amz-Algorithm", valid_603128
  var valid_603129 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603129 = validateParameter(valid_603129, JString, required = false,
                                 default = nil)
  if valid_603129 != nil:
    section.add "X-Amz-SignedHeaders", valid_603129
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  var valid_603130 = formData.getOrDefault("StackName")
  valid_603130 = validateParameter(valid_603130, JString, required = false,
                                 default = nil)
  if valid_603130 != nil:
    section.add "StackName", valid_603130
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_603131 = formData.getOrDefault("ChangeSetName")
  valid_603131 = validateParameter(valid_603131, JString, required = true,
                                 default = nil)
  if valid_603131 != nil:
    section.add "ChangeSetName", valid_603131
  var valid_603132 = formData.getOrDefault("ClientRequestToken")
  valid_603132 = validateParameter(valid_603132, JString, required = false,
                                 default = nil)
  if valid_603132 != nil:
    section.add "ClientRequestToken", valid_603132
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603133: Call_PostExecuteChangeSet_603118; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_603133.validator(path, query, header, formData, body)
  let scheme = call_603133.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603133.url(scheme.get, call_603133.host, call_603133.base,
                         call_603133.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603133, url, valid)

proc call*(call_603134: Call_PostExecuteChangeSet_603118; ChangeSetName: string;
          StackName: string = ""; ClientRequestToken: string = "";
          Action: string = "ExecuteChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## postExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603135 = newJObject()
  var formData_603136 = newJObject()
  add(formData_603136, "StackName", newJString(StackName))
  add(formData_603136, "ChangeSetName", newJString(ChangeSetName))
  add(formData_603136, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603135, "Action", newJString(Action))
  add(query_603135, "Version", newJString(Version))
  result = call_603134.call(nil, query_603135, nil, formData_603136, nil)

var postExecuteChangeSet* = Call_PostExecuteChangeSet_603118(
    name: "postExecuteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_PostExecuteChangeSet_603119, base: "/",
    url: url_PostExecuteChangeSet_603120, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetExecuteChangeSet_603100 = ref object of OpenApiRestCall_601389
proc url_GetExecuteChangeSet_603102(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetExecuteChangeSet_603101(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Version: JString (required)
  section = newJObject()
  var valid_603103 = query.getOrDefault("StackName")
  valid_603103 = validateParameter(valid_603103, JString, required = false,
                                 default = nil)
  if valid_603103 != nil:
    section.add "StackName", valid_603103
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603104 = query.getOrDefault("Action")
  valid_603104 = validateParameter(valid_603104, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_603104 != nil:
    section.add "Action", valid_603104
  var valid_603105 = query.getOrDefault("ClientRequestToken")
  valid_603105 = validateParameter(valid_603105, JString, required = false,
                                 default = nil)
  if valid_603105 != nil:
    section.add "ClientRequestToken", valid_603105
  var valid_603106 = query.getOrDefault("ChangeSetName")
  valid_603106 = validateParameter(valid_603106, JString, required = true,
                                 default = nil)
  if valid_603106 != nil:
    section.add "ChangeSetName", valid_603106
  var valid_603107 = query.getOrDefault("Version")
  valid_603107 = validateParameter(valid_603107, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603107 != nil:
    section.add "Version", valid_603107
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603108 = header.getOrDefault("X-Amz-Signature")
  valid_603108 = validateParameter(valid_603108, JString, required = false,
                                 default = nil)
  if valid_603108 != nil:
    section.add "X-Amz-Signature", valid_603108
  var valid_603109 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603109 = validateParameter(valid_603109, JString, required = false,
                                 default = nil)
  if valid_603109 != nil:
    section.add "X-Amz-Content-Sha256", valid_603109
  var valid_603110 = header.getOrDefault("X-Amz-Date")
  valid_603110 = validateParameter(valid_603110, JString, required = false,
                                 default = nil)
  if valid_603110 != nil:
    section.add "X-Amz-Date", valid_603110
  var valid_603111 = header.getOrDefault("X-Amz-Credential")
  valid_603111 = validateParameter(valid_603111, JString, required = false,
                                 default = nil)
  if valid_603111 != nil:
    section.add "X-Amz-Credential", valid_603111
  var valid_603112 = header.getOrDefault("X-Amz-Security-Token")
  valid_603112 = validateParameter(valid_603112, JString, required = false,
                                 default = nil)
  if valid_603112 != nil:
    section.add "X-Amz-Security-Token", valid_603112
  var valid_603113 = header.getOrDefault("X-Amz-Algorithm")
  valid_603113 = validateParameter(valid_603113, JString, required = false,
                                 default = nil)
  if valid_603113 != nil:
    section.add "X-Amz-Algorithm", valid_603113
  var valid_603114 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603114 = validateParameter(valid_603114, JString, required = false,
                                 default = nil)
  if valid_603114 != nil:
    section.add "X-Amz-SignedHeaders", valid_603114
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603115: Call_GetExecuteChangeSet_603100; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_603115.validator(path, query, header, formData, body)
  let scheme = call_603115.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603115.url(scheme.get, call_603115.host, call_603115.base,
                         call_603115.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603115, url, valid)

proc call*(call_603116: Call_GetExecuteChangeSet_603100; ChangeSetName: string;
          StackName: string = ""; Action: string = "ExecuteChangeSet";
          ClientRequestToken: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Version: string (required)
  var query_603117 = newJObject()
  add(query_603117, "StackName", newJString(StackName))
  add(query_603117, "Action", newJString(Action))
  add(query_603117, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603117, "ChangeSetName", newJString(ChangeSetName))
  add(query_603117, "Version", newJString(Version))
  result = call_603116.call(nil, query_603117, nil, nil, nil)

var getExecuteChangeSet* = Call_GetExecuteChangeSet_603100(
    name: "getExecuteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_GetExecuteChangeSet_603101, base: "/",
    url: url_GetExecuteChangeSet_603102, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetStackPolicy_603153 = ref object of OpenApiRestCall_601389
proc url_PostGetStackPolicy_603155(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetStackPolicy_603154(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603156 = query.getOrDefault("Action")
  valid_603156 = validateParameter(valid_603156, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_603156 != nil:
    section.add "Action", valid_603156
  var valid_603157 = query.getOrDefault("Version")
  valid_603157 = validateParameter(valid_603157, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603157 != nil:
    section.add "Version", valid_603157
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603158 = header.getOrDefault("X-Amz-Signature")
  valid_603158 = validateParameter(valid_603158, JString, required = false,
                                 default = nil)
  if valid_603158 != nil:
    section.add "X-Amz-Signature", valid_603158
  var valid_603159 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603159 = validateParameter(valid_603159, JString, required = false,
                                 default = nil)
  if valid_603159 != nil:
    section.add "X-Amz-Content-Sha256", valid_603159
  var valid_603160 = header.getOrDefault("X-Amz-Date")
  valid_603160 = validateParameter(valid_603160, JString, required = false,
                                 default = nil)
  if valid_603160 != nil:
    section.add "X-Amz-Date", valid_603160
  var valid_603161 = header.getOrDefault("X-Amz-Credential")
  valid_603161 = validateParameter(valid_603161, JString, required = false,
                                 default = nil)
  if valid_603161 != nil:
    section.add "X-Amz-Credential", valid_603161
  var valid_603162 = header.getOrDefault("X-Amz-Security-Token")
  valid_603162 = validateParameter(valid_603162, JString, required = false,
                                 default = nil)
  if valid_603162 != nil:
    section.add "X-Amz-Security-Token", valid_603162
  var valid_603163 = header.getOrDefault("X-Amz-Algorithm")
  valid_603163 = validateParameter(valid_603163, JString, required = false,
                                 default = nil)
  if valid_603163 != nil:
    section.add "X-Amz-Algorithm", valid_603163
  var valid_603164 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603164 = validateParameter(valid_603164, JString, required = false,
                                 default = nil)
  if valid_603164 != nil:
    section.add "X-Amz-SignedHeaders", valid_603164
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603165 = formData.getOrDefault("StackName")
  valid_603165 = validateParameter(valid_603165, JString, required = true,
                                 default = nil)
  if valid_603165 != nil:
    section.add "StackName", valid_603165
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603166: Call_PostGetStackPolicy_603153; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_603166.validator(path, query, header, formData, body)
  let scheme = call_603166.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603166.url(scheme.get, call_603166.host, call_603166.base,
                         call_603166.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603166, url, valid)

proc call*(call_603167: Call_PostGetStackPolicy_603153; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603168 = newJObject()
  var formData_603169 = newJObject()
  add(formData_603169, "StackName", newJString(StackName))
  add(query_603168, "Action", newJString(Action))
  add(query_603168, "Version", newJString(Version))
  result = call_603167.call(nil, query_603168, nil, formData_603169, nil)

var postGetStackPolicy* = Call_PostGetStackPolicy_603153(
    name: "postGetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetStackPolicy",
    validator: validate_PostGetStackPolicy_603154, base: "/",
    url: url_PostGetStackPolicy_603155, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetStackPolicy_603137 = ref object of OpenApiRestCall_601389
proc url_GetGetStackPolicy_603139(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetStackPolicy_603138(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_603140 = query.getOrDefault("StackName")
  valid_603140 = validateParameter(valid_603140, JString, required = true,
                                 default = nil)
  if valid_603140 != nil:
    section.add "StackName", valid_603140
  var valid_603141 = query.getOrDefault("Action")
  valid_603141 = validateParameter(valid_603141, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_603141 != nil:
    section.add "Action", valid_603141
  var valid_603142 = query.getOrDefault("Version")
  valid_603142 = validateParameter(valid_603142, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603142 != nil:
    section.add "Version", valid_603142
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603143 = header.getOrDefault("X-Amz-Signature")
  valid_603143 = validateParameter(valid_603143, JString, required = false,
                                 default = nil)
  if valid_603143 != nil:
    section.add "X-Amz-Signature", valid_603143
  var valid_603144 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603144 = validateParameter(valid_603144, JString, required = false,
                                 default = nil)
  if valid_603144 != nil:
    section.add "X-Amz-Content-Sha256", valid_603144
  var valid_603145 = header.getOrDefault("X-Amz-Date")
  valid_603145 = validateParameter(valid_603145, JString, required = false,
                                 default = nil)
  if valid_603145 != nil:
    section.add "X-Amz-Date", valid_603145
  var valid_603146 = header.getOrDefault("X-Amz-Credential")
  valid_603146 = validateParameter(valid_603146, JString, required = false,
                                 default = nil)
  if valid_603146 != nil:
    section.add "X-Amz-Credential", valid_603146
  var valid_603147 = header.getOrDefault("X-Amz-Security-Token")
  valid_603147 = validateParameter(valid_603147, JString, required = false,
                                 default = nil)
  if valid_603147 != nil:
    section.add "X-Amz-Security-Token", valid_603147
  var valid_603148 = header.getOrDefault("X-Amz-Algorithm")
  valid_603148 = validateParameter(valid_603148, JString, required = false,
                                 default = nil)
  if valid_603148 != nil:
    section.add "X-Amz-Algorithm", valid_603148
  var valid_603149 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603149 = validateParameter(valid_603149, JString, required = false,
                                 default = nil)
  if valid_603149 != nil:
    section.add "X-Amz-SignedHeaders", valid_603149
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603150: Call_GetGetStackPolicy_603137; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_603150.validator(path, query, header, formData, body)
  let scheme = call_603150.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603150.url(scheme.get, call_603150.host, call_603150.base,
                         call_603150.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603150, url, valid)

proc call*(call_603151: Call_GetGetStackPolicy_603137; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603152 = newJObject()
  add(query_603152, "StackName", newJString(StackName))
  add(query_603152, "Action", newJString(Action))
  add(query_603152, "Version", newJString(Version))
  result = call_603151.call(nil, query_603152, nil, nil, nil)

var getGetStackPolicy* = Call_GetGetStackPolicy_603137(name: "getGetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetStackPolicy", validator: validate_GetGetStackPolicy_603138,
    base: "/", url: url_GetGetStackPolicy_603139,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplate_603188 = ref object of OpenApiRestCall_601389
proc url_PostGetTemplate_603190(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplate_603189(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603191 = query.getOrDefault("Action")
  valid_603191 = validateParameter(valid_603191, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_603191 != nil:
    section.add "Action", valid_603191
  var valid_603192 = query.getOrDefault("Version")
  valid_603192 = validateParameter(valid_603192, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603192 != nil:
    section.add "Version", valid_603192
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603193 = header.getOrDefault("X-Amz-Signature")
  valid_603193 = validateParameter(valid_603193, JString, required = false,
                                 default = nil)
  if valid_603193 != nil:
    section.add "X-Amz-Signature", valid_603193
  var valid_603194 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603194 = validateParameter(valid_603194, JString, required = false,
                                 default = nil)
  if valid_603194 != nil:
    section.add "X-Amz-Content-Sha256", valid_603194
  var valid_603195 = header.getOrDefault("X-Amz-Date")
  valid_603195 = validateParameter(valid_603195, JString, required = false,
                                 default = nil)
  if valid_603195 != nil:
    section.add "X-Amz-Date", valid_603195
  var valid_603196 = header.getOrDefault("X-Amz-Credential")
  valid_603196 = validateParameter(valid_603196, JString, required = false,
                                 default = nil)
  if valid_603196 != nil:
    section.add "X-Amz-Credential", valid_603196
  var valid_603197 = header.getOrDefault("X-Amz-Security-Token")
  valid_603197 = validateParameter(valid_603197, JString, required = false,
                                 default = nil)
  if valid_603197 != nil:
    section.add "X-Amz-Security-Token", valid_603197
  var valid_603198 = header.getOrDefault("X-Amz-Algorithm")
  valid_603198 = validateParameter(valid_603198, JString, required = false,
                                 default = nil)
  if valid_603198 != nil:
    section.add "X-Amz-Algorithm", valid_603198
  var valid_603199 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603199 = validateParameter(valid_603199, JString, required = false,
                                 default = nil)
  if valid_603199 != nil:
    section.add "X-Amz-SignedHeaders", valid_603199
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  section = newJObject()
  var valid_603200 = formData.getOrDefault("StackName")
  valid_603200 = validateParameter(valid_603200, JString, required = false,
                                 default = nil)
  if valid_603200 != nil:
    section.add "StackName", valid_603200
  var valid_603201 = formData.getOrDefault("ChangeSetName")
  valid_603201 = validateParameter(valid_603201, JString, required = false,
                                 default = nil)
  if valid_603201 != nil:
    section.add "ChangeSetName", valid_603201
  var valid_603202 = formData.getOrDefault("TemplateStage")
  valid_603202 = validateParameter(valid_603202, JString, required = false,
                                 default = newJString("Original"))
  if valid_603202 != nil:
    section.add "TemplateStage", valid_603202
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603203: Call_PostGetTemplate_603188; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_603203.validator(path, query, header, formData, body)
  let scheme = call_603203.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603203.url(scheme.get, call_603203.host, call_603203.base,
                         call_603203.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603203, url, valid)

proc call*(call_603204: Call_PostGetTemplate_603188; StackName: string = "";
          ChangeSetName: string = ""; Action: string = "GetTemplate";
          TemplateStage: string = "Original"; Version: string = "2010-05-15"): Recallable =
  ## postGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Action: string (required)
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Version: string (required)
  var query_603205 = newJObject()
  var formData_603206 = newJObject()
  add(formData_603206, "StackName", newJString(StackName))
  add(formData_603206, "ChangeSetName", newJString(ChangeSetName))
  add(query_603205, "Action", newJString(Action))
  add(formData_603206, "TemplateStage", newJString(TemplateStage))
  add(query_603205, "Version", newJString(Version))
  result = call_603204.call(nil, query_603205, nil, formData_603206, nil)

var postGetTemplate* = Call_PostGetTemplate_603188(name: "postGetTemplate",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_PostGetTemplate_603189,
    base: "/", url: url_PostGetTemplate_603190, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplate_603170 = ref object of OpenApiRestCall_601389
proc url_GetGetTemplate_603172(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplate_603171(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: JString (required)
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Version: JString (required)
  section = newJObject()
  var valid_603173 = query.getOrDefault("StackName")
  valid_603173 = validateParameter(valid_603173, JString, required = false,
                                 default = nil)
  if valid_603173 != nil:
    section.add "StackName", valid_603173
  var valid_603174 = query.getOrDefault("TemplateStage")
  valid_603174 = validateParameter(valid_603174, JString, required = false,
                                 default = newJString("Original"))
  if valid_603174 != nil:
    section.add "TemplateStage", valid_603174
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603175 = query.getOrDefault("Action")
  valid_603175 = validateParameter(valid_603175, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_603175 != nil:
    section.add "Action", valid_603175
  var valid_603176 = query.getOrDefault("ChangeSetName")
  valid_603176 = validateParameter(valid_603176, JString, required = false,
                                 default = nil)
  if valid_603176 != nil:
    section.add "ChangeSetName", valid_603176
  var valid_603177 = query.getOrDefault("Version")
  valid_603177 = validateParameter(valid_603177, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603177 != nil:
    section.add "Version", valid_603177
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603178 = header.getOrDefault("X-Amz-Signature")
  valid_603178 = validateParameter(valid_603178, JString, required = false,
                                 default = nil)
  if valid_603178 != nil:
    section.add "X-Amz-Signature", valid_603178
  var valid_603179 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603179 = validateParameter(valid_603179, JString, required = false,
                                 default = nil)
  if valid_603179 != nil:
    section.add "X-Amz-Content-Sha256", valid_603179
  var valid_603180 = header.getOrDefault("X-Amz-Date")
  valid_603180 = validateParameter(valid_603180, JString, required = false,
                                 default = nil)
  if valid_603180 != nil:
    section.add "X-Amz-Date", valid_603180
  var valid_603181 = header.getOrDefault("X-Amz-Credential")
  valid_603181 = validateParameter(valid_603181, JString, required = false,
                                 default = nil)
  if valid_603181 != nil:
    section.add "X-Amz-Credential", valid_603181
  var valid_603182 = header.getOrDefault("X-Amz-Security-Token")
  valid_603182 = validateParameter(valid_603182, JString, required = false,
                                 default = nil)
  if valid_603182 != nil:
    section.add "X-Amz-Security-Token", valid_603182
  var valid_603183 = header.getOrDefault("X-Amz-Algorithm")
  valid_603183 = validateParameter(valid_603183, JString, required = false,
                                 default = nil)
  if valid_603183 != nil:
    section.add "X-Amz-Algorithm", valid_603183
  var valid_603184 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603184 = validateParameter(valid_603184, JString, required = false,
                                 default = nil)
  if valid_603184 != nil:
    section.add "X-Amz-SignedHeaders", valid_603184
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603185: Call_GetGetTemplate_603170; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_603185.validator(path, query, header, formData, body)
  let scheme = call_603185.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603185.url(scheme.get, call_603185.host, call_603185.base,
                         call_603185.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603185, url, valid)

proc call*(call_603186: Call_GetGetTemplate_603170; StackName: string = "";
          TemplateStage: string = "Original"; Action: string = "GetTemplate";
          ChangeSetName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: string (required)
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Version: string (required)
  var query_603187 = newJObject()
  add(query_603187, "StackName", newJString(StackName))
  add(query_603187, "TemplateStage", newJString(TemplateStage))
  add(query_603187, "Action", newJString(Action))
  add(query_603187, "ChangeSetName", newJString(ChangeSetName))
  add(query_603187, "Version", newJString(Version))
  result = call_603186.call(nil, query_603187, nil, nil, nil)

var getGetTemplate* = Call_GetGetTemplate_603170(name: "getGetTemplate",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_GetGetTemplate_603171,
    base: "/", url: url_GetGetTemplate_603172, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplateSummary_603226 = ref object of OpenApiRestCall_601389
proc url_PostGetTemplateSummary_603228(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplateSummary_603227(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603229 = query.getOrDefault("Action")
  valid_603229 = validateParameter(valid_603229, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_603229 != nil:
    section.add "Action", valid_603229
  var valid_603230 = query.getOrDefault("Version")
  valid_603230 = validateParameter(valid_603230, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603230 != nil:
    section.add "Version", valid_603230
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603231 = header.getOrDefault("X-Amz-Signature")
  valid_603231 = validateParameter(valid_603231, JString, required = false,
                                 default = nil)
  if valid_603231 != nil:
    section.add "X-Amz-Signature", valid_603231
  var valid_603232 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603232 = validateParameter(valid_603232, JString, required = false,
                                 default = nil)
  if valid_603232 != nil:
    section.add "X-Amz-Content-Sha256", valid_603232
  var valid_603233 = header.getOrDefault("X-Amz-Date")
  valid_603233 = validateParameter(valid_603233, JString, required = false,
                                 default = nil)
  if valid_603233 != nil:
    section.add "X-Amz-Date", valid_603233
  var valid_603234 = header.getOrDefault("X-Amz-Credential")
  valid_603234 = validateParameter(valid_603234, JString, required = false,
                                 default = nil)
  if valid_603234 != nil:
    section.add "X-Amz-Credential", valid_603234
  var valid_603235 = header.getOrDefault("X-Amz-Security-Token")
  valid_603235 = validateParameter(valid_603235, JString, required = false,
                                 default = nil)
  if valid_603235 != nil:
    section.add "X-Amz-Security-Token", valid_603235
  var valid_603236 = header.getOrDefault("X-Amz-Algorithm")
  valid_603236 = validateParameter(valid_603236, JString, required = false,
                                 default = nil)
  if valid_603236 != nil:
    section.add "X-Amz-Algorithm", valid_603236
  var valid_603237 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603237 = validateParameter(valid_603237, JString, required = false,
                                 default = nil)
  if valid_603237 != nil:
    section.add "X-Amz-SignedHeaders", valid_603237
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  section = newJObject()
  var valid_603238 = formData.getOrDefault("StackName")
  valid_603238 = validateParameter(valid_603238, JString, required = false,
                                 default = nil)
  if valid_603238 != nil:
    section.add "StackName", valid_603238
  var valid_603239 = formData.getOrDefault("StackSetName")
  valid_603239 = validateParameter(valid_603239, JString, required = false,
                                 default = nil)
  if valid_603239 != nil:
    section.add "StackSetName", valid_603239
  var valid_603240 = formData.getOrDefault("TemplateURL")
  valid_603240 = validateParameter(valid_603240, JString, required = false,
                                 default = nil)
  if valid_603240 != nil:
    section.add "TemplateURL", valid_603240
  var valid_603241 = formData.getOrDefault("TemplateBody")
  valid_603241 = validateParameter(valid_603241, JString, required = false,
                                 default = nil)
  if valid_603241 != nil:
    section.add "TemplateBody", valid_603241
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603242: Call_PostGetTemplateSummary_603226; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_603242.validator(path, query, header, formData, body)
  let scheme = call_603242.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603242.url(scheme.get, call_603242.host, call_603242.base,
                         call_603242.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603242, url, valid)

proc call*(call_603243: Call_PostGetTemplateSummary_603226; StackName: string = "";
          StackSetName: string = ""; TemplateURL: string = "";
          TemplateBody: string = ""; Action: string = "GetTemplateSummary";
          Version: string = "2010-05-15"): Recallable =
  ## postGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603244 = newJObject()
  var formData_603245 = newJObject()
  add(formData_603245, "StackName", newJString(StackName))
  add(formData_603245, "StackSetName", newJString(StackSetName))
  add(formData_603245, "TemplateURL", newJString(TemplateURL))
  add(formData_603245, "TemplateBody", newJString(TemplateBody))
  add(query_603244, "Action", newJString(Action))
  add(query_603244, "Version", newJString(Version))
  result = call_603243.call(nil, query_603244, nil, formData_603245, nil)

var postGetTemplateSummary* = Call_PostGetTemplateSummary_603226(
    name: "postGetTemplateSummary", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_PostGetTemplateSummary_603227, base: "/",
    url: url_PostGetTemplateSummary_603228, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplateSummary_603207 = ref object of OpenApiRestCall_601389
proc url_GetGetTemplateSummary_603209(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplateSummary_603208(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_603210 = query.getOrDefault("StackSetName")
  valid_603210 = validateParameter(valid_603210, JString, required = false,
                                 default = nil)
  if valid_603210 != nil:
    section.add "StackSetName", valid_603210
  var valid_603211 = query.getOrDefault("StackName")
  valid_603211 = validateParameter(valid_603211, JString, required = false,
                                 default = nil)
  if valid_603211 != nil:
    section.add "StackName", valid_603211
  var valid_603212 = query.getOrDefault("TemplateBody")
  valid_603212 = validateParameter(valid_603212, JString, required = false,
                                 default = nil)
  if valid_603212 != nil:
    section.add "TemplateBody", valid_603212
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603213 = query.getOrDefault("Action")
  valid_603213 = validateParameter(valid_603213, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_603213 != nil:
    section.add "Action", valid_603213
  var valid_603214 = query.getOrDefault("TemplateURL")
  valid_603214 = validateParameter(valid_603214, JString, required = false,
                                 default = nil)
  if valid_603214 != nil:
    section.add "TemplateURL", valid_603214
  var valid_603215 = query.getOrDefault("Version")
  valid_603215 = validateParameter(valid_603215, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603215 != nil:
    section.add "Version", valid_603215
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603216 = header.getOrDefault("X-Amz-Signature")
  valid_603216 = validateParameter(valid_603216, JString, required = false,
                                 default = nil)
  if valid_603216 != nil:
    section.add "X-Amz-Signature", valid_603216
  var valid_603217 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603217 = validateParameter(valid_603217, JString, required = false,
                                 default = nil)
  if valid_603217 != nil:
    section.add "X-Amz-Content-Sha256", valid_603217
  var valid_603218 = header.getOrDefault("X-Amz-Date")
  valid_603218 = validateParameter(valid_603218, JString, required = false,
                                 default = nil)
  if valid_603218 != nil:
    section.add "X-Amz-Date", valid_603218
  var valid_603219 = header.getOrDefault("X-Amz-Credential")
  valid_603219 = validateParameter(valid_603219, JString, required = false,
                                 default = nil)
  if valid_603219 != nil:
    section.add "X-Amz-Credential", valid_603219
  var valid_603220 = header.getOrDefault("X-Amz-Security-Token")
  valid_603220 = validateParameter(valid_603220, JString, required = false,
                                 default = nil)
  if valid_603220 != nil:
    section.add "X-Amz-Security-Token", valid_603220
  var valid_603221 = header.getOrDefault("X-Amz-Algorithm")
  valid_603221 = validateParameter(valid_603221, JString, required = false,
                                 default = nil)
  if valid_603221 != nil:
    section.add "X-Amz-Algorithm", valid_603221
  var valid_603222 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603222 = validateParameter(valid_603222, JString, required = false,
                                 default = nil)
  if valid_603222 != nil:
    section.add "X-Amz-SignedHeaders", valid_603222
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603223: Call_GetGetTemplateSummary_603207; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_603223.validator(path, query, header, formData, body)
  let scheme = call_603223.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603223.url(scheme.get, call_603223.host, call_603223.base,
                         call_603223.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603223, url, valid)

proc call*(call_603224: Call_GetGetTemplateSummary_603207;
          StackSetName: string = ""; StackName: string = ""; TemplateBody: string = "";
          Action: string = "GetTemplateSummary"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  var query_603225 = newJObject()
  add(query_603225, "StackSetName", newJString(StackSetName))
  add(query_603225, "StackName", newJString(StackName))
  add(query_603225, "TemplateBody", newJString(TemplateBody))
  add(query_603225, "Action", newJString(Action))
  add(query_603225, "TemplateURL", newJString(TemplateURL))
  add(query_603225, "Version", newJString(Version))
  result = call_603224.call(nil, query_603225, nil, nil, nil)

var getGetTemplateSummary* = Call_GetGetTemplateSummary_603207(
    name: "getGetTemplateSummary", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_GetGetTemplateSummary_603208, base: "/",
    url: url_GetGetTemplateSummary_603209, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListChangeSets_603263 = ref object of OpenApiRestCall_601389
proc url_PostListChangeSets_603265(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListChangeSets_603264(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603266 = query.getOrDefault("Action")
  valid_603266 = validateParameter(valid_603266, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_603266 != nil:
    section.add "Action", valid_603266
  var valid_603267 = query.getOrDefault("Version")
  valid_603267 = validateParameter(valid_603267, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603267 != nil:
    section.add "Version", valid_603267
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603268 = header.getOrDefault("X-Amz-Signature")
  valid_603268 = validateParameter(valid_603268, JString, required = false,
                                 default = nil)
  if valid_603268 != nil:
    section.add "X-Amz-Signature", valid_603268
  var valid_603269 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603269 = validateParameter(valid_603269, JString, required = false,
                                 default = nil)
  if valid_603269 != nil:
    section.add "X-Amz-Content-Sha256", valid_603269
  var valid_603270 = header.getOrDefault("X-Amz-Date")
  valid_603270 = validateParameter(valid_603270, JString, required = false,
                                 default = nil)
  if valid_603270 != nil:
    section.add "X-Amz-Date", valid_603270
  var valid_603271 = header.getOrDefault("X-Amz-Credential")
  valid_603271 = validateParameter(valid_603271, JString, required = false,
                                 default = nil)
  if valid_603271 != nil:
    section.add "X-Amz-Credential", valid_603271
  var valid_603272 = header.getOrDefault("X-Amz-Security-Token")
  valid_603272 = validateParameter(valid_603272, JString, required = false,
                                 default = nil)
  if valid_603272 != nil:
    section.add "X-Amz-Security-Token", valid_603272
  var valid_603273 = header.getOrDefault("X-Amz-Algorithm")
  valid_603273 = validateParameter(valid_603273, JString, required = false,
                                 default = nil)
  if valid_603273 != nil:
    section.add "X-Amz-Algorithm", valid_603273
  var valid_603274 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603274 = validateParameter(valid_603274, JString, required = false,
                                 default = nil)
  if valid_603274 != nil:
    section.add "X-Amz-SignedHeaders", valid_603274
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603275 = formData.getOrDefault("StackName")
  valid_603275 = validateParameter(valid_603275, JString, required = true,
                                 default = nil)
  if valid_603275 != nil:
    section.add "StackName", valid_603275
  var valid_603276 = formData.getOrDefault("NextToken")
  valid_603276 = validateParameter(valid_603276, JString, required = false,
                                 default = nil)
  if valid_603276 != nil:
    section.add "NextToken", valid_603276
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603277: Call_PostListChangeSets_603263; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_603277.validator(path, query, header, formData, body)
  let scheme = call_603277.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603277.url(scheme.get, call_603277.host, call_603277.base,
                         call_603277.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603277, url, valid)

proc call*(call_603278: Call_PostListChangeSets_603263; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## postListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603279 = newJObject()
  var formData_603280 = newJObject()
  add(formData_603280, "StackName", newJString(StackName))
  add(formData_603280, "NextToken", newJString(NextToken))
  add(query_603279, "Action", newJString(Action))
  add(query_603279, "Version", newJString(Version))
  result = call_603278.call(nil, query_603279, nil, formData_603280, nil)

var postListChangeSets* = Call_PostListChangeSets_603263(
    name: "postListChangeSets", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListChangeSets",
    validator: validate_PostListChangeSets_603264, base: "/",
    url: url_PostListChangeSets_603265, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListChangeSets_603246 = ref object of OpenApiRestCall_601389
proc url_GetListChangeSets_603248(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListChangeSets_603247(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603249 = query.getOrDefault("NextToken")
  valid_603249 = validateParameter(valid_603249, JString, required = false,
                                 default = nil)
  if valid_603249 != nil:
    section.add "NextToken", valid_603249
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_603250 = query.getOrDefault("StackName")
  valid_603250 = validateParameter(valid_603250, JString, required = true,
                                 default = nil)
  if valid_603250 != nil:
    section.add "StackName", valid_603250
  var valid_603251 = query.getOrDefault("Action")
  valid_603251 = validateParameter(valid_603251, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_603251 != nil:
    section.add "Action", valid_603251
  var valid_603252 = query.getOrDefault("Version")
  valid_603252 = validateParameter(valid_603252, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603252 != nil:
    section.add "Version", valid_603252
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603253 = header.getOrDefault("X-Amz-Signature")
  valid_603253 = validateParameter(valid_603253, JString, required = false,
                                 default = nil)
  if valid_603253 != nil:
    section.add "X-Amz-Signature", valid_603253
  var valid_603254 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603254 = validateParameter(valid_603254, JString, required = false,
                                 default = nil)
  if valid_603254 != nil:
    section.add "X-Amz-Content-Sha256", valid_603254
  var valid_603255 = header.getOrDefault("X-Amz-Date")
  valid_603255 = validateParameter(valid_603255, JString, required = false,
                                 default = nil)
  if valid_603255 != nil:
    section.add "X-Amz-Date", valid_603255
  var valid_603256 = header.getOrDefault("X-Amz-Credential")
  valid_603256 = validateParameter(valid_603256, JString, required = false,
                                 default = nil)
  if valid_603256 != nil:
    section.add "X-Amz-Credential", valid_603256
  var valid_603257 = header.getOrDefault("X-Amz-Security-Token")
  valid_603257 = validateParameter(valid_603257, JString, required = false,
                                 default = nil)
  if valid_603257 != nil:
    section.add "X-Amz-Security-Token", valid_603257
  var valid_603258 = header.getOrDefault("X-Amz-Algorithm")
  valid_603258 = validateParameter(valid_603258, JString, required = false,
                                 default = nil)
  if valid_603258 != nil:
    section.add "X-Amz-Algorithm", valid_603258
  var valid_603259 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603259 = validateParameter(valid_603259, JString, required = false,
                                 default = nil)
  if valid_603259 != nil:
    section.add "X-Amz-SignedHeaders", valid_603259
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603260: Call_GetListChangeSets_603246; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_603260.validator(path, query, header, formData, body)
  let scheme = call_603260.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603260.url(scheme.get, call_603260.host, call_603260.base,
                         call_603260.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603260, url, valid)

proc call*(call_603261: Call_GetListChangeSets_603246; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## getListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603262 = newJObject()
  add(query_603262, "NextToken", newJString(NextToken))
  add(query_603262, "StackName", newJString(StackName))
  add(query_603262, "Action", newJString(Action))
  add(query_603262, "Version", newJString(Version))
  result = call_603261.call(nil, query_603262, nil, nil, nil)

var getListChangeSets* = Call_GetListChangeSets_603246(name: "getListChangeSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListChangeSets", validator: validate_GetListChangeSets_603247,
    base: "/", url: url_GetListChangeSets_603248,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListExports_603297 = ref object of OpenApiRestCall_601389
proc url_PostListExports_603299(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListExports_603298(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603300 = query.getOrDefault("Action")
  valid_603300 = validateParameter(valid_603300, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_603300 != nil:
    section.add "Action", valid_603300
  var valid_603301 = query.getOrDefault("Version")
  valid_603301 = validateParameter(valid_603301, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603301 != nil:
    section.add "Version", valid_603301
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603302 = header.getOrDefault("X-Amz-Signature")
  valid_603302 = validateParameter(valid_603302, JString, required = false,
                                 default = nil)
  if valid_603302 != nil:
    section.add "X-Amz-Signature", valid_603302
  var valid_603303 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603303 = validateParameter(valid_603303, JString, required = false,
                                 default = nil)
  if valid_603303 != nil:
    section.add "X-Amz-Content-Sha256", valid_603303
  var valid_603304 = header.getOrDefault("X-Amz-Date")
  valid_603304 = validateParameter(valid_603304, JString, required = false,
                                 default = nil)
  if valid_603304 != nil:
    section.add "X-Amz-Date", valid_603304
  var valid_603305 = header.getOrDefault("X-Amz-Credential")
  valid_603305 = validateParameter(valid_603305, JString, required = false,
                                 default = nil)
  if valid_603305 != nil:
    section.add "X-Amz-Credential", valid_603305
  var valid_603306 = header.getOrDefault("X-Amz-Security-Token")
  valid_603306 = validateParameter(valid_603306, JString, required = false,
                                 default = nil)
  if valid_603306 != nil:
    section.add "X-Amz-Security-Token", valid_603306
  var valid_603307 = header.getOrDefault("X-Amz-Algorithm")
  valid_603307 = validateParameter(valid_603307, JString, required = false,
                                 default = nil)
  if valid_603307 != nil:
    section.add "X-Amz-Algorithm", valid_603307
  var valid_603308 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603308 = validateParameter(valid_603308, JString, required = false,
                                 default = nil)
  if valid_603308 != nil:
    section.add "X-Amz-SignedHeaders", valid_603308
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  section = newJObject()
  var valid_603309 = formData.getOrDefault("NextToken")
  valid_603309 = validateParameter(valid_603309, JString, required = false,
                                 default = nil)
  if valid_603309 != nil:
    section.add "NextToken", valid_603309
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603310: Call_PostListExports_603297; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_603310.validator(path, query, header, formData, body)
  let scheme = call_603310.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603310.url(scheme.get, call_603310.host, call_603310.base,
                         call_603310.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603310, url, valid)

proc call*(call_603311: Call_PostListExports_603297; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## postListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603312 = newJObject()
  var formData_603313 = newJObject()
  add(formData_603313, "NextToken", newJString(NextToken))
  add(query_603312, "Action", newJString(Action))
  add(query_603312, "Version", newJString(Version))
  result = call_603311.call(nil, query_603312, nil, formData_603313, nil)

var postListExports* = Call_PostListExports_603297(name: "postListExports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_PostListExports_603298,
    base: "/", url: url_PostListExports_603299, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListExports_603281 = ref object of OpenApiRestCall_601389
proc url_GetListExports_603283(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListExports_603282(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603284 = query.getOrDefault("NextToken")
  valid_603284 = validateParameter(valid_603284, JString, required = false,
                                 default = nil)
  if valid_603284 != nil:
    section.add "NextToken", valid_603284
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603285 = query.getOrDefault("Action")
  valid_603285 = validateParameter(valid_603285, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_603285 != nil:
    section.add "Action", valid_603285
  var valid_603286 = query.getOrDefault("Version")
  valid_603286 = validateParameter(valid_603286, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603286 != nil:
    section.add "Version", valid_603286
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603287 = header.getOrDefault("X-Amz-Signature")
  valid_603287 = validateParameter(valid_603287, JString, required = false,
                                 default = nil)
  if valid_603287 != nil:
    section.add "X-Amz-Signature", valid_603287
  var valid_603288 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603288 = validateParameter(valid_603288, JString, required = false,
                                 default = nil)
  if valid_603288 != nil:
    section.add "X-Amz-Content-Sha256", valid_603288
  var valid_603289 = header.getOrDefault("X-Amz-Date")
  valid_603289 = validateParameter(valid_603289, JString, required = false,
                                 default = nil)
  if valid_603289 != nil:
    section.add "X-Amz-Date", valid_603289
  var valid_603290 = header.getOrDefault("X-Amz-Credential")
  valid_603290 = validateParameter(valid_603290, JString, required = false,
                                 default = nil)
  if valid_603290 != nil:
    section.add "X-Amz-Credential", valid_603290
  var valid_603291 = header.getOrDefault("X-Amz-Security-Token")
  valid_603291 = validateParameter(valid_603291, JString, required = false,
                                 default = nil)
  if valid_603291 != nil:
    section.add "X-Amz-Security-Token", valid_603291
  var valid_603292 = header.getOrDefault("X-Amz-Algorithm")
  valid_603292 = validateParameter(valid_603292, JString, required = false,
                                 default = nil)
  if valid_603292 != nil:
    section.add "X-Amz-Algorithm", valid_603292
  var valid_603293 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603293 = validateParameter(valid_603293, JString, required = false,
                                 default = nil)
  if valid_603293 != nil:
    section.add "X-Amz-SignedHeaders", valid_603293
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603294: Call_GetListExports_603281; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_603294.validator(path, query, header, formData, body)
  let scheme = call_603294.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603294.url(scheme.get, call_603294.host, call_603294.base,
                         call_603294.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603294, url, valid)

proc call*(call_603295: Call_GetListExports_603281; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## getListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603296 = newJObject()
  add(query_603296, "NextToken", newJString(NextToken))
  add(query_603296, "Action", newJString(Action))
  add(query_603296, "Version", newJString(Version))
  result = call_603295.call(nil, query_603296, nil, nil, nil)

var getListExports* = Call_GetListExports_603281(name: "getListExports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_GetListExports_603282,
    base: "/", url: url_GetListExports_603283, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListImports_603331 = ref object of OpenApiRestCall_601389
proc url_PostListImports_603333(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListImports_603332(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603334 = query.getOrDefault("Action")
  valid_603334 = validateParameter(valid_603334, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_603334 != nil:
    section.add "Action", valid_603334
  var valid_603335 = query.getOrDefault("Version")
  valid_603335 = validateParameter(valid_603335, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603335 != nil:
    section.add "Version", valid_603335
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603336 = header.getOrDefault("X-Amz-Signature")
  valid_603336 = validateParameter(valid_603336, JString, required = false,
                                 default = nil)
  if valid_603336 != nil:
    section.add "X-Amz-Signature", valid_603336
  var valid_603337 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603337 = validateParameter(valid_603337, JString, required = false,
                                 default = nil)
  if valid_603337 != nil:
    section.add "X-Amz-Content-Sha256", valid_603337
  var valid_603338 = header.getOrDefault("X-Amz-Date")
  valid_603338 = validateParameter(valid_603338, JString, required = false,
                                 default = nil)
  if valid_603338 != nil:
    section.add "X-Amz-Date", valid_603338
  var valid_603339 = header.getOrDefault("X-Amz-Credential")
  valid_603339 = validateParameter(valid_603339, JString, required = false,
                                 default = nil)
  if valid_603339 != nil:
    section.add "X-Amz-Credential", valid_603339
  var valid_603340 = header.getOrDefault("X-Amz-Security-Token")
  valid_603340 = validateParameter(valid_603340, JString, required = false,
                                 default = nil)
  if valid_603340 != nil:
    section.add "X-Amz-Security-Token", valid_603340
  var valid_603341 = header.getOrDefault("X-Amz-Algorithm")
  valid_603341 = validateParameter(valid_603341, JString, required = false,
                                 default = nil)
  if valid_603341 != nil:
    section.add "X-Amz-Algorithm", valid_603341
  var valid_603342 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603342 = validateParameter(valid_603342, JString, required = false,
                                 default = nil)
  if valid_603342 != nil:
    section.add "X-Amz-SignedHeaders", valid_603342
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  section = newJObject()
  var valid_603343 = formData.getOrDefault("NextToken")
  valid_603343 = validateParameter(valid_603343, JString, required = false,
                                 default = nil)
  if valid_603343 != nil:
    section.add "NextToken", valid_603343
  assert formData != nil,
        "formData argument is necessary due to required `ExportName` field"
  var valid_603344 = formData.getOrDefault("ExportName")
  valid_603344 = validateParameter(valid_603344, JString, required = true,
                                 default = nil)
  if valid_603344 != nil:
    section.add "ExportName", valid_603344
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603345: Call_PostListImports_603331; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_603345.validator(path, query, header, formData, body)
  let scheme = call_603345.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603345.url(scheme.get, call_603345.host, call_603345.base,
                         call_603345.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603345, url, valid)

proc call*(call_603346: Call_PostListImports_603331; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## postListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: string (required)
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: string (required)
  var query_603347 = newJObject()
  var formData_603348 = newJObject()
  add(formData_603348, "NextToken", newJString(NextToken))
  add(query_603347, "Action", newJString(Action))
  add(formData_603348, "ExportName", newJString(ExportName))
  add(query_603347, "Version", newJString(Version))
  result = call_603346.call(nil, query_603347, nil, formData_603348, nil)

var postListImports* = Call_PostListImports_603331(name: "postListImports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_PostListImports_603332,
    base: "/", url: url_PostListImports_603333, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListImports_603314 = ref object of OpenApiRestCall_601389
proc url_GetListImports_603316(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListImports_603315(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603317 = query.getOrDefault("NextToken")
  valid_603317 = validateParameter(valid_603317, JString, required = false,
                                 default = nil)
  if valid_603317 != nil:
    section.add "NextToken", valid_603317
  assert query != nil,
        "query argument is necessary due to required `ExportName` field"
  var valid_603318 = query.getOrDefault("ExportName")
  valid_603318 = validateParameter(valid_603318, JString, required = true,
                                 default = nil)
  if valid_603318 != nil:
    section.add "ExportName", valid_603318
  var valid_603319 = query.getOrDefault("Action")
  valid_603319 = validateParameter(valid_603319, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_603319 != nil:
    section.add "Action", valid_603319
  var valid_603320 = query.getOrDefault("Version")
  valid_603320 = validateParameter(valid_603320, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603320 != nil:
    section.add "Version", valid_603320
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603321 = header.getOrDefault("X-Amz-Signature")
  valid_603321 = validateParameter(valid_603321, JString, required = false,
                                 default = nil)
  if valid_603321 != nil:
    section.add "X-Amz-Signature", valid_603321
  var valid_603322 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603322 = validateParameter(valid_603322, JString, required = false,
                                 default = nil)
  if valid_603322 != nil:
    section.add "X-Amz-Content-Sha256", valid_603322
  var valid_603323 = header.getOrDefault("X-Amz-Date")
  valid_603323 = validateParameter(valid_603323, JString, required = false,
                                 default = nil)
  if valid_603323 != nil:
    section.add "X-Amz-Date", valid_603323
  var valid_603324 = header.getOrDefault("X-Amz-Credential")
  valid_603324 = validateParameter(valid_603324, JString, required = false,
                                 default = nil)
  if valid_603324 != nil:
    section.add "X-Amz-Credential", valid_603324
  var valid_603325 = header.getOrDefault("X-Amz-Security-Token")
  valid_603325 = validateParameter(valid_603325, JString, required = false,
                                 default = nil)
  if valid_603325 != nil:
    section.add "X-Amz-Security-Token", valid_603325
  var valid_603326 = header.getOrDefault("X-Amz-Algorithm")
  valid_603326 = validateParameter(valid_603326, JString, required = false,
                                 default = nil)
  if valid_603326 != nil:
    section.add "X-Amz-Algorithm", valid_603326
  var valid_603327 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603327 = validateParameter(valid_603327, JString, required = false,
                                 default = nil)
  if valid_603327 != nil:
    section.add "X-Amz-SignedHeaders", valid_603327
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603328: Call_GetListImports_603314; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_603328.validator(path, query, header, formData, body)
  let scheme = call_603328.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603328.url(scheme.get, call_603328.host, call_603328.base,
                         call_603328.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603328, url, valid)

proc call*(call_603329: Call_GetListImports_603314; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## getListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603330 = newJObject()
  add(query_603330, "NextToken", newJString(NextToken))
  add(query_603330, "ExportName", newJString(ExportName))
  add(query_603330, "Action", newJString(Action))
  add(query_603330, "Version", newJString(Version))
  result = call_603329.call(nil, query_603330, nil, nil, nil)

var getListImports* = Call_GetListImports_603314(name: "getListImports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_GetListImports_603315,
    base: "/", url: url_GetListImports_603316, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackInstances_603369 = ref object of OpenApiRestCall_601389
proc url_PostListStackInstances_603371(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackInstances_603370(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603372 = query.getOrDefault("Action")
  valid_603372 = validateParameter(valid_603372, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_603372 != nil:
    section.add "Action", valid_603372
  var valid_603373 = query.getOrDefault("Version")
  valid_603373 = validateParameter(valid_603373, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603373 != nil:
    section.add "Version", valid_603373
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603374 = header.getOrDefault("X-Amz-Signature")
  valid_603374 = validateParameter(valid_603374, JString, required = false,
                                 default = nil)
  if valid_603374 != nil:
    section.add "X-Amz-Signature", valid_603374
  var valid_603375 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603375 = validateParameter(valid_603375, JString, required = false,
                                 default = nil)
  if valid_603375 != nil:
    section.add "X-Amz-Content-Sha256", valid_603375
  var valid_603376 = header.getOrDefault("X-Amz-Date")
  valid_603376 = validateParameter(valid_603376, JString, required = false,
                                 default = nil)
  if valid_603376 != nil:
    section.add "X-Amz-Date", valid_603376
  var valid_603377 = header.getOrDefault("X-Amz-Credential")
  valid_603377 = validateParameter(valid_603377, JString, required = false,
                                 default = nil)
  if valid_603377 != nil:
    section.add "X-Amz-Credential", valid_603377
  var valid_603378 = header.getOrDefault("X-Amz-Security-Token")
  valid_603378 = validateParameter(valid_603378, JString, required = false,
                                 default = nil)
  if valid_603378 != nil:
    section.add "X-Amz-Security-Token", valid_603378
  var valid_603379 = header.getOrDefault("X-Amz-Algorithm")
  valid_603379 = validateParameter(valid_603379, JString, required = false,
                                 default = nil)
  if valid_603379 != nil:
    section.add "X-Amz-Algorithm", valid_603379
  var valid_603380 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603380 = validateParameter(valid_603380, JString, required = false,
                                 default = nil)
  if valid_603380 != nil:
    section.add "X-Amz-SignedHeaders", valid_603380
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_603381 = formData.getOrDefault("StackInstanceRegion")
  valid_603381 = validateParameter(valid_603381, JString, required = false,
                                 default = nil)
  if valid_603381 != nil:
    section.add "StackInstanceRegion", valid_603381
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603382 = formData.getOrDefault("StackSetName")
  valid_603382 = validateParameter(valid_603382, JString, required = true,
                                 default = nil)
  if valid_603382 != nil:
    section.add "StackSetName", valid_603382
  var valid_603383 = formData.getOrDefault("StackInstanceAccount")
  valid_603383 = validateParameter(valid_603383, JString, required = false,
                                 default = nil)
  if valid_603383 != nil:
    section.add "StackInstanceAccount", valid_603383
  var valid_603384 = formData.getOrDefault("NextToken")
  valid_603384 = validateParameter(valid_603384, JString, required = false,
                                 default = nil)
  if valid_603384 != nil:
    section.add "NextToken", valid_603384
  var valid_603385 = formData.getOrDefault("MaxResults")
  valid_603385 = validateParameter(valid_603385, JInt, required = false, default = nil)
  if valid_603385 != nil:
    section.add "MaxResults", valid_603385
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603386: Call_PostListStackInstances_603369; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_603386.validator(path, query, header, formData, body)
  let scheme = call_603386.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603386.url(scheme.get, call_603386.host, call_603386.base,
                         call_603386.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603386, url, valid)

proc call*(call_603387: Call_PostListStackInstances_603369; StackSetName: string;
          StackInstanceRegion: string = ""; StackInstanceAccount: string = "";
          NextToken: string = ""; Action: string = "ListStackInstances";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_603388 = newJObject()
  var formData_603389 = newJObject()
  add(formData_603389, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_603389, "StackSetName", newJString(StackSetName))
  add(formData_603389, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(formData_603389, "NextToken", newJString(NextToken))
  add(query_603388, "Action", newJString(Action))
  add(query_603388, "Version", newJString(Version))
  add(formData_603389, "MaxResults", newJInt(MaxResults))
  result = call_603387.call(nil, query_603388, nil, formData_603389, nil)

var postListStackInstances* = Call_PostListStackInstances_603369(
    name: "postListStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_PostListStackInstances_603370, base: "/",
    url: url_PostListStackInstances_603371, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackInstances_603349 = ref object of OpenApiRestCall_601389
proc url_GetListStackInstances_603351(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackInstances_603350(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_603352 = query.getOrDefault("StackSetName")
  valid_603352 = validateParameter(valid_603352, JString, required = true,
                                 default = nil)
  if valid_603352 != nil:
    section.add "StackSetName", valid_603352
  var valid_603353 = query.getOrDefault("MaxResults")
  valid_603353 = validateParameter(valid_603353, JInt, required = false, default = nil)
  if valid_603353 != nil:
    section.add "MaxResults", valid_603353
  var valid_603354 = query.getOrDefault("StackInstanceRegion")
  valid_603354 = validateParameter(valid_603354, JString, required = false,
                                 default = nil)
  if valid_603354 != nil:
    section.add "StackInstanceRegion", valid_603354
  var valid_603355 = query.getOrDefault("StackInstanceAccount")
  valid_603355 = validateParameter(valid_603355, JString, required = false,
                                 default = nil)
  if valid_603355 != nil:
    section.add "StackInstanceAccount", valid_603355
  var valid_603356 = query.getOrDefault("NextToken")
  valid_603356 = validateParameter(valid_603356, JString, required = false,
                                 default = nil)
  if valid_603356 != nil:
    section.add "NextToken", valid_603356
  var valid_603357 = query.getOrDefault("Action")
  valid_603357 = validateParameter(valid_603357, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_603357 != nil:
    section.add "Action", valid_603357
  var valid_603358 = query.getOrDefault("Version")
  valid_603358 = validateParameter(valid_603358, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603358 != nil:
    section.add "Version", valid_603358
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603359 = header.getOrDefault("X-Amz-Signature")
  valid_603359 = validateParameter(valid_603359, JString, required = false,
                                 default = nil)
  if valid_603359 != nil:
    section.add "X-Amz-Signature", valid_603359
  var valid_603360 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603360 = validateParameter(valid_603360, JString, required = false,
                                 default = nil)
  if valid_603360 != nil:
    section.add "X-Amz-Content-Sha256", valid_603360
  var valid_603361 = header.getOrDefault("X-Amz-Date")
  valid_603361 = validateParameter(valid_603361, JString, required = false,
                                 default = nil)
  if valid_603361 != nil:
    section.add "X-Amz-Date", valid_603361
  var valid_603362 = header.getOrDefault("X-Amz-Credential")
  valid_603362 = validateParameter(valid_603362, JString, required = false,
                                 default = nil)
  if valid_603362 != nil:
    section.add "X-Amz-Credential", valid_603362
  var valid_603363 = header.getOrDefault("X-Amz-Security-Token")
  valid_603363 = validateParameter(valid_603363, JString, required = false,
                                 default = nil)
  if valid_603363 != nil:
    section.add "X-Amz-Security-Token", valid_603363
  var valid_603364 = header.getOrDefault("X-Amz-Algorithm")
  valid_603364 = validateParameter(valid_603364, JString, required = false,
                                 default = nil)
  if valid_603364 != nil:
    section.add "X-Amz-Algorithm", valid_603364
  var valid_603365 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603365 = validateParameter(valid_603365, JString, required = false,
                                 default = nil)
  if valid_603365 != nil:
    section.add "X-Amz-SignedHeaders", valid_603365
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603366: Call_GetListStackInstances_603349; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_603366.validator(path, query, header, formData, body)
  let scheme = call_603366.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603366.url(scheme.get, call_603366.host, call_603366.base,
                         call_603366.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603366, url, valid)

proc call*(call_603367: Call_GetListStackInstances_603349; StackSetName: string;
          MaxResults: int = 0; StackInstanceRegion: string = "";
          StackInstanceAccount: string = ""; NextToken: string = "";
          Action: string = "ListStackInstances"; Version: string = "2010-05-15"): Recallable =
  ## getListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603368 = newJObject()
  add(query_603368, "StackSetName", newJString(StackSetName))
  add(query_603368, "MaxResults", newJInt(MaxResults))
  add(query_603368, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_603368, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_603368, "NextToken", newJString(NextToken))
  add(query_603368, "Action", newJString(Action))
  add(query_603368, "Version", newJString(Version))
  result = call_603367.call(nil, query_603368, nil, nil, nil)

var getListStackInstances* = Call_GetListStackInstances_603349(
    name: "getListStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_GetListStackInstances_603350, base: "/",
    url: url_GetListStackInstances_603351, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackResources_603407 = ref object of OpenApiRestCall_601389
proc url_PostListStackResources_603409(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackResources_603408(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603410 = query.getOrDefault("Action")
  valid_603410 = validateParameter(valid_603410, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_603410 != nil:
    section.add "Action", valid_603410
  var valid_603411 = query.getOrDefault("Version")
  valid_603411 = validateParameter(valid_603411, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603411 != nil:
    section.add "Version", valid_603411
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603412 = header.getOrDefault("X-Amz-Signature")
  valid_603412 = validateParameter(valid_603412, JString, required = false,
                                 default = nil)
  if valid_603412 != nil:
    section.add "X-Amz-Signature", valid_603412
  var valid_603413 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603413 = validateParameter(valid_603413, JString, required = false,
                                 default = nil)
  if valid_603413 != nil:
    section.add "X-Amz-Content-Sha256", valid_603413
  var valid_603414 = header.getOrDefault("X-Amz-Date")
  valid_603414 = validateParameter(valid_603414, JString, required = false,
                                 default = nil)
  if valid_603414 != nil:
    section.add "X-Amz-Date", valid_603414
  var valid_603415 = header.getOrDefault("X-Amz-Credential")
  valid_603415 = validateParameter(valid_603415, JString, required = false,
                                 default = nil)
  if valid_603415 != nil:
    section.add "X-Amz-Credential", valid_603415
  var valid_603416 = header.getOrDefault("X-Amz-Security-Token")
  valid_603416 = validateParameter(valid_603416, JString, required = false,
                                 default = nil)
  if valid_603416 != nil:
    section.add "X-Amz-Security-Token", valid_603416
  var valid_603417 = header.getOrDefault("X-Amz-Algorithm")
  valid_603417 = validateParameter(valid_603417, JString, required = false,
                                 default = nil)
  if valid_603417 != nil:
    section.add "X-Amz-Algorithm", valid_603417
  var valid_603418 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603418 = validateParameter(valid_603418, JString, required = false,
                                 default = nil)
  if valid_603418 != nil:
    section.add "X-Amz-SignedHeaders", valid_603418
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603419 = formData.getOrDefault("StackName")
  valid_603419 = validateParameter(valid_603419, JString, required = true,
                                 default = nil)
  if valid_603419 != nil:
    section.add "StackName", valid_603419
  var valid_603420 = formData.getOrDefault("NextToken")
  valid_603420 = validateParameter(valid_603420, JString, required = false,
                                 default = nil)
  if valid_603420 != nil:
    section.add "NextToken", valid_603420
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603421: Call_PostListStackResources_603407; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_603421.validator(path, query, header, formData, body)
  let scheme = call_603421.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603421.url(scheme.get, call_603421.host, call_603421.base,
                         call_603421.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603421, url, valid)

proc call*(call_603422: Call_PostListStackResources_603407; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## postListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603423 = newJObject()
  var formData_603424 = newJObject()
  add(formData_603424, "StackName", newJString(StackName))
  add(formData_603424, "NextToken", newJString(NextToken))
  add(query_603423, "Action", newJString(Action))
  add(query_603423, "Version", newJString(Version))
  result = call_603422.call(nil, query_603423, nil, formData_603424, nil)

var postListStackResources* = Call_PostListStackResources_603407(
    name: "postListStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_PostListStackResources_603408, base: "/",
    url: url_PostListStackResources_603409, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackResources_603390 = ref object of OpenApiRestCall_601389
proc url_GetListStackResources_603392(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackResources_603391(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603393 = query.getOrDefault("NextToken")
  valid_603393 = validateParameter(valid_603393, JString, required = false,
                                 default = nil)
  if valid_603393 != nil:
    section.add "NextToken", valid_603393
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_603394 = query.getOrDefault("StackName")
  valid_603394 = validateParameter(valid_603394, JString, required = true,
                                 default = nil)
  if valid_603394 != nil:
    section.add "StackName", valid_603394
  var valid_603395 = query.getOrDefault("Action")
  valid_603395 = validateParameter(valid_603395, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_603395 != nil:
    section.add "Action", valid_603395
  var valid_603396 = query.getOrDefault("Version")
  valid_603396 = validateParameter(valid_603396, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603396 != nil:
    section.add "Version", valid_603396
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603397 = header.getOrDefault("X-Amz-Signature")
  valid_603397 = validateParameter(valid_603397, JString, required = false,
                                 default = nil)
  if valid_603397 != nil:
    section.add "X-Amz-Signature", valid_603397
  var valid_603398 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603398 = validateParameter(valid_603398, JString, required = false,
                                 default = nil)
  if valid_603398 != nil:
    section.add "X-Amz-Content-Sha256", valid_603398
  var valid_603399 = header.getOrDefault("X-Amz-Date")
  valid_603399 = validateParameter(valid_603399, JString, required = false,
                                 default = nil)
  if valid_603399 != nil:
    section.add "X-Amz-Date", valid_603399
  var valid_603400 = header.getOrDefault("X-Amz-Credential")
  valid_603400 = validateParameter(valid_603400, JString, required = false,
                                 default = nil)
  if valid_603400 != nil:
    section.add "X-Amz-Credential", valid_603400
  var valid_603401 = header.getOrDefault("X-Amz-Security-Token")
  valid_603401 = validateParameter(valid_603401, JString, required = false,
                                 default = nil)
  if valid_603401 != nil:
    section.add "X-Amz-Security-Token", valid_603401
  var valid_603402 = header.getOrDefault("X-Amz-Algorithm")
  valid_603402 = validateParameter(valid_603402, JString, required = false,
                                 default = nil)
  if valid_603402 != nil:
    section.add "X-Amz-Algorithm", valid_603402
  var valid_603403 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603403 = validateParameter(valid_603403, JString, required = false,
                                 default = nil)
  if valid_603403 != nil:
    section.add "X-Amz-SignedHeaders", valid_603403
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603404: Call_GetListStackResources_603390; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_603404.validator(path, query, header, formData, body)
  let scheme = call_603404.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603404.url(scheme.get, call_603404.host, call_603404.base,
                         call_603404.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603404, url, valid)

proc call*(call_603405: Call_GetListStackResources_603390; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603406 = newJObject()
  add(query_603406, "NextToken", newJString(NextToken))
  add(query_603406, "StackName", newJString(StackName))
  add(query_603406, "Action", newJString(Action))
  add(query_603406, "Version", newJString(Version))
  result = call_603405.call(nil, query_603406, nil, nil, nil)

var getListStackResources* = Call_GetListStackResources_603390(
    name: "getListStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_GetListStackResources_603391, base: "/",
    url: url_GetListStackResources_603392, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperationResults_603444 = ref object of OpenApiRestCall_601389
proc url_PostListStackSetOperationResults_603446(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperationResults_603445(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603447 = query.getOrDefault("Action")
  valid_603447 = validateParameter(valid_603447, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_603447 != nil:
    section.add "Action", valid_603447
  var valid_603448 = query.getOrDefault("Version")
  valid_603448 = validateParameter(valid_603448, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603448 != nil:
    section.add "Version", valid_603448
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603449 = header.getOrDefault("X-Amz-Signature")
  valid_603449 = validateParameter(valid_603449, JString, required = false,
                                 default = nil)
  if valid_603449 != nil:
    section.add "X-Amz-Signature", valid_603449
  var valid_603450 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603450 = validateParameter(valid_603450, JString, required = false,
                                 default = nil)
  if valid_603450 != nil:
    section.add "X-Amz-Content-Sha256", valid_603450
  var valid_603451 = header.getOrDefault("X-Amz-Date")
  valid_603451 = validateParameter(valid_603451, JString, required = false,
                                 default = nil)
  if valid_603451 != nil:
    section.add "X-Amz-Date", valid_603451
  var valid_603452 = header.getOrDefault("X-Amz-Credential")
  valid_603452 = validateParameter(valid_603452, JString, required = false,
                                 default = nil)
  if valid_603452 != nil:
    section.add "X-Amz-Credential", valid_603452
  var valid_603453 = header.getOrDefault("X-Amz-Security-Token")
  valid_603453 = validateParameter(valid_603453, JString, required = false,
                                 default = nil)
  if valid_603453 != nil:
    section.add "X-Amz-Security-Token", valid_603453
  var valid_603454 = header.getOrDefault("X-Amz-Algorithm")
  valid_603454 = validateParameter(valid_603454, JString, required = false,
                                 default = nil)
  if valid_603454 != nil:
    section.add "X-Amz-Algorithm", valid_603454
  var valid_603455 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603455 = validateParameter(valid_603455, JString, required = false,
                                 default = nil)
  if valid_603455 != nil:
    section.add "X-Amz-SignedHeaders", valid_603455
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_603456 = formData.getOrDefault("OperationId")
  valid_603456 = validateParameter(valid_603456, JString, required = true,
                                 default = nil)
  if valid_603456 != nil:
    section.add "OperationId", valid_603456
  var valid_603457 = formData.getOrDefault("StackSetName")
  valid_603457 = validateParameter(valid_603457, JString, required = true,
                                 default = nil)
  if valid_603457 != nil:
    section.add "StackSetName", valid_603457
  var valid_603458 = formData.getOrDefault("NextToken")
  valid_603458 = validateParameter(valid_603458, JString, required = false,
                                 default = nil)
  if valid_603458 != nil:
    section.add "NextToken", valid_603458
  var valid_603459 = formData.getOrDefault("MaxResults")
  valid_603459 = validateParameter(valid_603459, JInt, required = false, default = nil)
  if valid_603459 != nil:
    section.add "MaxResults", valid_603459
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603460: Call_PostListStackSetOperationResults_603444;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_603460.validator(path, query, header, formData, body)
  let scheme = call_603460.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603460.url(scheme.get, call_603460.host, call_603460.base,
                         call_603460.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603460, url, valid)

proc call*(call_603461: Call_PostListStackSetOperationResults_603444;
          OperationId: string; StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_603462 = newJObject()
  var formData_603463 = newJObject()
  add(formData_603463, "OperationId", newJString(OperationId))
  add(formData_603463, "StackSetName", newJString(StackSetName))
  add(formData_603463, "NextToken", newJString(NextToken))
  add(query_603462, "Action", newJString(Action))
  add(query_603462, "Version", newJString(Version))
  add(formData_603463, "MaxResults", newJInt(MaxResults))
  result = call_603461.call(nil, query_603462, nil, formData_603463, nil)

var postListStackSetOperationResults* = Call_PostListStackSetOperationResults_603444(
    name: "postListStackSetOperationResults", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_PostListStackSetOperationResults_603445, base: "/",
    url: url_PostListStackSetOperationResults_603446,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperationResults_603425 = ref object of OpenApiRestCall_601389
proc url_GetListStackSetOperationResults_603427(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperationResults_603426(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_603428 = query.getOrDefault("OperationId")
  valid_603428 = validateParameter(valid_603428, JString, required = true,
                                 default = nil)
  if valid_603428 != nil:
    section.add "OperationId", valid_603428
  var valid_603429 = query.getOrDefault("StackSetName")
  valid_603429 = validateParameter(valid_603429, JString, required = true,
                                 default = nil)
  if valid_603429 != nil:
    section.add "StackSetName", valid_603429
  var valid_603430 = query.getOrDefault("MaxResults")
  valid_603430 = validateParameter(valid_603430, JInt, required = false, default = nil)
  if valid_603430 != nil:
    section.add "MaxResults", valid_603430
  var valid_603431 = query.getOrDefault("NextToken")
  valid_603431 = validateParameter(valid_603431, JString, required = false,
                                 default = nil)
  if valid_603431 != nil:
    section.add "NextToken", valid_603431
  var valid_603432 = query.getOrDefault("Action")
  valid_603432 = validateParameter(valid_603432, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_603432 != nil:
    section.add "Action", valid_603432
  var valid_603433 = query.getOrDefault("Version")
  valid_603433 = validateParameter(valid_603433, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603433 != nil:
    section.add "Version", valid_603433
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603434 = header.getOrDefault("X-Amz-Signature")
  valid_603434 = validateParameter(valid_603434, JString, required = false,
                                 default = nil)
  if valid_603434 != nil:
    section.add "X-Amz-Signature", valid_603434
  var valid_603435 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603435 = validateParameter(valid_603435, JString, required = false,
                                 default = nil)
  if valid_603435 != nil:
    section.add "X-Amz-Content-Sha256", valid_603435
  var valid_603436 = header.getOrDefault("X-Amz-Date")
  valid_603436 = validateParameter(valid_603436, JString, required = false,
                                 default = nil)
  if valid_603436 != nil:
    section.add "X-Amz-Date", valid_603436
  var valid_603437 = header.getOrDefault("X-Amz-Credential")
  valid_603437 = validateParameter(valid_603437, JString, required = false,
                                 default = nil)
  if valid_603437 != nil:
    section.add "X-Amz-Credential", valid_603437
  var valid_603438 = header.getOrDefault("X-Amz-Security-Token")
  valid_603438 = validateParameter(valid_603438, JString, required = false,
                                 default = nil)
  if valid_603438 != nil:
    section.add "X-Amz-Security-Token", valid_603438
  var valid_603439 = header.getOrDefault("X-Amz-Algorithm")
  valid_603439 = validateParameter(valid_603439, JString, required = false,
                                 default = nil)
  if valid_603439 != nil:
    section.add "X-Amz-Algorithm", valid_603439
  var valid_603440 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603440 = validateParameter(valid_603440, JString, required = false,
                                 default = nil)
  if valid_603440 != nil:
    section.add "X-Amz-SignedHeaders", valid_603440
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603441: Call_GetListStackSetOperationResults_603425;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_603441.validator(path, query, header, formData, body)
  let scheme = call_603441.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603441.url(scheme.get, call_603441.host, call_603441.base,
                         call_603441.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603441, url, valid)

proc call*(call_603442: Call_GetListStackSetOperationResults_603425;
          OperationId: string; StackSetName: string; MaxResults: int = 0;
          NextToken: string = ""; Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603443 = newJObject()
  add(query_603443, "OperationId", newJString(OperationId))
  add(query_603443, "StackSetName", newJString(StackSetName))
  add(query_603443, "MaxResults", newJInt(MaxResults))
  add(query_603443, "NextToken", newJString(NextToken))
  add(query_603443, "Action", newJString(Action))
  add(query_603443, "Version", newJString(Version))
  result = call_603442.call(nil, query_603443, nil, nil, nil)

var getListStackSetOperationResults* = Call_GetListStackSetOperationResults_603425(
    name: "getListStackSetOperationResults", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_GetListStackSetOperationResults_603426, base: "/",
    url: url_GetListStackSetOperationResults_603427,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperations_603482 = ref object of OpenApiRestCall_601389
proc url_PostListStackSetOperations_603484(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperations_603483(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603485 = query.getOrDefault("Action")
  valid_603485 = validateParameter(valid_603485, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_603485 != nil:
    section.add "Action", valid_603485
  var valid_603486 = query.getOrDefault("Version")
  valid_603486 = validateParameter(valid_603486, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603486 != nil:
    section.add "Version", valid_603486
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603487 = header.getOrDefault("X-Amz-Signature")
  valid_603487 = validateParameter(valid_603487, JString, required = false,
                                 default = nil)
  if valid_603487 != nil:
    section.add "X-Amz-Signature", valid_603487
  var valid_603488 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603488 = validateParameter(valid_603488, JString, required = false,
                                 default = nil)
  if valid_603488 != nil:
    section.add "X-Amz-Content-Sha256", valid_603488
  var valid_603489 = header.getOrDefault("X-Amz-Date")
  valid_603489 = validateParameter(valid_603489, JString, required = false,
                                 default = nil)
  if valid_603489 != nil:
    section.add "X-Amz-Date", valid_603489
  var valid_603490 = header.getOrDefault("X-Amz-Credential")
  valid_603490 = validateParameter(valid_603490, JString, required = false,
                                 default = nil)
  if valid_603490 != nil:
    section.add "X-Amz-Credential", valid_603490
  var valid_603491 = header.getOrDefault("X-Amz-Security-Token")
  valid_603491 = validateParameter(valid_603491, JString, required = false,
                                 default = nil)
  if valid_603491 != nil:
    section.add "X-Amz-Security-Token", valid_603491
  var valid_603492 = header.getOrDefault("X-Amz-Algorithm")
  valid_603492 = validateParameter(valid_603492, JString, required = false,
                                 default = nil)
  if valid_603492 != nil:
    section.add "X-Amz-Algorithm", valid_603492
  var valid_603493 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603493 = validateParameter(valid_603493, JString, required = false,
                                 default = nil)
  if valid_603493 != nil:
    section.add "X-Amz-SignedHeaders", valid_603493
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_603494 = formData.getOrDefault("StackSetName")
  valid_603494 = validateParameter(valid_603494, JString, required = true,
                                 default = nil)
  if valid_603494 != nil:
    section.add "StackSetName", valid_603494
  var valid_603495 = formData.getOrDefault("NextToken")
  valid_603495 = validateParameter(valid_603495, JString, required = false,
                                 default = nil)
  if valid_603495 != nil:
    section.add "NextToken", valid_603495
  var valid_603496 = formData.getOrDefault("MaxResults")
  valid_603496 = validateParameter(valid_603496, JInt, required = false, default = nil)
  if valid_603496 != nil:
    section.add "MaxResults", valid_603496
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603497: Call_PostListStackSetOperations_603482; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_603497.validator(path, query, header, formData, body)
  let scheme = call_603497.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603497.url(scheme.get, call_603497.host, call_603497.base,
                         call_603497.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603497, url, valid)

proc call*(call_603498: Call_PostListStackSetOperations_603482;
          StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_603499 = newJObject()
  var formData_603500 = newJObject()
  add(formData_603500, "StackSetName", newJString(StackSetName))
  add(formData_603500, "NextToken", newJString(NextToken))
  add(query_603499, "Action", newJString(Action))
  add(query_603499, "Version", newJString(Version))
  add(formData_603500, "MaxResults", newJInt(MaxResults))
  result = call_603498.call(nil, query_603499, nil, formData_603500, nil)

var postListStackSetOperations* = Call_PostListStackSetOperations_603482(
    name: "postListStackSetOperations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_PostListStackSetOperations_603483, base: "/",
    url: url_PostListStackSetOperations_603484,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperations_603464 = ref object of OpenApiRestCall_601389
proc url_GetListStackSetOperations_603466(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperations_603465(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_603467 = query.getOrDefault("StackSetName")
  valid_603467 = validateParameter(valid_603467, JString, required = true,
                                 default = nil)
  if valid_603467 != nil:
    section.add "StackSetName", valid_603467
  var valid_603468 = query.getOrDefault("MaxResults")
  valid_603468 = validateParameter(valid_603468, JInt, required = false, default = nil)
  if valid_603468 != nil:
    section.add "MaxResults", valid_603468
  var valid_603469 = query.getOrDefault("NextToken")
  valid_603469 = validateParameter(valid_603469, JString, required = false,
                                 default = nil)
  if valid_603469 != nil:
    section.add "NextToken", valid_603469
  var valid_603470 = query.getOrDefault("Action")
  valid_603470 = validateParameter(valid_603470, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_603470 != nil:
    section.add "Action", valid_603470
  var valid_603471 = query.getOrDefault("Version")
  valid_603471 = validateParameter(valid_603471, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603471 != nil:
    section.add "Version", valid_603471
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603472 = header.getOrDefault("X-Amz-Signature")
  valid_603472 = validateParameter(valid_603472, JString, required = false,
                                 default = nil)
  if valid_603472 != nil:
    section.add "X-Amz-Signature", valid_603472
  var valid_603473 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603473 = validateParameter(valid_603473, JString, required = false,
                                 default = nil)
  if valid_603473 != nil:
    section.add "X-Amz-Content-Sha256", valid_603473
  var valid_603474 = header.getOrDefault("X-Amz-Date")
  valid_603474 = validateParameter(valid_603474, JString, required = false,
                                 default = nil)
  if valid_603474 != nil:
    section.add "X-Amz-Date", valid_603474
  var valid_603475 = header.getOrDefault("X-Amz-Credential")
  valid_603475 = validateParameter(valid_603475, JString, required = false,
                                 default = nil)
  if valid_603475 != nil:
    section.add "X-Amz-Credential", valid_603475
  var valid_603476 = header.getOrDefault("X-Amz-Security-Token")
  valid_603476 = validateParameter(valid_603476, JString, required = false,
                                 default = nil)
  if valid_603476 != nil:
    section.add "X-Amz-Security-Token", valid_603476
  var valid_603477 = header.getOrDefault("X-Amz-Algorithm")
  valid_603477 = validateParameter(valid_603477, JString, required = false,
                                 default = nil)
  if valid_603477 != nil:
    section.add "X-Amz-Algorithm", valid_603477
  var valid_603478 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603478 = validateParameter(valid_603478, JString, required = false,
                                 default = nil)
  if valid_603478 != nil:
    section.add "X-Amz-SignedHeaders", valid_603478
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603479: Call_GetListStackSetOperations_603464; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_603479.validator(path, query, header, formData, body)
  let scheme = call_603479.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603479.url(scheme.get, call_603479.host, call_603479.base,
                         call_603479.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603479, url, valid)

proc call*(call_603480: Call_GetListStackSetOperations_603464;
          StackSetName: string; MaxResults: int = 0; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15"): Recallable =
  ## getListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603481 = newJObject()
  add(query_603481, "StackSetName", newJString(StackSetName))
  add(query_603481, "MaxResults", newJInt(MaxResults))
  add(query_603481, "NextToken", newJString(NextToken))
  add(query_603481, "Action", newJString(Action))
  add(query_603481, "Version", newJString(Version))
  result = call_603480.call(nil, query_603481, nil, nil, nil)

var getListStackSetOperations* = Call_GetListStackSetOperations_603464(
    name: "getListStackSetOperations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_GetListStackSetOperations_603465, base: "/",
    url: url_GetListStackSetOperations_603466,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSets_603519 = ref object of OpenApiRestCall_601389
proc url_PostListStackSets_603521(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSets_603520(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603522 = query.getOrDefault("Action")
  valid_603522 = validateParameter(valid_603522, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_603522 != nil:
    section.add "Action", valid_603522
  var valid_603523 = query.getOrDefault("Version")
  valid_603523 = validateParameter(valid_603523, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603523 != nil:
    section.add "Version", valid_603523
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603524 = header.getOrDefault("X-Amz-Signature")
  valid_603524 = validateParameter(valid_603524, JString, required = false,
                                 default = nil)
  if valid_603524 != nil:
    section.add "X-Amz-Signature", valid_603524
  var valid_603525 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603525 = validateParameter(valid_603525, JString, required = false,
                                 default = nil)
  if valid_603525 != nil:
    section.add "X-Amz-Content-Sha256", valid_603525
  var valid_603526 = header.getOrDefault("X-Amz-Date")
  valid_603526 = validateParameter(valid_603526, JString, required = false,
                                 default = nil)
  if valid_603526 != nil:
    section.add "X-Amz-Date", valid_603526
  var valid_603527 = header.getOrDefault("X-Amz-Credential")
  valid_603527 = validateParameter(valid_603527, JString, required = false,
                                 default = nil)
  if valid_603527 != nil:
    section.add "X-Amz-Credential", valid_603527
  var valid_603528 = header.getOrDefault("X-Amz-Security-Token")
  valid_603528 = validateParameter(valid_603528, JString, required = false,
                                 default = nil)
  if valid_603528 != nil:
    section.add "X-Amz-Security-Token", valid_603528
  var valid_603529 = header.getOrDefault("X-Amz-Algorithm")
  valid_603529 = validateParameter(valid_603529, JString, required = false,
                                 default = nil)
  if valid_603529 != nil:
    section.add "X-Amz-Algorithm", valid_603529
  var valid_603530 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603530 = validateParameter(valid_603530, JString, required = false,
                                 default = nil)
  if valid_603530 != nil:
    section.add "X-Amz-SignedHeaders", valid_603530
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_603531 = formData.getOrDefault("NextToken")
  valid_603531 = validateParameter(valid_603531, JString, required = false,
                                 default = nil)
  if valid_603531 != nil:
    section.add "NextToken", valid_603531
  var valid_603532 = formData.getOrDefault("Status")
  valid_603532 = validateParameter(valid_603532, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_603532 != nil:
    section.add "Status", valid_603532
  var valid_603533 = formData.getOrDefault("MaxResults")
  valid_603533 = validateParameter(valid_603533, JInt, required = false, default = nil)
  if valid_603533 != nil:
    section.add "MaxResults", valid_603533
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603534: Call_PostListStackSets_603519; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_603534.validator(path, query, header, formData, body)
  let scheme = call_603534.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603534.url(scheme.get, call_603534.host, call_603534.base,
                         call_603534.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603534, url, valid)

proc call*(call_603535: Call_PostListStackSets_603519; NextToken: string = "";
          Action: string = "ListStackSets"; Status: string = "ACTIVE";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_603536 = newJObject()
  var formData_603537 = newJObject()
  add(formData_603537, "NextToken", newJString(NextToken))
  add(query_603536, "Action", newJString(Action))
  add(formData_603537, "Status", newJString(Status))
  add(query_603536, "Version", newJString(Version))
  add(formData_603537, "MaxResults", newJInt(MaxResults))
  result = call_603535.call(nil, query_603536, nil, formData_603537, nil)

var postListStackSets* = Call_PostListStackSets_603519(name: "postListStackSets",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_PostListStackSets_603520,
    base: "/", url: url_PostListStackSets_603521,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSets_603501 = ref object of OpenApiRestCall_601389
proc url_GetListStackSets_603503(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSets_603502(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603504 = query.getOrDefault("MaxResults")
  valid_603504 = validateParameter(valid_603504, JInt, required = false, default = nil)
  if valid_603504 != nil:
    section.add "MaxResults", valid_603504
  var valid_603505 = query.getOrDefault("Status")
  valid_603505 = validateParameter(valid_603505, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_603505 != nil:
    section.add "Status", valid_603505
  var valid_603506 = query.getOrDefault("NextToken")
  valid_603506 = validateParameter(valid_603506, JString, required = false,
                                 default = nil)
  if valid_603506 != nil:
    section.add "NextToken", valid_603506
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603507 = query.getOrDefault("Action")
  valid_603507 = validateParameter(valid_603507, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_603507 != nil:
    section.add "Action", valid_603507
  var valid_603508 = query.getOrDefault("Version")
  valid_603508 = validateParameter(valid_603508, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603508 != nil:
    section.add "Version", valid_603508
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603509 = header.getOrDefault("X-Amz-Signature")
  valid_603509 = validateParameter(valid_603509, JString, required = false,
                                 default = nil)
  if valid_603509 != nil:
    section.add "X-Amz-Signature", valid_603509
  var valid_603510 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603510 = validateParameter(valid_603510, JString, required = false,
                                 default = nil)
  if valid_603510 != nil:
    section.add "X-Amz-Content-Sha256", valid_603510
  var valid_603511 = header.getOrDefault("X-Amz-Date")
  valid_603511 = validateParameter(valid_603511, JString, required = false,
                                 default = nil)
  if valid_603511 != nil:
    section.add "X-Amz-Date", valid_603511
  var valid_603512 = header.getOrDefault("X-Amz-Credential")
  valid_603512 = validateParameter(valid_603512, JString, required = false,
                                 default = nil)
  if valid_603512 != nil:
    section.add "X-Amz-Credential", valid_603512
  var valid_603513 = header.getOrDefault("X-Amz-Security-Token")
  valid_603513 = validateParameter(valid_603513, JString, required = false,
                                 default = nil)
  if valid_603513 != nil:
    section.add "X-Amz-Security-Token", valid_603513
  var valid_603514 = header.getOrDefault("X-Amz-Algorithm")
  valid_603514 = validateParameter(valid_603514, JString, required = false,
                                 default = nil)
  if valid_603514 != nil:
    section.add "X-Amz-Algorithm", valid_603514
  var valid_603515 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603515 = validateParameter(valid_603515, JString, required = false,
                                 default = nil)
  if valid_603515 != nil:
    section.add "X-Amz-SignedHeaders", valid_603515
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603516: Call_GetListStackSets_603501; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_603516.validator(path, query, header, formData, body)
  let scheme = call_603516.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603516.url(scheme.get, call_603516.host, call_603516.base,
                         call_603516.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603516, url, valid)

proc call*(call_603517: Call_GetListStackSets_603501; MaxResults: int = 0;
          Status: string = "ACTIVE"; NextToken: string = "";
          Action: string = "ListStackSets"; Version: string = "2010-05-15"): Recallable =
  ## getListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603518 = newJObject()
  add(query_603518, "MaxResults", newJInt(MaxResults))
  add(query_603518, "Status", newJString(Status))
  add(query_603518, "NextToken", newJString(NextToken))
  add(query_603518, "Action", newJString(Action))
  add(query_603518, "Version", newJString(Version))
  result = call_603517.call(nil, query_603518, nil, nil, nil)

var getListStackSets* = Call_GetListStackSets_603501(name: "getListStackSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_GetListStackSets_603502,
    base: "/", url: url_GetListStackSets_603503,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStacks_603555 = ref object of OpenApiRestCall_601389
proc url_PostListStacks_603557(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStacks_603556(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603558 = query.getOrDefault("Action")
  valid_603558 = validateParameter(valid_603558, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_603558 != nil:
    section.add "Action", valid_603558
  var valid_603559 = query.getOrDefault("Version")
  valid_603559 = validateParameter(valid_603559, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603559 != nil:
    section.add "Version", valid_603559
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603560 = header.getOrDefault("X-Amz-Signature")
  valid_603560 = validateParameter(valid_603560, JString, required = false,
                                 default = nil)
  if valid_603560 != nil:
    section.add "X-Amz-Signature", valid_603560
  var valid_603561 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603561 = validateParameter(valid_603561, JString, required = false,
                                 default = nil)
  if valid_603561 != nil:
    section.add "X-Amz-Content-Sha256", valid_603561
  var valid_603562 = header.getOrDefault("X-Amz-Date")
  valid_603562 = validateParameter(valid_603562, JString, required = false,
                                 default = nil)
  if valid_603562 != nil:
    section.add "X-Amz-Date", valid_603562
  var valid_603563 = header.getOrDefault("X-Amz-Credential")
  valid_603563 = validateParameter(valid_603563, JString, required = false,
                                 default = nil)
  if valid_603563 != nil:
    section.add "X-Amz-Credential", valid_603563
  var valid_603564 = header.getOrDefault("X-Amz-Security-Token")
  valid_603564 = validateParameter(valid_603564, JString, required = false,
                                 default = nil)
  if valid_603564 != nil:
    section.add "X-Amz-Security-Token", valid_603564
  var valid_603565 = header.getOrDefault("X-Amz-Algorithm")
  valid_603565 = validateParameter(valid_603565, JString, required = false,
                                 default = nil)
  if valid_603565 != nil:
    section.add "X-Amz-Algorithm", valid_603565
  var valid_603566 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603566 = validateParameter(valid_603566, JString, required = false,
                                 default = nil)
  if valid_603566 != nil:
    section.add "X-Amz-SignedHeaders", valid_603566
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  section = newJObject()
  var valid_603567 = formData.getOrDefault("NextToken")
  valid_603567 = validateParameter(valid_603567, JString, required = false,
                                 default = nil)
  if valid_603567 != nil:
    section.add "NextToken", valid_603567
  var valid_603568 = formData.getOrDefault("StackStatusFilter")
  valid_603568 = validateParameter(valid_603568, JArray, required = false,
                                 default = nil)
  if valid_603568 != nil:
    section.add "StackStatusFilter", valid_603568
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603569: Call_PostListStacks_603555; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_603569.validator(path, query, header, formData, body)
  let scheme = call_603569.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603569.url(scheme.get, call_603569.host, call_603569.base,
                         call_603569.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603569, url, valid)

proc call*(call_603570: Call_PostListStacks_603555; NextToken: string = "";
          StackStatusFilter: JsonNode = nil; Action: string = "ListStacks";
          Version: string = "2010-05-15"): Recallable =
  ## postListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603571 = newJObject()
  var formData_603572 = newJObject()
  add(formData_603572, "NextToken", newJString(NextToken))
  if StackStatusFilter != nil:
    formData_603572.add "StackStatusFilter", StackStatusFilter
  add(query_603571, "Action", newJString(Action))
  add(query_603571, "Version", newJString(Version))
  result = call_603570.call(nil, query_603571, nil, formData_603572, nil)

var postListStacks* = Call_PostListStacks_603555(name: "postListStacks",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_PostListStacks_603556,
    base: "/", url: url_PostListStacks_603557, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStacks_603538 = ref object of OpenApiRestCall_601389
proc url_GetListStacks_603540(protocol: Scheme; host: string; base: string;
                             route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStacks_603539(path: JsonNode; query: JsonNode; header: JsonNode;
                                  formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_603541 = query.getOrDefault("NextToken")
  valid_603541 = validateParameter(valid_603541, JString, required = false,
                                 default = nil)
  if valid_603541 != nil:
    section.add "NextToken", valid_603541
  var valid_603542 = query.getOrDefault("StackStatusFilter")
  valid_603542 = validateParameter(valid_603542, JArray, required = false,
                                 default = nil)
  if valid_603542 != nil:
    section.add "StackStatusFilter", valid_603542
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603543 = query.getOrDefault("Action")
  valid_603543 = validateParameter(valid_603543, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_603543 != nil:
    section.add "Action", valid_603543
  var valid_603544 = query.getOrDefault("Version")
  valid_603544 = validateParameter(valid_603544, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603544 != nil:
    section.add "Version", valid_603544
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603545 = header.getOrDefault("X-Amz-Signature")
  valid_603545 = validateParameter(valid_603545, JString, required = false,
                                 default = nil)
  if valid_603545 != nil:
    section.add "X-Amz-Signature", valid_603545
  var valid_603546 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603546 = validateParameter(valid_603546, JString, required = false,
                                 default = nil)
  if valid_603546 != nil:
    section.add "X-Amz-Content-Sha256", valid_603546
  var valid_603547 = header.getOrDefault("X-Amz-Date")
  valid_603547 = validateParameter(valid_603547, JString, required = false,
                                 default = nil)
  if valid_603547 != nil:
    section.add "X-Amz-Date", valid_603547
  var valid_603548 = header.getOrDefault("X-Amz-Credential")
  valid_603548 = validateParameter(valid_603548, JString, required = false,
                                 default = nil)
  if valid_603548 != nil:
    section.add "X-Amz-Credential", valid_603548
  var valid_603549 = header.getOrDefault("X-Amz-Security-Token")
  valid_603549 = validateParameter(valid_603549, JString, required = false,
                                 default = nil)
  if valid_603549 != nil:
    section.add "X-Amz-Security-Token", valid_603549
  var valid_603550 = header.getOrDefault("X-Amz-Algorithm")
  valid_603550 = validateParameter(valid_603550, JString, required = false,
                                 default = nil)
  if valid_603550 != nil:
    section.add "X-Amz-Algorithm", valid_603550
  var valid_603551 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603551 = validateParameter(valid_603551, JString, required = false,
                                 default = nil)
  if valid_603551 != nil:
    section.add "X-Amz-SignedHeaders", valid_603551
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603552: Call_GetListStacks_603538; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_603552.validator(path, query, header, formData, body)
  let scheme = call_603552.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603552.url(scheme.get, call_603552.host, call_603552.base,
                         call_603552.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603552, url, valid)

proc call*(call_603553: Call_GetListStacks_603538; NextToken: string = "";
          StackStatusFilter: JsonNode = nil; Action: string = "ListStacks";
          Version: string = "2010-05-15"): Recallable =
  ## getListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603554 = newJObject()
  add(query_603554, "NextToken", newJString(NextToken))
  if StackStatusFilter != nil:
    query_603554.add "StackStatusFilter", StackStatusFilter
  add(query_603554, "Action", newJString(Action))
  add(query_603554, "Version", newJString(Version))
  result = call_603553.call(nil, query_603554, nil, nil, nil)

var getListStacks* = Call_GetListStacks_603538(name: "getListStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_GetListStacks_603539,
    base: "/", url: url_GetListStacks_603540, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypeRegistrations_603594 = ref object of OpenApiRestCall_601389
proc url_PostListTypeRegistrations_603596(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypeRegistrations_603595(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns a list of registration tokens for the specified type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603597 = query.getOrDefault("Action")
  valid_603597 = validateParameter(valid_603597, JString, required = true,
                                 default = newJString("ListTypeRegistrations"))
  if valid_603597 != nil:
    section.add "Action", valid_603597
  var valid_603598 = query.getOrDefault("Version")
  valid_603598 = validateParameter(valid_603598, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603598 != nil:
    section.add "Version", valid_603598
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603599 = header.getOrDefault("X-Amz-Signature")
  valid_603599 = validateParameter(valid_603599, JString, required = false,
                                 default = nil)
  if valid_603599 != nil:
    section.add "X-Amz-Signature", valid_603599
  var valid_603600 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603600 = validateParameter(valid_603600, JString, required = false,
                                 default = nil)
  if valid_603600 != nil:
    section.add "X-Amz-Content-Sha256", valid_603600
  var valid_603601 = header.getOrDefault("X-Amz-Date")
  valid_603601 = validateParameter(valid_603601, JString, required = false,
                                 default = nil)
  if valid_603601 != nil:
    section.add "X-Amz-Date", valid_603601
  var valid_603602 = header.getOrDefault("X-Amz-Credential")
  valid_603602 = validateParameter(valid_603602, JString, required = false,
                                 default = nil)
  if valid_603602 != nil:
    section.add "X-Amz-Credential", valid_603602
  var valid_603603 = header.getOrDefault("X-Amz-Security-Token")
  valid_603603 = validateParameter(valid_603603, JString, required = false,
                                 default = nil)
  if valid_603603 != nil:
    section.add "X-Amz-Security-Token", valid_603603
  var valid_603604 = header.getOrDefault("X-Amz-Algorithm")
  valid_603604 = validateParameter(valid_603604, JString, required = false,
                                 default = nil)
  if valid_603604 != nil:
    section.add "X-Amz-Algorithm", valid_603604
  var valid_603605 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603605 = validateParameter(valid_603605, JString, required = false,
                                 default = nil)
  if valid_603605 != nil:
    section.add "X-Amz-SignedHeaders", valid_603605
  result.add "header", section
  ## parameters in `formData` object:
  ##   RegistrationStatusFilter: JString
  ##                           : The current status of the type registration request.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   TypeArn: JString
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_603606 = formData.getOrDefault("RegistrationStatusFilter")
  valid_603606 = validateParameter(valid_603606, JString, required = false,
                                 default = newJString("COMPLETE"))
  if valid_603606 != nil:
    section.add "RegistrationStatusFilter", valid_603606
  var valid_603607 = formData.getOrDefault("NextToken")
  valid_603607 = validateParameter(valid_603607, JString, required = false,
                                 default = nil)
  if valid_603607 != nil:
    section.add "NextToken", valid_603607
  var valid_603608 = formData.getOrDefault("TypeName")
  valid_603608 = validateParameter(valid_603608, JString, required = false,
                                 default = nil)
  if valid_603608 != nil:
    section.add "TypeName", valid_603608
  var valid_603609 = formData.getOrDefault("TypeArn")
  valid_603609 = validateParameter(valid_603609, JString, required = false,
                                 default = nil)
  if valid_603609 != nil:
    section.add "TypeArn", valid_603609
  var valid_603610 = formData.getOrDefault("Type")
  valid_603610 = validateParameter(valid_603610, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603610 != nil:
    section.add "Type", valid_603610
  var valid_603611 = formData.getOrDefault("MaxResults")
  valid_603611 = validateParameter(valid_603611, JInt, required = false, default = nil)
  if valid_603611 != nil:
    section.add "MaxResults", valid_603611
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603612: Call_PostListTypeRegistrations_603594; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns a list of registration tokens for the specified type.
  ## 
  let valid = call_603612.validator(path, query, header, formData, body)
  let scheme = call_603612.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603612.url(scheme.get, call_603612.host, call_603612.base,
                         call_603612.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603612, url, valid)

proc call*(call_603613: Call_PostListTypeRegistrations_603594;
          RegistrationStatusFilter: string = "COMPLETE"; NextToken: string = "";
          TypeName: string = ""; TypeArn: string = ""; Type: string = "RESOURCE";
          Action: string = "ListTypeRegistrations"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListTypeRegistrations
  ## Returns a list of registration tokens for the specified type.
  ##   RegistrationStatusFilter: string
  ##                           : The current status of the type registration request.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   TypeArn: string
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_603614 = newJObject()
  var formData_603615 = newJObject()
  add(formData_603615, "RegistrationStatusFilter",
      newJString(RegistrationStatusFilter))
  add(formData_603615, "NextToken", newJString(NextToken))
  add(formData_603615, "TypeName", newJString(TypeName))
  add(formData_603615, "TypeArn", newJString(TypeArn))
  add(formData_603615, "Type", newJString(Type))
  add(query_603614, "Action", newJString(Action))
  add(query_603614, "Version", newJString(Version))
  add(formData_603615, "MaxResults", newJInt(MaxResults))
  result = call_603613.call(nil, query_603614, nil, formData_603615, nil)

var postListTypeRegistrations* = Call_PostListTypeRegistrations_603594(
    name: "postListTypeRegistrations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeRegistrations",
    validator: validate_PostListTypeRegistrations_603595, base: "/",
    url: url_PostListTypeRegistrations_603596,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypeRegistrations_603573 = ref object of OpenApiRestCall_601389
proc url_GetListTypeRegistrations_603575(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypeRegistrations_603574(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns a list of registration tokens for the specified type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   RegistrationStatusFilter: JString
  ##                           : The current status of the type registration request.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   TypeArn: JString
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_603576 = query.getOrDefault("TypeName")
  valid_603576 = validateParameter(valid_603576, JString, required = false,
                                 default = nil)
  if valid_603576 != nil:
    section.add "TypeName", valid_603576
  var valid_603577 = query.getOrDefault("MaxResults")
  valid_603577 = validateParameter(valid_603577, JInt, required = false, default = nil)
  if valid_603577 != nil:
    section.add "MaxResults", valid_603577
  var valid_603578 = query.getOrDefault("Type")
  valid_603578 = validateParameter(valid_603578, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603578 != nil:
    section.add "Type", valid_603578
  var valid_603579 = query.getOrDefault("RegistrationStatusFilter")
  valid_603579 = validateParameter(valid_603579, JString, required = false,
                                 default = newJString("COMPLETE"))
  if valid_603579 != nil:
    section.add "RegistrationStatusFilter", valid_603579
  var valid_603580 = query.getOrDefault("NextToken")
  valid_603580 = validateParameter(valid_603580, JString, required = false,
                                 default = nil)
  if valid_603580 != nil:
    section.add "NextToken", valid_603580
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603581 = query.getOrDefault("Action")
  valid_603581 = validateParameter(valid_603581, JString, required = true,
                                 default = newJString("ListTypeRegistrations"))
  if valid_603581 != nil:
    section.add "Action", valid_603581
  var valid_603582 = query.getOrDefault("Version")
  valid_603582 = validateParameter(valid_603582, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603582 != nil:
    section.add "Version", valid_603582
  var valid_603583 = query.getOrDefault("TypeArn")
  valid_603583 = validateParameter(valid_603583, JString, required = false,
                                 default = nil)
  if valid_603583 != nil:
    section.add "TypeArn", valid_603583
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603584 = header.getOrDefault("X-Amz-Signature")
  valid_603584 = validateParameter(valid_603584, JString, required = false,
                                 default = nil)
  if valid_603584 != nil:
    section.add "X-Amz-Signature", valid_603584
  var valid_603585 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603585 = validateParameter(valid_603585, JString, required = false,
                                 default = nil)
  if valid_603585 != nil:
    section.add "X-Amz-Content-Sha256", valid_603585
  var valid_603586 = header.getOrDefault("X-Amz-Date")
  valid_603586 = validateParameter(valid_603586, JString, required = false,
                                 default = nil)
  if valid_603586 != nil:
    section.add "X-Amz-Date", valid_603586
  var valid_603587 = header.getOrDefault("X-Amz-Credential")
  valid_603587 = validateParameter(valid_603587, JString, required = false,
                                 default = nil)
  if valid_603587 != nil:
    section.add "X-Amz-Credential", valid_603587
  var valid_603588 = header.getOrDefault("X-Amz-Security-Token")
  valid_603588 = validateParameter(valid_603588, JString, required = false,
                                 default = nil)
  if valid_603588 != nil:
    section.add "X-Amz-Security-Token", valid_603588
  var valid_603589 = header.getOrDefault("X-Amz-Algorithm")
  valid_603589 = validateParameter(valid_603589, JString, required = false,
                                 default = nil)
  if valid_603589 != nil:
    section.add "X-Amz-Algorithm", valid_603589
  var valid_603590 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603590 = validateParameter(valid_603590, JString, required = false,
                                 default = nil)
  if valid_603590 != nil:
    section.add "X-Amz-SignedHeaders", valid_603590
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603591: Call_GetListTypeRegistrations_603573; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns a list of registration tokens for the specified type.
  ## 
  let valid = call_603591.validator(path, query, header, formData, body)
  let scheme = call_603591.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603591.url(scheme.get, call_603591.host, call_603591.base,
                         call_603591.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603591, url, valid)

proc call*(call_603592: Call_GetListTypeRegistrations_603573;
          TypeName: string = ""; MaxResults: int = 0; Type: string = "RESOURCE";
          RegistrationStatusFilter: string = "COMPLETE"; NextToken: string = "";
          Action: string = "ListTypeRegistrations"; Version: string = "2010-05-15";
          TypeArn: string = ""): Recallable =
  ## getListTypeRegistrations
  ## Returns a list of registration tokens for the specified type.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   RegistrationStatusFilter: string
  ##                           : The current status of the type registration request.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   TypeArn: string
  ##          : <p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_603593 = newJObject()
  add(query_603593, "TypeName", newJString(TypeName))
  add(query_603593, "MaxResults", newJInt(MaxResults))
  add(query_603593, "Type", newJString(Type))
  add(query_603593, "RegistrationStatusFilter",
      newJString(RegistrationStatusFilter))
  add(query_603593, "NextToken", newJString(NextToken))
  add(query_603593, "Action", newJString(Action))
  add(query_603593, "Version", newJString(Version))
  add(query_603593, "TypeArn", newJString(TypeArn))
  result = call_603592.call(nil, query_603593, nil, nil, nil)

var getListTypeRegistrations* = Call_GetListTypeRegistrations_603573(
    name: "getListTypeRegistrations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeRegistrations",
    validator: validate_GetListTypeRegistrations_603574, base: "/",
    url: url_GetListTypeRegistrations_603575, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypeVersions_603637 = ref object of OpenApiRestCall_601389
proc url_PostListTypeVersions_603639(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypeVersions_603638(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the versions of a type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603640 = query.getOrDefault("Action")
  valid_603640 = validateParameter(valid_603640, JString, required = true,
                                 default = newJString("ListTypeVersions"))
  if valid_603640 != nil:
    section.add "Action", valid_603640
  var valid_603641 = query.getOrDefault("Version")
  valid_603641 = validateParameter(valid_603641, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603641 != nil:
    section.add "Version", valid_603641
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603642 = header.getOrDefault("X-Amz-Signature")
  valid_603642 = validateParameter(valid_603642, JString, required = false,
                                 default = nil)
  if valid_603642 != nil:
    section.add "X-Amz-Signature", valid_603642
  var valid_603643 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603643 = validateParameter(valid_603643, JString, required = false,
                                 default = nil)
  if valid_603643 != nil:
    section.add "X-Amz-Content-Sha256", valid_603643
  var valid_603644 = header.getOrDefault("X-Amz-Date")
  valid_603644 = validateParameter(valid_603644, JString, required = false,
                                 default = nil)
  if valid_603644 != nil:
    section.add "X-Amz-Date", valid_603644
  var valid_603645 = header.getOrDefault("X-Amz-Credential")
  valid_603645 = validateParameter(valid_603645, JString, required = false,
                                 default = nil)
  if valid_603645 != nil:
    section.add "X-Amz-Credential", valid_603645
  var valid_603646 = header.getOrDefault("X-Amz-Security-Token")
  valid_603646 = validateParameter(valid_603646, JString, required = false,
                                 default = nil)
  if valid_603646 != nil:
    section.add "X-Amz-Security-Token", valid_603646
  var valid_603647 = header.getOrDefault("X-Amz-Algorithm")
  valid_603647 = validateParameter(valid_603647, JString, required = false,
                                 default = nil)
  if valid_603647 != nil:
    section.add "X-Amz-Algorithm", valid_603647
  var valid_603648 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603648 = validateParameter(valid_603648, JString, required = false,
                                 default = nil)
  if valid_603648 != nil:
    section.add "X-Amz-SignedHeaders", valid_603648
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: JString
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   Type: JString
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_603649 = formData.getOrDefault("Arn")
  valid_603649 = validateParameter(valid_603649, JString, required = false,
                                 default = nil)
  if valid_603649 != nil:
    section.add "Arn", valid_603649
  var valid_603650 = formData.getOrDefault("NextToken")
  valid_603650 = validateParameter(valid_603650, JString, required = false,
                                 default = nil)
  if valid_603650 != nil:
    section.add "NextToken", valid_603650
  var valid_603651 = formData.getOrDefault("TypeName")
  valid_603651 = validateParameter(valid_603651, JString, required = false,
                                 default = nil)
  if valid_603651 != nil:
    section.add "TypeName", valid_603651
  var valid_603652 = formData.getOrDefault("DeprecatedStatus")
  valid_603652 = validateParameter(valid_603652, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_603652 != nil:
    section.add "DeprecatedStatus", valid_603652
  var valid_603653 = formData.getOrDefault("Type")
  valid_603653 = validateParameter(valid_603653, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603653 != nil:
    section.add "Type", valid_603653
  var valid_603654 = formData.getOrDefault("MaxResults")
  valid_603654 = validateParameter(valid_603654, JInt, required = false, default = nil)
  if valid_603654 != nil:
    section.add "MaxResults", valid_603654
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603655: Call_PostListTypeVersions_603637; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about the versions of a type.
  ## 
  let valid = call_603655.validator(path, query, header, formData, body)
  let scheme = call_603655.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603655.url(scheme.get, call_603655.host, call_603655.base,
                         call_603655.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603655, url, valid)

proc call*(call_603656: Call_PostListTypeVersions_603637; Arn: string = "";
          NextToken: string = ""; TypeName: string = "";
          DeprecatedStatus: string = "LIVE"; Type: string = "RESOURCE";
          Action: string = "ListTypeVersions"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListTypeVersions
  ## Returns summary information about the versions of a type.
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   TypeName: string
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   Type: string
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_603657 = newJObject()
  var formData_603658 = newJObject()
  add(formData_603658, "Arn", newJString(Arn))
  add(formData_603658, "NextToken", newJString(NextToken))
  add(formData_603658, "TypeName", newJString(TypeName))
  add(formData_603658, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(formData_603658, "Type", newJString(Type))
  add(query_603657, "Action", newJString(Action))
  add(query_603657, "Version", newJString(Version))
  add(formData_603658, "MaxResults", newJInt(MaxResults))
  result = call_603656.call(nil, query_603657, nil, formData_603658, nil)

var postListTypeVersions* = Call_PostListTypeVersions_603637(
    name: "postListTypeVersions", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeVersions",
    validator: validate_PostListTypeVersions_603638, base: "/",
    url: url_PostListTypeVersions_603639, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypeVersions_603616 = ref object of OpenApiRestCall_601389
proc url_GetListTypeVersions_603618(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypeVersions_603617(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Returns summary information about the versions of a type.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: JString
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_603619 = query.getOrDefault("TypeName")
  valid_603619 = validateParameter(valid_603619, JString, required = false,
                                 default = nil)
  if valid_603619 != nil:
    section.add "TypeName", valid_603619
  var valid_603620 = query.getOrDefault("DeprecatedStatus")
  valid_603620 = validateParameter(valid_603620, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_603620 != nil:
    section.add "DeprecatedStatus", valid_603620
  var valid_603621 = query.getOrDefault("MaxResults")
  valid_603621 = validateParameter(valid_603621, JInt, required = false, default = nil)
  if valid_603621 != nil:
    section.add "MaxResults", valid_603621
  var valid_603622 = query.getOrDefault("Type")
  valid_603622 = validateParameter(valid_603622, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603622 != nil:
    section.add "Type", valid_603622
  var valid_603623 = query.getOrDefault("NextToken")
  valid_603623 = validateParameter(valid_603623, JString, required = false,
                                 default = nil)
  if valid_603623 != nil:
    section.add "NextToken", valid_603623
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603624 = query.getOrDefault("Action")
  valid_603624 = validateParameter(valid_603624, JString, required = true,
                                 default = newJString("ListTypeVersions"))
  if valid_603624 != nil:
    section.add "Action", valid_603624
  var valid_603625 = query.getOrDefault("Version")
  valid_603625 = validateParameter(valid_603625, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603625 != nil:
    section.add "Version", valid_603625
  var valid_603626 = query.getOrDefault("Arn")
  valid_603626 = validateParameter(valid_603626, JString, required = false,
                                 default = nil)
  if valid_603626 != nil:
    section.add "Arn", valid_603626
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603627 = header.getOrDefault("X-Amz-Signature")
  valid_603627 = validateParameter(valid_603627, JString, required = false,
                                 default = nil)
  if valid_603627 != nil:
    section.add "X-Amz-Signature", valid_603627
  var valid_603628 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603628 = validateParameter(valid_603628, JString, required = false,
                                 default = nil)
  if valid_603628 != nil:
    section.add "X-Amz-Content-Sha256", valid_603628
  var valid_603629 = header.getOrDefault("X-Amz-Date")
  valid_603629 = validateParameter(valid_603629, JString, required = false,
                                 default = nil)
  if valid_603629 != nil:
    section.add "X-Amz-Date", valid_603629
  var valid_603630 = header.getOrDefault("X-Amz-Credential")
  valid_603630 = validateParameter(valid_603630, JString, required = false,
                                 default = nil)
  if valid_603630 != nil:
    section.add "X-Amz-Credential", valid_603630
  var valid_603631 = header.getOrDefault("X-Amz-Security-Token")
  valid_603631 = validateParameter(valid_603631, JString, required = false,
                                 default = nil)
  if valid_603631 != nil:
    section.add "X-Amz-Security-Token", valid_603631
  var valid_603632 = header.getOrDefault("X-Amz-Algorithm")
  valid_603632 = validateParameter(valid_603632, JString, required = false,
                                 default = nil)
  if valid_603632 != nil:
    section.add "X-Amz-Algorithm", valid_603632
  var valid_603633 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603633 = validateParameter(valid_603633, JString, required = false,
                                 default = nil)
  if valid_603633 != nil:
    section.add "X-Amz-SignedHeaders", valid_603633
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603634: Call_GetListTypeVersions_603616; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about the versions of a type.
  ## 
  let valid = call_603634.validator(path, query, header, formData, body)
  let scheme = call_603634.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603634.url(scheme.get, call_603634.host, call_603634.base,
                         call_603634.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603634, url, valid)

proc call*(call_603635: Call_GetListTypeVersions_603616; TypeName: string = "";
          DeprecatedStatus: string = "LIVE"; MaxResults: int = 0;
          Type: string = "RESOURCE"; NextToken: string = "";
          Action: string = "ListTypeVersions"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getListTypeVersions
  ## Returns summary information about the versions of a type.
  ##   TypeName: string
  ##           : <p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Type: string
  ##       : <p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_603636 = newJObject()
  add(query_603636, "TypeName", newJString(TypeName))
  add(query_603636, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_603636, "MaxResults", newJInt(MaxResults))
  add(query_603636, "Type", newJString(Type))
  add(query_603636, "NextToken", newJString(NextToken))
  add(query_603636, "Action", newJString(Action))
  add(query_603636, "Version", newJString(Version))
  add(query_603636, "Arn", newJString(Arn))
  result = call_603635.call(nil, query_603636, nil, nil, nil)

var getListTypeVersions* = Call_GetListTypeVersions_603616(
    name: "getListTypeVersions", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListTypeVersions",
    validator: validate_GetListTypeVersions_603617, base: "/",
    url: url_GetListTypeVersions_603618, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListTypes_603679 = ref object of OpenApiRestCall_601389
proc url_PostListTypes_603681(protocol: Scheme; host: string; base: string;
                             route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListTypes_603680(path: JsonNode; query: JsonNode; header: JsonNode;
                                  formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603682 = query.getOrDefault("Action")
  valid_603682 = validateParameter(valid_603682, JString, required = true,
                                 default = newJString("ListTypes"))
  if valid_603682 != nil:
    section.add "Action", valid_603682
  var valid_603683 = query.getOrDefault("Version")
  valid_603683 = validateParameter(valid_603683, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603683 != nil:
    section.add "Version", valid_603683
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603684 = header.getOrDefault("X-Amz-Signature")
  valid_603684 = validateParameter(valid_603684, JString, required = false,
                                 default = nil)
  if valid_603684 != nil:
    section.add "X-Amz-Signature", valid_603684
  var valid_603685 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603685 = validateParameter(valid_603685, JString, required = false,
                                 default = nil)
  if valid_603685 != nil:
    section.add "X-Amz-Content-Sha256", valid_603685
  var valid_603686 = header.getOrDefault("X-Amz-Date")
  valid_603686 = validateParameter(valid_603686, JString, required = false,
                                 default = nil)
  if valid_603686 != nil:
    section.add "X-Amz-Date", valid_603686
  var valid_603687 = header.getOrDefault("X-Amz-Credential")
  valid_603687 = validateParameter(valid_603687, JString, required = false,
                                 default = nil)
  if valid_603687 != nil:
    section.add "X-Amz-Credential", valid_603687
  var valid_603688 = header.getOrDefault("X-Amz-Security-Token")
  valid_603688 = validateParameter(valid_603688, JString, required = false,
                                 default = nil)
  if valid_603688 != nil:
    section.add "X-Amz-Security-Token", valid_603688
  var valid_603689 = header.getOrDefault("X-Amz-Algorithm")
  valid_603689 = validateParameter(valid_603689, JString, required = false,
                                 default = nil)
  if valid_603689 != nil:
    section.add "X-Amz-Algorithm", valid_603689
  var valid_603690 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603690 = validateParameter(valid_603690, JString, required = false,
                                 default = nil)
  if valid_603690 != nil:
    section.add "X-Amz-SignedHeaders", valid_603690
  result.add "header", section
  ## parameters in `formData` object:
  ##   ProvisioningType: JString
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: JString
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_603691 = formData.getOrDefault("ProvisioningType")
  valid_603691 = validateParameter(valid_603691, JString, required = false,
                                 default = newJString("NON_PROVISIONABLE"))
  if valid_603691 != nil:
    section.add "ProvisioningType", valid_603691
  var valid_603692 = formData.getOrDefault("NextToken")
  valid_603692 = validateParameter(valid_603692, JString, required = false,
                                 default = nil)
  if valid_603692 != nil:
    section.add "NextToken", valid_603692
  var valid_603693 = formData.getOrDefault("Visibility")
  valid_603693 = validateParameter(valid_603693, JString, required = false,
                                 default = newJString("PUBLIC"))
  if valid_603693 != nil:
    section.add "Visibility", valid_603693
  var valid_603694 = formData.getOrDefault("DeprecatedStatus")
  valid_603694 = validateParameter(valid_603694, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_603694 != nil:
    section.add "DeprecatedStatus", valid_603694
  var valid_603695 = formData.getOrDefault("MaxResults")
  valid_603695 = validateParameter(valid_603695, JInt, required = false, default = nil)
  if valid_603695 != nil:
    section.add "MaxResults", valid_603695
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603696: Call_PostListTypes_603679; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  let valid = call_603696.validator(path, query, header, formData, body)
  let scheme = call_603696.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603696.url(scheme.get, call_603696.host, call_603696.base,
                         call_603696.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603696, url, valid)

proc call*(call_603697: Call_PostListTypes_603679;
          ProvisioningType: string = "NON_PROVISIONABLE"; NextToken: string = "";
          Visibility: string = "PUBLIC"; DeprecatedStatus: string = "LIVE";
          Action: string = "ListTypes"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListTypes
  ## Returns summary information about types that have been registered with CloudFormation.
  ##   ProvisioningType: string
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: string
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_603698 = newJObject()
  var formData_603699 = newJObject()
  add(formData_603699, "ProvisioningType", newJString(ProvisioningType))
  add(formData_603699, "NextToken", newJString(NextToken))
  add(formData_603699, "Visibility", newJString(Visibility))
  add(formData_603699, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_603698, "Action", newJString(Action))
  add(query_603698, "Version", newJString(Version))
  add(formData_603699, "MaxResults", newJInt(MaxResults))
  result = call_603697.call(nil, query_603698, nil, formData_603699, nil)

var postListTypes* = Call_PostListTypes_603679(name: "postListTypes",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListTypes", validator: validate_PostListTypes_603680,
    base: "/", url: url_PostListTypes_603681, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListTypes_603659 = ref object of OpenApiRestCall_601389
proc url_GetListTypes_603661(protocol: Scheme; host: string; base: string;
                            route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListTypes_603660(path: JsonNode; query: JsonNode; header: JsonNode;
                                 formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   DeprecatedStatus: JString
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: JString
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   ProvisioningType: JString
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  section = newJObject()
  var valid_603662 = query.getOrDefault("DeprecatedStatus")
  valid_603662 = validateParameter(valid_603662, JString, required = false,
                                 default = newJString("LIVE"))
  if valid_603662 != nil:
    section.add "DeprecatedStatus", valid_603662
  var valid_603663 = query.getOrDefault("MaxResults")
  valid_603663 = validateParameter(valid_603663, JInt, required = false, default = nil)
  if valid_603663 != nil:
    section.add "MaxResults", valid_603663
  var valid_603664 = query.getOrDefault("NextToken")
  valid_603664 = validateParameter(valid_603664, JString, required = false,
                                 default = nil)
  if valid_603664 != nil:
    section.add "NextToken", valid_603664
  var valid_603665 = query.getOrDefault("Visibility")
  valid_603665 = validateParameter(valid_603665, JString, required = false,
                                 default = newJString("PUBLIC"))
  if valid_603665 != nil:
    section.add "Visibility", valid_603665
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603666 = query.getOrDefault("Action")
  valid_603666 = validateParameter(valid_603666, JString, required = true,
                                 default = newJString("ListTypes"))
  if valid_603666 != nil:
    section.add "Action", valid_603666
  var valid_603667 = query.getOrDefault("Version")
  valid_603667 = validateParameter(valid_603667, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603667 != nil:
    section.add "Version", valid_603667
  var valid_603668 = query.getOrDefault("ProvisioningType")
  valid_603668 = validateParameter(valid_603668, JString, required = false,
                                 default = newJString("NON_PROVISIONABLE"))
  if valid_603668 != nil:
    section.add "ProvisioningType", valid_603668
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603669 = header.getOrDefault("X-Amz-Signature")
  valid_603669 = validateParameter(valid_603669, JString, required = false,
                                 default = nil)
  if valid_603669 != nil:
    section.add "X-Amz-Signature", valid_603669
  var valid_603670 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603670 = validateParameter(valid_603670, JString, required = false,
                                 default = nil)
  if valid_603670 != nil:
    section.add "X-Amz-Content-Sha256", valid_603670
  var valid_603671 = header.getOrDefault("X-Amz-Date")
  valid_603671 = validateParameter(valid_603671, JString, required = false,
                                 default = nil)
  if valid_603671 != nil:
    section.add "X-Amz-Date", valid_603671
  var valid_603672 = header.getOrDefault("X-Amz-Credential")
  valid_603672 = validateParameter(valid_603672, JString, required = false,
                                 default = nil)
  if valid_603672 != nil:
    section.add "X-Amz-Credential", valid_603672
  var valid_603673 = header.getOrDefault("X-Amz-Security-Token")
  valid_603673 = validateParameter(valid_603673, JString, required = false,
                                 default = nil)
  if valid_603673 != nil:
    section.add "X-Amz-Security-Token", valid_603673
  var valid_603674 = header.getOrDefault("X-Amz-Algorithm")
  valid_603674 = validateParameter(valid_603674, JString, required = false,
                                 default = nil)
  if valid_603674 != nil:
    section.add "X-Amz-Algorithm", valid_603674
  var valid_603675 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603675 = validateParameter(valid_603675, JString, required = false,
                                 default = nil)
  if valid_603675 != nil:
    section.add "X-Amz-SignedHeaders", valid_603675
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603676: Call_GetListTypes_603659; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about types that have been registered with CloudFormation.
  ## 
  let valid = call_603676.validator(path, query, header, formData, body)
  let scheme = call_603676.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603676.url(scheme.get, call_603676.host, call_603676.base,
                         call_603676.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603676, url, valid)

proc call*(call_603677: Call_GetListTypes_603659;
          DeprecatedStatus: string = "LIVE"; MaxResults: int = 0;
          NextToken: string = ""; Visibility: string = "PUBLIC";
          Action: string = "ListTypes"; Version: string = "2010-05-15";
          ProvisioningType: string = "NON_PROVISIONABLE"): Recallable =
  ## getListTypes
  ## Returns summary information about types that have been registered with CloudFormation.
  ##   DeprecatedStatus: string
  ##                   : <p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Visibility: string
  ##             : <p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   ProvisioningType: string
  ##                   : <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul>
  var query_603678 = newJObject()
  add(query_603678, "DeprecatedStatus", newJString(DeprecatedStatus))
  add(query_603678, "MaxResults", newJInt(MaxResults))
  add(query_603678, "NextToken", newJString(NextToken))
  add(query_603678, "Visibility", newJString(Visibility))
  add(query_603678, "Action", newJString(Action))
  add(query_603678, "Version", newJString(Version))
  add(query_603678, "ProvisioningType", newJString(ProvisioningType))
  result = call_603677.call(nil, query_603678, nil, nil, nil)

var getListTypes* = Call_GetListTypes_603659(name: "getListTypes",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListTypes", validator: validate_GetListTypes_603660, base: "/",
    url: url_GetListTypes_603661, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostRecordHandlerProgress_603722 = ref object of OpenApiRestCall_601389
proc url_PostRecordHandlerProgress_603724(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostRecordHandlerProgress_603723(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603725 = query.getOrDefault("Action")
  valid_603725 = validateParameter(valid_603725, JString, required = true,
                                 default = newJString("RecordHandlerProgress"))
  if valid_603725 != nil:
    section.add "Action", valid_603725
  var valid_603726 = query.getOrDefault("Version")
  valid_603726 = validateParameter(valid_603726, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603726 != nil:
    section.add "Version", valid_603726
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603727 = header.getOrDefault("X-Amz-Signature")
  valid_603727 = validateParameter(valid_603727, JString, required = false,
                                 default = nil)
  if valid_603727 != nil:
    section.add "X-Amz-Signature", valid_603727
  var valid_603728 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603728 = validateParameter(valid_603728, JString, required = false,
                                 default = nil)
  if valid_603728 != nil:
    section.add "X-Amz-Content-Sha256", valid_603728
  var valid_603729 = header.getOrDefault("X-Amz-Date")
  valid_603729 = validateParameter(valid_603729, JString, required = false,
                                 default = nil)
  if valid_603729 != nil:
    section.add "X-Amz-Date", valid_603729
  var valid_603730 = header.getOrDefault("X-Amz-Credential")
  valid_603730 = validateParameter(valid_603730, JString, required = false,
                                 default = nil)
  if valid_603730 != nil:
    section.add "X-Amz-Credential", valid_603730
  var valid_603731 = header.getOrDefault("X-Amz-Security-Token")
  valid_603731 = validateParameter(valid_603731, JString, required = false,
                                 default = nil)
  if valid_603731 != nil:
    section.add "X-Amz-Security-Token", valid_603731
  var valid_603732 = header.getOrDefault("X-Amz-Algorithm")
  valid_603732 = validateParameter(valid_603732, JString, required = false,
                                 default = nil)
  if valid_603732 != nil:
    section.add "X-Amz-Algorithm", valid_603732
  var valid_603733 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603733 = validateParameter(valid_603733, JString, required = false,
                                 default = nil)
  if valid_603733 != nil:
    section.add "X-Amz-SignedHeaders", valid_603733
  result.add "header", section
  ## parameters in `formData` object:
  ##   ResourceModel: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: JString
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   BearerToken: JString (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: JString (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: JString
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   CurrentOperationStatus: JString
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  section = newJObject()
  var valid_603734 = formData.getOrDefault("ResourceModel")
  valid_603734 = validateParameter(valid_603734, JString, required = false,
                                 default = nil)
  if valid_603734 != nil:
    section.add "ResourceModel", valid_603734
  var valid_603735 = formData.getOrDefault("StatusMessage")
  valid_603735 = validateParameter(valid_603735, JString, required = false,
                                 default = nil)
  if valid_603735 != nil:
    section.add "StatusMessage", valid_603735
  var valid_603736 = formData.getOrDefault("ClientRequestToken")
  valid_603736 = validateParameter(valid_603736, JString, required = false,
                                 default = nil)
  if valid_603736 != nil:
    section.add "ClientRequestToken", valid_603736
  assert formData != nil,
        "formData argument is necessary due to required `BearerToken` field"
  var valid_603737 = formData.getOrDefault("BearerToken")
  valid_603737 = validateParameter(valid_603737, JString, required = true,
                                 default = nil)
  if valid_603737 != nil:
    section.add "BearerToken", valid_603737
  var valid_603738 = formData.getOrDefault("OperationStatus")
  valid_603738 = validateParameter(valid_603738, JString, required = true,
                                 default = newJString("PENDING"))
  if valid_603738 != nil:
    section.add "OperationStatus", valid_603738
  var valid_603739 = formData.getOrDefault("ErrorCode")
  valid_603739 = validateParameter(valid_603739, JString, required = false,
                                 default = newJString("NotUpdatable"))
  if valid_603739 != nil:
    section.add "ErrorCode", valid_603739
  var valid_603740 = formData.getOrDefault("CurrentOperationStatus")
  valid_603740 = validateParameter(valid_603740, JString, required = false,
                                 default = newJString("PENDING"))
  if valid_603740 != nil:
    section.add "CurrentOperationStatus", valid_603740
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603741: Call_PostRecordHandlerProgress_603722; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  let valid = call_603741.validator(path, query, header, formData, body)
  let scheme = call_603741.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603741.url(scheme.get, call_603741.host, call_603741.base,
                         call_603741.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603741, url, valid)

proc call*(call_603742: Call_PostRecordHandlerProgress_603722; BearerToken: string;
          ResourceModel: string = ""; StatusMessage: string = "";
          ClientRequestToken: string = ""; Action: string = "RecordHandlerProgress";
          OperationStatus: string = "PENDING"; Version: string = "2010-05-15";
          ErrorCode: string = "NotUpdatable";
          CurrentOperationStatus: string = "PENDING"): Recallable =
  ## postRecordHandlerProgress
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ##   ResourceModel: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   StatusMessage: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: string
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: string (required)
  ##   BearerToken: string (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: string (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: string (required)
  ##   ErrorCode: string
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   CurrentOperationStatus: string
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  var query_603743 = newJObject()
  var formData_603744 = newJObject()
  add(formData_603744, "ResourceModel", newJString(ResourceModel))
  add(formData_603744, "StatusMessage", newJString(StatusMessage))
  add(formData_603744, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603743, "Action", newJString(Action))
  add(formData_603744, "BearerToken", newJString(BearerToken))
  add(formData_603744, "OperationStatus", newJString(OperationStatus))
  add(query_603743, "Version", newJString(Version))
  add(formData_603744, "ErrorCode", newJString(ErrorCode))
  add(formData_603744, "CurrentOperationStatus",
      newJString(CurrentOperationStatus))
  result = call_603742.call(nil, query_603743, nil, formData_603744, nil)

var postRecordHandlerProgress* = Call_PostRecordHandlerProgress_603722(
    name: "postRecordHandlerProgress", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=RecordHandlerProgress",
    validator: validate_PostRecordHandlerProgress_603723, base: "/",
    url: url_PostRecordHandlerProgress_603724,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetRecordHandlerProgress_603700 = ref object of OpenApiRestCall_601389
proc url_GetRecordHandlerProgress_603702(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetRecordHandlerProgress_603701(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   CurrentOperationStatus: JString
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ResourceModel: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: JString (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: JString (required)
  ##   BearerToken: JString (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: JString
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: JString
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: JString (required)
  ##   StatusMessage: JString
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  section = newJObject()
  var valid_603703 = query.getOrDefault("CurrentOperationStatus")
  valid_603703 = validateParameter(valid_603703, JString, required = false,
                                 default = newJString("PENDING"))
  if valid_603703 != nil:
    section.add "CurrentOperationStatus", valid_603703
  var valid_603704 = query.getOrDefault("ResourceModel")
  valid_603704 = validateParameter(valid_603704, JString, required = false,
                                 default = nil)
  if valid_603704 != nil:
    section.add "ResourceModel", valid_603704
  assert query != nil,
        "query argument is necessary due to required `OperationStatus` field"
  var valid_603705 = query.getOrDefault("OperationStatus")
  valid_603705 = validateParameter(valid_603705, JString, required = true,
                                 default = newJString("PENDING"))
  if valid_603705 != nil:
    section.add "OperationStatus", valid_603705
  var valid_603706 = query.getOrDefault("Action")
  valid_603706 = validateParameter(valid_603706, JString, required = true,
                                 default = newJString("RecordHandlerProgress"))
  if valid_603706 != nil:
    section.add "Action", valid_603706
  var valid_603707 = query.getOrDefault("BearerToken")
  valid_603707 = validateParameter(valid_603707, JString, required = true,
                                 default = nil)
  if valid_603707 != nil:
    section.add "BearerToken", valid_603707
  var valid_603708 = query.getOrDefault("ErrorCode")
  valid_603708 = validateParameter(valid_603708, JString, required = false,
                                 default = newJString("NotUpdatable"))
  if valid_603708 != nil:
    section.add "ErrorCode", valid_603708
  var valid_603709 = query.getOrDefault("ClientRequestToken")
  valid_603709 = validateParameter(valid_603709, JString, required = false,
                                 default = nil)
  if valid_603709 != nil:
    section.add "ClientRequestToken", valid_603709
  var valid_603710 = query.getOrDefault("Version")
  valid_603710 = validateParameter(valid_603710, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603710 != nil:
    section.add "Version", valid_603710
  var valid_603711 = query.getOrDefault("StatusMessage")
  valid_603711 = validateParameter(valid_603711, JString, required = false,
                                 default = nil)
  if valid_603711 != nil:
    section.add "StatusMessage", valid_603711
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603712 = header.getOrDefault("X-Amz-Signature")
  valid_603712 = validateParameter(valid_603712, JString, required = false,
                                 default = nil)
  if valid_603712 != nil:
    section.add "X-Amz-Signature", valid_603712
  var valid_603713 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603713 = validateParameter(valid_603713, JString, required = false,
                                 default = nil)
  if valid_603713 != nil:
    section.add "X-Amz-Content-Sha256", valid_603713
  var valid_603714 = header.getOrDefault("X-Amz-Date")
  valid_603714 = validateParameter(valid_603714, JString, required = false,
                                 default = nil)
  if valid_603714 != nil:
    section.add "X-Amz-Date", valid_603714
  var valid_603715 = header.getOrDefault("X-Amz-Credential")
  valid_603715 = validateParameter(valid_603715, JString, required = false,
                                 default = nil)
  if valid_603715 != nil:
    section.add "X-Amz-Credential", valid_603715
  var valid_603716 = header.getOrDefault("X-Amz-Security-Token")
  valid_603716 = validateParameter(valid_603716, JString, required = false,
                                 default = nil)
  if valid_603716 != nil:
    section.add "X-Amz-Security-Token", valid_603716
  var valid_603717 = header.getOrDefault("X-Amz-Algorithm")
  valid_603717 = validateParameter(valid_603717, JString, required = false,
                                 default = nil)
  if valid_603717 != nil:
    section.add "X-Amz-Algorithm", valid_603717
  var valid_603718 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603718 = validateParameter(valid_603718, JString, required = false,
                                 default = nil)
  if valid_603718 != nil:
    section.add "X-Amz-SignedHeaders", valid_603718
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603719: Call_GetRecordHandlerProgress_603700; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ## 
  let valid = call_603719.validator(path, query, header, formData, body)
  let scheme = call_603719.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603719.url(scheme.get, call_603719.host, call_603719.base,
                         call_603719.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603719, url, valid)

proc call*(call_603720: Call_GetRecordHandlerProgress_603700; BearerToken: string;
          CurrentOperationStatus: string = "PENDING"; ResourceModel: string = "";
          OperationStatus: string = "PENDING";
          Action: string = "RecordHandlerProgress";
          ErrorCode: string = "NotUpdatable"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"; StatusMessage: string = ""): Recallable =
  ## getRecordHandlerProgress
  ## <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
  ##   CurrentOperationStatus: string
  ##                         : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ResourceModel: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   OperationStatus: string (required)
  ##                  : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Action: string (required)
  ##   BearerToken: string (required)
  ##              : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ErrorCode: string
  ##            : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   ClientRequestToken: string
  ##                     : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  ##   Version: string (required)
  ##   StatusMessage: string
  ##                : Reserved for use by the <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
  var query_603721 = newJObject()
  add(query_603721, "CurrentOperationStatus", newJString(CurrentOperationStatus))
  add(query_603721, "ResourceModel", newJString(ResourceModel))
  add(query_603721, "OperationStatus", newJString(OperationStatus))
  add(query_603721, "Action", newJString(Action))
  add(query_603721, "BearerToken", newJString(BearerToken))
  add(query_603721, "ErrorCode", newJString(ErrorCode))
  add(query_603721, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603721, "Version", newJString(Version))
  add(query_603721, "StatusMessage", newJString(StatusMessage))
  result = call_603720.call(nil, query_603721, nil, nil, nil)

var getRecordHandlerProgress* = Call_GetRecordHandlerProgress_603700(
    name: "getRecordHandlerProgress", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=RecordHandlerProgress",
    validator: validate_GetRecordHandlerProgress_603701, base: "/",
    url: url_GetRecordHandlerProgress_603702, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostRegisterType_603767 = ref object of OpenApiRestCall_601389
proc url_PostRegisterType_603769(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostRegisterType_603768(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603770 = query.getOrDefault("Action")
  valid_603770 = validateParameter(valid_603770, JString, required = true,
                                 default = newJString("RegisterType"))
  if valid_603770 != nil:
    section.add "Action", valid_603770
  var valid_603771 = query.getOrDefault("Version")
  valid_603771 = validateParameter(valid_603771, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603771 != nil:
    section.add "Version", valid_603771
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603772 = header.getOrDefault("X-Amz-Signature")
  valid_603772 = validateParameter(valid_603772, JString, required = false,
                                 default = nil)
  if valid_603772 != nil:
    section.add "X-Amz-Signature", valid_603772
  var valid_603773 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603773 = validateParameter(valid_603773, JString, required = false,
                                 default = nil)
  if valid_603773 != nil:
    section.add "X-Amz-Content-Sha256", valid_603773
  var valid_603774 = header.getOrDefault("X-Amz-Date")
  valid_603774 = validateParameter(valid_603774, JString, required = false,
                                 default = nil)
  if valid_603774 != nil:
    section.add "X-Amz-Date", valid_603774
  var valid_603775 = header.getOrDefault("X-Amz-Credential")
  valid_603775 = validateParameter(valid_603775, JString, required = false,
                                 default = nil)
  if valid_603775 != nil:
    section.add "X-Amz-Credential", valid_603775
  var valid_603776 = header.getOrDefault("X-Amz-Security-Token")
  valid_603776 = validateParameter(valid_603776, JString, required = false,
                                 default = nil)
  if valid_603776 != nil:
    section.add "X-Amz-Security-Token", valid_603776
  var valid_603777 = header.getOrDefault("X-Amz-Algorithm")
  valid_603777 = validateParameter(valid_603777, JString, required = false,
                                 default = nil)
  if valid_603777 != nil:
    section.add "X-Amz-Algorithm", valid_603777
  var valid_603778 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603778 = validateParameter(valid_603778, JString, required = false,
                                 default = nil)
  if valid_603778 != nil:
    section.add "X-Amz-SignedHeaders", valid_603778
  result.add "header", section
  ## parameters in `formData` object:
  ##   SchemaHandlerPackage: JString (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  ##   LoggingConfig.LogRoleArn: JString
  ##                           : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   TypeName: JString (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   ExecutionRoleArn: JString
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfig.LogGroupName: JString
  ##                             : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `SchemaHandlerPackage` field"
  var valid_603779 = formData.getOrDefault("SchemaHandlerPackage")
  valid_603779 = validateParameter(valid_603779, JString, required = true,
                                 default = nil)
  if valid_603779 != nil:
    section.add "SchemaHandlerPackage", valid_603779
  var valid_603780 = formData.getOrDefault("LoggingConfig.LogRoleArn")
  valid_603780 = validateParameter(valid_603780, JString, required = false,
                                 default = nil)
  if valid_603780 != nil:
    section.add "LoggingConfig.LogRoleArn", valid_603780
  var valid_603781 = formData.getOrDefault("TypeName")
  valid_603781 = validateParameter(valid_603781, JString, required = true,
                                 default = nil)
  if valid_603781 != nil:
    section.add "TypeName", valid_603781
  var valid_603782 = formData.getOrDefault("ExecutionRoleArn")
  valid_603782 = validateParameter(valid_603782, JString, required = false,
                                 default = nil)
  if valid_603782 != nil:
    section.add "ExecutionRoleArn", valid_603782
  var valid_603783 = formData.getOrDefault("ClientRequestToken")
  valid_603783 = validateParameter(valid_603783, JString, required = false,
                                 default = nil)
  if valid_603783 != nil:
    section.add "ClientRequestToken", valid_603783
  var valid_603784 = formData.getOrDefault("Type")
  valid_603784 = validateParameter(valid_603784, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603784 != nil:
    section.add "Type", valid_603784
  var valid_603785 = formData.getOrDefault("LoggingConfig.LogGroupName")
  valid_603785 = validateParameter(valid_603785, JString, required = false,
                                 default = nil)
  if valid_603785 != nil:
    section.add "LoggingConfig.LogGroupName", valid_603785
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603786: Call_PostRegisterType_603767; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  let valid = call_603786.validator(path, query, header, formData, body)
  let scheme = call_603786.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603786.url(scheme.get, call_603786.host, call_603786.base,
                         call_603786.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603786, url, valid)

proc call*(call_603787: Call_PostRegisterType_603767; SchemaHandlerPackage: string;
          TypeName: string; LoggingConfigLogRoleArn: string = "";
          ExecutionRoleArn: string = ""; ClientRequestToken: string = "";
          Type: string = "RESOURCE"; LoggingConfigLogGroupName: string = "";
          Action: string = "RegisterType"; Version: string = "2010-05-15"): Recallable =
  ## postRegisterType
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ##   SchemaHandlerPackage: string (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  ##   LoggingConfigLogRoleArn: string
  ##                          : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   TypeName: string (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   ExecutionRoleArn: string
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   ClientRequestToken: string
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfigLogGroupName: string
  ##                            : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603788 = newJObject()
  var formData_603789 = newJObject()
  add(formData_603789, "SchemaHandlerPackage", newJString(SchemaHandlerPackage))
  add(formData_603789, "LoggingConfig.LogRoleArn",
      newJString(LoggingConfigLogRoleArn))
  add(formData_603789, "TypeName", newJString(TypeName))
  add(formData_603789, "ExecutionRoleArn", newJString(ExecutionRoleArn))
  add(formData_603789, "ClientRequestToken", newJString(ClientRequestToken))
  add(formData_603789, "Type", newJString(Type))
  add(formData_603789, "LoggingConfig.LogGroupName",
      newJString(LoggingConfigLogGroupName))
  add(query_603788, "Action", newJString(Action))
  add(query_603788, "Version", newJString(Version))
  result = call_603787.call(nil, query_603788, nil, formData_603789, nil)

var postRegisterType* = Call_PostRegisterType_603767(name: "postRegisterType",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=RegisterType", validator: validate_PostRegisterType_603768,
    base: "/", url: url_PostRegisterType_603769,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetRegisterType_603745 = ref object of OpenApiRestCall_601389
proc url_GetRegisterType_603747(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetRegisterType_603746(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   Type: JString
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfig.LogRoleArn: JString
  ##                           : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Version: JString (required)
  ##   ExecutionRoleArn: JString
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   LoggingConfig.LogGroupName: JString
  ##                             : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   SchemaHandlerPackage: JString (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `TypeName` field"
  var valid_603748 = query.getOrDefault("TypeName")
  valid_603748 = validateParameter(valid_603748, JString, required = true,
                                 default = nil)
  if valid_603748 != nil:
    section.add "TypeName", valid_603748
  var valid_603749 = query.getOrDefault("Type")
  valid_603749 = validateParameter(valid_603749, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603749 != nil:
    section.add "Type", valid_603749
  var valid_603750 = query.getOrDefault("LoggingConfig.LogRoleArn")
  valid_603750 = validateParameter(valid_603750, JString, required = false,
                                 default = nil)
  if valid_603750 != nil:
    section.add "LoggingConfig.LogRoleArn", valid_603750
  var valid_603751 = query.getOrDefault("Action")
  valid_603751 = validateParameter(valid_603751, JString, required = true,
                                 default = newJString("RegisterType"))
  if valid_603751 != nil:
    section.add "Action", valid_603751
  var valid_603752 = query.getOrDefault("ClientRequestToken")
  valid_603752 = validateParameter(valid_603752, JString, required = false,
                                 default = nil)
  if valid_603752 != nil:
    section.add "ClientRequestToken", valid_603752
  var valid_603753 = query.getOrDefault("Version")
  valid_603753 = validateParameter(valid_603753, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603753 != nil:
    section.add "Version", valid_603753
  var valid_603754 = query.getOrDefault("ExecutionRoleArn")
  valid_603754 = validateParameter(valid_603754, JString, required = false,
                                 default = nil)
  if valid_603754 != nil:
    section.add "ExecutionRoleArn", valid_603754
  var valid_603755 = query.getOrDefault("LoggingConfig.LogGroupName")
  valid_603755 = validateParameter(valid_603755, JString, required = false,
                                 default = nil)
  if valid_603755 != nil:
    section.add "LoggingConfig.LogGroupName", valid_603755
  var valid_603756 = query.getOrDefault("SchemaHandlerPackage")
  valid_603756 = validateParameter(valid_603756, JString, required = true,
                                 default = nil)
  if valid_603756 != nil:
    section.add "SchemaHandlerPackage", valid_603756
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603757 = header.getOrDefault("X-Amz-Signature")
  valid_603757 = validateParameter(valid_603757, JString, required = false,
                                 default = nil)
  if valid_603757 != nil:
    section.add "X-Amz-Signature", valid_603757
  var valid_603758 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603758 = validateParameter(valid_603758, JString, required = false,
                                 default = nil)
  if valid_603758 != nil:
    section.add "X-Amz-Content-Sha256", valid_603758
  var valid_603759 = header.getOrDefault("X-Amz-Date")
  valid_603759 = validateParameter(valid_603759, JString, required = false,
                                 default = nil)
  if valid_603759 != nil:
    section.add "X-Amz-Date", valid_603759
  var valid_603760 = header.getOrDefault("X-Amz-Credential")
  valid_603760 = validateParameter(valid_603760, JString, required = false,
                                 default = nil)
  if valid_603760 != nil:
    section.add "X-Amz-Credential", valid_603760
  var valid_603761 = header.getOrDefault("X-Amz-Security-Token")
  valid_603761 = validateParameter(valid_603761, JString, required = false,
                                 default = nil)
  if valid_603761 != nil:
    section.add "X-Amz-Security-Token", valid_603761
  var valid_603762 = header.getOrDefault("X-Amz-Algorithm")
  valid_603762 = validateParameter(valid_603762, JString, required = false,
                                 default = nil)
  if valid_603762 != nil:
    section.add "X-Amz-Algorithm", valid_603762
  var valid_603763 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603763 = validateParameter(valid_603763, JString, required = false,
                                 default = nil)
  if valid_603763 != nil:
    section.add "X-Amz-SignedHeaders", valid_603763
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603764: Call_GetRegisterType_603745; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ## 
  let valid = call_603764.validator(path, query, header, formData, body)
  let scheme = call_603764.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603764.url(scheme.get, call_603764.host, call_603764.base,
                         call_603764.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603764, url, valid)

proc call*(call_603765: Call_GetRegisterType_603745; TypeName: string;
          SchemaHandlerPackage: string; Type: string = "RESOURCE";
          LoggingConfigLogRoleArn: string = ""; Action: string = "RegisterType";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          ExecutionRoleArn: string = ""; LoggingConfigLogGroupName: string = ""): Recallable =
  ## getRegisterType
  ## <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
  ##   TypeName: string (required)
  ##           : <p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
  ##   Type: string
  ##       : <p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p>
  ##   LoggingConfigLogRoleArn: string
  ##                          : Contains logging configuration information for a type.
  ## The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. 
  ##   Version: string (required)
  ##   ExecutionRoleArn: string
  ##                   : The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
  ##   LoggingConfigLogGroupName: string
  ##                            : Contains logging configuration information for a type.
  ## The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
  ##   SchemaHandlerPackage: string (required)
  ##                       : <p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a 
  ## href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p>
  var query_603766 = newJObject()
  add(query_603766, "TypeName", newJString(TypeName))
  add(query_603766, "Type", newJString(Type))
  add(query_603766, "LoggingConfig.LogRoleArn",
      newJString(LoggingConfigLogRoleArn))
  add(query_603766, "Action", newJString(Action))
  add(query_603766, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603766, "Version", newJString(Version))
  add(query_603766, "ExecutionRoleArn", newJString(ExecutionRoleArn))
  add(query_603766, "LoggingConfig.LogGroupName",
      newJString(LoggingConfigLogGroupName))
  add(query_603766, "SchemaHandlerPackage", newJString(SchemaHandlerPackage))
  result = call_603765.call(nil, query_603766, nil, nil, nil)

var getRegisterType* = Call_GetRegisterType_603745(name: "getRegisterType",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=RegisterType", validator: validate_GetRegisterType_603746,
    base: "/", url: url_GetRegisterType_603747, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetStackPolicy_603808 = ref object of OpenApiRestCall_601389
proc url_PostSetStackPolicy_603810(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetStackPolicy_603809(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603811 = query.getOrDefault("Action")
  valid_603811 = validateParameter(valid_603811, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_603811 != nil:
    section.add "Action", valid_603811
  var valid_603812 = query.getOrDefault("Version")
  valid_603812 = validateParameter(valid_603812, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603812 != nil:
    section.add "Version", valid_603812
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603813 = header.getOrDefault("X-Amz-Signature")
  valid_603813 = validateParameter(valid_603813, JString, required = false,
                                 default = nil)
  if valid_603813 != nil:
    section.add "X-Amz-Signature", valid_603813
  var valid_603814 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603814 = validateParameter(valid_603814, JString, required = false,
                                 default = nil)
  if valid_603814 != nil:
    section.add "X-Amz-Content-Sha256", valid_603814
  var valid_603815 = header.getOrDefault("X-Amz-Date")
  valid_603815 = validateParameter(valid_603815, JString, required = false,
                                 default = nil)
  if valid_603815 != nil:
    section.add "X-Amz-Date", valid_603815
  var valid_603816 = header.getOrDefault("X-Amz-Credential")
  valid_603816 = validateParameter(valid_603816, JString, required = false,
                                 default = nil)
  if valid_603816 != nil:
    section.add "X-Amz-Credential", valid_603816
  var valid_603817 = header.getOrDefault("X-Amz-Security-Token")
  valid_603817 = validateParameter(valid_603817, JString, required = false,
                                 default = nil)
  if valid_603817 != nil:
    section.add "X-Amz-Security-Token", valid_603817
  var valid_603818 = header.getOrDefault("X-Amz-Algorithm")
  valid_603818 = validateParameter(valid_603818, JString, required = false,
                                 default = nil)
  if valid_603818 != nil:
    section.add "X-Amz-Algorithm", valid_603818
  var valid_603819 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603819 = validateParameter(valid_603819, JString, required = false,
                                 default = nil)
  if valid_603819 != nil:
    section.add "X-Amz-SignedHeaders", valid_603819
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  section = newJObject()
  var valid_603820 = formData.getOrDefault("StackPolicyBody")
  valid_603820 = validateParameter(valid_603820, JString, required = false,
                                 default = nil)
  if valid_603820 != nil:
    section.add "StackPolicyBody", valid_603820
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603821 = formData.getOrDefault("StackName")
  valid_603821 = validateParameter(valid_603821, JString, required = true,
                                 default = nil)
  if valid_603821 != nil:
    section.add "StackName", valid_603821
  var valid_603822 = formData.getOrDefault("StackPolicyURL")
  valid_603822 = validateParameter(valid_603822, JString, required = false,
                                 default = nil)
  if valid_603822 != nil:
    section.add "StackPolicyURL", valid_603822
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603823: Call_PostSetStackPolicy_603808; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_603823.validator(path, query, header, formData, body)
  let scheme = call_603823.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603823.url(scheme.get, call_603823.host, call_603823.base,
                         call_603823.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603823, url, valid)

proc call*(call_603824: Call_PostSetStackPolicy_603808; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603825 = newJObject()
  var formData_603826 = newJObject()
  add(formData_603826, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_603826, "StackName", newJString(StackName))
  add(formData_603826, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_603825, "Action", newJString(Action))
  add(query_603825, "Version", newJString(Version))
  result = call_603824.call(nil, query_603825, nil, formData_603826, nil)

var postSetStackPolicy* = Call_PostSetStackPolicy_603808(
    name: "postSetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetStackPolicy",
    validator: validate_PostSetStackPolicy_603809, base: "/",
    url: url_PostSetStackPolicy_603810, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetStackPolicy_603790 = ref object of OpenApiRestCall_601389
proc url_GetSetStackPolicy_603792(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetStackPolicy_603791(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_603793 = query.getOrDefault("StackName")
  valid_603793 = validateParameter(valid_603793, JString, required = true,
                                 default = nil)
  if valid_603793 != nil:
    section.add "StackName", valid_603793
  var valid_603794 = query.getOrDefault("StackPolicyBody")
  valid_603794 = validateParameter(valid_603794, JString, required = false,
                                 default = nil)
  if valid_603794 != nil:
    section.add "StackPolicyBody", valid_603794
  var valid_603795 = query.getOrDefault("StackPolicyURL")
  valid_603795 = validateParameter(valid_603795, JString, required = false,
                                 default = nil)
  if valid_603795 != nil:
    section.add "StackPolicyURL", valid_603795
  var valid_603796 = query.getOrDefault("Action")
  valid_603796 = validateParameter(valid_603796, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_603796 != nil:
    section.add "Action", valid_603796
  var valid_603797 = query.getOrDefault("Version")
  valid_603797 = validateParameter(valid_603797, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603797 != nil:
    section.add "Version", valid_603797
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603798 = header.getOrDefault("X-Amz-Signature")
  valid_603798 = validateParameter(valid_603798, JString, required = false,
                                 default = nil)
  if valid_603798 != nil:
    section.add "X-Amz-Signature", valid_603798
  var valid_603799 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603799 = validateParameter(valid_603799, JString, required = false,
                                 default = nil)
  if valid_603799 != nil:
    section.add "X-Amz-Content-Sha256", valid_603799
  var valid_603800 = header.getOrDefault("X-Amz-Date")
  valid_603800 = validateParameter(valid_603800, JString, required = false,
                                 default = nil)
  if valid_603800 != nil:
    section.add "X-Amz-Date", valid_603800
  var valid_603801 = header.getOrDefault("X-Amz-Credential")
  valid_603801 = validateParameter(valid_603801, JString, required = false,
                                 default = nil)
  if valid_603801 != nil:
    section.add "X-Amz-Credential", valid_603801
  var valid_603802 = header.getOrDefault("X-Amz-Security-Token")
  valid_603802 = validateParameter(valid_603802, JString, required = false,
                                 default = nil)
  if valid_603802 != nil:
    section.add "X-Amz-Security-Token", valid_603802
  var valid_603803 = header.getOrDefault("X-Amz-Algorithm")
  valid_603803 = validateParameter(valid_603803, JString, required = false,
                                 default = nil)
  if valid_603803 != nil:
    section.add "X-Amz-Algorithm", valid_603803
  var valid_603804 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603804 = validateParameter(valid_603804, JString, required = false,
                                 default = nil)
  if valid_603804 != nil:
    section.add "X-Amz-SignedHeaders", valid_603804
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603805: Call_GetSetStackPolicy_603790; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_603805.validator(path, query, header, formData, body)
  let scheme = call_603805.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603805.url(scheme.get, call_603805.host, call_603805.base,
                         call_603805.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603805, url, valid)

proc call*(call_603806: Call_GetSetStackPolicy_603790; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603807 = newJObject()
  add(query_603807, "StackName", newJString(StackName))
  add(query_603807, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_603807, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_603807, "Action", newJString(Action))
  add(query_603807, "Version", newJString(Version))
  result = call_603806.call(nil, query_603807, nil, nil, nil)

var getSetStackPolicy* = Call_GetSetStackPolicy_603790(name: "getSetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SetStackPolicy", validator: validate_GetSetStackPolicy_603791,
    base: "/", url: url_GetSetStackPolicy_603792,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetTypeDefaultVersion_603846 = ref object of OpenApiRestCall_601389
proc url_PostSetTypeDefaultVersion_603848(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetTypeDefaultVersion_603847(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603849 = query.getOrDefault("Action")
  valid_603849 = validateParameter(valid_603849, JString, required = true,
                                 default = newJString("SetTypeDefaultVersion"))
  if valid_603849 != nil:
    section.add "Action", valid_603849
  var valid_603850 = query.getOrDefault("Version")
  valid_603850 = validateParameter(valid_603850, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603850 != nil:
    section.add "Version", valid_603850
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603851 = header.getOrDefault("X-Amz-Signature")
  valid_603851 = validateParameter(valid_603851, JString, required = false,
                                 default = nil)
  if valid_603851 != nil:
    section.add "X-Amz-Signature", valid_603851
  var valid_603852 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603852 = validateParameter(valid_603852, JString, required = false,
                                 default = nil)
  if valid_603852 != nil:
    section.add "X-Amz-Content-Sha256", valid_603852
  var valid_603853 = header.getOrDefault("X-Amz-Date")
  valid_603853 = validateParameter(valid_603853, JString, required = false,
                                 default = nil)
  if valid_603853 != nil:
    section.add "X-Amz-Date", valid_603853
  var valid_603854 = header.getOrDefault("X-Amz-Credential")
  valid_603854 = validateParameter(valid_603854, JString, required = false,
                                 default = nil)
  if valid_603854 != nil:
    section.add "X-Amz-Credential", valid_603854
  var valid_603855 = header.getOrDefault("X-Amz-Security-Token")
  valid_603855 = validateParameter(valid_603855, JString, required = false,
                                 default = nil)
  if valid_603855 != nil:
    section.add "X-Amz-Security-Token", valid_603855
  var valid_603856 = header.getOrDefault("X-Amz-Algorithm")
  valid_603856 = validateParameter(valid_603856, JString, required = false,
                                 default = nil)
  if valid_603856 != nil:
    section.add "X-Amz-Algorithm", valid_603856
  var valid_603857 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603857 = validateParameter(valid_603857, JString, required = false,
                                 default = nil)
  if valid_603857 != nil:
    section.add "X-Amz-SignedHeaders", valid_603857
  result.add "header", section
  ## parameters in `formData` object:
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : The kind of type.
  section = newJObject()
  var valid_603858 = formData.getOrDefault("Arn")
  valid_603858 = validateParameter(valid_603858, JString, required = false,
                                 default = nil)
  if valid_603858 != nil:
    section.add "Arn", valid_603858
  var valid_603859 = formData.getOrDefault("VersionId")
  valid_603859 = validateParameter(valid_603859, JString, required = false,
                                 default = nil)
  if valid_603859 != nil:
    section.add "VersionId", valid_603859
  var valid_603860 = formData.getOrDefault("TypeName")
  valid_603860 = validateParameter(valid_603860, JString, required = false,
                                 default = nil)
  if valid_603860 != nil:
    section.add "TypeName", valid_603860
  var valid_603861 = formData.getOrDefault("Type")
  valid_603861 = validateParameter(valid_603861, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603861 != nil:
    section.add "Type", valid_603861
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603862: Call_PostSetTypeDefaultVersion_603846; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  let valid = call_603862.validator(path, query, header, formData, body)
  let scheme = call_603862.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603862.url(scheme.get, call_603862.host, call_603862.base,
                         call_603862.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603862, url, valid)

proc call*(call_603863: Call_PostSetTypeDefaultVersion_603846; Arn: string = "";
          VersionId: string = ""; TypeName: string = ""; Type: string = "RESOURCE";
          Action: string = "SetTypeDefaultVersion"; Version: string = "2010-05-15"): Recallable =
  ## postSetTypeDefaultVersion
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : The kind of type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603864 = newJObject()
  var formData_603865 = newJObject()
  add(formData_603865, "Arn", newJString(Arn))
  add(formData_603865, "VersionId", newJString(VersionId))
  add(formData_603865, "TypeName", newJString(TypeName))
  add(formData_603865, "Type", newJString(Type))
  add(query_603864, "Action", newJString(Action))
  add(query_603864, "Version", newJString(Version))
  result = call_603863.call(nil, query_603864, nil, formData_603865, nil)

var postSetTypeDefaultVersion* = Call_PostSetTypeDefaultVersion_603846(
    name: "postSetTypeDefaultVersion", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetTypeDefaultVersion",
    validator: validate_PostSetTypeDefaultVersion_603847, base: "/",
    url: url_PostSetTypeDefaultVersion_603848,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetTypeDefaultVersion_603827 = ref object of OpenApiRestCall_601389
proc url_GetSetTypeDefaultVersion_603829(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetTypeDefaultVersion_603828(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TypeName: JString
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: JString
  ##       : The kind of type.
  ##   VersionId: JString
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   Arn: JString
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  section = newJObject()
  var valid_603830 = query.getOrDefault("TypeName")
  valid_603830 = validateParameter(valid_603830, JString, required = false,
                                 default = nil)
  if valid_603830 != nil:
    section.add "TypeName", valid_603830
  var valid_603831 = query.getOrDefault("Type")
  valid_603831 = validateParameter(valid_603831, JString, required = false,
                                 default = newJString("RESOURCE"))
  if valid_603831 != nil:
    section.add "Type", valid_603831
  var valid_603832 = query.getOrDefault("VersionId")
  valid_603832 = validateParameter(valid_603832, JString, required = false,
                                 default = nil)
  if valid_603832 != nil:
    section.add "VersionId", valid_603832
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603833 = query.getOrDefault("Action")
  valid_603833 = validateParameter(valid_603833, JString, required = true,
                                 default = newJString("SetTypeDefaultVersion"))
  if valid_603833 != nil:
    section.add "Action", valid_603833
  var valid_603834 = query.getOrDefault("Version")
  valid_603834 = validateParameter(valid_603834, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603834 != nil:
    section.add "Version", valid_603834
  var valid_603835 = query.getOrDefault("Arn")
  valid_603835 = validateParameter(valid_603835, JString, required = false,
                                 default = nil)
  if valid_603835 != nil:
    section.add "Arn", valid_603835
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603836 = header.getOrDefault("X-Amz-Signature")
  valid_603836 = validateParameter(valid_603836, JString, required = false,
                                 default = nil)
  if valid_603836 != nil:
    section.add "X-Amz-Signature", valid_603836
  var valid_603837 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603837 = validateParameter(valid_603837, JString, required = false,
                                 default = nil)
  if valid_603837 != nil:
    section.add "X-Amz-Content-Sha256", valid_603837
  var valid_603838 = header.getOrDefault("X-Amz-Date")
  valid_603838 = validateParameter(valid_603838, JString, required = false,
                                 default = nil)
  if valid_603838 != nil:
    section.add "X-Amz-Date", valid_603838
  var valid_603839 = header.getOrDefault("X-Amz-Credential")
  valid_603839 = validateParameter(valid_603839, JString, required = false,
                                 default = nil)
  if valid_603839 != nil:
    section.add "X-Amz-Credential", valid_603839
  var valid_603840 = header.getOrDefault("X-Amz-Security-Token")
  valid_603840 = validateParameter(valid_603840, JString, required = false,
                                 default = nil)
  if valid_603840 != nil:
    section.add "X-Amz-Security-Token", valid_603840
  var valid_603841 = header.getOrDefault("X-Amz-Algorithm")
  valid_603841 = validateParameter(valid_603841, JString, required = false,
                                 default = nil)
  if valid_603841 != nil:
    section.add "X-Amz-Algorithm", valid_603841
  var valid_603842 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603842 = validateParameter(valid_603842, JString, required = false,
                                 default = nil)
  if valid_603842 != nil:
    section.add "X-Amz-SignedHeaders", valid_603842
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603843: Call_GetSetTypeDefaultVersion_603827; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ## 
  let valid = call_603843.validator(path, query, header, formData, body)
  let scheme = call_603843.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603843.url(scheme.get, call_603843.host, call_603843.base,
                         call_603843.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603843, url, valid)

proc call*(call_603844: Call_GetSetTypeDefaultVersion_603827;
          TypeName: string = ""; Type: string = "RESOURCE"; VersionId: string = "";
          Action: string = "SetTypeDefaultVersion"; Version: string = "2010-05-15";
          Arn: string = ""): Recallable =
  ## getSetTypeDefaultVersion
  ## Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
  ##   TypeName: string
  ##           : <p>The name of the type.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  ##   Type: string
  ##       : The kind of type.
  ##   VersionId: string
  ##            : The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   Arn: string
  ##      : <p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify <code>TypeName</code> or <code>Arn</code>.</p>
  var query_603845 = newJObject()
  add(query_603845, "TypeName", newJString(TypeName))
  add(query_603845, "Type", newJString(Type))
  add(query_603845, "VersionId", newJString(VersionId))
  add(query_603845, "Action", newJString(Action))
  add(query_603845, "Version", newJString(Version))
  add(query_603845, "Arn", newJString(Arn))
  result = call_603844.call(nil, query_603845, nil, nil, nil)

var getSetTypeDefaultVersion* = Call_GetSetTypeDefaultVersion_603827(
    name: "getSetTypeDefaultVersion", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetTypeDefaultVersion",
    validator: validate_GetSetTypeDefaultVersion_603828, base: "/",
    url: url_GetSetTypeDefaultVersion_603829, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSignalResource_603885 = ref object of OpenApiRestCall_601389
proc url_PostSignalResource_603887(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSignalResource_603886(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603888 = query.getOrDefault("Action")
  valid_603888 = validateParameter(valid_603888, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_603888 != nil:
    section.add "Action", valid_603888
  var valid_603889 = query.getOrDefault("Version")
  valid_603889 = validateParameter(valid_603889, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603889 != nil:
    section.add "Version", valid_603889
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603890 = header.getOrDefault("X-Amz-Signature")
  valid_603890 = validateParameter(valid_603890, JString, required = false,
                                 default = nil)
  if valid_603890 != nil:
    section.add "X-Amz-Signature", valid_603890
  var valid_603891 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603891 = validateParameter(valid_603891, JString, required = false,
                                 default = nil)
  if valid_603891 != nil:
    section.add "X-Amz-Content-Sha256", valid_603891
  var valid_603892 = header.getOrDefault("X-Amz-Date")
  valid_603892 = validateParameter(valid_603892, JString, required = false,
                                 default = nil)
  if valid_603892 != nil:
    section.add "X-Amz-Date", valid_603892
  var valid_603893 = header.getOrDefault("X-Amz-Credential")
  valid_603893 = validateParameter(valid_603893, JString, required = false,
                                 default = nil)
  if valid_603893 != nil:
    section.add "X-Amz-Credential", valid_603893
  var valid_603894 = header.getOrDefault("X-Amz-Security-Token")
  valid_603894 = validateParameter(valid_603894, JString, required = false,
                                 default = nil)
  if valid_603894 != nil:
    section.add "X-Amz-Security-Token", valid_603894
  var valid_603895 = header.getOrDefault("X-Amz-Algorithm")
  valid_603895 = validateParameter(valid_603895, JString, required = false,
                                 default = nil)
  if valid_603895 != nil:
    section.add "X-Amz-Algorithm", valid_603895
  var valid_603896 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603896 = validateParameter(valid_603896, JString, required = false,
                                 default = nil)
  if valid_603896 != nil:
    section.add "X-Amz-SignedHeaders", valid_603896
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603897 = formData.getOrDefault("StackName")
  valid_603897 = validateParameter(valid_603897, JString, required = true,
                                 default = nil)
  if valid_603897 != nil:
    section.add "StackName", valid_603897
  var valid_603898 = formData.getOrDefault("UniqueId")
  valid_603898 = validateParameter(valid_603898, JString, required = true,
                                 default = nil)
  if valid_603898 != nil:
    section.add "UniqueId", valid_603898
  var valid_603899 = formData.getOrDefault("Status")
  valid_603899 = validateParameter(valid_603899, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_603899 != nil:
    section.add "Status", valid_603899
  var valid_603900 = formData.getOrDefault("LogicalResourceId")
  valid_603900 = validateParameter(valid_603900, JString, required = true,
                                 default = nil)
  if valid_603900 != nil:
    section.add "LogicalResourceId", valid_603900
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603901: Call_PostSignalResource_603885; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_603901.validator(path, query, header, formData, body)
  let scheme = call_603901.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603901.url(scheme.get, call_603901.host, call_603901.base,
                         call_603901.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603901, url, valid)

proc call*(call_603902: Call_PostSignalResource_603885; StackName: string;
          UniqueId: string; LogicalResourceId: string;
          Action: string = "SignalResource"; Status: string = "SUCCESS";
          Version: string = "2010-05-15"): Recallable =
  ## postSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   Action: string (required)
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  var query_603903 = newJObject()
  var formData_603904 = newJObject()
  add(formData_603904, "StackName", newJString(StackName))
  add(query_603903, "Action", newJString(Action))
  add(formData_603904, "UniqueId", newJString(UniqueId))
  add(formData_603904, "Status", newJString(Status))
  add(query_603903, "Version", newJString(Version))
  add(formData_603904, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_603902.call(nil, query_603903, nil, formData_603904, nil)

var postSignalResource* = Call_PostSignalResource_603885(
    name: "postSignalResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SignalResource",
    validator: validate_PostSignalResource_603886, base: "/",
    url: url_PostSignalResource_603887, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSignalResource_603866 = ref object of OpenApiRestCall_601389
proc url_GetSignalResource_603868(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSignalResource_603867(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Status` field"
  var valid_603869 = query.getOrDefault("Status")
  valid_603869 = validateParameter(valid_603869, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_603869 != nil:
    section.add "Status", valid_603869
  var valid_603870 = query.getOrDefault("StackName")
  valid_603870 = validateParameter(valid_603870, JString, required = true,
                                 default = nil)
  if valid_603870 != nil:
    section.add "StackName", valid_603870
  var valid_603871 = query.getOrDefault("UniqueId")
  valid_603871 = validateParameter(valid_603871, JString, required = true,
                                 default = nil)
  if valid_603871 != nil:
    section.add "UniqueId", valid_603871
  var valid_603872 = query.getOrDefault("Action")
  valid_603872 = validateParameter(valid_603872, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_603872 != nil:
    section.add "Action", valid_603872
  var valid_603873 = query.getOrDefault("Version")
  valid_603873 = validateParameter(valid_603873, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603873 != nil:
    section.add "Version", valid_603873
  var valid_603874 = query.getOrDefault("LogicalResourceId")
  valid_603874 = validateParameter(valid_603874, JString, required = true,
                                 default = nil)
  if valid_603874 != nil:
    section.add "LogicalResourceId", valid_603874
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603875 = header.getOrDefault("X-Amz-Signature")
  valid_603875 = validateParameter(valid_603875, JString, required = false,
                                 default = nil)
  if valid_603875 != nil:
    section.add "X-Amz-Signature", valid_603875
  var valid_603876 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603876 = validateParameter(valid_603876, JString, required = false,
                                 default = nil)
  if valid_603876 != nil:
    section.add "X-Amz-Content-Sha256", valid_603876
  var valid_603877 = header.getOrDefault("X-Amz-Date")
  valid_603877 = validateParameter(valid_603877, JString, required = false,
                                 default = nil)
  if valid_603877 != nil:
    section.add "X-Amz-Date", valid_603877
  var valid_603878 = header.getOrDefault("X-Amz-Credential")
  valid_603878 = validateParameter(valid_603878, JString, required = false,
                                 default = nil)
  if valid_603878 != nil:
    section.add "X-Amz-Credential", valid_603878
  var valid_603879 = header.getOrDefault("X-Amz-Security-Token")
  valid_603879 = validateParameter(valid_603879, JString, required = false,
                                 default = nil)
  if valid_603879 != nil:
    section.add "X-Amz-Security-Token", valid_603879
  var valid_603880 = header.getOrDefault("X-Amz-Algorithm")
  valid_603880 = validateParameter(valid_603880, JString, required = false,
                                 default = nil)
  if valid_603880 != nil:
    section.add "X-Amz-Algorithm", valid_603880
  var valid_603881 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603881 = validateParameter(valid_603881, JString, required = false,
                                 default = nil)
  if valid_603881 != nil:
    section.add "X-Amz-SignedHeaders", valid_603881
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603882: Call_GetSignalResource_603866; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_603882.validator(path, query, header, formData, body)
  let scheme = call_603882.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603882.url(scheme.get, call_603882.host, call_603882.base,
                         call_603882.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603882, url, valid)

proc call*(call_603883: Call_GetSignalResource_603866; StackName: string;
          UniqueId: string; LogicalResourceId: string; Status: string = "SUCCESS";
          Action: string = "SignalResource"; Version: string = "2010-05-15"): Recallable =
  ## getSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  var query_603884 = newJObject()
  add(query_603884, "Status", newJString(Status))
  add(query_603884, "StackName", newJString(StackName))
  add(query_603884, "UniqueId", newJString(UniqueId))
  add(query_603884, "Action", newJString(Action))
  add(query_603884, "Version", newJString(Version))
  add(query_603884, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_603883.call(nil, query_603884, nil, nil, nil)

var getSignalResource* = Call_GetSignalResource_603866(name: "getSignalResource",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SignalResource", validator: validate_GetSignalResource_603867,
    base: "/", url: url_GetSignalResource_603868,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostStopStackSetOperation_603922 = ref object of OpenApiRestCall_601389
proc url_PostStopStackSetOperation_603924(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostStopStackSetOperation_603923(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603925 = query.getOrDefault("Action")
  valid_603925 = validateParameter(valid_603925, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_603925 != nil:
    section.add "Action", valid_603925
  var valid_603926 = query.getOrDefault("Version")
  valid_603926 = validateParameter(valid_603926, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603926 != nil:
    section.add "Version", valid_603926
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603927 = header.getOrDefault("X-Amz-Signature")
  valid_603927 = validateParameter(valid_603927, JString, required = false,
                                 default = nil)
  if valid_603927 != nil:
    section.add "X-Amz-Signature", valid_603927
  var valid_603928 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603928 = validateParameter(valid_603928, JString, required = false,
                                 default = nil)
  if valid_603928 != nil:
    section.add "X-Amz-Content-Sha256", valid_603928
  var valid_603929 = header.getOrDefault("X-Amz-Date")
  valid_603929 = validateParameter(valid_603929, JString, required = false,
                                 default = nil)
  if valid_603929 != nil:
    section.add "X-Amz-Date", valid_603929
  var valid_603930 = header.getOrDefault("X-Amz-Credential")
  valid_603930 = validateParameter(valid_603930, JString, required = false,
                                 default = nil)
  if valid_603930 != nil:
    section.add "X-Amz-Credential", valid_603930
  var valid_603931 = header.getOrDefault("X-Amz-Security-Token")
  valid_603931 = validateParameter(valid_603931, JString, required = false,
                                 default = nil)
  if valid_603931 != nil:
    section.add "X-Amz-Security-Token", valid_603931
  var valid_603932 = header.getOrDefault("X-Amz-Algorithm")
  valid_603932 = validateParameter(valid_603932, JString, required = false,
                                 default = nil)
  if valid_603932 != nil:
    section.add "X-Amz-Algorithm", valid_603932
  var valid_603933 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603933 = validateParameter(valid_603933, JString, required = false,
                                 default = nil)
  if valid_603933 != nil:
    section.add "X-Amz-SignedHeaders", valid_603933
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_603934 = formData.getOrDefault("OperationId")
  valid_603934 = validateParameter(valid_603934, JString, required = true,
                                 default = nil)
  if valid_603934 != nil:
    section.add "OperationId", valid_603934
  var valid_603935 = formData.getOrDefault("StackSetName")
  valid_603935 = validateParameter(valid_603935, JString, required = true,
                                 default = nil)
  if valid_603935 != nil:
    section.add "StackSetName", valid_603935
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603936: Call_PostStopStackSetOperation_603922; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_603936.validator(path, query, header, formData, body)
  let scheme = call_603936.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603936.url(scheme.get, call_603936.host, call_603936.base,
                         call_603936.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603936, url, valid)

proc call*(call_603937: Call_PostStopStackSetOperation_603922; OperationId: string;
          StackSetName: string; Action: string = "StopStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603938 = newJObject()
  var formData_603939 = newJObject()
  add(formData_603939, "OperationId", newJString(OperationId))
  add(formData_603939, "StackSetName", newJString(StackSetName))
  add(query_603938, "Action", newJString(Action))
  add(query_603938, "Version", newJString(Version))
  result = call_603937.call(nil, query_603938, nil, formData_603939, nil)

var postStopStackSetOperation* = Call_PostStopStackSetOperation_603922(
    name: "postStopStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_PostStopStackSetOperation_603923, base: "/",
    url: url_PostStopStackSetOperation_603924,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetStopStackSetOperation_603905 = ref object of OpenApiRestCall_601389
proc url_GetStopStackSetOperation_603907(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetStopStackSetOperation_603906(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_603908 = query.getOrDefault("OperationId")
  valid_603908 = validateParameter(valid_603908, JString, required = true,
                                 default = nil)
  if valid_603908 != nil:
    section.add "OperationId", valid_603908
  var valid_603909 = query.getOrDefault("StackSetName")
  valid_603909 = validateParameter(valid_603909, JString, required = true,
                                 default = nil)
  if valid_603909 != nil:
    section.add "StackSetName", valid_603909
  var valid_603910 = query.getOrDefault("Action")
  valid_603910 = validateParameter(valid_603910, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_603910 != nil:
    section.add "Action", valid_603910
  var valid_603911 = query.getOrDefault("Version")
  valid_603911 = validateParameter(valid_603911, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603911 != nil:
    section.add "Version", valid_603911
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603912 = header.getOrDefault("X-Amz-Signature")
  valid_603912 = validateParameter(valid_603912, JString, required = false,
                                 default = nil)
  if valid_603912 != nil:
    section.add "X-Amz-Signature", valid_603912
  var valid_603913 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603913 = validateParameter(valid_603913, JString, required = false,
                                 default = nil)
  if valid_603913 != nil:
    section.add "X-Amz-Content-Sha256", valid_603913
  var valid_603914 = header.getOrDefault("X-Amz-Date")
  valid_603914 = validateParameter(valid_603914, JString, required = false,
                                 default = nil)
  if valid_603914 != nil:
    section.add "X-Amz-Date", valid_603914
  var valid_603915 = header.getOrDefault("X-Amz-Credential")
  valid_603915 = validateParameter(valid_603915, JString, required = false,
                                 default = nil)
  if valid_603915 != nil:
    section.add "X-Amz-Credential", valid_603915
  var valid_603916 = header.getOrDefault("X-Amz-Security-Token")
  valid_603916 = validateParameter(valid_603916, JString, required = false,
                                 default = nil)
  if valid_603916 != nil:
    section.add "X-Amz-Security-Token", valid_603916
  var valid_603917 = header.getOrDefault("X-Amz-Algorithm")
  valid_603917 = validateParameter(valid_603917, JString, required = false,
                                 default = nil)
  if valid_603917 != nil:
    section.add "X-Amz-Algorithm", valid_603917
  var valid_603918 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603918 = validateParameter(valid_603918, JString, required = false,
                                 default = nil)
  if valid_603918 != nil:
    section.add "X-Amz-SignedHeaders", valid_603918
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603919: Call_GetStopStackSetOperation_603905; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_603919.validator(path, query, header, formData, body)
  let scheme = call_603919.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603919.url(scheme.get, call_603919.host, call_603919.base,
                         call_603919.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603919, url, valid)

proc call*(call_603920: Call_GetStopStackSetOperation_603905; OperationId: string;
          StackSetName: string; Action: string = "StopStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_603921 = newJObject()
  add(query_603921, "OperationId", newJString(OperationId))
  add(query_603921, "StackSetName", newJString(StackSetName))
  add(query_603921, "Action", newJString(Action))
  add(query_603921, "Version", newJString(Version))
  result = call_603920.call(nil, query_603921, nil, nil, nil)

var getStopStackSetOperation* = Call_GetStopStackSetOperation_603905(
    name: "getStopStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_GetStopStackSetOperation_603906, base: "/",
    url: url_GetStopStackSetOperation_603907, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStack_603972 = ref object of OpenApiRestCall_601389
proc url_PostUpdateStack_603974(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStack_603973(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_603975 = query.getOrDefault("Action")
  valid_603975 = validateParameter(valid_603975, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_603975 != nil:
    section.add "Action", valid_603975
  var valid_603976 = query.getOrDefault("Version")
  valid_603976 = validateParameter(valid_603976, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603976 != nil:
    section.add "Version", valid_603976
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603977 = header.getOrDefault("X-Amz-Signature")
  valid_603977 = validateParameter(valid_603977, JString, required = false,
                                 default = nil)
  if valid_603977 != nil:
    section.add "X-Amz-Signature", valid_603977
  var valid_603978 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603978 = validateParameter(valid_603978, JString, required = false,
                                 default = nil)
  if valid_603978 != nil:
    section.add "X-Amz-Content-Sha256", valid_603978
  var valid_603979 = header.getOrDefault("X-Amz-Date")
  valid_603979 = validateParameter(valid_603979, JString, required = false,
                                 default = nil)
  if valid_603979 != nil:
    section.add "X-Amz-Date", valid_603979
  var valid_603980 = header.getOrDefault("X-Amz-Credential")
  valid_603980 = validateParameter(valid_603980, JString, required = false,
                                 default = nil)
  if valid_603980 != nil:
    section.add "X-Amz-Credential", valid_603980
  var valid_603981 = header.getOrDefault("X-Amz-Security-Token")
  valid_603981 = validateParameter(valid_603981, JString, required = false,
                                 default = nil)
  if valid_603981 != nil:
    section.add "X-Amz-Security-Token", valid_603981
  var valid_603982 = header.getOrDefault("X-Amz-Algorithm")
  valid_603982 = validateParameter(valid_603982, JString, required = false,
                                 default = nil)
  if valid_603982 != nil:
    section.add "X-Amz-Algorithm", valid_603982
  var valid_603983 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603983 = validateParameter(valid_603983, JString, required = false,
                                 default = nil)
  if valid_603983 != nil:
    section.add "X-Amz-SignedHeaders", valid_603983
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  var valid_603984 = formData.getOrDefault("StackPolicyDuringUpdateURL")
  valid_603984 = validateParameter(valid_603984, JString, required = false,
                                 default = nil)
  if valid_603984 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_603984
  var valid_603985 = formData.getOrDefault("StackPolicyBody")
  valid_603985 = validateParameter(valid_603985, JString, required = false,
                                 default = nil)
  if valid_603985 != nil:
    section.add "StackPolicyBody", valid_603985
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_603986 = formData.getOrDefault("StackName")
  valid_603986 = validateParameter(valid_603986, JString, required = true,
                                 default = nil)
  if valid_603986 != nil:
    section.add "StackName", valid_603986
  var valid_603987 = formData.getOrDefault("UsePreviousTemplate")
  valid_603987 = validateParameter(valid_603987, JBool, required = false, default = nil)
  if valid_603987 != nil:
    section.add "UsePreviousTemplate", valid_603987
  var valid_603988 = formData.getOrDefault("StackPolicyURL")
  valid_603988 = validateParameter(valid_603988, JString, required = false,
                                 default = nil)
  if valid_603988 != nil:
    section.add "StackPolicyURL", valid_603988
  var valid_603989 = formData.getOrDefault("TemplateURL")
  valid_603989 = validateParameter(valid_603989, JString, required = false,
                                 default = nil)
  if valid_603989 != nil:
    section.add "TemplateURL", valid_603989
  var valid_603990 = formData.getOrDefault("TemplateBody")
  valid_603990 = validateParameter(valid_603990, JString, required = false,
                                 default = nil)
  if valid_603990 != nil:
    section.add "TemplateBody", valid_603990
  var valid_603991 = formData.getOrDefault("RoleARN")
  valid_603991 = validateParameter(valid_603991, JString, required = false,
                                 default = nil)
  if valid_603991 != nil:
    section.add "RoleARN", valid_603991
  var valid_603992 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_603992 = validateParameter(valid_603992, JArray, required = false,
                                 default = nil)
  if valid_603992 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_603992
  var valid_603993 = formData.getOrDefault("NotificationARNs")
  valid_603993 = validateParameter(valid_603993, JArray, required = false,
                                 default = nil)
  if valid_603993 != nil:
    section.add "NotificationARNs", valid_603993
  var valid_603994 = formData.getOrDefault("ClientRequestToken")
  valid_603994 = validateParameter(valid_603994, JString, required = false,
                                 default = nil)
  if valid_603994 != nil:
    section.add "ClientRequestToken", valid_603994
  var valid_603995 = formData.getOrDefault("Capabilities")
  valid_603995 = validateParameter(valid_603995, JArray, required = false,
                                 default = nil)
  if valid_603995 != nil:
    section.add "Capabilities", valid_603995
  var valid_603996 = formData.getOrDefault("Tags")
  valid_603996 = validateParameter(valid_603996, JArray, required = false,
                                 default = nil)
  if valid_603996 != nil:
    section.add "Tags", valid_603996
  var valid_603997 = formData.getOrDefault("Parameters")
  valid_603997 = validateParameter(valid_603997, JArray, required = false,
                                 default = nil)
  if valid_603997 != nil:
    section.add "Parameters", valid_603997
  var valid_603998 = formData.getOrDefault("ResourceTypes")
  valid_603998 = validateParameter(valid_603998, JArray, required = false,
                                 default = nil)
  if valid_603998 != nil:
    section.add "ResourceTypes", valid_603998
  var valid_603999 = formData.getOrDefault("StackPolicyDuringUpdateBody")
  valid_603999 = validateParameter(valid_603999, JString, required = false,
                                 default = nil)
  if valid_603999 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_603999
  var valid_604000 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_604000 = validateParameter(valid_604000, JString, required = false,
                                 default = nil)
  if valid_604000 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_604000
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604001: Call_PostUpdateStack_603972; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_604001.validator(path, query, header, formData, body)
  let scheme = call_604001.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604001.url(scheme.get, call_604001.host, call_604001.base,
                         call_604001.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604001, url, valid)

proc call*(call_604002: Call_PostUpdateStack_603972; StackName: string;
          StackPolicyDuringUpdateURL: string = ""; StackPolicyBody: string = "";
          UsePreviousTemplate: bool = false; StackPolicyURL: string = "";
          TemplateURL: string = ""; TemplateBody: string = ""; RoleARN: string = "";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; ClientRequestToken: string = "";
          Action: string = "UpdateStack"; Capabilities: JsonNode = nil;
          Tags: JsonNode = nil; Parameters: JsonNode = nil;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          StackPolicyDuringUpdateBody: string = "";
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_604003 = newJObject()
  var formData_604004 = newJObject()
  add(formData_604004, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(formData_604004, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_604004, "StackName", newJString(StackName))
  add(formData_604004, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(formData_604004, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_604004, "TemplateURL", newJString(TemplateURL))
  add(formData_604004, "TemplateBody", newJString(TemplateBody))
  add(formData_604004, "RoleARN", newJString(RoleARN))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_604004.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_604004.add "NotificationARNs", NotificationARNs
  add(formData_604004, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_604003, "Action", newJString(Action))
  if Capabilities != nil:
    formData_604004.add "Capabilities", Capabilities
  if Tags != nil:
    formData_604004.add "Tags", Tags
  if Parameters != nil:
    formData_604004.add "Parameters", Parameters
  if ResourceTypes != nil:
    formData_604004.add "ResourceTypes", ResourceTypes
  add(query_604003, "Version", newJString(Version))
  add(formData_604004, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(formData_604004, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_604002.call(nil, query_604003, nil, formData_604004, nil)

var postUpdateStack* = Call_PostUpdateStack_603972(name: "postUpdateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_PostUpdateStack_603973,
    base: "/", url: url_PostUpdateStack_603974, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStack_603940 = ref object of OpenApiRestCall_601389
proc url_GetUpdateStack_603942(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStack_603941(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   Action: JString (required)
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_603943 = query.getOrDefault("ResourceTypes")
  valid_603943 = validateParameter(valid_603943, JArray, required = false,
                                 default = nil)
  if valid_603943 != nil:
    section.add "ResourceTypes", valid_603943
  var valid_603944 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_603944 = validateParameter(valid_603944, JString, required = false,
                                 default = nil)
  if valid_603944 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_603944
  var valid_603945 = query.getOrDefault("Parameters")
  valid_603945 = validateParameter(valid_603945, JArray, required = false,
                                 default = nil)
  if valid_603945 != nil:
    section.add "Parameters", valid_603945
  var valid_603946 = query.getOrDefault("Tags")
  valid_603946 = validateParameter(valid_603946, JArray, required = false,
                                 default = nil)
  if valid_603946 != nil:
    section.add "Tags", valid_603946
  var valid_603947 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_603947 = validateParameter(valid_603947, JArray, required = false,
                                 default = nil)
  if valid_603947 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_603947
  var valid_603948 = query.getOrDefault("StackPolicyDuringUpdateURL")
  valid_603948 = validateParameter(valid_603948, JString, required = false,
                                 default = nil)
  if valid_603948 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_603948
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_603949 = query.getOrDefault("StackName")
  valid_603949 = validateParameter(valid_603949, JString, required = true,
                                 default = nil)
  if valid_603949 != nil:
    section.add "StackName", valid_603949
  var valid_603950 = query.getOrDefault("UsePreviousTemplate")
  valid_603950 = validateParameter(valid_603950, JBool, required = false, default = nil)
  if valid_603950 != nil:
    section.add "UsePreviousTemplate", valid_603950
  var valid_603951 = query.getOrDefault("StackPolicyBody")
  valid_603951 = validateParameter(valid_603951, JString, required = false,
                                 default = nil)
  if valid_603951 != nil:
    section.add "StackPolicyBody", valid_603951
  var valid_603952 = query.getOrDefault("TemplateBody")
  valid_603952 = validateParameter(valid_603952, JString, required = false,
                                 default = nil)
  if valid_603952 != nil:
    section.add "TemplateBody", valid_603952
  var valid_603953 = query.getOrDefault("NotificationARNs")
  valid_603953 = validateParameter(valid_603953, JArray, required = false,
                                 default = nil)
  if valid_603953 != nil:
    section.add "NotificationARNs", valid_603953
  var valid_603954 = query.getOrDefault("StackPolicyURL")
  valid_603954 = validateParameter(valid_603954, JString, required = false,
                                 default = nil)
  if valid_603954 != nil:
    section.add "StackPolicyURL", valid_603954
  var valid_603955 = query.getOrDefault("Action")
  valid_603955 = validateParameter(valid_603955, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_603955 != nil:
    section.add "Action", valid_603955
  var valid_603956 = query.getOrDefault("StackPolicyDuringUpdateBody")
  valid_603956 = validateParameter(valid_603956, JString, required = false,
                                 default = nil)
  if valid_603956 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_603956
  var valid_603957 = query.getOrDefault("ClientRequestToken")
  valid_603957 = validateParameter(valid_603957, JString, required = false,
                                 default = nil)
  if valid_603957 != nil:
    section.add "ClientRequestToken", valid_603957
  var valid_603958 = query.getOrDefault("TemplateURL")
  valid_603958 = validateParameter(valid_603958, JString, required = false,
                                 default = nil)
  if valid_603958 != nil:
    section.add "TemplateURL", valid_603958
  var valid_603959 = query.getOrDefault("Version")
  valid_603959 = validateParameter(valid_603959, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_603959 != nil:
    section.add "Version", valid_603959
  var valid_603960 = query.getOrDefault("Capabilities")
  valid_603960 = validateParameter(valid_603960, JArray, required = false,
                                 default = nil)
  if valid_603960 != nil:
    section.add "Capabilities", valid_603960
  var valid_603961 = query.getOrDefault("RoleARN")
  valid_603961 = validateParameter(valid_603961, JString, required = false,
                                 default = nil)
  if valid_603961 != nil:
    section.add "RoleARN", valid_603961
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_603962 = header.getOrDefault("X-Amz-Signature")
  valid_603962 = validateParameter(valid_603962, JString, required = false,
                                 default = nil)
  if valid_603962 != nil:
    section.add "X-Amz-Signature", valid_603962
  var valid_603963 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_603963 = validateParameter(valid_603963, JString, required = false,
                                 default = nil)
  if valid_603963 != nil:
    section.add "X-Amz-Content-Sha256", valid_603963
  var valid_603964 = header.getOrDefault("X-Amz-Date")
  valid_603964 = validateParameter(valid_603964, JString, required = false,
                                 default = nil)
  if valid_603964 != nil:
    section.add "X-Amz-Date", valid_603964
  var valid_603965 = header.getOrDefault("X-Amz-Credential")
  valid_603965 = validateParameter(valid_603965, JString, required = false,
                                 default = nil)
  if valid_603965 != nil:
    section.add "X-Amz-Credential", valid_603965
  var valid_603966 = header.getOrDefault("X-Amz-Security-Token")
  valid_603966 = validateParameter(valid_603966, JString, required = false,
                                 default = nil)
  if valid_603966 != nil:
    section.add "X-Amz-Security-Token", valid_603966
  var valid_603967 = header.getOrDefault("X-Amz-Algorithm")
  valid_603967 = validateParameter(valid_603967, JString, required = false,
                                 default = nil)
  if valid_603967 != nil:
    section.add "X-Amz-Algorithm", valid_603967
  var valid_603968 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_603968 = validateParameter(valid_603968, JString, required = false,
                                 default = nil)
  if valid_603968 != nil:
    section.add "X-Amz-SignedHeaders", valid_603968
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_603969: Call_GetUpdateStack_603940; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_603969.validator(path, query, header, formData, body)
  let scheme = call_603969.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_603969.url(scheme.get, call_603969.host, call_603969.base,
                         call_603969.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_603969, url, valid)

proc call*(call_603970: Call_GetUpdateStack_603940; StackName: string;
          ResourceTypes: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          StackPolicyDuringUpdateURL: string = "";
          UsePreviousTemplate: bool = false; StackPolicyBody: string = "";
          TemplateBody: string = ""; NotificationARNs: JsonNode = nil;
          StackPolicyURL: string = ""; Action: string = "UpdateStack";
          StackPolicyDuringUpdateBody: string = ""; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil; RoleARN: string = ""): Recallable =
  ## getUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   Action: string (required)
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_603971 = newJObject()
  if ResourceTypes != nil:
    query_603971.add "ResourceTypes", ResourceTypes
  add(query_603971, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_603971.add "Parameters", Parameters
  if Tags != nil:
    query_603971.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_603971.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_603971, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(query_603971, "StackName", newJString(StackName))
  add(query_603971, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_603971, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_603971, "TemplateBody", newJString(TemplateBody))
  if NotificationARNs != nil:
    query_603971.add "NotificationARNs", NotificationARNs
  add(query_603971, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_603971, "Action", newJString(Action))
  add(query_603971, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(query_603971, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_603971, "TemplateURL", newJString(TemplateURL))
  add(query_603971, "Version", newJString(Version))
  if Capabilities != nil:
    query_603971.add "Capabilities", Capabilities
  add(query_603971, "RoleARN", newJString(RoleARN))
  result = call_603970.call(nil, query_603971, nil, nil, nil)

var getUpdateStack* = Call_GetUpdateStack_603940(name: "getUpdateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_GetUpdateStack_603941,
    base: "/", url: url_GetUpdateStack_603942, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackInstances_604030 = ref object of OpenApiRestCall_601389
proc url_PostUpdateStackInstances_604032(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackInstances_604031(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604033 = query.getOrDefault("Action")
  valid_604033 = validateParameter(valid_604033, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_604033 != nil:
    section.add "Action", valid_604033
  var valid_604034 = query.getOrDefault("Version")
  valid_604034 = validateParameter(valid_604034, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604034 != nil:
    section.add "Version", valid_604034
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604035 = header.getOrDefault("X-Amz-Signature")
  valid_604035 = validateParameter(valid_604035, JString, required = false,
                                 default = nil)
  if valid_604035 != nil:
    section.add "X-Amz-Signature", valid_604035
  var valid_604036 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604036 = validateParameter(valid_604036, JString, required = false,
                                 default = nil)
  if valid_604036 != nil:
    section.add "X-Amz-Content-Sha256", valid_604036
  var valid_604037 = header.getOrDefault("X-Amz-Date")
  valid_604037 = validateParameter(valid_604037, JString, required = false,
                                 default = nil)
  if valid_604037 != nil:
    section.add "X-Amz-Date", valid_604037
  var valid_604038 = header.getOrDefault("X-Amz-Credential")
  valid_604038 = validateParameter(valid_604038, JString, required = false,
                                 default = nil)
  if valid_604038 != nil:
    section.add "X-Amz-Credential", valid_604038
  var valid_604039 = header.getOrDefault("X-Amz-Security-Token")
  valid_604039 = validateParameter(valid_604039, JString, required = false,
                                 default = nil)
  if valid_604039 != nil:
    section.add "X-Amz-Security-Token", valid_604039
  var valid_604040 = header.getOrDefault("X-Amz-Algorithm")
  valid_604040 = validateParameter(valid_604040, JString, required = false,
                                 default = nil)
  if valid_604040 != nil:
    section.add "X-Amz-Algorithm", valid_604040
  var valid_604041 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604041 = validateParameter(valid_604041, JString, required = false,
                                 default = nil)
  if valid_604041 != nil:
    section.add "X-Amz-SignedHeaders", valid_604041
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_604042 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604042 = validateParameter(valid_604042, JString, required = false,
                                 default = nil)
  if valid_604042 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604042
  var valid_604043 = formData.getOrDefault("OperationId")
  valid_604043 = validateParameter(valid_604043, JString, required = false,
                                 default = nil)
  if valid_604043 != nil:
    section.add "OperationId", valid_604043
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604044 = formData.getOrDefault("StackSetName")
  valid_604044 = validateParameter(valid_604044, JString, required = true,
                                 default = nil)
  if valid_604044 != nil:
    section.add "StackSetName", valid_604044
  var valid_604045 = formData.getOrDefault("ParameterOverrides")
  valid_604045 = validateParameter(valid_604045, JArray, required = false,
                                 default = nil)
  if valid_604045 != nil:
    section.add "ParameterOverrides", valid_604045
  var valid_604046 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_604046 = validateParameter(valid_604046, JArray, required = false,
                                 default = nil)
  if valid_604046 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604046
  var valid_604047 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604047 = validateParameter(valid_604047, JString, required = false,
                                 default = nil)
  if valid_604047 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604047
  var valid_604048 = formData.getOrDefault("Accounts")
  valid_604048 = validateParameter(valid_604048, JArray, required = true, default = nil)
  if valid_604048 != nil:
    section.add "Accounts", valid_604048
  var valid_604049 = formData.getOrDefault("Regions")
  valid_604049 = validateParameter(valid_604049, JArray, required = true, default = nil)
  if valid_604049 != nil:
    section.add "Regions", valid_604049
  var valid_604050 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604050 = validateParameter(valid_604050, JString, required = false,
                                 default = nil)
  if valid_604050 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604050
  var valid_604051 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604051 = validateParameter(valid_604051, JString, required = false,
                                 default = nil)
  if valid_604051 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604051
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604052: Call_PostUpdateStackInstances_604030; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_604052.validator(path, query, header, formData, body)
  let scheme = call_604052.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604052.url(scheme.get, call_604052.host, call_604052.base,
                         call_604052.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604052, url, valid)

proc call*(call_604053: Call_PostUpdateStackInstances_604030; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; ParameterOverrides: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "UpdateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_604054 = newJObject()
  var formData_604055 = newJObject()
  add(formData_604055, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_604055, "OperationId", newJString(OperationId))
  add(formData_604055, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    formData_604055.add "ParameterOverrides", ParameterOverrides
  if OperationPreferencesRegionOrder != nil:
    formData_604055.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_604055, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_604055.add "Accounts", Accounts
  if Regions != nil:
    formData_604055.add "Regions", Regions
  add(query_604054, "Action", newJString(Action))
  add(formData_604055, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_604054, "Version", newJString(Version))
  add(formData_604055, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_604053.call(nil, query_604054, nil, formData_604055, nil)

var postUpdateStackInstances* = Call_PostUpdateStackInstances_604030(
    name: "postUpdateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_PostUpdateStackInstances_604031, base: "/",
    url: url_PostUpdateStackInstances_604032, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackInstances_604005 = ref object of OpenApiRestCall_601389
proc url_GetUpdateStackInstances_604007(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackInstances_604006(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_604008 = query.getOrDefault("OperationId")
  valid_604008 = validateParameter(valid_604008, JString, required = false,
                                 default = nil)
  if valid_604008 != nil:
    section.add "OperationId", valid_604008
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_604009 = query.getOrDefault("StackSetName")
  valid_604009 = validateParameter(valid_604009, JString, required = true,
                                 default = nil)
  if valid_604009 != nil:
    section.add "StackSetName", valid_604009
  var valid_604010 = query.getOrDefault("ParameterOverrides")
  valid_604010 = validateParameter(valid_604010, JArray, required = false,
                                 default = nil)
  if valid_604010 != nil:
    section.add "ParameterOverrides", valid_604010
  var valid_604011 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604011 = validateParameter(valid_604011, JString, required = false,
                                 default = nil)
  if valid_604011 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604011
  var valid_604012 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604012 = validateParameter(valid_604012, JString, required = false,
                                 default = nil)
  if valid_604012 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604012
  var valid_604013 = query.getOrDefault("Action")
  valid_604013 = validateParameter(valid_604013, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_604013 != nil:
    section.add "Action", valid_604013
  var valid_604014 = query.getOrDefault("Regions")
  valid_604014 = validateParameter(valid_604014, JArray, required = true, default = nil)
  if valid_604014 != nil:
    section.add "Regions", valid_604014
  var valid_604015 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_604015 = validateParameter(valid_604015, JArray, required = false,
                                 default = nil)
  if valid_604015 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604015
  var valid_604016 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604016 = validateParameter(valid_604016, JString, required = false,
                                 default = nil)
  if valid_604016 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604016
  var valid_604017 = query.getOrDefault("Accounts")
  valid_604017 = validateParameter(valid_604017, JArray, required = true, default = nil)
  if valid_604017 != nil:
    section.add "Accounts", valid_604017
  var valid_604018 = query.getOrDefault("Version")
  valid_604018 = validateParameter(valid_604018, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604018 != nil:
    section.add "Version", valid_604018
  var valid_604019 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604019 = validateParameter(valid_604019, JString, required = false,
                                 default = nil)
  if valid_604019 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604019
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604020 = header.getOrDefault("X-Amz-Signature")
  valid_604020 = validateParameter(valid_604020, JString, required = false,
                                 default = nil)
  if valid_604020 != nil:
    section.add "X-Amz-Signature", valid_604020
  var valid_604021 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604021 = validateParameter(valid_604021, JString, required = false,
                                 default = nil)
  if valid_604021 != nil:
    section.add "X-Amz-Content-Sha256", valid_604021
  var valid_604022 = header.getOrDefault("X-Amz-Date")
  valid_604022 = validateParameter(valid_604022, JString, required = false,
                                 default = nil)
  if valid_604022 != nil:
    section.add "X-Amz-Date", valid_604022
  var valid_604023 = header.getOrDefault("X-Amz-Credential")
  valid_604023 = validateParameter(valid_604023, JString, required = false,
                                 default = nil)
  if valid_604023 != nil:
    section.add "X-Amz-Credential", valid_604023
  var valid_604024 = header.getOrDefault("X-Amz-Security-Token")
  valid_604024 = validateParameter(valid_604024, JString, required = false,
                                 default = nil)
  if valid_604024 != nil:
    section.add "X-Amz-Security-Token", valid_604024
  var valid_604025 = header.getOrDefault("X-Amz-Algorithm")
  valid_604025 = validateParameter(valid_604025, JString, required = false,
                                 default = nil)
  if valid_604025 != nil:
    section.add "X-Amz-Algorithm", valid_604025
  var valid_604026 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604026 = validateParameter(valid_604026, JString, required = false,
                                 default = nil)
  if valid_604026 != nil:
    section.add "X-Amz-SignedHeaders", valid_604026
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604027: Call_GetUpdateStackInstances_604005; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_604027.validator(path, query, header, formData, body)
  let scheme = call_604027.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604027.url(scheme.get, call_604027.host, call_604027.base,
                         call_604027.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604027, url, valid)

proc call*(call_604028: Call_GetUpdateStackInstances_604005; StackSetName: string;
          Regions: JsonNode; Accounts: JsonNode; OperationId: string = "";
          ParameterOverrides: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "UpdateStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_604029 = newJObject()
  add(query_604029, "OperationId", newJString(OperationId))
  add(query_604029, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    query_604029.add "ParameterOverrides", ParameterOverrides
  add(query_604029, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_604029, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_604029, "Action", newJString(Action))
  if Regions != nil:
    query_604029.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_604029.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_604029, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_604029.add "Accounts", Accounts
  add(query_604029, "Version", newJString(Version))
  add(query_604029, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_604028.call(nil, query_604029, nil, nil, nil)

var getUpdateStackInstances* = Call_GetUpdateStackInstances_604005(
    name: "getUpdateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_GetUpdateStackInstances_604006, base: "/",
    url: url_GetUpdateStackInstances_604007, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackSet_604089 = ref object of OpenApiRestCall_601389
proc url_PostUpdateStackSet_604091(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackSet_604090(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604092 = query.getOrDefault("Action")
  valid_604092 = validateParameter(valid_604092, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_604092 != nil:
    section.add "Action", valid_604092
  var valid_604093 = query.getOrDefault("Version")
  valid_604093 = validateParameter(valid_604093, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604093 != nil:
    section.add "Version", valid_604093
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604094 = header.getOrDefault("X-Amz-Signature")
  valid_604094 = validateParameter(valid_604094, JString, required = false,
                                 default = nil)
  if valid_604094 != nil:
    section.add "X-Amz-Signature", valid_604094
  var valid_604095 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604095 = validateParameter(valid_604095, JString, required = false,
                                 default = nil)
  if valid_604095 != nil:
    section.add "X-Amz-Content-Sha256", valid_604095
  var valid_604096 = header.getOrDefault("X-Amz-Date")
  valid_604096 = validateParameter(valid_604096, JString, required = false,
                                 default = nil)
  if valid_604096 != nil:
    section.add "X-Amz-Date", valid_604096
  var valid_604097 = header.getOrDefault("X-Amz-Credential")
  valid_604097 = validateParameter(valid_604097, JString, required = false,
                                 default = nil)
  if valid_604097 != nil:
    section.add "X-Amz-Credential", valid_604097
  var valid_604098 = header.getOrDefault("X-Amz-Security-Token")
  valid_604098 = validateParameter(valid_604098, JString, required = false,
                                 default = nil)
  if valid_604098 != nil:
    section.add "X-Amz-Security-Token", valid_604098
  var valid_604099 = header.getOrDefault("X-Amz-Algorithm")
  valid_604099 = validateParameter(valid_604099, JString, required = false,
                                 default = nil)
  if valid_604099 != nil:
    section.add "X-Amz-Algorithm", valid_604099
  var valid_604100 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604100 = validateParameter(valid_604100, JString, required = false,
                                 default = nil)
  if valid_604100 != nil:
    section.add "X-Amz-SignedHeaders", valid_604100
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_604101 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604101 = validateParameter(valid_604101, JString, required = false,
                                 default = nil)
  if valid_604101 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604101
  var valid_604102 = formData.getOrDefault("OperationId")
  valid_604102 = validateParameter(valid_604102, JString, required = false,
                                 default = nil)
  if valid_604102 != nil:
    section.add "OperationId", valid_604102
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_604103 = formData.getOrDefault("StackSetName")
  valid_604103 = validateParameter(valid_604103, JString, required = true,
                                 default = nil)
  if valid_604103 != nil:
    section.add "StackSetName", valid_604103
  var valid_604104 = formData.getOrDefault("AdministrationRoleARN")
  valid_604104 = validateParameter(valid_604104, JString, required = false,
                                 default = nil)
  if valid_604104 != nil:
    section.add "AdministrationRoleARN", valid_604104
  var valid_604105 = formData.getOrDefault("Description")
  valid_604105 = validateParameter(valid_604105, JString, required = false,
                                 default = nil)
  if valid_604105 != nil:
    section.add "Description", valid_604105
  var valid_604106 = formData.getOrDefault("UsePreviousTemplate")
  valid_604106 = validateParameter(valid_604106, JBool, required = false, default = nil)
  if valid_604106 != nil:
    section.add "UsePreviousTemplate", valid_604106
  var valid_604107 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_604107 = validateParameter(valid_604107, JArray, required = false,
                                 default = nil)
  if valid_604107 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604107
  var valid_604108 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604108 = validateParameter(valid_604108, JString, required = false,
                                 default = nil)
  if valid_604108 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604108
  var valid_604109 = formData.getOrDefault("Accounts")
  valid_604109 = validateParameter(valid_604109, JArray, required = false,
                                 default = nil)
  if valid_604109 != nil:
    section.add "Accounts", valid_604109
  var valid_604110 = formData.getOrDefault("TemplateURL")
  valid_604110 = validateParameter(valid_604110, JString, required = false,
                                 default = nil)
  if valid_604110 != nil:
    section.add "TemplateURL", valid_604110
  var valid_604111 = formData.getOrDefault("Regions")
  valid_604111 = validateParameter(valid_604111, JArray, required = false,
                                 default = nil)
  if valid_604111 != nil:
    section.add "Regions", valid_604111
  var valid_604112 = formData.getOrDefault("TemplateBody")
  valid_604112 = validateParameter(valid_604112, JString, required = false,
                                 default = nil)
  if valid_604112 != nil:
    section.add "TemplateBody", valid_604112
  var valid_604113 = formData.getOrDefault("Capabilities")
  valid_604113 = validateParameter(valid_604113, JArray, required = false,
                                 default = nil)
  if valid_604113 != nil:
    section.add "Capabilities", valid_604113
  var valid_604114 = formData.getOrDefault("Tags")
  valid_604114 = validateParameter(valid_604114, JArray, required = false,
                                 default = nil)
  if valid_604114 != nil:
    section.add "Tags", valid_604114
  var valid_604115 = formData.getOrDefault("Parameters")
  valid_604115 = validateParameter(valid_604115, JArray, required = false,
                                 default = nil)
  if valid_604115 != nil:
    section.add "Parameters", valid_604115
  var valid_604116 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604116 = validateParameter(valid_604116, JString, required = false,
                                 default = nil)
  if valid_604116 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604116
  var valid_604117 = formData.getOrDefault("ExecutionRoleName")
  valid_604117 = validateParameter(valid_604117, JString, required = false,
                                 default = nil)
  if valid_604117 != nil:
    section.add "ExecutionRoleName", valid_604117
  var valid_604118 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604118 = validateParameter(valid_604118, JString, required = false,
                                 default = nil)
  if valid_604118 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604118
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604119: Call_PostUpdateStackSet_604089; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_604119.validator(path, query, header, formData, body)
  let scheme = call_604119.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604119.url(scheme.get, call_604119.host, call_604119.base,
                         call_604119.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604119, url, valid)

proc call*(call_604120: Call_PostUpdateStackSet_604089; StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; AdministrationRoleARN: string = "";
          Description: string = ""; UsePreviousTemplate: bool = false;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Accounts: JsonNode = nil; TemplateURL: string = ""; Regions: JsonNode = nil;
          TemplateBody: string = ""; Action: string = "UpdateStackSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15"; ExecutionRoleName: string = "";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_604121 = newJObject()
  var formData_604122 = newJObject()
  add(formData_604122, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_604122, "OperationId", newJString(OperationId))
  add(formData_604122, "StackSetName", newJString(StackSetName))
  add(formData_604122, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_604122, "Description", newJString(Description))
  add(formData_604122, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if OperationPreferencesRegionOrder != nil:
    formData_604122.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_604122, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_604122.add "Accounts", Accounts
  add(formData_604122, "TemplateURL", newJString(TemplateURL))
  if Regions != nil:
    formData_604122.add "Regions", Regions
  add(formData_604122, "TemplateBody", newJString(TemplateBody))
  add(query_604121, "Action", newJString(Action))
  if Capabilities != nil:
    formData_604122.add "Capabilities", Capabilities
  if Tags != nil:
    formData_604122.add "Tags", Tags
  if Parameters != nil:
    formData_604122.add "Parameters", Parameters
  add(formData_604122, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_604121, "Version", newJString(Version))
  add(formData_604122, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(formData_604122, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_604120.call(nil, query_604121, nil, formData_604122, nil)

var postUpdateStackSet* = Call_PostUpdateStackSet_604089(
    name: "postUpdateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackSet",
    validator: validate_PostUpdateStackSet_604090, base: "/",
    url: url_PostUpdateStackSet_604091, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackSet_604056 = ref object of OpenApiRestCall_601389
proc url_GetUpdateStackSet_604058(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackSet_604057(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_604059 = query.getOrDefault("OperationId")
  valid_604059 = validateParameter(valid_604059, JString, required = false,
                                 default = nil)
  if valid_604059 != nil:
    section.add "OperationId", valid_604059
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_604060 = query.getOrDefault("StackSetName")
  valid_604060 = validateParameter(valid_604060, JString, required = true,
                                 default = nil)
  if valid_604060 != nil:
    section.add "StackSetName", valid_604060
  var valid_604061 = query.getOrDefault("Parameters")
  valid_604061 = validateParameter(valid_604061, JArray, required = false,
                                 default = nil)
  if valid_604061 != nil:
    section.add "Parameters", valid_604061
  var valid_604062 = query.getOrDefault("Tags")
  valid_604062 = validateParameter(valid_604062, JArray, required = false,
                                 default = nil)
  if valid_604062 != nil:
    section.add "Tags", valid_604062
  var valid_604063 = query.getOrDefault("ExecutionRoleName")
  valid_604063 = validateParameter(valid_604063, JString, required = false,
                                 default = nil)
  if valid_604063 != nil:
    section.add "ExecutionRoleName", valid_604063
  var valid_604064 = query.getOrDefault("UsePreviousTemplate")
  valid_604064 = validateParameter(valid_604064, JBool, required = false, default = nil)
  if valid_604064 != nil:
    section.add "UsePreviousTemplate", valid_604064
  var valid_604065 = query.getOrDefault("TemplateBody")
  valid_604065 = validateParameter(valid_604065, JString, required = false,
                                 default = nil)
  if valid_604065 != nil:
    section.add "TemplateBody", valid_604065
  var valid_604066 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_604066 = validateParameter(valid_604066, JString, required = false,
                                 default = nil)
  if valid_604066 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_604066
  var valid_604067 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_604067 = validateParameter(valid_604067, JString, required = false,
                                 default = nil)
  if valid_604067 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_604067
  var valid_604068 = query.getOrDefault("AdministrationRoleARN")
  valid_604068 = validateParameter(valid_604068, JString, required = false,
                                 default = nil)
  if valid_604068 != nil:
    section.add "AdministrationRoleARN", valid_604068
  var valid_604069 = query.getOrDefault("Action")
  valid_604069 = validateParameter(valid_604069, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_604069 != nil:
    section.add "Action", valid_604069
  var valid_604070 = query.getOrDefault("Description")
  valid_604070 = validateParameter(valid_604070, JString, required = false,
                                 default = nil)
  if valid_604070 != nil:
    section.add "Description", valid_604070
  var valid_604071 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_604071 = validateParameter(valid_604071, JArray, required = false,
                                 default = nil)
  if valid_604071 != nil:
    section.add "OperationPreferences.RegionOrder", valid_604071
  var valid_604072 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_604072 = validateParameter(valid_604072, JString, required = false,
                                 default = nil)
  if valid_604072 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_604072
  var valid_604073 = query.getOrDefault("Regions")
  valid_604073 = validateParameter(valid_604073, JArray, required = false,
                                 default = nil)
  if valid_604073 != nil:
    section.add "Regions", valid_604073
  var valid_604074 = query.getOrDefault("TemplateURL")
  valid_604074 = validateParameter(valid_604074, JString, required = false,
                                 default = nil)
  if valid_604074 != nil:
    section.add "TemplateURL", valid_604074
  var valid_604075 = query.getOrDefault("Accounts")
  valid_604075 = validateParameter(valid_604075, JArray, required = false,
                                 default = nil)
  if valid_604075 != nil:
    section.add "Accounts", valid_604075
  var valid_604076 = query.getOrDefault("Version")
  valid_604076 = validateParameter(valid_604076, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604076 != nil:
    section.add "Version", valid_604076
  var valid_604077 = query.getOrDefault("Capabilities")
  valid_604077 = validateParameter(valid_604077, JArray, required = false,
                                 default = nil)
  if valid_604077 != nil:
    section.add "Capabilities", valid_604077
  var valid_604078 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_604078 = validateParameter(valid_604078, JString, required = false,
                                 default = nil)
  if valid_604078 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_604078
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604079 = header.getOrDefault("X-Amz-Signature")
  valid_604079 = validateParameter(valid_604079, JString, required = false,
                                 default = nil)
  if valid_604079 != nil:
    section.add "X-Amz-Signature", valid_604079
  var valid_604080 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604080 = validateParameter(valid_604080, JString, required = false,
                                 default = nil)
  if valid_604080 != nil:
    section.add "X-Amz-Content-Sha256", valid_604080
  var valid_604081 = header.getOrDefault("X-Amz-Date")
  valid_604081 = validateParameter(valid_604081, JString, required = false,
                                 default = nil)
  if valid_604081 != nil:
    section.add "X-Amz-Date", valid_604081
  var valid_604082 = header.getOrDefault("X-Amz-Credential")
  valid_604082 = validateParameter(valid_604082, JString, required = false,
                                 default = nil)
  if valid_604082 != nil:
    section.add "X-Amz-Credential", valid_604082
  var valid_604083 = header.getOrDefault("X-Amz-Security-Token")
  valid_604083 = validateParameter(valid_604083, JString, required = false,
                                 default = nil)
  if valid_604083 != nil:
    section.add "X-Amz-Security-Token", valid_604083
  var valid_604084 = header.getOrDefault("X-Amz-Algorithm")
  valid_604084 = validateParameter(valid_604084, JString, required = false,
                                 default = nil)
  if valid_604084 != nil:
    section.add "X-Amz-Algorithm", valid_604084
  var valid_604085 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604085 = validateParameter(valid_604085, JString, required = false,
                                 default = nil)
  if valid_604085 != nil:
    section.add "X-Amz-SignedHeaders", valid_604085
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604086: Call_GetUpdateStackSet_604056; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_604086.validator(path, query, header, formData, body)
  let scheme = call_604086.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604086.url(scheme.get, call_604086.host, call_604086.base,
                         call_604086.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604086, url, valid)

proc call*(call_604087: Call_GetUpdateStackSet_604056; StackSetName: string;
          OperationId: string = ""; Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ExecutionRoleName: string = ""; UsePreviousTemplate: bool = false;
          TemplateBody: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          AdministrationRoleARN: string = ""; Action: string = "UpdateStackSet";
          Description: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Regions: JsonNode = nil; TemplateURL: string = ""; Accounts: JsonNode = nil;
          Version: string = "2010-05-15"; Capabilities: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Action: string (required)
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_604088 = newJObject()
  add(query_604088, "OperationId", newJString(OperationId))
  add(query_604088, "StackSetName", newJString(StackSetName))
  if Parameters != nil:
    query_604088.add "Parameters", Parameters
  if Tags != nil:
    query_604088.add "Tags", Tags
  add(query_604088, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_604088, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_604088, "TemplateBody", newJString(TemplateBody))
  add(query_604088, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_604088, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_604088, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_604088, "Action", newJString(Action))
  add(query_604088, "Description", newJString(Description))
  if OperationPreferencesRegionOrder != nil:
    query_604088.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_604088, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Regions != nil:
    query_604088.add "Regions", Regions
  add(query_604088, "TemplateURL", newJString(TemplateURL))
  if Accounts != nil:
    query_604088.add "Accounts", Accounts
  add(query_604088, "Version", newJString(Version))
  if Capabilities != nil:
    query_604088.add "Capabilities", Capabilities
  add(query_604088, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_604087.call(nil, query_604088, nil, nil, nil)

var getUpdateStackSet* = Call_GetUpdateStackSet_604056(name: "getUpdateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStackSet", validator: validate_GetUpdateStackSet_604057,
    base: "/", url: url_GetUpdateStackSet_604058,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateTerminationProtection_604140 = ref object of OpenApiRestCall_601389
proc url_PostUpdateTerminationProtection_604142(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateTerminationProtection_604141(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604143 = query.getOrDefault("Action")
  valid_604143 = validateParameter(valid_604143, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_604143 != nil:
    section.add "Action", valid_604143
  var valid_604144 = query.getOrDefault("Version")
  valid_604144 = validateParameter(valid_604144, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604144 != nil:
    section.add "Version", valid_604144
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604145 = header.getOrDefault("X-Amz-Signature")
  valid_604145 = validateParameter(valid_604145, JString, required = false,
                                 default = nil)
  if valid_604145 != nil:
    section.add "X-Amz-Signature", valid_604145
  var valid_604146 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604146 = validateParameter(valid_604146, JString, required = false,
                                 default = nil)
  if valid_604146 != nil:
    section.add "X-Amz-Content-Sha256", valid_604146
  var valid_604147 = header.getOrDefault("X-Amz-Date")
  valid_604147 = validateParameter(valid_604147, JString, required = false,
                                 default = nil)
  if valid_604147 != nil:
    section.add "X-Amz-Date", valid_604147
  var valid_604148 = header.getOrDefault("X-Amz-Credential")
  valid_604148 = validateParameter(valid_604148, JString, required = false,
                                 default = nil)
  if valid_604148 != nil:
    section.add "X-Amz-Credential", valid_604148
  var valid_604149 = header.getOrDefault("X-Amz-Security-Token")
  valid_604149 = validateParameter(valid_604149, JString, required = false,
                                 default = nil)
  if valid_604149 != nil:
    section.add "X-Amz-Security-Token", valid_604149
  var valid_604150 = header.getOrDefault("X-Amz-Algorithm")
  valid_604150 = validateParameter(valid_604150, JString, required = false,
                                 default = nil)
  if valid_604150 != nil:
    section.add "X-Amz-Algorithm", valid_604150
  var valid_604151 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604151 = validateParameter(valid_604151, JString, required = false,
                                 default = nil)
  if valid_604151 != nil:
    section.add "X-Amz-SignedHeaders", valid_604151
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_604152 = formData.getOrDefault("StackName")
  valid_604152 = validateParameter(valid_604152, JString, required = true,
                                 default = nil)
  if valid_604152 != nil:
    section.add "StackName", valid_604152
  var valid_604153 = formData.getOrDefault("EnableTerminationProtection")
  valid_604153 = validateParameter(valid_604153, JBool, required = true, default = nil)
  if valid_604153 != nil:
    section.add "EnableTerminationProtection", valid_604153
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604154: Call_PostUpdateTerminationProtection_604140;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_604154.validator(path, query, header, formData, body)
  let scheme = call_604154.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604154.url(scheme.get, call_604154.host, call_604154.base,
                         call_604154.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604154, url, valid)

proc call*(call_604155: Call_PostUpdateTerminationProtection_604140;
          StackName: string; EnableTerminationProtection: bool;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## postUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604156 = newJObject()
  var formData_604157 = newJObject()
  add(formData_604157, "StackName", newJString(StackName))
  add(formData_604157, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_604156, "Action", newJString(Action))
  add(query_604156, "Version", newJString(Version))
  result = call_604155.call(nil, query_604156, nil, formData_604157, nil)

var postUpdateTerminationProtection* = Call_PostUpdateTerminationProtection_604140(
    name: "postUpdateTerminationProtection", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_PostUpdateTerminationProtection_604141, base: "/",
    url: url_PostUpdateTerminationProtection_604142,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateTerminationProtection_604123 = ref object of OpenApiRestCall_601389
proc url_GetUpdateTerminationProtection_604125(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateTerminationProtection_604124(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_604126 = query.getOrDefault("StackName")
  valid_604126 = validateParameter(valid_604126, JString, required = true,
                                 default = nil)
  if valid_604126 != nil:
    section.add "StackName", valid_604126
  var valid_604127 = query.getOrDefault("EnableTerminationProtection")
  valid_604127 = validateParameter(valid_604127, JBool, required = true, default = nil)
  if valid_604127 != nil:
    section.add "EnableTerminationProtection", valid_604127
  var valid_604128 = query.getOrDefault("Action")
  valid_604128 = validateParameter(valid_604128, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_604128 != nil:
    section.add "Action", valid_604128
  var valid_604129 = query.getOrDefault("Version")
  valid_604129 = validateParameter(valid_604129, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604129 != nil:
    section.add "Version", valid_604129
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604130 = header.getOrDefault("X-Amz-Signature")
  valid_604130 = validateParameter(valid_604130, JString, required = false,
                                 default = nil)
  if valid_604130 != nil:
    section.add "X-Amz-Signature", valid_604130
  var valid_604131 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604131 = validateParameter(valid_604131, JString, required = false,
                                 default = nil)
  if valid_604131 != nil:
    section.add "X-Amz-Content-Sha256", valid_604131
  var valid_604132 = header.getOrDefault("X-Amz-Date")
  valid_604132 = validateParameter(valid_604132, JString, required = false,
                                 default = nil)
  if valid_604132 != nil:
    section.add "X-Amz-Date", valid_604132
  var valid_604133 = header.getOrDefault("X-Amz-Credential")
  valid_604133 = validateParameter(valid_604133, JString, required = false,
                                 default = nil)
  if valid_604133 != nil:
    section.add "X-Amz-Credential", valid_604133
  var valid_604134 = header.getOrDefault("X-Amz-Security-Token")
  valid_604134 = validateParameter(valid_604134, JString, required = false,
                                 default = nil)
  if valid_604134 != nil:
    section.add "X-Amz-Security-Token", valid_604134
  var valid_604135 = header.getOrDefault("X-Amz-Algorithm")
  valid_604135 = validateParameter(valid_604135, JString, required = false,
                                 default = nil)
  if valid_604135 != nil:
    section.add "X-Amz-Algorithm", valid_604135
  var valid_604136 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604136 = validateParameter(valid_604136, JString, required = false,
                                 default = nil)
  if valid_604136 != nil:
    section.add "X-Amz-SignedHeaders", valid_604136
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604137: Call_GetUpdateTerminationProtection_604123; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_604137.validator(path, query, header, formData, body)
  let scheme = call_604137.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604137.url(scheme.get, call_604137.host, call_604137.base,
                         call_604137.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604137, url, valid)

proc call*(call_604138: Call_GetUpdateTerminationProtection_604123;
          StackName: string; EnableTerminationProtection: bool;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604139 = newJObject()
  add(query_604139, "StackName", newJString(StackName))
  add(query_604139, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_604139, "Action", newJString(Action))
  add(query_604139, "Version", newJString(Version))
  result = call_604138.call(nil, query_604139, nil, nil, nil)

var getUpdateTerminationProtection* = Call_GetUpdateTerminationProtection_604123(
    name: "getUpdateTerminationProtection", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_GetUpdateTerminationProtection_604124, base: "/",
    url: url_GetUpdateTerminationProtection_604125,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostValidateTemplate_604175 = ref object of OpenApiRestCall_601389
proc url_PostValidateTemplate_604177(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostValidateTemplate_604176(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604178 = query.getOrDefault("Action")
  valid_604178 = validateParameter(valid_604178, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_604178 != nil:
    section.add "Action", valid_604178
  var valid_604179 = query.getOrDefault("Version")
  valid_604179 = validateParameter(valid_604179, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604179 != nil:
    section.add "Version", valid_604179
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604180 = header.getOrDefault("X-Amz-Signature")
  valid_604180 = validateParameter(valid_604180, JString, required = false,
                                 default = nil)
  if valid_604180 != nil:
    section.add "X-Amz-Signature", valid_604180
  var valid_604181 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604181 = validateParameter(valid_604181, JString, required = false,
                                 default = nil)
  if valid_604181 != nil:
    section.add "X-Amz-Content-Sha256", valid_604181
  var valid_604182 = header.getOrDefault("X-Amz-Date")
  valid_604182 = validateParameter(valid_604182, JString, required = false,
                                 default = nil)
  if valid_604182 != nil:
    section.add "X-Amz-Date", valid_604182
  var valid_604183 = header.getOrDefault("X-Amz-Credential")
  valid_604183 = validateParameter(valid_604183, JString, required = false,
                                 default = nil)
  if valid_604183 != nil:
    section.add "X-Amz-Credential", valid_604183
  var valid_604184 = header.getOrDefault("X-Amz-Security-Token")
  valid_604184 = validateParameter(valid_604184, JString, required = false,
                                 default = nil)
  if valid_604184 != nil:
    section.add "X-Amz-Security-Token", valid_604184
  var valid_604185 = header.getOrDefault("X-Amz-Algorithm")
  valid_604185 = validateParameter(valid_604185, JString, required = false,
                                 default = nil)
  if valid_604185 != nil:
    section.add "X-Amz-Algorithm", valid_604185
  var valid_604186 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604186 = validateParameter(valid_604186, JString, required = false,
                                 default = nil)
  if valid_604186 != nil:
    section.add "X-Amz-SignedHeaders", valid_604186
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  section = newJObject()
  var valid_604187 = formData.getOrDefault("TemplateURL")
  valid_604187 = validateParameter(valid_604187, JString, required = false,
                                 default = nil)
  if valid_604187 != nil:
    section.add "TemplateURL", valid_604187
  var valid_604188 = formData.getOrDefault("TemplateBody")
  valid_604188 = validateParameter(valid_604188, JString, required = false,
                                 default = nil)
  if valid_604188 != nil:
    section.add "TemplateBody", valid_604188
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604189: Call_PostValidateTemplate_604175; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_604189.validator(path, query, header, formData, body)
  let scheme = call_604189.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604189.url(scheme.get, call_604189.host, call_604189.base,
                         call_604189.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604189, url, valid)

proc call*(call_604190: Call_PostValidateTemplate_604175; TemplateURL: string = "";
          TemplateBody: string = ""; Action: string = "ValidateTemplate";
          Version: string = "2010-05-15"): Recallable =
  ## postValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_604191 = newJObject()
  var formData_604192 = newJObject()
  add(formData_604192, "TemplateURL", newJString(TemplateURL))
  add(formData_604192, "TemplateBody", newJString(TemplateBody))
  add(query_604191, "Action", newJString(Action))
  add(query_604191, "Version", newJString(Version))
  result = call_604190.call(nil, query_604191, nil, formData_604192, nil)

var postValidateTemplate* = Call_PostValidateTemplate_604175(
    name: "postValidateTemplate", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_PostValidateTemplate_604176, base: "/",
    url: url_PostValidateTemplate_604177, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetValidateTemplate_604158 = ref object of OpenApiRestCall_601389
proc url_GetValidateTemplate_604160(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetValidateTemplate_604159(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_604161 = query.getOrDefault("TemplateBody")
  valid_604161 = validateParameter(valid_604161, JString, required = false,
                                 default = nil)
  if valid_604161 != nil:
    section.add "TemplateBody", valid_604161
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_604162 = query.getOrDefault("Action")
  valid_604162 = validateParameter(valid_604162, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_604162 != nil:
    section.add "Action", valid_604162
  var valid_604163 = query.getOrDefault("TemplateURL")
  valid_604163 = validateParameter(valid_604163, JString, required = false,
                                 default = nil)
  if valid_604163 != nil:
    section.add "TemplateURL", valid_604163
  var valid_604164 = query.getOrDefault("Version")
  valid_604164 = validateParameter(valid_604164, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_604164 != nil:
    section.add "Version", valid_604164
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_604165 = header.getOrDefault("X-Amz-Signature")
  valid_604165 = validateParameter(valid_604165, JString, required = false,
                                 default = nil)
  if valid_604165 != nil:
    section.add "X-Amz-Signature", valid_604165
  var valid_604166 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_604166 = validateParameter(valid_604166, JString, required = false,
                                 default = nil)
  if valid_604166 != nil:
    section.add "X-Amz-Content-Sha256", valid_604166
  var valid_604167 = header.getOrDefault("X-Amz-Date")
  valid_604167 = validateParameter(valid_604167, JString, required = false,
                                 default = nil)
  if valid_604167 != nil:
    section.add "X-Amz-Date", valid_604167
  var valid_604168 = header.getOrDefault("X-Amz-Credential")
  valid_604168 = validateParameter(valid_604168, JString, required = false,
                                 default = nil)
  if valid_604168 != nil:
    section.add "X-Amz-Credential", valid_604168
  var valid_604169 = header.getOrDefault("X-Amz-Security-Token")
  valid_604169 = validateParameter(valid_604169, JString, required = false,
                                 default = nil)
  if valid_604169 != nil:
    section.add "X-Amz-Security-Token", valid_604169
  var valid_604170 = header.getOrDefault("X-Amz-Algorithm")
  valid_604170 = validateParameter(valid_604170, JString, required = false,
                                 default = nil)
  if valid_604170 != nil:
    section.add "X-Amz-Algorithm", valid_604170
  var valid_604171 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_604171 = validateParameter(valid_604171, JString, required = false,
                                 default = nil)
  if valid_604171 != nil:
    section.add "X-Amz-SignedHeaders", valid_604171
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_604172: Call_GetValidateTemplate_604158; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_604172.validator(path, query, header, formData, body)
  let scheme = call_604172.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_604172.url(scheme.get, call_604172.host, call_604172.base,
                         call_604172.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = atozHook(call_604172, url, valid)

proc call*(call_604173: Call_GetValidateTemplate_604158; TemplateBody: string = "";
          Action: string = "ValidateTemplate"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_604174 = newJObject()
  add(query_604174, "TemplateBody", newJString(TemplateBody))
  add(query_604174, "Action", newJString(Action))
  add(query_604174, "TemplateURL", newJString(TemplateURL))
  add(query_604174, "Version", newJString(Version))
  result = call_604173.call(nil, query_604174, nil, nil, nil)

var getValidateTemplate* = Call_GetValidateTemplate_604158(
    name: "getValidateTemplate", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_GetValidateTemplate_604159, base: "/",
    url: url_GetValidateTemplate_604160, schemes: {Scheme.Https, Scheme.Http})
export
  rest

proc atozSign(recall: var Recallable; query: JsonNode; algo: SigningAlgo = SHA256) =
  let
    date = makeDateTime()
    access = os.getEnv("AWS_ACCESS_KEY_ID", "")
    secret = os.getEnv("AWS_SECRET_ACCESS_KEY", "")
    region = os.getEnv("AWS_REGION", "")
  assert secret != "", "need secret key in env"
  assert access != "", "need access key in env"
  assert region != "", "need region in env"
  var
    normal: PathNormal
    url = normalizeUrl(recall.url, query, normalize = normal)
    scheme = parseEnum[Scheme](url.scheme)
  assert scheme in awsServers, "unknown scheme `" & $scheme & "`"
  assert region in awsServers[scheme], "unknown region `" & region & "`"
  url.hostname = awsServers[scheme][region]
  case awsServiceName.toLowerAscii
  of "s3":
    normal = PathNormal.S3
  else:
    normal = PathNormal.Default
  recall.headers["Host"] = url.hostname
  recall.headers["X-Amz-Date"] = date
  let
    algo = SHA256
    scope = credentialScope(region = region, service = awsServiceName, date = date)
    request = canonicalRequest(recall.meth, $url, query, recall.headers, recall.body,
                             normalize = normal, digest = algo)
    sts = stringToSign(request.hash(algo), scope, date = date, digest = algo)
    signature = calculateSignature(secret = secret, date = date, region = region,
                                 service = awsServiceName, sts, digest = algo)
  var auth = $algo & " "
  auth &= "Credential=" & access / scope & ", "
  auth &= "SignedHeaders=" & recall.headers.signedHeaders & ", "
  auth &= "Signature=" & signature
  recall.headers["Authorization"] = auth
  recall.headers.del "Host"
  recall.url = $url

method atozHook(call: OpenApiRestCall; url: Uri; input: JsonNode): Recallable {.base.} =
  let headers = massageHeaders(input.getOrDefault("header"))
  result = newRecallable(call, url, headers, input.getOrDefault("body").getStr)
  result.atozSign(input.getOrDefault("query"), SHA256)
