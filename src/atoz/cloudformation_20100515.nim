
import
  json, options, hashes, uri, strutils, tables, rest, os, uri, strutils, httpcore, sigv4

## auto-generated via openapi macro
## title: AWS CloudFormation
## version: 2010-05-15
## termsOfService: https://aws.amazon.com/service-terms/
## license:
##     name: Apache 2.0 License
##     url: http://www.apache.org/licenses/
## 
## <fullname>AWS CloudFormation</fullname> <p>AWS CloudFormation allows you to create and manage AWS infrastructure deployments predictably and repeatedly. You can use AWS CloudFormation to leverage AWS products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly-reliable, highly scalable, cost-effective applications without creating or configuring the underlying AWS infrastructure.</p> <p>With AWS CloudFormation, you declare all of your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. AWS CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about AWS CloudFormation, see the <a href="http://aws.amazon.com/cloudformation/">AWS CloudFormation Product Page</a>.</p> <p>Amazon CloudFormation makes use of other AWS products. If you need additional technical information about a specific AWS product, you can find the product's technical documentation at <a href="https://docs.aws.amazon.com/">docs.aws.amazon.com</a>.</p>
## 
## Amazon Web Services documentation
## https://docs.aws.amazon.com/cloudformation/
type
  Scheme {.pure.} = enum
    Https = "https", Http = "http", Wss = "wss", Ws = "ws"
  ValidatorSignature = proc (query: JsonNode = nil; body: JsonNode = nil;
                          header: JsonNode = nil; path: JsonNode = nil;
                          formData: JsonNode = nil): JsonNode
  OpenApiRestCall = ref object of RestCall
    validator*: ValidatorSignature
    route*: string
    base*: string
    host*: string
    schemes*: set[Scheme]
    url*: proc (protocol: Scheme; host: string; base: string; route: string;
              path: JsonNode; query: JsonNode): Uri

  OpenApiRestCall_593389 = ref object of OpenApiRestCall
proc hash(scheme: Scheme): Hash {.used.} =
  result = hash(ord(scheme))

proc clone[T: OpenApiRestCall_593389](t: T): T {.used.} =
  result = T(name: t.name, meth: t.meth, host: t.host, base: t.base, route: t.route,
           schemes: t.schemes, validator: t.validator, url: t.url)

proc pickScheme(t: OpenApiRestCall_593389): Option[Scheme] {.used.} =
  ## select a supported scheme from a set of candidates
  for scheme in Scheme.low ..
      Scheme.high:
    if scheme notin t.schemes:
      continue
    if scheme in [Scheme.Https, Scheme.Wss]:
      when defined(ssl):
        return some(scheme)
      else:
        continue
    return some(scheme)

proc validateParameter(js: JsonNode; kind: JsonNodeKind; required: bool;
                      default: JsonNode = nil): JsonNode =
  ## ensure an input is of the correct json type and yield
  ## a suitable default value when appropriate
  if js ==
      nil:
    if default != nil:
      return validateParameter(default, kind, required = required)
  result = js
  if result ==
      nil:
    assert not required, $kind & " expected; received nil"
    if required:
      result = newJNull()
  else:
    assert js.kind ==
        kind, $kind & " expected; received " &
        $js.kind

type
  KeyVal {.used.} = tuple[key: string, val: string]
  PathTokenKind = enum
    ConstantSegment, VariableSegment
  PathToken = tuple[kind: PathTokenKind, value: string]
proc queryString(query: JsonNode): string {.used.} =
  var qs: seq[KeyVal]
  if query == nil:
    return ""
  for k, v in query.pairs:
    qs.add (key: k, val: v.getStr)
  result = encodeQuery(qs)

proc hydratePath(input: JsonNode; segments: seq[PathToken]): Option[string] {.used.} =
  ## reconstitute a path with constants and variable values taken from json
  var head: string
  if segments.len == 0:
    return some("")
  head = segments[0].value
  case segments[0].kind
  of ConstantSegment:
    discard
  of VariableSegment:
    if head notin input:
      return
    let js = input[head]
    case js.kind
    of JInt, JFloat, JNull, JBool:
      head = $js
    of JString:
      head = js.getStr
    else:
      return
  var remainder = input.hydratePath(segments[1 ..^ 1])
  if remainder.isNone:
    return
  result = some(head & remainder.get)

const
  awsServers = {Scheme.Http: {"ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com", "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com", "us-west-2": "cloudformation.us-west-2.amazonaws.com", "eu-west-2": "cloudformation.eu-west-2.amazonaws.com", "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com", "eu-central-1": "cloudformation.eu-central-1.amazonaws.com", "us-east-2": "cloudformation.us-east-2.amazonaws.com", "us-east-1": "cloudformation.us-east-1.amazonaws.com", "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn", "ap-south-1": "cloudformation.ap-south-1.amazonaws.com", "eu-north-1": "cloudformation.eu-north-1.amazonaws.com", "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com", "us-west-1": "cloudformation.us-west-1.amazonaws.com", "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com", "eu-west-3": "cloudformation.eu-west-3.amazonaws.com", "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn", "sa-east-1": "cloudformation.sa-east-1.amazonaws.com", "eu-west-1": "cloudformation.eu-west-1.amazonaws.com", "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com", "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com", "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable, Scheme.Https: {
      "ap-northeast-1": "cloudformation.ap-northeast-1.amazonaws.com",
      "ap-southeast-1": "cloudformation.ap-southeast-1.amazonaws.com",
      "us-west-2": "cloudformation.us-west-2.amazonaws.com",
      "eu-west-2": "cloudformation.eu-west-2.amazonaws.com",
      "ap-northeast-3": "cloudformation.ap-northeast-3.amazonaws.com",
      "eu-central-1": "cloudformation.eu-central-1.amazonaws.com",
      "us-east-2": "cloudformation.us-east-2.amazonaws.com",
      "us-east-1": "cloudformation.us-east-1.amazonaws.com",
      "cn-northwest-1": "cloudformation.cn-northwest-1.amazonaws.com.cn",
      "ap-south-1": "cloudformation.ap-south-1.amazonaws.com",
      "eu-north-1": "cloudformation.eu-north-1.amazonaws.com",
      "ap-northeast-2": "cloudformation.ap-northeast-2.amazonaws.com",
      "us-west-1": "cloudformation.us-west-1.amazonaws.com",
      "us-gov-east-1": "cloudformation.us-gov-east-1.amazonaws.com",
      "eu-west-3": "cloudformation.eu-west-3.amazonaws.com",
      "cn-north-1": "cloudformation.cn-north-1.amazonaws.com.cn",
      "sa-east-1": "cloudformation.sa-east-1.amazonaws.com",
      "eu-west-1": "cloudformation.eu-west-1.amazonaws.com",
      "us-gov-west-1": "cloudformation.us-gov-west-1.amazonaws.com",
      "ap-southeast-2": "cloudformation.ap-southeast-2.amazonaws.com",
      "ca-central-1": "cloudformation.ca-central-1.amazonaws.com"}.toTable}.toTable
const
  awsServiceName = "cloudformation"
method hook(call: OpenApiRestCall; url: Uri; input: JsonNode): Recallable {.base.}
type
  Call_PostCancelUpdateStack_593999 = ref object of OpenApiRestCall_593389
proc url_PostCancelUpdateStack_594001(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCancelUpdateStack_594000(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594002 = query.getOrDefault("Action")
  valid_594002 = validateParameter(valid_594002, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_594002 != nil:
    section.add "Action", valid_594002
  var valid_594003 = query.getOrDefault("Version")
  valid_594003 = validateParameter(valid_594003, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594003 != nil:
    section.add "Version", valid_594003
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594004 = header.getOrDefault("X-Amz-Signature")
  valid_594004 = validateParameter(valid_594004, JString, required = false,
                                 default = nil)
  if valid_594004 != nil:
    section.add "X-Amz-Signature", valid_594004
  var valid_594005 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594005 = validateParameter(valid_594005, JString, required = false,
                                 default = nil)
  if valid_594005 != nil:
    section.add "X-Amz-Content-Sha256", valid_594005
  var valid_594006 = header.getOrDefault("X-Amz-Date")
  valid_594006 = validateParameter(valid_594006, JString, required = false,
                                 default = nil)
  if valid_594006 != nil:
    section.add "X-Amz-Date", valid_594006
  var valid_594007 = header.getOrDefault("X-Amz-Credential")
  valid_594007 = validateParameter(valid_594007, JString, required = false,
                                 default = nil)
  if valid_594007 != nil:
    section.add "X-Amz-Credential", valid_594007
  var valid_594008 = header.getOrDefault("X-Amz-Security-Token")
  valid_594008 = validateParameter(valid_594008, JString, required = false,
                                 default = nil)
  if valid_594008 != nil:
    section.add "X-Amz-Security-Token", valid_594008
  var valid_594009 = header.getOrDefault("X-Amz-Algorithm")
  valid_594009 = validateParameter(valid_594009, JString, required = false,
                                 default = nil)
  if valid_594009 != nil:
    section.add "X-Amz-Algorithm", valid_594009
  var valid_594010 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594010 = validateParameter(valid_594010, JString, required = false,
                                 default = nil)
  if valid_594010 != nil:
    section.add "X-Amz-SignedHeaders", valid_594010
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594011 = formData.getOrDefault("StackName")
  valid_594011 = validateParameter(valid_594011, JString, required = true,
                                 default = nil)
  if valid_594011 != nil:
    section.add "StackName", valid_594011
  var valid_594012 = formData.getOrDefault("ClientRequestToken")
  valid_594012 = validateParameter(valid_594012, JString, required = false,
                                 default = nil)
  if valid_594012 != nil:
    section.add "ClientRequestToken", valid_594012
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594013: Call_PostCancelUpdateStack_593999; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_594013.validator(path, query, header, formData, body)
  let scheme = call_594013.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594013.url(scheme.get, call_594013.host, call_594013.base,
                         call_594013.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594013, url, valid)

proc call*(call_594014: Call_PostCancelUpdateStack_593999; StackName: string;
          ClientRequestToken: string = ""; Action: string = "CancelUpdateStack";
          Version: string = "2010-05-15"): Recallable =
  ## postCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594015 = newJObject()
  var formData_594016 = newJObject()
  add(formData_594016, "StackName", newJString(StackName))
  add(formData_594016, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594015, "Action", newJString(Action))
  add(query_594015, "Version", newJString(Version))
  result = call_594014.call(nil, query_594015, nil, formData_594016, nil)

var postCancelUpdateStack* = Call_PostCancelUpdateStack_593999(
    name: "postCancelUpdateStack", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_PostCancelUpdateStack_594000, base: "/",
    url: url_PostCancelUpdateStack_594001, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCancelUpdateStack_593727 = ref object of OpenApiRestCall_593389
proc url_GetCancelUpdateStack_593729(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCancelUpdateStack_593728(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_593841 = query.getOrDefault("StackName")
  valid_593841 = validateParameter(valid_593841, JString, required = true,
                                 default = nil)
  if valid_593841 != nil:
    section.add "StackName", valid_593841
  var valid_593855 = query.getOrDefault("Action")
  valid_593855 = validateParameter(valid_593855, JString, required = true,
                                 default = newJString("CancelUpdateStack"))
  if valid_593855 != nil:
    section.add "Action", valid_593855
  var valid_593856 = query.getOrDefault("ClientRequestToken")
  valid_593856 = validateParameter(valid_593856, JString, required = false,
                                 default = nil)
  if valid_593856 != nil:
    section.add "ClientRequestToken", valid_593856
  var valid_593857 = query.getOrDefault("Version")
  valid_593857 = validateParameter(valid_593857, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_593857 != nil:
    section.add "Version", valid_593857
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_593858 = header.getOrDefault("X-Amz-Signature")
  valid_593858 = validateParameter(valid_593858, JString, required = false,
                                 default = nil)
  if valid_593858 != nil:
    section.add "X-Amz-Signature", valid_593858
  var valid_593859 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_593859 = validateParameter(valid_593859, JString, required = false,
                                 default = nil)
  if valid_593859 != nil:
    section.add "X-Amz-Content-Sha256", valid_593859
  var valid_593860 = header.getOrDefault("X-Amz-Date")
  valid_593860 = validateParameter(valid_593860, JString, required = false,
                                 default = nil)
  if valid_593860 != nil:
    section.add "X-Amz-Date", valid_593860
  var valid_593861 = header.getOrDefault("X-Amz-Credential")
  valid_593861 = validateParameter(valid_593861, JString, required = false,
                                 default = nil)
  if valid_593861 != nil:
    section.add "X-Amz-Credential", valid_593861
  var valid_593862 = header.getOrDefault("X-Amz-Security-Token")
  valid_593862 = validateParameter(valid_593862, JString, required = false,
                                 default = nil)
  if valid_593862 != nil:
    section.add "X-Amz-Security-Token", valid_593862
  var valid_593863 = header.getOrDefault("X-Amz-Algorithm")
  valid_593863 = validateParameter(valid_593863, JString, required = false,
                                 default = nil)
  if valid_593863 != nil:
    section.add "X-Amz-Algorithm", valid_593863
  var valid_593864 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_593864 = validateParameter(valid_593864, JString, required = false,
                                 default = nil)
  if valid_593864 != nil:
    section.add "X-Amz-SignedHeaders", valid_593864
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_593887: Call_GetCancelUpdateStack_593727; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ## 
  let valid = call_593887.validator(path, query, header, formData, body)
  let scheme = call_593887.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_593887.url(scheme.get, call_593887.host, call_593887.base,
                         call_593887.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_593887, url, valid)

proc call*(call_593958: Call_GetCancelUpdateStack_593727; StackName: string;
          Action: string = "CancelUpdateStack"; ClientRequestToken: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getCancelUpdateStack
  ## <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  var query_593959 = newJObject()
  add(query_593959, "StackName", newJString(StackName))
  add(query_593959, "Action", newJString(Action))
  add(query_593959, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_593959, "Version", newJString(Version))
  result = call_593958.call(nil, query_593959, nil, nil, nil)

var getCancelUpdateStack* = Call_GetCancelUpdateStack_593727(
    name: "getCancelUpdateStack", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CancelUpdateStack",
    validator: validate_GetCancelUpdateStack_593728, base: "/",
    url: url_GetCancelUpdateStack_593729, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostContinueUpdateRollback_594036 = ref object of OpenApiRestCall_593389
proc url_PostContinueUpdateRollback_594038(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostContinueUpdateRollback_594037(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594039 = query.getOrDefault("Action")
  valid_594039 = validateParameter(valid_594039, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_594039 != nil:
    section.add "Action", valid_594039
  var valid_594040 = query.getOrDefault("Version")
  valid_594040 = validateParameter(valid_594040, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594040 != nil:
    section.add "Version", valid_594040
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594041 = header.getOrDefault("X-Amz-Signature")
  valid_594041 = validateParameter(valid_594041, JString, required = false,
                                 default = nil)
  if valid_594041 != nil:
    section.add "X-Amz-Signature", valid_594041
  var valid_594042 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594042 = validateParameter(valid_594042, JString, required = false,
                                 default = nil)
  if valid_594042 != nil:
    section.add "X-Amz-Content-Sha256", valid_594042
  var valid_594043 = header.getOrDefault("X-Amz-Date")
  valid_594043 = validateParameter(valid_594043, JString, required = false,
                                 default = nil)
  if valid_594043 != nil:
    section.add "X-Amz-Date", valid_594043
  var valid_594044 = header.getOrDefault("X-Amz-Credential")
  valid_594044 = validateParameter(valid_594044, JString, required = false,
                                 default = nil)
  if valid_594044 != nil:
    section.add "X-Amz-Credential", valid_594044
  var valid_594045 = header.getOrDefault("X-Amz-Security-Token")
  valid_594045 = validateParameter(valid_594045, JString, required = false,
                                 default = nil)
  if valid_594045 != nil:
    section.add "X-Amz-Security-Token", valid_594045
  var valid_594046 = header.getOrDefault("X-Amz-Algorithm")
  valid_594046 = validateParameter(valid_594046, JString, required = false,
                                 default = nil)
  if valid_594046 != nil:
    section.add "X-Amz-Algorithm", valid_594046
  var valid_594047 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594047 = validateParameter(valid_594047, JString, required = false,
                                 default = nil)
  if valid_594047 != nil:
    section.add "X-Amz-SignedHeaders", valid_594047
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594048 = formData.getOrDefault("StackName")
  valid_594048 = validateParameter(valid_594048, JString, required = true,
                                 default = nil)
  if valid_594048 != nil:
    section.add "StackName", valid_594048
  var valid_594049 = formData.getOrDefault("RoleARN")
  valid_594049 = validateParameter(valid_594049, JString, required = false,
                                 default = nil)
  if valid_594049 != nil:
    section.add "RoleARN", valid_594049
  var valid_594050 = formData.getOrDefault("ClientRequestToken")
  valid_594050 = validateParameter(valid_594050, JString, required = false,
                                 default = nil)
  if valid_594050 != nil:
    section.add "ClientRequestToken", valid_594050
  var valid_594051 = formData.getOrDefault("ResourcesToSkip")
  valid_594051 = validateParameter(valid_594051, JArray, required = false,
                                 default = nil)
  if valid_594051 != nil:
    section.add "ResourcesToSkip", valid_594051
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594052: Call_PostContinueUpdateRollback_594036; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_594052.validator(path, query, header, formData, body)
  let scheme = call_594052.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594052.url(scheme.get, call_594052.host, call_594052.base,
                         call_594052.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594052, url, valid)

proc call*(call_594053: Call_PostContinueUpdateRollback_594036; StackName: string;
          RoleARN: string = ""; ClientRequestToken: string = "";
          Action: string = "ContinueUpdateRollback";
          ResourcesToSkip: JsonNode = nil; Version: string = "2010-05-15"): Recallable =
  ## postContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   Version: string (required)
  var query_594054 = newJObject()
  var formData_594055 = newJObject()
  add(formData_594055, "StackName", newJString(StackName))
  add(formData_594055, "RoleARN", newJString(RoleARN))
  add(formData_594055, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594054, "Action", newJString(Action))
  if ResourcesToSkip != nil:
    formData_594055.add "ResourcesToSkip", ResourcesToSkip
  add(query_594054, "Version", newJString(Version))
  result = call_594053.call(nil, query_594054, nil, formData_594055, nil)

var postContinueUpdateRollback* = Call_PostContinueUpdateRollback_594036(
    name: "postContinueUpdateRollback", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_PostContinueUpdateRollback_594037, base: "/",
    url: url_PostContinueUpdateRollback_594038,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetContinueUpdateRollback_594017 = ref object of OpenApiRestCall_593389
proc url_GetContinueUpdateRollback_594019(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetContinueUpdateRollback_594018(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   StackName: JString (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_594020 = query.getOrDefault("ResourcesToSkip")
  valid_594020 = validateParameter(valid_594020, JArray, required = false,
                                 default = nil)
  if valid_594020 != nil:
    section.add "ResourcesToSkip", valid_594020
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594021 = query.getOrDefault("StackName")
  valid_594021 = validateParameter(valid_594021, JString, required = true,
                                 default = nil)
  if valid_594021 != nil:
    section.add "StackName", valid_594021
  var valid_594022 = query.getOrDefault("Action")
  valid_594022 = validateParameter(valid_594022, JString, required = true,
                                 default = newJString("ContinueUpdateRollback"))
  if valid_594022 != nil:
    section.add "Action", valid_594022
  var valid_594023 = query.getOrDefault("ClientRequestToken")
  valid_594023 = validateParameter(valid_594023, JString, required = false,
                                 default = nil)
  if valid_594023 != nil:
    section.add "ClientRequestToken", valid_594023
  var valid_594024 = query.getOrDefault("Version")
  valid_594024 = validateParameter(valid_594024, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594024 != nil:
    section.add "Version", valid_594024
  var valid_594025 = query.getOrDefault("RoleARN")
  valid_594025 = validateParameter(valid_594025, JString, required = false,
                                 default = nil)
  if valid_594025 != nil:
    section.add "RoleARN", valid_594025
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594026 = header.getOrDefault("X-Amz-Signature")
  valid_594026 = validateParameter(valid_594026, JString, required = false,
                                 default = nil)
  if valid_594026 != nil:
    section.add "X-Amz-Signature", valid_594026
  var valid_594027 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594027 = validateParameter(valid_594027, JString, required = false,
                                 default = nil)
  if valid_594027 != nil:
    section.add "X-Amz-Content-Sha256", valid_594027
  var valid_594028 = header.getOrDefault("X-Amz-Date")
  valid_594028 = validateParameter(valid_594028, JString, required = false,
                                 default = nil)
  if valid_594028 != nil:
    section.add "X-Amz-Date", valid_594028
  var valid_594029 = header.getOrDefault("X-Amz-Credential")
  valid_594029 = validateParameter(valid_594029, JString, required = false,
                                 default = nil)
  if valid_594029 != nil:
    section.add "X-Amz-Credential", valid_594029
  var valid_594030 = header.getOrDefault("X-Amz-Security-Token")
  valid_594030 = validateParameter(valid_594030, JString, required = false,
                                 default = nil)
  if valid_594030 != nil:
    section.add "X-Amz-Security-Token", valid_594030
  var valid_594031 = header.getOrDefault("X-Amz-Algorithm")
  valid_594031 = validateParameter(valid_594031, JString, required = false,
                                 default = nil)
  if valid_594031 != nil:
    section.add "X-Amz-Algorithm", valid_594031
  var valid_594032 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594032 = validateParameter(valid_594032, JString, required = false,
                                 default = nil)
  if valid_594032 != nil:
    section.add "X-Amz-SignedHeaders", valid_594032
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594033: Call_GetContinueUpdateRollback_594017; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ## 
  let valid = call_594033.validator(path, query, header, formData, body)
  let scheme = call_594033.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594033.url(scheme.get, call_594033.host, call_594033.base,
                         call_594033.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594033, url, valid)

proc call*(call_594034: Call_GetContinueUpdateRollback_594017; StackName: string;
          ResourcesToSkip: JsonNode = nil;
          Action: string = "ContinueUpdateRollback";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## getContinueUpdateRollback
  ## <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
  ##   ResourcesToSkip: JArray
  ##                  : <p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note>
  ##   StackName: string (required)
  ##            : <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_594035 = newJObject()
  if ResourcesToSkip != nil:
    query_594035.add "ResourcesToSkip", ResourcesToSkip
  add(query_594035, "StackName", newJString(StackName))
  add(query_594035, "Action", newJString(Action))
  add(query_594035, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594035, "Version", newJString(Version))
  add(query_594035, "RoleARN", newJString(RoleARN))
  result = call_594034.call(nil, query_594035, nil, nil, nil)

var getContinueUpdateRollback* = Call_GetContinueUpdateRollback_594017(
    name: "getContinueUpdateRollback", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ContinueUpdateRollback",
    validator: validate_GetContinueUpdateRollback_594018, base: "/",
    url: url_GetContinueUpdateRollback_594019,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateChangeSet_594088 = ref object of OpenApiRestCall_593389
proc url_PostCreateChangeSet_594090(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateChangeSet_594089(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594091 = query.getOrDefault("Action")
  valid_594091 = validateParameter(valid_594091, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_594091 != nil:
    section.add "Action", valid_594091
  var valid_594092 = query.getOrDefault("Version")
  valid_594092 = validateParameter(valid_594092, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594092 != nil:
    section.add "Version", valid_594092
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594093 = header.getOrDefault("X-Amz-Signature")
  valid_594093 = validateParameter(valid_594093, JString, required = false,
                                 default = nil)
  if valid_594093 != nil:
    section.add "X-Amz-Signature", valid_594093
  var valid_594094 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594094 = validateParameter(valid_594094, JString, required = false,
                                 default = nil)
  if valid_594094 != nil:
    section.add "X-Amz-Content-Sha256", valid_594094
  var valid_594095 = header.getOrDefault("X-Amz-Date")
  valid_594095 = validateParameter(valid_594095, JString, required = false,
                                 default = nil)
  if valid_594095 != nil:
    section.add "X-Amz-Date", valid_594095
  var valid_594096 = header.getOrDefault("X-Amz-Credential")
  valid_594096 = validateParameter(valid_594096, JString, required = false,
                                 default = nil)
  if valid_594096 != nil:
    section.add "X-Amz-Credential", valid_594096
  var valid_594097 = header.getOrDefault("X-Amz-Security-Token")
  valid_594097 = validateParameter(valid_594097, JString, required = false,
                                 default = nil)
  if valid_594097 != nil:
    section.add "X-Amz-Security-Token", valid_594097
  var valid_594098 = header.getOrDefault("X-Amz-Algorithm")
  valid_594098 = validateParameter(valid_594098, JString, required = false,
                                 default = nil)
  if valid_594098 != nil:
    section.add "X-Amz-Algorithm", valid_594098
  var valid_594099 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594099 = validateParameter(valid_594099, JString, required = false,
                                 default = nil)
  if valid_594099 != nil:
    section.add "X-Amz-SignedHeaders", valid_594099
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594100 = formData.getOrDefault("StackName")
  valid_594100 = validateParameter(valid_594100, JString, required = true,
                                 default = nil)
  if valid_594100 != nil:
    section.add "StackName", valid_594100
  var valid_594101 = formData.getOrDefault("ChangeSetName")
  valid_594101 = validateParameter(valid_594101, JString, required = true,
                                 default = nil)
  if valid_594101 != nil:
    section.add "ChangeSetName", valid_594101
  var valid_594102 = formData.getOrDefault("Description")
  valid_594102 = validateParameter(valid_594102, JString, required = false,
                                 default = nil)
  if valid_594102 != nil:
    section.add "Description", valid_594102
  var valid_594103 = formData.getOrDefault("UsePreviousTemplate")
  valid_594103 = validateParameter(valid_594103, JBool, required = false, default = nil)
  if valid_594103 != nil:
    section.add "UsePreviousTemplate", valid_594103
  var valid_594104 = formData.getOrDefault("TemplateURL")
  valid_594104 = validateParameter(valid_594104, JString, required = false,
                                 default = nil)
  if valid_594104 != nil:
    section.add "TemplateURL", valid_594104
  var valid_594105 = formData.getOrDefault("TemplateBody")
  valid_594105 = validateParameter(valid_594105, JString, required = false,
                                 default = nil)
  if valid_594105 != nil:
    section.add "TemplateBody", valid_594105
  var valid_594106 = formData.getOrDefault("RoleARN")
  valid_594106 = validateParameter(valid_594106, JString, required = false,
                                 default = nil)
  if valid_594106 != nil:
    section.add "RoleARN", valid_594106
  var valid_594107 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_594107 = validateParameter(valid_594107, JArray, required = false,
                                 default = nil)
  if valid_594107 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_594107
  var valid_594108 = formData.getOrDefault("NotificationARNs")
  valid_594108 = validateParameter(valid_594108, JArray, required = false,
                                 default = nil)
  if valid_594108 != nil:
    section.add "NotificationARNs", valid_594108
  var valid_594109 = formData.getOrDefault("Capabilities")
  valid_594109 = validateParameter(valid_594109, JArray, required = false,
                                 default = nil)
  if valid_594109 != nil:
    section.add "Capabilities", valid_594109
  var valid_594110 = formData.getOrDefault("Tags")
  valid_594110 = validateParameter(valid_594110, JArray, required = false,
                                 default = nil)
  if valid_594110 != nil:
    section.add "Tags", valid_594110
  var valid_594111 = formData.getOrDefault("Parameters")
  valid_594111 = validateParameter(valid_594111, JArray, required = false,
                                 default = nil)
  if valid_594111 != nil:
    section.add "Parameters", valid_594111
  var valid_594112 = formData.getOrDefault("ChangeSetType")
  valid_594112 = validateParameter(valid_594112, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_594112 != nil:
    section.add "ChangeSetType", valid_594112
  var valid_594113 = formData.getOrDefault("ResourceTypes")
  valid_594113 = validateParameter(valid_594113, JArray, required = false,
                                 default = nil)
  if valid_594113 != nil:
    section.add "ResourceTypes", valid_594113
  var valid_594114 = formData.getOrDefault("ClientToken")
  valid_594114 = validateParameter(valid_594114, JString, required = false,
                                 default = nil)
  if valid_594114 != nil:
    section.add "ClientToken", valid_594114
  var valid_594115 = formData.getOrDefault("ResourcesToImport")
  valid_594115 = validateParameter(valid_594115, JArray, required = false,
                                 default = nil)
  if valid_594115 != nil:
    section.add "ResourcesToImport", valid_594115
  var valid_594116 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_594116 = validateParameter(valid_594116, JString, required = false,
                                 default = nil)
  if valid_594116 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_594116
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594117: Call_PostCreateChangeSet_594088; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_594117.validator(path, query, header, formData, body)
  let scheme = call_594117.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594117.url(scheme.get, call_594117.host, call_594117.base,
                         call_594117.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594117, url, valid)

proc call*(call_594118: Call_PostCreateChangeSet_594088; StackName: string;
          ChangeSetName: string; Description: string = "";
          UsePreviousTemplate: bool = false; TemplateURL: string = "";
          TemplateBody: string = ""; RoleARN: string = "";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; Action: string = "CreateChangeSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil; ChangeSetType: string = "CREATE";
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          ClientToken: string = ""; ResourcesToImport: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   Version: string (required)
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_594119 = newJObject()
  var formData_594120 = newJObject()
  add(formData_594120, "StackName", newJString(StackName))
  add(formData_594120, "ChangeSetName", newJString(ChangeSetName))
  add(formData_594120, "Description", newJString(Description))
  add(formData_594120, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(formData_594120, "TemplateURL", newJString(TemplateURL))
  add(formData_594120, "TemplateBody", newJString(TemplateBody))
  add(formData_594120, "RoleARN", newJString(RoleARN))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_594120.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_594120.add "NotificationARNs", NotificationARNs
  add(query_594119, "Action", newJString(Action))
  if Capabilities != nil:
    formData_594120.add "Capabilities", Capabilities
  if Tags != nil:
    formData_594120.add "Tags", Tags
  if Parameters != nil:
    formData_594120.add "Parameters", Parameters
  add(formData_594120, "ChangeSetType", newJString(ChangeSetType))
  if ResourceTypes != nil:
    formData_594120.add "ResourceTypes", ResourceTypes
  add(query_594119, "Version", newJString(Version))
  add(formData_594120, "ClientToken", newJString(ClientToken))
  if ResourcesToImport != nil:
    formData_594120.add "ResourcesToImport", ResourcesToImport
  add(formData_594120, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_594118.call(nil, query_594119, nil, formData_594120, nil)

var postCreateChangeSet* = Call_PostCreateChangeSet_594088(
    name: "postCreateChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_PostCreateChangeSet_594089, base: "/",
    url: url_PostCreateChangeSet_594090, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateChangeSet_594056 = ref object of OpenApiRestCall_593389
proc url_GetCreateChangeSet_594058(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateChangeSet_594057(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetType: JString
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   StackName: JString (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   UsePreviousTemplate: JBool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateBody: JString
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A description to help you identify this change set.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: JString (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   ClientToken: JString
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  var valid_594059 = query.getOrDefault("ResourceTypes")
  valid_594059 = validateParameter(valid_594059, JArray, required = false,
                                 default = nil)
  if valid_594059 != nil:
    section.add "ResourceTypes", valid_594059
  var valid_594060 = query.getOrDefault("RoleARN")
  valid_594060 = validateParameter(valid_594060, JString, required = false,
                                 default = nil)
  if valid_594060 != nil:
    section.add "RoleARN", valid_594060
  var valid_594061 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_594061 = validateParameter(valid_594061, JString, required = false,
                                 default = nil)
  if valid_594061 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_594061
  var valid_594062 = query.getOrDefault("Parameters")
  valid_594062 = validateParameter(valid_594062, JArray, required = false,
                                 default = nil)
  if valid_594062 != nil:
    section.add "Parameters", valid_594062
  var valid_594063 = query.getOrDefault("Tags")
  valid_594063 = validateParameter(valid_594063, JArray, required = false,
                                 default = nil)
  if valid_594063 != nil:
    section.add "Tags", valid_594063
  var valid_594064 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_594064 = validateParameter(valid_594064, JArray, required = false,
                                 default = nil)
  if valid_594064 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_594064
  var valid_594065 = query.getOrDefault("ChangeSetType")
  valid_594065 = validateParameter(valid_594065, JString, required = false,
                                 default = newJString("CREATE"))
  if valid_594065 != nil:
    section.add "ChangeSetType", valid_594065
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594066 = query.getOrDefault("StackName")
  valid_594066 = validateParameter(valid_594066, JString, required = true,
                                 default = nil)
  if valid_594066 != nil:
    section.add "StackName", valid_594066
  var valid_594067 = query.getOrDefault("UsePreviousTemplate")
  valid_594067 = validateParameter(valid_594067, JBool, required = false, default = nil)
  if valid_594067 != nil:
    section.add "UsePreviousTemplate", valid_594067
  var valid_594068 = query.getOrDefault("TemplateBody")
  valid_594068 = validateParameter(valid_594068, JString, required = false,
                                 default = nil)
  if valid_594068 != nil:
    section.add "TemplateBody", valid_594068
  var valid_594069 = query.getOrDefault("ResourcesToImport")
  valid_594069 = validateParameter(valid_594069, JArray, required = false,
                                 default = nil)
  if valid_594069 != nil:
    section.add "ResourcesToImport", valid_594069
  var valid_594070 = query.getOrDefault("NotificationARNs")
  valid_594070 = validateParameter(valid_594070, JArray, required = false,
                                 default = nil)
  if valid_594070 != nil:
    section.add "NotificationARNs", valid_594070
  var valid_594071 = query.getOrDefault("Action")
  valid_594071 = validateParameter(valid_594071, JString, required = true,
                                 default = newJString("CreateChangeSet"))
  if valid_594071 != nil:
    section.add "Action", valid_594071
  var valid_594072 = query.getOrDefault("Description")
  valid_594072 = validateParameter(valid_594072, JString, required = false,
                                 default = nil)
  if valid_594072 != nil:
    section.add "Description", valid_594072
  var valid_594073 = query.getOrDefault("TemplateURL")
  valid_594073 = validateParameter(valid_594073, JString, required = false,
                                 default = nil)
  if valid_594073 != nil:
    section.add "TemplateURL", valid_594073
  var valid_594074 = query.getOrDefault("ChangeSetName")
  valid_594074 = validateParameter(valid_594074, JString, required = true,
                                 default = nil)
  if valid_594074 != nil:
    section.add "ChangeSetName", valid_594074
  var valid_594075 = query.getOrDefault("Version")
  valid_594075 = validateParameter(valid_594075, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594075 != nil:
    section.add "Version", valid_594075
  var valid_594076 = query.getOrDefault("Capabilities")
  valid_594076 = validateParameter(valid_594076, JArray, required = false,
                                 default = nil)
  if valid_594076 != nil:
    section.add "Capabilities", valid_594076
  var valid_594077 = query.getOrDefault("ClientToken")
  valid_594077 = validateParameter(valid_594077, JString, required = false,
                                 default = nil)
  if valid_594077 != nil:
    section.add "ClientToken", valid_594077
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594078 = header.getOrDefault("X-Amz-Signature")
  valid_594078 = validateParameter(valid_594078, JString, required = false,
                                 default = nil)
  if valid_594078 != nil:
    section.add "X-Amz-Signature", valid_594078
  var valid_594079 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594079 = validateParameter(valid_594079, JString, required = false,
                                 default = nil)
  if valid_594079 != nil:
    section.add "X-Amz-Content-Sha256", valid_594079
  var valid_594080 = header.getOrDefault("X-Amz-Date")
  valid_594080 = validateParameter(valid_594080, JString, required = false,
                                 default = nil)
  if valid_594080 != nil:
    section.add "X-Amz-Date", valid_594080
  var valid_594081 = header.getOrDefault("X-Amz-Credential")
  valid_594081 = validateParameter(valid_594081, JString, required = false,
                                 default = nil)
  if valid_594081 != nil:
    section.add "X-Amz-Credential", valid_594081
  var valid_594082 = header.getOrDefault("X-Amz-Security-Token")
  valid_594082 = validateParameter(valid_594082, JString, required = false,
                                 default = nil)
  if valid_594082 != nil:
    section.add "X-Amz-Security-Token", valid_594082
  var valid_594083 = header.getOrDefault("X-Amz-Algorithm")
  valid_594083 = validateParameter(valid_594083, JString, required = false,
                                 default = nil)
  if valid_594083 != nil:
    section.add "X-Amz-Algorithm", valid_594083
  var valid_594084 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594084 = validateParameter(valid_594084, JString, required = false,
                                 default = nil)
  if valid_594084 != nil:
    section.add "X-Amz-SignedHeaders", valid_594084
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594085: Call_GetCreateChangeSet_594056; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ## 
  let valid = call_594085.validator(path, query, header, formData, body)
  let scheme = call_594085.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594085.url(scheme.get, call_594085.host, call_594085.base,
                         call_594085.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594085, url, valid)

proc call*(call_594086: Call_GetCreateChangeSet_594056; StackName: string;
          ChangeSetName: string; ResourceTypes: JsonNode = nil; RoleARN: string = "";
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          ChangeSetType: string = "CREATE"; UsePreviousTemplate: bool = false;
          TemplateBody: string = ""; ResourcesToImport: JsonNode = nil;
          NotificationARNs: JsonNode = nil; Action: string = "CreateChangeSet";
          Description: string = ""; TemplateURL: string = "";
          Version: string = "2010-05-15"; Capabilities: JsonNode = nil;
          ClientToken: string = ""): Recallable =
  ## getCreateChangeSet
  ## <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   ChangeSetType: string
  ##                : <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
  ##   StackName: string (required)
  ##            : The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
  ##   UsePreviousTemplate: bool
  ##                      : Whether to reuse the template that is associated with the stack to create the change set.
  ##   TemplateBody: string
  ##               : <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ResourcesToImport: JArray
  ##                    : The resources to import into your stack.
  ##   NotificationARNs: JArray
  ##                   : The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
  ##   Action: string (required)
  ##   Description: string
  ##              : A description to help you identify this change set.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
  ##   ChangeSetName: string (required)
  ##                : <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   ClientToken: string
  ##              : A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  var query_594087 = newJObject()
  if ResourceTypes != nil:
    query_594087.add "ResourceTypes", ResourceTypes
  add(query_594087, "RoleARN", newJString(RoleARN))
  add(query_594087, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_594087.add "Parameters", Parameters
  if Tags != nil:
    query_594087.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_594087.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_594087, "ChangeSetType", newJString(ChangeSetType))
  add(query_594087, "StackName", newJString(StackName))
  add(query_594087, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_594087, "TemplateBody", newJString(TemplateBody))
  if ResourcesToImport != nil:
    query_594087.add "ResourcesToImport", ResourcesToImport
  if NotificationARNs != nil:
    query_594087.add "NotificationARNs", NotificationARNs
  add(query_594087, "Action", newJString(Action))
  add(query_594087, "Description", newJString(Description))
  add(query_594087, "TemplateURL", newJString(TemplateURL))
  add(query_594087, "ChangeSetName", newJString(ChangeSetName))
  add(query_594087, "Version", newJString(Version))
  if Capabilities != nil:
    query_594087.add "Capabilities", Capabilities
  add(query_594087, "ClientToken", newJString(ClientToken))
  result = call_594086.call(nil, query_594087, nil, nil, nil)

var getCreateChangeSet* = Call_GetCreateChangeSet_594056(
    name: "getCreateChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateChangeSet",
    validator: validate_GetCreateChangeSet_594057, base: "/",
    url: url_GetCreateChangeSet_594058, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStack_594154 = ref object of OpenApiRestCall_593389
proc url_PostCreateStack_594156(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStack_594155(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594157 = query.getOrDefault("Action")
  valid_594157 = validateParameter(valid_594157, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_594157 != nil:
    section.add "Action", valid_594157
  var valid_594158 = query.getOrDefault("Version")
  valid_594158 = validateParameter(valid_594158, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594158 != nil:
    section.add "Version", valid_594158
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594159 = header.getOrDefault("X-Amz-Signature")
  valid_594159 = validateParameter(valid_594159, JString, required = false,
                                 default = nil)
  if valid_594159 != nil:
    section.add "X-Amz-Signature", valid_594159
  var valid_594160 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594160 = validateParameter(valid_594160, JString, required = false,
                                 default = nil)
  if valid_594160 != nil:
    section.add "X-Amz-Content-Sha256", valid_594160
  var valid_594161 = header.getOrDefault("X-Amz-Date")
  valid_594161 = validateParameter(valid_594161, JString, required = false,
                                 default = nil)
  if valid_594161 != nil:
    section.add "X-Amz-Date", valid_594161
  var valid_594162 = header.getOrDefault("X-Amz-Credential")
  valid_594162 = validateParameter(valid_594162, JString, required = false,
                                 default = nil)
  if valid_594162 != nil:
    section.add "X-Amz-Credential", valid_594162
  var valid_594163 = header.getOrDefault("X-Amz-Security-Token")
  valid_594163 = validateParameter(valid_594163, JString, required = false,
                                 default = nil)
  if valid_594163 != nil:
    section.add "X-Amz-Security-Token", valid_594163
  var valid_594164 = header.getOrDefault("X-Amz-Algorithm")
  valid_594164 = validateParameter(valid_594164, JString, required = false,
                                 default = nil)
  if valid_594164 != nil:
    section.add "X-Amz-Algorithm", valid_594164
  var valid_594165 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594165 = validateParameter(valid_594165, JString, required = false,
                                 default = nil)
  if valid_594165 != nil:
    section.add "X-Amz-SignedHeaders", valid_594165
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  var valid_594166 = formData.getOrDefault("StackPolicyBody")
  valid_594166 = validateParameter(valid_594166, JString, required = false,
                                 default = nil)
  if valid_594166 != nil:
    section.add "StackPolicyBody", valid_594166
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594167 = formData.getOrDefault("StackName")
  valid_594167 = validateParameter(valid_594167, JString, required = true,
                                 default = nil)
  if valid_594167 != nil:
    section.add "StackName", valid_594167
  var valid_594168 = formData.getOrDefault("DisableRollback")
  valid_594168 = validateParameter(valid_594168, JBool, required = false, default = nil)
  if valid_594168 != nil:
    section.add "DisableRollback", valid_594168
  var valid_594169 = formData.getOrDefault("StackPolicyURL")
  valid_594169 = validateParameter(valid_594169, JString, required = false,
                                 default = nil)
  if valid_594169 != nil:
    section.add "StackPolicyURL", valid_594169
  var valid_594170 = formData.getOrDefault("TemplateURL")
  valid_594170 = validateParameter(valid_594170, JString, required = false,
                                 default = nil)
  if valid_594170 != nil:
    section.add "TemplateURL", valid_594170
  var valid_594171 = formData.getOrDefault("EnableTerminationProtection")
  valid_594171 = validateParameter(valid_594171, JBool, required = false, default = nil)
  if valid_594171 != nil:
    section.add "EnableTerminationProtection", valid_594171
  var valid_594172 = formData.getOrDefault("TemplateBody")
  valid_594172 = validateParameter(valid_594172, JString, required = false,
                                 default = nil)
  if valid_594172 != nil:
    section.add "TemplateBody", valid_594172
  var valid_594173 = formData.getOrDefault("RoleARN")
  valid_594173 = validateParameter(valid_594173, JString, required = false,
                                 default = nil)
  if valid_594173 != nil:
    section.add "RoleARN", valid_594173
  var valid_594174 = formData.getOrDefault("OnFailure")
  valid_594174 = validateParameter(valid_594174, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_594174 != nil:
    section.add "OnFailure", valid_594174
  var valid_594175 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_594175 = validateParameter(valid_594175, JArray, required = false,
                                 default = nil)
  if valid_594175 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_594175
  var valid_594176 = formData.getOrDefault("NotificationARNs")
  valid_594176 = validateParameter(valid_594176, JArray, required = false,
                                 default = nil)
  if valid_594176 != nil:
    section.add "NotificationARNs", valid_594176
  var valid_594177 = formData.getOrDefault("ClientRequestToken")
  valid_594177 = validateParameter(valid_594177, JString, required = false,
                                 default = nil)
  if valid_594177 != nil:
    section.add "ClientRequestToken", valid_594177
  var valid_594178 = formData.getOrDefault("Capabilities")
  valid_594178 = validateParameter(valid_594178, JArray, required = false,
                                 default = nil)
  if valid_594178 != nil:
    section.add "Capabilities", valid_594178
  var valid_594179 = formData.getOrDefault("TimeoutInMinutes")
  valid_594179 = validateParameter(valid_594179, JInt, required = false, default = nil)
  if valid_594179 != nil:
    section.add "TimeoutInMinutes", valid_594179
  var valid_594180 = formData.getOrDefault("Parameters")
  valid_594180 = validateParameter(valid_594180, JArray, required = false,
                                 default = nil)
  if valid_594180 != nil:
    section.add "Parameters", valid_594180
  var valid_594181 = formData.getOrDefault("Tags")
  valid_594181 = validateParameter(valid_594181, JArray, required = false,
                                 default = nil)
  if valid_594181 != nil:
    section.add "Tags", valid_594181
  var valid_594182 = formData.getOrDefault("ResourceTypes")
  valid_594182 = validateParameter(valid_594182, JArray, required = false,
                                 default = nil)
  if valid_594182 != nil:
    section.add "ResourceTypes", valid_594182
  var valid_594183 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_594183 = validateParameter(valid_594183, JString, required = false,
                                 default = nil)
  if valid_594183 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_594183
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594184: Call_PostCreateStack_594154; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_594184.validator(path, query, header, formData, body)
  let scheme = call_594184.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594184.url(scheme.get, call_594184.host, call_594184.base,
                         call_594184.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594184, url, valid)

proc call*(call_594185: Call_PostCreateStack_594154; StackName: string;
          StackPolicyBody: string = ""; DisableRollback: bool = false;
          StackPolicyURL: string = ""; TemplateURL: string = "";
          EnableTerminationProtection: bool = false; TemplateBody: string = "";
          RoleARN: string = ""; OnFailure: string = "DO_NOTHING";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; ClientRequestToken: string = "";
          Action: string = "CreateStack"; Capabilities: JsonNode = nil;
          TimeoutInMinutes: int = 0; Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_594186 = newJObject()
  var formData_594187 = newJObject()
  add(formData_594187, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_594187, "StackName", newJString(StackName))
  add(formData_594187, "DisableRollback", newJBool(DisableRollback))
  add(formData_594187, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_594187, "TemplateURL", newJString(TemplateURL))
  add(formData_594187, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(formData_594187, "TemplateBody", newJString(TemplateBody))
  add(formData_594187, "RoleARN", newJString(RoleARN))
  add(formData_594187, "OnFailure", newJString(OnFailure))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_594187.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_594187.add "NotificationARNs", NotificationARNs
  add(formData_594187, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594186, "Action", newJString(Action))
  if Capabilities != nil:
    formData_594187.add "Capabilities", Capabilities
  add(formData_594187, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  if Parameters != nil:
    formData_594187.add "Parameters", Parameters
  if Tags != nil:
    formData_594187.add "Tags", Tags
  if ResourceTypes != nil:
    formData_594187.add "ResourceTypes", ResourceTypes
  add(query_594186, "Version", newJString(Version))
  add(formData_594187, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_594185.call(nil, query_594186, nil, formData_594187, nil)

var postCreateStack* = Call_PostCreateStack_594154(name: "postCreateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_PostCreateStack_594155,
    base: "/", url: url_PostCreateStack_594156, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStack_594121 = ref object of OpenApiRestCall_593389
proc url_GetCreateStack_594123(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStack_594122(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: JString (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   EnableTerminationProtection: JBool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TimeoutInMinutes: JInt
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: JBool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   OnFailure: JString
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_594124 = query.getOrDefault("ResourceTypes")
  valid_594124 = validateParameter(valid_594124, JArray, required = false,
                                 default = nil)
  if valid_594124 != nil:
    section.add "ResourceTypes", valid_594124
  var valid_594125 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_594125 = validateParameter(valid_594125, JString, required = false,
                                 default = nil)
  if valid_594125 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_594125
  var valid_594126 = query.getOrDefault("Parameters")
  valid_594126 = validateParameter(valid_594126, JArray, required = false,
                                 default = nil)
  if valid_594126 != nil:
    section.add "Parameters", valid_594126
  var valid_594127 = query.getOrDefault("Tags")
  valid_594127 = validateParameter(valid_594127, JArray, required = false,
                                 default = nil)
  if valid_594127 != nil:
    section.add "Tags", valid_594127
  var valid_594128 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_594128 = validateParameter(valid_594128, JArray, required = false,
                                 default = nil)
  if valid_594128 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_594128
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594129 = query.getOrDefault("StackName")
  valid_594129 = validateParameter(valid_594129, JString, required = true,
                                 default = nil)
  if valid_594129 != nil:
    section.add "StackName", valid_594129
  var valid_594130 = query.getOrDefault("EnableTerminationProtection")
  valid_594130 = validateParameter(valid_594130, JBool, required = false, default = nil)
  if valid_594130 != nil:
    section.add "EnableTerminationProtection", valid_594130
  var valid_594131 = query.getOrDefault("TimeoutInMinutes")
  valid_594131 = validateParameter(valid_594131, JInt, required = false, default = nil)
  if valid_594131 != nil:
    section.add "TimeoutInMinutes", valid_594131
  var valid_594132 = query.getOrDefault("StackPolicyBody")
  valid_594132 = validateParameter(valid_594132, JString, required = false,
                                 default = nil)
  if valid_594132 != nil:
    section.add "StackPolicyBody", valid_594132
  var valid_594133 = query.getOrDefault("TemplateBody")
  valid_594133 = validateParameter(valid_594133, JString, required = false,
                                 default = nil)
  if valid_594133 != nil:
    section.add "TemplateBody", valid_594133
  var valid_594134 = query.getOrDefault("DisableRollback")
  valid_594134 = validateParameter(valid_594134, JBool, required = false, default = nil)
  if valid_594134 != nil:
    section.add "DisableRollback", valid_594134
  var valid_594135 = query.getOrDefault("NotificationARNs")
  valid_594135 = validateParameter(valid_594135, JArray, required = false,
                                 default = nil)
  if valid_594135 != nil:
    section.add "NotificationARNs", valid_594135
  var valid_594136 = query.getOrDefault("OnFailure")
  valid_594136 = validateParameter(valid_594136, JString, required = false,
                                 default = newJString("DO_NOTHING"))
  if valid_594136 != nil:
    section.add "OnFailure", valid_594136
  var valid_594137 = query.getOrDefault("StackPolicyURL")
  valid_594137 = validateParameter(valid_594137, JString, required = false,
                                 default = nil)
  if valid_594137 != nil:
    section.add "StackPolicyURL", valid_594137
  var valid_594138 = query.getOrDefault("Action")
  valid_594138 = validateParameter(valid_594138, JString, required = true,
                                 default = newJString("CreateStack"))
  if valid_594138 != nil:
    section.add "Action", valid_594138
  var valid_594139 = query.getOrDefault("ClientRequestToken")
  valid_594139 = validateParameter(valid_594139, JString, required = false,
                                 default = nil)
  if valid_594139 != nil:
    section.add "ClientRequestToken", valid_594139
  var valid_594140 = query.getOrDefault("TemplateURL")
  valid_594140 = validateParameter(valid_594140, JString, required = false,
                                 default = nil)
  if valid_594140 != nil:
    section.add "TemplateURL", valid_594140
  var valid_594141 = query.getOrDefault("Version")
  valid_594141 = validateParameter(valid_594141, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594141 != nil:
    section.add "Version", valid_594141
  var valid_594142 = query.getOrDefault("Capabilities")
  valid_594142 = validateParameter(valid_594142, JArray, required = false,
                                 default = nil)
  if valid_594142 != nil:
    section.add "Capabilities", valid_594142
  var valid_594143 = query.getOrDefault("RoleARN")
  valid_594143 = validateParameter(valid_594143, JString, required = false,
                                 default = nil)
  if valid_594143 != nil:
    section.add "RoleARN", valid_594143
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594144 = header.getOrDefault("X-Amz-Signature")
  valid_594144 = validateParameter(valid_594144, JString, required = false,
                                 default = nil)
  if valid_594144 != nil:
    section.add "X-Amz-Signature", valid_594144
  var valid_594145 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594145 = validateParameter(valid_594145, JString, required = false,
                                 default = nil)
  if valid_594145 != nil:
    section.add "X-Amz-Content-Sha256", valid_594145
  var valid_594146 = header.getOrDefault("X-Amz-Date")
  valid_594146 = validateParameter(valid_594146, JString, required = false,
                                 default = nil)
  if valid_594146 != nil:
    section.add "X-Amz-Date", valid_594146
  var valid_594147 = header.getOrDefault("X-Amz-Credential")
  valid_594147 = validateParameter(valid_594147, JString, required = false,
                                 default = nil)
  if valid_594147 != nil:
    section.add "X-Amz-Credential", valid_594147
  var valid_594148 = header.getOrDefault("X-Amz-Security-Token")
  valid_594148 = validateParameter(valid_594148, JString, required = false,
                                 default = nil)
  if valid_594148 != nil:
    section.add "X-Amz-Security-Token", valid_594148
  var valid_594149 = header.getOrDefault("X-Amz-Algorithm")
  valid_594149 = validateParameter(valid_594149, JString, required = false,
                                 default = nil)
  if valid_594149 != nil:
    section.add "X-Amz-Algorithm", valid_594149
  var valid_594150 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594150 = validateParameter(valid_594150, JString, required = false,
                                 default = nil)
  if valid_594150 != nil:
    section.add "X-Amz-SignedHeaders", valid_594150
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594151: Call_GetCreateStack_594121; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ## 
  let valid = call_594151.validator(path, query, header, formData, body)
  let scheme = call_594151.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594151.url(scheme.get, call_594151.host, call_594151.base,
                         call_594151.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594151, url, valid)

proc call*(call_594152: Call_GetCreateStack_594121; StackName: string;
          ResourceTypes: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          EnableTerminationProtection: bool = false; TimeoutInMinutes: int = 0;
          StackPolicyBody: string = ""; TemplateBody: string = "";
          DisableRollback: bool = false; NotificationARNs: JsonNode = nil;
          OnFailure: string = "DO_NOTHING"; StackPolicyURL: string = "";
          Action: string = "CreateStack"; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil; RoleARN: string = ""): Recallable =
  ## getCreateStack
  ## Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackName: string (required)
  ##            : <p>The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note>
  ##   EnableTerminationProtection: bool
  ##                              : <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   TimeoutInMinutes: int
  ##                   : The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   DisableRollback: bool
  ##                  : <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>
  ##   NotificationARNs: JArray
  ##                   : The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).
  ##   OnFailure: string
  ##            : <p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p>
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_594153 = newJObject()
  if ResourceTypes != nil:
    query_594153.add "ResourceTypes", ResourceTypes
  add(query_594153, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_594153.add "Parameters", Parameters
  if Tags != nil:
    query_594153.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_594153.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_594153, "StackName", newJString(StackName))
  add(query_594153, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_594153, "TimeoutInMinutes", newJInt(TimeoutInMinutes))
  add(query_594153, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_594153, "TemplateBody", newJString(TemplateBody))
  add(query_594153, "DisableRollback", newJBool(DisableRollback))
  if NotificationARNs != nil:
    query_594153.add "NotificationARNs", NotificationARNs
  add(query_594153, "OnFailure", newJString(OnFailure))
  add(query_594153, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_594153, "Action", newJString(Action))
  add(query_594153, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594153, "TemplateURL", newJString(TemplateURL))
  add(query_594153, "Version", newJString(Version))
  if Capabilities != nil:
    query_594153.add "Capabilities", Capabilities
  add(query_594153, "RoleARN", newJString(RoleARN))
  result = call_594152.call(nil, query_594153, nil, nil, nil)

var getCreateStack* = Call_GetCreateStack_594121(name: "getCreateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStack", validator: validate_GetCreateStack_594122,
    base: "/", url: url_GetCreateStack_594123, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackInstances_594213 = ref object of OpenApiRestCall_593389
proc url_PostCreateStackInstances_594215(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackInstances_594214(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594216 = query.getOrDefault("Action")
  valid_594216 = validateParameter(valid_594216, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_594216 != nil:
    section.add "Action", valid_594216
  var valid_594217 = query.getOrDefault("Version")
  valid_594217 = validateParameter(valid_594217, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594217 != nil:
    section.add "Version", valid_594217
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594218 = header.getOrDefault("X-Amz-Signature")
  valid_594218 = validateParameter(valid_594218, JString, required = false,
                                 default = nil)
  if valid_594218 != nil:
    section.add "X-Amz-Signature", valid_594218
  var valid_594219 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594219 = validateParameter(valid_594219, JString, required = false,
                                 default = nil)
  if valid_594219 != nil:
    section.add "X-Amz-Content-Sha256", valid_594219
  var valid_594220 = header.getOrDefault("X-Amz-Date")
  valid_594220 = validateParameter(valid_594220, JString, required = false,
                                 default = nil)
  if valid_594220 != nil:
    section.add "X-Amz-Date", valid_594220
  var valid_594221 = header.getOrDefault("X-Amz-Credential")
  valid_594221 = validateParameter(valid_594221, JString, required = false,
                                 default = nil)
  if valid_594221 != nil:
    section.add "X-Amz-Credential", valid_594221
  var valid_594222 = header.getOrDefault("X-Amz-Security-Token")
  valid_594222 = validateParameter(valid_594222, JString, required = false,
                                 default = nil)
  if valid_594222 != nil:
    section.add "X-Amz-Security-Token", valid_594222
  var valid_594223 = header.getOrDefault("X-Amz-Algorithm")
  valid_594223 = validateParameter(valid_594223, JString, required = false,
                                 default = nil)
  if valid_594223 != nil:
    section.add "X-Amz-Algorithm", valid_594223
  var valid_594224 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594224 = validateParameter(valid_594224, JString, required = false,
                                 default = nil)
  if valid_594224 != nil:
    section.add "X-Amz-SignedHeaders", valid_594224
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_594225 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_594225 = validateParameter(valid_594225, JString, required = false,
                                 default = nil)
  if valid_594225 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_594225
  var valid_594226 = formData.getOrDefault("OperationId")
  valid_594226 = validateParameter(valid_594226, JString, required = false,
                                 default = nil)
  if valid_594226 != nil:
    section.add "OperationId", valid_594226
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_594227 = formData.getOrDefault("StackSetName")
  valid_594227 = validateParameter(valid_594227, JString, required = true,
                                 default = nil)
  if valid_594227 != nil:
    section.add "StackSetName", valid_594227
  var valid_594228 = formData.getOrDefault("ParameterOverrides")
  valid_594228 = validateParameter(valid_594228, JArray, required = false,
                                 default = nil)
  if valid_594228 != nil:
    section.add "ParameterOverrides", valid_594228
  var valid_594229 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_594229 = validateParameter(valid_594229, JArray, required = false,
                                 default = nil)
  if valid_594229 != nil:
    section.add "OperationPreferences.RegionOrder", valid_594229
  var valid_594230 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_594230 = validateParameter(valid_594230, JString, required = false,
                                 default = nil)
  if valid_594230 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_594230
  var valid_594231 = formData.getOrDefault("Accounts")
  valid_594231 = validateParameter(valid_594231, JArray, required = true, default = nil)
  if valid_594231 != nil:
    section.add "Accounts", valid_594231
  var valid_594232 = formData.getOrDefault("Regions")
  valid_594232 = validateParameter(valid_594232, JArray, required = true, default = nil)
  if valid_594232 != nil:
    section.add "Regions", valid_594232
  var valid_594233 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_594233 = validateParameter(valid_594233, JString, required = false,
                                 default = nil)
  if valid_594233 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_594233
  var valid_594234 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_594234 = validateParameter(valid_594234, JString, required = false,
                                 default = nil)
  if valid_594234 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_594234
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594235: Call_PostCreateStackInstances_594213; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_594235.validator(path, query, header, formData, body)
  let scheme = call_594235.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594235.url(scheme.get, call_594235.host, call_594235.base,
                         call_594235.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594235, url, valid)

proc call*(call_594236: Call_PostCreateStackInstances_594213; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; ParameterOverrides: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "CreateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_594237 = newJObject()
  var formData_594238 = newJObject()
  add(formData_594238, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_594238, "OperationId", newJString(OperationId))
  add(formData_594238, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    formData_594238.add "ParameterOverrides", ParameterOverrides
  if OperationPreferencesRegionOrder != nil:
    formData_594238.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_594238, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_594238.add "Accounts", Accounts
  if Regions != nil:
    formData_594238.add "Regions", Regions
  add(query_594237, "Action", newJString(Action))
  add(formData_594238, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_594237, "Version", newJString(Version))
  add(formData_594238, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_594236.call(nil, query_594237, nil, formData_594238, nil)

var postCreateStackInstances* = Call_PostCreateStackInstances_594213(
    name: "postCreateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_PostCreateStackInstances_594214, base: "/",
    url: url_PostCreateStackInstances_594215, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackInstances_594188 = ref object of OpenApiRestCall_593389
proc url_GetCreateStackInstances_594190(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackInstances_594189(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_594191 = query.getOrDefault("OperationId")
  valid_594191 = validateParameter(valid_594191, JString, required = false,
                                 default = nil)
  if valid_594191 != nil:
    section.add "OperationId", valid_594191
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_594192 = query.getOrDefault("StackSetName")
  valid_594192 = validateParameter(valid_594192, JString, required = true,
                                 default = nil)
  if valid_594192 != nil:
    section.add "StackSetName", valid_594192
  var valid_594193 = query.getOrDefault("ParameterOverrides")
  valid_594193 = validateParameter(valid_594193, JArray, required = false,
                                 default = nil)
  if valid_594193 != nil:
    section.add "ParameterOverrides", valid_594193
  var valid_594194 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_594194 = validateParameter(valid_594194, JString, required = false,
                                 default = nil)
  if valid_594194 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_594194
  var valid_594195 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_594195 = validateParameter(valid_594195, JString, required = false,
                                 default = nil)
  if valid_594195 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_594195
  var valid_594196 = query.getOrDefault("Action")
  valid_594196 = validateParameter(valid_594196, JString, required = true,
                                 default = newJString("CreateStackInstances"))
  if valid_594196 != nil:
    section.add "Action", valid_594196
  var valid_594197 = query.getOrDefault("Regions")
  valid_594197 = validateParameter(valid_594197, JArray, required = true, default = nil)
  if valid_594197 != nil:
    section.add "Regions", valid_594197
  var valid_594198 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_594198 = validateParameter(valid_594198, JArray, required = false,
                                 default = nil)
  if valid_594198 != nil:
    section.add "OperationPreferences.RegionOrder", valid_594198
  var valid_594199 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_594199 = validateParameter(valid_594199, JString, required = false,
                                 default = nil)
  if valid_594199 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_594199
  var valid_594200 = query.getOrDefault("Accounts")
  valid_594200 = validateParameter(valid_594200, JArray, required = true, default = nil)
  if valid_594200 != nil:
    section.add "Accounts", valid_594200
  var valid_594201 = query.getOrDefault("Version")
  valid_594201 = validateParameter(valid_594201, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594201 != nil:
    section.add "Version", valid_594201
  var valid_594202 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_594202 = validateParameter(valid_594202, JString, required = false,
                                 default = nil)
  if valid_594202 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_594202
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594203 = header.getOrDefault("X-Amz-Signature")
  valid_594203 = validateParameter(valid_594203, JString, required = false,
                                 default = nil)
  if valid_594203 != nil:
    section.add "X-Amz-Signature", valid_594203
  var valid_594204 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594204 = validateParameter(valid_594204, JString, required = false,
                                 default = nil)
  if valid_594204 != nil:
    section.add "X-Amz-Content-Sha256", valid_594204
  var valid_594205 = header.getOrDefault("X-Amz-Date")
  valid_594205 = validateParameter(valid_594205, JString, required = false,
                                 default = nil)
  if valid_594205 != nil:
    section.add "X-Amz-Date", valid_594205
  var valid_594206 = header.getOrDefault("X-Amz-Credential")
  valid_594206 = validateParameter(valid_594206, JString, required = false,
                                 default = nil)
  if valid_594206 != nil:
    section.add "X-Amz-Credential", valid_594206
  var valid_594207 = header.getOrDefault("X-Amz-Security-Token")
  valid_594207 = validateParameter(valid_594207, JString, required = false,
                                 default = nil)
  if valid_594207 != nil:
    section.add "X-Amz-Security-Token", valid_594207
  var valid_594208 = header.getOrDefault("X-Amz-Algorithm")
  valid_594208 = validateParameter(valid_594208, JString, required = false,
                                 default = nil)
  if valid_594208 != nil:
    section.add "X-Amz-Algorithm", valid_594208
  var valid_594209 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594209 = validateParameter(valid_594209, JString, required = false,
                                 default = nil)
  if valid_594209 != nil:
    section.add "X-Amz-SignedHeaders", valid_594209
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594210: Call_GetCreateStackInstances_594188; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ## 
  let valid = call_594210.validator(path, query, header, formData, body)
  let scheme = call_594210.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594210.url(scheme.get, call_594210.host, call_594210.base,
                         call_594210.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594210, url, valid)

proc call*(call_594211: Call_GetCreateStackInstances_594188; StackSetName: string;
          Regions: JsonNode; Accounts: JsonNode; OperationId: string = "";
          ParameterOverrides: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "CreateStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getCreateStackInstances
  ## Creates stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. <code>Accounts</code> and <code>Regions</code> are required parameters—you must specify at least one account and one region. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to create stack instances from.
  ##   ParameterOverrides: JArray
  ##                     : <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions where you want to create stack instances using the specified AWS account(s). 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts that you want to create stack instances in the specified region(s) for.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_594212 = newJObject()
  add(query_594212, "OperationId", newJString(OperationId))
  add(query_594212, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    query_594212.add "ParameterOverrides", ParameterOverrides
  add(query_594212, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_594212, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_594212, "Action", newJString(Action))
  if Regions != nil:
    query_594212.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_594212.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_594212, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_594212.add "Accounts", Accounts
  add(query_594212, "Version", newJString(Version))
  add(query_594212, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_594211.call(nil, query_594212, nil, nil, nil)

var getCreateStackInstances* = Call_GetCreateStackInstances_594188(
    name: "getCreateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackInstances",
    validator: validate_GetCreateStackInstances_594189, base: "/",
    url: url_GetCreateStackInstances_594190, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostCreateStackSet_594264 = ref object of OpenApiRestCall_593389
proc url_PostCreateStackSet_594266(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostCreateStackSet_594265(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594267 = query.getOrDefault("Action")
  valid_594267 = validateParameter(valid_594267, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_594267 != nil:
    section.add "Action", valid_594267
  var valid_594268 = query.getOrDefault("Version")
  valid_594268 = validateParameter(valid_594268, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594268 != nil:
    section.add "Version", valid_594268
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594269 = header.getOrDefault("X-Amz-Signature")
  valid_594269 = validateParameter(valid_594269, JString, required = false,
                                 default = nil)
  if valid_594269 != nil:
    section.add "X-Amz-Signature", valid_594269
  var valid_594270 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594270 = validateParameter(valid_594270, JString, required = false,
                                 default = nil)
  if valid_594270 != nil:
    section.add "X-Amz-Content-Sha256", valid_594270
  var valid_594271 = header.getOrDefault("X-Amz-Date")
  valid_594271 = validateParameter(valid_594271, JString, required = false,
                                 default = nil)
  if valid_594271 != nil:
    section.add "X-Amz-Date", valid_594271
  var valid_594272 = header.getOrDefault("X-Amz-Credential")
  valid_594272 = validateParameter(valid_594272, JString, required = false,
                                 default = nil)
  if valid_594272 != nil:
    section.add "X-Amz-Credential", valid_594272
  var valid_594273 = header.getOrDefault("X-Amz-Security-Token")
  valid_594273 = validateParameter(valid_594273, JString, required = false,
                                 default = nil)
  if valid_594273 != nil:
    section.add "X-Amz-Security-Token", valid_594273
  var valid_594274 = header.getOrDefault("X-Amz-Algorithm")
  valid_594274 = validateParameter(valid_594274, JString, required = false,
                                 default = nil)
  if valid_594274 != nil:
    section.add "X-Amz-Algorithm", valid_594274
  var valid_594275 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594275 = validateParameter(valid_594275, JString, required = false,
                                 default = nil)
  if valid_594275 != nil:
    section.add "X-Amz-SignedHeaders", valid_594275
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_594276 = formData.getOrDefault("StackSetName")
  valid_594276 = validateParameter(valid_594276, JString, required = true,
                                 default = nil)
  if valid_594276 != nil:
    section.add "StackSetName", valid_594276
  var valid_594277 = formData.getOrDefault("AdministrationRoleARN")
  valid_594277 = validateParameter(valid_594277, JString, required = false,
                                 default = nil)
  if valid_594277 != nil:
    section.add "AdministrationRoleARN", valid_594277
  var valid_594278 = formData.getOrDefault("Description")
  valid_594278 = validateParameter(valid_594278, JString, required = false,
                                 default = nil)
  if valid_594278 != nil:
    section.add "Description", valid_594278
  var valid_594279 = formData.getOrDefault("TemplateURL")
  valid_594279 = validateParameter(valid_594279, JString, required = false,
                                 default = nil)
  if valid_594279 != nil:
    section.add "TemplateURL", valid_594279
  var valid_594280 = formData.getOrDefault("TemplateBody")
  valid_594280 = validateParameter(valid_594280, JString, required = false,
                                 default = nil)
  if valid_594280 != nil:
    section.add "TemplateBody", valid_594280
  var valid_594281 = formData.getOrDefault("ClientRequestToken")
  valid_594281 = validateParameter(valid_594281, JString, required = false,
                                 default = nil)
  if valid_594281 != nil:
    section.add "ClientRequestToken", valid_594281
  var valid_594282 = formData.getOrDefault("Capabilities")
  valid_594282 = validateParameter(valid_594282, JArray, required = false,
                                 default = nil)
  if valid_594282 != nil:
    section.add "Capabilities", valid_594282
  var valid_594283 = formData.getOrDefault("Tags")
  valid_594283 = validateParameter(valid_594283, JArray, required = false,
                                 default = nil)
  if valid_594283 != nil:
    section.add "Tags", valid_594283
  var valid_594284 = formData.getOrDefault("Parameters")
  valid_594284 = validateParameter(valid_594284, JArray, required = false,
                                 default = nil)
  if valid_594284 != nil:
    section.add "Parameters", valid_594284
  var valid_594285 = formData.getOrDefault("ExecutionRoleName")
  valid_594285 = validateParameter(valid_594285, JString, required = false,
                                 default = nil)
  if valid_594285 != nil:
    section.add "ExecutionRoleName", valid_594285
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594286: Call_PostCreateStackSet_594264; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_594286.validator(path, query, header, formData, body)
  let scheme = call_594286.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594286.url(scheme.get, call_594286.host, call_594286.base,
                         call_594286.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594286, url, valid)

proc call*(call_594287: Call_PostCreateStackSet_594264; StackSetName: string;
          AdministrationRoleARN: string = ""; Description: string = "";
          TemplateURL: string = ""; TemplateBody: string = "";
          ClientRequestToken: string = ""; Action: string = "CreateStackSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil; Version: string = "2010-05-15";
          ExecutionRoleName: string = ""): Recallable =
  ## postCreateStackSet
  ## Creates a stack set.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Version: string (required)
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  var query_594288 = newJObject()
  var formData_594289 = newJObject()
  add(formData_594289, "StackSetName", newJString(StackSetName))
  add(formData_594289, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_594289, "Description", newJString(Description))
  add(formData_594289, "TemplateURL", newJString(TemplateURL))
  add(formData_594289, "TemplateBody", newJString(TemplateBody))
  add(formData_594289, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594288, "Action", newJString(Action))
  if Capabilities != nil:
    formData_594289.add "Capabilities", Capabilities
  if Tags != nil:
    formData_594289.add "Tags", Tags
  if Parameters != nil:
    formData_594289.add "Parameters", Parameters
  add(query_594288, "Version", newJString(Version))
  add(formData_594289, "ExecutionRoleName", newJString(ExecutionRoleName))
  result = call_594287.call(nil, query_594288, nil, formData_594289, nil)

var postCreateStackSet* = Call_PostCreateStackSet_594264(
    name: "postCreateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=CreateStackSet",
    validator: validate_PostCreateStackSet_594265, base: "/",
    url: url_PostCreateStackSet_594266, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetCreateStackSet_594239 = ref object of OpenApiRestCall_593389
proc url_GetCreateStackSet_594241(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetCreateStackSet_594240(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Creates a stack set.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_594242 = query.getOrDefault("StackSetName")
  valid_594242 = validateParameter(valid_594242, JString, required = true,
                                 default = nil)
  if valid_594242 != nil:
    section.add "StackSetName", valid_594242
  var valid_594243 = query.getOrDefault("Parameters")
  valid_594243 = validateParameter(valid_594243, JArray, required = false,
                                 default = nil)
  if valid_594243 != nil:
    section.add "Parameters", valid_594243
  var valid_594244 = query.getOrDefault("Tags")
  valid_594244 = validateParameter(valid_594244, JArray, required = false,
                                 default = nil)
  if valid_594244 != nil:
    section.add "Tags", valid_594244
  var valid_594245 = query.getOrDefault("ExecutionRoleName")
  valid_594245 = validateParameter(valid_594245, JString, required = false,
                                 default = nil)
  if valid_594245 != nil:
    section.add "ExecutionRoleName", valid_594245
  var valid_594246 = query.getOrDefault("TemplateBody")
  valid_594246 = validateParameter(valid_594246, JString, required = false,
                                 default = nil)
  if valid_594246 != nil:
    section.add "TemplateBody", valid_594246
  var valid_594247 = query.getOrDefault("AdministrationRoleARN")
  valid_594247 = validateParameter(valid_594247, JString, required = false,
                                 default = nil)
  if valid_594247 != nil:
    section.add "AdministrationRoleARN", valid_594247
  var valid_594248 = query.getOrDefault("Action")
  valid_594248 = validateParameter(valid_594248, JString, required = true,
                                 default = newJString("CreateStackSet"))
  if valid_594248 != nil:
    section.add "Action", valid_594248
  var valid_594249 = query.getOrDefault("Description")
  valid_594249 = validateParameter(valid_594249, JString, required = false,
                                 default = nil)
  if valid_594249 != nil:
    section.add "Description", valid_594249
  var valid_594250 = query.getOrDefault("ClientRequestToken")
  valid_594250 = validateParameter(valid_594250, JString, required = false,
                                 default = nil)
  if valid_594250 != nil:
    section.add "ClientRequestToken", valid_594250
  var valid_594251 = query.getOrDefault("TemplateURL")
  valid_594251 = validateParameter(valid_594251, JString, required = false,
                                 default = nil)
  if valid_594251 != nil:
    section.add "TemplateURL", valid_594251
  var valid_594252 = query.getOrDefault("Version")
  valid_594252 = validateParameter(valid_594252, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594252 != nil:
    section.add "Version", valid_594252
  var valid_594253 = query.getOrDefault("Capabilities")
  valid_594253 = validateParameter(valid_594253, JArray, required = false,
                                 default = nil)
  if valid_594253 != nil:
    section.add "Capabilities", valid_594253
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594254 = header.getOrDefault("X-Amz-Signature")
  valid_594254 = validateParameter(valid_594254, JString, required = false,
                                 default = nil)
  if valid_594254 != nil:
    section.add "X-Amz-Signature", valid_594254
  var valid_594255 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594255 = validateParameter(valid_594255, JString, required = false,
                                 default = nil)
  if valid_594255 != nil:
    section.add "X-Amz-Content-Sha256", valid_594255
  var valid_594256 = header.getOrDefault("X-Amz-Date")
  valid_594256 = validateParameter(valid_594256, JString, required = false,
                                 default = nil)
  if valid_594256 != nil:
    section.add "X-Amz-Date", valid_594256
  var valid_594257 = header.getOrDefault("X-Amz-Credential")
  valid_594257 = validateParameter(valid_594257, JString, required = false,
                                 default = nil)
  if valid_594257 != nil:
    section.add "X-Amz-Credential", valid_594257
  var valid_594258 = header.getOrDefault("X-Amz-Security-Token")
  valid_594258 = validateParameter(valid_594258, JString, required = false,
                                 default = nil)
  if valid_594258 != nil:
    section.add "X-Amz-Security-Token", valid_594258
  var valid_594259 = header.getOrDefault("X-Amz-Algorithm")
  valid_594259 = validateParameter(valid_594259, JString, required = false,
                                 default = nil)
  if valid_594259 != nil:
    section.add "X-Amz-Algorithm", valid_594259
  var valid_594260 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594260 = validateParameter(valid_594260, JString, required = false,
                                 default = nil)
  if valid_594260 != nil:
    section.add "X-Amz-SignedHeaders", valid_594260
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594261: Call_GetCreateStackSet_594239; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Creates a stack set.
  ## 
  let valid = call_594261.validator(path, query, header, formData, body)
  let scheme = call_594261.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594261.url(scheme.get, call_594261.host, call_594261.base,
                         call_594261.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594261, url, valid)

proc call*(call_594262: Call_GetCreateStackSet_594239; StackSetName: string;
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ExecutionRoleName: string = ""; TemplateBody: string = "";
          AdministrationRoleARN: string = ""; Action: string = "CreateStackSet";
          Description: string = ""; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil): Recallable =
  ## getCreateStackSet
  ## Creates a stack set.
  ##   StackSetName: string (required)
  ##               : <p>The name to associate with the stack set. The name must be unique in the region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note>
  ##   Parameters: JArray
  ##             : The input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p>
  ##   Action: string (required)
  ##   Description: string
  ##              : A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul>
  var query_594263 = newJObject()
  add(query_594263, "StackSetName", newJString(StackSetName))
  if Parameters != nil:
    query_594263.add "Parameters", Parameters
  if Tags != nil:
    query_594263.add "Tags", Tags
  add(query_594263, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_594263, "TemplateBody", newJString(TemplateBody))
  add(query_594263, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_594263, "Action", newJString(Action))
  add(query_594263, "Description", newJString(Description))
  add(query_594263, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594263, "TemplateURL", newJString(TemplateURL))
  add(query_594263, "Version", newJString(Version))
  if Capabilities != nil:
    query_594263.add "Capabilities", Capabilities
  result = call_594262.call(nil, query_594263, nil, nil, nil)

var getCreateStackSet* = Call_GetCreateStackSet_594239(name: "getCreateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=CreateStackSet", validator: validate_GetCreateStackSet_594240,
    base: "/", url: url_GetCreateStackSet_594241,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteChangeSet_594307 = ref object of OpenApiRestCall_593389
proc url_PostDeleteChangeSet_594309(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteChangeSet_594308(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594310 = query.getOrDefault("Action")
  valid_594310 = validateParameter(valid_594310, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_594310 != nil:
    section.add "Action", valid_594310
  var valid_594311 = query.getOrDefault("Version")
  valid_594311 = validateParameter(valid_594311, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594311 != nil:
    section.add "Version", valid_594311
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594312 = header.getOrDefault("X-Amz-Signature")
  valid_594312 = validateParameter(valid_594312, JString, required = false,
                                 default = nil)
  if valid_594312 != nil:
    section.add "X-Amz-Signature", valid_594312
  var valid_594313 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594313 = validateParameter(valid_594313, JString, required = false,
                                 default = nil)
  if valid_594313 != nil:
    section.add "X-Amz-Content-Sha256", valid_594313
  var valid_594314 = header.getOrDefault("X-Amz-Date")
  valid_594314 = validateParameter(valid_594314, JString, required = false,
                                 default = nil)
  if valid_594314 != nil:
    section.add "X-Amz-Date", valid_594314
  var valid_594315 = header.getOrDefault("X-Amz-Credential")
  valid_594315 = validateParameter(valid_594315, JString, required = false,
                                 default = nil)
  if valid_594315 != nil:
    section.add "X-Amz-Credential", valid_594315
  var valid_594316 = header.getOrDefault("X-Amz-Security-Token")
  valid_594316 = validateParameter(valid_594316, JString, required = false,
                                 default = nil)
  if valid_594316 != nil:
    section.add "X-Amz-Security-Token", valid_594316
  var valid_594317 = header.getOrDefault("X-Amz-Algorithm")
  valid_594317 = validateParameter(valid_594317, JString, required = false,
                                 default = nil)
  if valid_594317 != nil:
    section.add "X-Amz-Algorithm", valid_594317
  var valid_594318 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594318 = validateParameter(valid_594318, JString, required = false,
                                 default = nil)
  if valid_594318 != nil:
    section.add "X-Amz-SignedHeaders", valid_594318
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  section = newJObject()
  var valid_594319 = formData.getOrDefault("StackName")
  valid_594319 = validateParameter(valid_594319, JString, required = false,
                                 default = nil)
  if valid_594319 != nil:
    section.add "StackName", valid_594319
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_594320 = formData.getOrDefault("ChangeSetName")
  valid_594320 = validateParameter(valid_594320, JString, required = true,
                                 default = nil)
  if valid_594320 != nil:
    section.add "ChangeSetName", valid_594320
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594321: Call_PostDeleteChangeSet_594307; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_594321.validator(path, query, header, formData, body)
  let scheme = call_594321.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594321.url(scheme.get, call_594321.host, call_594321.base,
                         call_594321.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594321, url, valid)

proc call*(call_594322: Call_PostDeleteChangeSet_594307; ChangeSetName: string;
          StackName: string = ""; Action: string = "DeleteChangeSet";
          Version: string = "2010-05-15"): Recallable =
  ## postDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594323 = newJObject()
  var formData_594324 = newJObject()
  add(formData_594324, "StackName", newJString(StackName))
  add(formData_594324, "ChangeSetName", newJString(ChangeSetName))
  add(query_594323, "Action", newJString(Action))
  add(query_594323, "Version", newJString(Version))
  result = call_594322.call(nil, query_594323, nil, formData_594324, nil)

var postDeleteChangeSet* = Call_PostDeleteChangeSet_594307(
    name: "postDeleteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_PostDeleteChangeSet_594308, base: "/",
    url: url_PostDeleteChangeSet_594309, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteChangeSet_594290 = ref object of OpenApiRestCall_593389
proc url_GetDeleteChangeSet_594292(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteChangeSet_594291(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Action: JString (required)
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Version: JString (required)
  section = newJObject()
  var valid_594293 = query.getOrDefault("StackName")
  valid_594293 = validateParameter(valid_594293, JString, required = false,
                                 default = nil)
  if valid_594293 != nil:
    section.add "StackName", valid_594293
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594294 = query.getOrDefault("Action")
  valid_594294 = validateParameter(valid_594294, JString, required = true,
                                 default = newJString("DeleteChangeSet"))
  if valid_594294 != nil:
    section.add "Action", valid_594294
  var valid_594295 = query.getOrDefault("ChangeSetName")
  valid_594295 = validateParameter(valid_594295, JString, required = true,
                                 default = nil)
  if valid_594295 != nil:
    section.add "ChangeSetName", valid_594295
  var valid_594296 = query.getOrDefault("Version")
  valid_594296 = validateParameter(valid_594296, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594296 != nil:
    section.add "Version", valid_594296
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594297 = header.getOrDefault("X-Amz-Signature")
  valid_594297 = validateParameter(valid_594297, JString, required = false,
                                 default = nil)
  if valid_594297 != nil:
    section.add "X-Amz-Signature", valid_594297
  var valid_594298 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594298 = validateParameter(valid_594298, JString, required = false,
                                 default = nil)
  if valid_594298 != nil:
    section.add "X-Amz-Content-Sha256", valid_594298
  var valid_594299 = header.getOrDefault("X-Amz-Date")
  valid_594299 = validateParameter(valid_594299, JString, required = false,
                                 default = nil)
  if valid_594299 != nil:
    section.add "X-Amz-Date", valid_594299
  var valid_594300 = header.getOrDefault("X-Amz-Credential")
  valid_594300 = validateParameter(valid_594300, JString, required = false,
                                 default = nil)
  if valid_594300 != nil:
    section.add "X-Amz-Credential", valid_594300
  var valid_594301 = header.getOrDefault("X-Amz-Security-Token")
  valid_594301 = validateParameter(valid_594301, JString, required = false,
                                 default = nil)
  if valid_594301 != nil:
    section.add "X-Amz-Security-Token", valid_594301
  var valid_594302 = header.getOrDefault("X-Amz-Algorithm")
  valid_594302 = validateParameter(valid_594302, JString, required = false,
                                 default = nil)
  if valid_594302 != nil:
    section.add "X-Amz-Algorithm", valid_594302
  var valid_594303 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594303 = validateParameter(valid_594303, JString, required = false,
                                 default = nil)
  if valid_594303 != nil:
    section.add "X-Amz-SignedHeaders", valid_594303
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594304: Call_GetDeleteChangeSet_594290; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ## 
  let valid = call_594304.validator(path, query, header, formData, body)
  let scheme = call_594304.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594304.url(scheme.get, call_594304.host, call_594304.base,
                         call_594304.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594304, url, valid)

proc call*(call_594305: Call_GetDeleteChangeSet_594290; ChangeSetName: string;
          StackName: string = ""; Action: string = "DeleteChangeSet";
          Version: string = "2010-05-15"): Recallable =
  ## getDeleteChangeSet
  ## <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to delete.
  ##   Version: string (required)
  var query_594306 = newJObject()
  add(query_594306, "StackName", newJString(StackName))
  add(query_594306, "Action", newJString(Action))
  add(query_594306, "ChangeSetName", newJString(ChangeSetName))
  add(query_594306, "Version", newJString(Version))
  result = call_594305.call(nil, query_594306, nil, nil, nil)

var getDeleteChangeSet* = Call_GetDeleteChangeSet_594290(
    name: "getDeleteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteChangeSet",
    validator: validate_GetDeleteChangeSet_594291, base: "/",
    url: url_GetDeleteChangeSet_594292, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStack_594344 = ref object of OpenApiRestCall_593389
proc url_PostDeleteStack_594346(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStack_594345(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594347 = query.getOrDefault("Action")
  valid_594347 = validateParameter(valid_594347, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_594347 != nil:
    section.add "Action", valid_594347
  var valid_594348 = query.getOrDefault("Version")
  valid_594348 = validateParameter(valid_594348, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594348 != nil:
    section.add "Version", valid_594348
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594349 = header.getOrDefault("X-Amz-Signature")
  valid_594349 = validateParameter(valid_594349, JString, required = false,
                                 default = nil)
  if valid_594349 != nil:
    section.add "X-Amz-Signature", valid_594349
  var valid_594350 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594350 = validateParameter(valid_594350, JString, required = false,
                                 default = nil)
  if valid_594350 != nil:
    section.add "X-Amz-Content-Sha256", valid_594350
  var valid_594351 = header.getOrDefault("X-Amz-Date")
  valid_594351 = validateParameter(valid_594351, JString, required = false,
                                 default = nil)
  if valid_594351 != nil:
    section.add "X-Amz-Date", valid_594351
  var valid_594352 = header.getOrDefault("X-Amz-Credential")
  valid_594352 = validateParameter(valid_594352, JString, required = false,
                                 default = nil)
  if valid_594352 != nil:
    section.add "X-Amz-Credential", valid_594352
  var valid_594353 = header.getOrDefault("X-Amz-Security-Token")
  valid_594353 = validateParameter(valid_594353, JString, required = false,
                                 default = nil)
  if valid_594353 != nil:
    section.add "X-Amz-Security-Token", valid_594353
  var valid_594354 = header.getOrDefault("X-Amz-Algorithm")
  valid_594354 = validateParameter(valid_594354, JString, required = false,
                                 default = nil)
  if valid_594354 != nil:
    section.add "X-Amz-Algorithm", valid_594354
  var valid_594355 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594355 = validateParameter(valid_594355, JString, required = false,
                                 default = nil)
  if valid_594355 != nil:
    section.add "X-Amz-SignedHeaders", valid_594355
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594356 = formData.getOrDefault("StackName")
  valid_594356 = validateParameter(valid_594356, JString, required = true,
                                 default = nil)
  if valid_594356 != nil:
    section.add "StackName", valid_594356
  var valid_594357 = formData.getOrDefault("RoleARN")
  valid_594357 = validateParameter(valid_594357, JString, required = false,
                                 default = nil)
  if valid_594357 != nil:
    section.add "RoleARN", valid_594357
  var valid_594358 = formData.getOrDefault("ClientRequestToken")
  valid_594358 = validateParameter(valid_594358, JString, required = false,
                                 default = nil)
  if valid_594358 != nil:
    section.add "ClientRequestToken", valid_594358
  var valid_594359 = formData.getOrDefault("RetainResources")
  valid_594359 = validateParameter(valid_594359, JArray, required = false,
                                 default = nil)
  if valid_594359 != nil:
    section.add "RetainResources", valid_594359
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594360: Call_PostDeleteStack_594344; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_594360.validator(path, query, header, formData, body)
  let scheme = call_594360.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594360.url(scheme.get, call_594360.host, call_594360.base,
                         call_594360.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594360, url, valid)

proc call*(call_594361: Call_PostDeleteStack_594344; StackName: string;
          RoleARN: string = ""; ClientRequestToken: string = "";
          Action: string = "DeleteStack"; Version: string = "2010-05-15";
          RetainResources: JsonNode = nil): Recallable =
  ## postDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  var query_594362 = newJObject()
  var formData_594363 = newJObject()
  add(formData_594363, "StackName", newJString(StackName))
  add(formData_594363, "RoleARN", newJString(RoleARN))
  add(formData_594363, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594362, "Action", newJString(Action))
  add(query_594362, "Version", newJString(Version))
  if RetainResources != nil:
    formData_594363.add "RetainResources", RetainResources
  result = call_594361.call(nil, query_594362, nil, formData_594363, nil)

var postDeleteStack* = Call_PostDeleteStack_594344(name: "postDeleteStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_PostDeleteStack_594345,
    base: "/", url: url_PostDeleteStack_594346, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStack_594325 = ref object of OpenApiRestCall_593389
proc url_GetDeleteStack_594327(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStack_594326(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Version: JString (required)
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594328 = query.getOrDefault("StackName")
  valid_594328 = validateParameter(valid_594328, JString, required = true,
                                 default = nil)
  if valid_594328 != nil:
    section.add "StackName", valid_594328
  var valid_594329 = query.getOrDefault("RetainResources")
  valid_594329 = validateParameter(valid_594329, JArray, required = false,
                                 default = nil)
  if valid_594329 != nil:
    section.add "RetainResources", valid_594329
  var valid_594330 = query.getOrDefault("Action")
  valid_594330 = validateParameter(valid_594330, JString, required = true,
                                 default = newJString("DeleteStack"))
  if valid_594330 != nil:
    section.add "Action", valid_594330
  var valid_594331 = query.getOrDefault("ClientRequestToken")
  valid_594331 = validateParameter(valid_594331, JString, required = false,
                                 default = nil)
  if valid_594331 != nil:
    section.add "ClientRequestToken", valid_594331
  var valid_594332 = query.getOrDefault("Version")
  valid_594332 = validateParameter(valid_594332, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594332 != nil:
    section.add "Version", valid_594332
  var valid_594333 = query.getOrDefault("RoleARN")
  valid_594333 = validateParameter(valid_594333, JString, required = false,
                                 default = nil)
  if valid_594333 != nil:
    section.add "RoleARN", valid_594333
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594334 = header.getOrDefault("X-Amz-Signature")
  valid_594334 = validateParameter(valid_594334, JString, required = false,
                                 default = nil)
  if valid_594334 != nil:
    section.add "X-Amz-Signature", valid_594334
  var valid_594335 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594335 = validateParameter(valid_594335, JString, required = false,
                                 default = nil)
  if valid_594335 != nil:
    section.add "X-Amz-Content-Sha256", valid_594335
  var valid_594336 = header.getOrDefault("X-Amz-Date")
  valid_594336 = validateParameter(valid_594336, JString, required = false,
                                 default = nil)
  if valid_594336 != nil:
    section.add "X-Amz-Date", valid_594336
  var valid_594337 = header.getOrDefault("X-Amz-Credential")
  valid_594337 = validateParameter(valid_594337, JString, required = false,
                                 default = nil)
  if valid_594337 != nil:
    section.add "X-Amz-Credential", valid_594337
  var valid_594338 = header.getOrDefault("X-Amz-Security-Token")
  valid_594338 = validateParameter(valid_594338, JString, required = false,
                                 default = nil)
  if valid_594338 != nil:
    section.add "X-Amz-Security-Token", valid_594338
  var valid_594339 = header.getOrDefault("X-Amz-Algorithm")
  valid_594339 = validateParameter(valid_594339, JString, required = false,
                                 default = nil)
  if valid_594339 != nil:
    section.add "X-Amz-Algorithm", valid_594339
  var valid_594340 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594340 = validateParameter(valid_594340, JString, required = false,
                                 default = nil)
  if valid_594340 != nil:
    section.add "X-Amz-SignedHeaders", valid_594340
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594341: Call_GetDeleteStack_594325; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ## 
  let valid = call_594341.validator(path, query, header, formData, body)
  let scheme = call_594341.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594341.url(scheme.get, call_594341.host, call_594341.base,
                         call_594341.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594341, url, valid)

proc call*(call_594342: Call_GetDeleteStack_594325; StackName: string;
          RetainResources: JsonNode = nil; Action: string = "DeleteStack";
          ClientRequestToken: string = ""; Version: string = "2010-05-15";
          RoleARN: string = ""): Recallable =
  ## getDeleteStack
  ## Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
  ##   StackName: string (required)
  ##            : The name or the unique stack ID that is associated with the stack.
  ##   RetainResources: JArray
  ##                  : <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Version: string (required)
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_594343 = newJObject()
  add(query_594343, "StackName", newJString(StackName))
  if RetainResources != nil:
    query_594343.add "RetainResources", RetainResources
  add(query_594343, "Action", newJString(Action))
  add(query_594343, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594343, "Version", newJString(Version))
  add(query_594343, "RoleARN", newJString(RoleARN))
  result = call_594342.call(nil, query_594343, nil, nil, nil)

var getDeleteStack* = Call_GetDeleteStack_594325(name: "getDeleteStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStack", validator: validate_GetDeleteStack_594326,
    base: "/", url: url_GetDeleteStack_594327, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackInstances_594389 = ref object of OpenApiRestCall_593389
proc url_PostDeleteStackInstances_594391(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackInstances_594390(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594392 = query.getOrDefault("Action")
  valid_594392 = validateParameter(valid_594392, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_594392 != nil:
    section.add "Action", valid_594392
  var valid_594393 = query.getOrDefault("Version")
  valid_594393 = validateParameter(valid_594393, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594393 != nil:
    section.add "Version", valid_594393
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594394 = header.getOrDefault("X-Amz-Signature")
  valid_594394 = validateParameter(valid_594394, JString, required = false,
                                 default = nil)
  if valid_594394 != nil:
    section.add "X-Amz-Signature", valid_594394
  var valid_594395 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594395 = validateParameter(valid_594395, JString, required = false,
                                 default = nil)
  if valid_594395 != nil:
    section.add "X-Amz-Content-Sha256", valid_594395
  var valid_594396 = header.getOrDefault("X-Amz-Date")
  valid_594396 = validateParameter(valid_594396, JString, required = false,
                                 default = nil)
  if valid_594396 != nil:
    section.add "X-Amz-Date", valid_594396
  var valid_594397 = header.getOrDefault("X-Amz-Credential")
  valid_594397 = validateParameter(valid_594397, JString, required = false,
                                 default = nil)
  if valid_594397 != nil:
    section.add "X-Amz-Credential", valid_594397
  var valid_594398 = header.getOrDefault("X-Amz-Security-Token")
  valid_594398 = validateParameter(valid_594398, JString, required = false,
                                 default = nil)
  if valid_594398 != nil:
    section.add "X-Amz-Security-Token", valid_594398
  var valid_594399 = header.getOrDefault("X-Amz-Algorithm")
  valid_594399 = validateParameter(valid_594399, JString, required = false,
                                 default = nil)
  if valid_594399 != nil:
    section.add "X-Amz-Algorithm", valid_594399
  var valid_594400 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594400 = validateParameter(valid_594400, JString, required = false,
                                 default = nil)
  if valid_594400 != nil:
    section.add "X-Amz-SignedHeaders", valid_594400
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_594401 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_594401 = validateParameter(valid_594401, JString, required = false,
                                 default = nil)
  if valid_594401 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_594401
  var valid_594402 = formData.getOrDefault("OperationId")
  valid_594402 = validateParameter(valid_594402, JString, required = false,
                                 default = nil)
  if valid_594402 != nil:
    section.add "OperationId", valid_594402
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_594403 = formData.getOrDefault("StackSetName")
  valid_594403 = validateParameter(valid_594403, JString, required = true,
                                 default = nil)
  if valid_594403 != nil:
    section.add "StackSetName", valid_594403
  var valid_594404 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_594404 = validateParameter(valid_594404, JArray, required = false,
                                 default = nil)
  if valid_594404 != nil:
    section.add "OperationPreferences.RegionOrder", valid_594404
  var valid_594405 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_594405 = validateParameter(valid_594405, JString, required = false,
                                 default = nil)
  if valid_594405 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_594405
  var valid_594406 = formData.getOrDefault("Accounts")
  valid_594406 = validateParameter(valid_594406, JArray, required = true, default = nil)
  if valid_594406 != nil:
    section.add "Accounts", valid_594406
  var valid_594407 = formData.getOrDefault("Regions")
  valid_594407 = validateParameter(valid_594407, JArray, required = true, default = nil)
  if valid_594407 != nil:
    section.add "Regions", valid_594407
  var valid_594408 = formData.getOrDefault("RetainStacks")
  valid_594408 = validateParameter(valid_594408, JBool, required = true, default = nil)
  if valid_594408 != nil:
    section.add "RetainStacks", valid_594408
  var valid_594409 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_594409 = validateParameter(valid_594409, JString, required = false,
                                 default = nil)
  if valid_594409 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_594409
  var valid_594410 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_594410 = validateParameter(valid_594410, JString, required = false,
                                 default = nil)
  if valid_594410 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_594410
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594411: Call_PostDeleteStackInstances_594389; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_594411.validator(path, query, header, formData, body)
  let scheme = call_594411.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594411.url(scheme.get, call_594411.host, call_594411.base,
                         call_594411.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594411, url, valid)

proc call*(call_594412: Call_PostDeleteStackInstances_594389; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode; RetainStacks: bool;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DeleteStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_594413 = newJObject()
  var formData_594414 = newJObject()
  add(formData_594414, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_594414, "OperationId", newJString(OperationId))
  add(formData_594414, "StackSetName", newJString(StackSetName))
  if OperationPreferencesRegionOrder != nil:
    formData_594414.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_594414, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_594414.add "Accounts", Accounts
  if Regions != nil:
    formData_594414.add "Regions", Regions
  add(formData_594414, "RetainStacks", newJBool(RetainStacks))
  add(query_594413, "Action", newJString(Action))
  add(formData_594414, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_594413, "Version", newJString(Version))
  add(formData_594414, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_594412.call(nil, query_594413, nil, formData_594414, nil)

var postDeleteStackInstances* = Call_PostDeleteStackInstances_594389(
    name: "postDeleteStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_PostDeleteStackInstances_594390, base: "/",
    url: url_PostDeleteStackInstances_594391, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackInstances_594364 = ref object of OpenApiRestCall_593389
proc url_GetDeleteStackInstances_594366(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackInstances_594365(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: JBool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_594367 = query.getOrDefault("OperationId")
  valid_594367 = validateParameter(valid_594367, JString, required = false,
                                 default = nil)
  if valid_594367 != nil:
    section.add "OperationId", valid_594367
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_594368 = query.getOrDefault("StackSetName")
  valid_594368 = validateParameter(valid_594368, JString, required = true,
                                 default = nil)
  if valid_594368 != nil:
    section.add "StackSetName", valid_594368
  var valid_594369 = query.getOrDefault("RetainStacks")
  valid_594369 = validateParameter(valid_594369, JBool, required = true, default = nil)
  if valid_594369 != nil:
    section.add "RetainStacks", valid_594369
  var valid_594370 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_594370 = validateParameter(valid_594370, JString, required = false,
                                 default = nil)
  if valid_594370 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_594370
  var valid_594371 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_594371 = validateParameter(valid_594371, JString, required = false,
                                 default = nil)
  if valid_594371 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_594371
  var valid_594372 = query.getOrDefault("Action")
  valid_594372 = validateParameter(valid_594372, JString, required = true,
                                 default = newJString("DeleteStackInstances"))
  if valid_594372 != nil:
    section.add "Action", valid_594372
  var valid_594373 = query.getOrDefault("Regions")
  valid_594373 = validateParameter(valid_594373, JArray, required = true, default = nil)
  if valid_594373 != nil:
    section.add "Regions", valid_594373
  var valid_594374 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_594374 = validateParameter(valid_594374, JArray, required = false,
                                 default = nil)
  if valid_594374 != nil:
    section.add "OperationPreferences.RegionOrder", valid_594374
  var valid_594375 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_594375 = validateParameter(valid_594375, JString, required = false,
                                 default = nil)
  if valid_594375 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_594375
  var valid_594376 = query.getOrDefault("Accounts")
  valid_594376 = validateParameter(valid_594376, JArray, required = true, default = nil)
  if valid_594376 != nil:
    section.add "Accounts", valid_594376
  var valid_594377 = query.getOrDefault("Version")
  valid_594377 = validateParameter(valid_594377, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594377 != nil:
    section.add "Version", valid_594377
  var valid_594378 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_594378 = validateParameter(valid_594378, JString, required = false,
                                 default = nil)
  if valid_594378 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_594378
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594379 = header.getOrDefault("X-Amz-Signature")
  valid_594379 = validateParameter(valid_594379, JString, required = false,
                                 default = nil)
  if valid_594379 != nil:
    section.add "X-Amz-Signature", valid_594379
  var valid_594380 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594380 = validateParameter(valid_594380, JString, required = false,
                                 default = nil)
  if valid_594380 != nil:
    section.add "X-Amz-Content-Sha256", valid_594380
  var valid_594381 = header.getOrDefault("X-Amz-Date")
  valid_594381 = validateParameter(valid_594381, JString, required = false,
                                 default = nil)
  if valid_594381 != nil:
    section.add "X-Amz-Date", valid_594381
  var valid_594382 = header.getOrDefault("X-Amz-Credential")
  valid_594382 = validateParameter(valid_594382, JString, required = false,
                                 default = nil)
  if valid_594382 != nil:
    section.add "X-Amz-Credential", valid_594382
  var valid_594383 = header.getOrDefault("X-Amz-Security-Token")
  valid_594383 = validateParameter(valid_594383, JString, required = false,
                                 default = nil)
  if valid_594383 != nil:
    section.add "X-Amz-Security-Token", valid_594383
  var valid_594384 = header.getOrDefault("X-Amz-Algorithm")
  valid_594384 = validateParameter(valid_594384, JString, required = false,
                                 default = nil)
  if valid_594384 != nil:
    section.add "X-Amz-Algorithm", valid_594384
  var valid_594385 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594385 = validateParameter(valid_594385, JString, required = false,
                                 default = nil)
  if valid_594385 != nil:
    section.add "X-Amz-SignedHeaders", valid_594385
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594386: Call_GetDeleteStackInstances_594364; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ## 
  let valid = call_594386.validator(path, query, header, formData, body)
  let scheme = call_594386.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594386.url(scheme.get, call_594386.host, call_594386.base,
                         call_594386.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594386, url, valid)

proc call*(call_594387: Call_GetDeleteStackInstances_594364; StackSetName: string;
          RetainStacks: bool; Regions: JsonNode; Accounts: JsonNode;
          OperationId: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "DeleteStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getDeleteStackInstances
  ## Deletes stack instances for the specified accounts, in the specified regions. 
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to delete stack instances for.
  ##   RetainStacks: bool (required)
  ##               : <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The regions where you want to delete stack set instances. 
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of the AWS accounts that you want to delete stack instances for.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_594388 = newJObject()
  add(query_594388, "OperationId", newJString(OperationId))
  add(query_594388, "StackSetName", newJString(StackSetName))
  add(query_594388, "RetainStacks", newJBool(RetainStacks))
  add(query_594388, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_594388, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_594388, "Action", newJString(Action))
  if Regions != nil:
    query_594388.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_594388.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_594388, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_594388.add "Accounts", Accounts
  add(query_594388, "Version", newJString(Version))
  add(query_594388, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_594387.call(nil, query_594388, nil, nil, nil)

var getDeleteStackInstances* = Call_GetDeleteStackInstances_594364(
    name: "getDeleteStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackInstances",
    validator: validate_GetDeleteStackInstances_594365, base: "/",
    url: url_GetDeleteStackInstances_594366, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDeleteStackSet_594431 = ref object of OpenApiRestCall_593389
proc url_PostDeleteStackSet_594433(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDeleteStackSet_594432(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594434 = query.getOrDefault("Action")
  valid_594434 = validateParameter(valid_594434, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_594434 != nil:
    section.add "Action", valid_594434
  var valid_594435 = query.getOrDefault("Version")
  valid_594435 = validateParameter(valid_594435, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594435 != nil:
    section.add "Version", valid_594435
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594436 = header.getOrDefault("X-Amz-Signature")
  valid_594436 = validateParameter(valid_594436, JString, required = false,
                                 default = nil)
  if valid_594436 != nil:
    section.add "X-Amz-Signature", valid_594436
  var valid_594437 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594437 = validateParameter(valid_594437, JString, required = false,
                                 default = nil)
  if valid_594437 != nil:
    section.add "X-Amz-Content-Sha256", valid_594437
  var valid_594438 = header.getOrDefault("X-Amz-Date")
  valid_594438 = validateParameter(valid_594438, JString, required = false,
                                 default = nil)
  if valid_594438 != nil:
    section.add "X-Amz-Date", valid_594438
  var valid_594439 = header.getOrDefault("X-Amz-Credential")
  valid_594439 = validateParameter(valid_594439, JString, required = false,
                                 default = nil)
  if valid_594439 != nil:
    section.add "X-Amz-Credential", valid_594439
  var valid_594440 = header.getOrDefault("X-Amz-Security-Token")
  valid_594440 = validateParameter(valid_594440, JString, required = false,
                                 default = nil)
  if valid_594440 != nil:
    section.add "X-Amz-Security-Token", valid_594440
  var valid_594441 = header.getOrDefault("X-Amz-Algorithm")
  valid_594441 = validateParameter(valid_594441, JString, required = false,
                                 default = nil)
  if valid_594441 != nil:
    section.add "X-Amz-Algorithm", valid_594441
  var valid_594442 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594442 = validateParameter(valid_594442, JString, required = false,
                                 default = nil)
  if valid_594442 != nil:
    section.add "X-Amz-SignedHeaders", valid_594442
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_594443 = formData.getOrDefault("StackSetName")
  valid_594443 = validateParameter(valid_594443, JString, required = true,
                                 default = nil)
  if valid_594443 != nil:
    section.add "StackSetName", valid_594443
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594444: Call_PostDeleteStackSet_594431; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_594444.validator(path, query, header, formData, body)
  let scheme = call_594444.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594444.url(scheme.get, call_594444.host, call_594444.base,
                         call_594444.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594444, url, valid)

proc call*(call_594445: Call_PostDeleteStackSet_594431; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594446 = newJObject()
  var formData_594447 = newJObject()
  add(formData_594447, "StackSetName", newJString(StackSetName))
  add(query_594446, "Action", newJString(Action))
  add(query_594446, "Version", newJString(Version))
  result = call_594445.call(nil, query_594446, nil, formData_594447, nil)

var postDeleteStackSet* = Call_PostDeleteStackSet_594431(
    name: "postDeleteStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DeleteStackSet",
    validator: validate_PostDeleteStackSet_594432, base: "/",
    url: url_PostDeleteStackSet_594433, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDeleteStackSet_594415 = ref object of OpenApiRestCall_593389
proc url_GetDeleteStackSet_594417(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDeleteStackSet_594416(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_594418 = query.getOrDefault("StackSetName")
  valid_594418 = validateParameter(valid_594418, JString, required = true,
                                 default = nil)
  if valid_594418 != nil:
    section.add "StackSetName", valid_594418
  var valid_594419 = query.getOrDefault("Action")
  valid_594419 = validateParameter(valid_594419, JString, required = true,
                                 default = newJString("DeleteStackSet"))
  if valid_594419 != nil:
    section.add "Action", valid_594419
  var valid_594420 = query.getOrDefault("Version")
  valid_594420 = validateParameter(valid_594420, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594420 != nil:
    section.add "Version", valid_594420
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594421 = header.getOrDefault("X-Amz-Signature")
  valid_594421 = validateParameter(valid_594421, JString, required = false,
                                 default = nil)
  if valid_594421 != nil:
    section.add "X-Amz-Signature", valid_594421
  var valid_594422 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594422 = validateParameter(valid_594422, JString, required = false,
                                 default = nil)
  if valid_594422 != nil:
    section.add "X-Amz-Content-Sha256", valid_594422
  var valid_594423 = header.getOrDefault("X-Amz-Date")
  valid_594423 = validateParameter(valid_594423, JString, required = false,
                                 default = nil)
  if valid_594423 != nil:
    section.add "X-Amz-Date", valid_594423
  var valid_594424 = header.getOrDefault("X-Amz-Credential")
  valid_594424 = validateParameter(valid_594424, JString, required = false,
                                 default = nil)
  if valid_594424 != nil:
    section.add "X-Amz-Credential", valid_594424
  var valid_594425 = header.getOrDefault("X-Amz-Security-Token")
  valid_594425 = validateParameter(valid_594425, JString, required = false,
                                 default = nil)
  if valid_594425 != nil:
    section.add "X-Amz-Security-Token", valid_594425
  var valid_594426 = header.getOrDefault("X-Amz-Algorithm")
  valid_594426 = validateParameter(valid_594426, JString, required = false,
                                 default = nil)
  if valid_594426 != nil:
    section.add "X-Amz-Algorithm", valid_594426
  var valid_594427 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594427 = validateParameter(valid_594427, JString, required = false,
                                 default = nil)
  if valid_594427 != nil:
    section.add "X-Amz-SignedHeaders", valid_594427
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594428: Call_GetDeleteStackSet_594415; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ## 
  let valid = call_594428.validator(path, query, header, formData, body)
  let scheme = call_594428.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594428.url(scheme.get, call_594428.host, call_594428.base,
                         call_594428.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594428, url, valid)

proc call*(call_594429: Call_GetDeleteStackSet_594415; StackSetName: string;
          Action: string = "DeleteStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDeleteStackSet
  ## Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594430 = newJObject()
  add(query_594430, "StackSetName", newJString(StackSetName))
  add(query_594430, "Action", newJString(Action))
  add(query_594430, "Version", newJString(Version))
  result = call_594429.call(nil, query_594430, nil, nil, nil)

var getDeleteStackSet* = Call_GetDeleteStackSet_594415(name: "getDeleteStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DeleteStackSet", validator: validate_GetDeleteStackSet_594416,
    base: "/", url: url_GetDeleteStackSet_594417,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeAccountLimits_594464 = ref object of OpenApiRestCall_593389
proc url_PostDescribeAccountLimits_594466(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeAccountLimits_594465(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594467 = query.getOrDefault("Action")
  valid_594467 = validateParameter(valid_594467, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_594467 != nil:
    section.add "Action", valid_594467
  var valid_594468 = query.getOrDefault("Version")
  valid_594468 = validateParameter(valid_594468, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594468 != nil:
    section.add "Version", valid_594468
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594469 = header.getOrDefault("X-Amz-Signature")
  valid_594469 = validateParameter(valid_594469, JString, required = false,
                                 default = nil)
  if valid_594469 != nil:
    section.add "X-Amz-Signature", valid_594469
  var valid_594470 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594470 = validateParameter(valid_594470, JString, required = false,
                                 default = nil)
  if valid_594470 != nil:
    section.add "X-Amz-Content-Sha256", valid_594470
  var valid_594471 = header.getOrDefault("X-Amz-Date")
  valid_594471 = validateParameter(valid_594471, JString, required = false,
                                 default = nil)
  if valid_594471 != nil:
    section.add "X-Amz-Date", valid_594471
  var valid_594472 = header.getOrDefault("X-Amz-Credential")
  valid_594472 = validateParameter(valid_594472, JString, required = false,
                                 default = nil)
  if valid_594472 != nil:
    section.add "X-Amz-Credential", valid_594472
  var valid_594473 = header.getOrDefault("X-Amz-Security-Token")
  valid_594473 = validateParameter(valid_594473, JString, required = false,
                                 default = nil)
  if valid_594473 != nil:
    section.add "X-Amz-Security-Token", valid_594473
  var valid_594474 = header.getOrDefault("X-Amz-Algorithm")
  valid_594474 = validateParameter(valid_594474, JString, required = false,
                                 default = nil)
  if valid_594474 != nil:
    section.add "X-Amz-Algorithm", valid_594474
  var valid_594475 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594475 = validateParameter(valid_594475, JString, required = false,
                                 default = nil)
  if valid_594475 != nil:
    section.add "X-Amz-SignedHeaders", valid_594475
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  section = newJObject()
  var valid_594476 = formData.getOrDefault("NextToken")
  valid_594476 = validateParameter(valid_594476, JString, required = false,
                                 default = nil)
  if valid_594476 != nil:
    section.add "NextToken", valid_594476
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594477: Call_PostDescribeAccountLimits_594464; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_594477.validator(path, query, header, formData, body)
  let scheme = call_594477.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594477.url(scheme.get, call_594477.host, call_594477.base,
                         call_594477.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594477, url, valid)

proc call*(call_594478: Call_PostDescribeAccountLimits_594464;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594479 = newJObject()
  var formData_594480 = newJObject()
  add(formData_594480, "NextToken", newJString(NextToken))
  add(query_594479, "Action", newJString(Action))
  add(query_594479, "Version", newJString(Version))
  result = call_594478.call(nil, query_594479, nil, formData_594480, nil)

var postDescribeAccountLimits* = Call_PostDescribeAccountLimits_594464(
    name: "postDescribeAccountLimits", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_PostDescribeAccountLimits_594465, base: "/",
    url: url_PostDescribeAccountLimits_594466,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeAccountLimits_594448 = ref object of OpenApiRestCall_593389
proc url_GetDescribeAccountLimits_594450(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeAccountLimits_594449(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_594451 = query.getOrDefault("NextToken")
  valid_594451 = validateParameter(valid_594451, JString, required = false,
                                 default = nil)
  if valid_594451 != nil:
    section.add "NextToken", valid_594451
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594452 = query.getOrDefault("Action")
  valid_594452 = validateParameter(valid_594452, JString, required = true,
                                 default = newJString("DescribeAccountLimits"))
  if valid_594452 != nil:
    section.add "Action", valid_594452
  var valid_594453 = query.getOrDefault("Version")
  valid_594453 = validateParameter(valid_594453, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594453 != nil:
    section.add "Version", valid_594453
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594454 = header.getOrDefault("X-Amz-Signature")
  valid_594454 = validateParameter(valid_594454, JString, required = false,
                                 default = nil)
  if valid_594454 != nil:
    section.add "X-Amz-Signature", valid_594454
  var valid_594455 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594455 = validateParameter(valid_594455, JString, required = false,
                                 default = nil)
  if valid_594455 != nil:
    section.add "X-Amz-Content-Sha256", valid_594455
  var valid_594456 = header.getOrDefault("X-Amz-Date")
  valid_594456 = validateParameter(valid_594456, JString, required = false,
                                 default = nil)
  if valid_594456 != nil:
    section.add "X-Amz-Date", valid_594456
  var valid_594457 = header.getOrDefault("X-Amz-Credential")
  valid_594457 = validateParameter(valid_594457, JString, required = false,
                                 default = nil)
  if valid_594457 != nil:
    section.add "X-Amz-Credential", valid_594457
  var valid_594458 = header.getOrDefault("X-Amz-Security-Token")
  valid_594458 = validateParameter(valid_594458, JString, required = false,
                                 default = nil)
  if valid_594458 != nil:
    section.add "X-Amz-Security-Token", valid_594458
  var valid_594459 = header.getOrDefault("X-Amz-Algorithm")
  valid_594459 = validateParameter(valid_594459, JString, required = false,
                                 default = nil)
  if valid_594459 != nil:
    section.add "X-Amz-Algorithm", valid_594459
  var valid_594460 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594460 = validateParameter(valid_594460, JString, required = false,
                                 default = nil)
  if valid_594460 != nil:
    section.add "X-Amz-SignedHeaders", valid_594460
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594461: Call_GetDescribeAccountLimits_594448; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ## 
  let valid = call_594461.validator(path, query, header, formData, body)
  let scheme = call_594461.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594461.url(scheme.get, call_594461.host, call_594461.base,
                         call_594461.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594461, url, valid)

proc call*(call_594462: Call_GetDescribeAccountLimits_594448;
          NextToken: string = ""; Action: string = "DescribeAccountLimits";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeAccountLimits
  ## Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
  ##   NextToken: string
  ##            : A string that identifies the next page of limits that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594463 = newJObject()
  add(query_594463, "NextToken", newJString(NextToken))
  add(query_594463, "Action", newJString(Action))
  add(query_594463, "Version", newJString(Version))
  result = call_594462.call(nil, query_594463, nil, nil, nil)

var getDescribeAccountLimits* = Call_GetDescribeAccountLimits_594448(
    name: "getDescribeAccountLimits", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeAccountLimits",
    validator: validate_GetDescribeAccountLimits_594449, base: "/",
    url: url_GetDescribeAccountLimits_594450, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeChangeSet_594499 = ref object of OpenApiRestCall_593389
proc url_PostDescribeChangeSet_594501(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeChangeSet_594500(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594502 = query.getOrDefault("Action")
  valid_594502 = validateParameter(valid_594502, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_594502 != nil:
    section.add "Action", valid_594502
  var valid_594503 = query.getOrDefault("Version")
  valid_594503 = validateParameter(valid_594503, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594503 != nil:
    section.add "Version", valid_594503
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594504 = header.getOrDefault("X-Amz-Signature")
  valid_594504 = validateParameter(valid_594504, JString, required = false,
                                 default = nil)
  if valid_594504 != nil:
    section.add "X-Amz-Signature", valid_594504
  var valid_594505 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594505 = validateParameter(valid_594505, JString, required = false,
                                 default = nil)
  if valid_594505 != nil:
    section.add "X-Amz-Content-Sha256", valid_594505
  var valid_594506 = header.getOrDefault("X-Amz-Date")
  valid_594506 = validateParameter(valid_594506, JString, required = false,
                                 default = nil)
  if valid_594506 != nil:
    section.add "X-Amz-Date", valid_594506
  var valid_594507 = header.getOrDefault("X-Amz-Credential")
  valid_594507 = validateParameter(valid_594507, JString, required = false,
                                 default = nil)
  if valid_594507 != nil:
    section.add "X-Amz-Credential", valid_594507
  var valid_594508 = header.getOrDefault("X-Amz-Security-Token")
  valid_594508 = validateParameter(valid_594508, JString, required = false,
                                 default = nil)
  if valid_594508 != nil:
    section.add "X-Amz-Security-Token", valid_594508
  var valid_594509 = header.getOrDefault("X-Amz-Algorithm")
  valid_594509 = validateParameter(valid_594509, JString, required = false,
                                 default = nil)
  if valid_594509 != nil:
    section.add "X-Amz-Algorithm", valid_594509
  var valid_594510 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594510 = validateParameter(valid_594510, JString, required = false,
                                 default = nil)
  if valid_594510 != nil:
    section.add "X-Amz-SignedHeaders", valid_594510
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  section = newJObject()
  var valid_594511 = formData.getOrDefault("StackName")
  valid_594511 = validateParameter(valid_594511, JString, required = false,
                                 default = nil)
  if valid_594511 != nil:
    section.add "StackName", valid_594511
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_594512 = formData.getOrDefault("ChangeSetName")
  valid_594512 = validateParameter(valid_594512, JString, required = true,
                                 default = nil)
  if valid_594512 != nil:
    section.add "ChangeSetName", valid_594512
  var valid_594513 = formData.getOrDefault("NextToken")
  valid_594513 = validateParameter(valid_594513, JString, required = false,
                                 default = nil)
  if valid_594513 != nil:
    section.add "NextToken", valid_594513
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594514: Call_PostDescribeChangeSet_594499; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_594514.validator(path, query, header, formData, body)
  let scheme = call_594514.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594514.url(scheme.get, call_594514.host, call_594514.base,
                         call_594514.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594514, url, valid)

proc call*(call_594515: Call_PostDescribeChangeSet_594499; ChangeSetName: string;
          StackName: string = ""; NextToken: string = "";
          Action: string = "DescribeChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594516 = newJObject()
  var formData_594517 = newJObject()
  add(formData_594517, "StackName", newJString(StackName))
  add(formData_594517, "ChangeSetName", newJString(ChangeSetName))
  add(formData_594517, "NextToken", newJString(NextToken))
  add(query_594516, "Action", newJString(Action))
  add(query_594516, "Version", newJString(Version))
  result = call_594515.call(nil, query_594516, nil, formData_594517, nil)

var postDescribeChangeSet* = Call_PostDescribeChangeSet_594499(
    name: "postDescribeChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_PostDescribeChangeSet_594500, base: "/",
    url: url_PostDescribeChangeSet_594501, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeChangeSet_594481 = ref object of OpenApiRestCall_593389
proc url_GetDescribeChangeSet_594483(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeChangeSet_594482(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Action: JString (required)
  ##   ChangeSetName: JString (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   Version: JString (required)
  section = newJObject()
  var valid_594484 = query.getOrDefault("NextToken")
  valid_594484 = validateParameter(valid_594484, JString, required = false,
                                 default = nil)
  if valid_594484 != nil:
    section.add "NextToken", valid_594484
  var valid_594485 = query.getOrDefault("StackName")
  valid_594485 = validateParameter(valid_594485, JString, required = false,
                                 default = nil)
  if valid_594485 != nil:
    section.add "StackName", valid_594485
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594486 = query.getOrDefault("Action")
  valid_594486 = validateParameter(valid_594486, JString, required = true,
                                 default = newJString("DescribeChangeSet"))
  if valid_594486 != nil:
    section.add "Action", valid_594486
  var valid_594487 = query.getOrDefault("ChangeSetName")
  valid_594487 = validateParameter(valid_594487, JString, required = true,
                                 default = nil)
  if valid_594487 != nil:
    section.add "ChangeSetName", valid_594487
  var valid_594488 = query.getOrDefault("Version")
  valid_594488 = validateParameter(valid_594488, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594488 != nil:
    section.add "Version", valid_594488
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594489 = header.getOrDefault("X-Amz-Signature")
  valid_594489 = validateParameter(valid_594489, JString, required = false,
                                 default = nil)
  if valid_594489 != nil:
    section.add "X-Amz-Signature", valid_594489
  var valid_594490 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594490 = validateParameter(valid_594490, JString, required = false,
                                 default = nil)
  if valid_594490 != nil:
    section.add "X-Amz-Content-Sha256", valid_594490
  var valid_594491 = header.getOrDefault("X-Amz-Date")
  valid_594491 = validateParameter(valid_594491, JString, required = false,
                                 default = nil)
  if valid_594491 != nil:
    section.add "X-Amz-Date", valid_594491
  var valid_594492 = header.getOrDefault("X-Amz-Credential")
  valid_594492 = validateParameter(valid_594492, JString, required = false,
                                 default = nil)
  if valid_594492 != nil:
    section.add "X-Amz-Credential", valid_594492
  var valid_594493 = header.getOrDefault("X-Amz-Security-Token")
  valid_594493 = validateParameter(valid_594493, JString, required = false,
                                 default = nil)
  if valid_594493 != nil:
    section.add "X-Amz-Security-Token", valid_594493
  var valid_594494 = header.getOrDefault("X-Amz-Algorithm")
  valid_594494 = validateParameter(valid_594494, JString, required = false,
                                 default = nil)
  if valid_594494 != nil:
    section.add "X-Amz-Algorithm", valid_594494
  var valid_594495 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594495 = validateParameter(valid_594495, JString, required = false,
                                 default = nil)
  if valid_594495 != nil:
    section.add "X-Amz-SignedHeaders", valid_594495
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594496: Call_GetDescribeChangeSet_594481; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ## 
  let valid = call_594496.validator(path, query, header, formData, body)
  let scheme = call_594496.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594496.url(scheme.get, call_594496.host, call_594496.base,
                         call_594496.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594496, url, valid)

proc call*(call_594497: Call_GetDescribeChangeSet_594481; ChangeSetName: string;
          NextToken: string = ""; StackName: string = "";
          Action: string = "DescribeChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeChangeSet
  ## Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
  ##   NextToken: string
  ##            : A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
  ##   Action: string (required)
  ##   ChangeSetName: string (required)
  ##                : The name or Amazon Resource Name (ARN) of the change set that you want to describe.
  ##   Version: string (required)
  var query_594498 = newJObject()
  add(query_594498, "NextToken", newJString(NextToken))
  add(query_594498, "StackName", newJString(StackName))
  add(query_594498, "Action", newJString(Action))
  add(query_594498, "ChangeSetName", newJString(ChangeSetName))
  add(query_594498, "Version", newJString(Version))
  result = call_594497.call(nil, query_594498, nil, nil, nil)

var getDescribeChangeSet* = Call_GetDescribeChangeSet_594481(
    name: "getDescribeChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeChangeSet",
    validator: validate_GetDescribeChangeSet_594482, base: "/",
    url: url_GetDescribeChangeSet_594483, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackDriftDetectionStatus_594534 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackDriftDetectionStatus_594536(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackDriftDetectionStatus_594535(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594537 = query.getOrDefault("Action")
  valid_594537 = validateParameter(valid_594537, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_594537 != nil:
    section.add "Action", valid_594537
  var valid_594538 = query.getOrDefault("Version")
  valid_594538 = validateParameter(valid_594538, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594538 != nil:
    section.add "Version", valid_594538
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594539 = header.getOrDefault("X-Amz-Signature")
  valid_594539 = validateParameter(valid_594539, JString, required = false,
                                 default = nil)
  if valid_594539 != nil:
    section.add "X-Amz-Signature", valid_594539
  var valid_594540 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594540 = validateParameter(valid_594540, JString, required = false,
                                 default = nil)
  if valid_594540 != nil:
    section.add "X-Amz-Content-Sha256", valid_594540
  var valid_594541 = header.getOrDefault("X-Amz-Date")
  valid_594541 = validateParameter(valid_594541, JString, required = false,
                                 default = nil)
  if valid_594541 != nil:
    section.add "X-Amz-Date", valid_594541
  var valid_594542 = header.getOrDefault("X-Amz-Credential")
  valid_594542 = validateParameter(valid_594542, JString, required = false,
                                 default = nil)
  if valid_594542 != nil:
    section.add "X-Amz-Credential", valid_594542
  var valid_594543 = header.getOrDefault("X-Amz-Security-Token")
  valid_594543 = validateParameter(valid_594543, JString, required = false,
                                 default = nil)
  if valid_594543 != nil:
    section.add "X-Amz-Security-Token", valid_594543
  var valid_594544 = header.getOrDefault("X-Amz-Algorithm")
  valid_594544 = validateParameter(valid_594544, JString, required = false,
                                 default = nil)
  if valid_594544 != nil:
    section.add "X-Amz-Algorithm", valid_594544
  var valid_594545 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594545 = validateParameter(valid_594545, JString, required = false,
                                 default = nil)
  if valid_594545 != nil:
    section.add "X-Amz-SignedHeaders", valid_594545
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackDriftDetectionId` field"
  var valid_594546 = formData.getOrDefault("StackDriftDetectionId")
  valid_594546 = validateParameter(valid_594546, JString, required = true,
                                 default = nil)
  if valid_594546 != nil:
    section.add "StackDriftDetectionId", valid_594546
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594547: Call_PostDescribeStackDriftDetectionStatus_594534;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_594547.validator(path, query, header, formData, body)
  let scheme = call_594547.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594547.url(scheme.get, call_594547.host, call_594547.base,
                         call_594547.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594547, url, valid)

proc call*(call_594548: Call_PostDescribeStackDriftDetectionStatus_594534;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594549 = newJObject()
  var formData_594550 = newJObject()
  add(formData_594550, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_594549, "Action", newJString(Action))
  add(query_594549, "Version", newJString(Version))
  result = call_594548.call(nil, query_594549, nil, formData_594550, nil)

var postDescribeStackDriftDetectionStatus* = Call_PostDescribeStackDriftDetectionStatus_594534(
    name: "postDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_PostDescribeStackDriftDetectionStatus_594535, base: "/",
    url: url_PostDescribeStackDriftDetectionStatus_594536,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackDriftDetectionStatus_594518 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackDriftDetectionStatus_594520(protocol: Scheme;
    host: string; base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackDriftDetectionStatus_594519(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackDriftDetectionId: JString (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `StackDriftDetectionId` field"
  var valid_594521 = query.getOrDefault("StackDriftDetectionId")
  valid_594521 = validateParameter(valid_594521, JString, required = true,
                                 default = nil)
  if valid_594521 != nil:
    section.add "StackDriftDetectionId", valid_594521
  var valid_594522 = query.getOrDefault("Action")
  valid_594522 = validateParameter(valid_594522, JString, required = true, default = newJString(
      "DescribeStackDriftDetectionStatus"))
  if valid_594522 != nil:
    section.add "Action", valid_594522
  var valid_594523 = query.getOrDefault("Version")
  valid_594523 = validateParameter(valid_594523, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594523 != nil:
    section.add "Version", valid_594523
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594524 = header.getOrDefault("X-Amz-Signature")
  valid_594524 = validateParameter(valid_594524, JString, required = false,
                                 default = nil)
  if valid_594524 != nil:
    section.add "X-Amz-Signature", valid_594524
  var valid_594525 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594525 = validateParameter(valid_594525, JString, required = false,
                                 default = nil)
  if valid_594525 != nil:
    section.add "X-Amz-Content-Sha256", valid_594525
  var valid_594526 = header.getOrDefault("X-Amz-Date")
  valid_594526 = validateParameter(valid_594526, JString, required = false,
                                 default = nil)
  if valid_594526 != nil:
    section.add "X-Amz-Date", valid_594526
  var valid_594527 = header.getOrDefault("X-Amz-Credential")
  valid_594527 = validateParameter(valid_594527, JString, required = false,
                                 default = nil)
  if valid_594527 != nil:
    section.add "X-Amz-Credential", valid_594527
  var valid_594528 = header.getOrDefault("X-Amz-Security-Token")
  valid_594528 = validateParameter(valid_594528, JString, required = false,
                                 default = nil)
  if valid_594528 != nil:
    section.add "X-Amz-Security-Token", valid_594528
  var valid_594529 = header.getOrDefault("X-Amz-Algorithm")
  valid_594529 = validateParameter(valid_594529, JString, required = false,
                                 default = nil)
  if valid_594529 != nil:
    section.add "X-Amz-Algorithm", valid_594529
  var valid_594530 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594530 = validateParameter(valid_594530, JString, required = false,
                                 default = nil)
  if valid_594530 != nil:
    section.add "X-Amz-SignedHeaders", valid_594530
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594531: Call_GetDescribeStackDriftDetectionStatus_594518;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ## 
  let valid = call_594531.validator(path, query, header, formData, body)
  let scheme = call_594531.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594531.url(scheme.get, call_594531.host, call_594531.base,
                         call_594531.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594531, url, valid)

proc call*(call_594532: Call_GetDescribeStackDriftDetectionStatus_594518;
          StackDriftDetectionId: string;
          Action: string = "DescribeStackDriftDetectionStatus";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackDriftDetectionStatus
  ## <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
  ##   StackDriftDetectionId: string (required)
  ##                        : <p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594533 = newJObject()
  add(query_594533, "StackDriftDetectionId", newJString(StackDriftDetectionId))
  add(query_594533, "Action", newJString(Action))
  add(query_594533, "Version", newJString(Version))
  result = call_594532.call(nil, query_594533, nil, nil, nil)

var getDescribeStackDriftDetectionStatus* = Call_GetDescribeStackDriftDetectionStatus_594518(
    name: "getDescribeStackDriftDetectionStatus", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackDriftDetectionStatus",
    validator: validate_GetDescribeStackDriftDetectionStatus_594519, base: "/",
    url: url_GetDescribeStackDriftDetectionStatus_594520,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackEvents_594568 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackEvents_594570(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackEvents_594569(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594571 = query.getOrDefault("Action")
  valid_594571 = validateParameter(valid_594571, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_594571 != nil:
    section.add "Action", valid_594571
  var valid_594572 = query.getOrDefault("Version")
  valid_594572 = validateParameter(valid_594572, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594572 != nil:
    section.add "Version", valid_594572
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594573 = header.getOrDefault("X-Amz-Signature")
  valid_594573 = validateParameter(valid_594573, JString, required = false,
                                 default = nil)
  if valid_594573 != nil:
    section.add "X-Amz-Signature", valid_594573
  var valid_594574 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594574 = validateParameter(valid_594574, JString, required = false,
                                 default = nil)
  if valid_594574 != nil:
    section.add "X-Amz-Content-Sha256", valid_594574
  var valid_594575 = header.getOrDefault("X-Amz-Date")
  valid_594575 = validateParameter(valid_594575, JString, required = false,
                                 default = nil)
  if valid_594575 != nil:
    section.add "X-Amz-Date", valid_594575
  var valid_594576 = header.getOrDefault("X-Amz-Credential")
  valid_594576 = validateParameter(valid_594576, JString, required = false,
                                 default = nil)
  if valid_594576 != nil:
    section.add "X-Amz-Credential", valid_594576
  var valid_594577 = header.getOrDefault("X-Amz-Security-Token")
  valid_594577 = validateParameter(valid_594577, JString, required = false,
                                 default = nil)
  if valid_594577 != nil:
    section.add "X-Amz-Security-Token", valid_594577
  var valid_594578 = header.getOrDefault("X-Amz-Algorithm")
  valid_594578 = validateParameter(valid_594578, JString, required = false,
                                 default = nil)
  if valid_594578 != nil:
    section.add "X-Amz-Algorithm", valid_594578
  var valid_594579 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594579 = validateParameter(valid_594579, JString, required = false,
                                 default = nil)
  if valid_594579 != nil:
    section.add "X-Amz-SignedHeaders", valid_594579
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  section = newJObject()
  var valid_594580 = formData.getOrDefault("StackName")
  valid_594580 = validateParameter(valid_594580, JString, required = false,
                                 default = nil)
  if valid_594580 != nil:
    section.add "StackName", valid_594580
  var valid_594581 = formData.getOrDefault("NextToken")
  valid_594581 = validateParameter(valid_594581, JString, required = false,
                                 default = nil)
  if valid_594581 != nil:
    section.add "NextToken", valid_594581
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594582: Call_PostDescribeStackEvents_594568; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_594582.validator(path, query, header, formData, body)
  let scheme = call_594582.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594582.url(scheme.get, call_594582.host, call_594582.base,
                         call_594582.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594582, url, valid)

proc call*(call_594583: Call_PostDescribeStackEvents_594568;
          StackName: string = ""; NextToken: string = "";
          Action: string = "DescribeStackEvents"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594584 = newJObject()
  var formData_594585 = newJObject()
  add(formData_594585, "StackName", newJString(StackName))
  add(formData_594585, "NextToken", newJString(NextToken))
  add(query_594584, "Action", newJString(Action))
  add(query_594584, "Version", newJString(Version))
  result = call_594583.call(nil, query_594584, nil, formData_594585, nil)

var postDescribeStackEvents* = Call_PostDescribeStackEvents_594568(
    name: "postDescribeStackEvents", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_PostDescribeStackEvents_594569, base: "/",
    url: url_PostDescribeStackEvents_594570, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackEvents_594551 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackEvents_594553(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackEvents_594552(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_594554 = query.getOrDefault("NextToken")
  valid_594554 = validateParameter(valid_594554, JString, required = false,
                                 default = nil)
  if valid_594554 != nil:
    section.add "NextToken", valid_594554
  var valid_594555 = query.getOrDefault("StackName")
  valid_594555 = validateParameter(valid_594555, JString, required = false,
                                 default = nil)
  if valid_594555 != nil:
    section.add "StackName", valid_594555
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594556 = query.getOrDefault("Action")
  valid_594556 = validateParameter(valid_594556, JString, required = true,
                                 default = newJString("DescribeStackEvents"))
  if valid_594556 != nil:
    section.add "Action", valid_594556
  var valid_594557 = query.getOrDefault("Version")
  valid_594557 = validateParameter(valid_594557, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594557 != nil:
    section.add "Version", valid_594557
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594558 = header.getOrDefault("X-Amz-Signature")
  valid_594558 = validateParameter(valid_594558, JString, required = false,
                                 default = nil)
  if valid_594558 != nil:
    section.add "X-Amz-Signature", valid_594558
  var valid_594559 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594559 = validateParameter(valid_594559, JString, required = false,
                                 default = nil)
  if valid_594559 != nil:
    section.add "X-Amz-Content-Sha256", valid_594559
  var valid_594560 = header.getOrDefault("X-Amz-Date")
  valid_594560 = validateParameter(valid_594560, JString, required = false,
                                 default = nil)
  if valid_594560 != nil:
    section.add "X-Amz-Date", valid_594560
  var valid_594561 = header.getOrDefault("X-Amz-Credential")
  valid_594561 = validateParameter(valid_594561, JString, required = false,
                                 default = nil)
  if valid_594561 != nil:
    section.add "X-Amz-Credential", valid_594561
  var valid_594562 = header.getOrDefault("X-Amz-Security-Token")
  valid_594562 = validateParameter(valid_594562, JString, required = false,
                                 default = nil)
  if valid_594562 != nil:
    section.add "X-Amz-Security-Token", valid_594562
  var valid_594563 = header.getOrDefault("X-Amz-Algorithm")
  valid_594563 = validateParameter(valid_594563, JString, required = false,
                                 default = nil)
  if valid_594563 != nil:
    section.add "X-Amz-Algorithm", valid_594563
  var valid_594564 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594564 = validateParameter(valid_594564, JString, required = false,
                                 default = nil)
  if valid_594564 != nil:
    section.add "X-Amz-SignedHeaders", valid_594564
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594565: Call_GetDescribeStackEvents_594551; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ## 
  let valid = call_594565.validator(path, query, header, formData, body)
  let scheme = call_594565.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594565.url(scheme.get, call_594565.host, call_594565.base,
                         call_594565.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594565, url, valid)

proc call*(call_594566: Call_GetDescribeStackEvents_594551; NextToken: string = "";
          StackName: string = ""; Action: string = "DescribeStackEvents";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackEvents
  ## <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of events that you want to retrieve.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594567 = newJObject()
  add(query_594567, "NextToken", newJString(NextToken))
  add(query_594567, "StackName", newJString(StackName))
  add(query_594567, "Action", newJString(Action))
  add(query_594567, "Version", newJString(Version))
  result = call_594566.call(nil, query_594567, nil, nil, nil)

var getDescribeStackEvents* = Call_GetDescribeStackEvents_594551(
    name: "getDescribeStackEvents", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackEvents",
    validator: validate_GetDescribeStackEvents_594552, base: "/",
    url: url_GetDescribeStackEvents_594553, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackInstance_594604 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackInstance_594606(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackInstance_594605(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594607 = query.getOrDefault("Action")
  valid_594607 = validateParameter(valid_594607, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_594607 != nil:
    section.add "Action", valid_594607
  var valid_594608 = query.getOrDefault("Version")
  valid_594608 = validateParameter(valid_594608, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594608 != nil:
    section.add "Version", valid_594608
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594609 = header.getOrDefault("X-Amz-Signature")
  valid_594609 = validateParameter(valid_594609, JString, required = false,
                                 default = nil)
  if valid_594609 != nil:
    section.add "X-Amz-Signature", valid_594609
  var valid_594610 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594610 = validateParameter(valid_594610, JString, required = false,
                                 default = nil)
  if valid_594610 != nil:
    section.add "X-Amz-Content-Sha256", valid_594610
  var valid_594611 = header.getOrDefault("X-Amz-Date")
  valid_594611 = validateParameter(valid_594611, JString, required = false,
                                 default = nil)
  if valid_594611 != nil:
    section.add "X-Amz-Date", valid_594611
  var valid_594612 = header.getOrDefault("X-Amz-Credential")
  valid_594612 = validateParameter(valid_594612, JString, required = false,
                                 default = nil)
  if valid_594612 != nil:
    section.add "X-Amz-Credential", valid_594612
  var valid_594613 = header.getOrDefault("X-Amz-Security-Token")
  valid_594613 = validateParameter(valid_594613, JString, required = false,
                                 default = nil)
  if valid_594613 != nil:
    section.add "X-Amz-Security-Token", valid_594613
  var valid_594614 = header.getOrDefault("X-Amz-Algorithm")
  valid_594614 = validateParameter(valid_594614, JString, required = false,
                                 default = nil)
  if valid_594614 != nil:
    section.add "X-Amz-Algorithm", valid_594614
  var valid_594615 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594615 = validateParameter(valid_594615, JString, required = false,
                                 default = nil)
  if valid_594615 != nil:
    section.add "X-Amz-SignedHeaders", valid_594615
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  section = newJObject()
  assert formData != nil, "formData argument is necessary due to required `StackInstanceRegion` field"
  var valid_594616 = formData.getOrDefault("StackInstanceRegion")
  valid_594616 = validateParameter(valid_594616, JString, required = true,
                                 default = nil)
  if valid_594616 != nil:
    section.add "StackInstanceRegion", valid_594616
  var valid_594617 = formData.getOrDefault("StackSetName")
  valid_594617 = validateParameter(valid_594617, JString, required = true,
                                 default = nil)
  if valid_594617 != nil:
    section.add "StackSetName", valid_594617
  var valid_594618 = formData.getOrDefault("StackInstanceAccount")
  valid_594618 = validateParameter(valid_594618, JString, required = true,
                                 default = nil)
  if valid_594618 != nil:
    section.add "StackInstanceAccount", valid_594618
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594619: Call_PostDescribeStackInstance_594604; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_594619.validator(path, query, header, formData, body)
  let scheme = call_594619.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594619.url(scheme.get, call_594619.host, call_594619.base,
                         call_594619.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594619, url, valid)

proc call*(call_594620: Call_PostDescribeStackInstance_594604;
          StackInstanceRegion: string; StackSetName: string;
          StackInstanceAccount: string; Action: string = "DescribeStackInstance";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594621 = newJObject()
  var formData_594622 = newJObject()
  add(formData_594622, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_594622, "StackSetName", newJString(StackSetName))
  add(formData_594622, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_594621, "Action", newJString(Action))
  add(query_594621, "Version", newJString(Version))
  result = call_594620.call(nil, query_594621, nil, formData_594622, nil)

var postDescribeStackInstance* = Call_PostDescribeStackInstance_594604(
    name: "postDescribeStackInstance", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_PostDescribeStackInstance_594605, base: "/",
    url: url_PostDescribeStackInstance_594606,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackInstance_594586 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackInstance_594588(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackInstance_594587(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: JString (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: JString (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_594589 = query.getOrDefault("StackSetName")
  valid_594589 = validateParameter(valid_594589, JString, required = true,
                                 default = nil)
  if valid_594589 != nil:
    section.add "StackSetName", valid_594589
  var valid_594590 = query.getOrDefault("StackInstanceRegion")
  valid_594590 = validateParameter(valid_594590, JString, required = true,
                                 default = nil)
  if valid_594590 != nil:
    section.add "StackInstanceRegion", valid_594590
  var valid_594591 = query.getOrDefault("StackInstanceAccount")
  valid_594591 = validateParameter(valid_594591, JString, required = true,
                                 default = nil)
  if valid_594591 != nil:
    section.add "StackInstanceAccount", valid_594591
  var valid_594592 = query.getOrDefault("Action")
  valid_594592 = validateParameter(valid_594592, JString, required = true,
                                 default = newJString("DescribeStackInstance"))
  if valid_594592 != nil:
    section.add "Action", valid_594592
  var valid_594593 = query.getOrDefault("Version")
  valid_594593 = validateParameter(valid_594593, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594593 != nil:
    section.add "Version", valid_594593
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594594 = header.getOrDefault("X-Amz-Signature")
  valid_594594 = validateParameter(valid_594594, JString, required = false,
                                 default = nil)
  if valid_594594 != nil:
    section.add "X-Amz-Signature", valid_594594
  var valid_594595 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594595 = validateParameter(valid_594595, JString, required = false,
                                 default = nil)
  if valid_594595 != nil:
    section.add "X-Amz-Content-Sha256", valid_594595
  var valid_594596 = header.getOrDefault("X-Amz-Date")
  valid_594596 = validateParameter(valid_594596, JString, required = false,
                                 default = nil)
  if valid_594596 != nil:
    section.add "X-Amz-Date", valid_594596
  var valid_594597 = header.getOrDefault("X-Amz-Credential")
  valid_594597 = validateParameter(valid_594597, JString, required = false,
                                 default = nil)
  if valid_594597 != nil:
    section.add "X-Amz-Credential", valid_594597
  var valid_594598 = header.getOrDefault("X-Amz-Security-Token")
  valid_594598 = validateParameter(valid_594598, JString, required = false,
                                 default = nil)
  if valid_594598 != nil:
    section.add "X-Amz-Security-Token", valid_594598
  var valid_594599 = header.getOrDefault("X-Amz-Algorithm")
  valid_594599 = validateParameter(valid_594599, JString, required = false,
                                 default = nil)
  if valid_594599 != nil:
    section.add "X-Amz-Algorithm", valid_594599
  var valid_594600 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594600 = validateParameter(valid_594600, JString, required = false,
                                 default = nil)
  if valid_594600 != nil:
    section.add "X-Amz-SignedHeaders", valid_594600
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594601: Call_GetDescribeStackInstance_594586; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ## 
  let valid = call_594601.validator(path, query, header, formData, body)
  let scheme = call_594601.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594601.url(scheme.get, call_594601.host, call_594601.base,
                         call_594601.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594601, url, valid)

proc call*(call_594602: Call_GetDescribeStackInstance_594586; StackSetName: string;
          StackInstanceRegion: string; StackInstanceAccount: string;
          Action: string = "DescribeStackInstance"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackInstance
  ## <p>Returns the stack instance that's associated with the specified stack set, AWS account, and region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set that you want to get stack instance information for.
  ##   StackInstanceRegion: string (required)
  ##                      : The name of a region that's associated with this stack instance.
  ##   StackInstanceAccount: string (required)
  ##                       : The ID of an AWS account that's associated with this stack instance.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594603 = newJObject()
  add(query_594603, "StackSetName", newJString(StackSetName))
  add(query_594603, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_594603, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_594603, "Action", newJString(Action))
  add(query_594603, "Version", newJString(Version))
  result = call_594602.call(nil, query_594603, nil, nil, nil)

var getDescribeStackInstance* = Call_GetDescribeStackInstance_594586(
    name: "getDescribeStackInstance", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackInstance",
    validator: validate_GetDescribeStackInstance_594587, base: "/",
    url: url_GetDescribeStackInstance_594588, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResource_594640 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackResource_594642(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResource_594641(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594643 = query.getOrDefault("Action")
  valid_594643 = validateParameter(valid_594643, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_594643 != nil:
    section.add "Action", valid_594643
  var valid_594644 = query.getOrDefault("Version")
  valid_594644 = validateParameter(valid_594644, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594644 != nil:
    section.add "Version", valid_594644
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594645 = header.getOrDefault("X-Amz-Signature")
  valid_594645 = validateParameter(valid_594645, JString, required = false,
                                 default = nil)
  if valid_594645 != nil:
    section.add "X-Amz-Signature", valid_594645
  var valid_594646 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594646 = validateParameter(valid_594646, JString, required = false,
                                 default = nil)
  if valid_594646 != nil:
    section.add "X-Amz-Content-Sha256", valid_594646
  var valid_594647 = header.getOrDefault("X-Amz-Date")
  valid_594647 = validateParameter(valid_594647, JString, required = false,
                                 default = nil)
  if valid_594647 != nil:
    section.add "X-Amz-Date", valid_594647
  var valid_594648 = header.getOrDefault("X-Amz-Credential")
  valid_594648 = validateParameter(valid_594648, JString, required = false,
                                 default = nil)
  if valid_594648 != nil:
    section.add "X-Amz-Credential", valid_594648
  var valid_594649 = header.getOrDefault("X-Amz-Security-Token")
  valid_594649 = validateParameter(valid_594649, JString, required = false,
                                 default = nil)
  if valid_594649 != nil:
    section.add "X-Amz-Security-Token", valid_594649
  var valid_594650 = header.getOrDefault("X-Amz-Algorithm")
  valid_594650 = validateParameter(valid_594650, JString, required = false,
                                 default = nil)
  if valid_594650 != nil:
    section.add "X-Amz-Algorithm", valid_594650
  var valid_594651 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594651 = validateParameter(valid_594651, JString, required = false,
                                 default = nil)
  if valid_594651 != nil:
    section.add "X-Amz-SignedHeaders", valid_594651
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594652 = formData.getOrDefault("StackName")
  valid_594652 = validateParameter(valid_594652, JString, required = true,
                                 default = nil)
  if valid_594652 != nil:
    section.add "StackName", valid_594652
  var valid_594653 = formData.getOrDefault("LogicalResourceId")
  valid_594653 = validateParameter(valid_594653, JString, required = true,
                                 default = nil)
  if valid_594653 != nil:
    section.add "LogicalResourceId", valid_594653
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594654: Call_PostDescribeStackResource_594640; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_594654.validator(path, query, header, formData, body)
  let scheme = call_594654.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594654.url(scheme.get, call_594654.host, call_594654.base,
                         call_594654.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594654, url, valid)

proc call*(call_594655: Call_PostDescribeStackResource_594640; StackName: string;
          LogicalResourceId: string; Action: string = "DescribeStackResource";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_594656 = newJObject()
  var formData_594657 = newJObject()
  add(formData_594657, "StackName", newJString(StackName))
  add(query_594656, "Action", newJString(Action))
  add(query_594656, "Version", newJString(Version))
  add(formData_594657, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_594655.call(nil, query_594656, nil, formData_594657, nil)

var postDescribeStackResource* = Call_PostDescribeStackResource_594640(
    name: "postDescribeStackResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_PostDescribeStackResource_594641, base: "/",
    url: url_PostDescribeStackResource_594642,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResource_594623 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackResource_594625(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResource_594624(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594626 = query.getOrDefault("StackName")
  valid_594626 = validateParameter(valid_594626, JString, required = true,
                                 default = nil)
  if valid_594626 != nil:
    section.add "StackName", valid_594626
  var valid_594627 = query.getOrDefault("Action")
  valid_594627 = validateParameter(valid_594627, JString, required = true,
                                 default = newJString("DescribeStackResource"))
  if valid_594627 != nil:
    section.add "Action", valid_594627
  var valid_594628 = query.getOrDefault("Version")
  valid_594628 = validateParameter(valid_594628, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594628 != nil:
    section.add "Version", valid_594628
  var valid_594629 = query.getOrDefault("LogicalResourceId")
  valid_594629 = validateParameter(valid_594629, JString, required = true,
                                 default = nil)
  if valid_594629 != nil:
    section.add "LogicalResourceId", valid_594629
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594630 = header.getOrDefault("X-Amz-Signature")
  valid_594630 = validateParameter(valid_594630, JString, required = false,
                                 default = nil)
  if valid_594630 != nil:
    section.add "X-Amz-Signature", valid_594630
  var valid_594631 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594631 = validateParameter(valid_594631, JString, required = false,
                                 default = nil)
  if valid_594631 != nil:
    section.add "X-Amz-Content-Sha256", valid_594631
  var valid_594632 = header.getOrDefault("X-Amz-Date")
  valid_594632 = validateParameter(valid_594632, JString, required = false,
                                 default = nil)
  if valid_594632 != nil:
    section.add "X-Amz-Date", valid_594632
  var valid_594633 = header.getOrDefault("X-Amz-Credential")
  valid_594633 = validateParameter(valid_594633, JString, required = false,
                                 default = nil)
  if valid_594633 != nil:
    section.add "X-Amz-Credential", valid_594633
  var valid_594634 = header.getOrDefault("X-Amz-Security-Token")
  valid_594634 = validateParameter(valid_594634, JString, required = false,
                                 default = nil)
  if valid_594634 != nil:
    section.add "X-Amz-Security-Token", valid_594634
  var valid_594635 = header.getOrDefault("X-Amz-Algorithm")
  valid_594635 = validateParameter(valid_594635, JString, required = false,
                                 default = nil)
  if valid_594635 != nil:
    section.add "X-Amz-Algorithm", valid_594635
  var valid_594636 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594636 = validateParameter(valid_594636, JString, required = false,
                                 default = nil)
  if valid_594636 != nil:
    section.add "X-Amz-SignedHeaders", valid_594636
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594637: Call_GetDescribeStackResource_594623; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_594637.validator(path, query, header, formData, body)
  let scheme = call_594637.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594637.url(scheme.get, call_594637.host, call_594637.base,
                         call_594637.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594637, url, valid)

proc call*(call_594638: Call_GetDescribeStackResource_594623; StackName: string;
          LogicalResourceId: string; Action: string = "DescribeStackResource";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResource
  ## <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_594639 = newJObject()
  add(query_594639, "StackName", newJString(StackName))
  add(query_594639, "Action", newJString(Action))
  add(query_594639, "Version", newJString(Version))
  add(query_594639, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_594638.call(nil, query_594639, nil, nil, nil)

var getDescribeStackResource* = Call_GetDescribeStackResource_594623(
    name: "getDescribeStackResource", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackResource",
    validator: validate_GetDescribeStackResource_594624, base: "/",
    url: url_GetDescribeStackResource_594625, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResourceDrifts_594677 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackResourceDrifts_594679(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResourceDrifts_594678(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594680 = query.getOrDefault("Action")
  valid_594680 = validateParameter(valid_594680, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_594680 != nil:
    section.add "Action", valid_594680
  var valid_594681 = query.getOrDefault("Version")
  valid_594681 = validateParameter(valid_594681, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594681 != nil:
    section.add "Version", valid_594681
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594682 = header.getOrDefault("X-Amz-Signature")
  valid_594682 = validateParameter(valid_594682, JString, required = false,
                                 default = nil)
  if valid_594682 != nil:
    section.add "X-Amz-Signature", valid_594682
  var valid_594683 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594683 = validateParameter(valid_594683, JString, required = false,
                                 default = nil)
  if valid_594683 != nil:
    section.add "X-Amz-Content-Sha256", valid_594683
  var valid_594684 = header.getOrDefault("X-Amz-Date")
  valid_594684 = validateParameter(valid_594684, JString, required = false,
                                 default = nil)
  if valid_594684 != nil:
    section.add "X-Amz-Date", valid_594684
  var valid_594685 = header.getOrDefault("X-Amz-Credential")
  valid_594685 = validateParameter(valid_594685, JString, required = false,
                                 default = nil)
  if valid_594685 != nil:
    section.add "X-Amz-Credential", valid_594685
  var valid_594686 = header.getOrDefault("X-Amz-Security-Token")
  valid_594686 = validateParameter(valid_594686, JString, required = false,
                                 default = nil)
  if valid_594686 != nil:
    section.add "X-Amz-Security-Token", valid_594686
  var valid_594687 = header.getOrDefault("X-Amz-Algorithm")
  valid_594687 = validateParameter(valid_594687, JString, required = false,
                                 default = nil)
  if valid_594687 != nil:
    section.add "X-Amz-Algorithm", valid_594687
  var valid_594688 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594688 = validateParameter(valid_594688, JString, required = false,
                                 default = nil)
  if valid_594688 != nil:
    section.add "X-Amz-SignedHeaders", valid_594688
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594689 = formData.getOrDefault("StackName")
  valid_594689 = validateParameter(valid_594689, JString, required = true,
                                 default = nil)
  if valid_594689 != nil:
    section.add "StackName", valid_594689
  var valid_594690 = formData.getOrDefault("NextToken")
  valid_594690 = validateParameter(valid_594690, JString, required = false,
                                 default = nil)
  if valid_594690 != nil:
    section.add "NextToken", valid_594690
  var valid_594691 = formData.getOrDefault("MaxResults")
  valid_594691 = validateParameter(valid_594691, JInt, required = false, default = nil)
  if valid_594691 != nil:
    section.add "MaxResults", valid_594691
  var valid_594692 = formData.getOrDefault("StackResourceDriftStatusFilters")
  valid_594692 = validateParameter(valid_594692, JArray, required = false,
                                 default = nil)
  if valid_594692 != nil:
    section.add "StackResourceDriftStatusFilters", valid_594692
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594693: Call_PostDescribeStackResourceDrifts_594677;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_594693.validator(path, query, header, formData, body)
  let scheme = call_594693.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594693.url(scheme.get, call_594693.host, call_594693.base,
                         call_594693.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594693, url, valid)

proc call*(call_594694: Call_PostDescribeStackResourceDrifts_594677;
          StackName: string; NextToken: string = "";
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil): Recallable =
  ## postDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  var query_594695 = newJObject()
  var formData_594696 = newJObject()
  add(formData_594696, "StackName", newJString(StackName))
  add(formData_594696, "NextToken", newJString(NextToken))
  add(query_594695, "Action", newJString(Action))
  add(query_594695, "Version", newJString(Version))
  add(formData_594696, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    formData_594696.add "StackResourceDriftStatusFilters",
                       StackResourceDriftStatusFilters
  result = call_594694.call(nil, query_594695, nil, formData_594696, nil)

var postDescribeStackResourceDrifts* = Call_PostDescribeStackResourceDrifts_594677(
    name: "postDescribeStackResourceDrifts", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_PostDescribeStackResourceDrifts_594678, base: "/",
    url: url_PostDescribeStackResourceDrifts_594679,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResourceDrifts_594658 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackResourceDrifts_594660(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResourceDrifts_594659(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resource drift results.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want drift information.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_594661 = query.getOrDefault("MaxResults")
  valid_594661 = validateParameter(valid_594661, JInt, required = false, default = nil)
  if valid_594661 != nil:
    section.add "MaxResults", valid_594661
  var valid_594662 = query.getOrDefault("StackResourceDriftStatusFilters")
  valid_594662 = validateParameter(valid_594662, JArray, required = false,
                                 default = nil)
  if valid_594662 != nil:
    section.add "StackResourceDriftStatusFilters", valid_594662
  var valid_594663 = query.getOrDefault("NextToken")
  valid_594663 = validateParameter(valid_594663, JString, required = false,
                                 default = nil)
  if valid_594663 != nil:
    section.add "NextToken", valid_594663
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594664 = query.getOrDefault("StackName")
  valid_594664 = validateParameter(valid_594664, JString, required = true,
                                 default = nil)
  if valid_594664 != nil:
    section.add "StackName", valid_594664
  var valid_594665 = query.getOrDefault("Action")
  valid_594665 = validateParameter(valid_594665, JString, required = true, default = newJString(
      "DescribeStackResourceDrifts"))
  if valid_594665 != nil:
    section.add "Action", valid_594665
  var valid_594666 = query.getOrDefault("Version")
  valid_594666 = validateParameter(valid_594666, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594666 != nil:
    section.add "Version", valid_594666
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594667 = header.getOrDefault("X-Amz-Signature")
  valid_594667 = validateParameter(valid_594667, JString, required = false,
                                 default = nil)
  if valid_594667 != nil:
    section.add "X-Amz-Signature", valid_594667
  var valid_594668 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594668 = validateParameter(valid_594668, JString, required = false,
                                 default = nil)
  if valid_594668 != nil:
    section.add "X-Amz-Content-Sha256", valid_594668
  var valid_594669 = header.getOrDefault("X-Amz-Date")
  valid_594669 = validateParameter(valid_594669, JString, required = false,
                                 default = nil)
  if valid_594669 != nil:
    section.add "X-Amz-Date", valid_594669
  var valid_594670 = header.getOrDefault("X-Amz-Credential")
  valid_594670 = validateParameter(valid_594670, JString, required = false,
                                 default = nil)
  if valid_594670 != nil:
    section.add "X-Amz-Credential", valid_594670
  var valid_594671 = header.getOrDefault("X-Amz-Security-Token")
  valid_594671 = validateParameter(valid_594671, JString, required = false,
                                 default = nil)
  if valid_594671 != nil:
    section.add "X-Amz-Security-Token", valid_594671
  var valid_594672 = header.getOrDefault("X-Amz-Algorithm")
  valid_594672 = validateParameter(valid_594672, JString, required = false,
                                 default = nil)
  if valid_594672 != nil:
    section.add "X-Amz-Algorithm", valid_594672
  var valid_594673 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594673 = validateParameter(valid_594673, JString, required = false,
                                 default = nil)
  if valid_594673 != nil:
    section.add "X-Amz-SignedHeaders", valid_594673
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594674: Call_GetDescribeStackResourceDrifts_594658; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ## 
  let valid = call_594674.validator(path, query, header, formData, body)
  let scheme = call_594674.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594674.url(scheme.get, call_594674.host, call_594674.base,
                         call_594674.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594674, url, valid)

proc call*(call_594675: Call_GetDescribeStackResourceDrifts_594658;
          StackName: string; MaxResults: int = 0;
          StackResourceDriftStatusFilters: JsonNode = nil; NextToken: string = "";
          Action: string = "DescribeStackResourceDrifts";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackResourceDrifts
  ## <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackResourceDriftStatusFilters: JArray
  ##                                  : <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resource drift results.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want drift information.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594676 = newJObject()
  add(query_594676, "MaxResults", newJInt(MaxResults))
  if StackResourceDriftStatusFilters != nil:
    query_594676.add "StackResourceDriftStatusFilters",
                    StackResourceDriftStatusFilters
  add(query_594676, "NextToken", newJString(NextToken))
  add(query_594676, "StackName", newJString(StackName))
  add(query_594676, "Action", newJString(Action))
  add(query_594676, "Version", newJString(Version))
  result = call_594675.call(nil, query_594676, nil, nil, nil)

var getDescribeStackResourceDrifts* = Call_GetDescribeStackResourceDrifts_594658(
    name: "getDescribeStackResourceDrifts", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResourceDrifts",
    validator: validate_GetDescribeStackResourceDrifts_594659, base: "/",
    url: url_GetDescribeStackResourceDrifts_594660,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackResources_594715 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackResources_594717(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackResources_594716(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594718 = query.getOrDefault("Action")
  valid_594718 = validateParameter(valid_594718, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_594718 != nil:
    section.add "Action", valid_594718
  var valid_594719 = query.getOrDefault("Version")
  valid_594719 = validateParameter(valid_594719, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594719 != nil:
    section.add "Version", valid_594719
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594720 = header.getOrDefault("X-Amz-Signature")
  valid_594720 = validateParameter(valid_594720, JString, required = false,
                                 default = nil)
  if valid_594720 != nil:
    section.add "X-Amz-Signature", valid_594720
  var valid_594721 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594721 = validateParameter(valid_594721, JString, required = false,
                                 default = nil)
  if valid_594721 != nil:
    section.add "X-Amz-Content-Sha256", valid_594721
  var valid_594722 = header.getOrDefault("X-Amz-Date")
  valid_594722 = validateParameter(valid_594722, JString, required = false,
                                 default = nil)
  if valid_594722 != nil:
    section.add "X-Amz-Date", valid_594722
  var valid_594723 = header.getOrDefault("X-Amz-Credential")
  valid_594723 = validateParameter(valid_594723, JString, required = false,
                                 default = nil)
  if valid_594723 != nil:
    section.add "X-Amz-Credential", valid_594723
  var valid_594724 = header.getOrDefault("X-Amz-Security-Token")
  valid_594724 = validateParameter(valid_594724, JString, required = false,
                                 default = nil)
  if valid_594724 != nil:
    section.add "X-Amz-Security-Token", valid_594724
  var valid_594725 = header.getOrDefault("X-Amz-Algorithm")
  valid_594725 = validateParameter(valid_594725, JString, required = false,
                                 default = nil)
  if valid_594725 != nil:
    section.add "X-Amz-Algorithm", valid_594725
  var valid_594726 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594726 = validateParameter(valid_594726, JString, required = false,
                                 default = nil)
  if valid_594726 != nil:
    section.add "X-Amz-SignedHeaders", valid_594726
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_594727 = formData.getOrDefault("StackName")
  valid_594727 = validateParameter(valid_594727, JString, required = false,
                                 default = nil)
  if valid_594727 != nil:
    section.add "StackName", valid_594727
  var valid_594728 = formData.getOrDefault("PhysicalResourceId")
  valid_594728 = validateParameter(valid_594728, JString, required = false,
                                 default = nil)
  if valid_594728 != nil:
    section.add "PhysicalResourceId", valid_594728
  var valid_594729 = formData.getOrDefault("LogicalResourceId")
  valid_594729 = validateParameter(valid_594729, JString, required = false,
                                 default = nil)
  if valid_594729 != nil:
    section.add "LogicalResourceId", valid_594729
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594730: Call_PostDescribeStackResources_594715; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_594730.validator(path, query, header, formData, body)
  let scheme = call_594730.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594730.url(scheme.get, call_594730.host, call_594730.base,
                         call_594730.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594730, url, valid)

proc call*(call_594731: Call_PostDescribeStackResources_594715;
          StackName: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          LogicalResourceId: string = ""): Recallable =
  ## postDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_594732 = newJObject()
  var formData_594733 = newJObject()
  add(formData_594733, "StackName", newJString(StackName))
  add(formData_594733, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_594732, "Action", newJString(Action))
  add(query_594732, "Version", newJString(Version))
  add(formData_594733, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_594731.call(nil, query_594732, nil, formData_594733, nil)

var postDescribeStackResources* = Call_PostDescribeStackResources_594715(
    name: "postDescribeStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_PostDescribeStackResources_594716, base: "/",
    url: url_PostDescribeStackResources_594717,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackResources_594697 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackResources_594699(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackResources_594698(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: JString
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  section = newJObject()
  var valid_594700 = query.getOrDefault("StackName")
  valid_594700 = validateParameter(valid_594700, JString, required = false,
                                 default = nil)
  if valid_594700 != nil:
    section.add "StackName", valid_594700
  var valid_594701 = query.getOrDefault("PhysicalResourceId")
  valid_594701 = validateParameter(valid_594701, JString, required = false,
                                 default = nil)
  if valid_594701 != nil:
    section.add "PhysicalResourceId", valid_594701
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594702 = query.getOrDefault("Action")
  valid_594702 = validateParameter(valid_594702, JString, required = true,
                                 default = newJString("DescribeStackResources"))
  if valid_594702 != nil:
    section.add "Action", valid_594702
  var valid_594703 = query.getOrDefault("Version")
  valid_594703 = validateParameter(valid_594703, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594703 != nil:
    section.add "Version", valid_594703
  var valid_594704 = query.getOrDefault("LogicalResourceId")
  valid_594704 = validateParameter(valid_594704, JString, required = false,
                                 default = nil)
  if valid_594704 != nil:
    section.add "LogicalResourceId", valid_594704
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594705 = header.getOrDefault("X-Amz-Signature")
  valid_594705 = validateParameter(valid_594705, JString, required = false,
                                 default = nil)
  if valid_594705 != nil:
    section.add "X-Amz-Signature", valid_594705
  var valid_594706 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594706 = validateParameter(valid_594706, JString, required = false,
                                 default = nil)
  if valid_594706 != nil:
    section.add "X-Amz-Content-Sha256", valid_594706
  var valid_594707 = header.getOrDefault("X-Amz-Date")
  valid_594707 = validateParameter(valid_594707, JString, required = false,
                                 default = nil)
  if valid_594707 != nil:
    section.add "X-Amz-Date", valid_594707
  var valid_594708 = header.getOrDefault("X-Amz-Credential")
  valid_594708 = validateParameter(valid_594708, JString, required = false,
                                 default = nil)
  if valid_594708 != nil:
    section.add "X-Amz-Credential", valid_594708
  var valid_594709 = header.getOrDefault("X-Amz-Security-Token")
  valid_594709 = validateParameter(valid_594709, JString, required = false,
                                 default = nil)
  if valid_594709 != nil:
    section.add "X-Amz-Security-Token", valid_594709
  var valid_594710 = header.getOrDefault("X-Amz-Algorithm")
  valid_594710 = validateParameter(valid_594710, JString, required = false,
                                 default = nil)
  if valid_594710 != nil:
    section.add "X-Amz-Algorithm", valid_594710
  var valid_594711 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594711 = validateParameter(valid_594711, JString, required = false,
                                 default = nil)
  if valid_594711 != nil:
    section.add "X-Amz-SignedHeaders", valid_594711
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594712: Call_GetDescribeStackResources_594697; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ## 
  let valid = call_594712.validator(path, query, header, formData, body)
  let scheme = call_594712.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594712.url(scheme.get, call_594712.host, call_594712.base,
                         call_594712.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594712, url, valid)

proc call*(call_594713: Call_GetDescribeStackResources_594697;
          StackName: string = ""; PhysicalResourceId: string = "";
          Action: string = "DescribeStackResources"; Version: string = "2010-05-15";
          LogicalResourceId: string = ""): Recallable =
  ## getDescribeStackResources
  ## <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
  ##   PhysicalResourceId: string
  ##                     : <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string
  ##                    : <p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>
  var query_594714 = newJObject()
  add(query_594714, "StackName", newJString(StackName))
  add(query_594714, "PhysicalResourceId", newJString(PhysicalResourceId))
  add(query_594714, "Action", newJString(Action))
  add(query_594714, "Version", newJString(Version))
  add(query_594714, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_594713.call(nil, query_594714, nil, nil, nil)

var getDescribeStackResources* = Call_GetDescribeStackResources_594697(
    name: "getDescribeStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackResources",
    validator: validate_GetDescribeStackResources_594698, base: "/",
    url: url_GetDescribeStackResources_594699,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSet_594750 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackSet_594752(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSet_594751(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594753 = query.getOrDefault("Action")
  valid_594753 = validateParameter(valid_594753, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_594753 != nil:
    section.add "Action", valid_594753
  var valid_594754 = query.getOrDefault("Version")
  valid_594754 = validateParameter(valid_594754, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594754 != nil:
    section.add "Version", valid_594754
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594755 = header.getOrDefault("X-Amz-Signature")
  valid_594755 = validateParameter(valid_594755, JString, required = false,
                                 default = nil)
  if valid_594755 != nil:
    section.add "X-Amz-Signature", valid_594755
  var valid_594756 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594756 = validateParameter(valid_594756, JString, required = false,
                                 default = nil)
  if valid_594756 != nil:
    section.add "X-Amz-Content-Sha256", valid_594756
  var valid_594757 = header.getOrDefault("X-Amz-Date")
  valid_594757 = validateParameter(valid_594757, JString, required = false,
                                 default = nil)
  if valid_594757 != nil:
    section.add "X-Amz-Date", valid_594757
  var valid_594758 = header.getOrDefault("X-Amz-Credential")
  valid_594758 = validateParameter(valid_594758, JString, required = false,
                                 default = nil)
  if valid_594758 != nil:
    section.add "X-Amz-Credential", valid_594758
  var valid_594759 = header.getOrDefault("X-Amz-Security-Token")
  valid_594759 = validateParameter(valid_594759, JString, required = false,
                                 default = nil)
  if valid_594759 != nil:
    section.add "X-Amz-Security-Token", valid_594759
  var valid_594760 = header.getOrDefault("X-Amz-Algorithm")
  valid_594760 = validateParameter(valid_594760, JString, required = false,
                                 default = nil)
  if valid_594760 != nil:
    section.add "X-Amz-Algorithm", valid_594760
  var valid_594761 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594761 = validateParameter(valid_594761, JString, required = false,
                                 default = nil)
  if valid_594761 != nil:
    section.add "X-Amz-SignedHeaders", valid_594761
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_594762 = formData.getOrDefault("StackSetName")
  valid_594762 = validateParameter(valid_594762, JString, required = true,
                                 default = nil)
  if valid_594762 != nil:
    section.add "StackSetName", valid_594762
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594763: Call_PostDescribeStackSet_594750; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_594763.validator(path, query, header, formData, body)
  let scheme = call_594763.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594763.url(scheme.get, call_594763.host, call_594763.base,
                         call_594763.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594763, url, valid)

proc call*(call_594764: Call_PostDescribeStackSet_594750; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594765 = newJObject()
  var formData_594766 = newJObject()
  add(formData_594766, "StackSetName", newJString(StackSetName))
  add(query_594765, "Action", newJString(Action))
  add(query_594765, "Version", newJString(Version))
  result = call_594764.call(nil, query_594765, nil, formData_594766, nil)

var postDescribeStackSet* = Call_PostDescribeStackSet_594750(
    name: "postDescribeStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_PostDescribeStackSet_594751, base: "/",
    url: url_PostDescribeStackSet_594752, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSet_594734 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackSet_594736(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSet_594735(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_594737 = query.getOrDefault("StackSetName")
  valid_594737 = validateParameter(valid_594737, JString, required = true,
                                 default = nil)
  if valid_594737 != nil:
    section.add "StackSetName", valid_594737
  var valid_594738 = query.getOrDefault("Action")
  valid_594738 = validateParameter(valid_594738, JString, required = true,
                                 default = newJString("DescribeStackSet"))
  if valid_594738 != nil:
    section.add "Action", valid_594738
  var valid_594739 = query.getOrDefault("Version")
  valid_594739 = validateParameter(valid_594739, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594739 != nil:
    section.add "Version", valid_594739
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594740 = header.getOrDefault("X-Amz-Signature")
  valid_594740 = validateParameter(valid_594740, JString, required = false,
                                 default = nil)
  if valid_594740 != nil:
    section.add "X-Amz-Signature", valid_594740
  var valid_594741 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594741 = validateParameter(valid_594741, JString, required = false,
                                 default = nil)
  if valid_594741 != nil:
    section.add "X-Amz-Content-Sha256", valid_594741
  var valid_594742 = header.getOrDefault("X-Amz-Date")
  valid_594742 = validateParameter(valid_594742, JString, required = false,
                                 default = nil)
  if valid_594742 != nil:
    section.add "X-Amz-Date", valid_594742
  var valid_594743 = header.getOrDefault("X-Amz-Credential")
  valid_594743 = validateParameter(valid_594743, JString, required = false,
                                 default = nil)
  if valid_594743 != nil:
    section.add "X-Amz-Credential", valid_594743
  var valid_594744 = header.getOrDefault("X-Amz-Security-Token")
  valid_594744 = validateParameter(valid_594744, JString, required = false,
                                 default = nil)
  if valid_594744 != nil:
    section.add "X-Amz-Security-Token", valid_594744
  var valid_594745 = header.getOrDefault("X-Amz-Algorithm")
  valid_594745 = validateParameter(valid_594745, JString, required = false,
                                 default = nil)
  if valid_594745 != nil:
    section.add "X-Amz-Algorithm", valid_594745
  var valid_594746 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594746 = validateParameter(valid_594746, JString, required = false,
                                 default = nil)
  if valid_594746 != nil:
    section.add "X-Amz-SignedHeaders", valid_594746
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594747: Call_GetDescribeStackSet_594734; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set. 
  ## 
  let valid = call_594747.validator(path, query, header, formData, body)
  let scheme = call_594747.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594747.url(scheme.get, call_594747.host, call_594747.base,
                         call_594747.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594747, url, valid)

proc call*(call_594748: Call_GetDescribeStackSet_594734; StackSetName: string;
          Action: string = "DescribeStackSet"; Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSet
  ## Returns the description of the specified stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set whose description you want.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594749 = newJObject()
  add(query_594749, "StackSetName", newJString(StackSetName))
  add(query_594749, "Action", newJString(Action))
  add(query_594749, "Version", newJString(Version))
  result = call_594748.call(nil, query_594749, nil, nil, nil)

var getDescribeStackSet* = Call_GetDescribeStackSet_594734(
    name: "getDescribeStackSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStackSet",
    validator: validate_GetDescribeStackSet_594735, base: "/",
    url: url_GetDescribeStackSet_594736, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStackSetOperation_594784 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStackSetOperation_594786(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStackSetOperation_594785(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594787 = query.getOrDefault("Action")
  valid_594787 = validateParameter(valid_594787, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_594787 != nil:
    section.add "Action", valid_594787
  var valid_594788 = query.getOrDefault("Version")
  valid_594788 = validateParameter(valid_594788, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594788 != nil:
    section.add "Version", valid_594788
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594789 = header.getOrDefault("X-Amz-Signature")
  valid_594789 = validateParameter(valid_594789, JString, required = false,
                                 default = nil)
  if valid_594789 != nil:
    section.add "X-Amz-Signature", valid_594789
  var valid_594790 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594790 = validateParameter(valid_594790, JString, required = false,
                                 default = nil)
  if valid_594790 != nil:
    section.add "X-Amz-Content-Sha256", valid_594790
  var valid_594791 = header.getOrDefault("X-Amz-Date")
  valid_594791 = validateParameter(valid_594791, JString, required = false,
                                 default = nil)
  if valid_594791 != nil:
    section.add "X-Amz-Date", valid_594791
  var valid_594792 = header.getOrDefault("X-Amz-Credential")
  valid_594792 = validateParameter(valid_594792, JString, required = false,
                                 default = nil)
  if valid_594792 != nil:
    section.add "X-Amz-Credential", valid_594792
  var valid_594793 = header.getOrDefault("X-Amz-Security-Token")
  valid_594793 = validateParameter(valid_594793, JString, required = false,
                                 default = nil)
  if valid_594793 != nil:
    section.add "X-Amz-Security-Token", valid_594793
  var valid_594794 = header.getOrDefault("X-Amz-Algorithm")
  valid_594794 = validateParameter(valid_594794, JString, required = false,
                                 default = nil)
  if valid_594794 != nil:
    section.add "X-Amz-Algorithm", valid_594794
  var valid_594795 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594795 = validateParameter(valid_594795, JString, required = false,
                                 default = nil)
  if valid_594795 != nil:
    section.add "X-Amz-SignedHeaders", valid_594795
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_594796 = formData.getOrDefault("OperationId")
  valid_594796 = validateParameter(valid_594796, JString, required = true,
                                 default = nil)
  if valid_594796 != nil:
    section.add "OperationId", valid_594796
  var valid_594797 = formData.getOrDefault("StackSetName")
  valid_594797 = validateParameter(valid_594797, JString, required = true,
                                 default = nil)
  if valid_594797 != nil:
    section.add "StackSetName", valid_594797
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594798: Call_PostDescribeStackSetOperation_594784; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_594798.validator(path, query, header, formData, body)
  let scheme = call_594798.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594798.url(scheme.get, call_594798.host, call_594798.base,
                         call_594798.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594798, url, valid)

proc call*(call_594799: Call_PostDescribeStackSetOperation_594784;
          OperationId: string; StackSetName: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594800 = newJObject()
  var formData_594801 = newJObject()
  add(formData_594801, "OperationId", newJString(OperationId))
  add(formData_594801, "StackSetName", newJString(StackSetName))
  add(query_594800, "Action", newJString(Action))
  add(query_594800, "Version", newJString(Version))
  result = call_594799.call(nil, query_594800, nil, formData_594801, nil)

var postDescribeStackSetOperation* = Call_PostDescribeStackSetOperation_594784(
    name: "postDescribeStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_PostDescribeStackSetOperation_594785, base: "/",
    url: url_PostDescribeStackSetOperation_594786,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStackSetOperation_594767 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStackSetOperation_594769(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStackSetOperation_594768(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the description of the specified stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: JString (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_594770 = query.getOrDefault("OperationId")
  valid_594770 = validateParameter(valid_594770, JString, required = true,
                                 default = nil)
  if valid_594770 != nil:
    section.add "OperationId", valid_594770
  var valid_594771 = query.getOrDefault("StackSetName")
  valid_594771 = validateParameter(valid_594771, JString, required = true,
                                 default = nil)
  if valid_594771 != nil:
    section.add "StackSetName", valid_594771
  var valid_594772 = query.getOrDefault("Action")
  valid_594772 = validateParameter(valid_594772, JString, required = true, default = newJString(
      "DescribeStackSetOperation"))
  if valid_594772 != nil:
    section.add "Action", valid_594772
  var valid_594773 = query.getOrDefault("Version")
  valid_594773 = validateParameter(valid_594773, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594773 != nil:
    section.add "Version", valid_594773
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594774 = header.getOrDefault("X-Amz-Signature")
  valid_594774 = validateParameter(valid_594774, JString, required = false,
                                 default = nil)
  if valid_594774 != nil:
    section.add "X-Amz-Signature", valid_594774
  var valid_594775 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594775 = validateParameter(valid_594775, JString, required = false,
                                 default = nil)
  if valid_594775 != nil:
    section.add "X-Amz-Content-Sha256", valid_594775
  var valid_594776 = header.getOrDefault("X-Amz-Date")
  valid_594776 = validateParameter(valid_594776, JString, required = false,
                                 default = nil)
  if valid_594776 != nil:
    section.add "X-Amz-Date", valid_594776
  var valid_594777 = header.getOrDefault("X-Amz-Credential")
  valid_594777 = validateParameter(valid_594777, JString, required = false,
                                 default = nil)
  if valid_594777 != nil:
    section.add "X-Amz-Credential", valid_594777
  var valid_594778 = header.getOrDefault("X-Amz-Security-Token")
  valid_594778 = validateParameter(valid_594778, JString, required = false,
                                 default = nil)
  if valid_594778 != nil:
    section.add "X-Amz-Security-Token", valid_594778
  var valid_594779 = header.getOrDefault("X-Amz-Algorithm")
  valid_594779 = validateParameter(valid_594779, JString, required = false,
                                 default = nil)
  if valid_594779 != nil:
    section.add "X-Amz-Algorithm", valid_594779
  var valid_594780 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594780 = validateParameter(valid_594780, JString, required = false,
                                 default = nil)
  if valid_594780 != nil:
    section.add "X-Amz-SignedHeaders", valid_594780
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594781: Call_GetDescribeStackSetOperation_594767; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the description of the specified stack set operation. 
  ## 
  let valid = call_594781.validator(path, query, header, formData, body)
  let scheme = call_594781.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594781.url(scheme.get, call_594781.host, call_594781.base,
                         call_594781.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594781, url, valid)

proc call*(call_594782: Call_GetDescribeStackSetOperation_594767;
          OperationId: string; StackSetName: string;
          Action: string = "DescribeStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStackSetOperation
  ## Returns the description of the specified stack set operation. 
  ##   OperationId: string (required)
  ##              : The unique ID of the stack set operation. 
  ##   StackSetName: string (required)
  ##               : The name or the unique stack ID of the stack set for the stack operation.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594783 = newJObject()
  add(query_594783, "OperationId", newJString(OperationId))
  add(query_594783, "StackSetName", newJString(StackSetName))
  add(query_594783, "Action", newJString(Action))
  add(query_594783, "Version", newJString(Version))
  result = call_594782.call(nil, query_594783, nil, nil, nil)

var getDescribeStackSetOperation* = Call_GetDescribeStackSetOperation_594767(
    name: "getDescribeStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStackSetOperation",
    validator: validate_GetDescribeStackSetOperation_594768, base: "/",
    url: url_GetDescribeStackSetOperation_594769,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDescribeStacks_594819 = ref object of OpenApiRestCall_593389
proc url_PostDescribeStacks_594821(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDescribeStacks_594820(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594822 = query.getOrDefault("Action")
  valid_594822 = validateParameter(valid_594822, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_594822 != nil:
    section.add "Action", valid_594822
  var valid_594823 = query.getOrDefault("Version")
  valid_594823 = validateParameter(valid_594823, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594823 != nil:
    section.add "Version", valid_594823
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594824 = header.getOrDefault("X-Amz-Signature")
  valid_594824 = validateParameter(valid_594824, JString, required = false,
                                 default = nil)
  if valid_594824 != nil:
    section.add "X-Amz-Signature", valid_594824
  var valid_594825 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594825 = validateParameter(valid_594825, JString, required = false,
                                 default = nil)
  if valid_594825 != nil:
    section.add "X-Amz-Content-Sha256", valid_594825
  var valid_594826 = header.getOrDefault("X-Amz-Date")
  valid_594826 = validateParameter(valid_594826, JString, required = false,
                                 default = nil)
  if valid_594826 != nil:
    section.add "X-Amz-Date", valid_594826
  var valid_594827 = header.getOrDefault("X-Amz-Credential")
  valid_594827 = validateParameter(valid_594827, JString, required = false,
                                 default = nil)
  if valid_594827 != nil:
    section.add "X-Amz-Credential", valid_594827
  var valid_594828 = header.getOrDefault("X-Amz-Security-Token")
  valid_594828 = validateParameter(valid_594828, JString, required = false,
                                 default = nil)
  if valid_594828 != nil:
    section.add "X-Amz-Security-Token", valid_594828
  var valid_594829 = header.getOrDefault("X-Amz-Algorithm")
  valid_594829 = validateParameter(valid_594829, JString, required = false,
                                 default = nil)
  if valid_594829 != nil:
    section.add "X-Amz-Algorithm", valid_594829
  var valid_594830 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594830 = validateParameter(valid_594830, JString, required = false,
                                 default = nil)
  if valid_594830 != nil:
    section.add "X-Amz-SignedHeaders", valid_594830
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  section = newJObject()
  var valid_594831 = formData.getOrDefault("StackName")
  valid_594831 = validateParameter(valid_594831, JString, required = false,
                                 default = nil)
  if valid_594831 != nil:
    section.add "StackName", valid_594831
  var valid_594832 = formData.getOrDefault("NextToken")
  valid_594832 = validateParameter(valid_594832, JString, required = false,
                                 default = nil)
  if valid_594832 != nil:
    section.add "NextToken", valid_594832
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594833: Call_PostDescribeStacks_594819; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_594833.validator(path, query, header, formData, body)
  let scheme = call_594833.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594833.url(scheme.get, call_594833.host, call_594833.base,
                         call_594833.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594833, url, valid)

proc call*(call_594834: Call_PostDescribeStacks_594819; StackName: string = "";
          NextToken: string = ""; Action: string = "DescribeStacks";
          Version: string = "2010-05-15"): Recallable =
  ## postDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594835 = newJObject()
  var formData_594836 = newJObject()
  add(formData_594836, "StackName", newJString(StackName))
  add(formData_594836, "NextToken", newJString(NextToken))
  add(query_594835, "Action", newJString(Action))
  add(query_594835, "Version", newJString(Version))
  result = call_594834.call(nil, query_594835, nil, formData_594836, nil)

var postDescribeStacks* = Call_PostDescribeStacks_594819(
    name: "postDescribeStacks", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DescribeStacks",
    validator: validate_PostDescribeStacks_594820, base: "/",
    url: url_PostDescribeStacks_594821, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDescribeStacks_594802 = ref object of OpenApiRestCall_593389
proc url_GetDescribeStacks_594804(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDescribeStacks_594803(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_594805 = query.getOrDefault("NextToken")
  valid_594805 = validateParameter(valid_594805, JString, required = false,
                                 default = nil)
  if valid_594805 != nil:
    section.add "NextToken", valid_594805
  var valid_594806 = query.getOrDefault("StackName")
  valid_594806 = validateParameter(valid_594806, JString, required = false,
                                 default = nil)
  if valid_594806 != nil:
    section.add "StackName", valid_594806
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594807 = query.getOrDefault("Action")
  valid_594807 = validateParameter(valid_594807, JString, required = true,
                                 default = newJString("DescribeStacks"))
  if valid_594807 != nil:
    section.add "Action", valid_594807
  var valid_594808 = query.getOrDefault("Version")
  valid_594808 = validateParameter(valid_594808, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594808 != nil:
    section.add "Version", valid_594808
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594809 = header.getOrDefault("X-Amz-Signature")
  valid_594809 = validateParameter(valid_594809, JString, required = false,
                                 default = nil)
  if valid_594809 != nil:
    section.add "X-Amz-Signature", valid_594809
  var valid_594810 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594810 = validateParameter(valid_594810, JString, required = false,
                                 default = nil)
  if valid_594810 != nil:
    section.add "X-Amz-Content-Sha256", valid_594810
  var valid_594811 = header.getOrDefault("X-Amz-Date")
  valid_594811 = validateParameter(valid_594811, JString, required = false,
                                 default = nil)
  if valid_594811 != nil:
    section.add "X-Amz-Date", valid_594811
  var valid_594812 = header.getOrDefault("X-Amz-Credential")
  valid_594812 = validateParameter(valid_594812, JString, required = false,
                                 default = nil)
  if valid_594812 != nil:
    section.add "X-Amz-Credential", valid_594812
  var valid_594813 = header.getOrDefault("X-Amz-Security-Token")
  valid_594813 = validateParameter(valid_594813, JString, required = false,
                                 default = nil)
  if valid_594813 != nil:
    section.add "X-Amz-Security-Token", valid_594813
  var valid_594814 = header.getOrDefault("X-Amz-Algorithm")
  valid_594814 = validateParameter(valid_594814, JString, required = false,
                                 default = nil)
  if valid_594814 != nil:
    section.add "X-Amz-Algorithm", valid_594814
  var valid_594815 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594815 = validateParameter(valid_594815, JString, required = false,
                                 default = nil)
  if valid_594815 != nil:
    section.add "X-Amz-SignedHeaders", valid_594815
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594816: Call_GetDescribeStacks_594802; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ## 
  let valid = call_594816.validator(path, query, header, formData, body)
  let scheme = call_594816.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594816.url(scheme.get, call_594816.host, call_594816.base,
                         call_594816.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594816, url, valid)

proc call*(call_594817: Call_GetDescribeStacks_594802; NextToken: string = "";
          StackName: string = ""; Action: string = "DescribeStacks";
          Version: string = "2010-05-15"): Recallable =
  ## getDescribeStacks
  ## <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594818 = newJObject()
  add(query_594818, "NextToken", newJString(NextToken))
  add(query_594818, "StackName", newJString(StackName))
  add(query_594818, "Action", newJString(Action))
  add(query_594818, "Version", newJString(Version))
  result = call_594817.call(nil, query_594818, nil, nil, nil)

var getDescribeStacks* = Call_GetDescribeStacks_594802(name: "getDescribeStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=DescribeStacks", validator: validate_GetDescribeStacks_594803,
    base: "/", url: url_GetDescribeStacks_594804,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackDrift_594854 = ref object of OpenApiRestCall_593389
proc url_PostDetectStackDrift_594856(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackDrift_594855(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594857 = query.getOrDefault("Action")
  valid_594857 = validateParameter(valid_594857, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_594857 != nil:
    section.add "Action", valid_594857
  var valid_594858 = query.getOrDefault("Version")
  valid_594858 = validateParameter(valid_594858, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594858 != nil:
    section.add "Version", valid_594858
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594859 = header.getOrDefault("X-Amz-Signature")
  valid_594859 = validateParameter(valid_594859, JString, required = false,
                                 default = nil)
  if valid_594859 != nil:
    section.add "X-Amz-Signature", valid_594859
  var valid_594860 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594860 = validateParameter(valid_594860, JString, required = false,
                                 default = nil)
  if valid_594860 != nil:
    section.add "X-Amz-Content-Sha256", valid_594860
  var valid_594861 = header.getOrDefault("X-Amz-Date")
  valid_594861 = validateParameter(valid_594861, JString, required = false,
                                 default = nil)
  if valid_594861 != nil:
    section.add "X-Amz-Date", valid_594861
  var valid_594862 = header.getOrDefault("X-Amz-Credential")
  valid_594862 = validateParameter(valid_594862, JString, required = false,
                                 default = nil)
  if valid_594862 != nil:
    section.add "X-Amz-Credential", valid_594862
  var valid_594863 = header.getOrDefault("X-Amz-Security-Token")
  valid_594863 = validateParameter(valid_594863, JString, required = false,
                                 default = nil)
  if valid_594863 != nil:
    section.add "X-Amz-Security-Token", valid_594863
  var valid_594864 = header.getOrDefault("X-Amz-Algorithm")
  valid_594864 = validateParameter(valid_594864, JString, required = false,
                                 default = nil)
  if valid_594864 != nil:
    section.add "X-Amz-Algorithm", valid_594864
  var valid_594865 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594865 = validateParameter(valid_594865, JString, required = false,
                                 default = nil)
  if valid_594865 != nil:
    section.add "X-Amz-SignedHeaders", valid_594865
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594866 = formData.getOrDefault("StackName")
  valid_594866 = validateParameter(valid_594866, JString, required = true,
                                 default = nil)
  if valid_594866 != nil:
    section.add "StackName", valid_594866
  var valid_594867 = formData.getOrDefault("LogicalResourceIds")
  valid_594867 = validateParameter(valid_594867, JArray, required = false,
                                 default = nil)
  if valid_594867 != nil:
    section.add "LogicalResourceIds", valid_594867
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594868: Call_PostDetectStackDrift_594854; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_594868.validator(path, query, header, formData, body)
  let scheme = call_594868.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594868.url(scheme.get, call_594868.host, call_594868.base,
                         call_594868.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594868, url, valid)

proc call*(call_594869: Call_PostDetectStackDrift_594854; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594870 = newJObject()
  var formData_594871 = newJObject()
  add(formData_594871, "StackName", newJString(StackName))
  if LogicalResourceIds != nil:
    formData_594871.add "LogicalResourceIds", LogicalResourceIds
  add(query_594870, "Action", newJString(Action))
  add(query_594870, "Version", newJString(Version))
  result = call_594869.call(nil, query_594870, nil, formData_594871, nil)

var postDetectStackDrift* = Call_PostDetectStackDrift_594854(
    name: "postDetectStackDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_PostDetectStackDrift_594855, base: "/",
    url: url_PostDetectStackDrift_594856, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackDrift_594837 = ref object of OpenApiRestCall_593389
proc url_GetDetectStackDrift_594839(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackDrift_594838(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: JString (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_594840 = query.getOrDefault("LogicalResourceIds")
  valid_594840 = validateParameter(valid_594840, JArray, required = false,
                                 default = nil)
  if valid_594840 != nil:
    section.add "LogicalResourceIds", valid_594840
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594841 = query.getOrDefault("StackName")
  valid_594841 = validateParameter(valid_594841, JString, required = true,
                                 default = nil)
  if valid_594841 != nil:
    section.add "StackName", valid_594841
  var valid_594842 = query.getOrDefault("Action")
  valid_594842 = validateParameter(valid_594842, JString, required = true,
                                 default = newJString("DetectStackDrift"))
  if valid_594842 != nil:
    section.add "Action", valid_594842
  var valid_594843 = query.getOrDefault("Version")
  valid_594843 = validateParameter(valid_594843, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594843 != nil:
    section.add "Version", valid_594843
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594844 = header.getOrDefault("X-Amz-Signature")
  valid_594844 = validateParameter(valid_594844, JString, required = false,
                                 default = nil)
  if valid_594844 != nil:
    section.add "X-Amz-Signature", valid_594844
  var valid_594845 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594845 = validateParameter(valid_594845, JString, required = false,
                                 default = nil)
  if valid_594845 != nil:
    section.add "X-Amz-Content-Sha256", valid_594845
  var valid_594846 = header.getOrDefault("X-Amz-Date")
  valid_594846 = validateParameter(valid_594846, JString, required = false,
                                 default = nil)
  if valid_594846 != nil:
    section.add "X-Amz-Date", valid_594846
  var valid_594847 = header.getOrDefault("X-Amz-Credential")
  valid_594847 = validateParameter(valid_594847, JString, required = false,
                                 default = nil)
  if valid_594847 != nil:
    section.add "X-Amz-Credential", valid_594847
  var valid_594848 = header.getOrDefault("X-Amz-Security-Token")
  valid_594848 = validateParameter(valid_594848, JString, required = false,
                                 default = nil)
  if valid_594848 != nil:
    section.add "X-Amz-Security-Token", valid_594848
  var valid_594849 = header.getOrDefault("X-Amz-Algorithm")
  valid_594849 = validateParameter(valid_594849, JString, required = false,
                                 default = nil)
  if valid_594849 != nil:
    section.add "X-Amz-Algorithm", valid_594849
  var valid_594850 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594850 = validateParameter(valid_594850, JString, required = false,
                                 default = nil)
  if valid_594850 != nil:
    section.add "X-Amz-SignedHeaders", valid_594850
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594851: Call_GetDetectStackDrift_594837; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ## 
  let valid = call_594851.validator(path, query, header, formData, body)
  let scheme = call_594851.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594851.url(scheme.get, call_594851.host, call_594851.base,
                         call_594851.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594851, url, valid)

proc call*(call_594852: Call_GetDetectStackDrift_594837; StackName: string;
          LogicalResourceIds: JsonNode = nil; Action: string = "DetectStackDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackDrift
  ## <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
  ##   LogicalResourceIds: JArray
  ##                     : The logical names of any resources you want to use as filters.
  ##   StackName: string (required)
  ##            : The name of the stack for which you want to detect drift. 
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594853 = newJObject()
  if LogicalResourceIds != nil:
    query_594853.add "LogicalResourceIds", LogicalResourceIds
  add(query_594853, "StackName", newJString(StackName))
  add(query_594853, "Action", newJString(Action))
  add(query_594853, "Version", newJString(Version))
  result = call_594852.call(nil, query_594853, nil, nil, nil)

var getDetectStackDrift* = Call_GetDetectStackDrift_594837(
    name: "getDetectStackDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=DetectStackDrift",
    validator: validate_GetDetectStackDrift_594838, base: "/",
    url: url_GetDetectStackDrift_594839, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostDetectStackResourceDrift_594889 = ref object of OpenApiRestCall_593389
proc url_PostDetectStackResourceDrift_594891(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostDetectStackResourceDrift_594890(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594892 = query.getOrDefault("Action")
  valid_594892 = validateParameter(valid_594892, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_594892 != nil:
    section.add "Action", valid_594892
  var valid_594893 = query.getOrDefault("Version")
  valid_594893 = validateParameter(valid_594893, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594893 != nil:
    section.add "Version", valid_594893
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594894 = header.getOrDefault("X-Amz-Signature")
  valid_594894 = validateParameter(valid_594894, JString, required = false,
                                 default = nil)
  if valid_594894 != nil:
    section.add "X-Amz-Signature", valid_594894
  var valid_594895 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594895 = validateParameter(valid_594895, JString, required = false,
                                 default = nil)
  if valid_594895 != nil:
    section.add "X-Amz-Content-Sha256", valid_594895
  var valid_594896 = header.getOrDefault("X-Amz-Date")
  valid_594896 = validateParameter(valid_594896, JString, required = false,
                                 default = nil)
  if valid_594896 != nil:
    section.add "X-Amz-Date", valid_594896
  var valid_594897 = header.getOrDefault("X-Amz-Credential")
  valid_594897 = validateParameter(valid_594897, JString, required = false,
                                 default = nil)
  if valid_594897 != nil:
    section.add "X-Amz-Credential", valid_594897
  var valid_594898 = header.getOrDefault("X-Amz-Security-Token")
  valid_594898 = validateParameter(valid_594898, JString, required = false,
                                 default = nil)
  if valid_594898 != nil:
    section.add "X-Amz-Security-Token", valid_594898
  var valid_594899 = header.getOrDefault("X-Amz-Algorithm")
  valid_594899 = validateParameter(valid_594899, JString, required = false,
                                 default = nil)
  if valid_594899 != nil:
    section.add "X-Amz-Algorithm", valid_594899
  var valid_594900 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594900 = validateParameter(valid_594900, JString, required = false,
                                 default = nil)
  if valid_594900 != nil:
    section.add "X-Amz-SignedHeaders", valid_594900
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_594901 = formData.getOrDefault("StackName")
  valid_594901 = validateParameter(valid_594901, JString, required = true,
                                 default = nil)
  if valid_594901 != nil:
    section.add "StackName", valid_594901
  var valid_594902 = formData.getOrDefault("LogicalResourceId")
  valid_594902 = validateParameter(valid_594902, JString, required = true,
                                 default = nil)
  if valid_594902 != nil:
    section.add "LogicalResourceId", valid_594902
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594903: Call_PostDetectStackResourceDrift_594889; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_594903.validator(path, query, header, formData, body)
  let scheme = call_594903.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594903.url(scheme.get, call_594903.host, call_594903.base,
                         call_594903.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594903, url, valid)

proc call*(call_594904: Call_PostDetectStackResourceDrift_594889;
          StackName: string; LogicalResourceId: string;
          Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## postDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  var query_594905 = newJObject()
  var formData_594906 = newJObject()
  add(formData_594906, "StackName", newJString(StackName))
  add(query_594905, "Action", newJString(Action))
  add(query_594905, "Version", newJString(Version))
  add(formData_594906, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_594904.call(nil, query_594905, nil, formData_594906, nil)

var postDetectStackResourceDrift* = Call_PostDetectStackResourceDrift_594889(
    name: "postDetectStackResourceDrift", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_PostDetectStackResourceDrift_594890, base: "/",
    url: url_PostDetectStackResourceDrift_594891,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetDetectStackResourceDrift_594872 = ref object of OpenApiRestCall_593389
proc url_GetDetectStackResourceDrift_594874(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetDetectStackResourceDrift_594873(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : The logical name of the resource for which to return drift information.
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594875 = query.getOrDefault("StackName")
  valid_594875 = validateParameter(valid_594875, JString, required = true,
                                 default = nil)
  if valid_594875 != nil:
    section.add "StackName", valid_594875
  var valid_594876 = query.getOrDefault("Action")
  valid_594876 = validateParameter(valid_594876, JString, required = true, default = newJString(
      "DetectStackResourceDrift"))
  if valid_594876 != nil:
    section.add "Action", valid_594876
  var valid_594877 = query.getOrDefault("Version")
  valid_594877 = validateParameter(valid_594877, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594877 != nil:
    section.add "Version", valid_594877
  var valid_594878 = query.getOrDefault("LogicalResourceId")
  valid_594878 = validateParameter(valid_594878, JString, required = true,
                                 default = nil)
  if valid_594878 != nil:
    section.add "LogicalResourceId", valid_594878
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594879 = header.getOrDefault("X-Amz-Signature")
  valid_594879 = validateParameter(valid_594879, JString, required = false,
                                 default = nil)
  if valid_594879 != nil:
    section.add "X-Amz-Signature", valid_594879
  var valid_594880 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594880 = validateParameter(valid_594880, JString, required = false,
                                 default = nil)
  if valid_594880 != nil:
    section.add "X-Amz-Content-Sha256", valid_594880
  var valid_594881 = header.getOrDefault("X-Amz-Date")
  valid_594881 = validateParameter(valid_594881, JString, required = false,
                                 default = nil)
  if valid_594881 != nil:
    section.add "X-Amz-Date", valid_594881
  var valid_594882 = header.getOrDefault("X-Amz-Credential")
  valid_594882 = validateParameter(valid_594882, JString, required = false,
                                 default = nil)
  if valid_594882 != nil:
    section.add "X-Amz-Credential", valid_594882
  var valid_594883 = header.getOrDefault("X-Amz-Security-Token")
  valid_594883 = validateParameter(valid_594883, JString, required = false,
                                 default = nil)
  if valid_594883 != nil:
    section.add "X-Amz-Security-Token", valid_594883
  var valid_594884 = header.getOrDefault("X-Amz-Algorithm")
  valid_594884 = validateParameter(valid_594884, JString, required = false,
                                 default = nil)
  if valid_594884 != nil:
    section.add "X-Amz-Algorithm", valid_594884
  var valid_594885 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594885 = validateParameter(valid_594885, JString, required = false,
                                 default = nil)
  if valid_594885 != nil:
    section.add "X-Amz-SignedHeaders", valid_594885
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594886: Call_GetDetectStackResourceDrift_594872; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ## 
  let valid = call_594886.validator(path, query, header, formData, body)
  let scheme = call_594886.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594886.url(scheme.get, call_594886.host, call_594886.base,
                         call_594886.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594886, url, valid)

proc call*(call_594887: Call_GetDetectStackResourceDrift_594872; StackName: string;
          LogicalResourceId: string; Action: string = "DetectStackResourceDrift";
          Version: string = "2010-05-15"): Recallable =
  ## getDetectStackResourceDrift
  ## <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
  ##   StackName: string (required)
  ##            : The name of the stack to which the resource belongs.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical name of the resource for which to return drift information.
  var query_594888 = newJObject()
  add(query_594888, "StackName", newJString(StackName))
  add(query_594888, "Action", newJString(Action))
  add(query_594888, "Version", newJString(Version))
  add(query_594888, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_594887.call(nil, query_594888, nil, nil, nil)

var getDetectStackResourceDrift* = Call_GetDetectStackResourceDrift_594872(
    name: "getDetectStackResourceDrift", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=DetectStackResourceDrift",
    validator: validate_GetDetectStackResourceDrift_594873, base: "/",
    url: url_GetDetectStackResourceDrift_594874,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostEstimateTemplateCost_594925 = ref object of OpenApiRestCall_593389
proc url_PostEstimateTemplateCost_594927(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostEstimateTemplateCost_594926(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594928 = query.getOrDefault("Action")
  valid_594928 = validateParameter(valid_594928, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_594928 != nil:
    section.add "Action", valid_594928
  var valid_594929 = query.getOrDefault("Version")
  valid_594929 = validateParameter(valid_594929, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594929 != nil:
    section.add "Version", valid_594929
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594930 = header.getOrDefault("X-Amz-Signature")
  valid_594930 = validateParameter(valid_594930, JString, required = false,
                                 default = nil)
  if valid_594930 != nil:
    section.add "X-Amz-Signature", valid_594930
  var valid_594931 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594931 = validateParameter(valid_594931, JString, required = false,
                                 default = nil)
  if valid_594931 != nil:
    section.add "X-Amz-Content-Sha256", valid_594931
  var valid_594932 = header.getOrDefault("X-Amz-Date")
  valid_594932 = validateParameter(valid_594932, JString, required = false,
                                 default = nil)
  if valid_594932 != nil:
    section.add "X-Amz-Date", valid_594932
  var valid_594933 = header.getOrDefault("X-Amz-Credential")
  valid_594933 = validateParameter(valid_594933, JString, required = false,
                                 default = nil)
  if valid_594933 != nil:
    section.add "X-Amz-Credential", valid_594933
  var valid_594934 = header.getOrDefault("X-Amz-Security-Token")
  valid_594934 = validateParameter(valid_594934, JString, required = false,
                                 default = nil)
  if valid_594934 != nil:
    section.add "X-Amz-Security-Token", valid_594934
  var valid_594935 = header.getOrDefault("X-Amz-Algorithm")
  valid_594935 = validateParameter(valid_594935, JString, required = false,
                                 default = nil)
  if valid_594935 != nil:
    section.add "X-Amz-Algorithm", valid_594935
  var valid_594936 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594936 = validateParameter(valid_594936, JString, required = false,
                                 default = nil)
  if valid_594936 != nil:
    section.add "X-Amz-SignedHeaders", valid_594936
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  section = newJObject()
  var valid_594937 = formData.getOrDefault("TemplateURL")
  valid_594937 = validateParameter(valid_594937, JString, required = false,
                                 default = nil)
  if valid_594937 != nil:
    section.add "TemplateURL", valid_594937
  var valid_594938 = formData.getOrDefault("TemplateBody")
  valid_594938 = validateParameter(valid_594938, JString, required = false,
                                 default = nil)
  if valid_594938 != nil:
    section.add "TemplateBody", valid_594938
  var valid_594939 = formData.getOrDefault("Parameters")
  valid_594939 = validateParameter(valid_594939, JArray, required = false,
                                 default = nil)
  if valid_594939 != nil:
    section.add "Parameters", valid_594939
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594940: Call_PostEstimateTemplateCost_594925; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_594940.validator(path, query, header, formData, body)
  let scheme = call_594940.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594940.url(scheme.get, call_594940.host, call_594940.base,
                         call_594940.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594940, url, valid)

proc call*(call_594941: Call_PostEstimateTemplateCost_594925;
          TemplateURL: string = ""; TemplateBody: string = "";
          Action: string = "EstimateTemplateCost"; Parameters: JsonNode = nil;
          Version: string = "2010-05-15"): Recallable =
  ## postEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   Version: string (required)
  var query_594942 = newJObject()
  var formData_594943 = newJObject()
  add(formData_594943, "TemplateURL", newJString(TemplateURL))
  add(formData_594943, "TemplateBody", newJString(TemplateBody))
  add(query_594942, "Action", newJString(Action))
  if Parameters != nil:
    formData_594943.add "Parameters", Parameters
  add(query_594942, "Version", newJString(Version))
  result = call_594941.call(nil, query_594942, nil, formData_594943, nil)

var postEstimateTemplateCost* = Call_PostEstimateTemplateCost_594925(
    name: "postEstimateTemplateCost", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_PostEstimateTemplateCost_594926, base: "/",
    url: url_PostEstimateTemplateCost_594927, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetEstimateTemplateCost_594907 = ref object of OpenApiRestCall_593389
proc url_GetEstimateTemplateCost_594909(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetEstimateTemplateCost_594908(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_594910 = query.getOrDefault("Parameters")
  valid_594910 = validateParameter(valid_594910, JArray, required = false,
                                 default = nil)
  if valid_594910 != nil:
    section.add "Parameters", valid_594910
  var valid_594911 = query.getOrDefault("TemplateBody")
  valid_594911 = validateParameter(valid_594911, JString, required = false,
                                 default = nil)
  if valid_594911 != nil:
    section.add "TemplateBody", valid_594911
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594912 = query.getOrDefault("Action")
  valid_594912 = validateParameter(valid_594912, JString, required = true,
                                 default = newJString("EstimateTemplateCost"))
  if valid_594912 != nil:
    section.add "Action", valid_594912
  var valid_594913 = query.getOrDefault("TemplateURL")
  valid_594913 = validateParameter(valid_594913, JString, required = false,
                                 default = nil)
  if valid_594913 != nil:
    section.add "TemplateURL", valid_594913
  var valid_594914 = query.getOrDefault("Version")
  valid_594914 = validateParameter(valid_594914, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594914 != nil:
    section.add "Version", valid_594914
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594915 = header.getOrDefault("X-Amz-Signature")
  valid_594915 = validateParameter(valid_594915, JString, required = false,
                                 default = nil)
  if valid_594915 != nil:
    section.add "X-Amz-Signature", valid_594915
  var valid_594916 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594916 = validateParameter(valid_594916, JString, required = false,
                                 default = nil)
  if valid_594916 != nil:
    section.add "X-Amz-Content-Sha256", valid_594916
  var valid_594917 = header.getOrDefault("X-Amz-Date")
  valid_594917 = validateParameter(valid_594917, JString, required = false,
                                 default = nil)
  if valid_594917 != nil:
    section.add "X-Amz-Date", valid_594917
  var valid_594918 = header.getOrDefault("X-Amz-Credential")
  valid_594918 = validateParameter(valid_594918, JString, required = false,
                                 default = nil)
  if valid_594918 != nil:
    section.add "X-Amz-Credential", valid_594918
  var valid_594919 = header.getOrDefault("X-Amz-Security-Token")
  valid_594919 = validateParameter(valid_594919, JString, required = false,
                                 default = nil)
  if valid_594919 != nil:
    section.add "X-Amz-Security-Token", valid_594919
  var valid_594920 = header.getOrDefault("X-Amz-Algorithm")
  valid_594920 = validateParameter(valid_594920, JString, required = false,
                                 default = nil)
  if valid_594920 != nil:
    section.add "X-Amz-Algorithm", valid_594920
  var valid_594921 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594921 = validateParameter(valid_594921, JString, required = false,
                                 default = nil)
  if valid_594921 != nil:
    section.add "X-Amz-SignedHeaders", valid_594921
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594922: Call_GetEstimateTemplateCost_594907; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ## 
  let valid = call_594922.validator(path, query, header, formData, body)
  let scheme = call_594922.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594922.url(scheme.get, call_594922.host, call_594922.base,
                         call_594922.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594922, url, valid)

proc call*(call_594923: Call_GetEstimateTemplateCost_594907;
          Parameters: JsonNode = nil; TemplateBody: string = "";
          Action: string = "EstimateTemplateCost"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getEstimateTemplateCost
  ## Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_594924 = newJObject()
  if Parameters != nil:
    query_594924.add "Parameters", Parameters
  add(query_594924, "TemplateBody", newJString(TemplateBody))
  add(query_594924, "Action", newJString(Action))
  add(query_594924, "TemplateURL", newJString(TemplateURL))
  add(query_594924, "Version", newJString(Version))
  result = call_594923.call(nil, query_594924, nil, nil, nil)

var getEstimateTemplateCost* = Call_GetEstimateTemplateCost_594907(
    name: "getEstimateTemplateCost", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=EstimateTemplateCost",
    validator: validate_GetEstimateTemplateCost_594908, base: "/",
    url: url_GetEstimateTemplateCost_594909, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostExecuteChangeSet_594962 = ref object of OpenApiRestCall_593389
proc url_PostExecuteChangeSet_594964(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostExecuteChangeSet_594963(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594965 = query.getOrDefault("Action")
  valid_594965 = validateParameter(valid_594965, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_594965 != nil:
    section.add "Action", valid_594965
  var valid_594966 = query.getOrDefault("Version")
  valid_594966 = validateParameter(valid_594966, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594966 != nil:
    section.add "Version", valid_594966
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594967 = header.getOrDefault("X-Amz-Signature")
  valid_594967 = validateParameter(valid_594967, JString, required = false,
                                 default = nil)
  if valid_594967 != nil:
    section.add "X-Amz-Signature", valid_594967
  var valid_594968 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594968 = validateParameter(valid_594968, JString, required = false,
                                 default = nil)
  if valid_594968 != nil:
    section.add "X-Amz-Content-Sha256", valid_594968
  var valid_594969 = header.getOrDefault("X-Amz-Date")
  valid_594969 = validateParameter(valid_594969, JString, required = false,
                                 default = nil)
  if valid_594969 != nil:
    section.add "X-Amz-Date", valid_594969
  var valid_594970 = header.getOrDefault("X-Amz-Credential")
  valid_594970 = validateParameter(valid_594970, JString, required = false,
                                 default = nil)
  if valid_594970 != nil:
    section.add "X-Amz-Credential", valid_594970
  var valid_594971 = header.getOrDefault("X-Amz-Security-Token")
  valid_594971 = validateParameter(valid_594971, JString, required = false,
                                 default = nil)
  if valid_594971 != nil:
    section.add "X-Amz-Security-Token", valid_594971
  var valid_594972 = header.getOrDefault("X-Amz-Algorithm")
  valid_594972 = validateParameter(valid_594972, JString, required = false,
                                 default = nil)
  if valid_594972 != nil:
    section.add "X-Amz-Algorithm", valid_594972
  var valid_594973 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594973 = validateParameter(valid_594973, JString, required = false,
                                 default = nil)
  if valid_594973 != nil:
    section.add "X-Amz-SignedHeaders", valid_594973
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  section = newJObject()
  var valid_594974 = formData.getOrDefault("StackName")
  valid_594974 = validateParameter(valid_594974, JString, required = false,
                                 default = nil)
  if valid_594974 != nil:
    section.add "StackName", valid_594974
  assert formData != nil,
        "formData argument is necessary due to required `ChangeSetName` field"
  var valid_594975 = formData.getOrDefault("ChangeSetName")
  valid_594975 = validateParameter(valid_594975, JString, required = true,
                                 default = nil)
  if valid_594975 != nil:
    section.add "ChangeSetName", valid_594975
  var valid_594976 = formData.getOrDefault("ClientRequestToken")
  valid_594976 = validateParameter(valid_594976, JString, required = false,
                                 default = nil)
  if valid_594976 != nil:
    section.add "ClientRequestToken", valid_594976
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594977: Call_PostExecuteChangeSet_594962; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_594977.validator(path, query, header, formData, body)
  let scheme = call_594977.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594977.url(scheme.get, call_594977.host, call_594977.base,
                         call_594977.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594977, url, valid)

proc call*(call_594978: Call_PostExecuteChangeSet_594962; ChangeSetName: string;
          StackName: string = ""; ClientRequestToken: string = "";
          Action: string = "ExecuteChangeSet"; Version: string = "2010-05-15"): Recallable =
  ## postExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594979 = newJObject()
  var formData_594980 = newJObject()
  add(formData_594980, "StackName", newJString(StackName))
  add(formData_594980, "ChangeSetName", newJString(ChangeSetName))
  add(formData_594980, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594979, "Action", newJString(Action))
  add(query_594979, "Version", newJString(Version))
  result = call_594978.call(nil, query_594979, nil, formData_594980, nil)

var postExecuteChangeSet* = Call_PostExecuteChangeSet_594962(
    name: "postExecuteChangeSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_PostExecuteChangeSet_594963, base: "/",
    url: url_PostExecuteChangeSet_594964, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetExecuteChangeSet_594944 = ref object of OpenApiRestCall_593389
proc url_GetExecuteChangeSet_594946(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetExecuteChangeSet_594945(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Action: JString (required)
  ##   ClientRequestToken: JString
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: JString (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Version: JString (required)
  section = newJObject()
  var valid_594947 = query.getOrDefault("StackName")
  valid_594947 = validateParameter(valid_594947, JString, required = false,
                                 default = nil)
  if valid_594947 != nil:
    section.add "StackName", valid_594947
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_594948 = query.getOrDefault("Action")
  valid_594948 = validateParameter(valid_594948, JString, required = true,
                                 default = newJString("ExecuteChangeSet"))
  if valid_594948 != nil:
    section.add "Action", valid_594948
  var valid_594949 = query.getOrDefault("ClientRequestToken")
  valid_594949 = validateParameter(valid_594949, JString, required = false,
                                 default = nil)
  if valid_594949 != nil:
    section.add "ClientRequestToken", valid_594949
  var valid_594950 = query.getOrDefault("ChangeSetName")
  valid_594950 = validateParameter(valid_594950, JString, required = true,
                                 default = nil)
  if valid_594950 != nil:
    section.add "ChangeSetName", valid_594950
  var valid_594951 = query.getOrDefault("Version")
  valid_594951 = validateParameter(valid_594951, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594951 != nil:
    section.add "Version", valid_594951
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594952 = header.getOrDefault("X-Amz-Signature")
  valid_594952 = validateParameter(valid_594952, JString, required = false,
                                 default = nil)
  if valid_594952 != nil:
    section.add "X-Amz-Signature", valid_594952
  var valid_594953 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594953 = validateParameter(valid_594953, JString, required = false,
                                 default = nil)
  if valid_594953 != nil:
    section.add "X-Amz-Content-Sha256", valid_594953
  var valid_594954 = header.getOrDefault("X-Amz-Date")
  valid_594954 = validateParameter(valid_594954, JString, required = false,
                                 default = nil)
  if valid_594954 != nil:
    section.add "X-Amz-Date", valid_594954
  var valid_594955 = header.getOrDefault("X-Amz-Credential")
  valid_594955 = validateParameter(valid_594955, JString, required = false,
                                 default = nil)
  if valid_594955 != nil:
    section.add "X-Amz-Credential", valid_594955
  var valid_594956 = header.getOrDefault("X-Amz-Security-Token")
  valid_594956 = validateParameter(valid_594956, JString, required = false,
                                 default = nil)
  if valid_594956 != nil:
    section.add "X-Amz-Security-Token", valid_594956
  var valid_594957 = header.getOrDefault("X-Amz-Algorithm")
  valid_594957 = validateParameter(valid_594957, JString, required = false,
                                 default = nil)
  if valid_594957 != nil:
    section.add "X-Amz-Algorithm", valid_594957
  var valid_594958 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594958 = validateParameter(valid_594958, JString, required = false,
                                 default = nil)
  if valid_594958 != nil:
    section.add "X-Amz-SignedHeaders", valid_594958
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594959: Call_GetExecuteChangeSet_594944; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ## 
  let valid = call_594959.validator(path, query, header, formData, body)
  let scheme = call_594959.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594959.url(scheme.get, call_594959.host, call_594959.base,
                         call_594959.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594959, url, valid)

proc call*(call_594960: Call_GetExecuteChangeSet_594944; ChangeSetName: string;
          StackName: string = ""; Action: string = "ExecuteChangeSet";
          ClientRequestToken: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getExecuteChangeSet
  ## <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
  ##   StackName: string
  ##            : If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.
  ##   Action: string (required)
  ##   ClientRequestToken: string
  ##                     : A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.
  ##   ChangeSetName: string (required)
  ##                : The name or ARN of the change set that you want use to update the specified stack.
  ##   Version: string (required)
  var query_594961 = newJObject()
  add(query_594961, "StackName", newJString(StackName))
  add(query_594961, "Action", newJString(Action))
  add(query_594961, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_594961, "ChangeSetName", newJString(ChangeSetName))
  add(query_594961, "Version", newJString(Version))
  result = call_594960.call(nil, query_594961, nil, nil, nil)

var getExecuteChangeSet* = Call_GetExecuteChangeSet_594944(
    name: "getExecuteChangeSet", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ExecuteChangeSet",
    validator: validate_GetExecuteChangeSet_594945, base: "/",
    url: url_GetExecuteChangeSet_594946, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetStackPolicy_594997 = ref object of OpenApiRestCall_593389
proc url_PostGetStackPolicy_594999(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetStackPolicy_594998(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595000 = query.getOrDefault("Action")
  valid_595000 = validateParameter(valid_595000, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_595000 != nil:
    section.add "Action", valid_595000
  var valid_595001 = query.getOrDefault("Version")
  valid_595001 = validateParameter(valid_595001, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595001 != nil:
    section.add "Version", valid_595001
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595002 = header.getOrDefault("X-Amz-Signature")
  valid_595002 = validateParameter(valid_595002, JString, required = false,
                                 default = nil)
  if valid_595002 != nil:
    section.add "X-Amz-Signature", valid_595002
  var valid_595003 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595003 = validateParameter(valid_595003, JString, required = false,
                                 default = nil)
  if valid_595003 != nil:
    section.add "X-Amz-Content-Sha256", valid_595003
  var valid_595004 = header.getOrDefault("X-Amz-Date")
  valid_595004 = validateParameter(valid_595004, JString, required = false,
                                 default = nil)
  if valid_595004 != nil:
    section.add "X-Amz-Date", valid_595004
  var valid_595005 = header.getOrDefault("X-Amz-Credential")
  valid_595005 = validateParameter(valid_595005, JString, required = false,
                                 default = nil)
  if valid_595005 != nil:
    section.add "X-Amz-Credential", valid_595005
  var valid_595006 = header.getOrDefault("X-Amz-Security-Token")
  valid_595006 = validateParameter(valid_595006, JString, required = false,
                                 default = nil)
  if valid_595006 != nil:
    section.add "X-Amz-Security-Token", valid_595006
  var valid_595007 = header.getOrDefault("X-Amz-Algorithm")
  valid_595007 = validateParameter(valid_595007, JString, required = false,
                                 default = nil)
  if valid_595007 != nil:
    section.add "X-Amz-Algorithm", valid_595007
  var valid_595008 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595008 = validateParameter(valid_595008, JString, required = false,
                                 default = nil)
  if valid_595008 != nil:
    section.add "X-Amz-SignedHeaders", valid_595008
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_595009 = formData.getOrDefault("StackName")
  valid_595009 = validateParameter(valid_595009, JString, required = true,
                                 default = nil)
  if valid_595009 != nil:
    section.add "StackName", valid_595009
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595010: Call_PostGetStackPolicy_594997; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_595010.validator(path, query, header, formData, body)
  let scheme = call_595010.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595010.url(scheme.get, call_595010.host, call_595010.base,
                         call_595010.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595010, url, valid)

proc call*(call_595011: Call_PostGetStackPolicy_594997; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595012 = newJObject()
  var formData_595013 = newJObject()
  add(formData_595013, "StackName", newJString(StackName))
  add(query_595012, "Action", newJString(Action))
  add(query_595012, "Version", newJString(Version))
  result = call_595011.call(nil, query_595012, nil, formData_595013, nil)

var postGetStackPolicy* = Call_PostGetStackPolicy_594997(
    name: "postGetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetStackPolicy",
    validator: validate_PostGetStackPolicy_594998, base: "/",
    url: url_PostGetStackPolicy_594999, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetStackPolicy_594981 = ref object of OpenApiRestCall_593389
proc url_GetGetStackPolicy_594983(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetStackPolicy_594982(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_594984 = query.getOrDefault("StackName")
  valid_594984 = validateParameter(valid_594984, JString, required = true,
                                 default = nil)
  if valid_594984 != nil:
    section.add "StackName", valid_594984
  var valid_594985 = query.getOrDefault("Action")
  valid_594985 = validateParameter(valid_594985, JString, required = true,
                                 default = newJString("GetStackPolicy"))
  if valid_594985 != nil:
    section.add "Action", valid_594985
  var valid_594986 = query.getOrDefault("Version")
  valid_594986 = validateParameter(valid_594986, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_594986 != nil:
    section.add "Version", valid_594986
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_594987 = header.getOrDefault("X-Amz-Signature")
  valid_594987 = validateParameter(valid_594987, JString, required = false,
                                 default = nil)
  if valid_594987 != nil:
    section.add "X-Amz-Signature", valid_594987
  var valid_594988 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_594988 = validateParameter(valid_594988, JString, required = false,
                                 default = nil)
  if valid_594988 != nil:
    section.add "X-Amz-Content-Sha256", valid_594988
  var valid_594989 = header.getOrDefault("X-Amz-Date")
  valid_594989 = validateParameter(valid_594989, JString, required = false,
                                 default = nil)
  if valid_594989 != nil:
    section.add "X-Amz-Date", valid_594989
  var valid_594990 = header.getOrDefault("X-Amz-Credential")
  valid_594990 = validateParameter(valid_594990, JString, required = false,
                                 default = nil)
  if valid_594990 != nil:
    section.add "X-Amz-Credential", valid_594990
  var valid_594991 = header.getOrDefault("X-Amz-Security-Token")
  valid_594991 = validateParameter(valid_594991, JString, required = false,
                                 default = nil)
  if valid_594991 != nil:
    section.add "X-Amz-Security-Token", valid_594991
  var valid_594992 = header.getOrDefault("X-Amz-Algorithm")
  valid_594992 = validateParameter(valid_594992, JString, required = false,
                                 default = nil)
  if valid_594992 != nil:
    section.add "X-Amz-Algorithm", valid_594992
  var valid_594993 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_594993 = validateParameter(valid_594993, JString, required = false,
                                 default = nil)
  if valid_594993 != nil:
    section.add "X-Amz-SignedHeaders", valid_594993
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_594994: Call_GetGetStackPolicy_594981; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ## 
  let valid = call_594994.validator(path, query, header, formData, body)
  let scheme = call_594994.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_594994.url(scheme.get, call_594994.host, call_594994.base,
                         call_594994.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_594994, url, valid)

proc call*(call_594995: Call_GetGetStackPolicy_594981; StackName: string;
          Action: string = "GetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getGetStackPolicy
  ## Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that is associated with the stack whose policy you want to get.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_594996 = newJObject()
  add(query_594996, "StackName", newJString(StackName))
  add(query_594996, "Action", newJString(Action))
  add(query_594996, "Version", newJString(Version))
  result = call_594995.call(nil, query_594996, nil, nil, nil)

var getGetStackPolicy* = Call_GetGetStackPolicy_594981(name: "getGetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetStackPolicy", validator: validate_GetGetStackPolicy_594982,
    base: "/", url: url_GetGetStackPolicy_594983,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplate_595032 = ref object of OpenApiRestCall_593389
proc url_PostGetTemplate_595034(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplate_595033(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595035 = query.getOrDefault("Action")
  valid_595035 = validateParameter(valid_595035, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_595035 != nil:
    section.add "Action", valid_595035
  var valid_595036 = query.getOrDefault("Version")
  valid_595036 = validateParameter(valid_595036, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595036 != nil:
    section.add "Version", valid_595036
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595037 = header.getOrDefault("X-Amz-Signature")
  valid_595037 = validateParameter(valid_595037, JString, required = false,
                                 default = nil)
  if valid_595037 != nil:
    section.add "X-Amz-Signature", valid_595037
  var valid_595038 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595038 = validateParameter(valid_595038, JString, required = false,
                                 default = nil)
  if valid_595038 != nil:
    section.add "X-Amz-Content-Sha256", valid_595038
  var valid_595039 = header.getOrDefault("X-Amz-Date")
  valid_595039 = validateParameter(valid_595039, JString, required = false,
                                 default = nil)
  if valid_595039 != nil:
    section.add "X-Amz-Date", valid_595039
  var valid_595040 = header.getOrDefault("X-Amz-Credential")
  valid_595040 = validateParameter(valid_595040, JString, required = false,
                                 default = nil)
  if valid_595040 != nil:
    section.add "X-Amz-Credential", valid_595040
  var valid_595041 = header.getOrDefault("X-Amz-Security-Token")
  valid_595041 = validateParameter(valid_595041, JString, required = false,
                                 default = nil)
  if valid_595041 != nil:
    section.add "X-Amz-Security-Token", valid_595041
  var valid_595042 = header.getOrDefault("X-Amz-Algorithm")
  valid_595042 = validateParameter(valid_595042, JString, required = false,
                                 default = nil)
  if valid_595042 != nil:
    section.add "X-Amz-Algorithm", valid_595042
  var valid_595043 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595043 = validateParameter(valid_595043, JString, required = false,
                                 default = nil)
  if valid_595043 != nil:
    section.add "X-Amz-SignedHeaders", valid_595043
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  section = newJObject()
  var valid_595044 = formData.getOrDefault("StackName")
  valid_595044 = validateParameter(valid_595044, JString, required = false,
                                 default = nil)
  if valid_595044 != nil:
    section.add "StackName", valid_595044
  var valid_595045 = formData.getOrDefault("ChangeSetName")
  valid_595045 = validateParameter(valid_595045, JString, required = false,
                                 default = nil)
  if valid_595045 != nil:
    section.add "ChangeSetName", valid_595045
  var valid_595046 = formData.getOrDefault("TemplateStage")
  valid_595046 = validateParameter(valid_595046, JString, required = false,
                                 default = newJString("Original"))
  if valid_595046 != nil:
    section.add "TemplateStage", valid_595046
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595047: Call_PostGetTemplate_595032; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_595047.validator(path, query, header, formData, body)
  let scheme = call_595047.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595047.url(scheme.get, call_595047.host, call_595047.base,
                         call_595047.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595047, url, valid)

proc call*(call_595048: Call_PostGetTemplate_595032; StackName: string = "";
          ChangeSetName: string = ""; Action: string = "GetTemplate";
          TemplateStage: string = "Original"; Version: string = "2010-05-15"): Recallable =
  ## postGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Action: string (required)
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Version: string (required)
  var query_595049 = newJObject()
  var formData_595050 = newJObject()
  add(formData_595050, "StackName", newJString(StackName))
  add(formData_595050, "ChangeSetName", newJString(ChangeSetName))
  add(query_595049, "Action", newJString(Action))
  add(formData_595050, "TemplateStage", newJString(TemplateStage))
  add(query_595049, "Version", newJString(Version))
  result = call_595048.call(nil, query_595049, nil, formData_595050, nil)

var postGetTemplate* = Call_PostGetTemplate_595032(name: "postGetTemplate",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_PostGetTemplate_595033,
    base: "/", url: url_PostGetTemplate_595034, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplate_595014 = ref object of OpenApiRestCall_593389
proc url_GetGetTemplate_595016(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplate_595015(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   TemplateStage: JString
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: JString (required)
  ##   ChangeSetName: JString
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Version: JString (required)
  section = newJObject()
  var valid_595017 = query.getOrDefault("StackName")
  valid_595017 = validateParameter(valid_595017, JString, required = false,
                                 default = nil)
  if valid_595017 != nil:
    section.add "StackName", valid_595017
  var valid_595018 = query.getOrDefault("TemplateStage")
  valid_595018 = validateParameter(valid_595018, JString, required = false,
                                 default = newJString("Original"))
  if valid_595018 != nil:
    section.add "TemplateStage", valid_595018
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595019 = query.getOrDefault("Action")
  valid_595019 = validateParameter(valid_595019, JString, required = true,
                                 default = newJString("GetTemplate"))
  if valid_595019 != nil:
    section.add "Action", valid_595019
  var valid_595020 = query.getOrDefault("ChangeSetName")
  valid_595020 = validateParameter(valid_595020, JString, required = false,
                                 default = nil)
  if valid_595020 != nil:
    section.add "ChangeSetName", valid_595020
  var valid_595021 = query.getOrDefault("Version")
  valid_595021 = validateParameter(valid_595021, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595021 != nil:
    section.add "Version", valid_595021
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595022 = header.getOrDefault("X-Amz-Signature")
  valid_595022 = validateParameter(valid_595022, JString, required = false,
                                 default = nil)
  if valid_595022 != nil:
    section.add "X-Amz-Signature", valid_595022
  var valid_595023 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595023 = validateParameter(valid_595023, JString, required = false,
                                 default = nil)
  if valid_595023 != nil:
    section.add "X-Amz-Content-Sha256", valid_595023
  var valid_595024 = header.getOrDefault("X-Amz-Date")
  valid_595024 = validateParameter(valid_595024, JString, required = false,
                                 default = nil)
  if valid_595024 != nil:
    section.add "X-Amz-Date", valid_595024
  var valid_595025 = header.getOrDefault("X-Amz-Credential")
  valid_595025 = validateParameter(valid_595025, JString, required = false,
                                 default = nil)
  if valid_595025 != nil:
    section.add "X-Amz-Credential", valid_595025
  var valid_595026 = header.getOrDefault("X-Amz-Security-Token")
  valid_595026 = validateParameter(valid_595026, JString, required = false,
                                 default = nil)
  if valid_595026 != nil:
    section.add "X-Amz-Security-Token", valid_595026
  var valid_595027 = header.getOrDefault("X-Amz-Algorithm")
  valid_595027 = validateParameter(valid_595027, JString, required = false,
                                 default = nil)
  if valid_595027 != nil:
    section.add "X-Amz-Algorithm", valid_595027
  var valid_595028 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595028 = validateParameter(valid_595028, JString, required = false,
                                 default = nil)
  if valid_595028 != nil:
    section.add "X-Amz-SignedHeaders", valid_595028
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595029: Call_GetGetTemplate_595014; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ## 
  let valid = call_595029.validator(path, query, header, formData, body)
  let scheme = call_595029.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595029.url(scheme.get, call_595029.host, call_595029.base,
                         call_595029.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595029, url, valid)

proc call*(call_595030: Call_GetGetTemplate_595014; StackName: string = "";
          TemplateStage: string = "Original"; Action: string = "GetTemplate";
          ChangeSetName: string = ""; Version: string = "2010-05-15"): Recallable =
  ## getGetTemplate
  ## <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
  ##   StackName: string
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   TemplateStage: string
  ##                : <p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p>
  ##   Action: string (required)
  ##   ChangeSetName: string
  ##                : The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
  ##   Version: string (required)
  var query_595031 = newJObject()
  add(query_595031, "StackName", newJString(StackName))
  add(query_595031, "TemplateStage", newJString(TemplateStage))
  add(query_595031, "Action", newJString(Action))
  add(query_595031, "ChangeSetName", newJString(ChangeSetName))
  add(query_595031, "Version", newJString(Version))
  result = call_595030.call(nil, query_595031, nil, nil, nil)

var getGetTemplate* = Call_GetGetTemplate_595014(name: "getGetTemplate",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=GetTemplate", validator: validate_GetGetTemplate_595015,
    base: "/", url: url_GetGetTemplate_595016, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostGetTemplateSummary_595070 = ref object of OpenApiRestCall_593389
proc url_PostGetTemplateSummary_595072(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostGetTemplateSummary_595071(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595073 = query.getOrDefault("Action")
  valid_595073 = validateParameter(valid_595073, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_595073 != nil:
    section.add "Action", valid_595073
  var valid_595074 = query.getOrDefault("Version")
  valid_595074 = validateParameter(valid_595074, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595074 != nil:
    section.add "Version", valid_595074
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595075 = header.getOrDefault("X-Amz-Signature")
  valid_595075 = validateParameter(valid_595075, JString, required = false,
                                 default = nil)
  if valid_595075 != nil:
    section.add "X-Amz-Signature", valid_595075
  var valid_595076 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595076 = validateParameter(valid_595076, JString, required = false,
                                 default = nil)
  if valid_595076 != nil:
    section.add "X-Amz-Content-Sha256", valid_595076
  var valid_595077 = header.getOrDefault("X-Amz-Date")
  valid_595077 = validateParameter(valid_595077, JString, required = false,
                                 default = nil)
  if valid_595077 != nil:
    section.add "X-Amz-Date", valid_595077
  var valid_595078 = header.getOrDefault("X-Amz-Credential")
  valid_595078 = validateParameter(valid_595078, JString, required = false,
                                 default = nil)
  if valid_595078 != nil:
    section.add "X-Amz-Credential", valid_595078
  var valid_595079 = header.getOrDefault("X-Amz-Security-Token")
  valid_595079 = validateParameter(valid_595079, JString, required = false,
                                 default = nil)
  if valid_595079 != nil:
    section.add "X-Amz-Security-Token", valid_595079
  var valid_595080 = header.getOrDefault("X-Amz-Algorithm")
  valid_595080 = validateParameter(valid_595080, JString, required = false,
                                 default = nil)
  if valid_595080 != nil:
    section.add "X-Amz-Algorithm", valid_595080
  var valid_595081 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595081 = validateParameter(valid_595081, JString, required = false,
                                 default = nil)
  if valid_595081 != nil:
    section.add "X-Amz-SignedHeaders", valid_595081
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  section = newJObject()
  var valid_595082 = formData.getOrDefault("StackName")
  valid_595082 = validateParameter(valid_595082, JString, required = false,
                                 default = nil)
  if valid_595082 != nil:
    section.add "StackName", valid_595082
  var valid_595083 = formData.getOrDefault("StackSetName")
  valid_595083 = validateParameter(valid_595083, JString, required = false,
                                 default = nil)
  if valid_595083 != nil:
    section.add "StackSetName", valid_595083
  var valid_595084 = formData.getOrDefault("TemplateURL")
  valid_595084 = validateParameter(valid_595084, JString, required = false,
                                 default = nil)
  if valid_595084 != nil:
    section.add "TemplateURL", valid_595084
  var valid_595085 = formData.getOrDefault("TemplateBody")
  valid_595085 = validateParameter(valid_595085, JString, required = false,
                                 default = nil)
  if valid_595085 != nil:
    section.add "TemplateBody", valid_595085
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595086: Call_PostGetTemplateSummary_595070; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_595086.validator(path, query, header, formData, body)
  let scheme = call_595086.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595086.url(scheme.get, call_595086.host, call_595086.base,
                         call_595086.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595086, url, valid)

proc call*(call_595087: Call_PostGetTemplateSummary_595070; StackName: string = "";
          StackSetName: string = ""; TemplateURL: string = "";
          TemplateBody: string = ""; Action: string = "GetTemplateSummary";
          Version: string = "2010-05-15"): Recallable =
  ## postGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595088 = newJObject()
  var formData_595089 = newJObject()
  add(formData_595089, "StackName", newJString(StackName))
  add(formData_595089, "StackSetName", newJString(StackSetName))
  add(formData_595089, "TemplateURL", newJString(TemplateURL))
  add(formData_595089, "TemplateBody", newJString(TemplateBody))
  add(query_595088, "Action", newJString(Action))
  add(query_595088, "Version", newJString(Version))
  result = call_595087.call(nil, query_595088, nil, formData_595089, nil)

var postGetTemplateSummary* = Call_PostGetTemplateSummary_595070(
    name: "postGetTemplateSummary", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_PostGetTemplateSummary_595071, base: "/",
    url: url_PostGetTemplateSummary_595072, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetGetTemplateSummary_595051 = ref object of OpenApiRestCall_593389
proc url_GetGetTemplateSummary_595053(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetGetTemplateSummary_595052(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: JString
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_595054 = query.getOrDefault("StackSetName")
  valid_595054 = validateParameter(valid_595054, JString, required = false,
                                 default = nil)
  if valid_595054 != nil:
    section.add "StackSetName", valid_595054
  var valid_595055 = query.getOrDefault("StackName")
  valid_595055 = validateParameter(valid_595055, JString, required = false,
                                 default = nil)
  if valid_595055 != nil:
    section.add "StackName", valid_595055
  var valid_595056 = query.getOrDefault("TemplateBody")
  valid_595056 = validateParameter(valid_595056, JString, required = false,
                                 default = nil)
  if valid_595056 != nil:
    section.add "TemplateBody", valid_595056
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595057 = query.getOrDefault("Action")
  valid_595057 = validateParameter(valid_595057, JString, required = true,
                                 default = newJString("GetTemplateSummary"))
  if valid_595057 != nil:
    section.add "Action", valid_595057
  var valid_595058 = query.getOrDefault("TemplateURL")
  valid_595058 = validateParameter(valid_595058, JString, required = false,
                                 default = nil)
  if valid_595058 != nil:
    section.add "TemplateURL", valid_595058
  var valid_595059 = query.getOrDefault("Version")
  valid_595059 = validateParameter(valid_595059, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595059 != nil:
    section.add "Version", valid_595059
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595060 = header.getOrDefault("X-Amz-Signature")
  valid_595060 = validateParameter(valid_595060, JString, required = false,
                                 default = nil)
  if valid_595060 != nil:
    section.add "X-Amz-Signature", valid_595060
  var valid_595061 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595061 = validateParameter(valid_595061, JString, required = false,
                                 default = nil)
  if valid_595061 != nil:
    section.add "X-Amz-Content-Sha256", valid_595061
  var valid_595062 = header.getOrDefault("X-Amz-Date")
  valid_595062 = validateParameter(valid_595062, JString, required = false,
                                 default = nil)
  if valid_595062 != nil:
    section.add "X-Amz-Date", valid_595062
  var valid_595063 = header.getOrDefault("X-Amz-Credential")
  valid_595063 = validateParameter(valid_595063, JString, required = false,
                                 default = nil)
  if valid_595063 != nil:
    section.add "X-Amz-Credential", valid_595063
  var valid_595064 = header.getOrDefault("X-Amz-Security-Token")
  valid_595064 = validateParameter(valid_595064, JString, required = false,
                                 default = nil)
  if valid_595064 != nil:
    section.add "X-Amz-Security-Token", valid_595064
  var valid_595065 = header.getOrDefault("X-Amz-Algorithm")
  valid_595065 = validateParameter(valid_595065, JString, required = false,
                                 default = nil)
  if valid_595065 != nil:
    section.add "X-Amz-Algorithm", valid_595065
  var valid_595066 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595066 = validateParameter(valid_595066, JString, required = false,
                                 default = nil)
  if valid_595066 != nil:
    section.add "X-Amz-SignedHeaders", valid_595066
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595067: Call_GetGetTemplateSummary_595051; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ## 
  let valid = call_595067.validator(path, query, header, formData, body)
  let scheme = call_595067.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595067.url(scheme.get, call_595067.host, call_595067.base,
                         call_595067.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595067, url, valid)

proc call*(call_595068: Call_GetGetTemplateSummary_595051;
          StackSetName: string = ""; StackName: string = ""; TemplateBody: string = "";
          Action: string = "GetTemplateSummary"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getGetTemplateSummary
  ## <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
  ##   StackSetName: string
  ##               : <p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   StackName: string
  ##            : <p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
  ##   Version: string (required)
  var query_595069 = newJObject()
  add(query_595069, "StackSetName", newJString(StackSetName))
  add(query_595069, "StackName", newJString(StackName))
  add(query_595069, "TemplateBody", newJString(TemplateBody))
  add(query_595069, "Action", newJString(Action))
  add(query_595069, "TemplateURL", newJString(TemplateURL))
  add(query_595069, "Version", newJString(Version))
  result = call_595068.call(nil, query_595069, nil, nil, nil)

var getGetTemplateSummary* = Call_GetGetTemplateSummary_595051(
    name: "getGetTemplateSummary", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=GetTemplateSummary",
    validator: validate_GetGetTemplateSummary_595052, base: "/",
    url: url_GetGetTemplateSummary_595053, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListChangeSets_595107 = ref object of OpenApiRestCall_593389
proc url_PostListChangeSets_595109(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListChangeSets_595108(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595110 = query.getOrDefault("Action")
  valid_595110 = validateParameter(valid_595110, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_595110 != nil:
    section.add "Action", valid_595110
  var valid_595111 = query.getOrDefault("Version")
  valid_595111 = validateParameter(valid_595111, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595111 != nil:
    section.add "Version", valid_595111
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595112 = header.getOrDefault("X-Amz-Signature")
  valid_595112 = validateParameter(valid_595112, JString, required = false,
                                 default = nil)
  if valid_595112 != nil:
    section.add "X-Amz-Signature", valid_595112
  var valid_595113 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595113 = validateParameter(valid_595113, JString, required = false,
                                 default = nil)
  if valid_595113 != nil:
    section.add "X-Amz-Content-Sha256", valid_595113
  var valid_595114 = header.getOrDefault("X-Amz-Date")
  valid_595114 = validateParameter(valid_595114, JString, required = false,
                                 default = nil)
  if valid_595114 != nil:
    section.add "X-Amz-Date", valid_595114
  var valid_595115 = header.getOrDefault("X-Amz-Credential")
  valid_595115 = validateParameter(valid_595115, JString, required = false,
                                 default = nil)
  if valid_595115 != nil:
    section.add "X-Amz-Credential", valid_595115
  var valid_595116 = header.getOrDefault("X-Amz-Security-Token")
  valid_595116 = validateParameter(valid_595116, JString, required = false,
                                 default = nil)
  if valid_595116 != nil:
    section.add "X-Amz-Security-Token", valid_595116
  var valid_595117 = header.getOrDefault("X-Amz-Algorithm")
  valid_595117 = validateParameter(valid_595117, JString, required = false,
                                 default = nil)
  if valid_595117 != nil:
    section.add "X-Amz-Algorithm", valid_595117
  var valid_595118 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595118 = validateParameter(valid_595118, JString, required = false,
                                 default = nil)
  if valid_595118 != nil:
    section.add "X-Amz-SignedHeaders", valid_595118
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_595119 = formData.getOrDefault("StackName")
  valid_595119 = validateParameter(valid_595119, JString, required = true,
                                 default = nil)
  if valid_595119 != nil:
    section.add "StackName", valid_595119
  var valid_595120 = formData.getOrDefault("NextToken")
  valid_595120 = validateParameter(valid_595120, JString, required = false,
                                 default = nil)
  if valid_595120 != nil:
    section.add "NextToken", valid_595120
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595121: Call_PostListChangeSets_595107; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_595121.validator(path, query, header, formData, body)
  let scheme = call_595121.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595121.url(scheme.get, call_595121.host, call_595121.base,
                         call_595121.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595121, url, valid)

proc call*(call_595122: Call_PostListChangeSets_595107; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## postListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595123 = newJObject()
  var formData_595124 = newJObject()
  add(formData_595124, "StackName", newJString(StackName))
  add(formData_595124, "NextToken", newJString(NextToken))
  add(query_595123, "Action", newJString(Action))
  add(query_595123, "Version", newJString(Version))
  result = call_595122.call(nil, query_595123, nil, formData_595124, nil)

var postListChangeSets* = Call_PostListChangeSets_595107(
    name: "postListChangeSets", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListChangeSets",
    validator: validate_PostListChangeSets_595108, base: "/",
    url: url_PostListChangeSets_595109, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListChangeSets_595090 = ref object of OpenApiRestCall_593389
proc url_GetListChangeSets_595092(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListChangeSets_595091(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: JString (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_595093 = query.getOrDefault("NextToken")
  valid_595093 = validateParameter(valid_595093, JString, required = false,
                                 default = nil)
  if valid_595093 != nil:
    section.add "NextToken", valid_595093
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_595094 = query.getOrDefault("StackName")
  valid_595094 = validateParameter(valid_595094, JString, required = true,
                                 default = nil)
  if valid_595094 != nil:
    section.add "StackName", valid_595094
  var valid_595095 = query.getOrDefault("Action")
  valid_595095 = validateParameter(valid_595095, JString, required = true,
                                 default = newJString("ListChangeSets"))
  if valid_595095 != nil:
    section.add "Action", valid_595095
  var valid_595096 = query.getOrDefault("Version")
  valid_595096 = validateParameter(valid_595096, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595096 != nil:
    section.add "Version", valid_595096
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595097 = header.getOrDefault("X-Amz-Signature")
  valid_595097 = validateParameter(valid_595097, JString, required = false,
                                 default = nil)
  if valid_595097 != nil:
    section.add "X-Amz-Signature", valid_595097
  var valid_595098 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595098 = validateParameter(valid_595098, JString, required = false,
                                 default = nil)
  if valid_595098 != nil:
    section.add "X-Amz-Content-Sha256", valid_595098
  var valid_595099 = header.getOrDefault("X-Amz-Date")
  valid_595099 = validateParameter(valid_595099, JString, required = false,
                                 default = nil)
  if valid_595099 != nil:
    section.add "X-Amz-Date", valid_595099
  var valid_595100 = header.getOrDefault("X-Amz-Credential")
  valid_595100 = validateParameter(valid_595100, JString, required = false,
                                 default = nil)
  if valid_595100 != nil:
    section.add "X-Amz-Credential", valid_595100
  var valid_595101 = header.getOrDefault("X-Amz-Security-Token")
  valid_595101 = validateParameter(valid_595101, JString, required = false,
                                 default = nil)
  if valid_595101 != nil:
    section.add "X-Amz-Security-Token", valid_595101
  var valid_595102 = header.getOrDefault("X-Amz-Algorithm")
  valid_595102 = validateParameter(valid_595102, JString, required = false,
                                 default = nil)
  if valid_595102 != nil:
    section.add "X-Amz-Algorithm", valid_595102
  var valid_595103 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595103 = validateParameter(valid_595103, JString, required = false,
                                 default = nil)
  if valid_595103 != nil:
    section.add "X-Amz-SignedHeaders", valid_595103
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595104: Call_GetListChangeSets_595090; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ## 
  let valid = call_595104.validator(path, query, header, formData, body)
  let scheme = call_595104.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595104.url(scheme.get, call_595104.host, call_595104.base,
                         call_595104.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595104, url, valid)

proc call*(call_595105: Call_GetListChangeSets_595090; StackName: string;
          NextToken: string = ""; Action: string = "ListChangeSets";
          Version: string = "2010-05-15"): Recallable =
  ## getListChangeSets
  ## Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
  ##   NextToken: string
  ##            : A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
  ##   StackName: string (required)
  ##            : The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595106 = newJObject()
  add(query_595106, "NextToken", newJString(NextToken))
  add(query_595106, "StackName", newJString(StackName))
  add(query_595106, "Action", newJString(Action))
  add(query_595106, "Version", newJString(Version))
  result = call_595105.call(nil, query_595106, nil, nil, nil)

var getListChangeSets* = Call_GetListChangeSets_595090(name: "getListChangeSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListChangeSets", validator: validate_GetListChangeSets_595091,
    base: "/", url: url_GetListChangeSets_595092,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListExports_595141 = ref object of OpenApiRestCall_593389
proc url_PostListExports_595143(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListExports_595142(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595144 = query.getOrDefault("Action")
  valid_595144 = validateParameter(valid_595144, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_595144 != nil:
    section.add "Action", valid_595144
  var valid_595145 = query.getOrDefault("Version")
  valid_595145 = validateParameter(valid_595145, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595145 != nil:
    section.add "Version", valid_595145
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595146 = header.getOrDefault("X-Amz-Signature")
  valid_595146 = validateParameter(valid_595146, JString, required = false,
                                 default = nil)
  if valid_595146 != nil:
    section.add "X-Amz-Signature", valid_595146
  var valid_595147 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595147 = validateParameter(valid_595147, JString, required = false,
                                 default = nil)
  if valid_595147 != nil:
    section.add "X-Amz-Content-Sha256", valid_595147
  var valid_595148 = header.getOrDefault("X-Amz-Date")
  valid_595148 = validateParameter(valid_595148, JString, required = false,
                                 default = nil)
  if valid_595148 != nil:
    section.add "X-Amz-Date", valid_595148
  var valid_595149 = header.getOrDefault("X-Amz-Credential")
  valid_595149 = validateParameter(valid_595149, JString, required = false,
                                 default = nil)
  if valid_595149 != nil:
    section.add "X-Amz-Credential", valid_595149
  var valid_595150 = header.getOrDefault("X-Amz-Security-Token")
  valid_595150 = validateParameter(valid_595150, JString, required = false,
                                 default = nil)
  if valid_595150 != nil:
    section.add "X-Amz-Security-Token", valid_595150
  var valid_595151 = header.getOrDefault("X-Amz-Algorithm")
  valid_595151 = validateParameter(valid_595151, JString, required = false,
                                 default = nil)
  if valid_595151 != nil:
    section.add "X-Amz-Algorithm", valid_595151
  var valid_595152 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595152 = validateParameter(valid_595152, JString, required = false,
                                 default = nil)
  if valid_595152 != nil:
    section.add "X-Amz-SignedHeaders", valid_595152
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  section = newJObject()
  var valid_595153 = formData.getOrDefault("NextToken")
  valid_595153 = validateParameter(valid_595153, JString, required = false,
                                 default = nil)
  if valid_595153 != nil:
    section.add "NextToken", valid_595153
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595154: Call_PostListExports_595141; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_595154.validator(path, query, header, formData, body)
  let scheme = call_595154.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595154.url(scheme.get, call_595154.host, call_595154.base,
                         call_595154.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595154, url, valid)

proc call*(call_595155: Call_PostListExports_595141; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## postListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595156 = newJObject()
  var formData_595157 = newJObject()
  add(formData_595157, "NextToken", newJString(NextToken))
  add(query_595156, "Action", newJString(Action))
  add(query_595156, "Version", newJString(Version))
  result = call_595155.call(nil, query_595156, nil, formData_595157, nil)

var postListExports* = Call_PostListExports_595141(name: "postListExports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_PostListExports_595142,
    base: "/", url: url_PostListExports_595143, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListExports_595125 = ref object of OpenApiRestCall_593389
proc url_GetListExports_595127(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListExports_595126(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_595128 = query.getOrDefault("NextToken")
  valid_595128 = validateParameter(valid_595128, JString, required = false,
                                 default = nil)
  if valid_595128 != nil:
    section.add "NextToken", valid_595128
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595129 = query.getOrDefault("Action")
  valid_595129 = validateParameter(valid_595129, JString, required = true,
                                 default = newJString("ListExports"))
  if valid_595129 != nil:
    section.add "Action", valid_595129
  var valid_595130 = query.getOrDefault("Version")
  valid_595130 = validateParameter(valid_595130, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595130 != nil:
    section.add "Version", valid_595130
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595131 = header.getOrDefault("X-Amz-Signature")
  valid_595131 = validateParameter(valid_595131, JString, required = false,
                                 default = nil)
  if valid_595131 != nil:
    section.add "X-Amz-Signature", valid_595131
  var valid_595132 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595132 = validateParameter(valid_595132, JString, required = false,
                                 default = nil)
  if valid_595132 != nil:
    section.add "X-Amz-Content-Sha256", valid_595132
  var valid_595133 = header.getOrDefault("X-Amz-Date")
  valid_595133 = validateParameter(valid_595133, JString, required = false,
                                 default = nil)
  if valid_595133 != nil:
    section.add "X-Amz-Date", valid_595133
  var valid_595134 = header.getOrDefault("X-Amz-Credential")
  valid_595134 = validateParameter(valid_595134, JString, required = false,
                                 default = nil)
  if valid_595134 != nil:
    section.add "X-Amz-Credential", valid_595134
  var valid_595135 = header.getOrDefault("X-Amz-Security-Token")
  valid_595135 = validateParameter(valid_595135, JString, required = false,
                                 default = nil)
  if valid_595135 != nil:
    section.add "X-Amz-Security-Token", valid_595135
  var valid_595136 = header.getOrDefault("X-Amz-Algorithm")
  valid_595136 = validateParameter(valid_595136, JString, required = false,
                                 default = nil)
  if valid_595136 != nil:
    section.add "X-Amz-Algorithm", valid_595136
  var valid_595137 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595137 = validateParameter(valid_595137, JString, required = false,
                                 default = nil)
  if valid_595137 != nil:
    section.add "X-Amz-SignedHeaders", valid_595137
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595138: Call_GetListExports_595125; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ## 
  let valid = call_595138.validator(path, query, header, formData, body)
  let scheme = call_595138.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595138.url(scheme.get, call_595138.host, call_595138.base,
                         call_595138.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595138, url, valid)

proc call*(call_595139: Call_GetListExports_595125; NextToken: string = "";
          Action: string = "ListExports"; Version: string = "2010-05-15"): Recallable =
  ## getListExports
  ## <p>Lists all exported output values in the account and region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595140 = newJObject()
  add(query_595140, "NextToken", newJString(NextToken))
  add(query_595140, "Action", newJString(Action))
  add(query_595140, "Version", newJString(Version))
  result = call_595139.call(nil, query_595140, nil, nil, nil)

var getListExports* = Call_GetListExports_595125(name: "getListExports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListExports", validator: validate_GetListExports_595126,
    base: "/", url: url_GetListExports_595127, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListImports_595175 = ref object of OpenApiRestCall_593389
proc url_PostListImports_595177(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListImports_595176(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595178 = query.getOrDefault("Action")
  valid_595178 = validateParameter(valid_595178, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_595178 != nil:
    section.add "Action", valid_595178
  var valid_595179 = query.getOrDefault("Version")
  valid_595179 = validateParameter(valid_595179, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595179 != nil:
    section.add "Version", valid_595179
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595180 = header.getOrDefault("X-Amz-Signature")
  valid_595180 = validateParameter(valid_595180, JString, required = false,
                                 default = nil)
  if valid_595180 != nil:
    section.add "X-Amz-Signature", valid_595180
  var valid_595181 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595181 = validateParameter(valid_595181, JString, required = false,
                                 default = nil)
  if valid_595181 != nil:
    section.add "X-Amz-Content-Sha256", valid_595181
  var valid_595182 = header.getOrDefault("X-Amz-Date")
  valid_595182 = validateParameter(valid_595182, JString, required = false,
                                 default = nil)
  if valid_595182 != nil:
    section.add "X-Amz-Date", valid_595182
  var valid_595183 = header.getOrDefault("X-Amz-Credential")
  valid_595183 = validateParameter(valid_595183, JString, required = false,
                                 default = nil)
  if valid_595183 != nil:
    section.add "X-Amz-Credential", valid_595183
  var valid_595184 = header.getOrDefault("X-Amz-Security-Token")
  valid_595184 = validateParameter(valid_595184, JString, required = false,
                                 default = nil)
  if valid_595184 != nil:
    section.add "X-Amz-Security-Token", valid_595184
  var valid_595185 = header.getOrDefault("X-Amz-Algorithm")
  valid_595185 = validateParameter(valid_595185, JString, required = false,
                                 default = nil)
  if valid_595185 != nil:
    section.add "X-Amz-Algorithm", valid_595185
  var valid_595186 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595186 = validateParameter(valid_595186, JString, required = false,
                                 default = nil)
  if valid_595186 != nil:
    section.add "X-Amz-SignedHeaders", valid_595186
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  section = newJObject()
  var valid_595187 = formData.getOrDefault("NextToken")
  valid_595187 = validateParameter(valid_595187, JString, required = false,
                                 default = nil)
  if valid_595187 != nil:
    section.add "NextToken", valid_595187
  assert formData != nil,
        "formData argument is necessary due to required `ExportName` field"
  var valid_595188 = formData.getOrDefault("ExportName")
  valid_595188 = validateParameter(valid_595188, JString, required = true,
                                 default = nil)
  if valid_595188 != nil:
    section.add "ExportName", valid_595188
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595189: Call_PostListImports_595175; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_595189.validator(path, query, header, formData, body)
  let scheme = call_595189.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595189.url(scheme.get, call_595189.host, call_595189.base,
                         call_595189.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595189, url, valid)

proc call*(call_595190: Call_PostListImports_595175; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## postListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   Action: string (required)
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Version: string (required)
  var query_595191 = newJObject()
  var formData_595192 = newJObject()
  add(formData_595192, "NextToken", newJString(NextToken))
  add(query_595191, "Action", newJString(Action))
  add(formData_595192, "ExportName", newJString(ExportName))
  add(query_595191, "Version", newJString(Version))
  result = call_595190.call(nil, query_595191, nil, formData_595192, nil)

var postListImports* = Call_PostListImports_595175(name: "postListImports",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_PostListImports_595176,
    base: "/", url: url_PostListImports_595177, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListImports_595158 = ref object of OpenApiRestCall_593389
proc url_GetListImports_595160(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListImports_595159(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: JString (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_595161 = query.getOrDefault("NextToken")
  valid_595161 = validateParameter(valid_595161, JString, required = false,
                                 default = nil)
  if valid_595161 != nil:
    section.add "NextToken", valid_595161
  assert query != nil,
        "query argument is necessary due to required `ExportName` field"
  var valid_595162 = query.getOrDefault("ExportName")
  valid_595162 = validateParameter(valid_595162, JString, required = true,
                                 default = nil)
  if valid_595162 != nil:
    section.add "ExportName", valid_595162
  var valid_595163 = query.getOrDefault("Action")
  valid_595163 = validateParameter(valid_595163, JString, required = true,
                                 default = newJString("ListImports"))
  if valid_595163 != nil:
    section.add "Action", valid_595163
  var valid_595164 = query.getOrDefault("Version")
  valid_595164 = validateParameter(valid_595164, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595164 != nil:
    section.add "Version", valid_595164
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595165 = header.getOrDefault("X-Amz-Signature")
  valid_595165 = validateParameter(valid_595165, JString, required = false,
                                 default = nil)
  if valid_595165 != nil:
    section.add "X-Amz-Signature", valid_595165
  var valid_595166 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595166 = validateParameter(valid_595166, JString, required = false,
                                 default = nil)
  if valid_595166 != nil:
    section.add "X-Amz-Content-Sha256", valid_595166
  var valid_595167 = header.getOrDefault("X-Amz-Date")
  valid_595167 = validateParameter(valid_595167, JString, required = false,
                                 default = nil)
  if valid_595167 != nil:
    section.add "X-Amz-Date", valid_595167
  var valid_595168 = header.getOrDefault("X-Amz-Credential")
  valid_595168 = validateParameter(valid_595168, JString, required = false,
                                 default = nil)
  if valid_595168 != nil:
    section.add "X-Amz-Credential", valid_595168
  var valid_595169 = header.getOrDefault("X-Amz-Security-Token")
  valid_595169 = validateParameter(valid_595169, JString, required = false,
                                 default = nil)
  if valid_595169 != nil:
    section.add "X-Amz-Security-Token", valid_595169
  var valid_595170 = header.getOrDefault("X-Amz-Algorithm")
  valid_595170 = validateParameter(valid_595170, JString, required = false,
                                 default = nil)
  if valid_595170 != nil:
    section.add "X-Amz-Algorithm", valid_595170
  var valid_595171 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595171 = validateParameter(valid_595171, JString, required = false,
                                 default = nil)
  if valid_595171 != nil:
    section.add "X-Amz-SignedHeaders", valid_595171
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595172: Call_GetListImports_595158; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ## 
  let valid = call_595172.validator(path, query, header, formData, body)
  let scheme = call_595172.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595172.url(scheme.get, call_595172.host, call_595172.base,
                         call_595172.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595172, url, valid)

proc call*(call_595173: Call_GetListImports_595158; ExportName: string;
          NextToken: string = ""; Action: string = "ListImports";
          Version: string = "2010-05-15"): Recallable =
  ## getListImports
  ## <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
  ##   NextToken: string
  ##            : A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. 
  ##   ExportName: string (required)
  ##             : The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. 
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595174 = newJObject()
  add(query_595174, "NextToken", newJString(NextToken))
  add(query_595174, "ExportName", newJString(ExportName))
  add(query_595174, "Action", newJString(Action))
  add(query_595174, "Version", newJString(Version))
  result = call_595173.call(nil, query_595174, nil, nil, nil)

var getListImports* = Call_GetListImports_595158(name: "getListImports",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListImports", validator: validate_GetListImports_595159,
    base: "/", url: url_GetListImports_595160, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackInstances_595213 = ref object of OpenApiRestCall_593389
proc url_PostListStackInstances_595215(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackInstances_595214(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595216 = query.getOrDefault("Action")
  valid_595216 = validateParameter(valid_595216, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_595216 != nil:
    section.add "Action", valid_595216
  var valid_595217 = query.getOrDefault("Version")
  valid_595217 = validateParameter(valid_595217, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595217 != nil:
    section.add "Version", valid_595217
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595218 = header.getOrDefault("X-Amz-Signature")
  valid_595218 = validateParameter(valid_595218, JString, required = false,
                                 default = nil)
  if valid_595218 != nil:
    section.add "X-Amz-Signature", valid_595218
  var valid_595219 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595219 = validateParameter(valid_595219, JString, required = false,
                                 default = nil)
  if valid_595219 != nil:
    section.add "X-Amz-Content-Sha256", valid_595219
  var valid_595220 = header.getOrDefault("X-Amz-Date")
  valid_595220 = validateParameter(valid_595220, JString, required = false,
                                 default = nil)
  if valid_595220 != nil:
    section.add "X-Amz-Date", valid_595220
  var valid_595221 = header.getOrDefault("X-Amz-Credential")
  valid_595221 = validateParameter(valid_595221, JString, required = false,
                                 default = nil)
  if valid_595221 != nil:
    section.add "X-Amz-Credential", valid_595221
  var valid_595222 = header.getOrDefault("X-Amz-Security-Token")
  valid_595222 = validateParameter(valid_595222, JString, required = false,
                                 default = nil)
  if valid_595222 != nil:
    section.add "X-Amz-Security-Token", valid_595222
  var valid_595223 = header.getOrDefault("X-Amz-Algorithm")
  valid_595223 = validateParameter(valid_595223, JString, required = false,
                                 default = nil)
  if valid_595223 != nil:
    section.add "X-Amz-Algorithm", valid_595223
  var valid_595224 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595224 = validateParameter(valid_595224, JString, required = false,
                                 default = nil)
  if valid_595224 != nil:
    section.add "X-Amz-SignedHeaders", valid_595224
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_595225 = formData.getOrDefault("StackInstanceRegion")
  valid_595225 = validateParameter(valid_595225, JString, required = false,
                                 default = nil)
  if valid_595225 != nil:
    section.add "StackInstanceRegion", valid_595225
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_595226 = formData.getOrDefault("StackSetName")
  valid_595226 = validateParameter(valid_595226, JString, required = true,
                                 default = nil)
  if valid_595226 != nil:
    section.add "StackSetName", valid_595226
  var valid_595227 = formData.getOrDefault("StackInstanceAccount")
  valid_595227 = validateParameter(valid_595227, JString, required = false,
                                 default = nil)
  if valid_595227 != nil:
    section.add "StackInstanceAccount", valid_595227
  var valid_595228 = formData.getOrDefault("NextToken")
  valid_595228 = validateParameter(valid_595228, JString, required = false,
                                 default = nil)
  if valid_595228 != nil:
    section.add "NextToken", valid_595228
  var valid_595229 = formData.getOrDefault("MaxResults")
  valid_595229 = validateParameter(valid_595229, JInt, required = false, default = nil)
  if valid_595229 != nil:
    section.add "MaxResults", valid_595229
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595230: Call_PostListStackInstances_595213; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_595230.validator(path, query, header, formData, body)
  let scheme = call_595230.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595230.url(scheme.get, call_595230.host, call_595230.base,
                         call_595230.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595230, url, valid)

proc call*(call_595231: Call_PostListStackInstances_595213; StackSetName: string;
          StackInstanceRegion: string = ""; StackInstanceAccount: string = "";
          NextToken: string = ""; Action: string = "ListStackInstances";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_595232 = newJObject()
  var formData_595233 = newJObject()
  add(formData_595233, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(formData_595233, "StackSetName", newJString(StackSetName))
  add(formData_595233, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(formData_595233, "NextToken", newJString(NextToken))
  add(query_595232, "Action", newJString(Action))
  add(query_595232, "Version", newJString(Version))
  add(formData_595233, "MaxResults", newJInt(MaxResults))
  result = call_595231.call(nil, query_595232, nil, formData_595233, nil)

var postListStackInstances* = Call_PostListStackInstances_595213(
    name: "postListStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_PostListStackInstances_595214, base: "/",
    url: url_PostListStackInstances_595215, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackInstances_595193 = ref object of OpenApiRestCall_593389
proc url_GetListStackInstances_595195(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackInstances_595194(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackInstanceRegion: JString
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: JString
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_595196 = query.getOrDefault("StackSetName")
  valid_595196 = validateParameter(valid_595196, JString, required = true,
                                 default = nil)
  if valid_595196 != nil:
    section.add "StackSetName", valid_595196
  var valid_595197 = query.getOrDefault("MaxResults")
  valid_595197 = validateParameter(valid_595197, JInt, required = false, default = nil)
  if valid_595197 != nil:
    section.add "MaxResults", valid_595197
  var valid_595198 = query.getOrDefault("StackInstanceRegion")
  valid_595198 = validateParameter(valid_595198, JString, required = false,
                                 default = nil)
  if valid_595198 != nil:
    section.add "StackInstanceRegion", valid_595198
  var valid_595199 = query.getOrDefault("StackInstanceAccount")
  valid_595199 = validateParameter(valid_595199, JString, required = false,
                                 default = nil)
  if valid_595199 != nil:
    section.add "StackInstanceAccount", valid_595199
  var valid_595200 = query.getOrDefault("NextToken")
  valid_595200 = validateParameter(valid_595200, JString, required = false,
                                 default = nil)
  if valid_595200 != nil:
    section.add "NextToken", valid_595200
  var valid_595201 = query.getOrDefault("Action")
  valid_595201 = validateParameter(valid_595201, JString, required = true,
                                 default = newJString("ListStackInstances"))
  if valid_595201 != nil:
    section.add "Action", valid_595201
  var valid_595202 = query.getOrDefault("Version")
  valid_595202 = validateParameter(valid_595202, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595202 != nil:
    section.add "Version", valid_595202
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595203 = header.getOrDefault("X-Amz-Signature")
  valid_595203 = validateParameter(valid_595203, JString, required = false,
                                 default = nil)
  if valid_595203 != nil:
    section.add "X-Amz-Signature", valid_595203
  var valid_595204 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595204 = validateParameter(valid_595204, JString, required = false,
                                 default = nil)
  if valid_595204 != nil:
    section.add "X-Amz-Content-Sha256", valid_595204
  var valid_595205 = header.getOrDefault("X-Amz-Date")
  valid_595205 = validateParameter(valid_595205, JString, required = false,
                                 default = nil)
  if valid_595205 != nil:
    section.add "X-Amz-Date", valid_595205
  var valid_595206 = header.getOrDefault("X-Amz-Credential")
  valid_595206 = validateParameter(valid_595206, JString, required = false,
                                 default = nil)
  if valid_595206 != nil:
    section.add "X-Amz-Credential", valid_595206
  var valid_595207 = header.getOrDefault("X-Amz-Security-Token")
  valid_595207 = validateParameter(valid_595207, JString, required = false,
                                 default = nil)
  if valid_595207 != nil:
    section.add "X-Amz-Security-Token", valid_595207
  var valid_595208 = header.getOrDefault("X-Amz-Algorithm")
  valid_595208 = validateParameter(valid_595208, JString, required = false,
                                 default = nil)
  if valid_595208 != nil:
    section.add "X-Amz-Algorithm", valid_595208
  var valid_595209 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595209 = validateParameter(valid_595209, JString, required = false,
                                 default = nil)
  if valid_595209 != nil:
    section.add "X-Amz-SignedHeaders", valid_595209
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595210: Call_GetListStackInstances_595193; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ## 
  let valid = call_595210.validator(path, query, header, formData, body)
  let scheme = call_595210.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595210.url(scheme.get, call_595210.host, call_595210.base,
                         call_595210.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595210, url, valid)

proc call*(call_595211: Call_GetListStackInstances_595193; StackSetName: string;
          MaxResults: int = 0; StackInstanceRegion: string = "";
          StackInstanceAccount: string = ""; NextToken: string = "";
          Action: string = "ListStackInstances"; Version: string = "2010-05-15"): Recallable =
  ## getListStackInstances
  ## Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or region.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to list stack instances for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   StackInstanceRegion: string
  ##                      : The name of the region where you want to list stack instances. 
  ##   StackInstanceAccount: string
  ##                       : The name of the AWS account that you want to list stack instances for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595212 = newJObject()
  add(query_595212, "StackSetName", newJString(StackSetName))
  add(query_595212, "MaxResults", newJInt(MaxResults))
  add(query_595212, "StackInstanceRegion", newJString(StackInstanceRegion))
  add(query_595212, "StackInstanceAccount", newJString(StackInstanceAccount))
  add(query_595212, "NextToken", newJString(NextToken))
  add(query_595212, "Action", newJString(Action))
  add(query_595212, "Version", newJString(Version))
  result = call_595211.call(nil, query_595212, nil, nil, nil)

var getListStackInstances* = Call_GetListStackInstances_595193(
    name: "getListStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackInstances",
    validator: validate_GetListStackInstances_595194, base: "/",
    url: url_GetListStackInstances_595195, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackResources_595251 = ref object of OpenApiRestCall_593389
proc url_PostListStackResources_595253(protocol: Scheme; host: string; base: string;
                                      route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackResources_595252(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595254 = query.getOrDefault("Action")
  valid_595254 = validateParameter(valid_595254, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_595254 != nil:
    section.add "Action", valid_595254
  var valid_595255 = query.getOrDefault("Version")
  valid_595255 = validateParameter(valid_595255, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595255 != nil:
    section.add "Version", valid_595255
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595256 = header.getOrDefault("X-Amz-Signature")
  valid_595256 = validateParameter(valid_595256, JString, required = false,
                                 default = nil)
  if valid_595256 != nil:
    section.add "X-Amz-Signature", valid_595256
  var valid_595257 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595257 = validateParameter(valid_595257, JString, required = false,
                                 default = nil)
  if valid_595257 != nil:
    section.add "X-Amz-Content-Sha256", valid_595257
  var valid_595258 = header.getOrDefault("X-Amz-Date")
  valid_595258 = validateParameter(valid_595258, JString, required = false,
                                 default = nil)
  if valid_595258 != nil:
    section.add "X-Amz-Date", valid_595258
  var valid_595259 = header.getOrDefault("X-Amz-Credential")
  valid_595259 = validateParameter(valid_595259, JString, required = false,
                                 default = nil)
  if valid_595259 != nil:
    section.add "X-Amz-Credential", valid_595259
  var valid_595260 = header.getOrDefault("X-Amz-Security-Token")
  valid_595260 = validateParameter(valid_595260, JString, required = false,
                                 default = nil)
  if valid_595260 != nil:
    section.add "X-Amz-Security-Token", valid_595260
  var valid_595261 = header.getOrDefault("X-Amz-Algorithm")
  valid_595261 = validateParameter(valid_595261, JString, required = false,
                                 default = nil)
  if valid_595261 != nil:
    section.add "X-Amz-Algorithm", valid_595261
  var valid_595262 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595262 = validateParameter(valid_595262, JString, required = false,
                                 default = nil)
  if valid_595262 != nil:
    section.add "X-Amz-SignedHeaders", valid_595262
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_595263 = formData.getOrDefault("StackName")
  valid_595263 = validateParameter(valid_595263, JString, required = true,
                                 default = nil)
  if valid_595263 != nil:
    section.add "StackName", valid_595263
  var valid_595264 = formData.getOrDefault("NextToken")
  valid_595264 = validateParameter(valid_595264, JString, required = false,
                                 default = nil)
  if valid_595264 != nil:
    section.add "NextToken", valid_595264
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595265: Call_PostListStackResources_595251; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_595265.validator(path, query, header, formData, body)
  let scheme = call_595265.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595265.url(scheme.get, call_595265.host, call_595265.base,
                         call_595265.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595265, url, valid)

proc call*(call_595266: Call_PostListStackResources_595251; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## postListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595267 = newJObject()
  var formData_595268 = newJObject()
  add(formData_595268, "StackName", newJString(StackName))
  add(formData_595268, "NextToken", newJString(NextToken))
  add(query_595267, "Action", newJString(Action))
  add(query_595267, "Version", newJString(Version))
  result = call_595266.call(nil, query_595267, nil, formData_595268, nil)

var postListStackResources* = Call_PostListStackResources_595251(
    name: "postListStackResources", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_PostListStackResources_595252, base: "/",
    url: url_PostListStackResources_595253, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackResources_595234 = ref object of OpenApiRestCall_593389
proc url_GetListStackResources_595236(protocol: Scheme; host: string; base: string;
                                     route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackResources_595235(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: JString (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_595237 = query.getOrDefault("NextToken")
  valid_595237 = validateParameter(valid_595237, JString, required = false,
                                 default = nil)
  if valid_595237 != nil:
    section.add "NextToken", valid_595237
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_595238 = query.getOrDefault("StackName")
  valid_595238 = validateParameter(valid_595238, JString, required = true,
                                 default = nil)
  if valid_595238 != nil:
    section.add "StackName", valid_595238
  var valid_595239 = query.getOrDefault("Action")
  valid_595239 = validateParameter(valid_595239, JString, required = true,
                                 default = newJString("ListStackResources"))
  if valid_595239 != nil:
    section.add "Action", valid_595239
  var valid_595240 = query.getOrDefault("Version")
  valid_595240 = validateParameter(valid_595240, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595240 != nil:
    section.add "Version", valid_595240
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595241 = header.getOrDefault("X-Amz-Signature")
  valid_595241 = validateParameter(valid_595241, JString, required = false,
                                 default = nil)
  if valid_595241 != nil:
    section.add "X-Amz-Signature", valid_595241
  var valid_595242 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595242 = validateParameter(valid_595242, JString, required = false,
                                 default = nil)
  if valid_595242 != nil:
    section.add "X-Amz-Content-Sha256", valid_595242
  var valid_595243 = header.getOrDefault("X-Amz-Date")
  valid_595243 = validateParameter(valid_595243, JString, required = false,
                                 default = nil)
  if valid_595243 != nil:
    section.add "X-Amz-Date", valid_595243
  var valid_595244 = header.getOrDefault("X-Amz-Credential")
  valid_595244 = validateParameter(valid_595244, JString, required = false,
                                 default = nil)
  if valid_595244 != nil:
    section.add "X-Amz-Credential", valid_595244
  var valid_595245 = header.getOrDefault("X-Amz-Security-Token")
  valid_595245 = validateParameter(valid_595245, JString, required = false,
                                 default = nil)
  if valid_595245 != nil:
    section.add "X-Amz-Security-Token", valid_595245
  var valid_595246 = header.getOrDefault("X-Amz-Algorithm")
  valid_595246 = validateParameter(valid_595246, JString, required = false,
                                 default = nil)
  if valid_595246 != nil:
    section.add "X-Amz-Algorithm", valid_595246
  var valid_595247 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595247 = validateParameter(valid_595247, JString, required = false,
                                 default = nil)
  if valid_595247 != nil:
    section.add "X-Amz-SignedHeaders", valid_595247
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595248: Call_GetListStackResources_595234; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ## 
  let valid = call_595248.validator(path, query, header, formData, body)
  let scheme = call_595248.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595248.url(scheme.get, call_595248.host, call_595248.base,
                         call_595248.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595248, url, valid)

proc call*(call_595249: Call_GetListStackResources_595234; StackName: string;
          NextToken: string = ""; Action: string = "ListStackResources";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackResources
  ## <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
  ##   NextToken: string
  ##            : A string that identifies the next page of stack resources that you want to retrieve.
  ##   StackName: string (required)
  ##            : <p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595250 = newJObject()
  add(query_595250, "NextToken", newJString(NextToken))
  add(query_595250, "StackName", newJString(StackName))
  add(query_595250, "Action", newJString(Action))
  add(query_595250, "Version", newJString(Version))
  result = call_595249.call(nil, query_595250, nil, nil, nil)

var getListStackResources* = Call_GetListStackResources_595234(
    name: "getListStackResources", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ListStackResources",
    validator: validate_GetListStackResources_595235, base: "/",
    url: url_GetListStackResources_595236, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperationResults_595288 = ref object of OpenApiRestCall_593389
proc url_PostListStackSetOperationResults_595290(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperationResults_595289(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595291 = query.getOrDefault("Action")
  valid_595291 = validateParameter(valid_595291, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_595291 != nil:
    section.add "Action", valid_595291
  var valid_595292 = query.getOrDefault("Version")
  valid_595292 = validateParameter(valid_595292, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595292 != nil:
    section.add "Version", valid_595292
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595293 = header.getOrDefault("X-Amz-Signature")
  valid_595293 = validateParameter(valid_595293, JString, required = false,
                                 default = nil)
  if valid_595293 != nil:
    section.add "X-Amz-Signature", valid_595293
  var valid_595294 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595294 = validateParameter(valid_595294, JString, required = false,
                                 default = nil)
  if valid_595294 != nil:
    section.add "X-Amz-Content-Sha256", valid_595294
  var valid_595295 = header.getOrDefault("X-Amz-Date")
  valid_595295 = validateParameter(valid_595295, JString, required = false,
                                 default = nil)
  if valid_595295 != nil:
    section.add "X-Amz-Date", valid_595295
  var valid_595296 = header.getOrDefault("X-Amz-Credential")
  valid_595296 = validateParameter(valid_595296, JString, required = false,
                                 default = nil)
  if valid_595296 != nil:
    section.add "X-Amz-Credential", valid_595296
  var valid_595297 = header.getOrDefault("X-Amz-Security-Token")
  valid_595297 = validateParameter(valid_595297, JString, required = false,
                                 default = nil)
  if valid_595297 != nil:
    section.add "X-Amz-Security-Token", valid_595297
  var valid_595298 = header.getOrDefault("X-Amz-Algorithm")
  valid_595298 = validateParameter(valid_595298, JString, required = false,
                                 default = nil)
  if valid_595298 != nil:
    section.add "X-Amz-Algorithm", valid_595298
  var valid_595299 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595299 = validateParameter(valid_595299, JString, required = false,
                                 default = nil)
  if valid_595299 != nil:
    section.add "X-Amz-SignedHeaders", valid_595299
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_595300 = formData.getOrDefault("OperationId")
  valid_595300 = validateParameter(valid_595300, JString, required = true,
                                 default = nil)
  if valid_595300 != nil:
    section.add "OperationId", valid_595300
  var valid_595301 = formData.getOrDefault("StackSetName")
  valid_595301 = validateParameter(valid_595301, JString, required = true,
                                 default = nil)
  if valid_595301 != nil:
    section.add "StackSetName", valid_595301
  var valid_595302 = formData.getOrDefault("NextToken")
  valid_595302 = validateParameter(valid_595302, JString, required = false,
                                 default = nil)
  if valid_595302 != nil:
    section.add "NextToken", valid_595302
  var valid_595303 = formData.getOrDefault("MaxResults")
  valid_595303 = validateParameter(valid_595303, JInt, required = false, default = nil)
  if valid_595303 != nil:
    section.add "MaxResults", valid_595303
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595304: Call_PostListStackSetOperationResults_595288;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_595304.validator(path, query, header, formData, body)
  let scheme = call_595304.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595304.url(scheme.get, call_595304.host, call_595304.base,
                         call_595304.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595304, url, valid)

proc call*(call_595305: Call_PostListStackSetOperationResults_595288;
          OperationId: string; StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_595306 = newJObject()
  var formData_595307 = newJObject()
  add(formData_595307, "OperationId", newJString(OperationId))
  add(formData_595307, "StackSetName", newJString(StackSetName))
  add(formData_595307, "NextToken", newJString(NextToken))
  add(query_595306, "Action", newJString(Action))
  add(query_595306, "Version", newJString(Version))
  add(formData_595307, "MaxResults", newJInt(MaxResults))
  result = call_595305.call(nil, query_595306, nil, formData_595307, nil)

var postListStackSetOperationResults* = Call_PostListStackSetOperationResults_595288(
    name: "postListStackSetOperationResults", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_PostListStackSetOperationResults_595289, base: "/",
    url: url_PostListStackSetOperationResults_595290,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperationResults_595269 = ref object of OpenApiRestCall_593389
proc url_GetListStackSetOperationResults_595271(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperationResults_595270(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_595272 = query.getOrDefault("OperationId")
  valid_595272 = validateParameter(valid_595272, JString, required = true,
                                 default = nil)
  if valid_595272 != nil:
    section.add "OperationId", valid_595272
  var valid_595273 = query.getOrDefault("StackSetName")
  valid_595273 = validateParameter(valid_595273, JString, required = true,
                                 default = nil)
  if valid_595273 != nil:
    section.add "StackSetName", valid_595273
  var valid_595274 = query.getOrDefault("MaxResults")
  valid_595274 = validateParameter(valid_595274, JInt, required = false, default = nil)
  if valid_595274 != nil:
    section.add "MaxResults", valid_595274
  var valid_595275 = query.getOrDefault("NextToken")
  valid_595275 = validateParameter(valid_595275, JString, required = false,
                                 default = nil)
  if valid_595275 != nil:
    section.add "NextToken", valid_595275
  var valid_595276 = query.getOrDefault("Action")
  valid_595276 = validateParameter(valid_595276, JString, required = true, default = newJString(
      "ListStackSetOperationResults"))
  if valid_595276 != nil:
    section.add "Action", valid_595276
  var valid_595277 = query.getOrDefault("Version")
  valid_595277 = validateParameter(valid_595277, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595277 != nil:
    section.add "Version", valid_595277
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595278 = header.getOrDefault("X-Amz-Signature")
  valid_595278 = validateParameter(valid_595278, JString, required = false,
                                 default = nil)
  if valid_595278 != nil:
    section.add "X-Amz-Signature", valid_595278
  var valid_595279 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595279 = validateParameter(valid_595279, JString, required = false,
                                 default = nil)
  if valid_595279 != nil:
    section.add "X-Amz-Content-Sha256", valid_595279
  var valid_595280 = header.getOrDefault("X-Amz-Date")
  valid_595280 = validateParameter(valid_595280, JString, required = false,
                                 default = nil)
  if valid_595280 != nil:
    section.add "X-Amz-Date", valid_595280
  var valid_595281 = header.getOrDefault("X-Amz-Credential")
  valid_595281 = validateParameter(valid_595281, JString, required = false,
                                 default = nil)
  if valid_595281 != nil:
    section.add "X-Amz-Credential", valid_595281
  var valid_595282 = header.getOrDefault("X-Amz-Security-Token")
  valid_595282 = validateParameter(valid_595282, JString, required = false,
                                 default = nil)
  if valid_595282 != nil:
    section.add "X-Amz-Security-Token", valid_595282
  var valid_595283 = header.getOrDefault("X-Amz-Algorithm")
  valid_595283 = validateParameter(valid_595283, JString, required = false,
                                 default = nil)
  if valid_595283 != nil:
    section.add "X-Amz-Algorithm", valid_595283
  var valid_595284 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595284 = validateParameter(valid_595284, JString, required = false,
                                 default = nil)
  if valid_595284 != nil:
    section.add "X-Amz-SignedHeaders", valid_595284
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595285: Call_GetListStackSetOperationResults_595269;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## Returns summary information about the results of a stack set operation. 
  ## 
  let valid = call_595285.validator(path, query, header, formData, body)
  let scheme = call_595285.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595285.url(scheme.get, call_595285.host, call_595285.base,
                         call_595285.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595285, url, valid)

proc call*(call_595286: Call_GetListStackSetOperationResults_595269;
          OperationId: string; StackSetName: string; MaxResults: int = 0;
          NextToken: string = ""; Action: string = "ListStackSetOperationResults";
          Version: string = "2010-05-15"): Recallable =
  ## getListStackSetOperationResults
  ## Returns summary information about the results of a stack set operation. 
  ##   OperationId: string (required)
  ##              : The ID of the stack set operation.
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation results for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595287 = newJObject()
  add(query_595287, "OperationId", newJString(OperationId))
  add(query_595287, "StackSetName", newJString(StackSetName))
  add(query_595287, "MaxResults", newJInt(MaxResults))
  add(query_595287, "NextToken", newJString(NextToken))
  add(query_595287, "Action", newJString(Action))
  add(query_595287, "Version", newJString(Version))
  result = call_595286.call(nil, query_595287, nil, nil, nil)

var getListStackSetOperationResults* = Call_GetListStackSetOperationResults_595269(
    name: "getListStackSetOperationResults", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperationResults",
    validator: validate_GetListStackSetOperationResults_595270, base: "/",
    url: url_GetListStackSetOperationResults_595271,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSetOperations_595326 = ref object of OpenApiRestCall_593389
proc url_PostListStackSetOperations_595328(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSetOperations_595327(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595329 = query.getOrDefault("Action")
  valid_595329 = validateParameter(valid_595329, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_595329 != nil:
    section.add "Action", valid_595329
  var valid_595330 = query.getOrDefault("Version")
  valid_595330 = validateParameter(valid_595330, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595330 != nil:
    section.add "Version", valid_595330
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595331 = header.getOrDefault("X-Amz-Signature")
  valid_595331 = validateParameter(valid_595331, JString, required = false,
                                 default = nil)
  if valid_595331 != nil:
    section.add "X-Amz-Signature", valid_595331
  var valid_595332 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595332 = validateParameter(valid_595332, JString, required = false,
                                 default = nil)
  if valid_595332 != nil:
    section.add "X-Amz-Content-Sha256", valid_595332
  var valid_595333 = header.getOrDefault("X-Amz-Date")
  valid_595333 = validateParameter(valid_595333, JString, required = false,
                                 default = nil)
  if valid_595333 != nil:
    section.add "X-Amz-Date", valid_595333
  var valid_595334 = header.getOrDefault("X-Amz-Credential")
  valid_595334 = validateParameter(valid_595334, JString, required = false,
                                 default = nil)
  if valid_595334 != nil:
    section.add "X-Amz-Credential", valid_595334
  var valid_595335 = header.getOrDefault("X-Amz-Security-Token")
  valid_595335 = validateParameter(valid_595335, JString, required = false,
                                 default = nil)
  if valid_595335 != nil:
    section.add "X-Amz-Security-Token", valid_595335
  var valid_595336 = header.getOrDefault("X-Amz-Algorithm")
  valid_595336 = validateParameter(valid_595336, JString, required = false,
                                 default = nil)
  if valid_595336 != nil:
    section.add "X-Amz-Algorithm", valid_595336
  var valid_595337 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595337 = validateParameter(valid_595337, JString, required = false,
                                 default = nil)
  if valid_595337 != nil:
    section.add "X-Amz-SignedHeaders", valid_595337
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_595338 = formData.getOrDefault("StackSetName")
  valid_595338 = validateParameter(valid_595338, JString, required = true,
                                 default = nil)
  if valid_595338 != nil:
    section.add "StackSetName", valid_595338
  var valid_595339 = formData.getOrDefault("NextToken")
  valid_595339 = validateParameter(valid_595339, JString, required = false,
                                 default = nil)
  if valid_595339 != nil:
    section.add "NextToken", valid_595339
  var valid_595340 = formData.getOrDefault("MaxResults")
  valid_595340 = validateParameter(valid_595340, JInt, required = false, default = nil)
  if valid_595340 != nil:
    section.add "MaxResults", valid_595340
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595341: Call_PostListStackSetOperations_595326; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_595341.validator(path, query, header, formData, body)
  let scheme = call_595341.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595341.url(scheme.get, call_595341.host, call_595341.base,
                         call_595341.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595341, url, valid)

proc call*(call_595342: Call_PostListStackSetOperations_595326;
          StackSetName: string; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15";
          MaxResults: int = 0): Recallable =
  ## postListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_595343 = newJObject()
  var formData_595344 = newJObject()
  add(formData_595344, "StackSetName", newJString(StackSetName))
  add(formData_595344, "NextToken", newJString(NextToken))
  add(query_595343, "Action", newJString(Action))
  add(query_595343, "Version", newJString(Version))
  add(formData_595344, "MaxResults", newJInt(MaxResults))
  result = call_595342.call(nil, query_595343, nil, formData_595344, nil)

var postListStackSetOperations* = Call_PostListStackSetOperations_595326(
    name: "postListStackSetOperations", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_PostListStackSetOperations_595327, base: "/",
    url: url_PostListStackSetOperations_595328,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSetOperations_595308 = ref object of OpenApiRestCall_593389
proc url_GetListStackSetOperations_595310(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSetOperations_595309(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_595311 = query.getOrDefault("StackSetName")
  valid_595311 = validateParameter(valid_595311, JString, required = true,
                                 default = nil)
  if valid_595311 != nil:
    section.add "StackSetName", valid_595311
  var valid_595312 = query.getOrDefault("MaxResults")
  valid_595312 = validateParameter(valid_595312, JInt, required = false, default = nil)
  if valid_595312 != nil:
    section.add "MaxResults", valid_595312
  var valid_595313 = query.getOrDefault("NextToken")
  valid_595313 = validateParameter(valid_595313, JString, required = false,
                                 default = nil)
  if valid_595313 != nil:
    section.add "NextToken", valid_595313
  var valid_595314 = query.getOrDefault("Action")
  valid_595314 = validateParameter(valid_595314, JString, required = true,
                                 default = newJString("ListStackSetOperations"))
  if valid_595314 != nil:
    section.add "Action", valid_595314
  var valid_595315 = query.getOrDefault("Version")
  valid_595315 = validateParameter(valid_595315, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595315 != nil:
    section.add "Version", valid_595315
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595316 = header.getOrDefault("X-Amz-Signature")
  valid_595316 = validateParameter(valid_595316, JString, required = false,
                                 default = nil)
  if valid_595316 != nil:
    section.add "X-Amz-Signature", valid_595316
  var valid_595317 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595317 = validateParameter(valid_595317, JString, required = false,
                                 default = nil)
  if valid_595317 != nil:
    section.add "X-Amz-Content-Sha256", valid_595317
  var valid_595318 = header.getOrDefault("X-Amz-Date")
  valid_595318 = validateParameter(valid_595318, JString, required = false,
                                 default = nil)
  if valid_595318 != nil:
    section.add "X-Amz-Date", valid_595318
  var valid_595319 = header.getOrDefault("X-Amz-Credential")
  valid_595319 = validateParameter(valid_595319, JString, required = false,
                                 default = nil)
  if valid_595319 != nil:
    section.add "X-Amz-Credential", valid_595319
  var valid_595320 = header.getOrDefault("X-Amz-Security-Token")
  valid_595320 = validateParameter(valid_595320, JString, required = false,
                                 default = nil)
  if valid_595320 != nil:
    section.add "X-Amz-Security-Token", valid_595320
  var valid_595321 = header.getOrDefault("X-Amz-Algorithm")
  valid_595321 = validateParameter(valid_595321, JString, required = false,
                                 default = nil)
  if valid_595321 != nil:
    section.add "X-Amz-Algorithm", valid_595321
  var valid_595322 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595322 = validateParameter(valid_595322, JString, required = false,
                                 default = nil)
  if valid_595322 != nil:
    section.add "X-Amz-SignedHeaders", valid_595322
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595323: Call_GetListStackSetOperations_595308; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about operations performed on a stack set. 
  ## 
  let valid = call_595323.validator(path, query, header, formData, body)
  let scheme = call_595323.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595323.url(scheme.get, call_595323.host, call_595323.base,
                         call_595323.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595323, url, valid)

proc call*(call_595324: Call_GetListStackSetOperations_595308;
          StackSetName: string; MaxResults: int = 0; NextToken: string = "";
          Action: string = "ListStackSetOperations"; Version: string = "2010-05-15"): Recallable =
  ## getListStackSetOperations
  ## Returns summary information about operations performed on a stack set. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to get operation summaries for.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595325 = newJObject()
  add(query_595325, "StackSetName", newJString(StackSetName))
  add(query_595325, "MaxResults", newJInt(MaxResults))
  add(query_595325, "NextToken", newJString(NextToken))
  add(query_595325, "Action", newJString(Action))
  add(query_595325, "Version", newJString(Version))
  result = call_595324.call(nil, query_595325, nil, nil, nil)

var getListStackSetOperations* = Call_GetListStackSetOperations_595308(
    name: "getListStackSetOperations", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSetOperations",
    validator: validate_GetListStackSetOperations_595309, base: "/",
    url: url_GetListStackSetOperations_595310,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStackSets_595363 = ref object of OpenApiRestCall_593389
proc url_PostListStackSets_595365(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStackSets_595364(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595366 = query.getOrDefault("Action")
  valid_595366 = validateParameter(valid_595366, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_595366 != nil:
    section.add "Action", valid_595366
  var valid_595367 = query.getOrDefault("Version")
  valid_595367 = validateParameter(valid_595367, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595367 != nil:
    section.add "Version", valid_595367
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595368 = header.getOrDefault("X-Amz-Signature")
  valid_595368 = validateParameter(valid_595368, JString, required = false,
                                 default = nil)
  if valid_595368 != nil:
    section.add "X-Amz-Signature", valid_595368
  var valid_595369 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595369 = validateParameter(valid_595369, JString, required = false,
                                 default = nil)
  if valid_595369 != nil:
    section.add "X-Amz-Content-Sha256", valid_595369
  var valid_595370 = header.getOrDefault("X-Amz-Date")
  valid_595370 = validateParameter(valid_595370, JString, required = false,
                                 default = nil)
  if valid_595370 != nil:
    section.add "X-Amz-Date", valid_595370
  var valid_595371 = header.getOrDefault("X-Amz-Credential")
  valid_595371 = validateParameter(valid_595371, JString, required = false,
                                 default = nil)
  if valid_595371 != nil:
    section.add "X-Amz-Credential", valid_595371
  var valid_595372 = header.getOrDefault("X-Amz-Security-Token")
  valid_595372 = validateParameter(valid_595372, JString, required = false,
                                 default = nil)
  if valid_595372 != nil:
    section.add "X-Amz-Security-Token", valid_595372
  var valid_595373 = header.getOrDefault("X-Amz-Algorithm")
  valid_595373 = validateParameter(valid_595373, JString, required = false,
                                 default = nil)
  if valid_595373 != nil:
    section.add "X-Amz-Algorithm", valid_595373
  var valid_595374 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595374 = validateParameter(valid_595374, JString, required = false,
                                 default = nil)
  if valid_595374 != nil:
    section.add "X-Amz-SignedHeaders", valid_595374
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  section = newJObject()
  var valid_595375 = formData.getOrDefault("NextToken")
  valid_595375 = validateParameter(valid_595375, JString, required = false,
                                 default = nil)
  if valid_595375 != nil:
    section.add "NextToken", valid_595375
  var valid_595376 = formData.getOrDefault("Status")
  valid_595376 = validateParameter(valid_595376, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_595376 != nil:
    section.add "Status", valid_595376
  var valid_595377 = formData.getOrDefault("MaxResults")
  valid_595377 = validateParameter(valid_595377, JInt, required = false, default = nil)
  if valid_595377 != nil:
    section.add "MaxResults", valid_595377
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595378: Call_PostListStackSets_595363; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_595378.validator(path, query, header, formData, body)
  let scheme = call_595378.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595378.url(scheme.get, call_595378.host, call_595378.base,
                         call_595378.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595378, url, valid)

proc call*(call_595379: Call_PostListStackSets_595363; NextToken: string = "";
          Action: string = "ListStackSets"; Status: string = "ACTIVE";
          Version: string = "2010-05-15"; MaxResults: int = 0): Recallable =
  ## postListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   Version: string (required)
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  var query_595380 = newJObject()
  var formData_595381 = newJObject()
  add(formData_595381, "NextToken", newJString(NextToken))
  add(query_595380, "Action", newJString(Action))
  add(formData_595381, "Status", newJString(Status))
  add(query_595380, "Version", newJString(Version))
  add(formData_595381, "MaxResults", newJInt(MaxResults))
  result = call_595379.call(nil, query_595380, nil, formData_595381, nil)

var postListStackSets* = Call_PostListStackSets_595363(name: "postListStackSets",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_PostListStackSets_595364,
    base: "/", url: url_PostListStackSets_595365,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStackSets_595345 = ref object of OpenApiRestCall_593389
proc url_GetListStackSets_595347(protocol: Scheme; host: string; base: string;
                                route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStackSets_595346(path: JsonNode; query: JsonNode;
                                     header: JsonNode; formData: JsonNode;
                                     body: JsonNode): JsonNode =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   MaxResults: JInt
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: JString
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: JString
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_595348 = query.getOrDefault("MaxResults")
  valid_595348 = validateParameter(valid_595348, JInt, required = false, default = nil)
  if valid_595348 != nil:
    section.add "MaxResults", valid_595348
  var valid_595349 = query.getOrDefault("Status")
  valid_595349 = validateParameter(valid_595349, JString, required = false,
                                 default = newJString("ACTIVE"))
  if valid_595349 != nil:
    section.add "Status", valid_595349
  var valid_595350 = query.getOrDefault("NextToken")
  valid_595350 = validateParameter(valid_595350, JString, required = false,
                                 default = nil)
  if valid_595350 != nil:
    section.add "NextToken", valid_595350
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595351 = query.getOrDefault("Action")
  valid_595351 = validateParameter(valid_595351, JString, required = true,
                                 default = newJString("ListStackSets"))
  if valid_595351 != nil:
    section.add "Action", valid_595351
  var valid_595352 = query.getOrDefault("Version")
  valid_595352 = validateParameter(valid_595352, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595352 != nil:
    section.add "Version", valid_595352
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595353 = header.getOrDefault("X-Amz-Signature")
  valid_595353 = validateParameter(valid_595353, JString, required = false,
                                 default = nil)
  if valid_595353 != nil:
    section.add "X-Amz-Signature", valid_595353
  var valid_595354 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595354 = validateParameter(valid_595354, JString, required = false,
                                 default = nil)
  if valid_595354 != nil:
    section.add "X-Amz-Content-Sha256", valid_595354
  var valid_595355 = header.getOrDefault("X-Amz-Date")
  valid_595355 = validateParameter(valid_595355, JString, required = false,
                                 default = nil)
  if valid_595355 != nil:
    section.add "X-Amz-Date", valid_595355
  var valid_595356 = header.getOrDefault("X-Amz-Credential")
  valid_595356 = validateParameter(valid_595356, JString, required = false,
                                 default = nil)
  if valid_595356 != nil:
    section.add "X-Amz-Credential", valid_595356
  var valid_595357 = header.getOrDefault("X-Amz-Security-Token")
  valid_595357 = validateParameter(valid_595357, JString, required = false,
                                 default = nil)
  if valid_595357 != nil:
    section.add "X-Amz-Security-Token", valid_595357
  var valid_595358 = header.getOrDefault("X-Amz-Algorithm")
  valid_595358 = validateParameter(valid_595358, JString, required = false,
                                 default = nil)
  if valid_595358 != nil:
    section.add "X-Amz-Algorithm", valid_595358
  var valid_595359 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595359 = validateParameter(valid_595359, JString, required = false,
                                 default = nil)
  if valid_595359 != nil:
    section.add "X-Amz-SignedHeaders", valid_595359
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595360: Call_GetListStackSets_595345; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns summary information about stack sets that are associated with the user.
  ## 
  let valid = call_595360.validator(path, query, header, formData, body)
  let scheme = call_595360.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595360.url(scheme.get, call_595360.host, call_595360.base,
                         call_595360.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595360, url, valid)

proc call*(call_595361: Call_GetListStackSets_595345; MaxResults: int = 0;
          Status: string = "ACTIVE"; NextToken: string = "";
          Action: string = "ListStackSets"; Version: string = "2010-05-15"): Recallable =
  ## getListStackSets
  ## Returns summary information about stack sets that are associated with the user.
  ##   MaxResults: int
  ##             : The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
  ##   Status: string
  ##         : The status of the stack sets that you want to get summary information about.
  ##   NextToken: string
  ##            : If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595362 = newJObject()
  add(query_595362, "MaxResults", newJInt(MaxResults))
  add(query_595362, "Status", newJString(Status))
  add(query_595362, "NextToken", newJString(NextToken))
  add(query_595362, "Action", newJString(Action))
  add(query_595362, "Version", newJString(Version))
  result = call_595361.call(nil, query_595362, nil, nil, nil)

var getListStackSets* = Call_GetListStackSets_595345(name: "getListStackSets",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStackSets", validator: validate_GetListStackSets_595346,
    base: "/", url: url_GetListStackSets_595347,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostListStacks_595399 = ref object of OpenApiRestCall_593389
proc url_PostListStacks_595401(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostListStacks_595400(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595402 = query.getOrDefault("Action")
  valid_595402 = validateParameter(valid_595402, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_595402 != nil:
    section.add "Action", valid_595402
  var valid_595403 = query.getOrDefault("Version")
  valid_595403 = validateParameter(valid_595403, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595403 != nil:
    section.add "Version", valid_595403
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595404 = header.getOrDefault("X-Amz-Signature")
  valid_595404 = validateParameter(valid_595404, JString, required = false,
                                 default = nil)
  if valid_595404 != nil:
    section.add "X-Amz-Signature", valid_595404
  var valid_595405 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595405 = validateParameter(valid_595405, JString, required = false,
                                 default = nil)
  if valid_595405 != nil:
    section.add "X-Amz-Content-Sha256", valid_595405
  var valid_595406 = header.getOrDefault("X-Amz-Date")
  valid_595406 = validateParameter(valid_595406, JString, required = false,
                                 default = nil)
  if valid_595406 != nil:
    section.add "X-Amz-Date", valid_595406
  var valid_595407 = header.getOrDefault("X-Amz-Credential")
  valid_595407 = validateParameter(valid_595407, JString, required = false,
                                 default = nil)
  if valid_595407 != nil:
    section.add "X-Amz-Credential", valid_595407
  var valid_595408 = header.getOrDefault("X-Amz-Security-Token")
  valid_595408 = validateParameter(valid_595408, JString, required = false,
                                 default = nil)
  if valid_595408 != nil:
    section.add "X-Amz-Security-Token", valid_595408
  var valid_595409 = header.getOrDefault("X-Amz-Algorithm")
  valid_595409 = validateParameter(valid_595409, JString, required = false,
                                 default = nil)
  if valid_595409 != nil:
    section.add "X-Amz-Algorithm", valid_595409
  var valid_595410 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595410 = validateParameter(valid_595410, JString, required = false,
                                 default = nil)
  if valid_595410 != nil:
    section.add "X-Amz-SignedHeaders", valid_595410
  result.add "header", section
  ## parameters in `formData` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  section = newJObject()
  var valid_595411 = formData.getOrDefault("NextToken")
  valid_595411 = validateParameter(valid_595411, JString, required = false,
                                 default = nil)
  if valid_595411 != nil:
    section.add "NextToken", valid_595411
  var valid_595412 = formData.getOrDefault("StackStatusFilter")
  valid_595412 = validateParameter(valid_595412, JArray, required = false,
                                 default = nil)
  if valid_595412 != nil:
    section.add "StackStatusFilter", valid_595412
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595413: Call_PostListStacks_595399; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_595413.validator(path, query, header, formData, body)
  let scheme = call_595413.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595413.url(scheme.get, call_595413.host, call_595413.base,
                         call_595413.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595413, url, valid)

proc call*(call_595414: Call_PostListStacks_595399; NextToken: string = "";
          StackStatusFilter: JsonNode = nil; Action: string = "ListStacks";
          Version: string = "2010-05-15"): Recallable =
  ## postListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595415 = newJObject()
  var formData_595416 = newJObject()
  add(formData_595416, "NextToken", newJString(NextToken))
  if StackStatusFilter != nil:
    formData_595416.add "StackStatusFilter", StackStatusFilter
  add(query_595415, "Action", newJString(Action))
  add(query_595415, "Version", newJString(Version))
  result = call_595414.call(nil, query_595415, nil, formData_595416, nil)

var postListStacks* = Call_PostListStacks_595399(name: "postListStacks",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_PostListStacks_595400,
    base: "/", url: url_PostListStacks_595401, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetListStacks_595382 = ref object of OpenApiRestCall_593389
proc url_GetListStacks_595384(protocol: Scheme; host: string; base: string;
                             route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetListStacks_595383(path: JsonNode; query: JsonNode; header: JsonNode;
                                  formData: JsonNode; body: JsonNode): JsonNode =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   NextToken: JString
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  var valid_595385 = query.getOrDefault("NextToken")
  valid_595385 = validateParameter(valid_595385, JString, required = false,
                                 default = nil)
  if valid_595385 != nil:
    section.add "NextToken", valid_595385
  var valid_595386 = query.getOrDefault("StackStatusFilter")
  valid_595386 = validateParameter(valid_595386, JArray, required = false,
                                 default = nil)
  if valid_595386 != nil:
    section.add "StackStatusFilter", valid_595386
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595387 = query.getOrDefault("Action")
  valid_595387 = validateParameter(valid_595387, JString, required = true,
                                 default = newJString("ListStacks"))
  if valid_595387 != nil:
    section.add "Action", valid_595387
  var valid_595388 = query.getOrDefault("Version")
  valid_595388 = validateParameter(valid_595388, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595388 != nil:
    section.add "Version", valid_595388
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595389 = header.getOrDefault("X-Amz-Signature")
  valid_595389 = validateParameter(valid_595389, JString, required = false,
                                 default = nil)
  if valid_595389 != nil:
    section.add "X-Amz-Signature", valid_595389
  var valid_595390 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595390 = validateParameter(valid_595390, JString, required = false,
                                 default = nil)
  if valid_595390 != nil:
    section.add "X-Amz-Content-Sha256", valid_595390
  var valid_595391 = header.getOrDefault("X-Amz-Date")
  valid_595391 = validateParameter(valid_595391, JString, required = false,
                                 default = nil)
  if valid_595391 != nil:
    section.add "X-Amz-Date", valid_595391
  var valid_595392 = header.getOrDefault("X-Amz-Credential")
  valid_595392 = validateParameter(valid_595392, JString, required = false,
                                 default = nil)
  if valid_595392 != nil:
    section.add "X-Amz-Credential", valid_595392
  var valid_595393 = header.getOrDefault("X-Amz-Security-Token")
  valid_595393 = validateParameter(valid_595393, JString, required = false,
                                 default = nil)
  if valid_595393 != nil:
    section.add "X-Amz-Security-Token", valid_595393
  var valid_595394 = header.getOrDefault("X-Amz-Algorithm")
  valid_595394 = validateParameter(valid_595394, JString, required = false,
                                 default = nil)
  if valid_595394 != nil:
    section.add "X-Amz-Algorithm", valid_595394
  var valid_595395 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595395 = validateParameter(valid_595395, JString, required = false,
                                 default = nil)
  if valid_595395 != nil:
    section.add "X-Amz-SignedHeaders", valid_595395
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595396: Call_GetListStacks_595382; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ## 
  let valid = call_595396.validator(path, query, header, formData, body)
  let scheme = call_595396.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595396.url(scheme.get, call_595396.host, call_595396.base,
                         call_595396.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595396, url, valid)

proc call*(call_595397: Call_GetListStacks_595382; NextToken: string = "";
          StackStatusFilter: JsonNode = nil; Action: string = "ListStacks";
          Version: string = "2010-05-15"): Recallable =
  ## getListStacks
  ## Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
  ##   NextToken: string
  ##            : A string that identifies the next page of stacks that you want to retrieve.
  ##   StackStatusFilter: JArray
  ##                    : Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595398 = newJObject()
  add(query_595398, "NextToken", newJString(NextToken))
  if StackStatusFilter != nil:
    query_595398.add "StackStatusFilter", StackStatusFilter
  add(query_595398, "Action", newJString(Action))
  add(query_595398, "Version", newJString(Version))
  result = call_595397.call(nil, query_595398, nil, nil, nil)

var getListStacks* = Call_GetListStacks_595382(name: "getListStacks",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=ListStacks", validator: validate_GetListStacks_595383,
    base: "/", url: url_GetListStacks_595384, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSetStackPolicy_595435 = ref object of OpenApiRestCall_593389
proc url_PostSetStackPolicy_595437(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSetStackPolicy_595436(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595438 = query.getOrDefault("Action")
  valid_595438 = validateParameter(valid_595438, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_595438 != nil:
    section.add "Action", valid_595438
  var valid_595439 = query.getOrDefault("Version")
  valid_595439 = validateParameter(valid_595439, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595439 != nil:
    section.add "Version", valid_595439
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595440 = header.getOrDefault("X-Amz-Signature")
  valid_595440 = validateParameter(valid_595440, JString, required = false,
                                 default = nil)
  if valid_595440 != nil:
    section.add "X-Amz-Signature", valid_595440
  var valid_595441 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595441 = validateParameter(valid_595441, JString, required = false,
                                 default = nil)
  if valid_595441 != nil:
    section.add "X-Amz-Content-Sha256", valid_595441
  var valid_595442 = header.getOrDefault("X-Amz-Date")
  valid_595442 = validateParameter(valid_595442, JString, required = false,
                                 default = nil)
  if valid_595442 != nil:
    section.add "X-Amz-Date", valid_595442
  var valid_595443 = header.getOrDefault("X-Amz-Credential")
  valid_595443 = validateParameter(valid_595443, JString, required = false,
                                 default = nil)
  if valid_595443 != nil:
    section.add "X-Amz-Credential", valid_595443
  var valid_595444 = header.getOrDefault("X-Amz-Security-Token")
  valid_595444 = validateParameter(valid_595444, JString, required = false,
                                 default = nil)
  if valid_595444 != nil:
    section.add "X-Amz-Security-Token", valid_595444
  var valid_595445 = header.getOrDefault("X-Amz-Algorithm")
  valid_595445 = validateParameter(valid_595445, JString, required = false,
                                 default = nil)
  if valid_595445 != nil:
    section.add "X-Amz-Algorithm", valid_595445
  var valid_595446 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595446 = validateParameter(valid_595446, JString, required = false,
                                 default = nil)
  if valid_595446 != nil:
    section.add "X-Amz-SignedHeaders", valid_595446
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  section = newJObject()
  var valid_595447 = formData.getOrDefault("StackPolicyBody")
  valid_595447 = validateParameter(valid_595447, JString, required = false,
                                 default = nil)
  if valid_595447 != nil:
    section.add "StackPolicyBody", valid_595447
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_595448 = formData.getOrDefault("StackName")
  valid_595448 = validateParameter(valid_595448, JString, required = true,
                                 default = nil)
  if valid_595448 != nil:
    section.add "StackName", valid_595448
  var valid_595449 = formData.getOrDefault("StackPolicyURL")
  valid_595449 = validateParameter(valid_595449, JString, required = false,
                                 default = nil)
  if valid_595449 != nil:
    section.add "StackPolicyURL", valid_595449
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595450: Call_PostSetStackPolicy_595435; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_595450.validator(path, query, header, formData, body)
  let scheme = call_595450.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595450.url(scheme.get, call_595450.host, call_595450.base,
                         call_595450.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595450, url, valid)

proc call*(call_595451: Call_PostSetStackPolicy_595435; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## postSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595452 = newJObject()
  var formData_595453 = newJObject()
  add(formData_595453, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_595453, "StackName", newJString(StackName))
  add(formData_595453, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_595452, "Action", newJString(Action))
  add(query_595452, "Version", newJString(Version))
  result = call_595451.call(nil, query_595452, nil, formData_595453, nil)

var postSetStackPolicy* = Call_PostSetStackPolicy_595435(
    name: "postSetStackPolicy", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SetStackPolicy",
    validator: validate_PostSetStackPolicy_595436, base: "/",
    url: url_PostSetStackPolicy_595437, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSetStackPolicy_595417 = ref object of OpenApiRestCall_593389
proc url_GetSetStackPolicy_595419(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSetStackPolicy_595418(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sets a stack policy for a specified stack.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: JString
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: JString
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_595420 = query.getOrDefault("StackName")
  valid_595420 = validateParameter(valid_595420, JString, required = true,
                                 default = nil)
  if valid_595420 != nil:
    section.add "StackName", valid_595420
  var valid_595421 = query.getOrDefault("StackPolicyBody")
  valid_595421 = validateParameter(valid_595421, JString, required = false,
                                 default = nil)
  if valid_595421 != nil:
    section.add "StackPolicyBody", valid_595421
  var valid_595422 = query.getOrDefault("StackPolicyURL")
  valid_595422 = validateParameter(valid_595422, JString, required = false,
                                 default = nil)
  if valid_595422 != nil:
    section.add "StackPolicyURL", valid_595422
  var valid_595423 = query.getOrDefault("Action")
  valid_595423 = validateParameter(valid_595423, JString, required = true,
                                 default = newJString("SetStackPolicy"))
  if valid_595423 != nil:
    section.add "Action", valid_595423
  var valid_595424 = query.getOrDefault("Version")
  valid_595424 = validateParameter(valid_595424, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595424 != nil:
    section.add "Version", valid_595424
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595425 = header.getOrDefault("X-Amz-Signature")
  valid_595425 = validateParameter(valid_595425, JString, required = false,
                                 default = nil)
  if valid_595425 != nil:
    section.add "X-Amz-Signature", valid_595425
  var valid_595426 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595426 = validateParameter(valid_595426, JString, required = false,
                                 default = nil)
  if valid_595426 != nil:
    section.add "X-Amz-Content-Sha256", valid_595426
  var valid_595427 = header.getOrDefault("X-Amz-Date")
  valid_595427 = validateParameter(valid_595427, JString, required = false,
                                 default = nil)
  if valid_595427 != nil:
    section.add "X-Amz-Date", valid_595427
  var valid_595428 = header.getOrDefault("X-Amz-Credential")
  valid_595428 = validateParameter(valid_595428, JString, required = false,
                                 default = nil)
  if valid_595428 != nil:
    section.add "X-Amz-Credential", valid_595428
  var valid_595429 = header.getOrDefault("X-Amz-Security-Token")
  valid_595429 = validateParameter(valid_595429, JString, required = false,
                                 default = nil)
  if valid_595429 != nil:
    section.add "X-Amz-Security-Token", valid_595429
  var valid_595430 = header.getOrDefault("X-Amz-Algorithm")
  valid_595430 = validateParameter(valid_595430, JString, required = false,
                                 default = nil)
  if valid_595430 != nil:
    section.add "X-Amz-Algorithm", valid_595430
  var valid_595431 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595431 = validateParameter(valid_595431, JString, required = false,
                                 default = nil)
  if valid_595431 != nil:
    section.add "X-Amz-SignedHeaders", valid_595431
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595432: Call_GetSetStackPolicy_595417; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sets a stack policy for a specified stack.
  ## 
  let valid = call_595432.validator(path, query, header, formData, body)
  let scheme = call_595432.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595432.url(scheme.get, call_595432.host, call_595432.base,
                         call_595432.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595432, url, valid)

proc call*(call_595433: Call_GetSetStackPolicy_595417; StackName: string;
          StackPolicyBody: string = ""; StackPolicyURL: string = "";
          Action: string = "SetStackPolicy"; Version: string = "2010-05-15"): Recallable =
  ## getSetStackPolicy
  ## Sets a stack policy for a specified stack.
  ##   StackName: string (required)
  ##            : The name or unique stack ID that you want to associate a policy with.
  ##   StackPolicyBody: string
  ##                  : Structure containing the stack policy body. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   StackPolicyURL: string
  ##                 : Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595434 = newJObject()
  add(query_595434, "StackName", newJString(StackName))
  add(query_595434, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_595434, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_595434, "Action", newJString(Action))
  add(query_595434, "Version", newJString(Version))
  result = call_595433.call(nil, query_595434, nil, nil, nil)

var getSetStackPolicy* = Call_GetSetStackPolicy_595417(name: "getSetStackPolicy",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SetStackPolicy", validator: validate_GetSetStackPolicy_595418,
    base: "/", url: url_GetSetStackPolicy_595419,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostSignalResource_595473 = ref object of OpenApiRestCall_593389
proc url_PostSignalResource_595475(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostSignalResource_595474(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595476 = query.getOrDefault("Action")
  valid_595476 = validateParameter(valid_595476, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_595476 != nil:
    section.add "Action", valid_595476
  var valid_595477 = query.getOrDefault("Version")
  valid_595477 = validateParameter(valid_595477, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595477 != nil:
    section.add "Version", valid_595477
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595478 = header.getOrDefault("X-Amz-Signature")
  valid_595478 = validateParameter(valid_595478, JString, required = false,
                                 default = nil)
  if valid_595478 != nil:
    section.add "X-Amz-Signature", valid_595478
  var valid_595479 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595479 = validateParameter(valid_595479, JString, required = false,
                                 default = nil)
  if valid_595479 != nil:
    section.add "X-Amz-Content-Sha256", valid_595479
  var valid_595480 = header.getOrDefault("X-Amz-Date")
  valid_595480 = validateParameter(valid_595480, JString, required = false,
                                 default = nil)
  if valid_595480 != nil:
    section.add "X-Amz-Date", valid_595480
  var valid_595481 = header.getOrDefault("X-Amz-Credential")
  valid_595481 = validateParameter(valid_595481, JString, required = false,
                                 default = nil)
  if valid_595481 != nil:
    section.add "X-Amz-Credential", valid_595481
  var valid_595482 = header.getOrDefault("X-Amz-Security-Token")
  valid_595482 = validateParameter(valid_595482, JString, required = false,
                                 default = nil)
  if valid_595482 != nil:
    section.add "X-Amz-Security-Token", valid_595482
  var valid_595483 = header.getOrDefault("X-Amz-Algorithm")
  valid_595483 = validateParameter(valid_595483, JString, required = false,
                                 default = nil)
  if valid_595483 != nil:
    section.add "X-Amz-Algorithm", valid_595483
  var valid_595484 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595484 = validateParameter(valid_595484, JString, required = false,
                                 default = nil)
  if valid_595484 != nil:
    section.add "X-Amz-SignedHeaders", valid_595484
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_595485 = formData.getOrDefault("StackName")
  valid_595485 = validateParameter(valid_595485, JString, required = true,
                                 default = nil)
  if valid_595485 != nil:
    section.add "StackName", valid_595485
  var valid_595486 = formData.getOrDefault("UniqueId")
  valid_595486 = validateParameter(valid_595486, JString, required = true,
                                 default = nil)
  if valid_595486 != nil:
    section.add "UniqueId", valid_595486
  var valid_595487 = formData.getOrDefault("Status")
  valid_595487 = validateParameter(valid_595487, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_595487 != nil:
    section.add "Status", valid_595487
  var valid_595488 = formData.getOrDefault("LogicalResourceId")
  valid_595488 = validateParameter(valid_595488, JString, required = true,
                                 default = nil)
  if valid_595488 != nil:
    section.add "LogicalResourceId", valid_595488
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595489: Call_PostSignalResource_595473; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_595489.validator(path, query, header, formData, body)
  let scheme = call_595489.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595489.url(scheme.get, call_595489.host, call_595489.base,
                         call_595489.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595489, url, valid)

proc call*(call_595490: Call_PostSignalResource_595473; StackName: string;
          UniqueId: string; LogicalResourceId: string;
          Action: string = "SignalResource"; Status: string = "SUCCESS";
          Version: string = "2010-05-15"): Recallable =
  ## postSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   Action: string (required)
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  var query_595491 = newJObject()
  var formData_595492 = newJObject()
  add(formData_595492, "StackName", newJString(StackName))
  add(query_595491, "Action", newJString(Action))
  add(formData_595492, "UniqueId", newJString(UniqueId))
  add(formData_595492, "Status", newJString(Status))
  add(query_595491, "Version", newJString(Version))
  add(formData_595492, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_595490.call(nil, query_595491, nil, formData_595492, nil)

var postSignalResource* = Call_PostSignalResource_595473(
    name: "postSignalResource", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=SignalResource",
    validator: validate_PostSignalResource_595474, base: "/",
    url: url_PostSignalResource_595475, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetSignalResource_595454 = ref object of OpenApiRestCall_593389
proc url_GetSignalResource_595456(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetSignalResource_595455(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Status: JString (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: JString (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: JString (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Action: JString (required)
  ##   Version: JString (required)
  ##   LogicalResourceId: JString (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Status` field"
  var valid_595457 = query.getOrDefault("Status")
  valid_595457 = validateParameter(valid_595457, JString, required = true,
                                 default = newJString("SUCCESS"))
  if valid_595457 != nil:
    section.add "Status", valid_595457
  var valid_595458 = query.getOrDefault("StackName")
  valid_595458 = validateParameter(valid_595458, JString, required = true,
                                 default = nil)
  if valid_595458 != nil:
    section.add "StackName", valid_595458
  var valid_595459 = query.getOrDefault("UniqueId")
  valid_595459 = validateParameter(valid_595459, JString, required = true,
                                 default = nil)
  if valid_595459 != nil:
    section.add "UniqueId", valid_595459
  var valid_595460 = query.getOrDefault("Action")
  valid_595460 = validateParameter(valid_595460, JString, required = true,
                                 default = newJString("SignalResource"))
  if valid_595460 != nil:
    section.add "Action", valid_595460
  var valid_595461 = query.getOrDefault("Version")
  valid_595461 = validateParameter(valid_595461, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595461 != nil:
    section.add "Version", valid_595461
  var valid_595462 = query.getOrDefault("LogicalResourceId")
  valid_595462 = validateParameter(valid_595462, JString, required = true,
                                 default = nil)
  if valid_595462 != nil:
    section.add "LogicalResourceId", valid_595462
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595463 = header.getOrDefault("X-Amz-Signature")
  valid_595463 = validateParameter(valid_595463, JString, required = false,
                                 default = nil)
  if valid_595463 != nil:
    section.add "X-Amz-Signature", valid_595463
  var valid_595464 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595464 = validateParameter(valid_595464, JString, required = false,
                                 default = nil)
  if valid_595464 != nil:
    section.add "X-Amz-Content-Sha256", valid_595464
  var valid_595465 = header.getOrDefault("X-Amz-Date")
  valid_595465 = validateParameter(valid_595465, JString, required = false,
                                 default = nil)
  if valid_595465 != nil:
    section.add "X-Amz-Date", valid_595465
  var valid_595466 = header.getOrDefault("X-Amz-Credential")
  valid_595466 = validateParameter(valid_595466, JString, required = false,
                                 default = nil)
  if valid_595466 != nil:
    section.add "X-Amz-Credential", valid_595466
  var valid_595467 = header.getOrDefault("X-Amz-Security-Token")
  valid_595467 = validateParameter(valid_595467, JString, required = false,
                                 default = nil)
  if valid_595467 != nil:
    section.add "X-Amz-Security-Token", valid_595467
  var valid_595468 = header.getOrDefault("X-Amz-Algorithm")
  valid_595468 = validateParameter(valid_595468, JString, required = false,
                                 default = nil)
  if valid_595468 != nil:
    section.add "X-Amz-Algorithm", valid_595468
  var valid_595469 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595469 = validateParameter(valid_595469, JString, required = false,
                                 default = nil)
  if valid_595469 != nil:
    section.add "X-Amz-SignedHeaders", valid_595469
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595470: Call_GetSignalResource_595454; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ## 
  let valid = call_595470.validator(path, query, header, formData, body)
  let scheme = call_595470.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595470.url(scheme.get, call_595470.host, call_595470.base,
                         call_595470.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595470, url, valid)

proc call*(call_595471: Call_GetSignalResource_595454; StackName: string;
          UniqueId: string; LogicalResourceId: string; Status: string = "SUCCESS";
          Action: string = "SignalResource"; Version: string = "2010-05-15"): Recallable =
  ## getSignalResource
  ## Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
  ##   Status: string (required)
  ##         : The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.
  ##   StackName: string (required)
  ##            : The stack name or unique stack ID that includes the resource that you want to signal.
  ##   UniqueId: string (required)
  ##           : A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
  ##   Action: string (required)
  ##   Version: string (required)
  ##   LogicalResourceId: string (required)
  ##                    : The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.
  var query_595472 = newJObject()
  add(query_595472, "Status", newJString(Status))
  add(query_595472, "StackName", newJString(StackName))
  add(query_595472, "UniqueId", newJString(UniqueId))
  add(query_595472, "Action", newJString(Action))
  add(query_595472, "Version", newJString(Version))
  add(query_595472, "LogicalResourceId", newJString(LogicalResourceId))
  result = call_595471.call(nil, query_595472, nil, nil, nil)

var getSignalResource* = Call_GetSignalResource_595454(name: "getSignalResource",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=SignalResource", validator: validate_GetSignalResource_595455,
    base: "/", url: url_GetSignalResource_595456,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostStopStackSetOperation_595510 = ref object of OpenApiRestCall_593389
proc url_PostStopStackSetOperation_595512(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostStopStackSetOperation_595511(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595513 = query.getOrDefault("Action")
  valid_595513 = validateParameter(valid_595513, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_595513 != nil:
    section.add "Action", valid_595513
  var valid_595514 = query.getOrDefault("Version")
  valid_595514 = validateParameter(valid_595514, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595514 != nil:
    section.add "Version", valid_595514
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595515 = header.getOrDefault("X-Amz-Signature")
  valid_595515 = validateParameter(valid_595515, JString, required = false,
                                 default = nil)
  if valid_595515 != nil:
    section.add "X-Amz-Signature", valid_595515
  var valid_595516 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595516 = validateParameter(valid_595516, JString, required = false,
                                 default = nil)
  if valid_595516 != nil:
    section.add "X-Amz-Content-Sha256", valid_595516
  var valid_595517 = header.getOrDefault("X-Amz-Date")
  valid_595517 = validateParameter(valid_595517, JString, required = false,
                                 default = nil)
  if valid_595517 != nil:
    section.add "X-Amz-Date", valid_595517
  var valid_595518 = header.getOrDefault("X-Amz-Credential")
  valid_595518 = validateParameter(valid_595518, JString, required = false,
                                 default = nil)
  if valid_595518 != nil:
    section.add "X-Amz-Credential", valid_595518
  var valid_595519 = header.getOrDefault("X-Amz-Security-Token")
  valid_595519 = validateParameter(valid_595519, JString, required = false,
                                 default = nil)
  if valid_595519 != nil:
    section.add "X-Amz-Security-Token", valid_595519
  var valid_595520 = header.getOrDefault("X-Amz-Algorithm")
  valid_595520 = validateParameter(valid_595520, JString, required = false,
                                 default = nil)
  if valid_595520 != nil:
    section.add "X-Amz-Algorithm", valid_595520
  var valid_595521 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595521 = validateParameter(valid_595521, JString, required = false,
                                 default = nil)
  if valid_595521 != nil:
    section.add "X-Amz-SignedHeaders", valid_595521
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `OperationId` field"
  var valid_595522 = formData.getOrDefault("OperationId")
  valid_595522 = validateParameter(valid_595522, JString, required = true,
                                 default = nil)
  if valid_595522 != nil:
    section.add "OperationId", valid_595522
  var valid_595523 = formData.getOrDefault("StackSetName")
  valid_595523 = validateParameter(valid_595523, JString, required = true,
                                 default = nil)
  if valid_595523 != nil:
    section.add "StackSetName", valid_595523
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595524: Call_PostStopStackSetOperation_595510; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_595524.validator(path, query, header, formData, body)
  let scheme = call_595524.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595524.url(scheme.get, call_595524.host, call_595524.base,
                         call_595524.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595524, url, valid)

proc call*(call_595525: Call_PostStopStackSetOperation_595510; OperationId: string;
          StackSetName: string; Action: string = "StopStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## postStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595526 = newJObject()
  var formData_595527 = newJObject()
  add(formData_595527, "OperationId", newJString(OperationId))
  add(formData_595527, "StackSetName", newJString(StackSetName))
  add(query_595526, "Action", newJString(Action))
  add(query_595526, "Version", newJString(Version))
  result = call_595525.call(nil, query_595526, nil, formData_595527, nil)

var postStopStackSetOperation* = Call_PostStopStackSetOperation_595510(
    name: "postStopStackSetOperation", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_PostStopStackSetOperation_595511, base: "/",
    url: url_PostStopStackSetOperation_595512,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetStopStackSetOperation_595493 = ref object of OpenApiRestCall_593389
proc url_GetStopStackSetOperation_595495(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetStopStackSetOperation_595494(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `OperationId` field"
  var valid_595496 = query.getOrDefault("OperationId")
  valid_595496 = validateParameter(valid_595496, JString, required = true,
                                 default = nil)
  if valid_595496 != nil:
    section.add "OperationId", valid_595496
  var valid_595497 = query.getOrDefault("StackSetName")
  valid_595497 = validateParameter(valid_595497, JString, required = true,
                                 default = nil)
  if valid_595497 != nil:
    section.add "StackSetName", valid_595497
  var valid_595498 = query.getOrDefault("Action")
  valid_595498 = validateParameter(valid_595498, JString, required = true,
                                 default = newJString("StopStackSetOperation"))
  if valid_595498 != nil:
    section.add "Action", valid_595498
  var valid_595499 = query.getOrDefault("Version")
  valid_595499 = validateParameter(valid_595499, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595499 != nil:
    section.add "Version", valid_595499
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595500 = header.getOrDefault("X-Amz-Signature")
  valid_595500 = validateParameter(valid_595500, JString, required = false,
                                 default = nil)
  if valid_595500 != nil:
    section.add "X-Amz-Signature", valid_595500
  var valid_595501 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595501 = validateParameter(valid_595501, JString, required = false,
                                 default = nil)
  if valid_595501 != nil:
    section.add "X-Amz-Content-Sha256", valid_595501
  var valid_595502 = header.getOrDefault("X-Amz-Date")
  valid_595502 = validateParameter(valid_595502, JString, required = false,
                                 default = nil)
  if valid_595502 != nil:
    section.add "X-Amz-Date", valid_595502
  var valid_595503 = header.getOrDefault("X-Amz-Credential")
  valid_595503 = validateParameter(valid_595503, JString, required = false,
                                 default = nil)
  if valid_595503 != nil:
    section.add "X-Amz-Credential", valid_595503
  var valid_595504 = header.getOrDefault("X-Amz-Security-Token")
  valid_595504 = validateParameter(valid_595504, JString, required = false,
                                 default = nil)
  if valid_595504 != nil:
    section.add "X-Amz-Security-Token", valid_595504
  var valid_595505 = header.getOrDefault("X-Amz-Algorithm")
  valid_595505 = validateParameter(valid_595505, JString, required = false,
                                 default = nil)
  if valid_595505 != nil:
    section.add "X-Amz-Algorithm", valid_595505
  var valid_595506 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595506 = validateParameter(valid_595506, JString, required = false,
                                 default = nil)
  if valid_595506 != nil:
    section.add "X-Amz-SignedHeaders", valid_595506
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595507: Call_GetStopStackSetOperation_595493; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ## 
  let valid = call_595507.validator(path, query, header, formData, body)
  let scheme = call_595507.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595507.url(scheme.get, call_595507.host, call_595507.base,
                         call_595507.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595507, url, valid)

proc call*(call_595508: Call_GetStopStackSetOperation_595493; OperationId: string;
          StackSetName: string; Action: string = "StopStackSetOperation";
          Version: string = "2010-05-15"): Recallable =
  ## getStopStackSetOperation
  ## Stops an in-progress operation on a stack set and its associated stack instances. 
  ##   OperationId: string (required)
  ##              : The ID of the stack operation. 
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to stop the operation for.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595509 = newJObject()
  add(query_595509, "OperationId", newJString(OperationId))
  add(query_595509, "StackSetName", newJString(StackSetName))
  add(query_595509, "Action", newJString(Action))
  add(query_595509, "Version", newJString(Version))
  result = call_595508.call(nil, query_595509, nil, nil, nil)

var getStopStackSetOperation* = Call_GetStopStackSetOperation_595493(
    name: "getStopStackSetOperation", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=StopStackSetOperation",
    validator: validate_GetStopStackSetOperation_595494, base: "/",
    url: url_GetStopStackSetOperation_595495, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStack_595560 = ref object of OpenApiRestCall_593389
proc url_PostUpdateStack_595562(protocol: Scheme; host: string; base: string;
                               route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStack_595561(path: JsonNode; query: JsonNode;
                                    header: JsonNode; formData: JsonNode;
                                    body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595563 = query.getOrDefault("Action")
  valid_595563 = validateParameter(valid_595563, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_595563 != nil:
    section.add "Action", valid_595563
  var valid_595564 = query.getOrDefault("Version")
  valid_595564 = validateParameter(valid_595564, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595564 != nil:
    section.add "Version", valid_595564
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595565 = header.getOrDefault("X-Amz-Signature")
  valid_595565 = validateParameter(valid_595565, JString, required = false,
                                 default = nil)
  if valid_595565 != nil:
    section.add "X-Amz-Signature", valid_595565
  var valid_595566 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595566 = validateParameter(valid_595566, JString, required = false,
                                 default = nil)
  if valid_595566 != nil:
    section.add "X-Amz-Content-Sha256", valid_595566
  var valid_595567 = header.getOrDefault("X-Amz-Date")
  valid_595567 = validateParameter(valid_595567, JString, required = false,
                                 default = nil)
  if valid_595567 != nil:
    section.add "X-Amz-Date", valid_595567
  var valid_595568 = header.getOrDefault("X-Amz-Credential")
  valid_595568 = validateParameter(valid_595568, JString, required = false,
                                 default = nil)
  if valid_595568 != nil:
    section.add "X-Amz-Credential", valid_595568
  var valid_595569 = header.getOrDefault("X-Amz-Security-Token")
  valid_595569 = validateParameter(valid_595569, JString, required = false,
                                 default = nil)
  if valid_595569 != nil:
    section.add "X-Amz-Security-Token", valid_595569
  var valid_595570 = header.getOrDefault("X-Amz-Algorithm")
  valid_595570 = validateParameter(valid_595570, JString, required = false,
                                 default = nil)
  if valid_595570 != nil:
    section.add "X-Amz-Algorithm", valid_595570
  var valid_595571 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595571 = validateParameter(valid_595571, JString, required = false,
                                 default = nil)
  if valid_595571 != nil:
    section.add "X-Amz-SignedHeaders", valid_595571
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  section = newJObject()
  var valid_595572 = formData.getOrDefault("StackPolicyDuringUpdateURL")
  valid_595572 = validateParameter(valid_595572, JString, required = false,
                                 default = nil)
  if valid_595572 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_595572
  var valid_595573 = formData.getOrDefault("StackPolicyBody")
  valid_595573 = validateParameter(valid_595573, JString, required = false,
                                 default = nil)
  if valid_595573 != nil:
    section.add "StackPolicyBody", valid_595573
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_595574 = formData.getOrDefault("StackName")
  valid_595574 = validateParameter(valid_595574, JString, required = true,
                                 default = nil)
  if valid_595574 != nil:
    section.add "StackName", valid_595574
  var valid_595575 = formData.getOrDefault("UsePreviousTemplate")
  valid_595575 = validateParameter(valid_595575, JBool, required = false, default = nil)
  if valid_595575 != nil:
    section.add "UsePreviousTemplate", valid_595575
  var valid_595576 = formData.getOrDefault("StackPolicyURL")
  valid_595576 = validateParameter(valid_595576, JString, required = false,
                                 default = nil)
  if valid_595576 != nil:
    section.add "StackPolicyURL", valid_595576
  var valid_595577 = formData.getOrDefault("TemplateURL")
  valid_595577 = validateParameter(valid_595577, JString, required = false,
                                 default = nil)
  if valid_595577 != nil:
    section.add "TemplateURL", valid_595577
  var valid_595578 = formData.getOrDefault("TemplateBody")
  valid_595578 = validateParameter(valid_595578, JString, required = false,
                                 default = nil)
  if valid_595578 != nil:
    section.add "TemplateBody", valid_595578
  var valid_595579 = formData.getOrDefault("RoleARN")
  valid_595579 = validateParameter(valid_595579, JString, required = false,
                                 default = nil)
  if valid_595579 != nil:
    section.add "RoleARN", valid_595579
  var valid_595580 = formData.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_595580 = validateParameter(valid_595580, JArray, required = false,
                                 default = nil)
  if valid_595580 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_595580
  var valid_595581 = formData.getOrDefault("NotificationARNs")
  valid_595581 = validateParameter(valid_595581, JArray, required = false,
                                 default = nil)
  if valid_595581 != nil:
    section.add "NotificationARNs", valid_595581
  var valid_595582 = formData.getOrDefault("ClientRequestToken")
  valid_595582 = validateParameter(valid_595582, JString, required = false,
                                 default = nil)
  if valid_595582 != nil:
    section.add "ClientRequestToken", valid_595582
  var valid_595583 = formData.getOrDefault("Capabilities")
  valid_595583 = validateParameter(valid_595583, JArray, required = false,
                                 default = nil)
  if valid_595583 != nil:
    section.add "Capabilities", valid_595583
  var valid_595584 = formData.getOrDefault("Tags")
  valid_595584 = validateParameter(valid_595584, JArray, required = false,
                                 default = nil)
  if valid_595584 != nil:
    section.add "Tags", valid_595584
  var valid_595585 = formData.getOrDefault("Parameters")
  valid_595585 = validateParameter(valid_595585, JArray, required = false,
                                 default = nil)
  if valid_595585 != nil:
    section.add "Parameters", valid_595585
  var valid_595586 = formData.getOrDefault("ResourceTypes")
  valid_595586 = validateParameter(valid_595586, JArray, required = false,
                                 default = nil)
  if valid_595586 != nil:
    section.add "ResourceTypes", valid_595586
  var valid_595587 = formData.getOrDefault("StackPolicyDuringUpdateBody")
  valid_595587 = validateParameter(valid_595587, JString, required = false,
                                 default = nil)
  if valid_595587 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_595587
  var valid_595588 = formData.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_595588 = validateParameter(valid_595588, JString, required = false,
                                 default = nil)
  if valid_595588 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_595588
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595589: Call_PostUpdateStack_595560; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_595589.validator(path, query, header, formData, body)
  let scheme = call_595589.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595589.url(scheme.get, call_595589.host, call_595589.base,
                         call_595589.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595589, url, valid)

proc call*(call_595590: Call_PostUpdateStack_595560; StackName: string;
          StackPolicyDuringUpdateURL: string = ""; StackPolicyBody: string = "";
          UsePreviousTemplate: bool = false; StackPolicyURL: string = "";
          TemplateURL: string = ""; TemplateBody: string = ""; RoleARN: string = "";
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          NotificationARNs: JsonNode = nil; ClientRequestToken: string = "";
          Action: string = "UpdateStack"; Capabilities: JsonNode = nil;
          Tags: JsonNode = nil; Parameters: JsonNode = nil;
          ResourceTypes: JsonNode = nil; Version: string = "2010-05-15";
          StackPolicyDuringUpdateBody: string = "";
          RollbackConfigurationMonitoringTimeInMinutes: string = ""): Recallable =
  ## postUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   Version: string (required)
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  var query_595591 = newJObject()
  var formData_595592 = newJObject()
  add(formData_595592, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(formData_595592, "StackPolicyBody", newJString(StackPolicyBody))
  add(formData_595592, "StackName", newJString(StackName))
  add(formData_595592, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(formData_595592, "StackPolicyURL", newJString(StackPolicyURL))
  add(formData_595592, "TemplateURL", newJString(TemplateURL))
  add(formData_595592, "TemplateBody", newJString(TemplateBody))
  add(formData_595592, "RoleARN", newJString(RoleARN))
  if RollbackConfigurationRollbackTriggers != nil:
    formData_595592.add "RollbackConfiguration.RollbackTriggers",
                       RollbackConfigurationRollbackTriggers
  if NotificationARNs != nil:
    formData_595592.add "NotificationARNs", NotificationARNs
  add(formData_595592, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_595591, "Action", newJString(Action))
  if Capabilities != nil:
    formData_595592.add "Capabilities", Capabilities
  if Tags != nil:
    formData_595592.add "Tags", Tags
  if Parameters != nil:
    formData_595592.add "Parameters", Parameters
  if ResourceTypes != nil:
    formData_595592.add "ResourceTypes", ResourceTypes
  add(query_595591, "Version", newJString(Version))
  add(formData_595592, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(formData_595592, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  result = call_595590.call(nil, query_595591, nil, formData_595592, nil)

var postUpdateStack* = Call_PostUpdateStack_595560(name: "postUpdateStack",
    meth: HttpMethod.HttpPost, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_PostUpdateStack_595561,
    base: "/", url: url_PostUpdateStack_595562, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStack_595528 = ref object of OpenApiRestCall_593389
proc url_GetUpdateStack_595530(protocol: Scheme; host: string; base: string;
                              route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStack_595529(path: JsonNode; query: JsonNode;
                                   header: JsonNode; formData: JsonNode;
                                   body: JsonNode): JsonNode =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfiguration.MonitoringTimeInMinutes: JString
  ##                                                : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   RollbackConfiguration.RollbackTriggers: JArray
  ##                                         : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackPolicyDuringUpdateURL: JString
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackName: JString (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyBody: JString
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   StackPolicyURL: JString
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   Action: JString (required)
  ##   StackPolicyDuringUpdateBody: JString
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ClientRequestToken: JString
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: JString
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  section = newJObject()
  var valid_595531 = query.getOrDefault("ResourceTypes")
  valid_595531 = validateParameter(valid_595531, JArray, required = false,
                                 default = nil)
  if valid_595531 != nil:
    section.add "ResourceTypes", valid_595531
  var valid_595532 = query.getOrDefault("RollbackConfiguration.MonitoringTimeInMinutes")
  valid_595532 = validateParameter(valid_595532, JString, required = false,
                                 default = nil)
  if valid_595532 != nil:
    section.add "RollbackConfiguration.MonitoringTimeInMinutes", valid_595532
  var valid_595533 = query.getOrDefault("Parameters")
  valid_595533 = validateParameter(valid_595533, JArray, required = false,
                                 default = nil)
  if valid_595533 != nil:
    section.add "Parameters", valid_595533
  var valid_595534 = query.getOrDefault("Tags")
  valid_595534 = validateParameter(valid_595534, JArray, required = false,
                                 default = nil)
  if valid_595534 != nil:
    section.add "Tags", valid_595534
  var valid_595535 = query.getOrDefault("RollbackConfiguration.RollbackTriggers")
  valid_595535 = validateParameter(valid_595535, JArray, required = false,
                                 default = nil)
  if valid_595535 != nil:
    section.add "RollbackConfiguration.RollbackTriggers", valid_595535
  var valid_595536 = query.getOrDefault("StackPolicyDuringUpdateURL")
  valid_595536 = validateParameter(valid_595536, JString, required = false,
                                 default = nil)
  if valid_595536 != nil:
    section.add "StackPolicyDuringUpdateURL", valid_595536
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_595537 = query.getOrDefault("StackName")
  valid_595537 = validateParameter(valid_595537, JString, required = true,
                                 default = nil)
  if valid_595537 != nil:
    section.add "StackName", valid_595537
  var valid_595538 = query.getOrDefault("UsePreviousTemplate")
  valid_595538 = validateParameter(valid_595538, JBool, required = false, default = nil)
  if valid_595538 != nil:
    section.add "UsePreviousTemplate", valid_595538
  var valid_595539 = query.getOrDefault("StackPolicyBody")
  valid_595539 = validateParameter(valid_595539, JString, required = false,
                                 default = nil)
  if valid_595539 != nil:
    section.add "StackPolicyBody", valid_595539
  var valid_595540 = query.getOrDefault("TemplateBody")
  valid_595540 = validateParameter(valid_595540, JString, required = false,
                                 default = nil)
  if valid_595540 != nil:
    section.add "TemplateBody", valid_595540
  var valid_595541 = query.getOrDefault("NotificationARNs")
  valid_595541 = validateParameter(valid_595541, JArray, required = false,
                                 default = nil)
  if valid_595541 != nil:
    section.add "NotificationARNs", valid_595541
  var valid_595542 = query.getOrDefault("StackPolicyURL")
  valid_595542 = validateParameter(valid_595542, JString, required = false,
                                 default = nil)
  if valid_595542 != nil:
    section.add "StackPolicyURL", valid_595542
  var valid_595543 = query.getOrDefault("Action")
  valid_595543 = validateParameter(valid_595543, JString, required = true,
                                 default = newJString("UpdateStack"))
  if valid_595543 != nil:
    section.add "Action", valid_595543
  var valid_595544 = query.getOrDefault("StackPolicyDuringUpdateBody")
  valid_595544 = validateParameter(valid_595544, JString, required = false,
                                 default = nil)
  if valid_595544 != nil:
    section.add "StackPolicyDuringUpdateBody", valid_595544
  var valid_595545 = query.getOrDefault("ClientRequestToken")
  valid_595545 = validateParameter(valid_595545, JString, required = false,
                                 default = nil)
  if valid_595545 != nil:
    section.add "ClientRequestToken", valid_595545
  var valid_595546 = query.getOrDefault("TemplateURL")
  valid_595546 = validateParameter(valid_595546, JString, required = false,
                                 default = nil)
  if valid_595546 != nil:
    section.add "TemplateURL", valid_595546
  var valid_595547 = query.getOrDefault("Version")
  valid_595547 = validateParameter(valid_595547, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595547 != nil:
    section.add "Version", valid_595547
  var valid_595548 = query.getOrDefault("Capabilities")
  valid_595548 = validateParameter(valid_595548, JArray, required = false,
                                 default = nil)
  if valid_595548 != nil:
    section.add "Capabilities", valid_595548
  var valid_595549 = query.getOrDefault("RoleARN")
  valid_595549 = validateParameter(valid_595549, JString, required = false,
                                 default = nil)
  if valid_595549 != nil:
    section.add "RoleARN", valid_595549
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595550 = header.getOrDefault("X-Amz-Signature")
  valid_595550 = validateParameter(valid_595550, JString, required = false,
                                 default = nil)
  if valid_595550 != nil:
    section.add "X-Amz-Signature", valid_595550
  var valid_595551 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595551 = validateParameter(valid_595551, JString, required = false,
                                 default = nil)
  if valid_595551 != nil:
    section.add "X-Amz-Content-Sha256", valid_595551
  var valid_595552 = header.getOrDefault("X-Amz-Date")
  valid_595552 = validateParameter(valid_595552, JString, required = false,
                                 default = nil)
  if valid_595552 != nil:
    section.add "X-Amz-Date", valid_595552
  var valid_595553 = header.getOrDefault("X-Amz-Credential")
  valid_595553 = validateParameter(valid_595553, JString, required = false,
                                 default = nil)
  if valid_595553 != nil:
    section.add "X-Amz-Credential", valid_595553
  var valid_595554 = header.getOrDefault("X-Amz-Security-Token")
  valid_595554 = validateParameter(valid_595554, JString, required = false,
                                 default = nil)
  if valid_595554 != nil:
    section.add "X-Amz-Security-Token", valid_595554
  var valid_595555 = header.getOrDefault("X-Amz-Algorithm")
  valid_595555 = validateParameter(valid_595555, JString, required = false,
                                 default = nil)
  if valid_595555 != nil:
    section.add "X-Amz-Algorithm", valid_595555
  var valid_595556 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595556 = validateParameter(valid_595556, JString, required = false,
                                 default = nil)
  if valid_595556 != nil:
    section.add "X-Amz-SignedHeaders", valid_595556
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595557: Call_GetUpdateStack_595528; path: JsonNode; query: JsonNode;
          header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ## 
  let valid = call_595557.validator(path, query, header, formData, body)
  let scheme = call_595557.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595557.url(scheme.get, call_595557.host, call_595557.base,
                         call_595557.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595557, url, valid)

proc call*(call_595558: Call_GetUpdateStack_595528; StackName: string;
          ResourceTypes: JsonNode = nil;
          RollbackConfigurationMonitoringTimeInMinutes: string = "";
          Parameters: JsonNode = nil; Tags: JsonNode = nil;
          RollbackConfigurationRollbackTriggers: JsonNode = nil;
          StackPolicyDuringUpdateURL: string = "";
          UsePreviousTemplate: bool = false; StackPolicyBody: string = "";
          TemplateBody: string = ""; NotificationARNs: JsonNode = nil;
          StackPolicyURL: string = ""; Action: string = "UpdateStack";
          StackPolicyDuringUpdateBody: string = ""; ClientRequestToken: string = "";
          TemplateURL: string = ""; Version: string = "2010-05-15";
          Capabilities: JsonNode = nil; RoleARN: string = ""): Recallable =
  ## getUpdateStack
  ## <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
  ##   ResourceTypes: JArray
  ##                : <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p>
  ##   RollbackConfigurationMonitoringTimeInMinutes: string
  ##                                               : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.</p> <p>The default is 0 minutes.</p> <p>If you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html">CancelUpdateStack</a>, for example) as necessary.</p> <p>If you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes.</p>
  ##   Parameters: JArray
  ##             : A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.
  ##   Tags: JArray
  ##       : <p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p>
  ##   RollbackConfigurationRollbackTriggers: JArray
  ##                                        : <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
  ## <p>The triggers to monitor during stack creation or update actions. </p> <p>By default, AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:</p> <ul> <li> <p>To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.</p> </li> <li> <p>To specify new or updated rollback triggers, you must specify <i>all</i> the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.</p> </li> <li> <p>To remove all currently specified triggers, specify an empty list for this parameter.</p> </li> </ul> <p>If a specified trigger is missing, the entire stack operation fails and is rolled back. </p>
  ##   StackPolicyDuringUpdateURL: string
  ##                             : <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   StackName: string (required)
  ##            : The name or unique stack ID of the stack to update.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   StackPolicyBody: string
  ##                  : <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   NotificationARNs: JArray
  ##                   : Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
  ##   StackPolicyURL: string
  ##                 : <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
  ##   Action: string (required)
  ##   StackPolicyDuringUpdateBody: string
  ##                              : <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p>
  ##   ClientRequestToken: string
  ##                     : <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p>
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul>
  ##   RoleARN: string
  ##          : <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p>
  var query_595559 = newJObject()
  if ResourceTypes != nil:
    query_595559.add "ResourceTypes", ResourceTypes
  add(query_595559, "RollbackConfiguration.MonitoringTimeInMinutes",
      newJString(RollbackConfigurationMonitoringTimeInMinutes))
  if Parameters != nil:
    query_595559.add "Parameters", Parameters
  if Tags != nil:
    query_595559.add "Tags", Tags
  if RollbackConfigurationRollbackTriggers != nil:
    query_595559.add "RollbackConfiguration.RollbackTriggers",
                    RollbackConfigurationRollbackTriggers
  add(query_595559, "StackPolicyDuringUpdateURL",
      newJString(StackPolicyDuringUpdateURL))
  add(query_595559, "StackName", newJString(StackName))
  add(query_595559, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_595559, "StackPolicyBody", newJString(StackPolicyBody))
  add(query_595559, "TemplateBody", newJString(TemplateBody))
  if NotificationARNs != nil:
    query_595559.add "NotificationARNs", NotificationARNs
  add(query_595559, "StackPolicyURL", newJString(StackPolicyURL))
  add(query_595559, "Action", newJString(Action))
  add(query_595559, "StackPolicyDuringUpdateBody",
      newJString(StackPolicyDuringUpdateBody))
  add(query_595559, "ClientRequestToken", newJString(ClientRequestToken))
  add(query_595559, "TemplateURL", newJString(TemplateURL))
  add(query_595559, "Version", newJString(Version))
  if Capabilities != nil:
    query_595559.add "Capabilities", Capabilities
  add(query_595559, "RoleARN", newJString(RoleARN))
  result = call_595558.call(nil, query_595559, nil, nil, nil)

var getUpdateStack* = Call_GetUpdateStack_595528(name: "getUpdateStack",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStack", validator: validate_GetUpdateStack_595529,
    base: "/", url: url_GetUpdateStack_595530, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackInstances_595618 = ref object of OpenApiRestCall_593389
proc url_PostUpdateStackInstances_595620(protocol: Scheme; host: string;
                                        base: string; route: string; path: JsonNode;
                                        query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackInstances_595619(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595621 = query.getOrDefault("Action")
  valid_595621 = validateParameter(valid_595621, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_595621 != nil:
    section.add "Action", valid_595621
  var valid_595622 = query.getOrDefault("Version")
  valid_595622 = validateParameter(valid_595622, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595622 != nil:
    section.add "Version", valid_595622
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595623 = header.getOrDefault("X-Amz-Signature")
  valid_595623 = validateParameter(valid_595623, JString, required = false,
                                 default = nil)
  if valid_595623 != nil:
    section.add "X-Amz-Signature", valid_595623
  var valid_595624 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595624 = validateParameter(valid_595624, JString, required = false,
                                 default = nil)
  if valid_595624 != nil:
    section.add "X-Amz-Content-Sha256", valid_595624
  var valid_595625 = header.getOrDefault("X-Amz-Date")
  valid_595625 = validateParameter(valid_595625, JString, required = false,
                                 default = nil)
  if valid_595625 != nil:
    section.add "X-Amz-Date", valid_595625
  var valid_595626 = header.getOrDefault("X-Amz-Credential")
  valid_595626 = validateParameter(valid_595626, JString, required = false,
                                 default = nil)
  if valid_595626 != nil:
    section.add "X-Amz-Credential", valid_595626
  var valid_595627 = header.getOrDefault("X-Amz-Security-Token")
  valid_595627 = validateParameter(valid_595627, JString, required = false,
                                 default = nil)
  if valid_595627 != nil:
    section.add "X-Amz-Security-Token", valid_595627
  var valid_595628 = header.getOrDefault("X-Amz-Algorithm")
  valid_595628 = validateParameter(valid_595628, JString, required = false,
                                 default = nil)
  if valid_595628 != nil:
    section.add "X-Amz-Algorithm", valid_595628
  var valid_595629 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595629 = validateParameter(valid_595629, JString, required = false,
                                 default = nil)
  if valid_595629 != nil:
    section.add "X-Amz-SignedHeaders", valid_595629
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_595630 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_595630 = validateParameter(valid_595630, JString, required = false,
                                 default = nil)
  if valid_595630 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_595630
  var valid_595631 = formData.getOrDefault("OperationId")
  valid_595631 = validateParameter(valid_595631, JString, required = false,
                                 default = nil)
  if valid_595631 != nil:
    section.add "OperationId", valid_595631
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_595632 = formData.getOrDefault("StackSetName")
  valid_595632 = validateParameter(valid_595632, JString, required = true,
                                 default = nil)
  if valid_595632 != nil:
    section.add "StackSetName", valid_595632
  var valid_595633 = formData.getOrDefault("ParameterOverrides")
  valid_595633 = validateParameter(valid_595633, JArray, required = false,
                                 default = nil)
  if valid_595633 != nil:
    section.add "ParameterOverrides", valid_595633
  var valid_595634 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_595634 = validateParameter(valid_595634, JArray, required = false,
                                 default = nil)
  if valid_595634 != nil:
    section.add "OperationPreferences.RegionOrder", valid_595634
  var valid_595635 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_595635 = validateParameter(valid_595635, JString, required = false,
                                 default = nil)
  if valid_595635 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_595635
  var valid_595636 = formData.getOrDefault("Accounts")
  valid_595636 = validateParameter(valid_595636, JArray, required = true, default = nil)
  if valid_595636 != nil:
    section.add "Accounts", valid_595636
  var valid_595637 = formData.getOrDefault("Regions")
  valid_595637 = validateParameter(valid_595637, JArray, required = true, default = nil)
  if valid_595637 != nil:
    section.add "Regions", valid_595637
  var valid_595638 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_595638 = validateParameter(valid_595638, JString, required = false,
                                 default = nil)
  if valid_595638 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_595638
  var valid_595639 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_595639 = validateParameter(valid_595639, JString, required = false,
                                 default = nil)
  if valid_595639 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_595639
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595640: Call_PostUpdateStackInstances_595618; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_595640.validator(path, query, header, formData, body)
  let scheme = call_595640.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595640.url(scheme.get, call_595640.host, call_595640.base,
                         call_595640.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595640, url, valid)

proc call*(call_595641: Call_PostUpdateStackInstances_595618; StackSetName: string;
          Accounts: JsonNode; Regions: JsonNode;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; ParameterOverrides: JsonNode = nil;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "UpdateStackInstances";
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Action: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_595642 = newJObject()
  var formData_595643 = newJObject()
  add(formData_595643, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_595643, "OperationId", newJString(OperationId))
  add(formData_595643, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    formData_595643.add "ParameterOverrides", ParameterOverrides
  if OperationPreferencesRegionOrder != nil:
    formData_595643.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_595643, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_595643.add "Accounts", Accounts
  if Regions != nil:
    formData_595643.add "Regions", Regions
  add(query_595642, "Action", newJString(Action))
  add(formData_595643, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_595642, "Version", newJString(Version))
  add(formData_595643, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_595641.call(nil, query_595642, nil, formData_595643, nil)

var postUpdateStackInstances* = Call_PostUpdateStackInstances_595618(
    name: "postUpdateStackInstances", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_PostUpdateStackInstances_595619, base: "/",
    url: url_PostUpdateStackInstances_595620, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackInstances_595593 = ref object of OpenApiRestCall_593389
proc url_GetUpdateStackInstances_595595(protocol: Scheme; host: string; base: string;
                                       route: string; path: JsonNode;
                                       query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackInstances_595594(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: JString (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Version: JString (required)
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_595596 = query.getOrDefault("OperationId")
  valid_595596 = validateParameter(valid_595596, JString, required = false,
                                 default = nil)
  if valid_595596 != nil:
    section.add "OperationId", valid_595596
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_595597 = query.getOrDefault("StackSetName")
  valid_595597 = validateParameter(valid_595597, JString, required = true,
                                 default = nil)
  if valid_595597 != nil:
    section.add "StackSetName", valid_595597
  var valid_595598 = query.getOrDefault("ParameterOverrides")
  valid_595598 = validateParameter(valid_595598, JArray, required = false,
                                 default = nil)
  if valid_595598 != nil:
    section.add "ParameterOverrides", valid_595598
  var valid_595599 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_595599 = validateParameter(valid_595599, JString, required = false,
                                 default = nil)
  if valid_595599 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_595599
  var valid_595600 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_595600 = validateParameter(valid_595600, JString, required = false,
                                 default = nil)
  if valid_595600 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_595600
  var valid_595601 = query.getOrDefault("Action")
  valid_595601 = validateParameter(valid_595601, JString, required = true,
                                 default = newJString("UpdateStackInstances"))
  if valid_595601 != nil:
    section.add "Action", valid_595601
  var valid_595602 = query.getOrDefault("Regions")
  valid_595602 = validateParameter(valid_595602, JArray, required = true, default = nil)
  if valid_595602 != nil:
    section.add "Regions", valid_595602
  var valid_595603 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_595603 = validateParameter(valid_595603, JArray, required = false,
                                 default = nil)
  if valid_595603 != nil:
    section.add "OperationPreferences.RegionOrder", valid_595603
  var valid_595604 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_595604 = validateParameter(valid_595604, JString, required = false,
                                 default = nil)
  if valid_595604 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_595604
  var valid_595605 = query.getOrDefault("Accounts")
  valid_595605 = validateParameter(valid_595605, JArray, required = true, default = nil)
  if valid_595605 != nil:
    section.add "Accounts", valid_595605
  var valid_595606 = query.getOrDefault("Version")
  valid_595606 = validateParameter(valid_595606, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595606 != nil:
    section.add "Version", valid_595606
  var valid_595607 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_595607 = validateParameter(valid_595607, JString, required = false,
                                 default = nil)
  if valid_595607 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_595607
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595608 = header.getOrDefault("X-Amz-Signature")
  valid_595608 = validateParameter(valid_595608, JString, required = false,
                                 default = nil)
  if valid_595608 != nil:
    section.add "X-Amz-Signature", valid_595608
  var valid_595609 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595609 = validateParameter(valid_595609, JString, required = false,
                                 default = nil)
  if valid_595609 != nil:
    section.add "X-Amz-Content-Sha256", valid_595609
  var valid_595610 = header.getOrDefault("X-Amz-Date")
  valid_595610 = validateParameter(valid_595610, JString, required = false,
                                 default = nil)
  if valid_595610 != nil:
    section.add "X-Amz-Date", valid_595610
  var valid_595611 = header.getOrDefault("X-Amz-Credential")
  valid_595611 = validateParameter(valid_595611, JString, required = false,
                                 default = nil)
  if valid_595611 != nil:
    section.add "X-Amz-Credential", valid_595611
  var valid_595612 = header.getOrDefault("X-Amz-Security-Token")
  valid_595612 = validateParameter(valid_595612, JString, required = false,
                                 default = nil)
  if valid_595612 != nil:
    section.add "X-Amz-Security-Token", valid_595612
  var valid_595613 = header.getOrDefault("X-Amz-Algorithm")
  valid_595613 = validateParameter(valid_595613, JString, required = false,
                                 default = nil)
  if valid_595613 != nil:
    section.add "X-Amz-Algorithm", valid_595613
  var valid_595614 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595614 = validateParameter(valid_595614, JString, required = false,
                                 default = nil)
  if valid_595614 != nil:
    section.add "X-Amz-SignedHeaders", valid_595614
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595615: Call_GetUpdateStackInstances_595593; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ## 
  let valid = call_595615.validator(path, query, header, formData, body)
  let scheme = call_595615.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595615.url(scheme.get, call_595615.host, call_595615.base,
                         call_595615.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595615, url, valid)

proc call*(call_595616: Call_GetUpdateStackInstances_595593; StackSetName: string;
          Regions: JsonNode; Accounts: JsonNode; OperationId: string = "";
          ParameterOverrides: JsonNode = nil;
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          Action: string = "UpdateStackInstances";
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Version: string = "2010-05-15";
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getUpdateStackInstances
  ## <p>Updates the parameter values for stack instances for the specified accounts, within the specified regions. A stack instance refers to a stack in a specific account and region. </p> <p>You can only update stack instances in regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationId: string
  ##              : <p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set associated with the stack instances.
  ##   ParameterOverrides: JArray
  ##                     : <p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Action: string (required)
  ##   Regions: JArray (required)
  ##          : The names of one or more regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Accounts: JArray (required)
  ##           : The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and regions.
  ##   Version: string (required)
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_595617 = newJObject()
  add(query_595617, "OperationId", newJString(OperationId))
  add(query_595617, "StackSetName", newJString(StackSetName))
  if ParameterOverrides != nil:
    query_595617.add "ParameterOverrides", ParameterOverrides
  add(query_595617, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_595617, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_595617, "Action", newJString(Action))
  if Regions != nil:
    query_595617.add "Regions", Regions
  if OperationPreferencesRegionOrder != nil:
    query_595617.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_595617, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Accounts != nil:
    query_595617.add "Accounts", Accounts
  add(query_595617, "Version", newJString(Version))
  add(query_595617, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_595616.call(nil, query_595617, nil, nil, nil)

var getUpdateStackInstances* = Call_GetUpdateStackInstances_595593(
    name: "getUpdateStackInstances", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackInstances",
    validator: validate_GetUpdateStackInstances_595594, base: "/",
    url: url_GetUpdateStackInstances_595595, schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateStackSet_595677 = ref object of OpenApiRestCall_593389
proc url_PostUpdateStackSet_595679(protocol: Scheme; host: string; base: string;
                                  route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateStackSet_595678(path: JsonNode; query: JsonNode;
                                       header: JsonNode; formData: JsonNode;
                                       body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595680 = query.getOrDefault("Action")
  valid_595680 = validateParameter(valid_595680, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_595680 != nil:
    section.add "Action", valid_595680
  var valid_595681 = query.getOrDefault("Version")
  valid_595681 = validateParameter(valid_595681, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595681 != nil:
    section.add "Version", valid_595681
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595682 = header.getOrDefault("X-Amz-Signature")
  valid_595682 = validateParameter(valid_595682, JString, required = false,
                                 default = nil)
  if valid_595682 != nil:
    section.add "X-Amz-Signature", valid_595682
  var valid_595683 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595683 = validateParameter(valid_595683, JString, required = false,
                                 default = nil)
  if valid_595683 != nil:
    section.add "X-Amz-Content-Sha256", valid_595683
  var valid_595684 = header.getOrDefault("X-Amz-Date")
  valid_595684 = validateParameter(valid_595684, JString, required = false,
                                 default = nil)
  if valid_595684 != nil:
    section.add "X-Amz-Date", valid_595684
  var valid_595685 = header.getOrDefault("X-Amz-Credential")
  valid_595685 = validateParameter(valid_595685, JString, required = false,
                                 default = nil)
  if valid_595685 != nil:
    section.add "X-Amz-Credential", valid_595685
  var valid_595686 = header.getOrDefault("X-Amz-Security-Token")
  valid_595686 = validateParameter(valid_595686, JString, required = false,
                                 default = nil)
  if valid_595686 != nil:
    section.add "X-Amz-Security-Token", valid_595686
  var valid_595687 = header.getOrDefault("X-Amz-Algorithm")
  valid_595687 = validateParameter(valid_595687, JString, required = false,
                                 default = nil)
  if valid_595687 != nil:
    section.add "X-Amz-Algorithm", valid_595687
  var valid_595688 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595688 = validateParameter(valid_595688, JString, required = false,
                                 default = nil)
  if valid_595688 != nil:
    section.add "X-Amz-SignedHeaders", valid_595688
  result.add "header", section
  ## parameters in `formData` object:
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_595689 = formData.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_595689 = validateParameter(valid_595689, JString, required = false,
                                 default = nil)
  if valid_595689 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_595689
  var valid_595690 = formData.getOrDefault("OperationId")
  valid_595690 = validateParameter(valid_595690, JString, required = false,
                                 default = nil)
  if valid_595690 != nil:
    section.add "OperationId", valid_595690
  assert formData != nil,
        "formData argument is necessary due to required `StackSetName` field"
  var valid_595691 = formData.getOrDefault("StackSetName")
  valid_595691 = validateParameter(valid_595691, JString, required = true,
                                 default = nil)
  if valid_595691 != nil:
    section.add "StackSetName", valid_595691
  var valid_595692 = formData.getOrDefault("AdministrationRoleARN")
  valid_595692 = validateParameter(valid_595692, JString, required = false,
                                 default = nil)
  if valid_595692 != nil:
    section.add "AdministrationRoleARN", valid_595692
  var valid_595693 = formData.getOrDefault("Description")
  valid_595693 = validateParameter(valid_595693, JString, required = false,
                                 default = nil)
  if valid_595693 != nil:
    section.add "Description", valid_595693
  var valid_595694 = formData.getOrDefault("UsePreviousTemplate")
  valid_595694 = validateParameter(valid_595694, JBool, required = false, default = nil)
  if valid_595694 != nil:
    section.add "UsePreviousTemplate", valid_595694
  var valid_595695 = formData.getOrDefault("OperationPreferences.RegionOrder")
  valid_595695 = validateParameter(valid_595695, JArray, required = false,
                                 default = nil)
  if valid_595695 != nil:
    section.add "OperationPreferences.RegionOrder", valid_595695
  var valid_595696 = formData.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_595696 = validateParameter(valid_595696, JString, required = false,
                                 default = nil)
  if valid_595696 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_595696
  var valid_595697 = formData.getOrDefault("Accounts")
  valid_595697 = validateParameter(valid_595697, JArray, required = false,
                                 default = nil)
  if valid_595697 != nil:
    section.add "Accounts", valid_595697
  var valid_595698 = formData.getOrDefault("TemplateURL")
  valid_595698 = validateParameter(valid_595698, JString, required = false,
                                 default = nil)
  if valid_595698 != nil:
    section.add "TemplateURL", valid_595698
  var valid_595699 = formData.getOrDefault("Regions")
  valid_595699 = validateParameter(valid_595699, JArray, required = false,
                                 default = nil)
  if valid_595699 != nil:
    section.add "Regions", valid_595699
  var valid_595700 = formData.getOrDefault("TemplateBody")
  valid_595700 = validateParameter(valid_595700, JString, required = false,
                                 default = nil)
  if valid_595700 != nil:
    section.add "TemplateBody", valid_595700
  var valid_595701 = formData.getOrDefault("Capabilities")
  valid_595701 = validateParameter(valid_595701, JArray, required = false,
                                 default = nil)
  if valid_595701 != nil:
    section.add "Capabilities", valid_595701
  var valid_595702 = formData.getOrDefault("Tags")
  valid_595702 = validateParameter(valid_595702, JArray, required = false,
                                 default = nil)
  if valid_595702 != nil:
    section.add "Tags", valid_595702
  var valid_595703 = formData.getOrDefault("Parameters")
  valid_595703 = validateParameter(valid_595703, JArray, required = false,
                                 default = nil)
  if valid_595703 != nil:
    section.add "Parameters", valid_595703
  var valid_595704 = formData.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_595704 = validateParameter(valid_595704, JString, required = false,
                                 default = nil)
  if valid_595704 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_595704
  var valid_595705 = formData.getOrDefault("ExecutionRoleName")
  valid_595705 = validateParameter(valid_595705, JString, required = false,
                                 default = nil)
  if valid_595705 != nil:
    section.add "ExecutionRoleName", valid_595705
  var valid_595706 = formData.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_595706 = validateParameter(valid_595706, JString, required = false,
                                 default = nil)
  if valid_595706 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_595706
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595707: Call_PostUpdateStackSet_595677; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_595707.validator(path, query, header, formData, body)
  let scheme = call_595707.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595707.url(scheme.get, call_595707.host, call_595707.base,
                         call_595707.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595707, url, valid)

proc call*(call_595708: Call_PostUpdateStackSet_595677; StackSetName: string;
          OperationPreferencesFailureTolerancePercentage: string = "";
          OperationId: string = ""; AdministrationRoleARN: string = "";
          Description: string = ""; UsePreviousTemplate: bool = false;
          OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureToleranceCount: string = "";
          Accounts: JsonNode = nil; TemplateURL: string = ""; Regions: JsonNode = nil;
          TemplateBody: string = ""; Action: string = "UpdateStackSet";
          Capabilities: JsonNode = nil; Tags: JsonNode = nil;
          Parameters: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = "";
          Version: string = "2010-05-15"; ExecutionRoleName: string = "";
          OperationPreferencesMaxConcurrentCount: string = ""): Recallable =
  ## postUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   Action: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   Version: string (required)
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_595709 = newJObject()
  var formData_595710 = newJObject()
  add(formData_595710, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  add(formData_595710, "OperationId", newJString(OperationId))
  add(formData_595710, "StackSetName", newJString(StackSetName))
  add(formData_595710, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(formData_595710, "Description", newJString(Description))
  add(formData_595710, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  if OperationPreferencesRegionOrder != nil:
    formData_595710.add "OperationPreferences.RegionOrder",
                       OperationPreferencesRegionOrder
  add(formData_595710, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  if Accounts != nil:
    formData_595710.add "Accounts", Accounts
  add(formData_595710, "TemplateURL", newJString(TemplateURL))
  if Regions != nil:
    formData_595710.add "Regions", Regions
  add(formData_595710, "TemplateBody", newJString(TemplateBody))
  add(query_595709, "Action", newJString(Action))
  if Capabilities != nil:
    formData_595710.add "Capabilities", Capabilities
  if Tags != nil:
    formData_595710.add "Tags", Tags
  if Parameters != nil:
    formData_595710.add "Parameters", Parameters
  add(formData_595710, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  add(query_595709, "Version", newJString(Version))
  add(formData_595710, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(formData_595710, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  result = call_595708.call(nil, query_595709, nil, formData_595710, nil)

var postUpdateStackSet* = Call_PostUpdateStackSet_595677(
    name: "postUpdateStackSet", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=UpdateStackSet",
    validator: validate_PostUpdateStackSet_595678, base: "/",
    url: url_PostUpdateStackSet_595679, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateStackSet_595644 = ref object of OpenApiRestCall_593389
proc url_GetUpdateStackSet_595646(protocol: Scheme; host: string; base: string;
                                 route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateStackSet_595645(path: JsonNode; query: JsonNode;
                                      header: JsonNode; formData: JsonNode;
                                      body: JsonNode): JsonNode =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   OperationId: JString
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: JString (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   ExecutionRoleName: JString
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: JBool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   TemplateBody: JString
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationPreferences.MaxConcurrentCount: JString
  ##                                          : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferences.FailureToleranceCount: JString
  ##                                             : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   AdministrationRoleARN: JString
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Action: JString (required)
  ##   Description: JString
  ##              : A brief description of updates that you are making.
  ##   OperationPreferences.RegionOrder: JArray
  ##                                   : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferences.FailureTolerancePercentage: JString
  ##                                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: JString
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   Version: JString (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferences.MaxConcurrentPercentage: JString
  ##                                               : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  section = newJObject()
  var valid_595647 = query.getOrDefault("OperationId")
  valid_595647 = validateParameter(valid_595647, JString, required = false,
                                 default = nil)
  if valid_595647 != nil:
    section.add "OperationId", valid_595647
  assert query != nil,
        "query argument is necessary due to required `StackSetName` field"
  var valid_595648 = query.getOrDefault("StackSetName")
  valid_595648 = validateParameter(valid_595648, JString, required = true,
                                 default = nil)
  if valid_595648 != nil:
    section.add "StackSetName", valid_595648
  var valid_595649 = query.getOrDefault("Parameters")
  valid_595649 = validateParameter(valid_595649, JArray, required = false,
                                 default = nil)
  if valid_595649 != nil:
    section.add "Parameters", valid_595649
  var valid_595650 = query.getOrDefault("Tags")
  valid_595650 = validateParameter(valid_595650, JArray, required = false,
                                 default = nil)
  if valid_595650 != nil:
    section.add "Tags", valid_595650
  var valid_595651 = query.getOrDefault("ExecutionRoleName")
  valid_595651 = validateParameter(valid_595651, JString, required = false,
                                 default = nil)
  if valid_595651 != nil:
    section.add "ExecutionRoleName", valid_595651
  var valid_595652 = query.getOrDefault("UsePreviousTemplate")
  valid_595652 = validateParameter(valid_595652, JBool, required = false, default = nil)
  if valid_595652 != nil:
    section.add "UsePreviousTemplate", valid_595652
  var valid_595653 = query.getOrDefault("TemplateBody")
  valid_595653 = validateParameter(valid_595653, JString, required = false,
                                 default = nil)
  if valid_595653 != nil:
    section.add "TemplateBody", valid_595653
  var valid_595654 = query.getOrDefault("OperationPreferences.MaxConcurrentCount")
  valid_595654 = validateParameter(valid_595654, JString, required = false,
                                 default = nil)
  if valid_595654 != nil:
    section.add "OperationPreferences.MaxConcurrentCount", valid_595654
  var valid_595655 = query.getOrDefault("OperationPreferences.FailureToleranceCount")
  valid_595655 = validateParameter(valid_595655, JString, required = false,
                                 default = nil)
  if valid_595655 != nil:
    section.add "OperationPreferences.FailureToleranceCount", valid_595655
  var valid_595656 = query.getOrDefault("AdministrationRoleARN")
  valid_595656 = validateParameter(valid_595656, JString, required = false,
                                 default = nil)
  if valid_595656 != nil:
    section.add "AdministrationRoleARN", valid_595656
  var valid_595657 = query.getOrDefault("Action")
  valid_595657 = validateParameter(valid_595657, JString, required = true,
                                 default = newJString("UpdateStackSet"))
  if valid_595657 != nil:
    section.add "Action", valid_595657
  var valid_595658 = query.getOrDefault("Description")
  valid_595658 = validateParameter(valid_595658, JString, required = false,
                                 default = nil)
  if valid_595658 != nil:
    section.add "Description", valid_595658
  var valid_595659 = query.getOrDefault("OperationPreferences.RegionOrder")
  valid_595659 = validateParameter(valid_595659, JArray, required = false,
                                 default = nil)
  if valid_595659 != nil:
    section.add "OperationPreferences.RegionOrder", valid_595659
  var valid_595660 = query.getOrDefault("OperationPreferences.FailureTolerancePercentage")
  valid_595660 = validateParameter(valid_595660, JString, required = false,
                                 default = nil)
  if valid_595660 != nil:
    section.add "OperationPreferences.FailureTolerancePercentage", valid_595660
  var valid_595661 = query.getOrDefault("Regions")
  valid_595661 = validateParameter(valid_595661, JArray, required = false,
                                 default = nil)
  if valid_595661 != nil:
    section.add "Regions", valid_595661
  var valid_595662 = query.getOrDefault("TemplateURL")
  valid_595662 = validateParameter(valid_595662, JString, required = false,
                                 default = nil)
  if valid_595662 != nil:
    section.add "TemplateURL", valid_595662
  var valid_595663 = query.getOrDefault("Accounts")
  valid_595663 = validateParameter(valid_595663, JArray, required = false,
                                 default = nil)
  if valid_595663 != nil:
    section.add "Accounts", valid_595663
  var valid_595664 = query.getOrDefault("Version")
  valid_595664 = validateParameter(valid_595664, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595664 != nil:
    section.add "Version", valid_595664
  var valid_595665 = query.getOrDefault("Capabilities")
  valid_595665 = validateParameter(valid_595665, JArray, required = false,
                                 default = nil)
  if valid_595665 != nil:
    section.add "Capabilities", valid_595665
  var valid_595666 = query.getOrDefault("OperationPreferences.MaxConcurrentPercentage")
  valid_595666 = validateParameter(valid_595666, JString, required = false,
                                 default = nil)
  if valid_595666 != nil:
    section.add "OperationPreferences.MaxConcurrentPercentage", valid_595666
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595667 = header.getOrDefault("X-Amz-Signature")
  valid_595667 = validateParameter(valid_595667, JString, required = false,
                                 default = nil)
  if valid_595667 != nil:
    section.add "X-Amz-Signature", valid_595667
  var valid_595668 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595668 = validateParameter(valid_595668, JString, required = false,
                                 default = nil)
  if valid_595668 != nil:
    section.add "X-Amz-Content-Sha256", valid_595668
  var valid_595669 = header.getOrDefault("X-Amz-Date")
  valid_595669 = validateParameter(valid_595669, JString, required = false,
                                 default = nil)
  if valid_595669 != nil:
    section.add "X-Amz-Date", valid_595669
  var valid_595670 = header.getOrDefault("X-Amz-Credential")
  valid_595670 = validateParameter(valid_595670, JString, required = false,
                                 default = nil)
  if valid_595670 != nil:
    section.add "X-Amz-Credential", valid_595670
  var valid_595671 = header.getOrDefault("X-Amz-Security-Token")
  valid_595671 = validateParameter(valid_595671, JString, required = false,
                                 default = nil)
  if valid_595671 != nil:
    section.add "X-Amz-Security-Token", valid_595671
  var valid_595672 = header.getOrDefault("X-Amz-Algorithm")
  valid_595672 = validateParameter(valid_595672, JString, required = false,
                                 default = nil)
  if valid_595672 != nil:
    section.add "X-Amz-Algorithm", valid_595672
  var valid_595673 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595673 = validateParameter(valid_595673, JString, required = false,
                                 default = nil)
  if valid_595673 != nil:
    section.add "X-Amz-SignedHeaders", valid_595673
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595674: Call_GetUpdateStackSet_595644; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ## 
  let valid = call_595674.validator(path, query, header, formData, body)
  let scheme = call_595674.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595674.url(scheme.get, call_595674.host, call_595674.base,
                         call_595674.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595674, url, valid)

proc call*(call_595675: Call_GetUpdateStackSet_595644; StackSetName: string;
          OperationId: string = ""; Parameters: JsonNode = nil; Tags: JsonNode = nil;
          ExecutionRoleName: string = ""; UsePreviousTemplate: bool = false;
          TemplateBody: string = "";
          OperationPreferencesMaxConcurrentCount: string = "";
          OperationPreferencesFailureToleranceCount: string = "";
          AdministrationRoleARN: string = ""; Action: string = "UpdateStackSet";
          Description: string = ""; OperationPreferencesRegionOrder: JsonNode = nil;
          OperationPreferencesFailureTolerancePercentage: string = "";
          Regions: JsonNode = nil; TemplateURL: string = ""; Accounts: JsonNode = nil;
          Version: string = "2010-05-15"; Capabilities: JsonNode = nil;
          OperationPreferencesMaxConcurrentPercentage: string = ""): Recallable =
  ## getUpdateStackSet
  ## <p>Updates the stack set, and associated stack instances in the specified accounts and regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
  ##   OperationId: string
  ##              : <p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p>
  ##   StackSetName: string (required)
  ##               : The name or unique ID of the stack set that you want to update.
  ##   Parameters: JArray
  ##             : A list of input parameters for the stack set template. 
  ##   Tags: JArray
  ##       : <p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
  ##   ExecutionRoleName: string
  ##                    : <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
  ##   UsePreviousTemplate: bool
  ##                      : <p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   TemplateBody: string
  ##               : <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
  ##   OperationPreferencesMaxConcurrentCount: string
  ##                                         : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>—<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code> .</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  ##   OperationPreferencesFailureToleranceCount: string
  ##                                            : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The number of accounts, per region, for which this operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p>
  ##   AdministrationRoleARN: string
  ##                        : <p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
  ##   Action: string (required)
  ##   Description: string
  ##              : A brief description of updates that you are making.
  ##   OperationPreferencesRegionOrder: JArray
  ##                                  : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## The order of the regions in where you want to perform the stack operation.
  ##   OperationPreferencesFailureTolerancePercentage: string
  ##                                                 : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The percentage of accounts, per region, for which this stack operation can fail before AWS CloudFormation stops the operation in that region. If the operation is stopped in a region, AWS CloudFormation doesn't attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p>
  ##   Regions: JArray
  ##          : <p>The regions in which to update associated stack instances. If you specify regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   TemplateURL: string
  ##              : <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p>
  ##   Accounts: JArray
  ##           : <p>The accounts in which to update associated stack instances. If you specify accounts, you must also specify the regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and regions, while leaving all other stack instances with their existing stack instance status. </p>
  ##   Version: string (required)
  ##   Capabilities: JArray
  ##               : <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a 
  ## href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul>
  ##   OperationPreferencesMaxConcurrentPercentage: string
  ##                                              : <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
  ## <p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p>
  var query_595676 = newJObject()
  add(query_595676, "OperationId", newJString(OperationId))
  add(query_595676, "StackSetName", newJString(StackSetName))
  if Parameters != nil:
    query_595676.add "Parameters", Parameters
  if Tags != nil:
    query_595676.add "Tags", Tags
  add(query_595676, "ExecutionRoleName", newJString(ExecutionRoleName))
  add(query_595676, "UsePreviousTemplate", newJBool(UsePreviousTemplate))
  add(query_595676, "TemplateBody", newJString(TemplateBody))
  add(query_595676, "OperationPreferences.MaxConcurrentCount",
      newJString(OperationPreferencesMaxConcurrentCount))
  add(query_595676, "OperationPreferences.FailureToleranceCount",
      newJString(OperationPreferencesFailureToleranceCount))
  add(query_595676, "AdministrationRoleARN", newJString(AdministrationRoleARN))
  add(query_595676, "Action", newJString(Action))
  add(query_595676, "Description", newJString(Description))
  if OperationPreferencesRegionOrder != nil:
    query_595676.add "OperationPreferences.RegionOrder",
                    OperationPreferencesRegionOrder
  add(query_595676, "OperationPreferences.FailureTolerancePercentage",
      newJString(OperationPreferencesFailureTolerancePercentage))
  if Regions != nil:
    query_595676.add "Regions", Regions
  add(query_595676, "TemplateURL", newJString(TemplateURL))
  if Accounts != nil:
    query_595676.add "Accounts", Accounts
  add(query_595676, "Version", newJString(Version))
  if Capabilities != nil:
    query_595676.add "Capabilities", Capabilities
  add(query_595676, "OperationPreferences.MaxConcurrentPercentage",
      newJString(OperationPreferencesMaxConcurrentPercentage))
  result = call_595675.call(nil, query_595676, nil, nil, nil)

var getUpdateStackSet* = Call_GetUpdateStackSet_595644(name: "getUpdateStackSet",
    meth: HttpMethod.HttpGet, host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateStackSet", validator: validate_GetUpdateStackSet_595645,
    base: "/", url: url_GetUpdateStackSet_595646,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostUpdateTerminationProtection_595728 = ref object of OpenApiRestCall_593389
proc url_PostUpdateTerminationProtection_595730(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostUpdateTerminationProtection_595729(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595731 = query.getOrDefault("Action")
  valid_595731 = validateParameter(valid_595731, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_595731 != nil:
    section.add "Action", valid_595731
  var valid_595732 = query.getOrDefault("Version")
  valid_595732 = validateParameter(valid_595732, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595732 != nil:
    section.add "Version", valid_595732
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595733 = header.getOrDefault("X-Amz-Signature")
  valid_595733 = validateParameter(valid_595733, JString, required = false,
                                 default = nil)
  if valid_595733 != nil:
    section.add "X-Amz-Signature", valid_595733
  var valid_595734 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595734 = validateParameter(valid_595734, JString, required = false,
                                 default = nil)
  if valid_595734 != nil:
    section.add "X-Amz-Content-Sha256", valid_595734
  var valid_595735 = header.getOrDefault("X-Amz-Date")
  valid_595735 = validateParameter(valid_595735, JString, required = false,
                                 default = nil)
  if valid_595735 != nil:
    section.add "X-Amz-Date", valid_595735
  var valid_595736 = header.getOrDefault("X-Amz-Credential")
  valid_595736 = validateParameter(valid_595736, JString, required = false,
                                 default = nil)
  if valid_595736 != nil:
    section.add "X-Amz-Credential", valid_595736
  var valid_595737 = header.getOrDefault("X-Amz-Security-Token")
  valid_595737 = validateParameter(valid_595737, JString, required = false,
                                 default = nil)
  if valid_595737 != nil:
    section.add "X-Amz-Security-Token", valid_595737
  var valid_595738 = header.getOrDefault("X-Amz-Algorithm")
  valid_595738 = validateParameter(valid_595738, JString, required = false,
                                 default = nil)
  if valid_595738 != nil:
    section.add "X-Amz-Algorithm", valid_595738
  var valid_595739 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595739 = validateParameter(valid_595739, JString, required = false,
                                 default = nil)
  if valid_595739 != nil:
    section.add "X-Amz-SignedHeaders", valid_595739
  result.add "header", section
  ## parameters in `formData` object:
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  section = newJObject()
  assert formData != nil,
        "formData argument is necessary due to required `StackName` field"
  var valid_595740 = formData.getOrDefault("StackName")
  valid_595740 = validateParameter(valid_595740, JString, required = true,
                                 default = nil)
  if valid_595740 != nil:
    section.add "StackName", valid_595740
  var valid_595741 = formData.getOrDefault("EnableTerminationProtection")
  valid_595741 = validateParameter(valid_595741, JBool, required = true, default = nil)
  if valid_595741 != nil:
    section.add "EnableTerminationProtection", valid_595741
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595742: Call_PostUpdateTerminationProtection_595728;
          path: JsonNode; query: JsonNode; header: JsonNode; formData: JsonNode;
          body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_595742.validator(path, query, header, formData, body)
  let scheme = call_595742.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595742.url(scheme.get, call_595742.host, call_595742.base,
                         call_595742.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595742, url, valid)

proc call*(call_595743: Call_PostUpdateTerminationProtection_595728;
          StackName: string; EnableTerminationProtection: bool;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## postUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595744 = newJObject()
  var formData_595745 = newJObject()
  add(formData_595745, "StackName", newJString(StackName))
  add(formData_595745, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_595744, "Action", newJString(Action))
  add(query_595744, "Version", newJString(Version))
  result = call_595743.call(nil, query_595744, nil, formData_595745, nil)

var postUpdateTerminationProtection* = Call_PostUpdateTerminationProtection_595728(
    name: "postUpdateTerminationProtection", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_PostUpdateTerminationProtection_595729, base: "/",
    url: url_PostUpdateTerminationProtection_595730,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetUpdateTerminationProtection_595711 = ref object of OpenApiRestCall_593389
proc url_GetUpdateTerminationProtection_595713(protocol: Scheme; host: string;
    base: string; route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetUpdateTerminationProtection_595712(path: JsonNode;
    query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   StackName: JString (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: JBool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil,
        "query argument is necessary due to required `StackName` field"
  var valid_595714 = query.getOrDefault("StackName")
  valid_595714 = validateParameter(valid_595714, JString, required = true,
                                 default = nil)
  if valid_595714 != nil:
    section.add "StackName", valid_595714
  var valid_595715 = query.getOrDefault("EnableTerminationProtection")
  valid_595715 = validateParameter(valid_595715, JBool, required = true, default = nil)
  if valid_595715 != nil:
    section.add "EnableTerminationProtection", valid_595715
  var valid_595716 = query.getOrDefault("Action")
  valid_595716 = validateParameter(valid_595716, JString, required = true, default = newJString(
      "UpdateTerminationProtection"))
  if valid_595716 != nil:
    section.add "Action", valid_595716
  var valid_595717 = query.getOrDefault("Version")
  valid_595717 = validateParameter(valid_595717, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595717 != nil:
    section.add "Version", valid_595717
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595718 = header.getOrDefault("X-Amz-Signature")
  valid_595718 = validateParameter(valid_595718, JString, required = false,
                                 default = nil)
  if valid_595718 != nil:
    section.add "X-Amz-Signature", valid_595718
  var valid_595719 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595719 = validateParameter(valid_595719, JString, required = false,
                                 default = nil)
  if valid_595719 != nil:
    section.add "X-Amz-Content-Sha256", valid_595719
  var valid_595720 = header.getOrDefault("X-Amz-Date")
  valid_595720 = validateParameter(valid_595720, JString, required = false,
                                 default = nil)
  if valid_595720 != nil:
    section.add "X-Amz-Date", valid_595720
  var valid_595721 = header.getOrDefault("X-Amz-Credential")
  valid_595721 = validateParameter(valid_595721, JString, required = false,
                                 default = nil)
  if valid_595721 != nil:
    section.add "X-Amz-Credential", valid_595721
  var valid_595722 = header.getOrDefault("X-Amz-Security-Token")
  valid_595722 = validateParameter(valid_595722, JString, required = false,
                                 default = nil)
  if valid_595722 != nil:
    section.add "X-Amz-Security-Token", valid_595722
  var valid_595723 = header.getOrDefault("X-Amz-Algorithm")
  valid_595723 = validateParameter(valid_595723, JString, required = false,
                                 default = nil)
  if valid_595723 != nil:
    section.add "X-Amz-Algorithm", valid_595723
  var valid_595724 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595724 = validateParameter(valid_595724, JString, required = false,
                                 default = nil)
  if valid_595724 != nil:
    section.add "X-Amz-SignedHeaders", valid_595724
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595725: Call_GetUpdateTerminationProtection_595711; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ## 
  let valid = call_595725.validator(path, query, header, formData, body)
  let scheme = call_595725.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595725.url(scheme.get, call_595725.host, call_595725.base,
                         call_595725.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595725, url, valid)

proc call*(call_595726: Call_GetUpdateTerminationProtection_595711;
          StackName: string; EnableTerminationProtection: bool;
          Action: string = "UpdateTerminationProtection";
          Version: string = "2010-05-15"): Recallable =
  ## getUpdateTerminationProtection
  ## <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
  ##   StackName: string (required)
  ##            : The name or unique ID of the stack for which you want to set termination protection.
  ##   EnableTerminationProtection: bool (required)
  ##                              : Whether to enable termination protection on the specified stack.
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595727 = newJObject()
  add(query_595727, "StackName", newJString(StackName))
  add(query_595727, "EnableTerminationProtection",
      newJBool(EnableTerminationProtection))
  add(query_595727, "Action", newJString(Action))
  add(query_595727, "Version", newJString(Version))
  result = call_595726.call(nil, query_595727, nil, nil, nil)

var getUpdateTerminationProtection* = Call_GetUpdateTerminationProtection_595711(
    name: "getUpdateTerminationProtection", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com",
    route: "/#Action=UpdateTerminationProtection",
    validator: validate_GetUpdateTerminationProtection_595712, base: "/",
    url: url_GetUpdateTerminationProtection_595713,
    schemes: {Scheme.Https, Scheme.Http})
type
  Call_PostValidateTemplate_595763 = ref object of OpenApiRestCall_593389
proc url_PostValidateTemplate_595765(protocol: Scheme; host: string; base: string;
                                    route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_PostValidateTemplate_595764(path: JsonNode; query: JsonNode;
    header: JsonNode; formData: JsonNode; body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   Action: JString (required)
  ##   Version: JString (required)
  section = newJObject()
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595766 = query.getOrDefault("Action")
  valid_595766 = validateParameter(valid_595766, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_595766 != nil:
    section.add "Action", valid_595766
  var valid_595767 = query.getOrDefault("Version")
  valid_595767 = validateParameter(valid_595767, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595767 != nil:
    section.add "Version", valid_595767
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595768 = header.getOrDefault("X-Amz-Signature")
  valid_595768 = validateParameter(valid_595768, JString, required = false,
                                 default = nil)
  if valid_595768 != nil:
    section.add "X-Amz-Signature", valid_595768
  var valid_595769 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595769 = validateParameter(valid_595769, JString, required = false,
                                 default = nil)
  if valid_595769 != nil:
    section.add "X-Amz-Content-Sha256", valid_595769
  var valid_595770 = header.getOrDefault("X-Amz-Date")
  valid_595770 = validateParameter(valid_595770, JString, required = false,
                                 default = nil)
  if valid_595770 != nil:
    section.add "X-Amz-Date", valid_595770
  var valid_595771 = header.getOrDefault("X-Amz-Credential")
  valid_595771 = validateParameter(valid_595771, JString, required = false,
                                 default = nil)
  if valid_595771 != nil:
    section.add "X-Amz-Credential", valid_595771
  var valid_595772 = header.getOrDefault("X-Amz-Security-Token")
  valid_595772 = validateParameter(valid_595772, JString, required = false,
                                 default = nil)
  if valid_595772 != nil:
    section.add "X-Amz-Security-Token", valid_595772
  var valid_595773 = header.getOrDefault("X-Amz-Algorithm")
  valid_595773 = validateParameter(valid_595773, JString, required = false,
                                 default = nil)
  if valid_595773 != nil:
    section.add "X-Amz-Algorithm", valid_595773
  var valid_595774 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595774 = validateParameter(valid_595774, JString, required = false,
                                 default = nil)
  if valid_595774 != nil:
    section.add "X-Amz-SignedHeaders", valid_595774
  result.add "header", section
  ## parameters in `formData` object:
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  section = newJObject()
  var valid_595775 = formData.getOrDefault("TemplateURL")
  valid_595775 = validateParameter(valid_595775, JString, required = false,
                                 default = nil)
  if valid_595775 != nil:
    section.add "TemplateURL", valid_595775
  var valid_595776 = formData.getOrDefault("TemplateBody")
  valid_595776 = validateParameter(valid_595776, JString, required = false,
                                 default = nil)
  if valid_595776 != nil:
    section.add "TemplateBody", valid_595776
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595777: Call_PostValidateTemplate_595763; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_595777.validator(path, query, header, formData, body)
  let scheme = call_595777.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595777.url(scheme.get, call_595777.host, call_595777.base,
                         call_595777.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595777, url, valid)

proc call*(call_595778: Call_PostValidateTemplate_595763; TemplateURL: string = "";
          TemplateBody: string = ""; Action: string = "ValidateTemplate";
          Version: string = "2010-05-15"): Recallable =
  ## postValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   Version: string (required)
  var query_595779 = newJObject()
  var formData_595780 = newJObject()
  add(formData_595780, "TemplateURL", newJString(TemplateURL))
  add(formData_595780, "TemplateBody", newJString(TemplateBody))
  add(query_595779, "Action", newJString(Action))
  add(query_595779, "Version", newJString(Version))
  result = call_595778.call(nil, query_595779, nil, formData_595780, nil)

var postValidateTemplate* = Call_PostValidateTemplate_595763(
    name: "postValidateTemplate", meth: HttpMethod.HttpPost,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_PostValidateTemplate_595764, base: "/",
    url: url_PostValidateTemplate_595765, schemes: {Scheme.Https, Scheme.Http})
type
  Call_GetValidateTemplate_595746 = ref object of OpenApiRestCall_593389
proc url_GetValidateTemplate_595748(protocol: Scheme; host: string; base: string;
                                   route: string; path: JsonNode; query: JsonNode): Uri =
  result.scheme = $protocol
  result.hostname = host
  result.query = $queryString(query)
  if base ==
      "/" and
      route.startsWith "/":
    result.path = route
  else:
    result.path = base & route

proc validate_GetValidateTemplate_595747(path: JsonNode; query: JsonNode;
                                        header: JsonNode; formData: JsonNode;
                                        body: JsonNode): JsonNode =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  var section: JsonNode
  result = newJObject()
  section = newJObject()
  result.add "path", section
  ## parameters in `query` object:
  ##   TemplateBody: JString
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: JString (required)
  ##   TemplateURL: JString
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: JString (required)
  section = newJObject()
  var valid_595749 = query.getOrDefault("TemplateBody")
  valid_595749 = validateParameter(valid_595749, JString, required = false,
                                 default = nil)
  if valid_595749 != nil:
    section.add "TemplateBody", valid_595749
  assert query != nil, "query argument is necessary due to required `Action` field"
  var valid_595750 = query.getOrDefault("Action")
  valid_595750 = validateParameter(valid_595750, JString, required = true,
                                 default = newJString("ValidateTemplate"))
  if valid_595750 != nil:
    section.add "Action", valid_595750
  var valid_595751 = query.getOrDefault("TemplateURL")
  valid_595751 = validateParameter(valid_595751, JString, required = false,
                                 default = nil)
  if valid_595751 != nil:
    section.add "TemplateURL", valid_595751
  var valid_595752 = query.getOrDefault("Version")
  valid_595752 = validateParameter(valid_595752, JString, required = true,
                                 default = newJString("2010-05-15"))
  if valid_595752 != nil:
    section.add "Version", valid_595752
  result.add "query", section
  ## parameters in `header` object:
  ##   X-Amz-Signature: JString
  ##   X-Amz-Content-Sha256: JString
  ##   X-Amz-Date: JString
  ##   X-Amz-Credential: JString
  ##   X-Amz-Security-Token: JString
  ##   X-Amz-Algorithm: JString
  ##   X-Amz-SignedHeaders: JString
  section = newJObject()
  var valid_595753 = header.getOrDefault("X-Amz-Signature")
  valid_595753 = validateParameter(valid_595753, JString, required = false,
                                 default = nil)
  if valid_595753 != nil:
    section.add "X-Amz-Signature", valid_595753
  var valid_595754 = header.getOrDefault("X-Amz-Content-Sha256")
  valid_595754 = validateParameter(valid_595754, JString, required = false,
                                 default = nil)
  if valid_595754 != nil:
    section.add "X-Amz-Content-Sha256", valid_595754
  var valid_595755 = header.getOrDefault("X-Amz-Date")
  valid_595755 = validateParameter(valid_595755, JString, required = false,
                                 default = nil)
  if valid_595755 != nil:
    section.add "X-Amz-Date", valid_595755
  var valid_595756 = header.getOrDefault("X-Amz-Credential")
  valid_595756 = validateParameter(valid_595756, JString, required = false,
                                 default = nil)
  if valid_595756 != nil:
    section.add "X-Amz-Credential", valid_595756
  var valid_595757 = header.getOrDefault("X-Amz-Security-Token")
  valid_595757 = validateParameter(valid_595757, JString, required = false,
                                 default = nil)
  if valid_595757 != nil:
    section.add "X-Amz-Security-Token", valid_595757
  var valid_595758 = header.getOrDefault("X-Amz-Algorithm")
  valid_595758 = validateParameter(valid_595758, JString, required = false,
                                 default = nil)
  if valid_595758 != nil:
    section.add "X-Amz-Algorithm", valid_595758
  var valid_595759 = header.getOrDefault("X-Amz-SignedHeaders")
  valid_595759 = validateParameter(valid_595759, JString, required = false,
                                 default = nil)
  if valid_595759 != nil:
    section.add "X-Amz-SignedHeaders", valid_595759
  result.add "header", section
  section = newJObject()
  result.add "formData", section
  if body != nil:
    result.add "body", body

proc call*(call_595760: Call_GetValidateTemplate_595746; path: JsonNode;
          query: JsonNode; header: JsonNode; formData: JsonNode; body: JsonNode): Recallable =
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ## 
  let valid = call_595760.validator(path, query, header, formData, body)
  let scheme = call_595760.pickScheme
  if scheme.isNone:
    raise newException(IOError, "unable to find a supported scheme")
  let url = call_595760.url(scheme.get, call_595760.host, call_595760.base,
                         call_595760.route, valid.getOrDefault("path"),
                         valid.getOrDefault("query"))
  result = hook(call_595760, url, valid)

proc call*(call_595761: Call_GetValidateTemplate_595746; TemplateBody: string = "";
          Action: string = "ValidateTemplate"; TemplateURL: string = "";
          Version: string = "2010-05-15"): Recallable =
  ## getValidateTemplate
  ## Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
  ##   TemplateBody: string
  ##               : <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Action: string (required)
  ##   TemplateURL: string
  ##              : <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a 
  ## href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
  ##   Version: string (required)
  var query_595762 = newJObject()
  add(query_595762, "TemplateBody", newJString(TemplateBody))
  add(query_595762, "Action", newJString(Action))
  add(query_595762, "TemplateURL", newJString(TemplateURL))
  add(query_595762, "Version", newJString(Version))
  result = call_595761.call(nil, query_595762, nil, nil, nil)

var getValidateTemplate* = Call_GetValidateTemplate_595746(
    name: "getValidateTemplate", meth: HttpMethod.HttpGet,
    host: "cloudformation.amazonaws.com", route: "/#Action=ValidateTemplate",
    validator: validate_GetValidateTemplate_595747, base: "/",
    url: url_GetValidateTemplate_595748, schemes: {Scheme.Https, Scheme.Http})
export
  rest

proc sign(recall: var Recallable; query: JsonNode; algo: SigningAlgo = SHA256) =
  let
    date = makeDateTime()
    access = os.getEnv("AWS_ACCESS_KEY_ID", "")
    secret = os.getEnv("AWS_SECRET_ACCESS_KEY", "")
    region = os.getEnv("AWS_REGION", "")
  assert secret != "", "need secret key in env"
  assert access != "", "need access key in env"
  assert region != "", "need region in env"
  var
    normal: PathNormal
    url = normalizeUrl(recall.url, query, normalize = normal)
    scheme = parseEnum[Scheme](url.scheme)
  assert scheme in awsServers, "unknown scheme `" & $scheme & "`"
  assert region in awsServers[scheme], "unknown region `" & region & "`"
  url.hostname = awsServers[scheme][region]
  case awsServiceName.toLowerAscii
  of "s3":
    normal = PathNormal.S3
  else:
    normal = PathNormal.Default
  recall.headers["Host"] = url.hostname
  recall.headers["X-Amz-Date"] = date
  let
    algo = SHA256
    scope = credentialScope(region = region, service = awsServiceName, date = date)
    request = canonicalRequest(recall.meth, $url, query, recall.headers, recall.body,
                             normalize = normal, digest = algo)
    sts = stringToSign(request.hash(algo), scope, date = date, digest = algo)
    signature = calculateSignature(secret = secret, date = date, region = region,
                                 service = awsServiceName, sts, digest = algo)
  var auth = $algo & " "
  auth &= "Credential=" & access / scope & ", "
  auth &= "SignedHeaders=" & recall.headers.signedHeaders & ", "
  auth &= "Signature=" & signature
  recall.headers["Authorization"] = auth
  recall.headers.del "Host"
  recall.url = $url

method hook(call: OpenApiRestCall; url: Uri; input: JsonNode): Recallable {.base.} =
  let headers = massageHeaders(input.getOrDefault("header"))
  result = newRecallable(call, url, headers, input.getOrDefault("body").getStr)
  result.sign(input.getOrDefault("query"), SHA256)
